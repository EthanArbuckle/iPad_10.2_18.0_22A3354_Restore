uint64_t sub_1A5736480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  v15 = swift_allocObject();
  swift_retain();
  v16 = sub_1A575899C(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
    return swift_deallocUninitializedObject();
  *(_QWORD *)(v15 + 16) = v16;
  *(_QWORD *)(v15 + 24) = v17;
  result = v15 | 0x3000000000000000;
  *(_QWORD *)(v15 + 32) = v18;
  return result;
}

void sub_1A5736548(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  sub_1A574052C(a1, a2, a3, a4);
  if (!v4)
  {
    v10 = v8;
    v11 = v9;
    sub_1A575E4E8(a1, a2, a3);
    v13 = v12;
    v15 = v14;
    v16 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    v16[2] = v10;
    v16[3] = v11;
    v16[4] = v13;
    v16[5] = v15;
  }
}

unint64_t sub_1A57365E4()
{
  return 0x8000000000000000;
}

unint64_t sub_1A57365EC()
{
  return 0x8000000000000008;
}

unint64_t sub_1A57365F8()
{
  return 0x8000000000000070;
}

unint64_t sub_1A5736604()
{
  return 0x8000000000000078;
}

unint64_t sub_1A5736610()
{
  return 0x80000000000000C8;
}

unint64_t sub_1A573661C()
{
  return 0x80000000000000C0;
}

unint64_t sub_1A5736628()
{
  return 0x8000000000000048;
}

unint64_t sub_1A5736634()
{
  return 0x80000000000000E8;
}

unint64_t sub_1A5736640()
{
  return 0x8000000000000090;
}

void sub_1A573664C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t))
{
  uint64_t v9;

  OUTLINED_FUNCTION_6_54();
  OUTLINED_FUNCTION_34_19();
  v9 = OUTLINED_FUNCTION_35_15();
  a8(v9);
  OUTLINED_FUNCTION_17_35();
}

unint64_t sub_1A5736680()
{
  return 0x80000000000000B0;
}

unint64_t sub_1A573668C()
{
  return 0x8000000000000080;
}

unint64_t sub_1A5736698()
{
  return 0x80000000000000A8;
}

unint64_t sub_1A57366A4()
{
  return 0x80000000000000A0;
}

unint64_t sub_1A57366B0()
{
  return 0x80000000000000D0;
}

unint64_t sub_1A57366BC()
{
  return 0x8000000000000050;
}

unint64_t sub_1A57366C8()
{
  return 0x80000000000000E0;
}

unint64_t sub_1A57366D4()
{
  return 0x8000000000000098;
}

unint64_t sub_1A57366E0()
{
  return 0x8000000000000040;
}

unint64_t sub_1A57366EC()
{
  return 0x80000000000000D8;
}

unint64_t sub_1A57366F8()
{
  return 0x8000000000000010;
}

unint64_t sub_1A5736704()
{
  return 0x8000000000000088;
}

unint64_t sub_1A5736710()
{
  return 0x8000000000000018;
}

unint64_t sub_1A573671C()
{
  return 0x8000000000000020;
}

unint64_t sub_1A5736728()
{
  return 0x80000000000000B8;
}

unint64_t sub_1A5736734()
{
  return 0x8000000000000028;
}

unint64_t sub_1A5736740()
{
  return 0x8000000000000030;
}

unint64_t sub_1A573674C()
{
  return 0x80000000000000F0;
}

unint64_t sub_1A5736758()
{
  return 0x8000000000000068;
}

unint64_t sub_1A5736764()
{
  return 0x8000000000000038;
}

void sub_1A5736770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  unsigned int v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  int v21;
  char v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  _BYTE v100[48];

  OUTLINED_FUNCTION_4_57();
  OUTLINED_FUNCTION_14_34();
  if (!v6)
  {
    if (__OFADD__(v8, 1))
    {
      __break(1u);
    }
    else
    {
      if (v8 + 1 >= v7)
      {
        sub_1A5718F9C();
        v17 = (void *)OUTLINED_FUNCTION_21();
        *v18 = v7;
        v19 = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        v90 = v7;
        v92 = (uint64_t)v5;
        v88 = a4;
        v12 = *(_QWORD *)v9;
        v13 = *(_DWORD *)(v9 + 8);
        LODWORD(v95) = *(_DWORD *)(v9 + 16);
        HIDWORD(v95) = *(_DWORD *)(v9 + 12);
        HIDWORD(v93) = *(unsigned __int16 *)(v9 + 20);
        v14 = *(unsigned __int8 *)(v9 + 22);
        if (v8 + 2 >= v7)
        {
          sub_1A5718F9C();
          v17 = (void *)OUTLINED_FUNCTION_21();
          *v20 = v7;
          swift_retain();
          v97 = MEMORY[0x1E0DEE9D8];
          v21 = v95;
          LODWORD(v25) = HIDWORD(v95);
          v22 = v14;
          v23 = WORD2(v93);
        }
        else
        {
          v76 = a5;
          HIDWORD(v74) = *(_DWORD *)(v9 + 8);
          v72 = v8;
          OUTLINED_FUNCTION_87();
          sub_1A5752954(v9, v8 + 2, v7);
          v25 = v24;
          v69 = v8 + 2;
          v84 = v8 + 3;
          v97 = MEMORY[0x1E0DEE9D8];
          v26 = v95;
          HIDWORD(v86) = v14;
          LODWORD(v87) = HIDWORD(v93);
          v71 = __PAIR64__(v13, HIDWORD(v95));
          v67 = v12;
          HIDWORD(v65) = v14;
          while (1)
          {
            ByteBufferView.init(_:)(v25, v15, v16 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v100);
            OUTLINED_FUNCTION_39();
            v27 = sub_1A56E6FE8((uint64_t)v100);
            HIDWORD(v87) = v26;
            if (!v28)
              break;
            v78 = v88(v27);
            v30 = v29;
            OUTLINED_FUNCTION_40();
            swift_bridgeObjectRelease();
            v13 = v84;
            if (v84 >= v7)
            {
              sub_1A5718F9C();
              v17 = (void *)OUTLINED_FUNCTION_21();
              v12 = v67;
              *v61 = v7;
              OUTLINED_FUNCTION_69_5();
              BYTE4(v86) = BYTE4(v65);
              v97 = v62;
              OUTLINED_FUNCTION_10_37();
              OUTLINED_FUNCTION_9_2();
              goto LABEL_21;
            }
            OUTLINED_FUNCTION_59_9(v9);
            v31 = OUTLINED_FUNCTION_39();
            OUTLINED_FUNCTION_27_20(v31, v32, v33, v34, v35, v36, v37, v38, v63, v65, v67, v69, v71, v72, v74, v76, v78, v12, v30,
              v84,
              v86,
              v87,
              (uint64_t)v88,
              v90,
              v92,
              v93,
              v95,
              v97,
              v98);
            OUTLINED_FUNCTION_40();
            v39 = v99;
            if ((v99 & 0x8000000000000000) != 0
              || (OUTLINED_FUNCTION_59_9(v9),
                  v40 = OUTLINED_FUNCTION_39(),
                  OUTLINED_FUNCTION_27_20(v40, v41, v42, v43, v44, v45, v46, v47, v64, v66, v68, v70, v71, v73, v75, v77, v79, v81, v82,
                    v85,
                    v86,
                    v87,
                    v89,
                    v91,
                    v92,
                    v94,
                    v96,
                    v97,
                    v99),
                  OUTLINED_FUNCTION_40(),
                  (v98 & 0x8000000000000000) != 0))
            {
              sub_1A56E9774();
              v17 = (void *)OUTLINED_FUNCTION_21();
              *v55 = 0xD000000000000011;
              v55[1] = 0x80000001A5A0F840;
              OUTLINED_FUNCTION_15_35((uint64_t)v55, 0xD000000000000020);
              *(_QWORD *)(v56 + 32) = 167;
              swift_willThrow();
              swift_bridgeObjectRelease();
              v12 = v81;
              goto LABEL_20;
            }
            swift_release_n();
            v48 = v97;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1A569E4C8();
              v48 = v53;
            }
            v49 = v69;
            v50 = *(_QWORD *)(v48 + 16);
            v97 = v48;
            if (v50 >= *(_QWORD *)(v48 + 24) >> 1)
            {
              sub_1A569E4C8();
              v49 = v69;
              v97 = v54;
            }
            *(_QWORD *)(v97 + 16) = v50 + 1;
            v51 = (_QWORD *)(v97 + 32 * v50);
            v51[4] = v80;
            v51[5] = v83;
            v51[6] = v39;
            v51[7] = v98;
            OUTLINED_FUNCTION_39();
            sub_1A576B3AC(v9);
            OUTLINED_FUNCTION_40();
            v12 = *(_QWORD *)v9;
            v26 = *(_DWORD *)(v9 + 16);
            LODWORD(v71) = *(_DWORD *)(v9 + 12);
            HIDWORD(v71) = *(_DWORD *)(v9 + 8);
            HIDWORD(v86) = *(unsigned __int8 *)(v9 + 22);
            LODWORD(v87) = *(unsigned __int16 *)(v9 + 20);
            OUTLINED_FUNCTION_87();
            sub_1A5752954(v9, v49, v7);
            v25 = v52;
          }
          sub_1A56E9774();
          v17 = (void *)OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_1_84((uint64_t)v17, v57);
          OUTLINED_FUNCTION_15_35(v58, v59);
          OUTLINED_FUNCTION_11_20(v60, 107);
          OUTLINED_FUNCTION_40();
LABEL_20:
          LODWORD(v25) = v71;
          v13 = HIDWORD(v71);
LABEL_21:
          OUTLINED_FUNCTION_56_12();
          *(_QWORD *)v9 = v12;
          *(_DWORD *)(v9 + 8) = v13;
          *(_DWORD *)(v9 + 12) = v25;
          v23 = v87;
          v21 = HIDWORD(v87);
          *(_DWORD *)(v9 + 16) = HIDWORD(v87);
          *(_WORD *)(v9 + 20) = v87;
          v22 = BYTE4(v86);
          *(_BYTE *)(v9 + 22) = BYTE4(v86);
        }
        OUTLINED_FUNCTION_10_37();
        OUTLINED_FUNCTION_56_12();
        *(_QWORD *)v9 = v12;
        *(_DWORD *)(v9 + 8) = v13;
        *(_DWORD *)(v9 + 12) = v25;
        *(_DWORD *)(v9 + 16) = v21;
        *(_WORD *)(v9 + 20) = v23;
        *(_BYTE *)(v9 + 22) = v22;
        v5 = (_QWORD *)v92;
        v19 = v97;
      }
      OUTLINED_FUNCTION_10_37();
      OUTLINED_FUNCTION_68_5();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
      if (OUTLINED_FUNCTION_53_11())
      {

        OUTLINED_FUNCTION_67_9();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_52_10();
        OUTLINED_FUNCTION_14_34();
        *v5 = v19;
      }
      else
      {
        OUTLINED_FUNCTION_52_10();
        swift_bridgeObjectRelease();
      }
    }
  }
}

void sub_1A5736DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_15_40();
  OUTLINED_FUNCTION_38_13();
  if (!v1)
  {
    v9 = OUTLINED_FUNCTION_4_53();
    v13 = v11;
    v14 = v10;
    v15 = v9;
    OUTLINED_FUNCTION_9_40();
    OUTLINED_FUNCTION_30();
    v12 = sub_1A575A3D4(v8, v7, v6, v5, v4, v3, v2);
    *(_QWORD *)v0 = v15;
    *(_QWORD *)(v0 + 8) = v14;
    *(_QWORD *)(v0 + 16) = v13 & 0xFFFFFFFFFFFFFFLL;
    *(_QWORD *)(v0 + 24) = v12;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
    *(_QWORD *)(v0 + 80) = 0;
    *(_OWORD *)(v0 + 88) = xmmword_1A59AC070;
    *(_BYTE *)(v0 + 104) = 6;
  }
  OUTLINED_FUNCTION_2_71();
}

void sub_1A5736EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  OUTLINED_FUNCTION_15_40();
  OUTLINED_FUNCTION_38_13();
  if (!v1)
  {
    v2 = OUTLINED_FUNCTION_4_53();
    v10 = MailboxName.init(_:)(v2, v4, v3 & 0xFFFFFFFFFFFFFFLL);
    v9 = v5;
    OUTLINED_FUNCTION_9_40();
    v6 = OUTLINED_FUNCTION_4_53();
    *(_QWORD *)v0 = v10;
    *(_QWORD *)(v0 + 8) = v9;
    *(_QWORD *)(v0 + 16) = v6;
    *(_QWORD *)(v0 + 24) = v8;
    *(_QWORD *)(v0 + 32) = v7 & 0xFFFFFFFFFFFFFFLL;
    *(_OWORD *)(v0 + 40) = 0u;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_OWORD *)(v0 + 88) = 0u;
    *(_BYTE *)(v0 + 104) = 6;
  }
  OUTLINED_FUNCTION_2_71();
}

void sub_1A5736F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  int v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  unsigned int *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unsigned __int8 v39;
  uint64_t v40;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9510);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
  v16 = sub_1A5737D70(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&unk_1E4F01DE0, (uint64_t)sub_1A5738890, (uint64_t)sub_1A57388B0, (uint64_t (*)(uint64_t, _QWORD *, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A576F8C0);
  if (v7)
  {
    *(_QWORD *)(inited + 16) = 0;
    swift_release();
  }
  else
  {
    v36 = (uint64_t)&v36;
    *(_QWORD *)(inited + 32) = v16;
    v40 = inited;
    MEMORY[0x1E0C80A78](v16);
    sub_1A5752050();
    v17 = v40;
    v37 = 0;
    v38 = 0;
    v39 = 2;
    v18 = *(_QWORD *)(v40 + 16);
    if (v18)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v19 = (_DWORD *)(v17 + 36);
      while (1)
      {
        v20 = *(v19 - 1);
        v21 = v20 != 0;
        v22 = (v20 - 1);
        if (!v21)
          break;
        if (!*v19)
          goto LABEL_25;
        v23 = *v19;
        if (v22 > v23)
          goto LABEL_26;
        sub_1A570932C(v22 | (v23 << 32));
        v19 += 2;
        if (!--v18)
        {
          swift_bridgeObjectRelease_n();
          v24 = v37;
          v25 = v38;
          v26 = v39;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      v25 = 0;
      v24 = 0;
      v26 = 2;
LABEL_12:
      v27 = 0;
      v28 = (unsigned int *)(v24 + 36);
      v29 = -1;
      while (v26 == 1)
      {
        v30 = *(_QWORD *)(v24 + 16);
        if (v29 + 1 == v30)
          goto LABEL_22;
        if (++v29 >= v30)
          goto LABEL_27;
        v32 = *(v28 - 1);
        v31 = *v28;
        v28 += 2;
        v33 = v31 - v32;
        v34 = __OFADD__(v27, v33);
        v27 += v33;
        if (v34)
        {
          __break(1u);
          break;
        }
      }
      if (v26 == 2)
        goto LABEL_23;
      if (v24 < (int)v25)
        goto LABEL_28;
      __break(1u);
LABEL_22:
      if (v27 > 0)
        return;
LABEL_23:
      sub_1A54E3458(v24, v25, v26);
      sub_1A56E9774();
      swift_allocError();
      *v35 = 0xD000000000000016;
      v35[1] = 0x80000001A5A0FB30;
      v35[2] = 0xD000000000000020;
      v35[3] = 0x80000001A5A0F5E0;
      v35[4] = 103;
      swift_willThrow();
    }
  }
}

void sub_1A573725C()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  int v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned __int8 v36;
  uint64_t v37;

  OUTLINED_FUNCTION_33_18();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF08);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
  v2 = OUTLINED_FUNCTION_25_24();
  v10 = sub_1A5737D70(v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)sub_1A57385E0, (uint64_t)sub_1A5738600, (uint64_t (*)(uint64_t, _QWORD *, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A576F8C0);
  if (v0)
  {
    *(_QWORD *)(inited + 16) = 0;
    swift_release();
  }
  else
  {
    v33 = (uint64_t)&v33;
    *(_QWORD *)(inited + 32) = v10;
    v37 = inited;
    MEMORY[0x1E0C80A78](v10);
    sub_1A5751F58();
    v11 = v37;
    v34 = 0;
    v35 = 0;
    v36 = 2;
    v12 = *(_QWORD *)(v37 + 16);
    if (v12)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v13 = (_DWORD *)(v11 + 36);
      while (1)
      {
        v14 = *(v13 - 1);
        v15 = v14 != 0;
        v16 = (v14 - 1);
        if (!v15)
          break;
        if (!*v13)
          goto LABEL_25;
        v17 = *v13;
        if (v16 > v17)
          goto LABEL_26;
        sub_1A570932C(v16 | (v17 << 32));
        v13 += 2;
        if (!--v12)
        {
          swift_bridgeObjectRelease_n();
          v18 = v34;
          v19 = v35;
          v20 = v36;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      v19 = 0;
      v18 = 0;
      v20 = 2;
LABEL_12:
      v21 = 0;
      v22 = (unsigned int *)(v18 + 36);
      v23 = -1;
      while (v20 == 1)
      {
        v24 = *(_QWORD *)(v18 + 16);
        if (v23 + 1 == v24)
          goto LABEL_22;
        if (++v23 >= v24)
          goto LABEL_27;
        v26 = *(v22 - 1);
        v25 = *v22;
        v22 += 2;
        v27 = v25 - v26;
        v28 = __OFADD__(v21, v27);
        v21 += v27;
        if (v28)
        {
          __break(1u);
          break;
        }
      }
      if (v20 == 2)
        goto LABEL_23;
      if (v18 < (int)v19)
        goto LABEL_28;
      __break(1u);
LABEL_22:
      if (v21 > 0)
        return;
LABEL_23:
      sub_1A54E3458(v18, v19, v20);
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_66_8();
      *v29 = v30;
      v29[1] = v31;
      OUTLINED_FUNCTION_15_35((uint64_t)v29, v30 + 10);
      OUTLINED_FUNCTION_11_20(v32, 103);
    }
  }
}

uint64_t sub_1A57374F8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  __int16 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t *v12;

  v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v12 = a3;
    }
    else
    {
      v11 = result;
      OUTLINED_FUNCTION_63_8();
      OUTLINED_FUNCTION_1_2();
      sub_1A576B64C((void **)v11, v9, a3, 0, 0x2AuLL, 0xE100000000000000, 0);
      if (!v3)
      {
        OUTLINED_FUNCTION_2_4();
        return 0xFFFFFFFFLL;
      }
      swift_release();
      *(_QWORD *)v11 = v4;
      *(_QWORD *)(v11 + 8) = v8;
      *(_DWORD *)(v11 + 16) = v5;
      *(_WORD *)(v11 + 20) = v6;
      *(_BYTE *)(v11 + 22) = v7;
    }
    OUTLINED_FUNCTION_80_4();
    return 0xFFFFFFFFLL;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A57375CC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57333D0(a1, a2, a3);
}

void sub_1A57375E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v12;
  unsigned int v13;
  uint64_t v14;
  _QWORD *v15;
  unsigned int v16;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a7;
  swift_retain();
  sub_1A576F944((uint64_t)sub_1A5738A40, 0, (uint64_t)sub_1A57388D0, (uint64_t)v12);
  v16 = v13;
  swift_release();
  if (!v7)
  {
    swift_retain();
    sub_1A575EA3C();
    if ((v14 & 0x100000000) == 0 && v16 > v14)
    {
      sub_1A594C720();
      sub_1A594B5F8();
      sub_1A594C924();
      sub_1A594B5F8();
      sub_1A594C924();
      sub_1A56E9774();
      swift_allocError();
      *v15 = 0;
      v15[1] = 0xE000000000000000;
      v15[2] = 0xD000000000000020;
      v15[3] = 0x80000001A5A0F5E0;
      v15[4] = 51;
      swift_willThrow();
    }
  }
}

void sub_1A5737820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v12;
  unsigned int v13;
  uint64_t v14;
  _QWORD *v15;
  unsigned int v16;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a7;
  swift_retain();
  sub_1A576F944((uint64_t)sub_1A5738620, 0, (uint64_t)sub_1A5738668, (uint64_t)v12);
  v16 = v13;
  swift_release();
  if (!v7)
  {
    swift_retain();
    sub_1A575F1C4();
    if ((v14 & 0x100000000) == 0 && v16 > v14)
    {
      sub_1A594C720();
      sub_1A594B5F8();
      sub_1A594C924();
      sub_1A594B5F8();
      sub_1A594C924();
      sub_1A56E9774();
      swift_allocError();
      *v15 = 0;
      v15[1] = 0xE000000000000000;
      v15[2] = 0xD000000000000020;
      v15[3] = 0x80000001A5A0F5E0;
      v15[4] = 51;
      swift_willThrow();
    }
  }
}

void sub_1A5737A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v12;
  unsigned int v13;
  uint64_t v14;
  _QWORD *v15;
  unsigned int v16;

  v12 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a7;
  OUTLINED_FUNCTION_30();
  sub_1A576F944((uint64_t)sub_1A5738A40, 0, (uint64_t)sub_1A57386E0, (uint64_t)v12);
  v16 = v13;
  swift_release();
  if (!v7)
  {
    OUTLINED_FUNCTION_30();
    sub_1A575F874();
    if ((v14 & 0x100000000) == 0 && v16 > v14)
    {
      sub_1A594C720();
      sub_1A594B5F8();
      OUTLINED_FUNCTION_39_18();
      sub_1A594B5F8();
      OUTLINED_FUNCTION_39_18();
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v15 = 0;
      v15[1] = 0xE000000000000000;
      v15[2] = 0xD000000000000020;
      v15[3] = 0x80000001A5A0F5E0;
      OUTLINED_FUNCTION_11_20((uint64_t)v15, 51);
    }
  }
}

unint64_t sub_1A5737C5C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t result;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;

  result = sub_1A5761038(a1, a2, a3, 0);
  if (!v3)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      swift_allocError();
      *v5 = 0xD000000000000011;
      v6 = 0x80000001A5A0F840;
      v7 = 167;
    }
    else
    {
      if (result - 0x100000000 >= 0xFFFFFFFF00000001)
      {
        result |= result << 32;
        return result;
      }
      sub_1A56E9774();
      swift_allocError();
      *v5 = 0xD00000000000001DLL;
      v6 = 0x80000001A5A0FB10;
      v7 = 76;
    }
    v5[1] = v6;
    v5[2] = 0xD000000000000020;
    v5[3] = 0x80000001A5A0F5E0;
    v5[4] = v7;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1A5737D4C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;

  v7 = sub_1A57334D0(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void))sub_1A5732B0C);
  return v7 | ((unint64_t)v7 << 32);
}

uint64_t sub_1A5737D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, _QWORD *, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))
{
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v17 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v24 = a4;
  v25 = a5;
  v26 = a6;
  v27 = a7;
  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_66_8();
  v20 = a11(a9, v17, a10, v23, a1, a2, a3, 0xD000000000000020, v19, v18);
  swift_release();
  return v20;
}

uint64_t sub_1A5737E58(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char v21;
  __int16 v22;
  int v23;

  v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v11 = a3;
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v20 = v11;
      OUTLINED_FUNCTION_17_0();
    }
    else
    {
      v16 = result;
      v17 = *(_QWORD *)result;
      v18 = *(_QWORD *)(result + 8);
      v22 = *(_WORD *)(result + 20);
      v23 = *(_DWORD *)(result + 16);
      v21 = *(_BYTE *)(result + 22);
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_30();
      v19 = a8(v16, v9, v11, a4, a5, a6, a7);
      if (!v8)
      {
        v11 = v19;
        OUTLINED_FUNCTION_23();
        swift_release();
        return v11;
      }
      OUTLINED_FUNCTION_16_32();
      *(_QWORD *)v16 = v17;
      *(_QWORD *)(v16 + 8) = v18;
      *(_DWORD *)(v16 + 16) = v23;
      *(_WORD *)(v16 + 20) = v22;
      *(_BYTE *)(v16 + 22) = v21;
    }
    swift_willThrow();
    OUTLINED_FUNCTION_23();
    return v11;
  }
  __break(1u);
  return result;
}

void sub_1A5737F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, _QWORD *, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_6_54();
  OUTLINED_FUNCTION_62_8();
  sub_1A5751898();
  if (!v11)
  {
    v13 = OUTLINED_FUNCTION_35_15();
    sub_1A5737D70(v13, v14, v15, v16, v17, v18, v19, a8, a9, a10, a11);
  }
}

uint64_t sub_1A5738000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A573801C(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void))sub_1A5736F70);
}

uint64_t sub_1A573801C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  result = a8();
  if (v8)
    return v10 & 0xFFFFFFFFFFLL;
  return result;
}

uint64_t sub_1A5738040()
{
  sub_1A5751898();
  return 0;
}

uint64_t sub_1A5738078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = sub_1A54FE060(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 16 * v4);
  swift_retain();
  return v6;
}

uint64_t sub_1A57380CC()
{
  OUTLINED_FUNCTION_64_7();
  return swift_deallocObject();
}

void sub_1A57380EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573664C(v0, v1, v2, v3, v4, v5, v6, (void (*)(uint64_t))sub_1A57598C4);
}

void sub_1A573810C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573526C(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A5738124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5735574(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573813C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573664C(v0, v1, v2, v3, v4, v5, v6, (void (*)(uint64_t))sub_1A57599F4);
}

void sub_1A573815C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A57350B4(v0, v1, v2);
}

uint64_t sub_1A5738174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A573599C(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573818C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A5734FB0(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A57381A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5736480(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A57381BC()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A5735644();
}

void sub_1A57381D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A5735180(v0, v1, v2);
}

void sub_1A57381EC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A5735738(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A5738204()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A573580C(v0, v1, v2);
}

void sub_1A573821C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A57358D0(v0, v1, v2);
}

void sub_1A5738234()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A57363EC();
}

uint64_t sub_1A573824C()
{
  OUTLINED_FUNCTION_64_7();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5738274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A5732FE8(a1, a2, a3, *(_QWORD *)(v3 + 48));
}

void sub_1A5738294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  OUTLINED_FUNCTION_4_52();
  sub_1A5736548(v0, v1, v2, v3);
}

uint64_t sub_1A57382AC()
{
  OUTLINED_FUNCTION_64_7();
  return swift_deallocObject();
}

uint64_t sub_1A57382CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A57382F8(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  uint64_t v4;
  int v6;

  v6 = sub_1A57375CC(a1, a2, a3);
  if (!v4)
    *a4 = v6;
  OUTLINED_FUNCTION_40_16();
}

uint64_t sub_1A573831C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5738340()
{
  return OUTLINED_FUNCTION_47_10();
}

uint64_t sub_1A573834C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 40) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 144);
  if (v1 < 0xFFFFFFFE00000000 || (v2 & 0xFFFFFFFFFFFFFE00) != 0x200)
    sub_1A5687A80(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v1, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), v2, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224),
      *(_OWORD *)(v0 + 232),
      *(_QWORD *)(v0 + 240),
      *(_QWORD *)(v0 + 248));
  return swift_deallocObject();
}

uint64_t sub_1A5738410()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5738444()
{
  uint64_t v0;
  unint64_t v1;

  if (*(unsigned __int8 *)(v0 + 28) != 255)
  {
    v1 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 16), v1, SBYTE4(v1));
  }
  return swift_deallocObject();
}

uint64_t sub_1A5738484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A573801C(v0, v1, v2, v3, v4, v5, v6, (uint64_t (*)(void))sub_1A573725C);
}

uint64_t sub_1A57384A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A5738040();
  if (!v1)
  {
    *(_QWORD *)a1 = result;
    *(_DWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 12) = BYTE4(v4);
  }
  return result;
}

uint64_t sub_1A57384D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *(_QWORD *)a1 = result;
    *(_DWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 12) = BYTE4(v5);
  }
  return result;
}

void sub_1A5738510(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, _QWORD *, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v14;

  sub_1A5737F8C(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12);
  if (!v12)
    *a9 = v14;
}

void sub_1A5738550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5738510(v0, v1, v2, v3, v4, v5, v6, (uint64_t)&unk_1E4F01930, v7, (uint64_t)sub_1A57385E0, (uint64_t)sub_1A5738600, (uint64_t (*)(uint64_t, _QWORD *, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A576F8C0);
}

void sub_1A5738598(uint64_t (*a1)(void)@<X7>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1();
  if (!v2)
    *a2 = v4;
  OUTLINED_FUNCTION_40_16();
}

void sub_1A57385BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v9;
  uint64_t v11;

  v11 = sub_1A5737E58(a1, a2, a3, a4, a5, a6, a7, a8);
  if (!v9)
    *a9 = v11;
  OUTLINED_FUNCTION_40_16();
}

void sub_1A57385E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A57385BC(v0, v1, v2, v3, v4, v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5737820, v7);
}

void sub_1A5738600()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_4_52();
  sub_1A5738598((uint64_t (*)(void))sub_1A5737D4C, v0);
}

void sub_1A5738620(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  uint64_t v4;
  int v6;

  v6 = sub_1A57374F8(a1, a2, a3);
  if (!v4)
    *a4 = v6;
  OUTLINED_FUNCTION_40_16();
}

void sub_1A5738644(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _DWORD *a8@<X8>)
{
  uint64_t v8;
  int v10;

  v10 = sub_1A57334B4(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
    *a8 = v10;
  OUTLINED_FUNCTION_40_16();
}

void sub_1A5738668()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5738644(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A5738680()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A5735B58(v0, v1, v2);
}

void sub_1A5738698()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A5735C74(v0, v1, v2);
}

uint64_t sub_1A57386B0()
{
  return OUTLINED_FUNCTION_47_10();
}

void sub_1A57386BC(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _DWORD *a8@<X8>)
{
  uint64_t v8;
  int v10;

  v10 = sub_1A5733498(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
    *a8 = v10;
  OUTLINED_FUNCTION_40_16();
}

void sub_1A57386E0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A57386BC(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A57386F8()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A5741D40();
}

void sub_1A5738710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A57354F4(v0, v1, v2, v3, v4, v5, v6, v7);
}

double sub_1A5738728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5733C58(v0, v1, v2, v3);
}

_QWORD *sub_1A5738740@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;

  return sub_1A5733F5C(a1, a2, *(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))(v3 + 16), a3);
}

double sub_1A5738758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5733CBC(v0, v1, v2, v3);
}

double sub_1A5738770()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5733D04(v0);
}

double sub_1A5738788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5733DB0(v0, v1, v2, v3, v4, v5, v6, v7);
}

double sub_1A57387A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5733E5C(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A57387B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A5733FB0(v0, v1, v2, v3, v4, v5, v6, (void (*)(__n128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5751A04);
}

void sub_1A57387D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A5733FB0(v0, v1, v2, v3, v4, v5, v6, (void (*)(__n128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5751A20);
}

double sub_1A57387F8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5733F00(v0);
}

double sub_1A5738810()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5733BC0(v0);
}

void sub_1A5738828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A5733FB0(v0, v1, v2, v3, v4, v5, v6, (void (*)(__n128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5751A3C);
}

void sub_1A5738848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5738510(v0, v1, v2, v3, v4, v5, v6, (uint64_t)&unk_1E4F01DE0, v7, (uint64_t)sub_1A5738890, (uint64_t)sub_1A57388B0, (uint64_t (*)(uint64_t, _QWORD *, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A576F8C0);
}

void sub_1A5738890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A57385BC(v0, v1, v2, v3, v4, v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A57375E0, v7);
}

void sub_1A57388B0()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_4_52();
  sub_1A5738598((uint64_t (*)(void))sub_1A5737C5C, v0);
}

void sub_1A57388D0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A57382F8(v0, v1, v2, v3);
}

uint64_t sub_1A57388E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A573801C(v0, v1, v2, v3, v4, v5, v6, (uint64_t (*)(void))sub_1A5736F70);
}

void sub_1A5738908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A574FFEC(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1A5738920()
{
  return sub_1A5738040();
}

_QWORD *sub_1A5738934@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  return sub_1A5738740(a1, a2, a3);
}

void sub_1A5738A40(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  sub_1A5738620(a1, a2, a3, a4);
}

_QWORD *OUTLINED_FUNCTION_4_58(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result[2] = v4;
  result[3] = v1;
  result[4] = v3;
  result[5] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_39()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_13_37()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_14_34()
{
  sub_1A5751898();
}

uint64_t OUTLINED_FUNCTION_15_40()
{
  return 1414485329;
}

uint64_t OUTLINED_FUNCTION_16_32()
{
  return swift_release();
}

void OUTLINED_FUNCTION_19_31()
{
  sub_1A5751898();
}

uint64_t OUTLINED_FUNCTION_21_32()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_22_32()
{
  return sub_1A594B5F8();
}

_QWORD *OUTLINED_FUNCTION_23_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *(*v7)(uint64_t *__return_ptr, uint64_t, uint64_t *);
  uint64_t v9;
  va_list va;
  uint64_t v11;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  va_arg(va1, _QWORD);
  va_arg(va1, _QWORD);
  v9 = v6;
  v11 = v4;
  return v7((uint64_t *)va1, v5, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_25_24()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_27_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unint64_t a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1A576AF5C(v31, v29, v30, 1, &a29);
}

uint64_t OUTLINED_FUNCTION_28_20()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  char v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = v5;
  *(_DWORD *)(v2 + 16) = v4;
  *(_WORD *)(v2 + 20) = v1;
  *(_BYTE *)(v2 + 22) = v3;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_29_20()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  __int16 v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = v5;
  *(_DWORD *)(v2 + 16) = v4;
  *(_WORD *)(v2 + 20) = v3;
  *(_BYTE *)(v2 + 22) = v1;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_34_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t *);

  a14 = v17;
  a15 = v16;
  return v18(v15, &a14);
}

uint64_t OUTLINED_FUNCTION_36_17(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  return ByteBufferView.init(_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_37_19(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  return ByteBufferView.init(_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)va);
}

void OUTLINED_FUNCTION_38_13()
{
  sub_1A5751898();
}

uint64_t OUTLINED_FUNCTION_39_18()
{
  return sub_1A594C924();
}

uint64_t OUTLINED_FUNCTION_41_12()
{
  return sub_1A594C720();
}

uint64_t OUTLINED_FUNCTION_42_11@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = (v2 - 32) | 0x8000000000000000;
  *(_QWORD *)(a1 + 32) = a2;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_47_10()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_48_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A5738078(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_49_8()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_52_10()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_53_11()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_55_11(unint64_t a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>, __n128 a4@<Q2>, __n128 a5@<Q3>, __n128 a6@<Q4>, __n128 a7@<Q5>)
{
  unsigned __int8 v7;
  __n128 *v8;

  *v8 = a2;
  v8[1] = a3;
  v8[2] = a4;
  v8[3] = a5;
  v8[4] = a6;
  v8[5] = a7;
  v8[6].n128_u64[0] = a1;
  v8[6].n128_u8[8] = v7;
}

uint64_t OUTLINED_FUNCTION_56_12()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_57_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A5738078(v0, v2, v1);
}

void OUTLINED_FUNCTION_59_9(uint64_t a1)
{
  sub_1A576B3AC(a1);
}

void OUTLINED_FUNCTION_60_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A5752938(v1, v2, v0);
}

void OUTLINED_FUNCTION_61_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A5752938(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_64_7()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_67_9()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_68_5()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = v0;
  return v0;
}

void OUTLINED_FUNCTION_70_6(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
}

uint64_t OUTLINED_FUNCTION_72_5()
{
  uint64_t v0;

  return sub_1A55113D8(v0);
}

uint64_t OUTLINED_FUNCTION_73_4()
{
  uint64_t v0;

  return sub_1A55113D8(v0);
}

uint64_t OUTLINED_FUNCTION_74_2()
{
  uint64_t v0;

  sub_1A55113D8(v0);
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_76_7()
{
  return sub_1A594B4B4();
}

uint64_t OUTLINED_FUNCTION_77_6()
{
  return sub_1A594B4B4();
}

uint64_t OUTLINED_FUNCTION_80_4()
{
  return swift_willThrow();
}

void sub_1A5738ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[6];
  _QWORD v22[4];
  uint64_t v23;

  swift_retain();
  OUTLINED_FUNCTION_12_40();
  sub_1A575E4CC();
  if (!v7)
  {
    v22[2] = v15;
    v22[3] = v16;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF88);
    v17 = OUTLINED_FUNCTION_20_1();
    *(_OWORD *)(v17 + 16) = xmmword_1A59ABD10;
    OUTLINED_FUNCTION_12_40();
    v18 = sub_1A5739098();
    v22[1] = v22;
    *(_QWORD *)(v17 + 32) = v18;
    v23 = v17;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = a4;
    v21[3] = a5;
    v21[4] = a6;
    v21[5] = a7;
    sub_1A5751E08(a1, a2, a3, (uint64_t)sub_1A573E00C, (uint64_t)v21, (uint64_t)&v23);
    v19 = v23;
    v20 = *(_QWORD *)(v23 + 16);
    if (v20)
    {
      if (((*(_QWORD *)(v23 + 32) >> 59) & 0x1E | (*(_QWORD *)(v23 + 32) >> 2) & 1) == 0x18)
      {
        if (v20 == 1)
        {
          swift_retain();
LABEL_10:
          swift_bridgeObjectRelease();
          return;
        }
      }
      else if (v20 == 1)
      {
        sub_1A568079C(*(_QWORD *)(v23 + 32));
        goto LABEL_10;
      }
      *(_QWORD *)(OUTLINED_FUNCTION_20_1() + 16) = v19;
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1A5739098()
{
  uint64_t v0;
  uint64_t inited;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  OUTLINED_FUNCTION_4_59();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59AC2B0;
  v2 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v2);
  v3 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v3 + 16) = sub_1A573D9B8;
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(inited + 32) = sub_1A573D9D0;
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 48) = sub_1A573C5C8;
  *(_QWORD *)(inited + 56) = 0;
  v4 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v4);
  v5 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v5 + 16) = sub_1A573D9E4;
  *(_QWORD *)(v5 + 24) = v0;
  *(_QWORD *)(inited + 64) = sub_1A573D9D0;
  *(_QWORD *)(inited + 72) = v5;
  v6 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v6);
  v7 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v7 + 16) = sub_1A573D9FC;
  *(_QWORD *)(v7 + 24) = v0;
  *(_QWORD *)(inited + 80) = sub_1A573D9D0;
  *(_QWORD *)(inited + 88) = v7;
  v8 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v8);
  v9 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v9 + 16) = sub_1A573DA14;
  *(_QWORD *)(v9 + 24) = v0;
  *(_QWORD *)(inited + 96) = sub_1A573D9D0;
  *(_QWORD *)(inited + 104) = v9;
  v10 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v10);
  v11 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v11 + 16) = sub_1A573DA2C;
  *(_QWORD *)(v11 + 24) = v0;
  *(_QWORD *)(inited + 112) = sub_1A573D9D0;
  *(_QWORD *)(inited + 120) = v11;
  v12 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v12);
  v13 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v13 + 16) = sub_1A573DA5C;
  *(_QWORD *)(v13 + 24) = v0;
  *(_QWORD *)(inited + 128) = sub_1A573D9D0;
  *(_QWORD *)(inited + 136) = v13;
  v14 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v14);
  v15 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v15 + 16) = sub_1A573DA74;
  *(_QWORD *)(v15 + 24) = v0;
  *(_QWORD *)(inited + 144) = sub_1A573D9D0;
  *(_QWORD *)(inited + 152) = v15;
  v16 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v16);
  v17 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v17 + 16) = sub_1A573DA8C;
  *(_QWORD *)(v17 + 24) = v0;
  *(_QWORD *)(inited + 160) = sub_1A573D9D0;
  *(_QWORD *)(inited + 168) = v17;
  v18 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v18);
  v19 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v19 + 16) = sub_1A573DAA4;
  *(_QWORD *)(v19 + 24) = v0;
  *(_QWORD *)(inited + 176) = sub_1A573D9D0;
  *(_QWORD *)(inited + 184) = v19;
  v20 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v20);
  v21 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v21 + 16) = sub_1A573DABC;
  *(_QWORD *)(v21 + 24) = v0;
  *(_QWORD *)(inited + 192) = sub_1A573D9D0;
  *(_QWORD *)(inited + 200) = v21;
  v22 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v22);
  v23 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v23 + 16) = sub_1A573DAD4;
  *(_QWORD *)(v23 + 24) = v0;
  *(_QWORD *)(inited + 208) = sub_1A573D9D0;
  *(_QWORD *)(inited + 216) = v23;
  v24 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v24);
  v25 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v25 + 16) = sub_1A573DAEC;
  *(_QWORD *)(v25 + 24) = v0;
  *(_QWORD *)(inited + 224) = sub_1A573D9D0;
  *(_QWORD *)(inited + 232) = v25;
  v26 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v26);
  v27 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v27 + 16) = sub_1A573DB04;
  *(_QWORD *)(v27 + 24) = v0;
  *(_QWORD *)(inited + 240) = sub_1A573D9D0;
  *(_QWORD *)(inited + 248) = v27;
  v28 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v28);
  v29 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v29 + 16) = sub_1A573DB1C;
  *(_QWORD *)(v29 + 24) = v0;
  *(_QWORD *)(inited + 256) = sub_1A573D9D0;
  *(_QWORD *)(inited + 264) = v29;
  v30 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v30);
  v31 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v31 + 16) = sub_1A573DB34;
  *(_QWORD *)(v31 + 24) = v0;
  *(_QWORD *)(inited + 272) = sub_1A573D9D0;
  *(_QWORD *)(inited + 280) = v31;
  v32 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v32);
  v33 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v33 + 16) = sub_1A573DB4C;
  *(_QWORD *)(v33 + 24) = v0;
  *(_QWORD *)(inited + 288) = sub_1A573D9D0;
  *(_QWORD *)(inited + 296) = v33;
  v34 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v34);
  v35 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v35 + 16) = sub_1A573DB64;
  *(_QWORD *)(v35 + 24) = v0;
  *(_QWORD *)(inited + 304) = sub_1A573D9D0;
  *(_QWORD *)(inited + 312) = v35;
  v36 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v36);
  v37 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v37 + 16) = sub_1A573DB7C;
  *(_QWORD *)(v37 + 24) = v0;
  *(_QWORD *)(inited + 320) = sub_1A573D9D0;
  *(_QWORD *)(inited + 328) = v37;
  v38 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v38);
  v39 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v39 + 16) = sub_1A573DB94;
  *(_QWORD *)(v39 + 24) = v0;
  *(_QWORD *)(inited + 336) = sub_1A573D9D0;
  *(_QWORD *)(inited + 344) = v39;
  v40 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v40);
  v41 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v41 + 16) = sub_1A573DBAC;
  *(_QWORD *)(v41 + 24) = v0;
  *(_QWORD *)(inited + 352) = sub_1A573D9D0;
  *(_QWORD *)(inited + 360) = v41;
  v42 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v42);
  v43 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v43 + 16) = sub_1A573DBC4;
  *(_QWORD *)(v43 + 24) = v0;
  *(_QWORD *)(inited + 368) = sub_1A573D9D0;
  *(_QWORD *)(inited + 376) = v43;
  v44 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v44);
  v45 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v45 + 16) = sub_1A573DBDC;
  *(_QWORD *)(v45 + 24) = v0;
  *(_QWORD *)(inited + 384) = sub_1A573D9D0;
  *(_QWORD *)(inited + 392) = v45;
  v46 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v46);
  v47 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v47 + 16) = sub_1A573DBF4;
  *(_QWORD *)(v47 + 24) = v0;
  *(_QWORD *)(inited + 400) = sub_1A573D9D0;
  *(_QWORD *)(inited + 408) = v47;
  v48 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v48);
  v49 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v49 + 16) = sub_1A573DC0C;
  *(_QWORD *)(v49 + 24) = v0;
  *(_QWORD *)(inited + 416) = sub_1A573D9D0;
  *(_QWORD *)(inited + 424) = v49;
  v50 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v50);
  v51 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v51 + 16) = sub_1A573DC24;
  *(_QWORD *)(v51 + 24) = v0;
  *(_QWORD *)(inited + 432) = sub_1A573D9D0;
  *(_QWORD *)(inited + 440) = v51;
  v52 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v52);
  v53 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v53 + 16) = sub_1A573DC3C;
  *(_QWORD *)(v53 + 24) = v0;
  *(_QWORD *)(inited + 448) = sub_1A573D9D0;
  *(_QWORD *)(inited + 456) = v53;
  v54 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v54);
  v55 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v55 + 16) = sub_1A573DC54;
  *(_QWORD *)(v55 + 24) = v0;
  *(_QWORD *)(inited + 464) = sub_1A573D9D0;
  *(_QWORD *)(inited + 472) = v55;
  v56 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v56);
  v57 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v57 + 16) = sub_1A573DC6C;
  *(_QWORD *)(v57 + 24) = v0;
  *(_QWORD *)(inited + 480) = sub_1A573D9D0;
  *(_QWORD *)(inited + 488) = v57;
  v58 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v58);
  v59 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v59 + 16) = sub_1A573DC84;
  *(_QWORD *)(v59 + 24) = v0;
  *(_QWORD *)(inited + 496) = sub_1A573D9D0;
  *(_QWORD *)(inited + 504) = v59;
  swift_retain_n();
  v60 = OUTLINED_FUNCTION_5_60();
  v66 = sub_1A5770694(v60, v61, v62, v63, v64, v65, 338);
  OUTLINED_FUNCTION_15_41();
  sub_1A5774244();
  return v66;
}

double sub_1A5739814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_16_31();
  v6 = v0;
  v1 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  v2 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v2 + 16) = 0;
  *(_DWORD *)(v2 + 24) = 0;
  v3 = OUTLINED_FUNCTION_20_1();
  *(_DWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 20) = 1;
  swift_retain();
  v4 = OUTLINED_FUNCTION_14_35();
  sub_1A575A3F0(v4);
  if (!v10)
  {
    result = *(double *)&v7;
    *(_OWORD *)v6 = v7;
    *(_OWORD *)(v6 + 16) = v8;
    *(_BYTE *)(v6 + 32) = v9;
  }
  return result;
}

void sub_1A57398FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1A5751898();
  if (!v4)
  {
    sub_1A573FF70(a1, a2, a3);
    v10 = v9;
    v12 = v11;
    swift_beginAccess();
    *(_QWORD *)(a4 + 16) = v10;
    *(_QWORD *)(a4 + 24) = v12;
    swift_bridgeObjectRelease();
    sub_1A5751898();
  }
}

void sub_1A5739A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  int v22;

  sub_1A5751898();
  if (!v8)
  {
    v17 = sub_1A573EE0C(a1, a2, a3, a5, a6, a7, a8);
    v20 = MailboxName.init(_:)(v17, v19, v18 & 0xFFFFFFFFFFFFFFLL);
    v22 = v21;
    swift_beginAccess();
    *(_QWORD *)(a4 + 16) = v20;
    *(_DWORD *)(a4 + 24) = v22;
    swift_bridgeObjectRelease();
  }
}

void sub_1A5739B08(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v9;

  sub_1A5751898();
  if (!v4)
  {
    v9 = sub_1A573E438(a1, a2, a3);
    swift_beginAccess();
    *(_DWORD *)(a4 + 16) = v9;
    *(_BYTE *)(a4 + 20) = 0;
  }
}

_QWORD *sub_1A5739BF4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _BYTE v11[16];
  uint64_t (*v12)();
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t (*v21)();
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];
  uint64_t (*v30)();
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v33 = a4;
  v34 = a5;
  v35 = a6;
  v36 = a7;
  v37 = a8;
  v30 = sub_1A573D940;
  v31 = &v32;
  v24 = a9;
  v25 = a5;
  v26 = a6;
  v27 = a7;
  v28 = a8;
  v21 = sub_1A573D95C;
  v22 = &v23;
  v15 = a10;
  v16 = a5;
  v17 = a6;
  v18 = a7;
  v19 = a8;
  v12 = sub_1A573D978;
  v13 = &v14;
  return sub_1A573EF20(a2, sub_1A566E1F8, v29, sub_1A573E170, v20, sub_1A573E170, v11, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 79);
}

void sub_1A5739CCC(uint64_t a1@<X3>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;

  OUTLINED_FUNCTION_19_32();
  sub_1A5751898();
  if (!v4)
  {
    OUTLINED_FUNCTION_3_62(v6, v7, v8, v9, v10, v11, v12, v13, a3, a4);
    OUTLINED_FUNCTION_7_41();
    sub_1A575DEE4();
    v41 = v14;
    if ((v14 & 1) != 0)
    {
      v22 = (uint64_t *)(a1 + 16);
      swift_beginAccess();
      v23 = *(_QWORD *)(a1 + 24);
      if (v23)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        v27 = *v22;
LABEL_7:
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_19_32();
        sub_1A5751898();
        *(_QWORD *)a2 = v27;
        *(_QWORD *)(a2 + 8) = v23;
        *(_QWORD *)(a2 + 16) = v24;
        *(_DWORD *)(a2 + 24) = v25;
        *(_DWORD *)(a2 + 28) = v26;
        *(_BYTE *)(a2 + 32) = v41 & 1;
        return;
      }
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v39 = 0xD000000000000020;
      v39[1] = 0x80000001A5A0FB50;
      v39[2] = 0xD000000000000020;
      v39[3] = 0x80000001A5A0F5E0;
      v40 = 107;
    }
    else
    {
      OUTLINED_FUNCTION_3_62(v14, v15, v16, v17, v18, v19, v20, v21, a3, a4);
      v28 = OUTLINED_FUNCTION_7_41();
      sub_1A5751974(v28, v29, v30);
      OUTLINED_FUNCTION_3_62(v31, v32, v33, v34, v35, v36, v37, v38, a3, a4);
      OUTLINED_FUNCTION_176();
      v23 = *(_QWORD *)(a1 + 24);
      if (v23)
      {
        v27 = *(_QWORD *)(a1 + 16);
        OUTLINED_FUNCTION_176();
        v24 = *(_QWORD *)(a3 + 16);
        if (v24)
        {
          v25 = *(_DWORD *)(a3 + 24);
          OUTLINED_FUNCTION_176();
          if ((*(_BYTE *)(a4 + 20) & 1) == 0)
          {
            v26 = *(_DWORD *)(a4 + 16);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_7;
          }
        }
      }
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v39 = 0xD00000000000002FLL;
      v39[1] = 0x80000001A5A0FB80;
      v39[2] = 0xD000000000000020;
      v39[3] = 0x80000001A5A0F5E0;
      v40 = 101;
    }
    v39[4] = v40;
    swift_willThrow();
  }
}

void sub_1A5739F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  id v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  __int16 v21;
  int v22;
  int v23;
  int v24;

  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E38);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59AC2C0;
  *(_QWORD *)(inited + 32) = 5000257;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_OWORD *)(inited + 48) = xmmword_1A59AC2D0;
  *(_QWORD *)(inited + 64) = 0xE800000000000000;
  *(_OWORD *)(inited + 72) = xmmword_1A59AC2E0;
  *(_QWORD *)(inited + 88) = 0xE700000000000000;
  *(_OWORD *)(inited + 96) = xmmword_1A59AC2F0;
  *(_QWORD *)(inited + 112) = 0xE700000000000000;
  *(_OWORD *)(inited + 120) = xmmword_1A59AC300;
  *(_QWORD *)(inited + 136) = 0xE300000000000000;
  *(_OWORD *)(inited + 144) = xmmword_1A59AC310;
  *(_QWORD *)(inited + 160) = 0xE300000000000000;
  *(_OWORD *)(inited + 168) = xmmword_1A59AC320;
  *(_QWORD *)(inited + 184) = 0xE600000000000000;
  *(_OWORD *)(inited + 192) = xmmword_1A59AC330;
  *(_QWORD *)(inited + 208) = 0xE400000000000000;
  *(_OWORD *)(inited + 216) = xmmword_1A59AC340;
  *(_QWORD *)(inited + 232) = 0xE600000000000000;
  *(_OWORD *)(inited + 240) = xmmword_1A59AC350;
  *(_QWORD *)(inited + 256) = 0xEA00000000004445;
  *(_QWORD *)(inited + 264) = 0xE000000000000044;
  *(_QWORD *)(inited + 272) = 0x4554454C45444E55;
  *(_QWORD *)(inited + 280) = 0xE900000000000044;
  *(_OWORD *)(inited + 288) = xmmword_1A59AC360;
  *(_QWORD *)(inited + 304) = 0xE900000000000044;
  *(_QWORD *)(inited + 312) = 0xE000000000000054;
  *(_QWORD *)(inited + 320) = 0x5446415244;
  *(_QWORD *)(inited + 328) = 0xE500000000000000;
  *(_OWORD *)(inited + 336) = xmmword_1A59AC370;
  *(_QWORD *)(inited + 352) = 0xE700000000000000;
  *(_QWORD *)(inited + 360) = 0xE00000000000006CLL;
  v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v9 = inited;
    v10 = *(void **)a1;
    v23 = *(_DWORD *)(a1 + 12);
    v24 = *(_DWORD *)(a1 + 8);
    v21 = *(_WORD *)(a1 + 20);
    v22 = *(_DWORD *)(a1 + 16);
    v20 = *(_BYTE *)(a1 + 22);
    swift_retain();
    v11 = 0;
    v12 = (unint64_t *)(v9 + 48);
    v19 = a2 + 1;
    while (v11 < *(_QWORD *)(v9 + 16))
    {
      v14 = *(v12 - 1);
      v13 = *v12;
      if (v8 >= a3)
      {
        sub_1A5718F9C();
        v4 = (void *)swift_allocError();
        *v15 = a3;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A568079C(v13);
      }
      else
      {
        v18 = *(v12 - 2);
        swift_retain();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A568079C(v13);
        sub_1A576B64C((void **)a1, v8, a3, 0, v18, v14, 0);
        if (!v4)
        {
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          return;
        }
        swift_release();
        *(_QWORD *)a1 = v10;
        *(_DWORD *)(a1 + 8) = v24;
        *(_DWORD *)(a1 + 12) = v23;
        *(_DWORD *)(a1 + 16) = v22;
        *(_WORD *)(a1 + 20) = v21;
        *(_BYTE *)(a1 + 22) = v20;
      }
      swift_willThrow();
      sub_1A567FE68(v13);
      swift_bridgeObjectRelease();
      v16 = v4;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
      if (!swift_dynamicCast())
      {
        swift_release();
        swift_bridgeObjectRelease();

        return;
      }
      ++v11;
      swift_release();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)a1 = v10;
      *(_DWORD *)(a1 + 8) = v24;
      *(_DWORD *)(a1 + 12) = v23;
      *(_DWORD *)(a1 + 16) = v22;
      *(_WORD *)(a1 + 20) = v21;
      *(_BYTE *)(a1 + 22) = v20;
      swift_retain();

      v4 = 0;
      v12 += 3;
      v8 = v19;
      if (v11 == 14)
      {
        swift_setDeallocating();
        sub_1A5774250();
        sub_1A56E9774();
        swift_allocError();
        *v17 = 0x6E776F6E6B6E55;
        v17[1] = 0xE700000000000000;
        v17[2] = 0xD000000000000020;
        v17[3] = 0x80000001A5A0F5E0;
        v17[4] = 175;
        swift_willThrow();
        swift_release();
        return;
      }
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1A573A394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int v17;
  int v18;
  int v19;
  __int16 v20;
  char v21;

  sub_1A5751898();
  if (!v8)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    *(_DWORD *)(v7 + 24) = v17;
    *(_DWORD *)(v7 + 28) = v18;
    *(_DWORD *)(v7 + 32) = v19;
    *(_WORD *)(v7 + 36) = v20;
    *(_BYTE *)(v7 + 38) = v21;
  }
  return v7;
}

void sub_1A573A494()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A5751898();
  if (!v0)
  {
    v1 = (_QWORD *)swift_allocObject();
    v1[2] = sub_1A5723720();
    v1[3] = v2;
    v1[4] = v3;
  }
}

void sub_1A573A584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  __int16 v19;
  char v20;

  sub_1A5751898();
  if (!v7)
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    *(_DWORD *)(v15 + 24) = v16;
    *(_DWORD *)(v15 + 28) = v17;
    *(_DWORD *)(v15 + 32) = v18;
    *(_WORD *)(v15 + 36) = v19;
    *(_BYTE *)(v15 + 38) = v20;
  }
}

void sub_1A573A688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  __int16 v19;
  char v20;

  sub_1A5751898();
  if (!v7)
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    *(_DWORD *)(v15 + 24) = v16;
    *(_DWORD *)(v15 + 28) = v17;
    *(_DWORD *)(v15 + 32) = v18;
    *(_WORD *)(v15 + 36) = v19;
    *(_BYTE *)(v15 + 38) = v20;
  }
}

void sub_1A573A790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  __int16 v19;
  char v20;

  sub_1A5751898();
  if (!v7)
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    *(_DWORD *)(v15 + 24) = v16;
    *(_DWORD *)(v15 + 28) = v17;
    *(_DWORD *)(v15 + 32) = v18;
    *(_WORD *)(v15 + 36) = v19;
    *(_BYTE *)(v15 + 38) = v20;
  }
}

void sub_1A573A894(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1A5751898();
  if (!v4)
  {
    v9 = swift_allocObject();
    sub_1A5741294(a1, a2, a3, a4);
    *(_QWORD *)(v9 + 16) = v10;
    *(_QWORD *)(v9 + 24) = v11;
  }
}

void sub_1A573A988()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A5751898();
  if (!v0)
  {
    v1 = (_QWORD *)swift_allocObject();
    v1[2] = sub_1A5723720();
    v1[3] = v2;
    v1[4] = v3;
  }
}

void sub_1A573AA70()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A5751898();
  if (!v0)
  {
    v1 = (_QWORD *)swift_allocObject();
    v1[2] = sub_1A5723720();
    v1[3] = v2;
    v1[4] = v3;
  }
}

void sub_1A573AB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  __int16 v19;
  char v20;

  sub_1A5751898();
  if (!v7)
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    *(_DWORD *)(v15 + 24) = v16;
    *(_DWORD *)(v15 + 28) = v17;
    *(_DWORD *)(v15 + 32) = v18;
    *(_WORD *)(v15 + 36) = v19;
    *(_BYTE *)(v15 + 38) = v20;
  }
}

void sub_1A573AC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  __int16 v19;
  char v20;

  sub_1A5751898();
  if (!v7)
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    *(_DWORD *)(v15 + 24) = v16;
    *(_DWORD *)(v15 + 28) = v17;
    *(_DWORD *)(v15 + 32) = v18;
    *(_WORD *)(v15 + 36) = v19;
    *(_BYTE *)(v15 + 38) = v20;
  }
}

void sub_1A573AD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  __int16 v19;
  char v20;

  sub_1A5751898();
  if (!v7)
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    *(_DWORD *)(v15 + 24) = v16;
    *(_DWORD *)(v15 + 28) = v17;
    *(_DWORD *)(v15 + 32) = v18;
    *(_WORD *)(v15 + 36) = v19;
    *(_BYTE *)(v15 + 38) = v20;
  }
}

void sub_1A573AE7C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1A5751898();
  if (!v4)
  {
    v9 = swift_allocObject();
    sub_1A5741294(a1, a2, a3, a4);
    *(_QWORD *)(v9 + 16) = v10;
    *(_QWORD *)(v9 + 24) = v11;
  }
}

void sub_1A573AF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1A5751898();
  if (!v3)
  {
    v7 = swift_allocObject();
    sub_1A5741338(a1, a2, a3);
    *(_QWORD *)(v7 + 16) = v8;
    *(_QWORD *)(v7 + 24) = v9;
  }
}

void sub_1A573B068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  unint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1A5751898();
  if (!v7)
  {
    sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    if (v16 < v15)
    {
      __break(1u);
    }
    else
    {
      swift_beginAccess();
      swift_retain();
      v28 = sub_1A594B538();
      v18 = v17;
      swift_release_n();
      sub_1A5751974(a1, a2, a3);
      v19 = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
      v21 = v20;
      v23 = v22;
      v24 = HIWORD(v22);
      v25 = HIDWORD(v22);
      v26 = HIDWORD(v20);
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = v28;
      *(_QWORD *)(v27 + 24) = v18;
      *(_QWORD *)(v27 + 32) = v19;
      *(_DWORD *)(v27 + 40) = v21;
      *(_DWORD *)(v27 + 44) = v26;
      *(_DWORD *)(v27 + 48) = v23;
      *(_WORD *)(v27 + 52) = v25;
      *(_BYTE *)(v27 + 54) = v24;
    }
  }
}

void sub_1A573B244(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  sub_1A5751898();
  if (!v3)
  {
    v7 = swift_allocObject();
    v8 = sub_1A5761038(a1, a2, a3, 1);
    if ((v8 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      swift_allocError();
      *v9 = 0xD000000000000011;
      v9[1] = 0x80000001A5A0F840;
      v9[2] = 0xD000000000000020;
      v9[3] = 0x80000001A5A0F5E0;
      v9[4] = 167;
      swift_willThrow();
      swift_deallocUninitializedObject();
    }
    else
    {
      *(_QWORD *)(v7 + 16) = v8;
    }
  }
}

void sub_1A573B378(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  sub_1A5751898();
  if (!v3)
  {
    v7 = swift_allocObject();
    v8 = sub_1A5761038(a1, a2, a3, 1);
    if ((v8 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      swift_allocError();
      *v9 = 0xD000000000000011;
      v9[1] = 0x80000001A5A0F840;
      v9[2] = 0xD000000000000020;
      v9[3] = 0x80000001A5A0F5E0;
      v9[4] = 167;
      swift_willThrow();
      swift_deallocUninitializedObject();
    }
    else
    {
      *(_QWORD *)(v7 + 16) = v8;
    }
  }
}

void sub_1A573B4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;

  sub_1A5751898();
  if (!v7)
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1A5739098(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_1A573B590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1A5751898();
  if (!v7)
  {
    v15 = sub_1A5739098(a1, a2, a3, a4, a5, a6, a7);
    sub_1A5751974(a1, a2, a3);
    v16 = sub_1A5739098(a1, a2, a3, a4, a5, a6, a7);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v15;
    *(_QWORD *)(v17 + 24) = v16;
  }
}

void sub_1A573B6C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A5751898();
  if (!v0)
  {
    v1 = (_QWORD *)swift_allocObject();
    v1[2] = sub_1A5723720();
    v1[3] = v2;
    v1[4] = v3;
  }
}

void sub_1A573B7B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A5751898();
  if (!v0)
  {
    v1 = (_QWORD *)swift_allocObject();
    v1[2] = sub_1A5723720();
    v1[3] = v2;
    v1[4] = v3;
  }
}

void sub_1A573B8B0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A5751898();
  if (!v0)
  {
    v1 = (_QWORD *)swift_allocObject();
    v1[2] = sub_1A5723720();
    v1[3] = v2;
    v1[4] = v3;
  }
}

void sub_1A573B9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1A5751898();
  if (!v7)
  {
    v20 = swift_allocObject();
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = a4;
    v15[3] = a5;
    v15[4] = a6;
    v15[5] = a7;
    swift_retain();
    sub_1A573BB70(a1, a2, a3, (uint64_t)sub_1A573DE5C, (uint64_t)v15);
    v17 = v16;
    v19 = v18;
    swift_release();
    *(_QWORD *)(v20 + 16) = v17;
    *(_DWORD *)(v20 + 24) = v19;
    *(_BYTE *)(v20 + 28) = BYTE4(v19);
  }
}

void sub_1A573BAEC()
{
  swift_retain();
  sub_1A57570A0();
}

void sub_1A573BB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BYTE v5[16];
  uint64_t (*v6)();
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v9 = a4;
  v10 = a5;
  v6 = sub_1A573DE74;
  v7 = &v8;
  sub_1A576F918((uint64_t)sub_1A57384A4, 0, (uint64_t)sub_1A573DEA4, (uint64_t)v5);
}

void sub_1A573BBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[8];
  _QWORD v21[2];
  uint64_t v22;

  sub_1A5751898();
  if (!v7)
  {
    v22 = swift_allocObject();
    v15 = (_QWORD *)swift_allocObject();
    v21[1] = v21;
    v15[2] = a4;
    v15[3] = a5;
    v15[4] = a6;
    v15[5] = a7;
    MEMORY[0x1E0C80A78](v15);
    v20[6] = sub_1A573DD78;
    v20[7] = v16;
    MEMORY[0x1E0C80A78](v16);
    v20[2] = sub_1A573DD8C;
    v20[3] = v17;
    swift_retain();
    v18 = sub_1A576FE68(sub_1A573DDA0, 0, sub_1A573E184, v20, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 699);
    v19 = v22;
    *(_DWORD *)(v22 + 16) = v18;
    *(_BYTE *)(v19 + 20) = BYTE4(v18) & 1;
    swift_release();
  }
}

void sub_1A573BDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[8];
  _QWORD v21[2];
  uint64_t v22;

  sub_1A5751898();
  if (!v7)
  {
    v22 = swift_allocObject();
    v15 = (_QWORD *)swift_allocObject();
    v21[1] = v21;
    v15[2] = a4;
    v15[3] = a5;
    v15[4] = a6;
    v15[5] = a7;
    MEMORY[0x1E0C80A78](v15);
    v20[6] = sub_1A573DD78;
    v20[7] = v16;
    MEMORY[0x1E0C80A78](v16);
    v20[2] = sub_1A573DD8C;
    v20[3] = v17;
    swift_retain();
    v18 = sub_1A576FE68(sub_1A573DDA0, 0, sub_1A573DE00, v20, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 699);
    v19 = v22;
    *(_DWORD *)(v22 + 16) = v18;
    *(_BYTE *)(v19 + 20) = BYTE4(v18) & 1;
    swift_release();
  }
}

unint64_t sub_1A573BFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = swift_allocObject();
  v16 = sub_1A57332C4(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
    return swift_deallocUninitializedObject();
  *(_QWORD *)(v15 + 16) = v16;
  *(_DWORD *)(v15 + 24) = v17;
  *(_BYTE *)(v15 + 28) = BYTE4(v17);
  return v15 | 0xB000000000000004;
}

unint64_t sub_1A573C084(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD v20[6];
  _QWORD v21[2];
  uint64_t v22;

  sub_1A5751898();
  if (!v7)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF88);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1A59ABD10;
    v16 = sub_1A5739098(a1, a2, a3, a4, a5, a6, a7);
    v21[1] = v21;
    *(_QWORD *)(v15 + 32) = v16;
    v22 = v15;
    MEMORY[0x1E0C80A78](v16);
    v20[2] = a4;
    v20[3] = a5;
    v20[4] = a6;
    v20[5] = a7;
    sub_1A5751E08(a1, a2, a3, (uint64_t)sub_1A573DD5C, (uint64_t)v20, (uint64_t)&v22);
    sub_1A5751898();
    v17 = v22;
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      a2 = *(_QWORD *)(v22 + 32);
      sub_1A568079C(a2);
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = v17;
      return v19 | 0xC000000000000000;
    }
  }
  return a2;
}

void sub_1A573C268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_7_43(a1, a2, a3);
  if (!v4)
  {
    v5 = OUTLINED_FUNCTION_35_15();
    *v3 = sub_1A5739098(v5, v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_17_35();
}

void sub_1A573C2A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  sub_1A5751898();
  if (!v3)
  {
    v7 = swift_allocObject();
    v8 = sub_1A5761038(a1, a2, a3, 1);
    if ((v8 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      swift_allocError();
      *v9 = 0xD000000000000011;
      v9[1] = 0x80000001A5A0F840;
      v9[2] = 0xD000000000000020;
      v9[3] = 0x80000001A5A0F5E0;
      v9[4] = 167;
      swift_willThrow();
      swift_deallocUninitializedObject();
    }
    else
    {
      *(_QWORD *)(v7 + 16) = v8;
    }
  }
}

void sub_1A573C3D0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  sub_1A5751898();
  if (!v3)
  {
    v7 = swift_allocObject();
    v8 = sub_1A5761038(a1, a2, a3, 1);
    if ((v8 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      swift_allocError();
      *v9 = 0xD000000000000011;
      v9[1] = 0x80000001A5A0F840;
      v9[2] = 0xD000000000000020;
      v9[3] = 0x80000001A5A0F5E0;
      v9[4] = 167;
      swift_willThrow();
      swift_deallocUninitializedObject();
    }
    else
    {
      *(_QWORD *)(v7 + 16) = v8;
    }
  }
}

unint64_t sub_1A573C500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;

  v15 = swift_allocObject();
  swift_retain();
  v16 = sub_1A575A7CC(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
    return swift_deallocUninitializedObject();
  *(_QWORD *)(v15 + 16) = v16;
  *(_QWORD *)(v15 + 24) = v17;
  result = v15 | 0xE000000000000000;
  *(_QWORD *)(v15 + 32) = v18;
  *(_QWORD *)(v15 + 40) = v19;
  return result;
}

void sub_1A573C5C8(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  sub_1A5739F60(a1, *a2, a2[1]);
  if (!v3)
    *a3 = v5;
}

void sub_1A573C5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD v22[4];
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  _QWORD **v26;

  OUTLINED_FUNCTION_16_31();
  v6 = v5;
  sub_1A5751898();
  if (!v0)
  {
    v23 = v6;
    v24 = 0;
    *(_QWORD *)&v25 = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)&v25 + 1) = MEMORY[0x1E0DEE9D8];
    v7 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    v26 = &v23;
    v7[2] = v4;
    v7[3] = v3;
    v7[4] = v2;
    v7[5] = v1;
    MEMORY[0x1E0C80A78](v7);
    v22[2] = sub_1A573DCFC;
    v22[3] = v8;
    swift_retain();
    v9 = OUTLINED_FUNCTION_14_35();
    sub_1A5751F3C(v9, v10, v11, v12, (uint64_t)v22, v13);
    OUTLINED_FUNCTION_17_4();
    v14 = OUTLINED_FUNCTION_14_35();
    sub_1A5751974(v14, v15, v16);
    v17 = OUTLINED_FUNCTION_14_35();
    v20 = sub_1A573E2D8(v17, v18, v19);
    v21 = v23;
    *v23 = v24;
    *(_OWORD *)(v21 + 1) = v25;
    v21[3] = v20;
  }
}

void sub_1A573C7AC()
{
  swift_retain();
  sub_1A575A880();
}

void sub_1A573C834()
{
  uint64_t v0;
  uint64_t inited;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_4_59();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AEB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABDC0;
  v2 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v2);
  v3 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v3 + 16) = sub_1A573CB3C;
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(inited + 32) = sub_1A573D20C;
  *(_QWORD *)(inited + 40) = v3;
  v4 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v4);
  v5 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v5 + 16) = sub_1A573D224;
  *(_QWORD *)(v5 + 24) = v0;
  *(_QWORD *)(inited + 48) = sub_1A573DFD0;
  *(_QWORD *)(inited + 56) = v5;
  v6 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v6);
  v7 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v7 + 16) = sub_1A573D23C;
  *(_QWORD *)(v7 + 24) = v0;
  *(_QWORD *)(inited + 64) = sub_1A573DFD0;
  *(_QWORD *)(inited + 72) = v7;
  v8 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v8);
  v9 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v9 + 16) = sub_1A573D254;
  *(_QWORD *)(v9 + 24) = v0;
  *(_QWORD *)(inited + 80) = sub_1A573DFD0;
  *(_QWORD *)(inited + 88) = v9;
  v10 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v10);
  v11 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v11 + 16) = sub_1A573D26C;
  *(_QWORD *)(v11 + 24) = v0;
  *(_QWORD *)(inited + 96) = sub_1A573DFD0;
  *(_QWORD *)(inited + 104) = v11;
  v12 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v12);
  v13 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v13 + 16) = sub_1A573D284;
  *(_QWORD *)(v13 + 24) = v0;
  *(_QWORD *)(inited + 112) = sub_1A573DFD0;
  *(_QWORD *)(inited + 120) = v13;
  v14 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v14);
  v15 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v15 + 16) = sub_1A573D29C;
  *(_QWORD *)(v15 + 24) = v0;
  *(_QWORD *)(inited + 128) = sub_1A573DFD0;
  *(_QWORD *)(inited + 136) = v15;
  swift_retain_n();
  v16 = OUTLINED_FUNCTION_5_60();
  sub_1A5770EAC(v16);
  if (v17)
    OUTLINED_FUNCTION_15_41();
  else
    OUTLINED_FUNCTION_11_29();
  sub_1A5774244();
  OUTLINED_FUNCTION_23_27();
  OUTLINED_FUNCTION_21_27();
}

void sub_1A573CA70(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
    sub_1A57334B4(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1A573CB1C()
{
  OUTLINED_FUNCTION_64_7();
  return swift_deallocObject();
}

void sub_1A573CB3C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573CA70(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573CB54(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
    sub_1A57334B4(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1A573CC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
    sub_1A5733308(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1A573CCA8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  sub_1A5751898();
  if (!v3 && (sub_1A5761038(a1, a2, a3, 1) & 0x8000000000000000) != 0)
  {
    sub_1A56E9774();
    swift_allocError();
    *v7 = 0xD000000000000011;
    v7[1] = 0x80000001A5A0F840;
    v7[2] = 0xD000000000000020;
    v7[3] = 0x80000001A5A0F5E0;
    v7[4] = 167;
    swift_willThrow();
  }
}

void sub_1A573CDA4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A5751898();
  if (!v3)
    sub_1A573E2D8(a1, a2, a3);
}

void sub_1A573CE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t inited;

  sub_1A5751898();
  if (!v7)
  {
    sub_1A5732834(a1, a2, a3, a4, a5, a6, a7);
    sub_1A5751974(a1, a2, a3);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E28);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A59ABD40;
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = a4;
    v15[3] = a5;
    v15[4] = a6;
    v15[5] = a7;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_1A573D8A4;
    *(_QWORD *)(v16 + 24) = v15;
    *(_QWORD *)(inited + 32) = sub_1A573D8BC;
    *(_QWORD *)(inited + 40) = v16;
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = a4;
    v17[3] = a5;
    v17[4] = a6;
    v17[5] = a7;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_1A573D8D4;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(inited + 48) = sub_1A573DFE4;
    *(_QWORD *)(inited + 56) = v18;
    swift_retain_n();
    sub_1A5771014(inited, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 448);
    swift_setDeallocating();
    sub_1A5774244();
    sub_1A5751898();
  }
}

void sub_1A573D0CC()
{
  sub_1A573725C();
}

uint64_t sub_1A573D0F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(uint64_t, _QWORD, _QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;

  result = a3(a1, *a2, a2[1]);
  if (!v4)
  {
    *(_QWORD *)a4 = result;
    *(_DWORD *)(a4 + 8) = v7;
    *(_BYTE *)(a4 + 12) = BYTE4(v7);
  }
  return result;
}

uint64_t sub_1A573D134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v16;

  swift_retain();
  result = sub_1A57537F8(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
    return v16 & 0x1FFFFFFFFFFLL | 0xC00000000000;
  return result;
}

uint64_t sub_1A573D1C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(uint64_t, _QWORD, _QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = a3(a1, *a2, a2[1]);
  if (!v4)
  {
    *(_QWORD *)a4 = result;
    *(_QWORD *)(a4 + 8) = v7;
    *(_QWORD *)(a4 + 16) = v8;
    *(_DWORD *)(a4 + 24) = v9;
    *(_WORD *)(a4 + 28) = WORD2(v9);
  }
  return result;
}

uint64_t sub_1A573D20C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1A573D1C4(a1, a2, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v3 + 16), a3);
}

void sub_1A573D224()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573CB54(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573D23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573CC00(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573D254()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A573CCA8(v0, v1, v2);
}

void sub_1A573D26C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A573CDA4(v0, v1, v2);
}

void sub_1A573D284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573CE54(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A573D29C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A573D134(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573D2B4()
{
  uint64_t v0;
  uint64_t inited;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_59();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABDC0;
  *(_QWORD *)(inited + 32) = sub_1A573D6E4;
  *(_QWORD *)(inited + 40) = 0;
  *(_QWORD *)(inited + 48) = sub_1A573D700;
  *(_QWORD *)(inited + 56) = 0;
  *(_QWORD *)(inited + 64) = sub_1A573D71C;
  *(_QWORD *)(inited + 72) = 0;
  *(_QWORD *)(inited + 80) = sub_1A573D738;
  *(_QWORD *)(inited + 88) = 0;
  *(_QWORD *)(inited + 96) = sub_1A573D754;
  *(_QWORD *)(inited + 104) = 0;
  v2 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v2);
  v3 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v3 + 16) = sub_1A573DF88;
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(inited + 112) = sub_1A573DFA0;
  *(_QWORD *)(inited + 120) = v3;
  v4 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v4);
  v5 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v5 + 16) = sub_1A573DFB8;
  *(_QWORD *)(v5 + 24) = v0;
  *(_QWORD *)(inited + 128) = sub_1A573DFF8;
  *(_QWORD *)(inited + 136) = v5;
  swift_retain_n();
  v6 = OUTLINED_FUNCTION_5_60();
  sub_1A5771184(v6);
  if (v7)
    OUTLINED_FUNCTION_15_41();
  else
    OUTLINED_FUNCTION_11_29();
  sub_1A5774244();
  OUTLINED_FUNCTION_23_27();
  OUTLINED_FUNCTION_21_27();
}

void sub_1A573D400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_7_43(a1, a2, a3);
  if (!v3)
  {
    OUTLINED_FUNCTION_35_15();
    sub_1A573D2B4();
    OUTLINED_FUNCTION_9_46(v4, v5, v6, v7);
  }
  OUTLINED_FUNCTION_17_35();
}

uint64_t sub_1A573D438()
{
  sub_1A5751898();
  return 0;
}

uint64_t sub_1A573D47C()
{
  sub_1A5751898();
  return 1;
}

uint64_t sub_1A573D4C0()
{
  sub_1A5751898();
  return 2;
}

uint64_t sub_1A573D504()
{
  sub_1A5751898();
  return 3;
}

uint64_t sub_1A573D54C()
{
  sub_1A5751898();
  return 4;
}

void sub_1A573D590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
  {
    sub_1A5751974(a1, a2, a3);
    sub_1A5732834(a1, a2, a3, a4, a5, a6, a7);
  }
}

uint64_t sub_1A573D654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v16;

  swift_retain();
  result = sub_1A575834C(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
    return v16 & 0xFFFFFFFFFFFFLL | 0x1000000000000;
  return result;
}

uint64_t sub_1A573D6E4(uint64_t a1, _QWORD *a2)
{
  return sub_1A573D770(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD))sub_1A573D438);
}

uint64_t sub_1A573D700(uint64_t a1, _QWORD *a2)
{
  return sub_1A573D770(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD))sub_1A573D47C);
}

uint64_t sub_1A573D71C(uint64_t a1, _QWORD *a2)
{
  return sub_1A573D770(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD))sub_1A573D4C0);
}

uint64_t sub_1A573D738(uint64_t a1, _QWORD *a2)
{
  return sub_1A573D770(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD))sub_1A573D504);
}

uint64_t sub_1A573D754(uint64_t a1, _QWORD *a2)
{
  return sub_1A573D770(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD))sub_1A573D54C);
}

uint64_t sub_1A573D770(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = a3(a1, *a2, a2[1]);
  if (!v3)
    return OUTLINED_FUNCTION_9_46(result, v5, v6, v7);
  return result;
}

uint64_t sub_1A573D7A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(uint64_t, _QWORD, _QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = a3(a1, *a2, a2[1]);
  if (!v4)
  {
    *(_QWORD *)a4 = result;
    *(_QWORD *)(a4 + 8) = v7;
    *(_QWORD *)(a4 + 16) = v8;
    *(_DWORD *)(a4 + 24) = v9;
    *(_WORD *)(a4 + 28) = WORD2(v9);
    *(_BYTE *)(a4 + 30) = BYTE6(v9);
  }
  return result;
}

void sub_1A573D7F4()
{
  sub_1A5751898();
}

_QWORD *sub_1A573D840(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr))
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  result = a4(&v6);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

unint64_t sub_1A573D884(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

void sub_1A573D8A4()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A573D0CC();
}

uint64_t sub_1A573D8BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1A573D0F0(a1, a2, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v3 + 16), a3);
}

uint64_t sub_1A573D8D4()
{
  sub_1A5751898();
  return 0;
}

uint64_t sub_1A573D910()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A573D934()
{
  return OUTLINED_FUNCTION_47_10();
}

uint64_t sub_1A573D940()
{
  return sub_1A5724780();
}

uint64_t sub_1A573D95C()
{
  return sub_1A5724780();
}

uint64_t sub_1A573D978()
{
  return sub_1A5724780();
}

uint64_t sub_1A573D994()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A573D9B8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A573C2A0(v0, v1, v2);
}

void sub_1A573D9D0(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1A573DC9C(a1, a2, a3);
}

void sub_1A573D9E4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A573C3D0(v0, v1, v2);
}

uint64_t sub_1A573D9FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A573A394(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573DA14()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A573A494();
}

void sub_1A573DA2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573A584(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A573DA44()
{
  OUTLINED_FUNCTION_64_7();
  OUTLINED_FUNCTION_20_28();
  return swift_deallocObject();
}

void sub_1A573DA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573A688(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573DA74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573A790(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573DA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  OUTLINED_FUNCTION_4_52();
  sub_1A573A894(v0, v1, v2, v3);
}

void sub_1A573DAA4()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A573A988();
}

void sub_1A573DABC()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A573AA70();
}

void sub_1A573DAD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573AB64(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573DAEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573AC6C(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573DB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573AD78(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573DB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  OUTLINED_FUNCTION_4_52();
  sub_1A573AE7C(v0, v1, v2, v3);
}

void sub_1A573DB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573B068(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573DB4C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A573B244(v0, v1, v2);
}

void sub_1A573DB64()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A573B378(v0, v1, v2);
}

void sub_1A573DB7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573B4AC(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573DB94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573B590(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573DBAC()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A573B6C0();
}

void sub_1A573DBC4()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A573B7B8();
}

void sub_1A573DBDC()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A573B8B0();
}

void sub_1A573DBF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573B9A8(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573DC0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573BBF8(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573DC24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573BDD8(v0, v1, v2, v3, v4, v5, v6);
}

unint64_t sub_1A573DC3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A573BFB4(v0, v1, v2, v3, v4, v5, v6);
}

unint64_t sub_1A573DC54()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A573C084(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573DC6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A573AF74(v0, v1, v2);
}

unint64_t sub_1A573DC84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A573C500(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573DC9C(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v6 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v3 + 16))(a1, *a2, a2[1]);
  if (!v4)
    *a3 = v6;
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A573DCCC()
{
  swift_release();
  OUTLINED_FUNCTION_64_7();
  swift_release();
  return swift_deallocObject();
}

void sub_1A573DCFC()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A573C7AC();
}

void sub_1A573DD14(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *a1 = v4;
    a1[1] = v5;
    a1[2] = v6;
    a1[3] = v7;
  }
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A573DD40()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_20_28();
  return swift_deallocObject();
}

void sub_1A573DD5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A573C268(v0, v1, v2);
}

unint64_t sub_1A573DD78()
{
  return sub_1A573DE18();
}

void sub_1A573DD8C(_DWORD *a1@<X8>)
{
  sub_1A573DE30(a1);
}

void sub_1A573DDA0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1A573D7F4();
  if (!v1)
  {
    *(_DWORD *)a1 = v3;
    *(_BYTE *)(a1 + 4) = BYTE4(v3) & 1;
  }
}

_QWORD *sub_1A573DDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *(*a4)(uint64_t *__return_ptr)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  _QWORD *result;

  result = sub_1A573D840(a1, a2, a3, a4);
  if (!v5)
  {
    *(_DWORD *)a5 = (_DWORD)result;
    *(_BYTE *)(a5 + 4) = BYTE4(result) & 1;
  }
  return result;
}

_QWORD *sub_1A573DE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  return sub_1A573DDD0(a1, a2, a3, *(_QWORD *(**)(uint64_t *__return_ptr))(v4 + 16), a4);
}

unint64_t sub_1A573DE18()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5733498(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A573DE30(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v4;

  v4 = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
    *a1 = v4;
  OUTLINED_FUNCTION_1();
}

void sub_1A573DE5C()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A573BAEC();
}

uint64_t sub_1A573DE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = (*(uint64_t (**)(void))(v0 + 16))();
  if (v1)
    return v3 & 0xFFFFFFFFFFLL;
  return result;
}

void sub_1A573DEA4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *(_QWORD *)a1 = v4;
    *(_DWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 12) = BYTE4(v5);
  }
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A573DED8()
{
  return OUTLINED_FUNCTION_47_10();
}

uint64_t sub_1A573DEE4()
{
  uint64_t v0;

  sub_1A567FE68(*(_QWORD *)(v0 + 16));
  sub_1A567FE68(*(_QWORD *)(v0 + 24));
  OUTLINED_FUNCTION_20_28();
  return swift_deallocObject();
}

uint64_t sub_1A573DF08()
{
  uint64_t v0;

  sub_1A567FE68(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A573DF2C()
{
  return OUTLINED_FUNCTION_47_10();
}

uint64_t sub_1A573DF38()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A573DF64()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A573DF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573D590(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A573DFA0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1A573D7A4(a1, a2, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v3 + 16), a3);
}

uint64_t sub_1A573DFB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A573D654(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A573DFD0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A573D20C(a1, a2, a3);
}

uint64_t sub_1A573DFE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A573D8BC(a1, a2, a3);
}

uint64_t sub_1A573DFF8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A573DFA0(a1, a2, a3);
}

void sub_1A573E00C()
{
  sub_1A573DD5C();
}

uint64_t sub_1A573E170()
{
  return sub_1A566E1F8();
}

_QWORD *sub_1A573E184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1A573DE00(a1, a2, a3, a4);
}

_QWORD *OUTLINED_FUNCTION_3_62(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  return sub_1A5739BF4(v13, v12, v11, v15, v10, v14, v17, v16, a9, a10);
}

void OUTLINED_FUNCTION_4_59()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

uint64_t OUTLINED_FUNCTION_5_60()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_7_43(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A5751974(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_9_46(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)v4 = result;
  *(_QWORD *)(v4 + 8) = a2;
  *(_QWORD *)(v4 + 16) = a3;
  *(_DWORD *)(v4 + 24) = a4;
  *(_WORD *)(v4 + 28) = WORD2(a4);
  *(_BYTE *)(v4 + 30) = BYTE6(a4);
  return result;
}

uint64_t OUTLINED_FUNCTION_11_29()
{
  return swift_setDeallocating();
}

uint64_t OUTLINED_FUNCTION_12_40()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_14_35()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_15_41()
{
  return swift_setDeallocating();
}

uint64_t OUTLINED_FUNCTION_20_28()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_23_27()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_1A573E2D8(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  __int16 v10;
  char v11;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;

  v4 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v5 = a3;
    if (v4 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v13 = v5;
    }
    else
    {
      v6 = result;
      v7 = *(_QWORD *)result;
      v8 = *(_QWORD *)(result + 8);
      v9 = *(_DWORD *)(result + 16);
      v10 = *(_WORD *)(result + 20);
      v11 = *(_BYTE *)(result + 22);
      swift_retain();
      v12 = sub_1A5761038(v6, v4, v5, 1);
      if (!v3)
      {
        v5 = v12;
        if ((v12 & 0x8000000000000000) == 0)
        {
          swift_release();
          return v5;
        }
        sub_1A56E9774();
        OUTLINED_FUNCTION_21();
        *v14 = 0xD00000000000001BLL;
        v14[1] = 0x80000001A5A0FA60;
        v14[2] = 0xD000000000000020;
        v14[3] = 0x80000001A5A0F5E0;
        v14[4] = 135;
        swift_willThrow();
      }
      swift_release();
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v9;
      *(_WORD *)(v6 + 20) = v10;
      *(_BYTE *)(v6 + 22) = v11;
    }
    swift_willThrow();
    return v5;
  }
  __break(1u);
  return result;
}

void sub_1A573E424()
{
  sub_1A573BAEC();
}

unint64_t sub_1A573E438(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t result;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;

  result = sub_1A5761038(a1, a2, a3, 0);
  if (!v3)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v5 = 0xD000000000000011;
      v6 = 0x80000001A5A0F840;
      v7 = 167;
    }
    else
    {
      result = sub_1A5732B0C(result);
      if ((result & 0x100000000) == 0)
        return result;
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v5 = 0xD000000000000015;
      v6 = 0x80000001A5A0FBB0;
      v7 = 28;
    }
    v5[1] = v6;
    v5[2] = 0xD000000000000020;
    v5[3] = 0x80000001A5A0F5E0;
    v5[4] = v7;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A573E504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  unint64_t (*v16)();
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[16];
  uint64_t (*v24)();
  _QWORD *v25;

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a6;
  v11[5] = a7;
  v24 = sub_1A573ECE0;
  v25 = v11;
  v19 = a4;
  v20 = a5;
  v21 = a6;
  v22 = a7;
  v16 = sub_1A573ECF8;
  v17 = &v18;
  swift_retain();
  sub_1A576F8C0((uint64_t)sub_1A572715C, (uint64_t)v23, (uint64_t)sub_1A572715C, (uint64_t)v15);
  v13 = v12;
  swift_release();
  return v13;
}

void sub_1A573E614()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  int v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unsigned int v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  _QWORD *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  OUTLINED_FUNCTION_2_75();
  v25 = v1;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
  OUTLINED_FUNCTION_3_63();
  v10 = sub_1A573E504(v3, v4, v5, v6, v7, v8, v9);
  if (v0)
  {
    *(_QWORD *)(inited + 16) = 0;
    swift_release();
  }
  else
  {
    v24[1] = v24;
    *(_QWORD *)(inited + 32) = v10;
    v29 = inited;
    MEMORY[0x1E0C80A78](v10);
    OUTLINED_FUNCTION_4_60();
    sub_1A5752074();
    v11 = v29;
    v26 = 0;
    v27 = 0;
    v28 = 2;
    v12 = *(_QWORD *)(v29 + 16);
    if (v12)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v13 = (_DWORD *)(v11 + 36);
      do
      {
        v14 = *(v13 - 1);
        v15 = v14 != 0;
        v16 = (v14 - 1);
        if (!v15)
        {
          __break(1u);
LABEL_18:
          __break(1u);
LABEL_19:
          __break(1u);
          return;
        }
        if (!*v13)
          goto LABEL_18;
        v17 = *v13;
        if (v16 > v17)
          goto LABEL_19;
        sub_1A570932C(v16 | (v17 << 32));
        v13 += 2;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease_n();
      v18 = v25;
      v19 = v27;
      v20 = v28;
      if (!v28)
        goto LABEL_13;
      if (v28 != 1)
        goto LABEL_15;
      if (*(_QWORD *)(v26 + 16))
      {
LABEL_13:
        *v25 = v26;
        *((_DWORD *)v18 + 2) = v19;
        *((_BYTE *)v18 + 12) = v20;
        goto LABEL_16;
      }
      sub_1A54E3458(v26, v27, 1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_15:
    sub_1A56E9774();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_5_61(v21, 0xD000000000000011);
    *(_QWORD *)(v22 + 16) = v23;
    *(_QWORD *)(v22 + 24) = 0x80000001A5A0F5E0;
    OUTLINED_FUNCTION_11_20(v22, 56);
  }
LABEL_16:
  OUTLINED_FUNCTION_32_17();
}

unint64_t sub_1A573E818(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;

  v7 = sub_1A5733498(a1, a2, a3, a4, a5, a6, a7);
  return v7 | ((unint64_t)v7 << 32);
}

uint64_t sub_1A573E834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  unint64_t (*v16)();
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[16];
  uint64_t (*v24)();
  _QWORD *v25;

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a6;
  v11[5] = a7;
  v24 = sub_1A573ED10;
  v25 = v11;
  v19 = a4;
  v20 = a5;
  v21 = a6;
  v22 = a7;
  v16 = sub_1A573ED24;
  v17 = &v18;
  swift_retain();
  sub_1A576F8C0((uint64_t)sub_1A572715C, (uint64_t)v23, (uint64_t)sub_1A572715C, (uint64_t)v15);
  v13 = v12;
  swift_release();
  return v13;
}

uint64_t sub_1A573E944(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  __int16 v21;

  v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v10 = a3;
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v19 = v10;
      swift_retain();
    }
    else
    {
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v17 = *(_DWORD *)(result + 16);
      v20 = *(_BYTE *)(result + 22);
      v21 = *(_WORD *)(result + 20);
      swift_retain();
      swift_retain();
      sub_1A5737A60(v14, v8, v10, a4, a5, a6, a7);
      if (!v7)
      {
        v10 = v18;
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v17;
      *(_WORD *)(v14 + 20) = v21;
      *(_BYTE *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_1A573EA84()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;

  OUTLINED_FUNCTION_2_75();
  v15 = v1;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF18);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A59ABD10;
  OUTLINED_FUNCTION_3_63();
  v10 = sub_1A573E834(v3, v4, v5, v6, v7, v8, v9);
  if (v0)
  {
    *(_QWORD *)(v2 + 16) = 0;
    swift_release();
  }
  else
  {
    v14 = (uint64_t)&v14;
    *(_QWORD *)(v2 + 32) = v10;
    v16 = v2;
    MEMORY[0x1E0C80A78](v10);
    OUTLINED_FUNCTION_4_60();
    sub_1A5752074();
    if (*(_QWORD *)(v16 + 16))
    {
      *v15 = v16;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_5_61(v11, 0xD000000000000011);
      *(_QWORD *)(v12 + 16) = v13;
      *(_QWORD *)(v12 + 24) = 0x80000001A5A0F5E0;
      OUTLINED_FUNCTION_11_20(v12, 93);
    }
  }
  OUTLINED_FUNCTION_32_17();
}

void sub_1A573EBE8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v9;

  sub_1A5751898();
  if (!v9)
    *a9 = a8(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_32_17();
}

void sub_1A573EC7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A573EBE8(v0, v1, v2, v3, v4, v5, v6, sub_1A573E834, v7);
}

uint64_t sub_1A573EC9C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A573ECC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A573EBE8(v0, v1, v2, v3, v4, v5, v6, sub_1A573E504, v7);
}

uint64_t sub_1A573ECE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A573E944(v0, v1, v2, v3, v4, v5, v6);
}

unint64_t sub_1A573ECF8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A573E818(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A573ED10()
{
  return sub_1A573ECE0();
}

unint64_t sub_1A573ED24()
{
  return sub_1A573ECF8();
}

void OUTLINED_FUNCTION_5_61(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
}

uint64_t sub_1A573ED98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;

  v4 = *v2;
  result = OUTLINED_FUNCTION_6_49();
  *v2 = v4;
  if (!(_DWORD)result || a1 > *(_QWORD *)(v4 + 24) >> 1)
    return a2();
  return result;
}

uint64_t sub_1A573EE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];
  void (*v19)();
  _QWORD *v20;

  OUTLINED_FUNCTION_163_2();
  v12 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a7;
  v19 = sub_1A572FB74;
  v20 = v12;
  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_8_42();
  sub_1A576F59C((uint64_t)sub_1A575083C, (uint64_t)v18, (uint64_t)sub_1A5740F84, 0);
  v14 = v13;
  v16 = v15;
  OUTLINED_FUNCTION_19_0();
  if (v7)
    return v16 & 0xFFFFFFFFFFFFFFLL;
  else
    return v14;
}

void sub_1A573EF04()
{
  sub_1A5740D48();
}

#error "1A573EF5C: call analysis failed (funcsize=80)"

#error "1A573F0C8: call analysis failed (funcsize=76)"

void sub_1A573F1BC()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  sub_1A575315C();
  if (v0)
  {
    v3 = v0;
    v1 = v0;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();

      sub_1A575315C();
      return;
    }

    v3 = v0;
    v2 = v0;
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }

  }
}

void sub_1A573F404(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  int v16;
  __int16 v17;
  void *v18;
  uint64_t *v19;
  id v20;
  id v21;
  char v22;
  void *v26;

  v10 = a8 + 1;
  if (__OFADD__(a8, 1))
  {
    __break(1u);
  }
  else
  {
    v11 = a8;
    if (v10 >= a9)
    {
      sub_1A5718F9C();
      v18 = (void *)swift_allocError();
      *v19 = a9;
    }
    else
    {
      v14 = *(_QWORD *)a7;
      v15 = *(_QWORD *)(a7 + 8);
      v16 = *(_DWORD *)(a7 + 16);
      v17 = *(_WORD *)(a7 + 20);
      v22 = *(_BYTE *)(a7 + 22);
      swift_retain();
      a1(a7, v10);
      v18 = v9;
      if (!v9)
      {
        swift_release();
        return;
      }
      swift_release();
      *(_QWORD *)a7 = v14;
      *(_QWORD *)(a7 + 8) = v15;
      *(_DWORD *)(a7 + 16) = v16;
      *(_WORD *)(a7 + 20) = v17;
      *(_BYTE *)(a7 + 22) = v22;
      v11 = a8;
    }
    swift_willThrow();
    v26 = v18;
    v20 = v18;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

LABEL_10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1A5751AFC(a7, v11, a9, a3, a4);
      return;
    }

    v26 = v18;
    v21 = v18;
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      goto LABEL_10;
    }

  }
}

uint64_t sub_1A573F6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A573F77C(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1A573F730(uint64_t a1, uint64_t a2)
{
  return sub_1A573FAD8(a1, a2);
}

#error "1A573F7A0: call analysis failed (funcsize=64)"

void sub_1A573F890()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  sub_1A5754480();
  if (v0)
  {
    v3 = v0;
    v1 = v0;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();

      sub_1A5754480();
      return;
    }

    v3 = v0;
    v2 = v0;
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }

  }
}

#error "1A573FAFC: call analysis failed (funcsize=68)"

void sub_1A573FBFC()
{
  void *v0;
  id v1;
  id v2;
  void *v3;

  sub_1A5753E50();
  if (v0)
  {
    v3 = v0;
    v1 = v0;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
    }
    else
    {

      v3 = v0;
      v2 = v0;
      if ((swift_dynamicCast() & 1) == 0)
      {

        return;
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();

    sub_1A5753E50();
  }
}

#error "1A573FE74: call analysis failed (funcsize=67)"

void sub_1A573FF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1A575289C(a1, a2, a3);
  if (!v3)
  {
    OUTLINED_FUNCTION_77_7(v4, v5, v6, v7);
    v8 = OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_147_2(v8);
    if (!v9)
    {
      sub_1A56E9774();
      v10 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_84(v10, v11);
      OUTLINED_FUNCTION_15_35(v12, v13);
      OUTLINED_FUNCTION_11_20(v14, 2307);
    }
    OUTLINED_FUNCTION_17_4();
  }
  OUTLINED_FUNCTION_164_2();
  OUTLINED_FUNCTION_86_3();
}

void sub_1A573FFF8(unint64_t a1, uint64_t a2, uint64_t a3, int64_t a4)
{
  uint64_t v4;
  int64_t v6;
  int64_t v7;
  int64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v6 = OUTLINED_FUNCTION_249_0(a1, a2, a3);
  v7 = v6;
  if (!v4)
  {
    if (v6 < 0)
    {
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_248_0();
      OUTLINED_FUNCTION_5_61(v9, v10);
      OUTLINED_FUNCTION_215_0(v11, v12);
      goto LABEL_6;
    }
    if (v6 > a4)
    {
      sub_1A571EABC();
      OUTLINED_FUNCTION_21();
      *v8 = v7;
      v8[1] = a4;
LABEL_6:
      OUTLINED_FUNCTION_46_11();
    }
  }
  OUTLINED_FUNCTION_32_1();
}

void sub_1A5740090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_12_32();
  sub_1A576F708(v0, v1, v2, v3);
  OUTLINED_FUNCTION_57_13(v4 & 0xFFFFFFFFFFFFFFLL);
  OUTLINED_FUNCTION_23_6();
}

void sub_1A5740104()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_206_0();
  OUTLINED_FUNCTION_131_3();
  v0 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_240_0(v0);
  v1 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_240_0(v1);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_8_42();
  OUTLINED_FUNCTION_93_3((uint64_t)sub_1A572CAE8, v2, (uint64_t)sub_1A575083C, v3, v4);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_129_3();
}

void sub_1A57401CC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_206_0();
  OUTLINED_FUNCTION_131_3();
  v0 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_240_0(v0);
  v1 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_240_0(v1);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_8_42();
  OUTLINED_FUNCTION_93_3((uint64_t)sub_1A575083C, v2, (uint64_t)sub_1A575083C, v3, v4);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_129_3();
}

uint64_t sub_1A5740294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  BOOL v20;
  BOOL v21;
  _BYTE v22[40];

  sub_1A5740104();
  if (!v0)
  {
    OUTLINED_FUNCTION_264_0(v2, v3, v4, v5, v6, v7);
    OUTLINED_FUNCTION_155();
    sub_1A56E6FE8((uint64_t)v22);
    if (v8)
    {
      v9 = sub_1A594B49C();
      v11 = v10;
      OUTLINED_FUNCTION_38();
      v12 = v9 == 0x74616E7265746C61 && v11 == 0xEB00000000657669;
      if (v12 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1EE7970F0 != -1)
          swift_once();
        v18 = &static Media.Subtype.alternative;
      }
      else
      {
        v20 = v9 == 0x646578696DLL && v11 == 0xE500000000000000;
        if (v20 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          if (qword_1EE7970F8 != -1)
            swift_once();
          OUTLINED_FUNCTION_176();
          v1 = static Media.Subtype.mixed;
          goto LABEL_14;
        }
        v21 = v9 == 0x646574616C6572 && v11 == 0xE700000000000000;
        if (!v21 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
        {
          v1 = sub_1A594B49C();
          OUTLINED_FUNCTION_17_4();
          OUTLINED_FUNCTION_52();
          return v1;
        }
        swift_bridgeObjectRelease();
        if (qword_1EE797100 != -1)
          swift_once();
        v18 = &static Media.Subtype.related;
      }
      v1 = *v18;
LABEL_14:
      OUTLINED_FUNCTION_42();
      OUTLINED_FUNCTION_17_4();
      return v1;
    }
    sub_1A56E9774();
    v13 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_1_84(v13, v14);
    OUTLINED_FUNCTION_15_35(v15, v16);
    OUTLINED_FUNCTION_11_20(v17, 1396);
    OUTLINED_FUNCTION_17_4();
  }
  return v1;
}

void sub_1A574052C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1A5752954(a1, a2, a3);
  if (!v4)
  {
    OUTLINED_FUNCTION_77_7(v6, v7, v8, v9);
    v10 = OUTLINED_FUNCTION_17_0();
    v11 = OUTLINED_FUNCTION_147_2(v10);
    if (v12)
    {
      a4(v11);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_38();
    }
    else
    {
      sub_1A56E9774();
      v13 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_84(v13, v14);
      OUTLINED_FUNCTION_15_35(v15, v16);
      OUTLINED_FUNCTION_11_20(v17, 107);
      OUTLINED_FUNCTION_23();
    }
  }
  OUTLINED_FUNCTION_170_2();
}

void sub_1A57405D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_12_32();
  sub_1A576F59C(v0, v1, v2, v3);
  OUTLINED_FUNCTION_57_13(v4 & 0xFFFFFFFFFFFFFFLL);
  OUTLINED_FUNCTION_23_6();
}

uint64_t sub_1A5740644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[40];

  sub_1A5752970(a1, a2, a3);
  if (!v3)
  {
    OUTLINED_FUNCTION_264_0(v5, v6, v7, v8, v9, v10);
    OUTLINED_FUNCTION_17_0();
    sub_1A56E6FE8((uint64_t)v24);
    if (v11)
    {
      v12._countAndFlagsBits = sub_1A594B4B4();
      LOBYTE(v13) = MailboxAttribute.init(rawValue:)(v12);
      if (v13 != 7)
      {
        v4 = v13;
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_52();
        return v4;
      }
      sub_1A594C720();
      swift_bridgeObjectRelease();
      sub_1A594B5F8();
      OUTLINED_FUNCTION_52();
      sub_1A594B5F8();
      v14 = 0xE600000000000000;
      sub_1A56E9774();
      v15 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_199_0(v15, v16);
    }
    else
    {
      sub_1A56E9774();
      v18 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_216_0(v18, v19);
      v14 = 0xEC00000038465455;
    }
    *(_QWORD *)(v17 + 8) = v14;
    *(_QWORD *)(v17 + 16) = 0xD000000000000020;
    OUTLINED_FUNCTION_66_8();
    *(_QWORD *)(v20 + 24) = v22;
    *(_QWORD *)(v20 + 32) = v21;
    OUTLINED_FUNCTION_46_11();
    OUTLINED_FUNCTION_23();
  }
  return v4;
}

uint64_t sub_1A57407A0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_217_0();
  sub_1A573F1BC();
  return OUTLINED_FUNCTION_57_13(v0);
}

void sub_1A5740840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1A5752A0C(a1, a2, a3);
  if (!v3)
  {
    OUTLINED_FUNCTION_77_7(v4, v5, v6, v7);
    v8 = OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_147_2(v8);
    if (!v9)
    {
      sub_1A56E9774();
      v10 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_84(v10, v11);
      OUTLINED_FUNCTION_15_35(v12, v13);
      OUTLINED_FUNCTION_11_20(v14, 2455);
    }
    OUTLINED_FUNCTION_17_4();
  }
  OUTLINED_FUNCTION_164_2();
  OUTLINED_FUNCTION_86_3();
}

double sub_1A57408C8@<D0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  int v12;
  char v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[16];
  uint64_t (*v17)();
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  void (*v25)();
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  int v36;
  char v37;

  v28 = a1;
  v29 = a2;
  v30 = a3;
  v31 = a4;
  v25 = sub_1A5750378;
  v26 = &v27;
  v20 = a1;
  v21 = a2;
  v22 = a3;
  v23 = a4;
  v17 = sub_1A57503A8;
  v18 = &v19;
  OUTLINED_FUNCTION_8_42();
  sub_1A573F404((void (*)(uint64_t, uint64_t))sub_1A5750390, (uint64_t)v24, (uint64_t)sub_1A574A7CC, 0, (uint64_t)sub_1A575088C, (uint64_t)v16, v9, v8, v7);
  if (!v5)
  {
    v11 = v35;
    v12 = v36;
    v13 = v37;
    result = *(double *)&v32;
    v14 = v33;
    v15 = v34;
    *(_OWORD *)a5 = v32;
    *(_OWORD *)(a5 + 16) = v14;
    *(_OWORD *)(a5 + 32) = v15;
    *(_QWORD *)(a5 + 48) = v11;
    *(_BYTE *)(a5 + 60) = v13;
    *(_DWORD *)(a5 + 56) = v12;
  }
  return result;
}

unint64_t sub_1A57409A0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;

  v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1A5718F9C();
      v9 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v9, v10);
      return OUTLINED_FUNCTION_133_2();
    }
    v8 = result;
    OUTLINED_FUNCTION_1_2();
    sub_1A574E6A8(v8, v5, a3, a4, &v11);
    if (v4)
    {
      OUTLINED_FUNCTION_16_32();
      OUTLINED_FUNCTION_109_3();
      return OUTLINED_FUNCTION_133_2();
    }
    OUTLINED_FUNCTION_2_4();
    return v11;
  }
  return result;
}

void sub_1A5740A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  _QWORD *v8;

  OUTLINED_FUNCTION_140_1();
  if (!__OFADD__(v1, 1))
  {
    v3 = v2;
    if (v1 + 1 >= v2)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v8 = v3;
    }
    else
    {
      OUTLINED_FUNCTION_1_2();
      v4 = OUTLINED_FUNCTION_263_0();
      sub_1A574E6A8(v4, v5, v6, 2, v7);
      if (!v0)
      {
        OUTLINED_FUNCTION_2_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_68_4();
      OUTLINED_FUNCTION_106_2();
    }
    OUTLINED_FUNCTION_80_4();
LABEL_7:
    OUTLINED_FUNCTION_136_2();
    return;
  }
  __break(1u);
}

void sub_1A5740B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  _QWORD *v8;

  OUTLINED_FUNCTION_140_1();
  if (!__OFADD__(v1, 1))
  {
    v3 = v2;
    if (v1 + 1 >= v2)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v8 = v3;
    }
    else
    {
      OUTLINED_FUNCTION_1_2();
      v4 = OUTLINED_FUNCTION_263_0();
      sub_1A574E6A8(v4, v5, v6, 4, v7);
      if (!v0)
      {
        OUTLINED_FUNCTION_2_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_68_4();
      OUTLINED_FUNCTION_106_2();
    }
    OUTLINED_FUNCTION_80_4();
LABEL_7:
    OUTLINED_FUNCTION_136_2();
    return;
  }
  __break(1u);
}

uint64_t sub_1A5740BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_55_10(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_8_48();
  sub_1A576F708(v7, v8, v9, v10);
  return OUTLINED_FUNCTION_57_13(v11 & 0xFFFFFFFFFFFFFFLL);
}

void sub_1A5740C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_55_10(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_8_48();
  sub_1A576F8EC(v7, v8, v9, v10);
}

uint64_t sub_1A5740C80()
{
  uint64_t v0;

  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  sub_1A576FA1C(sub_1A5740D00, 0);
  return OUTLINED_FUNCTION_57_13(v0);
}

uint64_t sub_1A5740D00@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  char v8;

  result = sub_1A5749BF8(a1, a2, a3);
  if (!v4)
  {
    *(_QWORD *)a4 = result;
    *(_QWORD *)(a4 + 8) = v7;
    *(_BYTE *)(a4 + 16) = v8;
  }
  return result;
}

void sub_1A5740D2C()
{
  sub_1A5740D48();
}

void sub_1A5740D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_197_1();
  if (!__OFADD__(v1, 1))
  {
    if (v1 + 1 >= v2)
    {
      sub_1A5718F9C();
      v4 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v4, v5);
    }
    else
    {
      v3 = OUTLINED_FUNCTION_1_2();
      OUTLINED_FUNCTION_185_1(v3);
      if (!v0)
      {
        v6 = OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_80_5(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_16_32();
      OUTLINED_FUNCTION_109_3();
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_141_1();
    return;
  }
  __break(1u);
}

double sub_1A5740DE8@<D0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, _OWORD *a5@<X8>)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E60);
  v10 = OUTLINED_FUNCTION_252_0();
  *(_OWORD *)(v10 + 16) = xmmword_1A59ABD20;
  *(_QWORD *)(v10 + 32) = sub_1A5749A00;
  *(_QWORD *)(v10 + 40) = 0;
  *(_QWORD *)(v10 + 48) = sub_1A5749A1C;
  *(_QWORD *)(v10 + 56) = 0;
  v11 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = a4;
  v12 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v12 + 16) = sub_1A57503D8;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v10 + 64) = sub_1A57503F0;
  *(_QWORD *)(v10 + 72) = v12;
  v13 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = a4;
  v14 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v14 + 16) = sub_1A5750408;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v10 + 80) = sub_1A575072C;
  *(_QWORD *)(v10 + 88) = v14;
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_102_1();
  sub_1A577094C(v15, v16, v17, v18, v19, v20, 1909);
  swift_setDeallocating();
  sub_1A5774244();
  if (!v26)
  {
    result = *(double *)&v22;
    *a5 = v22;
    a5[1] = v23;
    a5[2] = v24;
    a5[3] = v25;
  }
  return result;
}

void sub_1A5740F84(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1A5741598(a1, a2, a3);
  if (!v4)
  {
    *(_QWORD *)a4 = v6;
    *(_QWORD *)(a4 + 8) = v7;
    *(_DWORD *)(a4 + 16) = v8;
    *(_WORD *)(a4 + 20) = WORD2(v8);
    *(_BYTE *)(a4 + 22) = BYTE6(v8);
  }
}

void sub_1A5740FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = OUTLINED_FUNCTION_177_2(a1, a2, a3, a4);
  if (!v4)
    OUTLINED_FUNCTION_62_9(v5, v6, v7);
  OUTLINED_FUNCTION_1();
}

void sub_1A5740FE8(uint64_t *a1@<X8>)
{
  sub_1A5743E80((uint64_t (*)(void))sub_1A57478C0, a1);
}

void sub_1A5741004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = OUTLINED_FUNCTION_177_2(a1, a2, a3, a4);
  if (!v5)
  {
    *v4 = v6;
    v4[1] = v7;
  }
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5741024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  OUTLINED_FUNCTION_111_1(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_8_48();
  sub_1A576FB88(v7, v8);
  return OUTLINED_FUNCTION_57_13(v9 & 0xFFFFFFFFFFLL | (((v9 >> 40) & 1) << 40));
}

uint64_t sub_1A57410A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_55_10(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_8_48();
  sub_1A576F59C(v7, v8, v9, v10);
  return OUTLINED_FUNCTION_57_13(v11 & 0xFFFFFFFFFFFFFFLL);
}

void sub_1A5741118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  OUTLINED_FUNCTION_65_7();
  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_40_17();
  sub_1A576FCE0(v2, v3, v4, v5, v6);
  if (!v1)
    sub_1A56E06B0(&v7, v0);
}

void sub_1A57411C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_55_10(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_8_48();
  sub_1A576F8EC(v7, v8, v9, v10);
}

void sub_1A574122C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_12_32();
  sub_1A576F8EC(v0, v1, v2, v3);
}

void sub_1A5741294(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1A5752A7C(a1, a2, a3);
  if (!v4)
  {
    OUTLINED_FUNCTION_77_7(v6, v7, v8, v9);
    v10 = OUTLINED_FUNCTION_17_0();
    v11 = OUTLINED_FUNCTION_147_2(v10);
    if (v12)
    {
      a4(v11);
      OUTLINED_FUNCTION_38();
    }
    else
    {
      sub_1A56E9774();
      v13 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_84(v13, v14);
      OUTLINED_FUNCTION_15_35(v15, v16);
      OUTLINED_FUNCTION_11_20(v17, 579);
    }
    OUTLINED_FUNCTION_23();
  }
  OUTLINED_FUNCTION_170_2();
}

void sub_1A5741338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1A5752A98(a1, a2, a3);
  if (!v3)
  {
    OUTLINED_FUNCTION_77_7(v4, v5, v6, v7);
    v8 = OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_147_2(v8);
    if (!v9)
    {
      sub_1A56E9774();
      v10 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_84(v10, v11);
      OUTLINED_FUNCTION_15_35(v12, v13);
      OUTLINED_FUNCTION_11_20(v14, 539);
    }
    OUTLINED_FUNCTION_17_4();
  }
  OUTLINED_FUNCTION_164_2();
  OUTLINED_FUNCTION_86_3();
}

void sub_1A57413C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  OUTLINED_FUNCTION_140_1();
  a19 = v22;
  a20 = v24;
  v26 = v25 + 1;
  if (!__OFADD__(v25, 1))
  {
    v27 = v23;
    if (v26 >= v23)
    {
      sub_1A5718F9C();
      v28 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v28, v29);
    }
    else
    {
      OUTLINED_FUNCTION_87_5();
      OUTLINED_FUNCTION_1_2();
      sub_1A574B82C(v21, v26, v27, &a9);
      if (!v20)
      {
        OUTLINED_FUNCTION_2_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_16_32();
      OUTLINED_FUNCTION_108_3();
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_136_2();
    return;
  }
  __break(1u);
}

uint64_t ExceededLiteralSizeLimitError.actualCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*ExceededLiteralSizeLimitError.actualCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ExceededLiteralSizeLimitError.maximumCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ExceededLiteralSizeLimitError.maximumCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*ExceededLiteralSizeLimitError.maximumCount.modify())(_QWORD)
{
  return nullsub_1;
}

void type metadata accessor for ExceededLiteralSizeLimitError()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A574149C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_retain();
  return a1;
}

_QWORD *sub_1A57414D0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

_OWORD *sub_1A5741524(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void type metadata accessor for GrammarParser()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A574156C(uint64_t a1)
{
  OUTLINED_FUNCTION_266_0();
  return a1;
}

void sub_1A5741598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21[13];

  v8 = __OFADD__(a2, 1);
  v9 = a2 + 1;
  if (!v8)
  {
    v21[3] = v7;
    v21[10] = v3;
    v21[11] = v5;
    v21[12] = v6;
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      v18 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v18, v19);
    }
    else
    {
      OUTLINED_FUNCTION_87_5();
      v10 = sub_1A57638D8(v21);
      if (!v4)
      {
        OUTLINED_FUNCTION_80_5((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17, v20, v21[0]);
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_108_3();
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_23_6();
    return;
  }
  __break(1u);
}

void sub_1A5741634(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;

  sub_1A5751898();
  if (!v4)
  {
    sub_1A574052C(a1, a2, a3, a4);
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B49C();
    swift_bridgeObjectRelease();
  }
}

void sub_1A574170C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;

  sub_1A574052C(a1, a2, a3, a4);
  if (!v4)
  {
    sub_1A594B49C();
    swift_bridgeObjectRelease();
  }
}

void sub_1A574175C()
{
  uint64_t v0;

  sub_1A5751898();
  if (!v0)
  {
    if (qword_1EE7A9090 != -1)
      swift_once();
    swift_beginAccess();
    swift_retain();
  }
}

uint64_t sub_1A5741814(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  __int16 v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;

  v4 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v4 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v12 = a3;
      return swift_willThrow();
    }
    v6 = result;
    v7 = *(_QWORD *)result;
    v8 = *(_QWORD *)(result + 8);
    v9 = *(_DWORD *)(result + 16);
    v10 = *(_WORD *)(result + 20);
    v11 = *(_BYTE *)(result + 22);
    swift_retain();
    sub_1A5741960(v6, v4, a3, (uint64_t)&v13);
    if (v3)
    {
      swift_release();
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v9;
      *(_WORD *)(v6 + 20) = v10;
      *(_BYTE *)(v6 + 22) = v11;
      return swift_willThrow();
    }
    swift_release();
    return v13;
  }
  return result;
}

void sub_1A574191C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1A574175C();
  if (!v1)
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    *(_DWORD *)(a1 + 16) = v5;
    *(_WORD *)(a1 + 20) = WORD2(v5);
    *(_BYTE *)(a1 + 22) = BYTE6(v5);
  }
}

uint64_t sub_1A5741960@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  unsigned int v40;
  unsigned __int16 v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[24];
  uint64_t v46;
  uint64_t v47[8];

  if (__OFADD__(a2, 1))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    return result;
  }
  if (a2 + 1 >= a3)
  {
    sub_1A5718F9C();
    swift_allocError();
    *v18 = a3;
    return swift_willThrow();
  }
  v6 = result;
  v7 = *(_QWORD *)result;
  v36 = *(unsigned int *)(result + 12);
  v37 = *(unsigned int *)(result + 8);
  v34 = *(unsigned __int16 *)(result + 20);
  v35 = *(unsigned int *)(result + 16);
  v33 = *(unsigned __int8 *)(result + 22);
  result = ByteBufferView.init(_:)(*(_QWORD *)result, v37 | (v36 << 32), v35 | (v34 << 32) | (v33 << 48), (uint64_t)&v38);
  v9 = v43;
  v8 = v44;
  if (v43 == v44)
  {
LABEL_16:
    swift_retain_n();
    sub_1A553E5DC((uint64_t)&v38);
    sub_1A571EA80();
    swift_allocError();
    swift_willThrow();
    swift_release();
    *(_QWORD *)v6 = v7;
    *(_DWORD *)(v6 + 8) = v37;
    *(_DWORD *)(v6 + 12) = v36;
    *(_DWORD *)(v6 + 16) = v35;
    *(_WORD *)(v6 + 20) = v34;
    *(_BYTE *)(v6 + 22) = v33;
    return swift_willThrow();
  }
  v10 = v39;
  v11 = v40 - v39;
  if (v40 < v39)
    goto LABEL_29;
  v12 = v42 | ((unint64_t)v41 << 8);
  v13 = (_QWORD *)(v38 + 24);
  result = swift_beginAccess();
  v14 = v12 + v10;
  while (1)
  {
    if (v9 >= v8)
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v15 = v9 - v10;
    if (__OFSUB__(v9, v10))
      goto LABEL_25;
    if (v15 < 0)
      goto LABEL_26;
    if (v15 >= v11)
      goto LABEL_27;
    v16 = *(unsigned __int8 *)(*v13 + v14 + v15);
    if ((v16 | 4) != 0x2F)
    {
      result = isalnum(v16);
      if (v16 != 61 && (_DWORD)result == 0)
        break;
    }
    if (v8 == ++v9)
      goto LABEL_16;
  }
  swift_retain_n();
  sub_1A553E5DC((uint64_t)&v38);
  ByteBufferView.init(_:)(v7, v37 | (v36 << 32), v35 | (v34 << 32) | (v33 << 48), (uint64_t)v45);
  swift_retain();
  sub_1A553E5DC((uint64_t)v45);
  result = v9 - v46;
  if (__OFSUB__(v9, v46))
    goto LABEL_30;
  result = ByteBuffer.readSlice(length:)(result);
  if (!result)
    goto LABEL_31;
  v21 = result;
  v22 = v19;
  v23 = v20;
  swift_release();
  ByteBufferView.init(_:)(v21, v22, v23 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v47);
  swift_retain();
  sub_1A5659640(v47, 0);
  if (v4)
  {
    sub_1A553E5DC((uint64_t)v47);
    sub_1A594C720();
    sub_1A594B5F8();
    v47[7] = (uint64_t)v4;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    sub_1A594C924();
    sub_1A56E9774();
    swift_allocError();
    *v25 = 0;
    v25[1] = 0xE000000000000000;
    v25[2] = 0xD000000000000020;
    v25[3] = 0x80000001A5A0F5E0;
    v25[4] = 187;
    swift_willThrow();

    return swift_release();
  }
  else
  {
    v26 = v24;
    sub_1A553E5DC((uint64_t)v47);
    v27 = sub_1A56D78FC(v26, (uint64_t (*)(_QWORD))j_j__malloc, (uint64_t)j_j__realloc, (uint64_t)j_j__free, (uint64_t)sub_1A566C0C4);
    v29 = v28;
    v31 = v30;
    swift_release();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a4 = v27;
    *(_QWORD *)(a4 + 8) = v29;
    *(_DWORD *)(a4 + 16) = v31;
    *(_WORD *)(a4 + 20) = WORD2(v31);
    *(_BYTE *)(a4 + 22) = BYTE6(v31);
  }
  return result;
}

void sub_1A5741D40()
{
  sub_1A5743630();
}

void sub_1A5741D54()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A5740D48();
  if (!v0)
  {
    if (HIDWORD(v1) < v1)
    {
      __break(1u);
    }
    else
    {
      swift_beginAccess();
      swift_retain();
      sub_1A594B538();
      swift_release_n();
    }
  }
}

uint64_t sub_1A5741E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  OUTLINED_FUNCTION_151_2();
  OUTLINED_FUNCTION_0_103();
  if (!v7)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF00);
    v13 = a7;
    v14 = OUTLINED_FUNCTION_252_0();
    *(_OWORD *)(v14 + 16) = xmmword_1A59ABDA0;
    v15 = a6;
    v16 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    v16[2] = a4;
    v16[3] = a5;
    v16[4] = v15;
    v16[5] = v13;
    v17 = OUTLINED_FUNCTION_20_1();
    *(_QWORD *)(v17 + 16) = sub_1A574EE0C;
    *(_QWORD *)(v17 + 24) = v16;
    *(_QWORD *)(v14 + 32) = sub_1A574EE24;
    *(_QWORD *)(v14 + 40) = v17;
    v18 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    v18[2] = a4;
    v18[3] = a5;
    v18[4] = v15;
    v18[5] = v13;
    v19 = OUTLINED_FUNCTION_20_1();
    *(_QWORD *)(v19 + 16) = sub_1A574EE3C;
    *(_QWORD *)(v19 + 24) = v18;
    *(_QWORD *)(v14 + 48) = sub_1A5750718;
    *(_QWORD *)(v14 + 56) = v19;
    *(_QWORD *)(v14 + 64) = sub_1A57421EC;
    *(_QWORD *)(v14 + 72) = 0;
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_102_1();
    sub_1A57712F4();
    OUTLINED_FUNCTION_262_0();
    swift_setDeallocating();
    sub_1A5774244();
  }
  return v8;
}

void sub_1A5741FC0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  sub_1A5751974((uint64_t)a1, a2, a3);
  if (!v3)
  {
    sub_1A5740D48();
    v8 = v7;
    sub_1A575DBEC(a1, a2, a3);
    if (HIDWORD(v8) < v8)
    {
      __break(1u);
    }
    else if (HIDWORD(v8) == (_DWORD)v8)
    {
      sub_1A56E9774();
      swift_allocError();
      *v9 = 0x6E776F6E6B6E55;
      v9[1] = 0xE700000000000000;
      v9[2] = 0xD000000000000020;
      v9[3] = 0x80000001A5A0F5E0;
      v9[4] = 282;
      swift_willThrow();
      swift_release();
    }
  }
}

uint64_t sub_1A57420EC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751974((uint64_t)a1, a2, a3);
  if (!v7)
  {
    swift_retain();
    a6 = sub_1A5759C1C(a1, a2, a3, a4, a5, a6, a7);
    sub_1A575DBEC(a1, a2, a3);
  }
  return a6;
}

unint64_t sub_1A57421C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1A575DBEC(a1, a2, a3);
  return 0xF000000000000007;
}

unint64_t sub_1A57421EC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;

  result = sub_1A57421C8(a1, *a2, a2[1]);
  if (!v3)
  {
    *(_QWORD *)a3 = result;
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_BYTE *)(a3 + 24) = v8 & 1;
  }
  return result;
}

uint64_t sub_1A5742228@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(uint64_t, _QWORD, _QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;

  result = a3(a1, *a2, a2[1]);
  if (!v4)
  {
    *(_QWORD *)a4 = result;
    *(_QWORD *)(a4 + 8) = v7;
    *(_QWORD *)(a4 + 16) = v8;
    *(_BYTE *)(a4 + 24) = v9 & 1;
  }
  return result;
}

void sub_1A574226C()
{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_24_24();
  OUTLINED_FUNCTION_8_45();
  OUTLINED_FUNCTION_14_34();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9550);
    v1 = (__n128 *)OUTLINED_FUNCTION_20_1();
    v2 = OUTLINED_FUNCTION_12_41(v1, (__n128)xmmword_1A59ABD10);
    v9 = sub_1A5742348(v2, v3, v4, v5, v6, v7, v8);
    v17 = OUTLINED_FUNCTION_88_4(v9, v10, v11, v12, v13, v14, v15, v16, v19);
    MEMORY[0x1E0C80A78](v17);
    OUTLINED_FUNCTION_4_60();
    OUTLINED_FUNCTION_7_41();
    sub_1A5752098();
    OUTLINED_FUNCTION_6_50();
    v18 = OUTLINED_FUNCTION_184_1();
    OUTLINED_FUNCTION_204_0(v18);
  }
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_32_17();
}

uint64_t sub_1A5742348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  OUTLINED_FUNCTION_111_1(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_8_48();
  sub_1A576FFD4(v7, v8);
  return OUTLINED_FUNCTION_57_13(v9 & 0xFFFFFFFFFFFFLL | ((HIWORD(v9) & 1) << 48));
}

void sub_1A57423D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  sub_1A5751898();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9558);
    v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1A59ABD10;
    sub_1A574258C();
    v4[0] = v4;
    *(_QWORD *)(v1 + 32) = v2;
    *(_QWORD *)(v1 + 40) = v3;
    v4[3] = v1;
    MEMORY[0x1E0C80A78](v2);
    sub_1A57521B4();
    sub_1A5751898();
  }
}

void sub_1A574258C()
{
  uint64_t v0;
  uint64_t inited;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_201_0();
  OUTLINED_FUNCTION_22_33();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E50);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59AC380;
  *(_QWORD *)(inited + 32) = sub_1A5742A68;
  *(_QWORD *)(inited + 40) = 0;
  *(_QWORD *)(inited + 48) = sub_1A5742A84;
  *(_QWORD *)(inited + 56) = 0;
  *(_QWORD *)(inited + 64) = sub_1A5742AA0;
  *(_QWORD *)(inited + 72) = 0;
  *(_QWORD *)(inited + 80) = sub_1A5742ABC;
  *(_QWORD *)(inited + 88) = 0;
  *(_QWORD *)(inited + 96) = sub_1A5742AD8;
  *(_QWORD *)(inited + 104) = 0;
  *(_QWORD *)(inited + 112) = sub_1A5742AF4;
  *(_QWORD *)(inited + 120) = 0;
  *(_QWORD *)(inited + 128) = sub_1A5742B10;
  *(_QWORD *)(inited + 136) = 0;
  v2 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v2);
  v3 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v3 + 16) = sub_1A5750200;
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(inited + 144) = sub_1A574EC40;
  *(_QWORD *)(inited + 152) = v3;
  OUTLINED_FUNCTION_12_1();
  v4 = OUTLINED_FUNCTION_5_60();
  sub_1A577147C(v4, v5, v6, v7, v8, v9, 398);
  OUTLINED_FUNCTION_15_41();
  sub_1A5774244();
  OUTLINED_FUNCTION_196_1();
}

unint64_t sub_1A57426AC(unint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  int v16;
  uint64_t *v17;
  char v18;
  __int16 v19;

  v9 = a6 + 1;
  if (!__OFADD__(a6, 1))
  {
    if (v9 >= a7)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v17 = a7;
    }
    else
    {
      v7 = a3;
      v13 = result;
      v14 = *(void **)a5;
      v15 = *(_QWORD *)(a5 + 8);
      v16 = *(_DWORD *)(a5 + 16);
      v18 = *(_BYTE *)(a5 + 22);
      v19 = *(_WORD *)(a5 + 20);
      swift_retain();
      sub_1A576B64C((void **)a5, v9, a7, 0, v13, a2, 0);
      if (!v8)
      {
        swift_release();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        return v7;
      }
      swift_release();
      *(_QWORD *)a5 = v14;
      *(_QWORD *)(a5 + 8) = v15;
      *(_DWORD *)(a5 + 16) = v16;
      *(_WORD *)(a5 + 20) = v19;
      *(_BYTE *)(a5 + 22) = v18;
    }
    swift_willThrow();
    return v7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A57427DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57426AC(0x6C6C415CuLL, 0xE400000000000000, 1819033948, 0xE400000000000000, a1, a2, a3);
}

unint64_t sub_1A5742814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57426AC(0x657669686372415CuLL, 0xE800000000000000, 0x657669686372415CLL, 0xE800000000000000, a1, a2, a3);
}

unint64_t sub_1A574285C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57426AC(0x7374666172445CuLL, 0xE700000000000000, 0x7374666172445CLL, 0xE700000000000000, a1, a2, a3);
}

unint64_t sub_1A57428A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57426AC(0x64656767616C465CuLL, 0xE800000000000000, 0x64656767616C465CLL, 0xE800000000000000, a1, a2, a3);
}

unint64_t sub_1A57428EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57426AC(0x6B6E754A5CuLL, 0xE500000000000000, 0x6B6E754A5CLL, 0xE500000000000000, a1, a2, a3);
}

unint64_t sub_1A574292C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57426AC(0x746E65535CuLL, 0xE500000000000000, 0x746E65535CLL, 0xE500000000000000, a1, a2, a3);
}

unint64_t sub_1A574296C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57426AC(0x68736172545CuLL, 0xE600000000000000, 0x68736172545CLL, 0xE600000000000000, a1, a2, a3);
}

void sub_1A57429AC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;

  sub_1A5751898();
  if (!v4)
  {
    sub_1A574052C(a1, a2, a3, a4);
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
  }
}

void sub_1A5742A68()
{
  sub_1A5746B24();
}

void sub_1A5742A84()
{
  sub_1A5746B24();
}

void sub_1A5742AA0()
{
  sub_1A5746B24();
}

void sub_1A5742ABC()
{
  sub_1A5746B24();
}

void sub_1A5742AD8()
{
  sub_1A5746B24();
}

void sub_1A5742AF4()
{
  sub_1A5746B24();
}

void sub_1A5742B10()
{
  sub_1A5746B24();
}

void sub_1A5742B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1A5752CF8(a1, a2, a3);
  if (!v3)
  {
    OUTLINED_FUNCTION_77_7(v4, v5, v6, v7);
    v8 = OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_147_2(v8);
    if (!v9)
    {
      sub_1A56E9774();
      v10 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_84(v10, v11);
      OUTLINED_FUNCTION_15_35(v12, v13);
      OUTLINED_FUNCTION_11_20(v14, 2469);
    }
    OUTLINED_FUNCTION_17_4();
  }
  OUTLINED_FUNCTION_164_2();
  OUTLINED_FUNCTION_86_3();
}

void sub_1A5742BB4(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, _QWORD *a6@<X8>)
{
  OUTLINED_FUNCTION_172_1(a1, a2, a3, a4, a5, a6);
  OUTLINED_FUNCTION_9();
}

void sub_1A5742BE4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_1A5745B9C(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1A5742C0C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_1A5745D40(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1A5742C34(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_1A5745734(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1A5742C5C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_1A574585C(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1A5742C84(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_1A5745984(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1A5742CAC(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, _QWORD *a6@<X8>)
{
  OUTLINED_FUNCTION_172_1(a1, a2, a3, a4, a5, a6);
  OUTLINED_FUNCTION_9();
}

void sub_1A5742CDC(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, _QWORD *a6@<X8>, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v30;
  char v31[16];
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;

  v34 = a6;
  OUTLINED_FUNCTION_233_0();
  v14 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a4;
  v14[5] = a5;
  v32 = a7;
  v33 = v14;
  OUTLINED_FUNCTION_30();
  v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796020);
  v16 = sub_1A5760D2C(v9, v8, a1, a8, (uint64_t)v31, v15);
  OUTLINED_FUNCTION_17_4();
  if (v30)
  {
LABEL_18:
    OUTLINED_FUNCTION_132_2();
    return;
  }
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
    v25 = v34;
LABEL_17:
    OUTLINED_FUNCTION_52();
    sub_1A594B538();
    OUTLINED_FUNCTION_198_1();
    OUTLINED_FUNCTION_72();
    *v25 = v17;
    v25[1] = v16;
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_90();
  v18 = 0;
  v19 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v20 = *(_QWORD *)(v16 + 8 * v18 + 32);
    v21 = *(_QWORD *)(v20 + 16);
    v22 = *(_QWORD *)(v19 + 16);
    if (__OFADD__(v22, v21))
      break;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_184();
    if (!swift_isUniquelyReferenced_nonNull_native() || v22 + v21 > *(_QWORD *)(v19 + 24) >> 1)
    {
      sub_1A569D850();
      v19 = v23;
    }
    if (*(_QWORD *)(v20 + 16))
    {
      v24 = *(_QWORD *)(v19 + 16);
      v25 = v34;
      if ((*(_QWORD *)(v19 + 24) >> 1) - v24 < v21)
        goto LABEL_21;
      memcpy((void *)(v19 + v24 + 32), (const void *)(v20 + 32), v21);
      if (v21)
      {
        v26 = *(_QWORD *)(v19 + 16);
        v27 = __OFADD__(v26, v21);
        v28 = v26 + v21;
        if (v27)
          goto LABEL_22;
        *(_QWORD *)(v19 + 16) = v28;
      }
    }
    else
    {
      v25 = v34;
      if (v21)
        goto LABEL_20;
    }
    OUTLINED_FUNCTION_41();
    OUTLINED_FUNCTION_38();
    if (v17 == ++v18)
    {
      OUTLINED_FUNCTION_52();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
}

uint64_t sub_1A5742E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  void (*v16)();
  _QWORD *v17;

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a6;
  v11[5] = a7;
  v16 = sub_1A575063C;
  v17 = v11;
  swift_retain();
  sub_1A576F8C0((uint64_t)sub_1A574E910, (uint64_t)v15, (uint64_t)sub_1A5742C0C, 0);
  v13 = v12;
  swift_release();
  return v13;
}

void sub_1A5742F94(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, _QWORD *a6@<X8>)
{
  OUTLINED_FUNCTION_172_1(a1, a2, a3, a4, a5, a6);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1A5742FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  void (*v16)();
  _QWORD *v17;

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a6;
  v11[5] = a7;
  v16 = sub_1A574EA3C;
  v17 = v11;
  swift_retain();
  sub_1A576F8C0((uint64_t)sub_1A574E910, (uint64_t)v15, (uint64_t)sub_1A5742C0C, 0);
  v13 = v12;
  swift_release();
  return v13;
}

void sub_1A57430BC(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, _QWORD *a6@<X8>)
{
  OUTLINED_FUNCTION_172_1(a1, a2, a3, a4, a5, a6);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1A57430EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  void (*v16)();
  _QWORD *v17;

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a6;
  v11[5] = a7;
  v16 = sub_1A575063C;
  v17 = v11;
  swift_retain();
  sub_1A576F8C0((uint64_t)sub_1A574E910, (uint64_t)v15, (uint64_t)sub_1A5742C0C, 0);
  v13 = v12;
  swift_release();
  return v13;
}

void sub_1A57431E4(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, _QWORD *a6@<X8>)
{
  OUTLINED_FUNCTION_172_1(a1, a2, a3, a4, a5, a6);
  OUTLINED_FUNCTION_9();
}

void sub_1A5743214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v11 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a6;
  v11[5] = a7;
  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_40_17();
  sub_1A576F8C0(v12, v13, v14, v15);
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_144_2();
}

void sub_1A57432E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  if (!__OFADD__(a2, 1))
  {
    OUTLINED_FUNCTION_140_1();
    a19 = v21;
    a20 = v22;
    v24 = v23;
    if (v25 >= v23)
    {
      sub_1A5718F9C();
      v28 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v28, v29);
    }
    else
    {
      OUTLINED_FUNCTION_87_5();
      sub_1A574335C(v26, v27, v24, &a9);
      if (!v20)
        goto LABEL_7;
      OUTLINED_FUNCTION_108_3();
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_136_2();
    return;
  }
  __break(1u);
}

uint64_t sub_1A574335C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned __int16 v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  result = sub_1A5760C00(a1, a2, a3, 32);
  if (v4)
    return result;
  v9 = v7;
  v25 = a4;
  v33 = HIDWORD(v7);
  result = ByteBufferView.init(_:)(result, v7, v8 & 0xFFFFFFFFFFFFFFLL, (uint64_t)&v26);
  v11 = v31;
  v10 = v32;
  if (v31 == v32)
  {
LABEL_15:
    swift_retain();
    result = sub_1A553E5DC((uint64_t)&v26);
    if (v33 >= v9)
    {
      swift_beginAccess();
      v21 = sub_1A594B538();
      v23 = v22;
      result = swift_release();
      *v25 = v21;
      v25[1] = v23;
      return result;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v12 = v27;
  v13 = v28 - v27;
  if (v28 < v27)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    return result;
  }
  v14 = v26;
  v15 = v30 | ((unint64_t)v29 << 8);
  result = swift_beginAccess();
  while (1)
  {
    if (v11 >= v10)
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v16 = v11 - v12;
    if (__OFSUB__(v11, v12))
      goto LABEL_21;
    if (v16 < 0)
      goto LABEL_22;
    if (v16 >= v13)
      goto LABEL_23;
    if ((*(_BYTE *)(*(_QWORD *)(v14 + 24) + v15 + v11) - 58) <= 0xF5u)
    {
      v17 = *(unsigned __int8 *)(*(_QWORD *)(v14 + 24) + v15 + v11) - 65;
      v18 = v17 > 0x25;
      v19 = (1 << v17) & 0x3F0000003FLL;
      if (v18 || v19 == 0)
        break;
    }
    if (v10 == ++v11)
      goto LABEL_15;
  }
  swift_retain();
  sub_1A553E5DC((uint64_t)&v26);
  sub_1A594C720();
  result = swift_bridgeObjectRelease();
  if (v33 < v9)
    goto LABEL_26;
  swift_beginAccess();
  swift_retain();
  sub_1A594B538();
  swift_release();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A56E9774();
  swift_allocError();
  *v24 = 0xD00000000000001BLL;
  v24[1] = 0x80000001A5A0FCA0;
  v24[2] = 0xD000000000000020;
  v24[3] = 0x80000001A5A0F5E0;
  v24[4] = 459;
  swift_willThrow();
  return swift_release();
}

void sub_1A5743630()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;

  OUTLINED_FUNCTION_189_1();
  OUTLINED_FUNCTION_101_3();
  v7 = v6;
  sub_1A5751974(v8, v9, v10);
  if (!v0)
  {
    sub_1A574052C(v5, v4, v3, v2);
    OUTLINED_FUNCTION_262_0();
    OUTLINED_FUNCTION_266_0();
    v11 = sub_1A56AB370(61, 0xE100000000000000, v1, (unint64_t)v2);
    v13 = v12;
    OUTLINED_FUNCTION_72();
    *(_QWORD *)v7 = v1;
    *(_QWORD *)(v7 + 8) = v2;
    *(_QWORD *)(v7 + 16) = v11;
    *(_BYTE *)(v7 + 24) = v13 & 1;
  }
}

void sub_1A57436D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  OUTLINED_FUNCTION_206_0();
  OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_219_0();
  sub_1A5751898();
  if (!v1)
  {
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_11_26();
    sub_1A575F9B8(v5);
    sub_1A575FAC0(v4, v3, v2);
    v8 = v6;
    swift_retain();
    OUTLINED_FUNCTION_11_26();
    v7 = sub_1A5760F1C();
    *(_QWORD *)v0 = v9;
    *(_QWORD *)(v0 + 8) = v10;
    *(_QWORD *)(v0 + 16) = v11;
    *(_QWORD *)(v0 + 24) = v12;
    *(_BYTE *)(v0 + 32) = v13;
    *(_BYTE *)(v0 + 33) = v8 & 1;
    *(_QWORD *)(v0 + 40) = v7;
  }
}

uint64_t sub_1A57437EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_22_33();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E48);
  v2 = OUTLINED_FUNCTION_232_0();
  *(_OWORD *)(v2 + 16) = xmmword_1A59ABD20;
  v3 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v3);
  v4 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v4 + 16) = sub_1A574EAC4;
  *(_QWORD *)(v4 + 24) = v0;
  *(_QWORD *)(v2 + 32) = sub_1A574EADC;
  *(_QWORD *)(v2 + 40) = v4;
  v5 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v5);
  v6 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v6 + 16) = sub_1A574EAF4;
  *(_QWORD *)(v6 + 24) = v0;
  *(_QWORD *)(v2 + 48) = sub_1A5750704;
  *(_QWORD *)(v2 + 56) = v6;
  *(_QWORD *)(v2 + 64) = sub_1A5743B28;
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 80) = sub_1A5743B44;
  *(_QWORD *)(v2 + 88) = 0;
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_5_60();
  sub_1A5771498();
  if (!v8)
    OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_15_41();
  sub_1A5774244();
  return v1;
}

void sub_1A5743938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
  {
    swift_retain();
    sub_1A575B368(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_1A57439E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
  {
    swift_retain();
    sub_1A575B368(a1, a2, a3, a4, a5, a6, a7);
  }
}

uint64_t sub_1A5743A94()
{
  sub_1A5751898();
  return 0;
}

uint64_t sub_1A5743ADC()
{
  sub_1A5751898();
  return 1;
}

void sub_1A5743B28()
{
  sub_1A5743B60();
}

void sub_1A5743B44()
{
  sub_1A5743B60();
}

void sub_1A5743B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  char v5;

  OUTLINED_FUNCTION_146_2();
  v3 = v2();
  if (!v1)
  {
    *(_QWORD *)v0 = v3;
    *(_QWORD *)(v0 + 8) = v4;
    *(_BYTE *)(v0 + 16) = v5;
  }
  OUTLINED_FUNCTION_40_16();
}

uint64_t sub_1A5743B88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(uint64_t, _QWORD, _QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  char v8;

  result = a3(a1, *a2, a2[1]);
  if (!v4)
  {
    *(_QWORD *)a4 = result;
    *(_QWORD *)(a4 + 8) = v7;
    *(_BYTE *)(a4 + 16) = v8;
  }
  return result;
}

void sub_1A5743BC4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_22_33();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF40);
  v1 = OUTLINED_FUNCTION_232_0();
  *(_OWORD *)(v1 + 16) = xmmword_1A59ABD40;
  v2 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v2);
  v3 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v3 + 16) = sub_1A574EC24;
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(v1 + 32) = sub_1A574EC40;
  *(_QWORD *)(v1 + 40) = v3;
  v4 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v4);
  v5 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v5 + 16) = sub_1A574EC54;
  *(_QWORD *)(v5 + 24) = v0;
  *(_QWORD *)(v1 + 48) = sub_1A574EC40;
  *(_QWORD *)(v1 + 56) = v5;
  OUTLINED_FUNCTION_87();
  v6 = OUTLINED_FUNCTION_5_60();
  sub_1A577161C(v6, v7, v8, v9, v10, v11, 555);
  OUTLINED_FUNCTION_15_41();
  sub_1A5774244();
  OUTLINED_FUNCTION_144_2();
}

uint64_t sub_1A5743CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v23;

  swift_retain();
  v15 = sub_1A5754838(a1, a2, a3, a4, a5, a6, a7);
  v17 = v16;
  if (v7)
    return v15;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18 = sub_1A56C7FA0(v15, v17);
  v20 = v19;
  result = swift_bridgeObjectRelease();
  if (v20)
  {
    if (v18 != 92 || v20 != 0xE100000000000000)
    {
      v23 = sub_1A594CD38();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
        return v15;
      __break(1u);
    }
    swift_bridgeObjectRelease();
    return v15;
  }
  __break(1u);
  return result;
}

void sub_1A5743DC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_30_18();
  OUTLINED_FUNCTION_9_45();
  if (!v1)
  {
    OUTLINED_FUNCTION_35_15();
    sub_1A5743BC4();
    *v0 = v2;
    v0[1] = v3;
  }
  OUTLINED_FUNCTION_17_35();
}

uint64_t sub_1A5743E0C()
{
  sub_1A5751898();
  return 0;
}

void sub_1A5743E44()
{
  sub_1A5743BC4();
}

void sub_1A5743E64(uint64_t *a1@<X8>)
{
  sub_1A5743E80(sub_1A5743E0C, a1);
}

void sub_1A5743E80(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = a1();
  if (!v2)
  {
    *a2 = v4;
    a2[1] = v5;
  }
  OUTLINED_FUNCTION_40_16();
}

void sub_1A5743EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  __n128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;

  OUTLINED_FUNCTION_24_24();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  OUTLINED_FUNCTION_14_34();
  if (v0)
    goto LABEL_6;
  v42 = v10;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796290);
  v11 = (__n128 *)OUTLINED_FUNCTION_20_1();
  v12 = OUTLINED_FUNCTION_12_41(v11, (__n128)xmmword_1A59ABD10);
  v19 = sub_1A573EE0C(v12, v13, v14, v15, v16, v17, v18);
  v21 = v4;
  v23 = v22;
  v39 = v6;
  v40 = v21;
  v41 = v2;
  if (v24 >= v22)
  {
    v25 = v19;
    v26 = v20;
    OUTLINED_FUNCTION_176();
    v27 = *(_QWORD *)(v25 + 24) + ((v26 >> 24) & 0xFFFF00 | BYTE6(v26)) + v23;
    OUTLINED_FUNCTION_12_1();
    v28 = sub_1A594B538();
    v30 = v29;
    OUTLINED_FUNCTION_149_0();
    v11[2].n128_u64[0] = v28;
    v11[2].n128_u64[1] = v30;
    OUTLINED_FUNCTION_178_2();
    MEMORY[0x1E0C80A78](v31);
    OUTLINED_FUNCTION_89_3();
    *(_QWORD *)(v32 - 32) = v8;
    *(_QWORD *)(v32 - 24) = v39;
    *(_QWORD *)(v32 - 16) = v40;
    *(_QWORD *)(v32 - 8) = v41;
    v33 = OUTLINED_FUNCTION_7_41();
    sub_1A5751BA4(v33, v34, v35, v36, v37, v38);
    if (v27)
    {
      OUTLINED_FUNCTION_72_6();
    }
    else
    {
      OUTLINED_FUNCTION_6_50();
      *v42 = OUTLINED_FUNCTION_184_1();
    }
LABEL_6:
    OUTLINED_FUNCTION_85_3();
    OUTLINED_FUNCTION_32_17();
    return;
  }
  __break(1u);
}

void sub_1A5744030(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v8;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    if (v18 < v17)
    {
      __break(1u);
    }
    else
    {
      swift_beginAccess();
      swift_retain();
      v19 = sub_1A594B538();
      v21 = v20;
      swift_release_n();
      *a8 = v19;
      a8[1] = v21;
    }
  }
}

uint64_t *sub_1A5744140()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t *v14;
  uint64_t *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[8];
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[24];
  _BYTE v27[192];

  OUTLINED_FUNCTION_65_7();
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v19 = (uint64_t)sub_1A5744454;
  v20 = v21;
  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_40_17();
  result = sub_1A576F5C8(v14, v6, v7, v8, v9, v10, v11, v12, v13, 0x80000001A5A0F5E0, 653, v16, v17, (char)sub_1A5744484, (uint64_t)v18, v18[0], v18[1], v18[2], v18[3],
             v18[4],
             (id)v18[5],
             v18[6],
             v18[7],
             v19,
             (uint64_t)v20,
             v21[0],
             v21[1],
             v22,
             v23,
             v24,
             v25,
             v26[0],
             v26[1]);
  if (!v1)
  {
    sub_1A5687D00(v27, v26);
    return (uint64_t *)sub_1A5687D00(v26, v0);
  }
  return result;
}

_QWORD *sub_1A5744204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v8;
  _QWORD *result;
  _QWORD v18[2];
  int v19;
  char v20;
  __int128 v21;
  _QWORD v22[2];
  int v23;
  char v24;
  __int128 v25;

  swift_retain();
  result = sub_1A575B930(v22, a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v18[0] = v22[0];
    v18[1] = v22[1];
    v19 = v23;
    v20 = v24;
    v21 = v25;
    sub_1A574449C((uint64_t)v18);
    return sub_1A5687D00(v18, a8);
  }
  return result;
}

void sub_1A57442D0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_24_24();
  v2 = v1;
  OUTLINED_FUNCTION_34_19();
  v3 = OUTLINED_FUNCTION_160_2();
  sub_1A575AFD0(v3);
  if (!v0)
  {
    v14 = v16;
    v15 = v17;
    v12 = v19;
    v13 = v18;
    v11 = v20;
    v10 = v21;
    v43 = v22;
    v8 = v24;
    v9 = v23;
    v6 = v26;
    v7 = v25;
    OUTLINED_FUNCTION_87();
    v4 = OUTLINED_FUNCTION_160_2();
    sub_1A575FB4C(v4, v5);
    OUTLINED_FUNCTION_48();
    v27 = v35;
    v28 = v36;
    v29 = v37;
    v30 = v38;
    v31 = v39;
    v16 = v14;
    v17 = v15;
    v18 = v13;
    v19 = v12;
    v20 = v11;
    v21 = v10;
    v22 = v43;
    v23 = v9;
    v24 = v8;
    v25 = v7;
    v26 = v6;
    v32 = v40;
    v33 = v41;
    v34 = v42;
    sub_1A574EAA4((uint64_t)&v16);
    sub_1A5687D00(&v16, v2);
  }
  OUTLINED_FUNCTION_32_17();
}

void sub_1A5744454()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A57442D0();
}

_QWORD *sub_1A574446C@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return sub_1A576122C(*(_QWORD *(**)(_QWORD *__return_ptr))(v1 + 16), a1);
}

_QWORD *sub_1A5744484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5744204(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A574449C(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 64) & 0x1FFLL;
  *(_QWORD *)(result + 16) &= 0x1FFFFFFFFuLL;
  *(_QWORD *)(result + 64) = v1;
  return result;
}

uint64_t sub_1A57444B8()
{
  OUTLINED_FUNCTION_150_1();
  OUTLINED_FUNCTION_143_2();
  return 0;
}

uint64_t sub_1A57444E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_189_1();
  OUTLINED_FUNCTION_20_29();
  v0 = OUTLINED_FUNCTION_17_36();
  sub_1A575B34C(v0, v1, v2, v3, v4, v5, v6);
  return OUTLINED_FUNCTION_57_13(v7);
}

void sub_1A5744520()
{
  uint64_t v0;

  sub_1A5751898();
  if (!v0)
    sub_1A574FAF0(MEMORY[0x1E0DEE9D8]);
}

void sub_1A5744578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  _BYTE v15[40];
  uint64_t v16;

  sub_1A5740104();
  if (!v3)
  {
    ByteBufferView.init(_:)(v7, v8, v9 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v15);
    swift_retain();
    sub_1A56E6FE8((uint64_t)v15);
    if (v10)
    {
      v16 = v10;
      sub_1A5751974(a1, a2, a3);
      sub_1A5740090();
      if (v11)
      {
        sub_1A5714A30(v11, v12, v13 & 0xFFFFFFFFFFFFFFLL);
        swift_release();
      }
      swift_release();
    }
    else
    {
      sub_1A56E9774();
      swift_allocError();
      strcpy(v14, "Invalid UTF8");
      v14[13] = 0;
      *((_WORD *)v14 + 7) = -5120;
      *((_QWORD *)v14 + 2) = 0xD000000000000020;
      *((_QWORD *)v14 + 3) = 0x80000001A5A0F5E0;
      *((_QWORD *)v14 + 4) = 767;
      swift_willThrow();
      swift_release();
    }
  }
}

void sub_1A5744758()
{
  uint64_t v0;

  sub_1A5751898();
  if (!v0)
    sub_1A574FAF0(MEMORY[0x1E0DEE9D8]);
}

void sub_1A57447AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[7];
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;

  sub_1A5751898();
  if (!v7)
  {
    sub_1A5744578(a1, a2, a3);
    v16 = v15;
    v26 = v17;
    v27 = v18;
    v29 = v19;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7962D8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
    v21 = v26;
    *(_QWORD *)(inited + 32) = v16;
    *(_QWORD *)(inited + 40) = v21;
    v22 = v29;
    *(_QWORD *)(inited + 48) = v27;
    *(_QWORD *)(inited + 56) = v22;
    v28[0] = sub_1A574FAF0(inited);
    v28[1] = v23;
    v28[2] = v24;
    MEMORY[0x1E0C80A78](v28[0]);
    v25[2] = a4;
    v25[3] = a5;
    v25[4] = a6;
    v25[5] = a7;
    sub_1A57522E8(a1, a2, a3, (uint64_t)sub_1A574FDE0, (uint64_t)v25, (uint64_t)v28);
    sub_1A5751898();
  }
}

void sub_1A574496C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1A5751974(a3, a4, a5);
  if (!v5)
  {
    sub_1A5744578(a3, a4, a5);
    *a1 = v11;
    a1[1] = v12;
    *a2 = v13;
    a2[1] = v14;
  }
}

void sub_1A57449FC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1A5744758();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
  }
}

void sub_1A5744A28(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  OUTLINED_FUNCTION_34_19();
  v18 = sub_1A575FCA4(a1, a2, a3, a4, a5, a6, a7, v17, v39, v40, v42, v44, v46, v48, v50, v51, v53, v54, v55,
          v56,
          v57,
          v58,
          v59,
          v60);
  if (!v8)
  {
    v45 = v18;
    v47 = v19;
    v49 = v20;
    v52 = v21;
    v22 = OUTLINED_FUNCTION_119_3();
    v41 = sub_1A5744B1C(v22, v23, v24, v25, v26, v27, v28);
    v43 = v29;
    OUTLINED_FUNCTION_18_0();
    v30 = OUTLINED_FUNCTION_119_3();
    sub_1A575EFD4(v30, v31, v32, v33, v34, v35, v36);
    *(_QWORD *)a8 = v45;
    *(_QWORD *)(a8 + 8) = v47;
    *(_QWORD *)(a8 + 16) = v49;
    *(_QWORD *)(a8 + 24) = v52;
    *(_QWORD *)(a8 + 32) = v41;
    *(_QWORD *)(a8 + 40) = v43;
    *(_QWORD *)(a8 + 48) = v37;
    *(_BYTE *)(a8 + 56) = v38 & 1;
  }
  OUTLINED_FUNCTION_132_2();
}

uint64_t sub_1A5744B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_165_2(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_274_0(v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_273_0();
  OUTLINED_FUNCTION_182_2();
  OUTLINED_FUNCTION_220_0();
  return sub_1A573F77C(v14, v15, v16, v17, v18, v19, v20);
}

uint64_t sub_1A5744BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[20];

  sub_1A5751898();
  if (!v7)
  {
    MEMORY[0x1E0C80A78](v12);
    v21[16] = a4;
    v21[17] = a5;
    v21[18] = a6;
    v21[19] = a7;
    MEMORY[0x1E0C80A78](v13);
    v21[12] = sub_1A574EBB8;
    v21[13] = v14;
    MEMORY[0x1E0C80A78](v15);
    v21[6] = a4;
    v21[7] = a5;
    v21[8] = a6;
    v21[9] = a7;
    MEMORY[0x1E0C80A78](v16);
    v21[2] = sub_1A574EBB8;
    v21[3] = v17;
    sub_1A576F8EC((uint64_t)sub_1A574EB74, v18, (uint64_t)sub_1A574EB74, (uint64_t)v21);
    a6 = v19;
    sub_1A5751898();
  }
  return a6;
}

uint64_t sub_1A5744D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  Swift::UInt32 v5;
  uint64_t v6;
  int v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  Swift::UInt32 v14;
  uint64_t v15;
  _BYTE v16[12];
  unsigned __int16 v17;
  unsigned __int8 v18;
  _BYTE v19[40];
  id v20;

  if (qword_1EE796BD0 != -1)
LABEL_13:
    swift_once();
  v15 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  v14 = HIDWORD(qword_1EE7F9218);
  *(_DWORD *)v16 = qword_1EE7F9218;
  *(_QWORD *)&v16[4] = *(uint64_t *)((char *)&qword_1EE7F9218 + 4);
  v17 = word_1EE7F9224;
  v18 = byte_1EE7F9226;
  swift_retain();
  v5 = v14;
  while (1)
  {
    sub_1A573F890();
    if (v3)
      break;
    ByteBuffer._setBytes(_:at:)(v6 + 32, v6 + 32 + *(_QWORD *)(v6 + 16), v5);
    v8 = v7;
    swift_bridgeObjectRelease();
    v5 = *(_DWORD *)&v16[4] + v8;
    if (__CFADD__(*(_DWORD *)&v16[4], v8))
    {
      __break(1u);
      goto LABEL_13;
    }
    *(_DWORD *)&v16[4] += v8;
  }
  v20 = v3;
  v9 = v3;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
  if (swift_dynamicCast())
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    ByteBufferView.init(_:)(v15, *(unint64_t *)v16, *(unsigned int *)&v16[8] | ((unint64_t)v17 << 32) | ((unint64_t)v18 << 48), (uint64_t)v19);
    swift_retain_n();
    v10 = sub_1A56E6FE8((uint64_t)v19);
    if (v11)
    {
      a3 = v10;
      swift_release_n();
    }
    else
    {
      sub_1A56E9774();
      swift_allocError();
      strcpy(v12, "Invalid UTF8");
      v12[13] = 0;
      *((_WORD *)v12 + 7) = -5120;
      *((_QWORD *)v12 + 2) = 0xD000000000000020;
      *((_QWORD *)v12 + 3) = 0x80000001A5A0F5E0;
      *((_QWORD *)v12 + 4) = 881;
      swift_willThrow();
      a3 = v15;
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_release();

  }
  return a3;
}

void sub_1A574501C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v7;
  _QWORD *v8;

  v7 = sub_1A5761038(a1, a2, a3, 1);
  if (!v3)
  {
    if ((v7 & 0x8000000000000000) != 0
      || (sub_1A5751898(), (sub_1A5761038(a1, a2, a3, 1) & 0x8000000000000000) != 0)
      || (sub_1A5751898(), (sub_1A5761038(a1, a2, a3, 1) & 0x8000000000000000) != 0)
      || (sub_1A5751898(), (sub_1A5761038(a1, a2, a3, 1) & 0x8000000000000000) != 0))
    {
      sub_1A56E9774();
      swift_allocError();
      *v8 = 0xD000000000000011;
      v8[1] = 0x80000001A5A0F840;
      v8[2] = 0xD000000000000020;
      v8[3] = 0x80000001A5A0F5E0;
      v8[4] = 167;
      swift_willThrow();
    }
    else
    {
      sub_1A594CC9C();
      sub_1A594B5F8();
      sub_1A594CC9C();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A594B5F8();
      sub_1A594CC9C();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A594B5F8();
      sub_1A594CC9C();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
    }
  }
}

double sub_1A57452B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  double result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int16 v58;
  double v59[3];
  uint64_t v60;
  uint64_t v61;
  int v62;
  char v63;
  int v64;

  OUTLINED_FUNCTION_34_19();
  sub_1A575C7C8();
  if (!v8)
  {
    OUTLINED_FUNCTION_198_1();
    v52 = a1;
    v53 = a6;
    v60 = v17;
    v61 = v18;
    v62 = v19;
    v63 = BYTE4(v19) & 1;
    v64 = 1;
    v20 = a4;
    v21 = a7;
    if ((v19 & 0x100000000) != 0)
    {
      OUTLINED_FUNCTION_90();
      OUTLINED_FUNCTION_235_0();
      v23 = v22;
      v25 = v24;
      OUTLINED_FUNCTION_52();
      v56 = 47;
      v26 = MEMORY[0x1A85AD9BC](&v56, 1);
      if (v25)
      {
        if (v23 == v26 && v25 == v27)
        {
          OUTLINED_FUNCTION_9_2();
          OUTLINED_FUNCTION_52();
LABEL_13:
          OUTLINED_FUNCTION_1_2();
          OUTLINED_FUNCTION_265_0();
          sub_1A5752304(v31);
          goto LABEL_14;
        }
        v29 = OUTLINED_FUNCTION_1_16();
        OUTLINED_FUNCTION_9_2();
        OUTLINED_FUNCTION_52();
        if ((v29 & 1) != 0)
          goto LABEL_13;
      }
      else
      {
        OUTLINED_FUNCTION_52();
      }
    }
    OUTLINED_FUNCTION_1_2();
    v30 = OUTLINED_FUNCTION_152_2();
    v64 = sub_1A575C8D0(v30);
LABEL_14:
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_152_2();
    sub_1A57601E0();
    OUTLINED_FUNCTION_198_1();
    v59[0] = v32;
    v59[1] = v33;
    v56 = 0;
    v57 = 0;
    v58 = 256;
    if (v33 == 0.0)
    {
      v35 = 0;
      v37 = 0;
    }
    else
    {
      OUTLINED_FUNCTION_90();
      OUTLINED_FUNCTION_235_0();
      v35 = v34;
      v37 = v36;
      OUTLINED_FUNCTION_52();
    }
    v55 = 47;
    v38 = MEMORY[0x1A85AD9BC](&v55, 1);
    if (v37)
    {
      if (v35 == v38 && v37 == v39)
      {
        OUTLINED_FUNCTION_17();
        OUTLINED_FUNCTION_52();
LABEL_29:
        OUTLINED_FUNCTION_1_2();
        OUTLINED_FUNCTION_265_0();
        sub_1A5752394(v47);
        v45 = a8;
        v42 = v56;
        v43 = v57;
        LOBYTE(v44) = v58;
        LOBYTE(v46) = HIBYTE(v58);
        goto LABEL_30;
      }
      v41 = OUTLINED_FUNCTION_1_16();
      OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_52();
      if ((v41 & 1) != 0)
        goto LABEL_29;
    }
    else
    {
      OUTLINED_FUNCTION_52();
    }
    OUTLINED_FUNCTION_1_2();
    v42 = sub_1A57601FC(v52, a2, a3, v20, a5, v53, v21);
    v45 = a8;
    v46 = (v44 >> 8) & 1;
LABEL_30:
    v48 = v61;
    v49 = v62;
    v50 = v63;
    v51 = v64;
    *(_QWORD *)v45 = v60;
    *(_QWORD *)(v45 + 8) = v48;
    *(_DWORD *)(v45 + 16) = v49;
    *(_BYTE *)(v45 + 20) = v50;
    *(_DWORD *)(v45 + 24) = v51;
    result = v59[0];
    *(_OWORD *)(v45 + 32) = *(_OWORD *)v59;
    *(_QWORD *)(v45 + 48) = v42;
    *(_QWORD *)(v45 + 56) = v43;
    *(_BYTE *)(v45 + 64) = v44;
    *(_BYTE *)(v45 + 65) = v46;
  }
  return result;
}

void sub_1A57455AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  _DWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_197_1();
  v26 = v11;
  v27 = v12;
  v14 = v13;
  v25 = v15;
  v17 = v16;
  v19 = v18;
  OUTLINED_FUNCTION_233_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v20 = sub_1A569BC74(1);
  v21 = MEMORY[0x1A85AD950](v20);
  v23 = v22;
  OUTLINED_FUNCTION_9_2();
  *v17 = v21;
  v17[1] = v23;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_2();
  v24 = sub_1A575C9A0(v10, v9, v19, v26, v14, v27, a9);
  if (!v28)
    *v25 = v24;
  OUTLINED_FUNCTION_11_3();
}

void sub_1A5745658(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v24;

  if (!a4[1])
  {
    __break(1u);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_163_2();
  v17 = *v16;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18 = sub_1A569BC74(1);
  MEMORY[0x1A85AD950](v18);
  OUTLINED_FUNCTION_198_1();
  OUTLINED_FUNCTION_38();
  if (!a4[1])
  {
LABEL_7:
    __break(1u);
    return;
  }
  *a4 = v17;
  a4[1] = v9;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_2();
  v19 = sub_1A5760218(v12, v11, v10, a6, a7, a8, a9);
  if (!v24)
  {
    *(_QWORD *)a5 = v19;
    *(_QWORD *)(a5 + 8) = v20;
    *(_BYTE *)(a5 + 16) = v21;
    *(_BYTE *)(a5 + 17) = HIBYTE(v21) & 1;
  }
}

void sub_1A5745734(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1A5760B70(a1);
  if (!v1)
  {
    v3 = v2;
    if ((sub_1A5776374(v2) & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B348);
      v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1A59ABD10;
      *(_BYTE *)(v4 + 32) = v3;
    }
    else
    {
      sub_1A594C720();
      swift_bridgeObjectRelease();
      sub_1A594CC9C();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      swift_allocError();
      *v5 = 0xD00000000000001ELL;
      v5[1] = 0x80000001A5A0FC80;
      v5[2] = 0xD000000000000020;
      v5[3] = 0x80000001A5A0F5E0;
      v5[4] = 1072;
      swift_willThrow();
    }
  }
}

void sub_1A574585C(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1A5760B70(a1);
  if (!v1)
  {
    v3 = v2;
    if ((sub_1A57763C4(v2) & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B348);
      v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1A59ABD10;
      *(_BYTE *)(v4 + 32) = v3;
    }
    else
    {
      sub_1A594C720();
      swift_bridgeObjectRelease();
      sub_1A594CC9C();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      swift_allocError();
      *v5 = 0xD000000000000021;
      v5[1] = 0x80000001A5A0FC50;
      v5[2] = 0xD000000000000020;
      v5[3] = 0x80000001A5A0F5E0;
      v5[4] = 1080;
      swift_willThrow();
    }
  }
}

void sub_1A5745984(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  uint64_t v8;
  _QWORD *v9;

  sub_1A5751898();
  if (!v1)
  {
    sub_1A5760B70(a1);
    v4 = v3;
    sub_1A5760B70(a1);
    v6 = v5;
    if (sub_1A5776348(v4) && sub_1A5776348(v6))
    {
      if (v4 <= 0x46u)
        v7 = v4;
      else
        v7 = v4 - 32;
      if (v6 > 0x46u)
        v6 -= 32;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B348);
      v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1A59ABDA0;
      *(_BYTE *)(v8 + 32) = 37;
      *(_BYTE *)(v8 + 33) = v7;
      *(_BYTE *)(v8 + 34) = v6;
    }
    else
    {
      sub_1A594C720();
      swift_bridgeObjectRelease();
      sub_1A594CC9C();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A594B5F8();
      sub_1A594CC9C();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      swift_allocError();
      *v9 = 0xD00000000000001BLL;
      v9[1] = 0x80000001A5A0FC30;
      v9[2] = 0xD000000000000020;
      v9[3] = 0x80000001A5A0F5E0;
      v9[4] = 1094;
      swift_willThrow();
    }
  }
}

void sub_1A5745B9C(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1A5760B70(a1);
  if (!v1)
  {
    v3 = v2;
    if (v2 == 38 || v2 == 61)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B348);
      v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1A59ABD10;
      *(_BYTE *)(v4 + 32) = v3;
    }
    else
    {
      sub_1A594C720();
      swift_bridgeObjectRelease();
      sub_1A594CC9C();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      swift_allocError();
      *v5 = 0xD000000000000012;
      v5[1] = 0x80000001A5A0FC10;
      v5[2] = 0xD000000000000020;
      v5[3] = 0x80000001A5A0F5E0;
      v5[4] = 1123;
      swift_willThrow();
    }
  }
}

void sub_1A5745CD4()
{
  sub_1A573F890();
}

void sub_1A5745D40(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  uint64_t v5;
  _QWORD *v6;

  sub_1A5760B70(a1);
  if (!v1)
  {
    v3 = v2;
    if (v2 - 47 > 0x11 || ((1 << (v2 - 47)) & 0x20801) == 0)
    {
      sub_1A594C720();
      swift_bridgeObjectRelease();
      sub_1A594CC9C();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      swift_allocError();
      *v6 = 0xD000000000000012;
      v6[1] = 0x80000001A5A0FBF0;
      v6[2] = 0xD000000000000020;
      v6[3] = 0x80000001A5A0F5E0;
      v6[4] = 1142;
      swift_willThrow();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B348);
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1A59ABD10;
      *(_BYTE *)(v5 + 32) = v3;
    }
  }
}

#error "1A5745F3C: call analysis failed (funcsize=62)"

void sub_1A5745F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;

  OUTLINED_FUNCTION_34_22();
  v2 = OUTLINED_FUNCTION_35_15();
  sub_1A5760324(v2, v3);
  if (!v1)
  {
    LODWORD(v15) = v26;
    HIDWORD(v15) = v25;
    OUTLINED_FUNCTION_9_45();
    OUTLINED_FUNCTION_35_15();
    v4 = sub_1A57437EC();
    *(_QWORD *)v0 = v18;
    *(_QWORD *)(v0 + 8) = v19;
    OUTLINED_FUNCTION_113_1(v4, v5, v6, v7, v8, v9, v10, v11, v15, v24, v23, v22, v21, v20);
    *(_BYTE *)(v0 + 56) = v17;
    *(_BYTE *)(v0 + 57) = v16;
    *(_QWORD *)(v0 + 64) = v12;
    *(_QWORD *)(v0 + 72) = v13;
    *(_BYTE *)(v0 + 80) = v14;
  }
}

void sub_1A574605C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  Swift::Int v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  OUTLINED_FUNCTION_197_1();
  v47 = v3;
  OUTLINED_FUNCTION_34_19();
  v4 = OUTLINED_FUNCTION_161_1();
  v35 = sub_1A575CB94(v4, v5, v6, v7, v8, v9, v10, v11, v28, v30, v32, SHIDWORD(v32), v34, SHIDWORD(v34), v36, a1, v39, v40, v41,
          v42,
          v43,
          v44,
          v45,
          v46,
          v2,
          v47);
  if (!v1)
  {
    v14 = v12;
    v15 = v13;
    OUTLINED_FUNCTION_70_7();
    OUTLINED_FUNCTION_135_2();
    v33 = v16;
    OUTLINED_FUNCTION_70_7();
    OUTLINED_FUNCTION_135_2();
    v31 = v17;
    OUTLINED_FUNCTION_70_7();
    OUTLINED_FUNCTION_135_2();
    v29 = v18;
    swift_retain();
    v19 = OUTLINED_FUNCTION_161_1();
    sub_1A575F0EC(v19, v20, v21, v22, v23, v24, v25);
    *(_QWORD *)v38 = v35;
    *(_QWORD *)(v38 + 8) = v14;
    *(_QWORD *)(v38 + 16) = v15;
    *(_QWORD *)(v38 + 24) = v33;
    *(_QWORD *)(v38 + 32) = v31;
    *(_QWORD *)(v38 + 40) = v29;
    *(_QWORD *)(v38 + 48) = v26;
    *(_BYTE *)(v38 + 56) = v27 & 1;
  }
  OUTLINED_FUNCTION_11_3();
}

void sub_1A5746144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v9 = a3;
    }
    else
    {
      OUTLINED_FUNCTION_0_102();
      v5 = (void **)OUTLINED_FUNCTION_6_45();
      OUTLINED_FUNCTION_5_51(v5, v6, v7, v8, 0x7EuLL);
      if (!v3)
      {
        OUTLINED_FUNCTION_4_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_68_0();
      OUTLINED_FUNCTION_4_51();
    }
    OUTLINED_FUNCTION_246_0();
LABEL_7:
    OUTLINED_FUNCTION_2_70();
    return;
  }
  __break(1u);
}

void sub_1A57461D0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int64_t a6)
{
  uint64_t v6;
  int64_t v8;
  int64_t v9;
  int64_t *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v8 = OUTLINED_FUNCTION_249_0(a1, a2, a3);
  v9 = v8;
  if (!v6)
  {
    if (v8 < 0)
    {
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_248_0();
      OUTLINED_FUNCTION_5_61(v11, v12);
      OUTLINED_FUNCTION_215_0(v13, v14);
      goto LABEL_6;
    }
    if (v8 > a6)
    {
      sub_1A571EABC();
      OUTLINED_FUNCTION_21();
      *v10 = v9;
      v10[1] = a6;
LABEL_6:
      OUTLINED_FUNCTION_46_11();
    }
  }
  OUTLINED_FUNCTION_32_1();
}

void sub_1A5746268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A574627C(a1, a2, a3);
}

void sub_1A574627C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v9 = a3;
    }
    else
    {
      OUTLINED_FUNCTION_0_102();
      v5 = (void **)OUTLINED_FUNCTION_6_45();
      OUTLINED_FUNCTION_5_51(v5, v6, v7, v8, 0x2BuLL);
      if (!v3)
      {
        OUTLINED_FUNCTION_4_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_68_0();
      OUTLINED_FUNCTION_4_51();
    }
    OUTLINED_FUNCTION_246_0();
LABEL_7:
    OUTLINED_FUNCTION_2_70();
    return;
  }
  __break(1u);
}

uint64_t sub_1A5746308()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1EE7970B8 != -1)
    swift_once();
  v1 = static Media.TopLevelType.application;
  sub_1A5751898();
  if (!v0)
  {
    sub_1A5751898();
    sub_1A5751898();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v1;
}

uint64_t sub_1A574640C()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1EE7970C8 != -1)
    swift_once();
  v1 = static Media.TopLevelType.audio;
  sub_1A5751898();
  if (!v0)
  {
    sub_1A5751898();
    sub_1A5751898();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v1;
}

uint64_t sub_1A5746504()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1EE7970D0 != -1)
    swift_once();
  v1 = static Media.TopLevelType.image;
  sub_1A5751898();
  if (!v0)
  {
    sub_1A5751898();
    sub_1A5751898();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v1;
}

uint64_t sub_1A57465FC()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1EE7970E0 != -1)
    swift_once();
  v1 = static Media.TopLevelType.message;
  sub_1A5751898();
  if (!v0)
  {
    sub_1A5751898();
    sub_1A5751898();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v1;
}

uint64_t sub_1A57466F8()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1EE7970D8 != -1)
    swift_once();
  v1 = static Media.TopLevelType.video;
  sub_1A5751898();
  if (!v0)
  {
    sub_1A5751898();
    sub_1A5751898();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v1;
}

void sub_1A57467F0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _BYTE v6[40];

  sub_1A5740104();
  if (!v0)
  {
    ByteBufferView.init(_:)(v1, v2, v3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v6);
    swift_retain();
    sub_1A56E6FE8((uint64_t)v6);
    if (v4)
    {
      sub_1A594B49C();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A56E9774();
      swift_allocError();
      strcpy(v5, "Invalid UTF8");
      v5[13] = 0;
      *((_WORD *)v5 + 7) = -5120;
      *((_QWORD *)v5 + 2) = 0xD000000000000020;
      *((_QWORD *)v5 + 3) = 0x80000001A5A0F5E0;
      *((_QWORD *)v5 + 4) = 1362;
      swift_willThrow();
      swift_release();
    }
  }
}

void sub_1A57468F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_233_0();
  v29 = v14;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF60);
  v15 = OUTLINED_FUNCTION_252_0();
  *(_OWORD *)(v15 + 16) = xmmword_1A59ABDD0;
  *(_QWORD *)(v15 + 32) = sub_1A5746A98;
  *(_QWORD *)(v15 + 40) = 0;
  *(_QWORD *)(v15 + 48) = sub_1A5746AB4;
  *(_QWORD *)(v15 + 56) = 0;
  *(_QWORD *)(v15 + 64) = sub_1A5746AD0;
  *(_QWORD *)(v15 + 72) = 0;
  *(_QWORD *)(v15 + 80) = sub_1A5746AEC;
  *(_QWORD *)(v15 + 88) = 0;
  *(_QWORD *)(v15 + 96) = sub_1A5746B08;
  *(_QWORD *)(v15 + 104) = 0;
  v16 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a6;
  v16[5] = a7;
  v17 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v17 + 16) = sub_1A5750094;
  *(_QWORD *)(v17 + 24) = v16;
  *(_QWORD *)(v15 + 112) = sub_1A574EC40;
  *(_QWORD *)(v15 + 120) = v17;
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_102_1();
  v24 = sub_1A57717E0(v18, v19, v20, v21, v22, v23, 1366);
  if (v30)
  {
    OUTLINED_FUNCTION_15_41();
    sub_1A5774244();
  }
  else
  {
    v28 = v24;
    v31 = v25;
    OUTLINED_FUNCTION_15_41();
    sub_1A5774244();
    sub_1A5751974(v8, v7, a3);
    OUTLINED_FUNCTION_265_0();
    v26 = sub_1A5740294();
    *v29 = v28;
    v29[1] = v31;
    v29[2] = v26;
    v29[3] = v27;
  }
  OUTLINED_FUNCTION_21_27();
}

void sub_1A5746A98()
{
  sub_1A5746B24();
}

void sub_1A5746AB4()
{
  sub_1A5746B24();
}

void sub_1A5746AD0()
{
  sub_1A5746B24();
}

void sub_1A5746AEC()
{
  sub_1A5746B24();
}

void sub_1A5746B08()
{
  sub_1A5746B24();
}

void sub_1A5746B24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_146_2();
  v3 = v2();
  if (!v1)
  {
    *v0 = v3;
    v0[1] = v4;
  }
  OUTLINED_FUNCTION_40_16();
}

uint64_t sub_1A5746B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_165_2(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_274_0(v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_273_0();
  OUTLINED_FUNCTION_182_2();
  OUTLINED_FUNCTION_220_0();
  return sub_1A573FAD8(v14, v15);
}

void sub_1A5746BF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  sub_1A5751898();
  if (!v3 && (sub_1A5761038(a1, a2, a3, 1) & 0x8000000000000000) != 0)
  {
    sub_1A56E9774();
    swift_allocError();
    *v7 = 0xD000000000000011;
    v7[1] = 0x80000001A5A0F840;
    v7[2] = 0xD000000000000020;
    v7[3] = 0x80000001A5A0F5E0;
    v7[4] = 167;
    swift_willThrow();
  }
}

uint64_t sub_1A5746CF0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5746D20(a1, a2, a3);
}

_QWORD *sub_1A5746D20(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v5 = a3;
    if (v4 >= a3)
    {
      sub_1A5718F9C();
      v11 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_199_0(v11, v12);
    }
    else
    {
      v6 = result;
      v7 = *result;
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_261_0();
      if (!v3)
      {
        OUTLINED_FUNCTION_66_8();
        v5 = sub_1A573FE50(sub_1A5749B80, 0, sub_1A5749BA8, 0, sub_1A5749BD0, 0, v6, v4, v5, 0xD000000000000020, v9, v8, v10, sub_1A575CD44, sub_1A575CD44);
        OUTLINED_FUNCTION_4_4();
        return (_QWORD *)v5;
      }
      OUTLINED_FUNCTION_68_0();
      *v6 = v7;
      OUTLINED_FUNCTION_275_0();
    }
    OUTLINED_FUNCTION_46_11();
    return (_QWORD *)v5;
  }
  __break(1u);
  return result;
}

void sub_1A5746E78()
{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned __int32 v20;
  unsigned __int16 v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_24_24();
  OUTLINED_FUNCTION_14_34();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9588);
    v1 = (__n128 *)OUTLINED_FUNCTION_20_1();
    v2 = OUTLINED_FUNCTION_12_41(v1, (__n128)xmmword_1A59ABD10);
    v9 = sub_1A5746B48(v2, v3, v4, v5, v6, v7, v8);
    OUTLINED_FUNCTION_268_0(v9, v10, v11, v12, v13, v14, v15, v16, v31);
    v1[2].n128_u64[0] = v17;
    v1[2].n128_u64[1] = v18;
    v1[3].n128_u64[0] = v19;
    v1[3].n128_u32[2] = v20;
    v1[3].n128_u16[6] = v21;
    v1[3].n128_u8[14] = v22;
    OUTLINED_FUNCTION_178_2();
    MEMORY[0x1E0C80A78](v23);
    OUTLINED_FUNCTION_4_60();
    v24 = OUTLINED_FUNCTION_7_41();
    sub_1A5752424(v24, v25, v26, v27, v28, v29);
    OUTLINED_FUNCTION_6_50();
    v30 = OUTLINED_FUNCTION_184_1();
    OUTLINED_FUNCTION_204_0(v30);
  }
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_32_17();
}

void sub_1A5746F90(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  int v19;
  __int16 v20;
  char v21;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    *(_QWORD *)a8 = sub_1A5746B48(a1, a2, a3, a4, a5, a6, a7);
    *(_QWORD *)(a8 + 8) = v17;
    *(_QWORD *)(a8 + 16) = v18;
    *(_DWORD *)(a8 + 24) = v19;
    *(_WORD *)(a8 + 28) = v20;
    *(_BYTE *)(a8 + 30) = v21;
  }
}

void sub_1A5747028(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;

  sub_1A5751898();
  if (!v8)
  {
    v17 = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    v25 = MailboxName.init(_:)(v17, v19, v18 & 0xFFFFFFFFFFFFFFLL);
    v24 = v20;
    sub_1A5751974(a1, a2, a3);
    swift_retain();
    sub_1A57569C8();
    *(_QWORD *)a8 = v21;
    *(_QWORD *)(a8 + 8) = v22;
    *(_QWORD *)(a8 + 16) = v23;
    *(_QWORD *)(a8 + 24) = v25;
    *(_DWORD *)(a8 + 32) = v24;
  }
}

void sub_1A5747170(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;

  sub_1A5751898();
  if (!v8)
  {
    v17 = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    v23 = MailboxName.init(_:)(v17, v19, v18 & 0xFFFFFFFFFFFFFFLL);
    v22 = v20;
    sub_1A5751974(a1, a2, a3);
    swift_retain();
    sub_1A57566B0();
    *(_QWORD *)a8 = v21;
    *(_QWORD *)(a8 + 8) = v23;
    *(_QWORD *)(a8 + 16) = v22 | 0x8000000000000000;
    *(_QWORD *)(a8 + 24) = 0;
    *(_DWORD *)(a8 + 32) = 0;
  }
}

_QWORD *sub_1A57472C0@<X0>(_QWORD *(*a1)(__int128 *__return_ptr)@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  __int128 v5[2];

  result = a1(v5);
  if (!v2)
    return (_QWORD *)sub_1A56E06B0(v5, a2);
  return result;
}

void sub_1A5747308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _BYTE v7[16];
  uint64_t (*v8)();
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = a4;
  v12 = a5;
  v13 = a6;
  v14 = a7;
  v8 = sub_1A574EF00;
  v9 = &v10;
  sub_1A576F708((uint64_t)sub_1A5747F38, 0, (uint64_t)sub_1A574EEB4, (uint64_t)v7);
}

uint64_t sub_1A57473A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v16;

  swift_retain();
  result = sub_1A5752D14(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
    return v16 & 0xFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_1A5747428(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5;

  sub_1A5751898();
  if (!v5)
  {
    sub_1A574052C(a1, a2, a3, a4);
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    a5 = ByteBufferAllocator.buffer(string:)(92, 0xE100000000000000, j_j__malloc, j_j__realloc, j_j__free, sub_1A566C0C4);
    swift_bridgeObjectRelease();
  }
  return a5;
}

uint64_t sub_1A574752C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];
  void (*v19)();
  _QWORD *v20;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a7;
  v19 = sub_1A5750678;
  v20 = v12;
  swift_retain();
  sub_1A576F59C((uint64_t)sub_1A575083C, (uint64_t)v18, (uint64_t)sub_1A5740F84, 0);
  v14 = v13;
  v16 = v15;
  swift_release();
  if (v7)
    return v16 & 0xFFFFFFFFFFFFFFLL;
  else
    return v14;
}

void sub_1A574763C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_55_10(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_8_48();
  sub_1A576F8C0(v7, v8, v9, v10);
}

uint64_t sub_1A57476A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t v16;
  _QWORD v18[4];
  _QWORD v19[2];

  sub_1A5751898();
  if (!v7)
  {
    v15 = (_QWORD *)swift_allocObject();
    v19[1] = v19;
    v15[2] = a4;
    v15[3] = a5;
    v15[4] = a6;
    v15[5] = a7;
    MEMORY[0x1E0C80A78](v15);
    v18[2] = sub_1A574ECBC;
    v18[3] = v16;
    swift_retain();
    a5 = sub_1A5760D2C(a1, a2, a3, (uint64_t)sub_1A574ECD4, (uint64_t)v18, (uint64_t)&type metadata for NamespaceDescription);
    swift_release();
    sub_1A5751898();
  }
  return a5;
}

__n128 sub_1A57477F8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  __n128 result;
  int v18;
  __int16 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  _QWORD v24[2];
  int v25;
  __int16 v26;
  char v27;
  __n128 v28;
  uint64_t v29;
  __int128 v30;

  swift_retain();
  sub_1A575CDD4(v24, a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v18 = v25;
    v19 = v26;
    v20 = v27;
    v21 = v29;
    result = v28;
    v22 = v24[1];
    v23 = v30;
    *(_QWORD *)a8 = v24[0];
    *(_QWORD *)(a8 + 8) = v22;
    *(_DWORD *)(a8 + 16) = v18;
    *(_WORD *)(a8 + 20) = v19;
    *(_BYTE *)(a8 + 22) = v20;
    *(__n128 *)(a8 + 24) = result;
    *(_QWORD *)(a8 + 40) = v21;
    *(_OWORD *)(a8 + 48) = v23;
  }
  return result;
}

void sub_1A57478C0(uint64_t a1)
{
  uint64_t v1;
  char v3;
  int v4;
  unsigned int v5;
  _QWORD *v6;
  uint64_t v7;

  sub_1A5751898();
  if (!v1)
  {
    sub_1A5760B70(a1);
    v4 = v3;
    if (sub_1A577630C(v3))
    {
      sub_1A5751898();
      v5 = (((v4 & 0x3F) << 8) | (v4 >> 6)) + 33217;
      if (v4 >= 0)
        v5 = (v4 + 1);
      v7 = (v5 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v5) >> 3)) & 7)));
      MEMORY[0x1A85AD9BC](&v7);
    }
    else
    {
      sub_1A56E9774();
      swift_allocError();
      *v6 = 0xD000000000000011;
      v6[1] = 0x80000001A5A0FCC0;
      v6[2] = 0xD000000000000020;
      v6[3] = 0x80000001A5A0F5E0;
      v6[4] = 1556;
      swift_willThrow();
    }
  }
}

void sub_1A5747A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_24_24();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  OUTLINED_FUNCTION_14_34();
  if (!v0)
  {
    OUTLINED_FUNCTION_130_3();
    sub_1A5740104();
    v41 = v11;
    v42 = v12;
    v43 = v13;
    v14 = OUTLINED_FUNCTION_7_41();
    sub_1A5751974(v14, v15, v16);
    v40 = &v37;
    MEMORY[0x1E0C80A78](v17);
    OUTLINED_FUNCTION_218_0();
    *(_QWORD *)(v18 - 32) = v8;
    *(_QWORD *)(v18 - 24) = v6;
    *(_QWORD *)(v18 - 16) = v4;
    *(_QWORD *)(v18 - 8) = v2;
    MEMORY[0x1E0C80A78](v19);
    OUTLINED_FUNCTION_8_42();
    sub_1A576F8EC((uint64_t)sub_1A5740FE8, 0, (uint64_t)sub_1A574EB74, v20);
    v38 = v21;
    v39 = v22;
    v23 = OUTLINED_FUNCTION_130_3();
    sub_1A5747C10(v23, v24, v25, v26, v27, v28, v29);
    v31 = v30;
    v33 = v32;
    v35 = v34;
    OUTLINED_FUNCTION_6_50();
    *(_QWORD *)v10 = v43;
    v36 = v42;
    *(_QWORD *)(v10 + 8) = v41;
    *(_DWORD *)(v10 + 16) = v36;
    *(_WORD *)(v10 + 20) = WORD2(v36);
    *(_BYTE *)(v10 + 22) = BYTE6(v36);
    *(_QWORD *)(v10 + 24) = v38;
    *(_QWORD *)(v10 + 32) = v39;
    *(_QWORD *)(v10 + 40) = v31;
    *(_QWORD *)(v10 + 48) = v33;
    *(_QWORD *)(v10 + 56) = v35;
  }
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_32_17();
}

void sub_1A5747C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD v8[7];
  _QWORD v9[3];

  v9[0] = 0;
  v9[1] = MEMORY[0x1E0DEE9D8];
  v9[2] = MEMORY[0x1E0DEE9D8];
  v8[2] = a4;
  v8[3] = a5;
  v8[4] = a6;
  v8[5] = a7;
  sub_1A57524F0(a1, a2, a3, (uint64_t)sub_1A574ED60, (uint64_t)v8, (uint64_t)v9);
  if (v7)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  OUTLINED_FUNCTION_23_6();
}

double sub_1A5747C84@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  double result;
  int v18;
  __int16 v19;
  char v20;
  uint64_t v21;
  _QWORD v22[2];
  int v23;
  __int16 v24;
  char v25;
  uint64_t v26;

  swift_retain();
  sub_1A575CE70(v22, a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v18 = v23;
    v19 = v24;
    v20 = v25;
    v21 = v26;
    result = *(double *)&v22[1];
    *(_QWORD *)a8 = v22[0];
    *(double *)(a8 + 8) = result;
    *(_DWORD *)(a8 + 16) = v18;
    *(_WORD *)(a8 + 20) = v19;
    *(_BYTE *)(a8 + 22) = v20;
    *(_QWORD *)(a8 + 24) = v21;
  }
  return result;
}

void sub_1A5747D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_24_24();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  OUTLINED_FUNCTION_213_0();
  sub_1A5751974(v19, v20, v21);
  if (!v11)
  {
    OUTLINED_FUNCTION_90_4();
    v43 = v22;
    v44 = v23;
    v45 = v24;
    v25 = OUTLINED_FUNCTION_148_2();
    sub_1A5751974(v25, v26, v27);
    OUTLINED_FUNCTION_58_8();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A94F0);
    v42 = OUTLINED_FUNCTION_20_1();
    *(_OWORD *)(v42 + 16) = xmmword_1A59ABD10;
    OUTLINED_FUNCTION_90_4();
    v41[1] = v41;
    v31 = OUTLINED_FUNCTION_94_4(v28, v29, v30);
    MEMORY[0x1E0C80A78](v31);
    OUTLINED_FUNCTION_89_3();
    *(_QWORD *)(v32 - 32) = v12;
    *(_QWORD *)(v32 - 24) = v18;
    *(_QWORD *)(v32 - 16) = v16;
    *(_QWORD *)(v32 - 8) = v14;
    v33 = OUTLINED_FUNCTION_148_2();
    sub_1A575250C(v33, v34, v35, v36, v37, v38);
    OUTLINED_FUNCTION_58_8();
    v40 = v43;
    v39 = v44;
    *(_QWORD *)v10 = v45;
    *(_QWORD *)(v10 + 8) = v40;
    *(_DWORD *)(v10 + 16) = v39;
    *(_WORD *)(v10 + 20) = WORD2(v39);
    *(_BYTE *)(v10 + 22) = BYTE6(v39);
    *(_QWORD *)(v10 + 24) = a10;
  }
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_32_17();
}

uint64_t sub_1A5747EE4()
{
  OUTLINED_FUNCTION_150_1();
  OUTLINED_FUNCTION_143_2();
  return 0;
}

uint64_t sub_1A5747F14()
{
  uint64_t v0;

  sub_1A5740104();
  return OUTLINED_FUNCTION_57_13(v0 & 0xFFFFFFFFFFFFFFLL);
}

void sub_1A5747F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1A5747EE4();
  if (!v0)
    OUTLINED_FUNCTION_59_10(v1, v2, v3);
  OUTLINED_FUNCTION_40_16();
}

void sub_1A5747F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = OUTLINED_FUNCTION_177_2(a1, a2, a3, a4);
  if (!v4)
    OUTLINED_FUNCTION_59_10(v5, v6, v7);
  OUTLINED_FUNCTION_1();
}

void sub_1A5747F7C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  sub_1A574052C(a1, a2, a3, a4);
  if (!v5)
  {
    *(_QWORD *)a5 = v7;
    *(_QWORD *)(a5 + 8) = v8;
    *(_QWORD *)(a5 + 16) = 0;
    *(_QWORD *)(a5 + 24) = 0;
    *(_BYTE *)(a5 + 32) = 0;
  }
}

void sub_1A5747FAC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_retain();
  sub_1A575CF0C();
  if (!v1)
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = 1;
  }
}

void sub_1A5748038()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[8];
  uint64_t v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[48];

  OUTLINED_FUNCTION_30_18();
  v29 = v4;
  v30 = v5;
  v31 = v6;
  v32 = v7;
  v26 = (uint64_t)sub_1A5750420;
  v27 = &v28;
  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_40_17();
  sub_1A57700A4(v8, v9, v10, v11, v12);
  if (!v2)
  {
    OUTLINED_FUNCTION_1_2();
    v13 = OUTLINED_FUNCTION_35_15();
    sub_1A5760744(v13, v14, v15, v16, v17, v18, v19, v20, 0x80000001A5A0F5E0, 143, v23, v24, (uint64_t)sub_1A5750450, (uint64_t)v25, v25[0], (id)v25[1], v25[2], v25[3], v25[4],
      v25[5],
      v25[6],
      v25[7],
      v26,
      (uint64_t)v27);
    OUTLINED_FUNCTION_198_1();
    v22 = v21;
    sub_1A56D08B0((uint64_t)v33, (uint64_t)v0);
    v0[5] = v1;
    v0[6] = v3;
    v0[7] = v22;
  }
}

_QWORD *sub_1A574813C@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr)@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[5];

  result = a1(v5);
  if (!v2)
    return (_QWORD *)sub_1A56D08B0((uint64_t)v5, a2);
  return result;
}

uint64_t sub_1A5748184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v7;

  OUTLINED_FUNCTION_165_2(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_217_0();
  sub_1A573FBFC();
  return OUTLINED_FUNCTION_57_13(v7 & 0xFFFFFFFFFFFFFFLL | ((HIBYTE(v7) & 1) << 56));
}

uint64_t sub_1A5748244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1A5748274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1A5751898();
  if (!v7)
  {
    v15 = sub_1A5748184(a1, a2, a3, a4, a5, a6, a7);
    v17 = v16;
    v19 = v18;
    sub_1A5751898();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9568);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1A59ABD10;
    *(_QWORD *)(v20 + 32) = v15;
    *(_QWORD *)(v20 + 40) = v17;
    *(_BYTE *)(v20 + 54) = BYTE6(v19);
    *(_WORD *)(v20 + 52) = WORD2(v19);
    *(_DWORD *)(v20 + 48) = v19;
    *(_BYTE *)(v20 + 55) = HIBYTE(v19) & 1;
  }
}

uint64_t sub_1A57483C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[6];
  uint64_t v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9568);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1A59ABD10;
  v16 = sub_1A5748184(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
  {
    *(_QWORD *)(v15 + 16) = 0;
    return swift_release();
  }
  else
  {
    v21 = (uint64_t)&v21;
    *(_QWORD *)(v15 + 32) = v16;
    *(_QWORD *)(v15 + 40) = v17;
    *(_DWORD *)(v15 + 48) = v18;
    *(_BYTE *)(v15 + 54) = BYTE6(v18);
    *(_WORD *)(v15 + 52) = WORD2(v18);
    *(_BYTE *)(v15 + 55) = HIBYTE(v18) & 1;
    v22 = v15;
    MEMORY[0x1E0C80A78](v16);
    v20[2] = a4;
    v20[3] = a5;
    v20[4] = a6;
    v20[5] = a7;
    sub_1A5752528(a1, a2, a3, (uint64_t)sub_1A57504B0, (uint64_t)v20, (uint64_t)&v22);
    return v22;
  }
}

void sub_1A574853C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  int v18;
  char v19;
  __int16 v20;
  char v21;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    *(_QWORD *)a8 = sub_1A5748184(a1, a2, a3, a4, a5, a6, a7);
    *(_QWORD *)(a8 + 8) = v17;
    *(_DWORD *)(a8 + 16) = v18;
    *(_BYTE *)(a8 + 22) = v19;
    *(_WORD *)(a8 + 20) = v20;
    *(_BYTE *)(a8 + 23) = v21 & 1;
  }
}

void sub_1A57485D8(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int *a4@<X8>)
{
  uint64_t v4;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  BOOL v32;
  unsigned int v33;
  uint64_t v34;
  _QWORD *v35;

  sub_1A5751898();
  if (v4)
    goto LABEL_13;
  v9 = OUTLINED_FUNCTION_214(a1, a2, a3, 1);
  v10 = v9;
  if ((v9 & 0x8000000000000000) != 0)
    goto LABEL_11;
  if (HIDWORD(v9))
  {
    sub_1A56E9774();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_271_0();
    OUTLINED_FUNCTION_29_17(v11, v12);
    OUTLINED_FUNCTION_15_35(v13, v14);
    v16 = 1751;
LABEL_12:
    OUTLINED_FUNCTION_11_20(v15, v16);
LABEL_13:
    OUTLINED_FUNCTION_260_0();
    return;
  }
  OUTLINED_FUNCTION_58_8();
  v17 = OUTLINED_FUNCTION_214(a1, a2, a3, 0);
  v18 = v17;
  if ((v17 & 0x8000000000000000) != 0)
  {
LABEL_11:
    sub_1A56E9774();
    v23 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_29_17(v23, v24);
    OUTLINED_FUNCTION_25_23(v25, v26);
    goto LABEL_12;
  }
  if (HIDWORD(v17))
  {
    sub_1A56E9774();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_271_0();
    OUTLINED_FUNCTION_29_17(v19, v20);
    OUTLINED_FUNCTION_15_35(v21, v22);
    v16 = 1755;
    goto LABEL_12;
  }
  if (!(_DWORD)v17)
  {
    sub_1A594C720();
    OUTLINED_FUNCTION_34_20();
    OUTLINED_FUNCTION_158_1();
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_100_2();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_116_2();
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_100_2();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_117_1();
    OUTLINED_FUNCTION_227_0();
    v30 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_272_0(v30, v31);
    *(_QWORD *)(v15 + 16) = 0xD000000000000020;
    *(_QWORD *)(v15 + 24) = 0x80000001A5A0F5E0;
    v16 = 1757;
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_58_8();
  v27 = v10 + v18;
  if (__CFADD__(v10, v18))
  {
    OUTLINED_FUNCTION_99_4();
    OUTLINED_FUNCTION_34_20();
    OUTLINED_FUNCTION_158_1();
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_100_2();
    OUTLINED_FUNCTION_38();
    OUTLINED_FUNCTION_116_2();
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_100_2();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_117_1();
    OUTLINED_FUNCTION_227_0();
    v28 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_272_0(v28, v29);
    *(_QWORD *)(v15 + 16) = 0xD000000000000020;
    *(_QWORD *)(v15 + 24) = 0x80000001A5A0F5E0;
    v16 = 1760;
    goto LABEL_12;
  }
  v32 = v27 != 0;
  v33 = v27 - 1;
  if (!v32)
  {
    OUTLINED_FUNCTION_99_4();
    OUTLINED_FUNCTION_34_20();
    OUTLINED_FUNCTION_158_1();
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_100_2();
    OUTLINED_FUNCTION_38();
    OUTLINED_FUNCTION_116_2();
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_100_2();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_117_1();
    OUTLINED_FUNCTION_227_0();
    v34 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_272_0(v34, v35);
    *(_QWORD *)(v15 + 16) = 0xD000000000000020;
    *(_QWORD *)(v15 + 24) = 0x80000001A5A0F5E0;
    v16 = 1762;
    goto LABEL_12;
  }
  if (v33 >= v10)
  {
    *a4 = v10;
    a4[1] = v33;
    goto LABEL_13;
  }
  __break(1u);
}

void sub_1A5748988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_151_2();
  OUTLINED_FUNCTION_0_103();
  if (!v1 && (OUTLINED_FUNCTION_214(v3, v2, v0, 1) & 0x8000000000000000) != 0)
  {
    sub_1A56E9774();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_248_0();
    OUTLINED_FUNCTION_5_61(v4, v5);
    *(_QWORD *)(v6 + 16) = v7;
    *(_QWORD *)(v6 + 24) = 0x80000001A5A0F5E0;
    OUTLINED_FUNCTION_11_20(v6, 167);
  }
}

void sub_1A5748A28()
{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned __int32 v18;
  unsigned __int32 v19;
  unsigned __int32 v20;
  unsigned __int16 v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_24_24();
  OUTLINED_FUNCTION_14_34();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A94F0);
    v1 = (__n128 *)OUTLINED_FUNCTION_20_1();
    v2 = OUTLINED_FUNCTION_12_41(v1, (__n128)xmmword_1A59ABD10);
    sub_1A572BFEC(v2, v3, v4, v5, v6, v7, v8);
    OUTLINED_FUNCTION_268_0(v9, v10, v11, v12, v13, v14, v15, v16, v31);
    v1[2].n128_u64[0] = v17;
    v1[2].n128_u32[2] = v18;
    v1[2].n128_u32[3] = v19;
    v1[3].n128_u32[0] = v20;
    v1[3].n128_u16[2] = v21;
    v1[3].n128_u8[6] = v22;
    OUTLINED_FUNCTION_178_2();
    MEMORY[0x1E0C80A78](v23);
    OUTLINED_FUNCTION_4_60();
    v24 = OUTLINED_FUNCTION_7_41();
    sub_1A575250C(v24, v25, v26, v27, v28, v29);
    OUTLINED_FUNCTION_6_50();
    v30 = OUTLINED_FUNCTION_184_1();
    OUTLINED_FUNCTION_204_0(v30);
  }
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_32_17();
}

void sub_1A5748B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_24_24();
  OUTLINED_FUNCTION_33_19(v1, v2, v3);
  if (!v0)
  {
    v4 = OUTLINED_FUNCTION_3_56();
    v6 = v5(v4);
    OUTLINED_FUNCTION_62_9(v6, v7, v8);
  }
  OUTLINED_FUNCTION_32_17();
}

void sub_1A5748B7C()
{
  uint64_t v0;
  Swift::Int v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  Swift::Int v20;
  int v21;
  BOOL v22;
  int v23;
  _QWORD *v24;
  Swift::Int v25;
  uint64_t v26;
  __int128 v27;
  _QWORD *v28;
  uint64_t v29;
  Swift::UInt32 v30;
  int64_t v31;
  uint64_t v32;
  size_t v33;
  int v34;
  BOOL v35;
  unint64_t v36;
  int v37;
  int v38;
  int v39;
  _QWORD *v40;
  int v41;
  int v42;
  __int16 v43;
  char v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  __int128 v55;
  _QWORD *v56;
  unint64_t v57;
  _BYTE *v58;
  char *v59;
  unint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  _BYTE v65[15];
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  _BYTE v70[7];
  uint64_t v71;
  int v72;
  uint64_t v73;
  __int16 v74;
  char v75;
  uint64_t v76;
  unsigned int v77;
  unsigned int v78;
  unsigned __int16 v79;
  unsigned __int8 v80;
  int64_t v81;
  int64_t v82;
  _BYTE v83[24];
  uint64_t v84;
  _QWORD v85[6];
  uint64_t v86;
  uint64_t v87;

  OUTLINED_FUNCTION_24_24();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  OUTLINED_FUNCTION_167_2();
  sub_1A5751898();
  if (v0)
  {
LABEL_29:
    OUTLINED_FUNCTION_32_17();
    return;
  }
  if (__OFADD__(v6, 1))
    goto LABEL_59;
  if (v6 + 1 >= v4)
  {
    sub_1A5718F9C();
    OUTLINED_FUNCTION_21();
    *v24 = v4;
    goto LABEL_28;
  }
  v56 = (_QWORD *)v10;
  v11 = *(_QWORD *)v8;
  v12 = *(unsigned int *)(v8 + 8);
  v13 = *(unsigned int *)(v8 + 16);
  v14 = *(unsigned __int16 *)(v8 + 20);
  v15 = *(unsigned __int8 *)(v8 + 22);
  v62 = *(unsigned int *)(v8 + 12);
  v63 = v12;
  v60 = v14;
  v61 = (_BYTE *)v13;
  v59 = (char *)v15;
  v86 = v11;
  v57 = v13 | (v14 << 32) | (v15 << 48);
  v58 = (_BYTE *)(v12 | (v62 << 32));
  ByteBufferView.init(_:)(v11, (unint64_t)v58, v57, (uint64_t)&v76);
  v10 = v81;
  v2 = v82;
  if (v81 == v82)
  {
LABEL_26:
    OUTLINED_FUNCTION_87();
    sub_1A553E5DC((uint64_t)&v76);
    sub_1A571EA80();
    OUTLINED_FUNCTION_21();
    swift_willThrow();
    OUTLINED_FUNCTION_68_4();
    *(_QWORD *)v8 = v86;
    v23 = v62;
    *(_DWORD *)(v8 + 8) = v63;
    *(_DWORD *)(v8 + 12) = v23;
    *(_DWORD *)(v8 + 16) = (_DWORD)v61;
    *(_WORD *)(v8 + 20) = v60;
    *(_BYTE *)(v8 + 22) = (_BYTE)v59;
LABEL_28:
    OUTLINED_FUNCTION_133_2();
    goto LABEL_29;
  }
  *(_QWORD *)&v55 = &v53;
  v16 = v77;
  v1 = v78 - v77;
  if (v78 < v77)
    goto LABEL_62;
  v17 = v76;
  v54 = v80 | ((unint64_t)v79 << 8);
  OUTLINED_FUNCTION_176();
  v18 = 0;
  v19 = 0;
  while (1)
  {
    if (v10 >= v2)
    {
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    v20 = v10 - v16;
    if (__OFSUB__(v10, v16))
      goto LABEL_56;
    if (v20 < 0)
      goto LABEL_57;
    if (v20 >= v1)
      goto LABEL_58;
    v21 = *(unsigned __int8 *)(*(_QWORD *)(v17 + 24) + v54 + v10);
    if ((v18 & 1) != 0)
    {
      v18 = 0;
      if (v21 != 34 && v21 != 92)
        break;
      goto LABEL_25;
    }
    v22 = v21 == 10 || v21 == 13;
    if (v22 || (v21 & 0x80) != 0)
      break;
    if (v21 == 92)
    {
      v18 = 1;
      v19 = 1;
    }
    else
    {
      if (!*(_BYTE *)(*(_QWORD *)(v17 + 24) + v54 + v10) || v21 == 34)
        break;
      v18 = 0;
    }
LABEL_25:
    if (v2 == ++v10)
      goto LABEL_26;
  }
  LODWORD(v63) = v19;
  LODWORD(v2) = v86;
  OUTLINED_FUNCTION_87();
  sub_1A553E5DC((uint64_t)&v76);
  ByteBufferView.init(_:)(v86, (unint64_t)v58, v57, (uint64_t)v83);
  OUTLINED_FUNCTION_18_0();
  sub_1A553E5DC((uint64_t)v83);
  if (__OFSUB__(v10, v84))
    goto LABEL_66;
  if (!ByteBuffer.readSlice(length:)((int)v10 - (int)v84))
    goto LABEL_69;
  OUTLINED_FUNCTION_262_0();
  v1 = v25;
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_167_2();
  OUTLINED_FUNCTION_58_8();
  v2 = HIDWORD(v16);
  if ((v63 & 1) == 0)
  {
    v40 = v56;
    *v56 = v10;
    v40[1] = v16;
    *((_DWORD *)v40 + 4) = v1;
    *((_WORD *)v40 + 10) = WORD2(v1);
    *((_BYTE *)v40 + 22) = BYTE6(v1);
    goto LABEL_29;
  }
  v57 = v16;
  v26 = qword_1EE796BD0;
  OUTLINED_FUNCTION_0_10();
  if (v26 != -1)
    goto LABEL_67;
  while (1)
  {
    v71 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
    v72 = qword_1EE7F9218;
    *(_QWORD *)&v27 = *(uint64_t *)((char *)&qword_1EE7F9218 + 4);
    v55 = v27;
    v73 = *(uint64_t *)((char *)&qword_1EE7F9218 + 4);
    v74 = word_1EE7F9224;
    v75 = byte_1EE7F9226;
    v87 = v10;
    v28 = (_QWORD *)(v10 + 24);
    swift_retain();
    OUTLINED_FUNCTION_176();
    if (v57 <= v2)
      break;
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    swift_once();
  }
  v29 = v57;
  v10 = BYTE6(v1) | ((unint64_t)WORD2(v1) << 8);
  v61 = v70;
  v62 = (uint64_t)&v69;
  v63 = v1 & 0xFFFFFFFFFFFFFFLL;
  v59 = &v64;
  v60 = v57 & 0xFFFFFFFF00000000;
  v58 = v65;
  v30 = v55;
  LODWORD(v1) = v57;
  while (2)
  {
    if ((_DWORD)v1 == (_DWORD)v2)
    {
      OUTLINED_FUNCTION_149_0();
      v41 = v72;
      v42 = HIDWORD(v73);
      v43 = v74;
      v44 = v75;
      v45 = v56;
      *v56 = v71;
      *((_DWORD *)v45 + 2) = v41;
      *((_DWORD *)v45 + 3) = v30;
      *((_DWORD *)v45 + 4) = v42;
      *((_WORD *)v45 + 10) = v43;
      *((_BYTE *)v45 + 22) = v44;
      goto LABEL_29;
    }
    v31 = *v28 + v10;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B348);
    v32 = OUTLINED_FUNCTION_20_1();
    v33 = _swift_stdlib_malloc_size_0((const void *)v32);
    *(_QWORD *)(v32 + 16) = 1;
    *(_QWORD *)(v32 + 24) = 2 * v33 - 64;
    v34 = *(unsigned __int8 *)(v31 + v29);
    *(_BYTE *)(v32 + 32) = v34;
    v35 = __CFADD__((_DWORD)v1, 1);
    v1 = (v1 + 1);
    if (v35)
      goto LABEL_61;
    OUTLINED_FUNCTION_17_4();
    if (v34 != 92)
    {
      v69 = v34;
      ByteBuffer._setBytes(_:at:)(v62, (uint64_t)v61, v30);
      v30 = v73 + v39;
      if (__CFADD__((_DWORD)v73, v39))
        goto LABEL_63;
LABEL_48:
      LODWORD(v73) = v30;
      if (v1 > v2)
        goto LABEL_60;
      v29 = v1;
      continue;
    }
    break;
  }
  v36 = (unint64_t)ByteBuffer.getBytes(at:length:)(v1, 1);
  if (!v36)
    goto LABEL_53;
  v35 = __CFADD__((_DWORD)v1, 1);
  v1 = (v1 + 1);
  if (v35)
    goto LABEL_64;
  if (*(_QWORD *)(v36 + 16))
  {
    v37 = *(unsigned __int8 *)(v36 + 32);
    swift_bridgeObjectRelease();
    if (v37 != 92 && v37 != 34)
      goto LABEL_53;
    v64 = v37;
    ByteBuffer._setBytes(_:at:)((uint64_t)v59, (uint64_t)v58, v30);
    v30 = v73 + v38;
    if (__CFADD__((_DWORD)v73, v38))
      goto LABEL_65;
    goto LABEL_48;
  }
  swift_bridgeObjectRelease();
LABEL_53:
  *(_QWORD *)&v65[7] = 0;
  v66 = 0xE000000000000000;
  sub_1A594C720();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_66_8();
  v67 = v46;
  v68 = v47;
  ByteBufferView.init(_:)(v87, v57, v63, (uint64_t)v85);
  v48 = v85[3];
  v49 = v85[4];
  OUTLINED_FUNCTION_176();
  if (!__OFSUB__(v49, v48))
  {
    OUTLINED_FUNCTION_3_3();
    sub_1A594B538();
    sub_1A553E5DC((uint64_t)v85);
    sub_1A594B5F8();
    OUTLINED_FUNCTION_52();
    sub_1A594B5F8();
    sub_1A56E9774();
    v50 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_272_0(v50, v51);
    *(_QWORD *)(v52 + 16) = 0xD000000000000020;
    *(_QWORD *)(v52 + 24) = 0x80000001A5A0F5E0;
    OUTLINED_FUNCTION_11_20(v52, 1835);
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_5_1();
    swift_release();
    goto LABEL_29;
  }
  __break(1u);
LABEL_69:
  __break(1u);
}

void sub_1A5749170(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  Swift::Int v6;
  Swift::Int v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  char v19;
  int v20;
  unint64_t v21;
  Swift::Int v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  __int128 v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  Swift::UInt32 v36;
  uint64_t v37;
  size_t v38;
  BOOL v39;
  unint64_t v40;
  int v41;
  int v42;
  int v43;
  _QWORD *v44;
  int v45;
  int v46;
  __int16 v47;
  char v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  _QWORD *v56;
  __int128 v57;
  unint64_t v58;
  _BYTE *v59;
  char *v60;
  unint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  _BYTE v66[15];
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char v70;
  _BYTE v71[7];
  uint64_t v72;
  int v73;
  uint64_t v74;
  __int16 v75;
  char v76;
  uint64_t v77;
  unsigned int v78;
  unsigned int v79;
  unsigned __int16 v80;
  unsigned __int8 v81;
  Swift::Int v82;
  Swift::Int v83;
  _BYTE v84[24];
  uint64_t v85;
  _QWORD v86[6];
  uint64_t v87;

  sub_1A576129C(34, 0xE100000000000000, a1, a2, a3);
  if (v4)
    return;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  v5 = (unint64_t)&v55;
  if (a2 + 1 >= a3)
  {
    sub_1A5718F9C();
    swift_allocError();
    *v26 = a3;
    goto LABEL_19;
  }
  v56 = (_QWORD *)a4;
  v12 = *(_QWORD *)a1;
  v13 = *(unsigned int *)(a1 + 8);
  v14 = *(unsigned int *)(a1 + 16);
  v15 = *(unsigned __int16 *)(a1 + 20);
  v16 = *(unsigned __int8 *)(a1 + 22);
  v63 = *(unsigned int *)(a1 + 12);
  v64 = v13;
  v61 = v15;
  v62 = (_BYTE *)v14;
  v60 = (char *)v16;
  v87 = v12;
  v58 = v14 | (v15 << 32) | (v16 << 48);
  v59 = (_BYTE *)(v13 | (v63 << 32));
  ByteBufferView.init(_:)(v12, (unint64_t)v59, v58, (uint64_t)&v77);
  v6 = v82;
  v7 = v83;
  if (v82 == v83)
  {
LABEL_17:
    v24 = v87;
    swift_retain_n();
    sub_1A553E5DC((uint64_t)&v77);
    sub_1A571EA80();
    swift_allocError();
    swift_willThrow();
    swift_release();
    *(_QWORD *)a1 = v24;
    v25 = v63;
    *(_DWORD *)(a1 + 8) = v64;
    *(_DWORD *)(a1 + 12) = v25;
    *(_DWORD *)(a1 + 16) = (_DWORD)v62;
    *(_WORD *)(a1 + 20) = v61;
    *(_BYTE *)(a1 + 22) = (_BYTE)v60;
LABEL_19:
    swift_willThrow();
    return;
  }
  *(_QWORD *)&v57 = &v55;
  a4 = v78;
  v17 = v79 - v78;
  if (v79 < v78)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v18 = v77;
  v55 = v81 | ((unint64_t)v80 << 8);
  swift_beginAccess();
  v19 = 0;
  v20 = 0;
  v21 = *(_QWORD *)(v18 + 24) + v55 + a4;
  v5 = v57;
  while (1)
  {
    if (v6 >= v7)
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      swift_bridgeObjectRelease();
LABEL_48:
      *(_QWORD *)&v66[7] = 0;
      v67 = 0xE000000000000000;
      sub_1A594C720();
      swift_bridgeObjectRelease();
      v68 = 0xD000000000000021;
      v69 = 0x80000001A5A0FCE0;
      ByteBufferView.init(_:)(v87, v58, v64, (uint64_t)v86);
      v50 = v86[3];
      v51 = v86[4];
      swift_beginAccess();
      if (!__OFSUB__(v51, v50))
      {
        swift_retain();
        sub_1A594B538();
        sub_1A553E5DC((uint64_t)v86);
        sub_1A594B5F8();
        swift_bridgeObjectRelease();
        sub_1A594B5F8();
        v52 = v68;
        v53 = v69;
        sub_1A56E9774();
        swift_allocError();
        *v54 = v52;
        v54[1] = v53;
        v54[2] = 0xD000000000000020;
        v54[3] = 0x80000001A5A0F5E0;
        v54[4] = 1877;
        swift_willThrow();
        swift_release();
        swift_release();
        swift_release();
        return;
      }
      __break(1u);
LABEL_60:
      __break(1u);
      return;
    }
    v22 = v6 - a4;
    if (__OFSUB__(v6, a4))
      goto LABEL_44;
    if (v22 < 0)
      goto LABEL_45;
    if (v22 >= v17)
      goto LABEL_46;
    if ((v19 & 1) == 0)
    {
      v23 = *(unsigned __int8 *)(v21 + v22);
      if (v23 == 92)
      {
        v19 = 1;
        v20 = 1;
        goto LABEL_16;
      }
      if (v23 == 34)
        break;
    }
    v19 = 0;
LABEL_16:
    if (v7 == ++v6)
      goto LABEL_17;
  }
  LODWORD(v64) = v20;
  v27 = v87;
  swift_retain_n();
  sub_1A553E5DC((uint64_t)&v77);
  ByteBufferView.init(_:)(v27, (unint64_t)v59, v58, (uint64_t)v84);
  swift_retain();
  sub_1A553E5DC((uint64_t)v84);
  if (__OFSUB__(v6, v85))
    goto LABEL_57;
  v28 = ByteBuffer.readSlice(length:)((int)v6 - (int)v85);
  if (!v28)
    goto LABEL_60;
  a4 = v28;
  v5 = v29;
  v6 = v30;
  swift_release();
  sub_1A576129C(34, 0xE100000000000000, a1, a2, a3);
  v7 = HIDWORD(v5);
  if ((v64 & 1) != 0)
  {
    v31 = qword_1EE796BD0;
    swift_retain();
    if (v31 != -1)
      goto LABEL_58;
    while (1)
    {
      v72 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
      v73 = qword_1EE7F9218;
      *(_QWORD *)&v32 = *(uint64_t *)((char *)&qword_1EE7F9218 + 4);
      v57 = v32;
      v74 = *(uint64_t *)((char *)&qword_1EE7F9218 + 4);
      v75 = word_1EE7F9224;
      v76 = byte_1EE7F9226;
      v87 = a4;
      v33 = (_QWORD *)(a4 + 24);
      swift_retain();
      swift_beginAccess();
      v58 = v5;
      if (v5 <= v7)
        break;
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      swift_once();
    }
    v34 = v58;
    v35 = BYTE6(v6) | ((unint64_t)WORD2(v6) << 8);
    v62 = v71;
    v63 = (uint64_t)&v70;
    v64 = v6 & 0xFFFFFFFFFFFFFFLL;
    v60 = &v65;
    v61 = v58 & 0xFFFFFFFF00000000;
    v59 = v66;
    v36 = v57;
    LODWORD(v6) = v58;
    while ((_DWORD)v6 != (_DWORD)v7)
    {
      a4 = *v33 + v35;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B348);
      v37 = swift_allocObject();
      v38 = _swift_stdlib_malloc_size_0((const void *)v37);
      *(_QWORD *)(v37 + 16) = 1;
      *(_QWORD *)(v37 + 24) = 2 * v38 - 64;
      v5 = *(unsigned __int8 *)(a4 + v34);
      *(_BYTE *)(v37 + 32) = v5;
      v39 = __CFADD__((_DWORD)v6, 1);
      v6 = (v6 + 1);
      if (v39)
        goto LABEL_53;
      swift_release();
      if ((_DWORD)v5 == 92)
      {
        v40 = (unint64_t)ByteBuffer.getBytes(at:length:)(v6, 1);
        if (!v40)
          goto LABEL_48;
        v39 = __CFADD__((_DWORD)v6, 1);
        v6 = (v6 + 1);
        if (v39)
          goto LABEL_55;
        if (!*(_QWORD *)(v40 + 16))
          goto LABEL_47;
        v41 = *(unsigned __int8 *)(v40 + 32);
        swift_bridgeObjectRelease();
        if (v41 != 92 && v41 != 34)
          goto LABEL_48;
        v65 = v41;
        ByteBuffer._setBytes(_:at:)((uint64_t)v60, (uint64_t)v59, v36);
        v36 = v74 + v42;
        if (__CFADD__((_DWORD)v74, v42))
          goto LABEL_56;
      }
      else
      {
        v70 = v5;
        ByteBuffer._setBytes(_:at:)(v63, (uint64_t)v62, v36);
        v36 = v74 + v43;
        if (__CFADD__((_DWORD)v74, v43))
          goto LABEL_54;
      }
      LODWORD(v74) = v36;
      if (v6 > v7)
        goto LABEL_52;
      v34 = v6;
    }
    swift_release_n();
    v45 = v73;
    v46 = HIDWORD(v74);
    v47 = v75;
    v48 = v76;
    v49 = v56;
    *v56 = v72;
    *((_DWORD *)v49 + 2) = v45;
    *((_DWORD *)v49 + 3) = v36;
    *((_DWORD *)v49 + 4) = v46;
    *((_WORD *)v49 + 10) = v47;
    *((_BYTE *)v49 + 22) = v48;
  }
  else
  {
    v44 = v56;
    *v56 = a4;
    v44[1] = v5;
    *((_DWORD *)v44 + 4) = v6;
    *((_WORD *)v44 + 10) = WORD2(v6);
    *((_BYTE *)v44 + 22) = BYTE6(v6);
  }
}

double sub_1A57497F8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  sub_1A5751898();
  if (!v1)
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_QWORD *)(a1 + 32) = 0x8000000000000000;
    *(_QWORD *)(a1 + 40) = 0;
    *(_QWORD *)(a1 + 48) = 0;
    *(_QWORD *)(a1 + 56) = 0;
  }
  return result;
}

void sub_1A574985C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1A5751898();
  if (!v1)
  {
    *a1 = 1;
    a1[1] = 0;
    a1[2] = 0;
    a1[3] = 0;
    a1[4] = 0x8000000000000000;
    a1[5] = 0;
    a1[6] = 0;
    a1[7] = 0;
  }
}

double sub_1A57498C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  double result;

  swift_retain();
  v17 = sub_1A575D524(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    *(_QWORD *)a8 = v17;
    result = 0.0;
    *(_OWORD *)(a8 + 8) = 0u;
    *(_OWORD *)(a8 + 24) = 0u;
    *(_OWORD *)(a8 + 40) = 0u;
    *(_QWORD *)(a8 + 56) = 0;
  }
  return result;
}

double sub_1A5749954@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  double result;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];
  unsigned __int8 v23;
  __int128 v24;
  uint64_t v25;

  swift_retain();
  sub_1A5758494(v22, a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v18 = v25;
    v19 = v23 | 0x4000000000000000;
    result = *(double *)v22;
    v20 = v22[1];
    v21 = v24;
    *(_OWORD *)a8 = v22[0];
    *(_OWORD *)(a8 + 16) = v20;
    *(_QWORD *)(a8 + 32) = v19;
    *(_OWORD *)(a8 + 40) = v21;
    *(_QWORD *)(a8 + 56) = v18;
  }
  return result;
}

void sub_1A5749A00(uint64_t a1@<X0>, _QWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  sub_1A5749A38(a1, a2, (void (*)(__int128 *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A57497F8, a3);
}

void sub_1A5749A1C(uint64_t a1@<X0>, _QWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  sub_1A5749A38(a1, a2, (void (*)(__int128 *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A574985C, a3);
}

void sub_1A5749A38(uint64_t a1@<X0>, _QWORD *a2@<X1>, void (*a3)(__int128 *__return_ptr, uint64_t, _QWORD, _QWORD)@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v4;
  __int128 v6[4];

  a3(v6, a1, *a2, a2[1]);
  if (!v4)
    sub_1A56D0898(v6, a4);
  OUTLINED_FUNCTION_260_0();
}

_OWORD *sub_1A5749A84@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *(*a3)(__int128 *__return_ptr, uint64_t, _QWORD, _QWORD)@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v4;
  _OWORD *result;
  __int128 v7[4];

  result = a3(v7, a1, *a2, a2[1]);
  if (!v4)
    return sub_1A56D0898(v7, a4);
  return result;
}

uint64_t sub_1A5749AD8()
{
  sub_1A5751898();
  return 0;
}

uint64_t sub_1A5749B0C()
{
  sub_1A5751898();
  return 1;
}

uint64_t sub_1A5749B40()
{
  sub_1A5751898();
  return 2;
}

uint64_t sub_1A5749B80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1A5749AD8();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1A5749BA8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1A5749B0C();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1A5749BD0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1A5749B40();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1A5749BF8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  __int16 v9;
  char v10;
  uint64_t *v11;
  uint64_t v13;
  unsigned __int8 v14;

  if (__OFADD__(a2, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  v4 = a3;
  if (a2 + 1 >= a3)
  {
    sub_1A5718F9C();
    swift_allocError();
    *v11 = v4;
    goto LABEL_6;
  }
  v6 = *a1;
  v7 = a1[1];
  v8 = *((_DWORD *)a1 + 4);
  v9 = *((_WORD *)a1 + 10);
  v10 = *((_BYTE *)a1 + 22);
  swift_retain();
  sub_1A5751898();
  if (!v3)
  {
    if (qword_1EE796AF8 == -1)
    {
LABEL_9:
      v4 = static SectionSpecifier.complete;
      v13 = unk_1EE7F95C0;
      v14 = byte_1EE7F95C8;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55DC724(v13, v14);
      swift_release();
      return v4;
    }
LABEL_11:
    swift_once();
    goto LABEL_9;
  }
  swift_release();
  *a1 = v6;
  a1[1] = v7;
  *((_DWORD *)a1 + 4) = v8;
  *((_WORD *)a1 + 10) = v9;
  *((_BYTE *)a1 + 22) = v10;
LABEL_6:
  swift_willThrow();
  return v4;
}

uint64_t sub_1A5749D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
  {
    a5 = sub_1A5749E40(a1, a2, a3, a4, a5, a6, a7);
    sub_1A5751898();
  }
  return a5;
}

uint64_t sub_1A5749E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_55_10(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_8_48();
  sub_1A576FA1C(v7, v8);
  return OUTLINED_FUNCTION_57_13(v9);
}

void sub_1A5749EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  OUTLINED_FUNCTION_24_24();
  a19 = v21;
  a20 = v22;
  v54 = v23;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
  v36 = OUTLINED_FUNCTION_20_1();
  *(_OWORD *)(v36 + 16) = xmmword_1A59ABD10;
  v37 = OUTLINED_FUNCTION_214(v33, v31, v29, 0);
  if (!v20)
  {
    if ((v37 & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_268_0(v37, v38, v39, v40, v41, v42, v43, v44, v53);
      *(_QWORD *)(v36 + 32) = v45;
      a10 = v36;
      MEMORY[0x1E0C80A78](v45);
      OUTLINED_FUNCTION_89_3();
      *(_QWORD *)(v46 - 32) = v47;
      *(_QWORD *)(v46 - 24) = v27;
      *(_QWORD *)(v46 - 16) = v25;
      *(_QWORD *)(v46 - 8) = v54;
      sub_1A5751ECC(v33, v31, v29, (uint64_t)sub_1A575002C, v48, (uint64_t)&a10);
      OUTLINED_FUNCTION_153_2();
      *v35 = a10;
      goto LABEL_3;
    }
    sub_1A56E9774();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_248_0();
    OUTLINED_FUNCTION_5_61(v49, v50);
    *(_QWORD *)(v51 + 16) = v52;
    *(_QWORD *)(v51 + 24) = 0x80000001A5A0F5E0;
    OUTLINED_FUNCTION_11_20(v51, 167);
  }
  *(_QWORD *)(v36 + 16) = 0;
  OUTLINED_FUNCTION_2_4();
LABEL_3:
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_32_17();
}

void sub_1A5749FFC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_retain();
  sub_1A5757818();
  if (!v1)
    *a1 = v3;
}

uint64_t sub_1A574A07C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_189_1();
  OUTLINED_FUNCTION_20_29();
  OUTLINED_FUNCTION_17_36();
  sub_1A5757E30();
  return OUTLINED_FUNCTION_57_13(v0);
}

uint64_t sub_1A574A0BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_22_33();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AEC8);
  v1 = OUTLINED_FUNCTION_232_0();
  *(_OWORD *)(v1 + 16) = xmmword_1A59ABDD0;
  *(_QWORD *)(v1 + 32) = sub_1A574A4F8;
  *(_QWORD *)(v1 + 40) = 0;
  v2 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v2);
  v3 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v3 + 16) = sub_1A5750130;
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(v1 + 48) = sub_1A5750148;
  *(_QWORD *)(v1 + 56) = v3;
  v4 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v4);
  v5 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v5 + 16) = sub_1A575015C;
  *(_QWORD *)(v5 + 24) = v0;
  *(_QWORD *)(v1 + 64) = sub_1A5750148;
  *(_QWORD *)(v1 + 72) = v5;
  *(_QWORD *)(v1 + 80) = sub_1A574A514;
  *(_QWORD *)(v1 + 88) = 0;
  *(_QWORD *)(v1 + 96) = sub_1A574A530;
  *(_QWORD *)(v1 + 104) = 0;
  *(_QWORD *)(v1 + 112) = sub_1A574A54C;
  *(_QWORD *)(v1 + 120) = 0;
  OUTLINED_FUNCTION_87();
  v6 = OUTLINED_FUNCTION_5_60();
  v12 = sub_1A57717FC(v6, v7, v8, v9, v10, v11, 2053);
  OUTLINED_FUNCTION_15_41();
  sub_1A5774244();
  return v12;
}

#error "1A574A25C: call analysis failed (funcsize=46)"

uint64_t sub_1A574A2C4()
{
  sub_1A5751898();
  return 2;
}

uint64_t sub_1A574A300()
{
  sub_1A5751898();
  return 1;
}

void sub_1A574A340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
  {
    swift_retain();
    sub_1A57544B0(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_1A574A3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
  {
    swift_retain();
    sub_1A57544B0(a1, a2, a3, a4, a5, a6, a7);
  }
}

uint64_t sub_1A574A4B0()
{
  sub_1A5751898();
  return 3;
}

uint64_t sub_1A574A4EC()
{
  return 0;
}

void sub_1A574A4F8()
{
  sub_1A574D480();
}

void sub_1A574A514()
{
  sub_1A574D480();
}

void sub_1A574A530()
{
  sub_1A574D480();
}

void sub_1A574A54C()
{
  sub_1A574D480();
}

uint64_t sub_1A574A568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_retain();
  result = sub_1A575834C(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    *a8 = result;
    a8[1] = v18;
    a8[2] = v19;
    a8[3] = v20 & 0xFFFFFFFFFFFFLL;
    a8[5] = 0;
    a8[6] = 0;
    a8[4] = 0;
    *(uint64_t *)((char *)a8 + 53) = 0;
  }
  return result;
}

void sub_1A574A5FC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1A5751898();
  if (!v1)
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    a1[3] = 0x8000000000000000;
    a1[5] = 0;
    a1[6] = 0;
    a1[4] = 0;
    *(_QWORD *)((char *)a1 + 53) = 0;
  }
}

void sub_1A574A664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  char v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  _BYTE v43[5];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  OUTLINED_FUNCTION_197_1();
  v72 = v2;
  v4 = v3;
  OUTLINED_FUNCTION_14_34();
  if (!v0)
  {
    v5 = OUTLINED_FUNCTION_27_21();
    HIDWORD(v52) = sub_1A573E438(v5, v6, v7);
    v8 = OUTLINED_FUNCTION_190();
    sub_1A5751974(v8, v9, v10);
    v11 = OUTLINED_FUNCTION_27_21();
    v47 = sub_1A573E2D8(v11, v12, v13);
    OUTLINED_FUNCTION_18_0();
    v14 = OUTLINED_FUNCTION_27_21();
    v22 = sub_1A57608B4(v14, v15, v16, v17, v18, v19, v20, v21, v39, v41, v44, v47, v50, v52, v55, v57, v59, v61, v63,
            v65,
            v67,
            v69,
            v1,
            v72);
    v42 = v23;
    v45 = v22;
    OUTLINED_FUNCTION_18_0();
    v24 = OUTLINED_FUNCTION_27_21();
    v32 = sub_1A5760970(v24, v25, v26, v27, v28, v29, v30, v31, v40, v42, v45, v48, v51, v53, v56, v58, v60, v62, v64,
            v66,
            v68,
            v70,
            v71,
            v73);
    v34 = v33;
    v36 = v35;
    v38 = v37;
    sub_1A5751898();
    *(_QWORD *)v4 = v54;
    *(_QWORD *)(v4 + 8) = v49;
    *(_QWORD *)(v4 + 16) = v46;
    *(_QWORD *)(v4 + 24) = *(_QWORD *)v43 & 0xFFFFFFFFFFLL | 0x4000000000000000;
    *(_QWORD *)(v4 + 32) = v32;
    *(_QWORD *)(v4 + 40) = v34;
    *(_QWORD *)(v4 + 48) = v36;
    *(_DWORD *)(v4 + 56) = v38;
    *(_BYTE *)(v4 + 60) = BYTE4(v38);
  }
  OUTLINED_FUNCTION_11_3();
}

void sub_1A574A7CC(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __int128 v3[4];

  sub_1A574A5FC(v3);
  if (!v1)
    sub_1A5702374(v3, a1);
}

_OWORD *sub_1A574A810@<X0>(_QWORD *(*a1)(__int128 *__return_ptr)@<X3>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  _OWORD *result;
  __int128 v5[4];

  result = a1(v5);
  if (!v2)
    return sub_1A5702374(v5, a2);
  return result;
}

void sub_1A574A858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  OUTLINED_FUNCTION_24_24();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  OUTLINED_FUNCTION_213_0();
  OUTLINED_FUNCTION_261_0();
  if (!v1)
  {
    *(_QWORD *)&v24 = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)&v24 + 1) = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_18_0();
    OUTLINED_FUNCTION_219_0();
    sub_1A575834C(v9, v10, v11, v12, v13, v14, v15);
    sub_1A5724EA4();
    MEMORY[0x1E0C80A78](v16);
    OUTLINED_FUNCTION_89_3();
    *(_QWORD *)(v17 - 32) = v2;
    *(_QWORD *)(v17 - 24) = v8;
    *(_QWORD *)(v17 - 16) = v6;
    *(_QWORD *)(v17 - 8) = v4;
    v18 = OUTLINED_FUNCTION_148_2();
    sub_1A57525D4(v18, v19, v20, v21, v22, v23);
    OUTLINED_FUNCTION_58_8();
    *(_QWORD *)v0 = 0;
    *(_OWORD *)(v0 + 8) = v24;
  }
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_32_17();
}

void sub_1A574A9B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  int v19;
  __int16 v20;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    swift_retain();
    *(_QWORD *)a8 = sub_1A575834C(a1, a2, a3, a4, a5, a6, a7);
    *(_QWORD *)(a8 + 8) = v17;
    *(_QWORD *)(a8 + 16) = v18;
    *(_DWORD *)(a8 + 24) = v19;
    *(_WORD *)(a8 + 28) = v20;
  }
}

void sub_1A574AA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_24_24();
  OUTLINED_FUNCTION_8_45();
  OUTLINED_FUNCTION_14_34();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AEA8);
    v1 = OUTLINED_FUNCTION_20_1();
    *(_OWORD *)(v1 + 16) = xmmword_1A59ABD10;
    v2 = OUTLINED_FUNCTION_7_41();
    v5 = sub_1A5740644(v2, v3, v4);
    OUTLINED_FUNCTION_268_0(v5, v6, v7, v8, v9, v10, v11, v12, v22);
    *(_BYTE *)(v1 + 32) = v13;
    OUTLINED_FUNCTION_178_2();
    MEMORY[0x1E0C80A78](v14);
    OUTLINED_FUNCTION_4_60();
    v15 = OUTLINED_FUNCTION_7_41();
    sub_1A5751E24(v15, v16, v17, v18, v19, v20);
    OUTLINED_FUNCTION_6_50();
    v21 = OUTLINED_FUNCTION_184_1();
    OUTLINED_FUNCTION_204_0(v21);
  }
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_32_17();
}

void sub_1A574AB40(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v4;

  sub_1A5751974(a1, a2, a3);
  if (!v4)
    *a4 = sub_1A5740644(a1, a2, a3);
}

void sub_1A574AB90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_24_24();
  OUTLINED_FUNCTION_8_45();
  sub_1A5751974(v1, v2, v3);
  if (!v0)
  {
    OUTLINED_FUNCTION_6_50();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9560);
    v4 = (__n128 *)OUTLINED_FUNCTION_20_1();
    v5 = OUTLINED_FUNCTION_12_41(v4, (__n128)xmmword_1A59ABD10);
    v12 = sub_1A574AC74(v5, v6, v7, v8, v9, v10, v11);
    v20 = OUTLINED_FUNCTION_88_4(v12, v13, v14, v15, v16, v17, v18, v19, v22);
    MEMORY[0x1E0C80A78](v20);
    OUTLINED_FUNCTION_4_60();
    OUTLINED_FUNCTION_7_41();
    sub_1A57525F0();
    OUTLINED_FUNCTION_6_50();
    v21 = OUTLINED_FUNCTION_184_1();
    OUTLINED_FUNCTION_204_0(v21);
  }
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_32_17();
}

uint64_t sub_1A574AC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  OUTLINED_FUNCTION_111_1(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_8_48();
  sub_1A576FFD4(v7, v8);
  return OUTLINED_FUNCTION_57_13(v9 & 0xFFFFFFFFFFFFLL | ((HIWORD(v9) & 1) << 48));
}

void sub_1A574ACFC()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_24_24();
  OUTLINED_FUNCTION_33_19(v2, v3, v4);
  if (!v1)
  {
    v5 = OUTLINED_FUNCTION_3_56();
    v6 = v0(v5);
    OUTLINED_FUNCTION_159_2(v6, v7, v8, v9);
  }
  OUTLINED_FUNCTION_32_17();
}

void sub_1A574AD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  sub_1A575B244(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1A574ADC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_163_2();
  OUTLINED_FUNCTION_34_19();
  v0 = OUTLINED_FUNCTION_35_15();
  return sub_1A575834C(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A574AE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = a4();
  if (!v4)
    OUTLINED_FUNCTION_159_2(v5, v6, v7, v8);
  OUTLINED_FUNCTION_1();
}

void sub_1A574AE60(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_1A5751898();
  if (!v1)
    *a1 = 0;
}

void sub_1A574AEA4(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_1A5751898();
  if (!v1)
    *a1 = 1;
}

void sub_1A574AEEC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_1A5751898();
  if (!v1)
    *a1 = 2;
}

uint64_t sub_1A574AF34()
{
  void *v0;
  id v1;
  char v2;

  OUTLINED_FUNCTION_150_1();
  OUTLINED_FUNCTION_143_2();
  if (v0)
  {
    v1 = v0;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (OUTLINED_FUNCTION_17_31())
    {

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_17();

      v2 = 0;
    }
    else
    {

    }
  }
  else
  {
    v2 = 1;
  }
  return v2 & 1;
}

void sub_1A574AFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  _BYTE *v54;

  OUTLINED_FUNCTION_24_24();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  OUTLINED_FUNCTION_151_2();
  v54 = v19;
  v50 = v20;
  OUTLINED_FUNCTION_66_8();
  v29 = OUTLINED_FUNCTION_154_2((uint64_t)sub_1A574AE60, v21, (uint64_t)sub_1A574AEA4, v22, (uint64_t)sub_1A574AEEC, v23, v24, v25, v50, 0xD000000000000020, v27, v26, v28, (uint64_t)sub_1A575CD44, (uint64_t)sub_1A575CD44);
  if (!v10)
  {
    v30 = v29;
    OUTLINED_FUNCTION_36_18();
    v53 = OUTLINED_FUNCTION_181_2();
    OUTLINED_FUNCTION_36_18();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9518);
    v52 = OUTLINED_FUNCTION_20_1();
    *(_OWORD *)(v52 + 16) = xmmword_1A59ABD10;
    OUTLINED_FUNCTION_219_0();
    v51 = (uint64_t)&v51;
    v38 = sub_1A57410A4(v31, v32, v33, v34, v35, v36, v37);
    v41 = OUTLINED_FUNCTION_94_4(v38, v39, v40);
    MEMORY[0x1E0C80A78](v41);
    OUTLINED_FUNCTION_89_3();
    *(_QWORD *)(v42 - 32) = v18;
    *(_QWORD *)(v42 - 24) = v16;
    *(_QWORD *)(v42 - 16) = v14;
    *(_QWORD *)(v42 - 8) = v12;
    v43 = OUTLINED_FUNCTION_256_0();
    sub_1A5751F20(v43, v44, v45, v46, v47, v48);
    OUTLINED_FUNCTION_36_18();
    v49 = v54;
    *v54 = v30;
    v49[1] = v53 & 1;
    *((_QWORD *)v49 + 1) = a10;
  }
  OUTLINED_FUNCTION_32_17();
}

uint64_t sub_1A574B1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF50);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1A59ABD10;
  sub_1A5743BC4();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = 0;
    return swift_release();
  }
  else
  {
    v5[1] = v5;
    *(_QWORD *)(v1 + 32) = v2;
    *(_QWORD *)(v1 + 40) = v3;
    v6 = v1;
    MEMORY[0x1E0C80A78](v2);
    sub_1A57521D8();
    return v6;
  }
}

void sub_1A574B31C()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_24_24();
  OUTLINED_FUNCTION_33_19(v3, v4, v5);
  if (!v2)
  {
    v6 = OUTLINED_FUNCTION_3_56();
    *v0 = v1(v6);
    v0[1] = v7;
  }
  OUTLINED_FUNCTION_32_17();
}

void sub_1A574B350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t inited;
  char v35;
  char v36;
  uint64_t v37;

  OUTLINED_FUNCTION_151_2();
  v37 = v12;
  v36 = OUTLINED_FUNCTION_154_2((uint64_t)sub_1A574AE60, v13, (uint64_t)sub_1A574AEA4, v15, (uint64_t)sub_1A574AEEC, v16, v17, v18, v14, 0xD000000000000020, 0x80000001A5A0F5E0, 2196, (uint64_t)sub_1A575CD44, (uint64_t)sub_1A575CD44, (uint64_t)sub_1A575CD44);
  if (!v7)
  {
    OUTLINED_FUNCTION_36_18();
    v35 = OUTLINED_FUNCTION_181_2();
    v19 = OUTLINED_FUNCTION_256_0();
    sub_1A5751974(v19, v20, v21);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E58);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A59ABD40;
    v33 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    v33[2] = a4;
    v33[3] = a5;
    v33[4] = a6;
    v33[5] = a7;
    v22 = OUTLINED_FUNCTION_20_1();
    *(_QWORD *)(v22 + 16) = sub_1A5750254;
    *(_QWORD *)(v22 + 24) = v33;
    *(_QWORD *)(inited + 32) = sub_1A575026C;
    *(_QWORD *)(inited + 40) = v22;
    v23 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    v23[2] = a4;
    v23[3] = a5;
    v23[4] = a6;
    v23[5] = a7;
    v24 = v23;
    v25 = OUTLINED_FUNCTION_20_1();
    *(_QWORD *)(v25 + 16) = sub_1A5750280;
    *(_QWORD *)(v25 + 24) = v24;
    *(_QWORD *)(inited + 48) = sub_1A575026C;
    *(_QWORD *)(inited + 56) = v25;
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_102_1();
    v32 = sub_1A57719C4(v26, v27, v28, v29, v30, v31, 2256);
    swift_setDeallocating();
    sub_1A5774244();
    *(_BYTE *)v37 = v36;
    *(_BYTE *)(v37 + 1) = v35 & 1;
    *(_QWORD *)(v37 + 8) = v32;
  }
  OUTLINED_FUNCTION_21_27();
}

uint64_t sub_1A574B570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  return sub_1A5753A04(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1A574B5E4()
{
  unint64_t *v0;
  uint64_t v1;
  __int16 v2;
  unint64_t v3;

  OUTLINED_FUNCTION_34_22();
  OUTLINED_FUNCTION_35_15();
  sub_1A575D7F4();
  if (!v1)
  {
    *v0 = v2 & 0x1FF | 0x8000000000000000;
    v0[1] = v3;
  }
  OUTLINED_FUNCTION_17_35();
}

void sub_1A574B620()
{
  _QWORD *v0;
  uint64_t v1;
  __int16 v2;
  uint64_t v3;

  OUTLINED_FUNCTION_34_22();
  OUTLINED_FUNCTION_35_15();
  sub_1A575D810();
  if (!v1)
  {
    *v0 = v2 & 0x1FF;
    v0[1] = v3;
  }
  OUTLINED_FUNCTION_17_35();
}

void sub_1A574B658()
{
  sub_1A574B66C();
}

void sub_1A574B66C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_189_1();
  OUTLINED_FUNCTION_20_29();
  v0 = OUTLINED_FUNCTION_17_36();
  sub_1A5752A44(v0, v1, v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_57_13(v7 & 0xFFFFFFFFFFFFFFLL);
  OUTLINED_FUNCTION_1_1();
}

void sub_1A574B6A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_197_1();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_1A57413C0(v13, v11, v9, v7, v5, v3, v1, v17, v31, v32, v34, v36, v37, v38, v40, v41, v42, v43, v44, v45);
  if (!v0)
  {
    v33 = v8;
    v35 = v6;
    v39 = v2;
    v20 = v18;
    v21 = v19;
    if (sub_1A594B49C() == 0x6574616E65746163 && v22 == 0xE800000000000000)
    {
      OUTLINED_FUNCTION_52();
    }
    else
    {
      v24 = OUTLINED_FUNCTION_1_16();
      OUTLINED_FUNCTION_41();
      if ((v24 & 1) == 0)
      {
        sub_1A5751974(v14, v12, v10);
        v27 = sub_1A5741024(v14, v12, v10, v33, v35, v4, v39);
        *(_QWORD *)v16 = v20;
        *(_QWORD *)(v16 + 8) = v21;
        *(_QWORD *)(v16 + 16) = v27;
        *(_DWORD *)(v16 + 24) = v28;
        *(_BYTE *)(v16 + 28) = v29;
        *(_BYTE *)(v16 + 29) = v30 & 1;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    sub_1A56E9774();
    OUTLINED_FUNCTION_21();
    *v25 = 0xD000000000000012;
    v25[1] = 0x80000001A5A0FE70;
    OUTLINED_FUNCTION_15_35((uint64_t)v25, 0xD000000000000020);
    OUTLINED_FUNCTION_11_20(v26, 2320);
  }
LABEL_11:
  OUTLINED_FUNCTION_11_3();
}

void sub_1A574B82C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  unsigned __int8 v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[56];

  sub_1A5760B70(a1);
  if (!v4)
  {
    v10 = v9;
    if ((sub_1A57763E0(v9) & 1) != 0)
    {
      v11 = sub_1A5752AB4(a1, a2, a3);
      ByteBufferView.init(_:)(v11, v13, v12 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v23);
      swift_retain();
      sub_1A56E6FE8((uint64_t)v23);
      if (v14)
      {
        v21 = sub_1A594B538();
        v22 = v15;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A594B5F8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        *a4 = v21;
        a4[1] = v22;
      }
      else
      {
        sub_1A56E9774();
        swift_allocError();
        strcpy(v20, "Invalid UTF8");
        v20[13] = 0;
        *((_WORD *)v20 + 7) = -5120;
        *((_QWORD *)v20 + 2) = 0xD000000000000020;
        *((_QWORD *)v20 + 3) = 0x80000001A5A0F5E0;
        *((_QWORD *)v20 + 4) = 2341;
        swift_willThrow();
        swift_release();
      }
    }
    else
    {
      sub_1A594C720();
      v23[55] = v10;
      v16 = sub_1A594CC9C();
      v18 = v17;
      swift_bridgeObjectRelease();
      sub_1A594B5F8();
      sub_1A56E9774();
      swift_allocError();
      *v19 = v16;
      v19[1] = v18;
      v19[2] = 0xD000000000000020;
      v19[3] = 0x80000001A5A0F5E0;
      v19[4] = 2335;
      swift_willThrow();
    }
  }
}

void sub_1A574BA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  void *v13;
  uint64_t v14;
  int v15;
  __int16 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t *v53;
  void *v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  char v61;
  __int16 v62;
  void *v63;
  _BYTE v68[48];
  uint64_t v69;

  v9 = a3 + 1;
  if (__OFADD__(a3, 1))
  {
    __break(1u);
    return;
  }
  if (v9 >= a4)
  {
    sub_1A5718F9C();
    v19 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_199_0(v19, v20);
    goto LABEL_18;
  }
  v13 = *(void **)a2;
  v14 = *(_QWORD *)(a2 + 8);
  v15 = *(_DWORD *)(a2 + 16);
  v16 = *(_WORD *)(a2 + 20);
  v17 = *(_BYTE *)(a2 + 22);
  OUTLINED_FUNCTION_258_0();
  sub_1A576B3AC(v18);
  if (v8)
  {
    *(_QWORD *)a2 = v13;
    *(_QWORD *)(a2 + 8) = v14;
    *(_DWORD *)(a2 + 16) = v15;
    *(_WORD *)(a2 + 20) = v16;
    *(_BYTE *)(a2 + 22) = v17;
    goto LABEL_18;
  }
  v58 = v9 + 2;
  v59 = v9 + 1;
  v57 = v9;
  while (1)
  {
    v21 = *(void **)a2;
    v60 = *(_DWORD *)(a2 + 16);
    v61 = *(_BYTE *)(a2 + 22);
    v62 = *(_WORD *)(a2 + 20);
    v22 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    v22[2] = a5;
    v22[3] = a6;
    v22[4] = a7;
    v22[5] = a8;
    MEMORY[0x1E0C80A78](v22);
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_40_17();
    sub_1A576F59C(v23, v24, v25, v26);
    v37 = v27;
    v38 = v28;
    v39 = v29;
    OUTLINED_FUNCTION_19_0();
    v56 = v56 & 0xFF00000000000000 | v39 & 0xFFFFFFFFFFFFFFLL;
    ByteBufferView.init(_:)(v37, v38, v56, (uint64_t)v68);
    OUTLINED_FUNCTION_39();
    v40 = sub_1A56E6FE8((uint64_t)v68);
    if (!v41)
      break;
    v42 = v40;
    v43 = v41;
    sub_1A57161E8();
    v44 = *(_QWORD *)(*(_QWORD *)a1 + 16);
    sub_1A5716398(v44);
    v45 = *(_QWORD *)a1;
    *(_QWORD *)(v45 + 16) = v44 + 1;
    v46 = v45 + 16 * v44;
    *(_QWORD *)(v46 + 32) = v42;
    *(_QWORD *)(v46 + 40) = v43;
    *(_QWORD *)a1 = v45;
    sub_1A574BA64(a1, a2, v57, a4, a5, a6, a7, a8);
    OUTLINED_FUNCTION_149_0();
LABEL_13:
    OUTLINED_FUNCTION_40();
    OUTLINED_FUNCTION_258_0();
    sub_1A576B3AC(v47);
  }
  sub_1A56E9774();
  v48 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_216_0(v48, v49);
  *(_QWORD *)(v50 + 8) = 0xEC00000038465455;
  OUTLINED_FUNCTION_110_1(v50, (uint64_t)&v69);
  *(_QWORD *)(v51 + 32) = 2375;
  v63 = v52;
  swift_willThrow();
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_226_0();
  *(_DWORD *)(a2 + 16) = v60;
  *(_WORD *)(a2 + 20) = v62;
  *(_BYTE *)(a2 + 22) = v61;
  if (v59 >= a4)
  {
    sub_1A5718F9C();
    OUTLINED_FUNCTION_21();
    *v53 = a4;
    swift_retain();
    v54 = v63;
    goto LABEL_17;
  }
  if (v58 < a4)
  {
    OUTLINED_FUNCTION_129_1();
    OUTLINED_FUNCTION_195_1();
    sub_1A576B64C(v30, v31, v32, v33, v34, v35, v36);
    swift_release();
    OUTLINED_FUNCTION_87();
    sub_1A574C290(a1, a2, v58, a4, a5, a6, a7, a8);
    OUTLINED_FUNCTION_40();
    OUTLINED_FUNCTION_40();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_122_2((void **)a2, v58);
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_166_2(a1, a2, v59);
    OUTLINED_FUNCTION_149_0();

    goto LABEL_13;
  }
  sub_1A5718F9C();
  OUTLINED_FUNCTION_21();
  *v55 = a4;
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_46_11();
  v54 = v63;
  OUTLINED_FUNCTION_68_0();
  *(_QWORD *)a2 = v21;
  OUTLINED_FUNCTION_276_0();
LABEL_17:
  OUTLINED_FUNCTION_46_11();

  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_68_0();
  *(_QWORD *)a2 = v21;
  OUTLINED_FUNCTION_276_0();
LABEL_18:
  OUTLINED_FUNCTION_46_11();
  OUTLINED_FUNCTION_66_9();
}

uint64_t sub_1A574C290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;

  result = sub_1A573EE0C(a2, a3, a4, a5, a6, a7, a8);
  v30 = result;
  if (!v8)
  {
    v28 = a8;
    ByteBufferView.init(_:)(v30, v18, v19 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v29);
    swift_retain();
    v20 = sub_1A56E6FE8((uint64_t)v29);
    if (v21)
    {
      v26 = v20;
      v27 = v21;
      sub_1A57161E8();
      v22 = *(_QWORD *)(*(_QWORD *)a1 + 16);
      sub_1A5716398(v22);
      v23 = *(_QWORD *)a1;
      *(_QWORD *)(v23 + 16) = v22 + 1;
      v24 = v23 + 16 * v22;
      *(_QWORD *)(v24 + 32) = v26;
      *(_QWORD *)(v24 + 40) = v27;
      *(_QWORD *)a1 = v23;
      sub_1A574BA64(a1, a2, a3, a4, a5, a6, a7, v28);
    }
    else
    {
      sub_1A56E9774();
      swift_allocError();
      strcpy(v25, "Invalid UTF8");
      v25[13] = 0;
      *((_WORD *)v25 + 7) = -5120;
      *((_QWORD *)v25 + 2) = 0xD000000000000020;
      *((_QWORD *)v25 + 3) = 0x80000001A5A0F5E0;
      *((_QWORD *)v25 + 4) = 2375;
      swift_willThrow();
    }
    return swift_release();
  }
  return result;
}

void sub_1A574C424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_163_2();
  OUTLINED_FUNCTION_9_45();
  if (!v8)
  {
    OUTLINED_FUNCTION_0_10();
    sub_1A5752624(v11, v10, v9, a4, a5, a6, a7, a8);
    OUTLINED_FUNCTION_9_45();
    sub_1A574BA64(a8, v11, v10, v9, a4, a5, a6, a7);
  }
  OUTLINED_FUNCTION_17_35();
}

void sub_1A574C4CC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int16 v15;
  int v16;

  OUTLINED_FUNCTION_197_1();
  v2 = v1;
  v4 = v3;
  v5 = *(_QWORD *)v3;
  v6 = *(_QWORD *)(v3 + 8);
  v15 = *(_WORD *)(v3 + 20);
  v16 = *(_DWORD *)(v3 + 16);
  v14 = *(_BYTE *)(v3 + 22);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_265_0();
  sub_1A574C290(v7, v8, v9, v10, v11, v12, v13, v2);
  if (v0)
  {
    OUTLINED_FUNCTION_68_4();
    *(_QWORD *)v4 = v5;
    *(_QWORD *)(v4 + 8) = v6;
    *(_DWORD *)(v4 + 16) = v16;
    *(_WORD *)(v4 + 20) = v15;
    *(_BYTE *)(v4 + 22) = v14;
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_12_1();
    sub_1A5752648(v4);
    OUTLINED_FUNCTION_23();

  }
  else
  {
    OUTLINED_FUNCTION_23();
  }
}

void sub_1A574C604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _BYTE v7[16];
  uint64_t (*v8)();
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = a4;
  v12 = a5;
  v13 = a6;
  v14 = a7;
  v8 = sub_1A574FFB0;
  v9 = &v10;
  sub_1A576F918((uint64_t)sub_1A575000C, (uint64_t)v7, (uint64_t)sub_1A574FFC8, 0);
}

uint64_t sub_1A574C6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;

  sub_1A5751898();
  if (!v7)
  {
    swift_retain();
    sub_1A575F6C0();
    if (v9)
      a7 = v9;
    else
      a7 = MEMORY[0x1E0DEE9D8];
    sub_1A5751898();
  }
  return a7;
}

uint64_t sub_1A574C7B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_189_1();
  OUTLINED_FUNCTION_101_3();
  v3 = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_34_19();
  v1 = OUTLINED_FUNCTION_17_36();
  sub_1A5752624(v1);
  if (v0)
    OUTLINED_FUNCTION_9_2();
  return v3;
}

void sub_1A574C81C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_189_1();
  OUTLINED_FUNCTION_20_29();
  v0 = OUTLINED_FUNCTION_17_36();
  sub_1A575D8FC(v0);
  OUTLINED_FUNCTION_57_13(v1);
  OUTLINED_FUNCTION_1_1();
}

void sub_1A574C850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  _QWORD *v7;

  v4 = __OFADD__(a2, 1);
  v5 = a2 + 1;
  if (!v4)
  {
    if (v5 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v7 = a3;
    }
    else
    {
      sub_1A576B3AC(a1);
      if (!v3)
      {
LABEL_7:
        OUTLINED_FUNCTION_2_70();
        return;
      }
      OUTLINED_FUNCTION_106_2();
    }
    OUTLINED_FUNCTION_80_4();
    goto LABEL_7;
  }
  __break(1u);
}

void sub_1A574C8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_55_10(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_8_48();
  sub_1A576F8C0(v7, v8, v9, v10);
}

uint64_t sub_1A574C944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  __int16 v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t *v47;
  uint64_t *v48;
  id v49;
  _QWORD *v50;
  _QWORD v51[5];
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;

  sub_1A5751898();
  if (v7)
    return v8;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ADD0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A59ABD10;
  v16 = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
  result = MailboxName.init(_:)(v16, v18, v17 & 0xFFFFFFFFFFFFFFLL);
  *(_QWORD *)(v8 + 32) = result;
  *(_DWORD *)(v8 + 40) = v20;
  v21 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v21 >= a3)
    {
      sub_1A5718F9C();
      v46 = (void *)swift_allocError();
      *v47 = a3;
    }
    else
    {
      v55 = a4;
      v56 = a5;
      v57 = a6;
      v58 = a7;
      v52 = v8;
      v59 = a2;
      v22 = a2 + 2;
      v23 = *(_QWORD *)a1;
      v24 = *(_DWORD *)(a1 + 8);
      v25 = *(_DWORD *)(a1 + 12);
      v26 = *(_DWORD *)(a1 + 16);
      v27 = *(_WORD *)(a1 + 20);
      v28 = *(_BYTE *)(a1 + 22);
      if (v21 + 1 < a3)
      {
        v53 = v22;
        v54 = 0x80000001A5A0F5E0;
        v29 = v52;
        while (1)
        {
          v60 = v29;
          swift_retain();
          sub_1A576B3AC(a1);
          swift_release();
          v30 = (_QWORD *)swift_allocObject();
          v30[2] = v55;
          v31 = v56;
          v32 = v57;
          v30[3] = v56;
          v30[4] = v32;
          v30[5] = v58;
          MEMORY[0x1E0C80A78](v31);
          v51[2] = sub_1A5750678;
          v51[3] = v30;
          swift_retain();
          sub_1A576F59C((uint64_t)sub_1A575083C, (uint64_t)v51, (uint64_t)sub_1A5740F84, 0);
          v34 = v33;
          v36 = v35;
          v38 = v37;
          swift_release();
          result = swift_beginAccess();
          if (HIDWORD(v36) < v36)
            break;
          sub_1A566AF30((const void *)(*(_QWORD *)(v34 + 24) + ((v38 >> 24) & 0xFFFF00 | BYTE6(v38)) + v36), (HIDWORD(v36) - v36));
          v40 = MailboxName.init(_:)(v39);
          v42 = v41;
          swift_release();
          v29 = v60;
          v43 = *(_QWORD *)(v60 + 16);
          if (v43 >= *(_QWORD *)(v60 + 24) >> 1)
          {
            sub_1A569EA50();
            v29 = v45;
          }
          *(_QWORD *)(v29 + 16) = v43 + 1;
          v44 = v29 + 16 * v43;
          *(_QWORD *)(v44 + 32) = v40;
          *(_DWORD *)(v44 + 40) = v42;
          v23 = *(_QWORD *)a1;
          v24 = *(_DWORD *)(a1 + 8);
          v25 = *(_DWORD *)(a1 + 12);
          v26 = *(_DWORD *)(a1 + 16);
          v27 = *(_WORD *)(a1 + 20);
          v28 = *(_BYTE *)(a1 + 22);
          if (v53 >= a3)
            goto LABEL_12;
        }
        __break(1u);
        goto LABEL_19;
      }
LABEL_12:
      LODWORD(v58) = v24;
      sub_1A5718F9C();
      v46 = (void *)swift_allocError();
      *v48 = a3;
      swift_retain();
      swift_willThrow();
      swift_release();
      *(_QWORD *)a1 = v23;
      *(_DWORD *)(a1 + 8) = v58;
      *(_DWORD *)(a1 + 12) = v25;
      *(_DWORD *)(a1 + 16) = v26;
      *(_WORD *)(a1 + 20) = v27;
      *(_BYTE *)(a1 + 22) = v28;
      v8 = v52;
    }
    swift_willThrow();
    v61 = v46;
    v49 = v46;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1A5751898();
      if (!*(_QWORD *)(v8 + 16))
      {
        swift_bridgeObjectRelease();
        sub_1A56E9774();
        swift_allocError();
        *v50 = 0xD000000000000035;
        v50[1] = 0x80000001A5A0FE30;
        v50[2] = 0xD000000000000020;
        v50[3] = 0x80000001A5A0F5E0;
        v50[4] = 2512;
        swift_willThrow();
      }
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    return v8;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1A574CE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ADD0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1A59ABD10;
  v16 = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
  {
    *(_QWORD *)(v15 + 16) = 0;
    swift_release();
  }
  else
  {
    *(_QWORD *)(v15 + 32) = MailboxName.init(_:)(v16, v17, v18 & 0xFFFFFFFFFFFFFFLL);
    *(_DWORD *)(v15 + 40) = v19;
  }
  return v15;
}

void sub_1A574CF10()
{
  uint64_t v0;
  uint64_t inited;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_201_0();
  OUTLINED_FUNCTION_22_33();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E68);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59AC380;
  *(_QWORD *)(inited + 32) = sub_1A574D3F4;
  *(_QWORD *)(inited + 40) = 0;
  v2 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v2);
  v3 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v3 + 16) = sub_1A57506C8;
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(inited + 48) = sub_1A5750148;
  *(_QWORD *)(inited + 56) = v3;
  *(_QWORD *)(inited + 64) = sub_1A574D410;
  *(_QWORD *)(inited + 72) = 0;
  *(_QWORD *)(inited + 80) = sub_1A574D42C;
  *(_QWORD *)(inited + 88) = 0;
  *(_QWORD *)(inited + 96) = sub_1A574D448;
  *(_QWORD *)(inited + 104) = 0;
  *(_QWORD *)(inited + 112) = sub_1A574D464;
  *(_QWORD *)(inited + 120) = 0;
  v4 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v4);
  v5 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v5 + 16) = sub_1A57506DC;
  *(_QWORD *)(v5 + 24) = v0;
  *(_QWORD *)(inited + 128) = sub_1A5750148;
  *(_QWORD *)(inited + 136) = v5;
  v6 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v6);
  v7 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v7 + 16) = sub_1A57506F0;
  *(_QWORD *)(v7 + 24) = v0;
  *(_QWORD *)(inited + 144) = sub_1A5750148;
  *(_QWORD *)(inited + 152) = v7;
  OUTLINED_FUNCTION_129_1();
  v8 = OUTLINED_FUNCTION_5_60();
  sub_1A57719E0(v8, v9, v10, v11, v12, v13, 2582);
  OUTLINED_FUNCTION_15_41();
  sub_1A5774244();
  OUTLINED_FUNCTION_196_1();
}

uint64_t sub_1A574D094()
{
  sub_1A5751898();
  return 3;
}

uint64_t sub_1A574D0D8()
{
  sub_1A5751898();
  return 4;
}

uint64_t sub_1A574D120()
{
  sub_1A5751898();
  return 0;
}

uint64_t sub_1A574D164()
{
  sub_1A5751898();
  return 1;
}

uint64_t sub_1A574D1A8()
{
  sub_1A5751898();
  return 2;
}

void sub_1A574D1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
    sub_1A574C8E0(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1A574D298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
    sub_1A574C8E0(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1A574D344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
    sub_1A574C8E0(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1A574D3F4()
{
  sub_1A574D480();
}

void sub_1A574D410()
{
  sub_1A574D480();
}

void sub_1A574D42C()
{
  sub_1A574D480();
}

void sub_1A574D448()
{
  sub_1A574D480();
}

void sub_1A574D464()
{
  sub_1A574D480();
}

void sub_1A574D480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_146_2();
  v3 = v2();
  if (!v1)
  {
    *(_QWORD *)v0 = v3;
    *(_BYTE *)(v0 + 8) = v4;
  }
  OUTLINED_FUNCTION_40_16();
}

void sub_1A574D4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  unsigned __int8 v16;
  _QWORD *v17;
  _QWORD *v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  __int16 v70;
  uint64_t v71;
  unsigned __int8 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  BOOL v78;
  BOOL v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  _QWORD v92[4];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  unsigned __int8 *v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unsigned __int8 v111;
  unsigned __int8 v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  char v116[8];

  v114 = 0;
  v115 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v113 = MEMORY[0x1E0DEE9D8];
  v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    return;
  }
  if (v8 >= a3)
  {
    sub_1A5718F9C();
    OUTLINED_FUNCTION_21();
    *v17 = a3;
    goto LABEL_10;
  }
  v11 = a2 + 2;
  v12 = *(_QWORD *)a1;
  v14 = *(_DWORD *)(a1 + 8);
  v13 = *(_DWORD *)(a1 + 12);
  v15 = *(_DWORD *)(a1 + 16);
  LODWORD(v108) = *(unsigned __int16 *)(a1 + 20);
  LODWORD(v106) = *(unsigned __int8 *)(a1 + 22);
  if (a2 + 2 >= a3)
  {
    sub_1A5718F9C();
    OUTLINED_FUNCTION_21();
    *v18 = a3;
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_194_1();
    goto LABEL_8;
  }
  v101 = v13;
  v93 = a4;
  v94 = a5;
  v95 = a6;
  v96 = a7;
  OUTLINED_FUNCTION_87();
  sub_1A5760B70(a1);
  if (v7)
  {
LABEL_5:
    OUTLINED_FUNCTION_194_1();
    OUTLINED_FUNCTION_68_0();
    OUTLINED_FUNCTION_193_0();
LABEL_8:
    OUTLINED_FUNCTION_80_4();
    goto LABEL_9;
  }
  v19 = v16;
  v99 = &v112;
  v98 = v8 + 2;
  v92[1] = "SHSERVICE response type: ";
  v92[3] = 0x80000001A5A0F5E0;
  v104 = a3;
  v100 = v11;
  while (1)
  {
    if ((sub_1A57763E0(v19) & 1) == 0)
    {
      v109 = 0;
      v110 = 0xE000000000000000;
      sub_1A594C720();
      v111 = v19;
      v83 = sub_1A594CC9C();
      v85 = v84;
      OUTLINED_FUNCTION_52();
      v109 = v83;
      v110 = v85;
      sub_1A594B5F8();
      v86 = v109;
      v87 = v110;
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v88 = v86;
      v88[1] = v87;
      OUTLINED_FUNCTION_110_1((uint64_t)v88, (uint64_t)&v115);
      OUTLINED_FUNCTION_11_20(v89, 2335);
      goto LABEL_5;
    }
    v103 = v15;
    v20 = OUTLINED_FUNCTION_243_0();
    v23 = sub_1A5752AB4(v20, v21, v22);
    v97 = v14;
    ByteBufferView.init(_:)(v23, v25, v24 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v116);
    OUTLINED_FUNCTION_3_3();
    sub_1A56E6FE8((uint64_t)v116);
    if (!v26)
    {
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      strcpy(v90, "Invalid UTF8");
      v90[13] = 0;
      *((_WORD *)v90 + 7) = -5120;
      OUTLINED_FUNCTION_110_1((uint64_t)v90, (uint64_t)&v115);
      OUTLINED_FUNCTION_11_20(v91, 2341);
      OUTLINED_FUNCTION_5_1();
      goto LABEL_5;
    }
    v112 = v19;
    v109 = sub_1A594B538();
    v110 = v27;
    OUTLINED_FUNCTION_266_0();
    sub_1A594B5F8();
    v102 = v12;
    OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_38();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_1();
    v105 = v109;
    v107 = v110;
    v28 = v104;
    if (v98 < v104)
    {
      OUTLINED_FUNCTION_155();
      sub_1A576B3AC(a1);
      v92[2] = v92;
      MEMORY[0x1E0C80A78](v52);
      OUTLINED_FUNCTION_218_0();
      v53 = v93;
      v54 = v94;
      *(_QWORD *)(v55 - 32) = v93;
      *(_QWORD *)(v55 - 24) = v54;
      v56 = v96;
      *(_QWORD *)(v55 - 16) = v95;
      *(_QWORD *)(v55 - 8) = v56;
      MEMORY[0x1E0C80A78](v57);
      MEMORY[0x1E0C80A78](v58);
      OUTLINED_FUNCTION_218_0();
      *(_QWORD *)(v59 - 32) = v53;
      *(_QWORD *)(v59 - 24) = v60;
      *(_QWORD *)(v59 - 16) = v62;
      *(_QWORD *)(v59 - 8) = v61;
      MEMORY[0x1E0C80A78](v63);
      OUTLINED_FUNCTION_40_17();
      v73 = sub_1A576FB88(v64, v65);
      v75 = v74;
      swift_release();
      OUTLINED_FUNCTION_17_4();
      v76 = v75 & 0x1FFFFFFFFFFLL;
      goto LABEL_18;
    }
    sub_1A5718F9C();
    v29 = (void *)OUTLINED_FUNCTION_21();
    *v30 = v28;
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_68_0();
    OUTLINED_FUNCTION_192_1();
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_228_0();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((OUTLINED_FUNCTION_17_31() & 1) == 0)
      break;

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_190_0();
    swift_release();
    v73 = 0;
    v76 = 0xFF0000000000;
LABEL_18:
    v108 = v76;
    v31 = v114;
    v32 = v115;
    v33 = v115[2];
    if (v114)
    {
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_30();
      v106 = v73;
      sub_1A566676C(v73, v108);
      OUTLINED_FUNCTION_258_0();
      v37 = sub_1A576D4BC(v34, v35, v36, v33, v31 + 16, v31 + 32);
      v39 = v38;
      v41 = v40;
      OUTLINED_FUNCTION_40();
      OUTLINED_FUNCTION_48();
      if ((v39 & 1) != 0)
      {
        v43 = v107;
        v73 = v106;
        goto LABEL_37;
      }
      v73 = v106;
    }
    else
    {
      if (!v33)
      {
        v43 = v107;
        goto LABEL_36;
      }
      v42 = v105;
      v43 = v107;
      v44 = v115[4] == v105 && v115[5] == v107;
      if (v44 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
      {
        v37 = 0;
      }
      else
      {
        if (v33 == 1)
          goto LABEL_36;
        v77 = v32[6] == v42 && v32[7] == v43;
        if (v77 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
        {
          v37 = 1;
        }
        else
        {
          if (v33 == 2)
            goto LABEL_36;
          v78 = v32[8] == v42 && v32[9] == v43;
          if (v78 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
          {
            v37 = 2;
          }
          else
          {
            if (v33 == 3)
              goto LABEL_36;
            v79 = v32[10] == v42 && v32[11] == v43;
            if (!v79 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
            {
              v80 = v32 + 13;
              v81 = 4;
              while (v33 != v81)
              {
                if (*(v80 - 1) == v105 && *v80 == v43)
                {
                  v37 = v81;
                  goto LABEL_28;
                }
                v37 = v81++;
                v80 += 2;
                if ((OUTLINED_FUNCTION_1_16() & 1) != 0)
                  goto LABEL_28;
              }
LABEL_36:
              OUTLINED_FUNCTION_42();
              OUTLINED_FUNCTION_114_3();
              v41 = 0;
LABEL_37:
              v66 = v108;
              sub_1A566676C(v73, v108);
              sub_1A576CB10(v105, v43, v41);
              v45 = v113;
              sub_1A566676C(v73, v66);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1A56836D0(0, *(_QWORD *)(v45 + 16) + 1, 1);
                v45 = v113;
              }
              v68 = *(_QWORD *)(v45 + 16);
              v67 = *(_QWORD *)(v45 + 24);
              if (v68 >= v67 >> 1)
              {
                sub_1A56836D0(v67 > 1, v68 + 1, 1);
                v45 = v113;
              }
              *(_QWORD *)(v45 + 16) = v68 + 1;
              v69 = v45 + 16 * v68;
              *(_QWORD *)(v69 + 32) = v73;
              v48 = v69 + 40;
              goto LABEL_42;
            }
            v37 = 3;
          }
        }
      }
LABEL_28:
      OUTLINED_FUNCTION_42();
      OUTLINED_FUNCTION_114_3();
    }
    v45 = v113;
    OUTLINED_FUNCTION_114_3();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1A576C42C();
      v45 = v46;
    }
    if ((v37 & 0x8000000000000000) != 0)
      goto LABEL_78;
    if (v37 >= *(_QWORD *)(v45 + 16))
      goto LABEL_79;
    v47 = v45 + 16 * v37;
    v49 = *(_DWORD *)(v47 + 40);
    v48 = v47 + 40;
    v50 = *(_QWORD *)(v48 - 8);
    v51 = v49 | ((unint64_t)*(unsigned __int16 *)(v48 + 4) << 32);
    OUTLINED_FUNCTION_114_3();
    sub_1A56667BC(v50, v51);
    *(_QWORD *)(v48 - 8) = v73;
LABEL_42:
    v70 = WORD2(v108);
    *(_DWORD *)v48 = v108;
    *(_WORD *)(v48 + 4) = v70;
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_168_2();
    OUTLINED_FUNCTION_168_2();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_168_2();
    v113 = v45;
    OUTLINED_FUNCTION_30();
    sub_1A576B3AC(a1);
    OUTLINED_FUNCTION_48();
    v12 = *(_QWORD *)a1;
    v14 = *(_DWORD *)(a1 + 8);
    v101 = *(_DWORD *)(a1 + 12);
    v15 = *(_DWORD *)(a1 + 16);
    LODWORD(v108) = *(unsigned __int16 *)(a1 + 20);
    LODWORD(v106) = *(unsigned __int8 *)(a1 + 22);
    OUTLINED_FUNCTION_87();
    v71 = OUTLINED_FUNCTION_243_0();
    sub_1A5760B70(v71);
    v19 = v72;
  }
  OUTLINED_FUNCTION_190_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_194_1();
LABEL_9:
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_193_0();
LABEL_10:
  swift_willThrow();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_23();
}

void sub_1A574DF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  void *v23;
  uint64_t *v24;
  uint64_t *v25;
  id v26;
  uint64_t inited;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  __int16 v46;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9578);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1A59ABD10;
  sub_1A574CF10();
  if (v7)
  {
    *(_QWORD *)(v15 + 16) = 0;
    swift_release();
  }
  else
  {
    *(_QWORD *)(v15 + 32) = v16;
    *(_BYTE *)(v15 + 40) = v17;
    v18 = a2 + 1;
    if (__OFADD__(a2, 1))
    {
      __break(1u);
    }
    else
    {
      if (v18 >= a3)
      {
        sub_1A5718F9C();
        v23 = (void *)swift_allocError();
        *v24 = a3;
      }
      else
      {
        v42 = a4;
        v43 = a6;
        v44 = a7;
        v19 = *(_QWORD *)a1;
        v20 = *(_DWORD *)(a1 + 8);
        v21 = *(_DWORD *)(a1 + 12);
        v22 = *(_DWORD *)(a1 + 16);
        v45 = *(_BYTE *)(a1 + 22);
        v46 = *(_WORD *)(a1 + 20);
        if (v18 + 1 < a3)
        {
          v41 = v18;
          swift_retain();
          sub_1A576B3AC(a1);
          while (1)
          {
            __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E68);
            inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1A59AC380;
            *(_QWORD *)(inited + 32) = sub_1A574D3F4;
            *(_QWORD *)(inited + 40) = 0;
            v28 = (_QWORD *)swift_allocObject();
            v28[2] = v42;
            v28[3] = a5;
            v28[4] = v43;
            v28[5] = v44;
            v29 = swift_allocObject();
            *(_QWORD *)(v29 + 16) = sub_1A5750548;
            *(_QWORD *)(v29 + 24) = v28;
            *(_QWORD *)(inited + 48) = sub_1A5750148;
            *(_QWORD *)(inited + 56) = v29;
            *(_QWORD *)(inited + 64) = sub_1A574D410;
            *(_QWORD *)(inited + 72) = 0;
            *(_QWORD *)(inited + 80) = sub_1A574D42C;
            *(_QWORD *)(inited + 88) = 0;
            *(_QWORD *)(inited + 96) = sub_1A574D448;
            *(_QWORD *)(inited + 104) = 0;
            *(_QWORD *)(inited + 112) = sub_1A574D464;
            *(_QWORD *)(inited + 120) = 0;
            v30 = (_QWORD *)swift_allocObject();
            v30[2] = v42;
            v30[3] = a5;
            v30[4] = v43;
            v30[5] = v44;
            v31 = swift_allocObject();
            *(_QWORD *)(v31 + 16) = sub_1A5750560;
            *(_QWORD *)(v31 + 24) = v30;
            *(_QWORD *)(inited + 128) = sub_1A5750148;
            *(_QWORD *)(inited + 136) = v31;
            v32 = (_QWORD *)swift_allocObject();
            v32[2] = v42;
            v32[3] = a5;
            v32[4] = v43;
            v32[5] = v44;
            v33 = swift_allocObject();
            *(_QWORD *)(v33 + 16) = sub_1A5750578;
            *(_QWORD *)(v33 + 24) = v32;
            *(_QWORD *)(inited + 144) = sub_1A5750148;
            *(_QWORD *)(inited + 152) = v33;
            swift_retain_n();
            v34 = a3;
            v35 = sub_1A57719E0(inited, a1, v41, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 2582);
            v37 = v36;
            swift_setDeallocating();
            sub_1A5774244();
            swift_release();
            v38 = *(_QWORD *)(v15 + 16);
            if (v38 >= *(_QWORD *)(v15 + 24) >> 1)
            {
              sub_1A569EA64();
              v15 = v40;
            }
            *(_QWORD *)(v15 + 16) = v38 + 1;
            v39 = v15 + 16 * v38;
            *(_QWORD *)(v39 + 32) = v35;
            *(_BYTE *)(v39 + 40) = v37;
            swift_retain();
            a3 = v34;
            sub_1A576B3AC(a1);
          }
        }
        sub_1A5718F9C();
        v23 = (void *)swift_allocError();
        *v25 = a3;
        swift_retain();
        swift_willThrow();
        swift_release();
        *(_QWORD *)a1 = v19;
        *(_DWORD *)(a1 + 8) = v20;
        *(_DWORD *)(a1 + 12) = v21;
        *(_DWORD *)(a1 + 16) = v22;
        *(_WORD *)(a1 + 20) = v46;
        *(_BYTE *)(a1 + 22) = v45;
      }
      swift_willThrow();
      v26 = v23;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
      if ((swift_dynamicCast() & 1) != 0)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_1A574E3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;

  sub_1A5751898();
  if (!v7)
  {
    sub_1A574D4A8(a1, a2, a3, a4, a5, a6, a7);
    a7 = v15;
    sub_1A5751898();
  }
  return a7;
}

void sub_1A574E4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;

  OUTLINED_FUNCTION_24_24();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  OUTLINED_FUNCTION_14_34();
  if (!v0)
  {
    v11 = OUTLINED_FUNCTION_190();
    sub_1A574DF04(v11, v12, v13, v8, v6, v4, v2);
    v32 = v14;
    v31[1] = v31;
    MEMORY[0x1E0C80A78](v14);
    OUTLINED_FUNCTION_89_3();
    *(_QWORD *)(v15 - 32) = v8;
    *(_QWORD *)(v15 - 24) = v6;
    *(_QWORD *)(v15 - 16) = v4;
    *(_QWORD *)(v15 - 8) = v2;
    v16 = OUTLINED_FUNCTION_7_41();
    sub_1A5760A30(v16, v17, v18, v19, v20);
    v22 = v21;
    v24 = v23;
    v26 = v25;
    OUTLINED_FUNCTION_6_50();
    if (*(_QWORD *)(v32 + 16))
    {
      *v10 = v32;
      v10[1] = v22;
      v10[2] = v24;
      v10[3] = v26;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v27 = 0xD00000000000002ALL;
      v27[1] = 0x80000001A5A0F940;
      OUTLINED_FUNCTION_8_42();
      *(_QWORD *)(v28 + 16) = v30;
      *(_QWORD *)(v28 + 24) = v29;
      OUTLINED_FUNCTION_11_20(v28, 2654);
      OUTLINED_FUNCTION_212_0();
    }
  }
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_32_17();
}

void sub_1A574E658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_189_1();
  OUTLINED_FUNCTION_101_3();
  sub_1A5751974(v1, v2, v3);
  if (!v0)
  {
    OUTLINED_FUNCTION_0_10();
    v4 = OUTLINED_FUNCTION_17_36();
    ((void (*)(uint64_t))sub_1A5756034)(v4);
  }
}

unint64_t sub_1A574E6A8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v5;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  result = OUTLINED_FUNCTION_249_0(a1, a2, a3);
  if (!v5)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      v10 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_29_17(v10, v11);
      OUTLINED_FUNCTION_25_23(v12, v13);
    }
    else
    {
      if (v9 == a4)
      {
        *a5 = result;
        return result;
      }
      OUTLINED_FUNCTION_99_4();
      OUTLINED_FUNCTION_34_20();
      OUTLINED_FUNCTION_200_0();
      OUTLINED_FUNCTION_100_2();
      OUTLINED_FUNCTION_38();
      sub_1A594B5F8();
      OUTLINED_FUNCTION_200_0();
      OUTLINED_FUNCTION_100_2();
      OUTLINED_FUNCTION_17();
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v16 = 0x6465746365707845;
      v16[1] = 0xE900000000000020;
      OUTLINED_FUNCTION_15_35((uint64_t)v16, 0xD000000000000020);
      v15 = 2701;
    }
    return OUTLINED_FUNCTION_11_20(v14, v15);
  }
  return result;
}

void sub_1A574E808(uint64_t a1)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_6_49() || v4 + v2 > *(_QWORD *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_231_0();
    v3 = v6;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(v3 + 16);
  if ((*(_QWORD *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  memcpy((void *)(v3 + v7 + 32), (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v8 = *(_QWORD *)(v3 + 16);
  v9 = __OFADD__(v8, v2);
  v10 = v8 + v2;
  if (!v9)
  {
    *(_QWORD *)(v3 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_1A574E8D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A574E8F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5742FC4(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A574E910()
{
  sub_1A574EC9C();
}

uint64_t sub_1A574E924(uint64_t result, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if ((a2 & 0x1000000000000000) != 0)
  {
    result = sub_1A594B640();
    v3 = result;
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    v3 = HIBYTE(a2) & 0xF;
  }
  else
  {
    v3 = result & 0xFFFFFFFFFFFFLL;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
  }
  else
  {
    v6 = OUTLINED_FUNCTION_6_49();
    *v2 = v4;
    if (!v6 || *(_QWORD *)(v4 + 24) >> 1 < v5 + v3)
    {
      OUTLINED_FUNCTION_231_0();
      v4 = v7;
      *v2 = v7;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A594C72C();
    if ((v8 & 1) != 0)
      goto LABEL_19;
    v9 = result;
    result = OUTLINED_FUNCTION_94_1();
    if (v9 >= v3)
    {
      if (v9 < 1)
      {
LABEL_14:
        *v2 = v4;
        return result;
      }
      v10 = *(_QWORD *)(v4 + 16);
      v11 = __OFADD__(v10, v9);
      v12 = v10 + v9;
      if (!v11)
      {
        *(_QWORD *)(v4 + 16) = v12;
        goto LABEL_14;
      }
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

void sub_1A574EA3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A5743214(v0, v1, v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_9();
}

void sub_1A574EA74()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A5745CD4();
}

uint64_t sub_1A574EA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5742E9C(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A574EAA4(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 64) & 0x1FFLL | 0x8000000000000000;
  *(_QWORD *)(result + 16) &= 0x1FFFFFFFFuLL;
  *(_QWORD *)(result + 64) = v1;
  return result;
}

void sub_1A574EAC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A5743938(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A574EADC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1A5743B88(a1, a2, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v3 + 16), a3);
}

void sub_1A574EAF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A57439E8(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A574EB0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A5743214(v0, v1, v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1A574EB44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A57430EC(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A574EB5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5744BB8(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A574EB74()
{
  sub_1A574ED40();
}

uint64_t sub_1A574EB88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5744D70(v0, v1, v2);
}

void sub_1A574EBA0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A574501C(v0, v1, v2);
}

uint64_t sub_1A574EBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A574EDD8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))sub_1A574052C);
}

void sub_1A574EBD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A5743214(v0, v1, v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_9();
}

void sub_1A574EC0C()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A5743E44();
}

uint64_t sub_1A574EC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A574EDD8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))sub_1A5741294);
}

void sub_1A574EC40()
{
  sub_1A5750218();
}

uint64_t sub_1A574EC54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5743CC8(v0, v1, v2, v3, v4, v5, v6);
}

void **sub_1A574EC6C()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5727C10(v0, v1, v2);
}

uint64_t sub_1A574EC84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A57476A0(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A574EC9C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_96_2();
  if (!v1)
    *v0 = v2;
  OUTLINED_FUNCTION_1();
}

double sub_1A574ECBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  OUTLINED_FUNCTION_4_52();
  *(_QWORD *)&result = sub_1A57477F8(v0, v1, v2, v3, v4, v5, v6, v7).n128_u64[0];
  return result;
}

void sub_1A574ECD4(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  _OWORD v6[4];

  (*(void (**)(_OWORD *__return_ptr))(v1 + 16))(v6);
  if (!v2)
  {
    v4 = v6[1];
    *a1 = v6[0];
    a1[1] = v4;
    v5 = v6[3];
    a1[2] = v6[2];
    a1[3] = v5;
  }
  OUTLINED_FUNCTION_260_0();
}

uint64_t sub_1A574ED14()
{
  OUTLINED_FUNCTION_150_1();
  OUTLINED_FUNCTION_143_2();
  return 0;
}

void sub_1A574ED40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_96_2();
  if (!v1)
  {
    *v0 = v2;
    v0[1] = v3;
  }
  OUTLINED_FUNCTION_1();
}

double sub_1A574ED60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5747C84(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A574ED78()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A5748B44();
  OUTLINED_FUNCTION_9();
}

void sub_1A574EDA0()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A5740D48();
}

void sub_1A574EDC0()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A574B66C();
}

uint64_t sub_1A574EDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v4;

  return a4(a1, a2, a3, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

void sub_1A574EDF4()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A5741D54();
}

void sub_1A574EE0C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A5741FC0(v0, v1, v2);
}

uint64_t sub_1A574EE24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1A5742228(a1, a2, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v3 + 16), a3);
}

uint64_t sub_1A574EE3C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A57420EC(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A574EE54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5747028(v0, v1, v2, v3, v4, v5, v6, v7);
}

_QWORD *sub_1A574EE6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A57472C0(*(_QWORD *(**)(__int128 *__return_ptr))(v1 + 16), a1);
}

void sub_1A574EE84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5747170(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A574EE9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A5747308(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A574EEB4()
{
  sub_1A574EEE0();
}

uint64_t sub_1A574EEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A57473A0(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A574EEE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_96_2();
  if (!v0)
    OUTLINED_FUNCTION_59_10(v1, v2, v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A574EF00()
{
  OUTLINED_FUNCTION_4_52();
  return sub_1A5747F14();
}

void sub_1A574EF18()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A5744520();
}

void sub_1A574EF30()
{
  sub_1A574EF5C();
}

void sub_1A574EF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A57447AC(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A574EF5C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_96_2();
  if (!v1)
  {
    *v0 = v2;
    v0[1] = v3;
    v0[2] = v4;
  }
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A574EF80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  _QWORD *v19;
  uint64_t result;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v2 = MEMORY[0x1E0DEE9D8];
  v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_186_1();
  sub_1A5683644();
  v3 = v2;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22)
  {
    OUTLINED_FUNCTION_184();
    v4 = 0;
    while (v4 < *(_QWORD *)(a1 + 16))
    {
      v23 = v4;
      v5 = a1 + 32 + 32 * v4;
      v7 = *(_QWORD *)v5;
      v6 = *(_QWORD *)(v5 + 8);
      v8 = *(unsigned int *)(v5 + 24) | ((unint64_t)*(unsigned __int8 *)(v5 + 28) << 32);
      v9 = *(_BYTE *)(v5 + 29);
      v10 = v25[2];
      v24 = *(_QWORD *)(v5 + 16);
      v11 = v6;
      if (v10)
      {
        v12 = v25[4] == v7 && v25[5] == v6;
        if (v12 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
          goto LABEL_43;
        if (v10 != 1)
        {
          v13 = v25[6] == v7 && v25[7] == v6;
          if (v13 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
            goto LABEL_43;
          if (v10 != 2)
          {
            v14 = v25[8] == v7 && v25[9] == v6;
            if (v14 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
              goto LABEL_43;
            v15 = v10 - 3;
            if (v15)
            {
              v18 = v25[10] == v7 && v25[11] == v6;
              if (v18 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
                goto LABEL_43;
              v19 = v25 + 13;
              while (--v15)
              {
                if (*(v19 - 1) != v7 || *v19 != v11)
                {
                  v19 += 2;
                  if ((OUTLINED_FUNCTION_1_16() & 1) == 0)
                    continue;
                }
                goto LABEL_43;
              }
            }
          }
        }
      }
      OUTLINED_FUNCTION_29();
      OUTLINED_FUNCTION_267_0(v24);
      sub_1A576CB04(v7, v11, 0);
      v16 = *(_QWORD *)(v3 + 16);
      if (v16 >= *(_QWORD *)(v3 + 24) >> 1)
        sub_1A5683644();
      v4 = v23 + 1;
      *(_QWORD *)(v3 + 16) = v16 + 1;
      v17 = v3 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v24;
      *(_DWORD *)(v17 + 40) = v8;
      *(_BYTE *)(v17 + 44) = BYTE4(v8);
      *(_BYTE *)(v17 + 45) = v9;
      swift_bridgeObjectRelease();
      if (v23 + 1 == v22)
      {
        OUTLINED_FUNCTION_94_1();
        return 0;
      }
    }
    __break(1u);
LABEL_43:
    OUTLINED_FUNCTION_29();
    result = OUTLINED_FUNCTION_267_0(v24);
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

void sub_1A574F274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;

  OUTLINED_FUNCTION_70_1();
  v17 = v16;
  v35 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_186_1();
  OUTLINED_FUNCTION_210_0();
  sub_1A568367C();
  v33 = *(_QWORD *)(v17 + 16);
  if (v33)
  {
    OUTLINED_FUNCTION_29();
    v18 = 0;
    while (v18 < *(_QWORD *)(v17 + 16))
    {
      v19 = (uint64_t *)(v17 + 32 + 32 * v18);
      v21 = *v19;
      v20 = v19[1];
      v22 = v19[2];
      v34 = v19[3];
      v23 = v35[2];
      if (v23)
      {
        v24 = v35[4] == v21 && v35[5] == v20;
        if (v24 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
          goto LABEL_43;
        if (v23 != 1)
        {
          v25 = v35[6] == v21 && v35[7] == v20;
          if (v25 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
            goto LABEL_43;
          if (v23 != 2)
          {
            v26 = v35[8] == v21 && v35[9] == v20;
            if (v26 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
              goto LABEL_43;
            v27 = v23 - 3;
            if (v23 != 3)
            {
              v30 = v35[10] == v21 && v35[11] == v20;
              if (v30 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
                goto LABEL_43;
              v31 = v35 + 13;
              while (--v27)
              {
                if (*(v31 - 1) != v21 || *v31 != v20)
                {
                  v31 += 2;
                  if ((OUTLINED_FUNCTION_1_16() & 1) == 0)
                    continue;
                }
                goto LABEL_43;
              }
            }
          }
        }
      }
      OUTLINED_FUNCTION_90();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A576CB10(v21, v20, 0);
      v28 = *(_QWORD *)(a16 + 16);
      if (v28 >= *(_QWORD *)(a16 + 24) >> 1)
        sub_1A568367C();
      ++v18;
      *(_QWORD *)(a16 + 16) = v28 + 1;
      v29 = a16 + 16 * v28;
      *(_QWORD *)(v29 + 32) = v22;
      *(_QWORD *)(v29 + 40) = v34;
      swift_bridgeObjectRelease();
      if (v18 == v33)
      {
        OUTLINED_FUNCTION_94_1();
        goto LABEL_41;
      }
    }
    __break(1u);
LABEL_43:
    OUTLINED_FUNCTION_90();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_41:
    OUTLINED_FUNCTION_8_9();
  }
}

void sub_1A574F504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  BOOL v35;
  _QWORD *v36;
  uint64_t v38;
  _QWORD *v39;

  OUTLINED_FUNCTION_70_1();
  v18 = v17;
  v39 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_186_1();
  v19 = OUTLINED_FUNCTION_210_0();
  sub_1A56836D0(v19, v20, v21);
  v38 = *(_QWORD *)(v18 + 16);
  if (v38)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = 0;
    while (v22 < *(_QWORD *)(v18 + 16))
    {
      v23 = v18 + 32 + 32 * v22;
      v25 = *(_QWORD *)v23;
      v24 = *(_QWORD *)(v23 + 8);
      v16 = *(_QWORD *)(v23 + 16);
      v26 = v39[2];
      a15 = *(unsigned int *)(v23 + 24) | ((unint64_t)*(unsigned __int16 *)(v23 + 28) << 32);
      v27 = v24;
      if (v26)
      {
        v28 = v39[4] == v25 && v39[5] == v24;
        if (v28 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
          goto LABEL_43;
        if (v26 != 1)
        {
          v29 = v39[6] == v25 && v39[7] == v24;
          if (v29 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
            goto LABEL_43;
          if (v26 != 2)
          {
            v30 = v39[8] == v25 && v39[9] == v24;
            if (v30 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
              goto LABEL_43;
            v31 = v26 - 3;
            if (v31)
            {
              v35 = v39[10] == v25 && v39[11] == v24;
              if (v35 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
                goto LABEL_43;
              v36 = v39 + 13;
              while (--v31)
              {
                if (*(v36 - 1) != v25 || *v36 != v27)
                {
                  v36 += 2;
                  if ((OUTLINED_FUNCTION_1_16() & 1) == 0)
                    continue;
                }
                goto LABEL_43;
              }
            }
          }
        }
      }
      OUTLINED_FUNCTION_13_0();
      sub_1A566676C(v16, a15);
      sub_1A576CB10(v25, v27, 0);
      v33 = *(_QWORD *)(a16 + 16);
      v32 = *(_QWORD *)(a16 + 24);
      if (v33 >= v32 >> 1)
        sub_1A56836D0(v32 > 1, v33 + 1, 1);
      ++v22;
      *(_QWORD *)(a16 + 16) = v33 + 1;
      v34 = a16 + 16 * v33;
      *(_QWORD *)(v34 + 32) = v16;
      *(_DWORD *)(v34 + 40) = a15;
      *(_WORD *)(v34 + 44) = WORD2(a15);
      swift_bridgeObjectRelease();
      if (v22 == v38)
      {
        OUTLINED_FUNCTION_94_1();
        goto LABEL_41;
      }
    }
    __break(1u);
LABEL_43:
    OUTLINED_FUNCTION_13_0();
    sub_1A566676C(v16, a15);
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_41:
    OUTLINED_FUNCTION_8_9();
  }
}

uint64_t sub_1A574F7B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  size_t v20;
  unsigned __int8 *v21;
  int v22;
  int v23;
  uint64_t v24;
  unsigned int v25;
  BOOL v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  BOOL v32;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = MEMORY[0x1E0DEE9D8];
  v49 = MEMORY[0x1E0DEE9D8];
  sub_1A574FE04();
  sub_1A5683644();
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  result = OUTLINED_FUNCTION_90();
  v40 = v4;
  if (v4)
  {
    v6 = 0;
    v38 = a1;
    v39 = a1 + 32;
    while (v6 < *(_QWORD *)(a1 + 16))
    {
      v7 = v39 + 40 * v6;
      v8 = *(_QWORD *)v7;
      v9 = *(unsigned int *)(v7 + 12);
      v45 = v6;
      v46 = *(unsigned int *)(v7 + 8);
      v10 = *(unsigned int *)(v7 + 16);
      v11 = *(unsigned __int16 *)(v7 + 20);
      v12 = *(unsigned __int8 *)(v7 + 22);
      v13 = *(_QWORD *)(v7 + 24);
      v14 = *(unsigned int *)(v7 + 32) | ((unint64_t)*(unsigned __int8 *)(v7 + 36) << 32);
      v15 = *(_BYTE *)(v7 + 37);
      OUTLINED_FUNCTION_17_0();
      v43 = v14;
      v44 = v15;
      result = sub_1A566658C(v13, v14, v15);
      v48 = v8;
      if (!v8)
        goto LABEL_27;
      v41 = v13;
      v42 = v3;
      v16 = v10 | (v12 << 48) | (v11 << 32);
      v17 = v46 | (v9 << 32);
      v18 = *(_QWORD *)(v49 + 16);
      if (v18)
      {
        v19 = v12;
        v20 = (v9 - v46);
        if (v9 < v46)
          goto LABEL_29;
        v36 = v46 | (v9 << 32);
        v37 = v10 | (v12 << 48) | (v11 << 32);
        result = OUTLINED_FUNCTION_176();
        v47 = v12 | (v11 << 8);
        v21 = (unsigned __int8 *)(v49 + 54);
        v22 = v11;
        v23 = v19;
        do
        {
          v24 = *(unsigned int *)(v21 - 14);
          v25 = *(_DWORD *)(v21 - 10);
          v26 = v25 >= v24;
          v27 = v25 - v24;
          if (!v26)
          {
            __break(1u);
            goto LABEL_28;
          }
          if (v27 == (_DWORD)v20)
          {
            v28 = *(_QWORD *)(v21 - 22);
            v29 = *((unsigned __int16 *)v21 - 1);
            v30 = *v21;
            v31 = *(_DWORD *)(v21 - 6) == (_DWORD)v10 && (_DWORD)v29 == v22;
            v32 = v31 && (_DWORD)v30 == v23;
            if (v32 && v28 == v48)
              goto LABEL_30;
            OUTLINED_FUNCTION_176();
            result = memcmp((const void *)(*(_QWORD *)(v28 + 24) + (v30 | (v29 << 8)) + v24), (const void *)(*(_QWORD *)(v48 + 24) + v47 + v46), v20);
            if (!(_DWORD)result)
              goto LABEL_30;
          }
          v21 += 24;
          --v18;
        }
        while (v18);
        v17 = v36;
        v16 = v37;
      }
      sub_1A576CC84(v48, v17, v16, 0);
      v3 = v42;
      v34 = *(_QWORD *)(v42 + 16);
      if (v34 >= *(_QWORD *)(v42 + 24) >> 1)
      {
        sub_1A5683644();
        v3 = v42;
      }
      v6 = v45 + 1;
      *(_QWORD *)(v3 + 16) = v34 + 1;
      v35 = v3 + 16 * v34;
      *(_QWORD *)(v35 + 32) = v41;
      *(_DWORD *)(v35 + 40) = v43;
      *(_BYTE *)(v35 + 44) = BYTE4(v43);
      *(_BYTE *)(v35 + 45) = v44;
      result = swift_release();
      a1 = v38;
      if (v45 + 1 == v40)
        goto LABEL_27;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  else
  {
LABEL_27:
    OUTLINED_FUNCTION_94_1();
    return 0;
  }
  return result;
}

uint64_t sub_1A574FAF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;
  _QWORD *v20;
  uint64_t result;
  uint64_t v23;
  _QWORD *v24;

  v2 = MEMORY[0x1E0DEE9D8];
  v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  sub_1A574FE04();
  sub_1A5683778(0, v3, 0);
  v4 = v2;
  v23 = *(_QWORD *)(a1 + 16);
  if (v23)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v5 = 0;
    while (v5 < *(_QWORD *)(a1 + 16))
    {
      v6 = (uint64_t *)(a1 + 32 + 32 * v5);
      v8 = *v6;
      v7 = v6[1];
      v10 = v6[2];
      v9 = v6[3];
      v11 = v24[2];
      if (v11)
      {
        v12 = v24[4] == v8 && v24[5] == v7;
        if (v12 || (sub_1A594CD38() & 1) != 0)
          goto LABEL_43;
        if (v11 != 1)
        {
          v13 = v24[6] == v8 && v24[7] == v7;
          if (v13 || (sub_1A594CD38() & 1) != 0)
            goto LABEL_43;
          if (v11 != 2)
          {
            v14 = v24[8] == v8 && v24[9] == v7;
            if (v14 || (sub_1A594CD38() & 1) != 0)
              goto LABEL_43;
            v15 = v11 - 3;
            if (v15)
            {
              v19 = v24[10] == v8 && v24[11] == v7;
              if (v19 || (sub_1A594CD38() & 1) != 0)
                goto LABEL_43;
              v20 = v24 + 13;
              while (--v15)
              {
                if (*(v20 - 1) != v8 || *v20 != v7)
                {
                  v20 += 2;
                  if ((sub_1A594CD38() & 1) == 0)
                    continue;
                }
                goto LABEL_43;
              }
            }
          }
        }
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A576CB10(v8, v7, 0);
      v17 = *(_QWORD *)(v4 + 16);
      v16 = *(_QWORD *)(v4 + 24);
      if (v17 >= v16 >> 1)
        sub_1A5683778(v16 > 1, v17 + 1, 1);
      ++v5;
      *(_QWORD *)(v4 + 16) = v17 + 1;
      v18 = v4 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v10;
      *(_QWORD *)(v18 + 40) = v9;
      swift_bridgeObjectRelease();
      if (v5 == v23)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    __break(1u);
LABEL_43:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

void sub_1A574FDE0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A574496C(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_9();
}

void sub_1A574FE04()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t (*v3)(void);
  void (*v4)(uint64_t, uint64_t);
  void (*v5)(void);
  void (*v6)(void);
  void (*v7)(uint64_t, uint64_t);
  uint64_t *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_70_1();
  if (v1 < 0)
    goto LABEL_25;
  v6 = v5;
  v7 = v4;
  v8 = v0;
  v9 = v2;
  v10 = v1;
  sub_1A573ED98(v1, v3);
  v12 = *v0;
  v11 = v0[1];
  if (*v0)
  {
    OUTLINED_FUNCTION_176();
    v13 = *(_QWORD *)(v12 + 16) & 0x3FLL;
  }
  else
  {
    v13 = 0;
  }
  v14 = MEMORY[0x1A85AC8B8](v10);
  v15 = v14;
  if ((v9 & 1) != 0)
    v16 = v14;
  else
    v16 = 0;
  if (v12 && (v9 & 1) == 0)
  {
    OUTLINED_FUNCTION_176();
    v16 = *(_QWORD *)(v12 + 24) & 0x3FLL;
  }
  if (v13 < v15)
  {
    v17 = v15;
LABEL_18:
    v7(v17, v16);
    return;
  }
  if (v16 > v15)
    v15 = v16;
  v17 = MEMORY[0x1A85AC8B8](*(_QWORD *)(v11 + 16));
  if (v17 <= v15)
    v17 = v15;
  if (v17 < v13)
    goto LABEL_18;
  v6();
  v18 = *v8;
  if (!v18)
  {
    if (!v16)
      return;
    __break(1u);
LABEL_25:
    __break(1u);
    return;
  }
  swift_beginAccess();
  if ((*(_QWORD *)(v18 + 24) & 0x3FLL) != v16)
    *(_QWORD *)(v18 + 24) = *(_QWORD *)(v18 + 24) & 0xFFFFFFFFFFFFFFC0 | v16 & 0x3F;
}

uint64_t *sub_1A574FF38(uint64_t *a1)
{
  sub_1A55240D4(*a1, a1[1]);
  return a1;
}

void sub_1A574FF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A574C604(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A574FF84()
{
  sub_1A5750520();
}

uint64_t sub_1A574FF98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A574C6A0(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A574FFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5738000(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A574FFC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1A5738920();
  if (!v0)
    OUTLINED_FUNCTION_91_4(v1, v2);
  OUTLINED_FUNCTION_40_16();
}

void sub_1A574FFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = OUTLINED_FUNCTION_177_2(a1, a2, a3, a4);
  if (!v4)
    OUTLINED_FUNCTION_91_4(v5, v6);
  OUTLINED_FUNCTION_1();
}

void sub_1A575000C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_96_2();
  if (!v0)
    OUTLINED_FUNCTION_91_4(v1, v2);
  OUTLINED_FUNCTION_1();
}

void sub_1A575002C()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_4_52();
  sub_1A5749FFC(v0);
}

uint64_t sub_1A5750044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5747428(v0, v1, v2, v3, v4);
}

uint64_t sub_1A575005C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A574752C(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A5750074()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A5740D48();
}

void sub_1A5750094()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A57467F0();
}

uint64_t sub_1A57500AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A57500D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5749D44(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A57500E8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A576100C(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A5750100()
{
  OUTLINED_FUNCTION_4_52();
  return sub_1A574A20C();
}

uint64_t sub_1A5750118()
{
  OUTLINED_FUNCTION_4_52();
  return sub_1A574A07C();
}

void sub_1A5750130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A574A340(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A5750148()
{
  sub_1A57505C0();
}

void sub_1A575015C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A574A3FC(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A5750174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5744030(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A575018C()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A574ACFC();
}

void sub_1A57501AC()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A57423D0();
}

uint64_t sub_1A57501C4()
{
  OUTLINED_FUNCTION_4_52();
  return sub_1A574ADC0();
}

void sub_1A57501E0()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A574B31C();
}

void sub_1A5750200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  OUTLINED_FUNCTION_4_52();
  sub_1A57429AC(v0, v1, v2, v3);
}

void sub_1A5750218()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_157_2();
  v3 = v2();
  if (!v1)
  {
    *v0 = v3;
    v0[1] = v4;
  }
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A575023C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5741814(v0, v1, v2);
}

uint64_t sub_1A5750254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A574B570(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A575026C()
{
  sub_1A5750298();
}

uint64_t sub_1A5750280()
{
  OUTLINED_FUNCTION_4_52();
  return sub_1A574B1D8();
}

void sub_1A5750298()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_157_2();
  v3 = v2();
  if (!v1)
    *v0 = v3;
  OUTLINED_FUNCTION_1();
}

void sub_1A57502BC()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A574B31C();
}

void sub_1A57502DC()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A574ACFC();
}

void sub_1A57502FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A574AD30(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A5750314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A574AE38(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1A575032C()
{
  OUTLINED_FUNCTION_4_52();
  return sub_1A574ADC0();
}

void sub_1A5750348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  OUTLINED_FUNCTION_4_52();
  sub_1A5741634(v0, v1, v2, v3);
}

void sub_1A5750360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  OUTLINED_FUNCTION_4_52();
  sub_1A574170C(v0, v1, v2, v3);
}

void sub_1A5750378()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A574A664();
}

_OWORD *sub_1A5750390@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A574A810(*(_QWORD *(**)(__int128 *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_1A57503A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A574A568(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A57503C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A574A9B4(v0, v1, v2, v3, v4, v5, v6, v7);
}

double sub_1A57503D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A57498C0(v0, v1, v2, v3, v4, v5, v6, v7);
}

_OWORD *sub_1A57503F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1A5749A84(a1, a2, *(_QWORD *(**)(__int128 *__return_ptr, uint64_t, _QWORD, _QWORD))(v3 + 16), a3);
}

double sub_1A5750408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5749954(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A5750420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  OUTLINED_FUNCTION_4_52();
  sub_1A5747F7C(v0, v1, v2, v3, v4);
}

_QWORD *sub_1A5750438@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A574813C(*(_QWORD *(**)(_QWORD *__return_ptr))(v1 + 16), a1);
}

void sub_1A5750450()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_52();
  sub_1A5747FAC(v0);
}

uint64_t sub_1A5750468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5748244(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A5750480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A5748274(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A5750498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A57483C8(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A57504B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A574853C(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A57504C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A574AB40(v0, v1, v2, v3);
}

void sub_1A57504E0()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A5748B44();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1A5750508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A574E3E4(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A5750520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_96_2();
  if (!v1)
  {
    OUTLINED_FUNCTION_91_4(v2, v3);
    *(_BYTE *)(v0 + 13) = v4 & 1;
  }
  OUTLINED_FUNCTION_1();
}

void sub_1A5750548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A574D344(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A5750560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A574D1F0(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A5750578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A574D298(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A5750590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A574C944(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A57505A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A574CE3C(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A57505C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_157_2();
  v3 = v2();
  if (!v1)
  {
    *(_QWORD *)v0 = v3;
    *(_BYTE *)(v0 + 8) = v4;
  }
  OUTLINED_FUNCTION_1();
}

void sub_1A57505E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5746F90(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A5750600()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A5746BF0(v0, v1, v2);
}

uint64_t sub_1A5750618()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5746CF0(v0, v1, v2);
}

void type metadata accessor for StackTracker()
{
  OUTLINED_FUNCTION_3_1();
}

void sub_1A575063C()
{
  sub_1A574EA3C();
}

void sub_1A5750650()
{
  sub_1A574EA74();
}

uint64_t sub_1A5750664()
{
  return sub_1A574EF00();
}

void sub_1A5750678()
{
  sub_1A572FB74();
}

void sub_1A575068C()
{
  sub_1A574EDC0();
}

void sub_1A57506A0()
{
  sub_1A574FF6C();
}

uint64_t sub_1A57506B4()
{
  return sub_1A574FF98();
}

void sub_1A57506C8()
{
  sub_1A5750548();
}

void sub_1A57506DC()
{
  sub_1A5750560();
}

void sub_1A57506F0()
{
  sub_1A5750578();
}

uint64_t sub_1A5750704@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A574EADC(a1, a2, a3);
}

uint64_t sub_1A5750718@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A574EE24(a1, a2, a3);
}

_OWORD *sub_1A575072C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_1A57503F0(a1, a2, a3);
}

_QWORD *sub_1A5750828@<X0>(void *a1@<X8>)
{
  return sub_1A574446C(a1);
}

void sub_1A575083C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A572CAE8(a1, a2, a3);
}

_QWORD *sub_1A5750850@<X0>(uint64_t a1@<X8>)
{
  return sub_1A574EE6C(a1);
}

void sub_1A5750864(uint64_t a1@<X8>)
{
  sub_1A57500E8(a1);
}

void sub_1A5750878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A5750314(a1, a2, a3);
}

_OWORD *sub_1A575088C@<X0>(_OWORD *a1@<X8>)
{
  return sub_1A5750390(a1);
}

_QWORD *sub_1A57508A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5750438(a1);
}

uint64_t OUTLINED_FUNCTION_3_64()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_7_44()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_12_41(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  return v2;
}

id OUTLINED_FUNCTION_14_36(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;

  return v18;
}

uint64_t OUTLINED_FUNCTION_17_36()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_20_29()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_21_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return a7;
}

id OUTLINED_FUNCTION_25_25()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_21()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_28_21()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_29_21(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{

}

uint64_t OUTLINED_FUNCTION_31_19()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_33_19(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A5751974(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_34_22()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_36_18()
{
  sub_1A5751898();
}

void OUTLINED_FUNCTION_37_20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 64) = v0;
  *(_QWORD *)(v1 - 56) = v1 - 48;
}

uint64_t OUTLINED_FUNCTION_44_11()
{
  return sub_1A594CC9C();
}

void OUTLINED_FUNCTION_45_13()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_46_11()
{
  return swift_willThrow();
}

void OUTLINED_FUNCTION_47_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10)
{
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  uint64_t v14;

  *(_QWORD *)v11 = v10;
  *(_QWORD *)(v11 + 8) = v14;
  *(_DWORD *)(v11 + 16) = v12;
  *(_WORD *)(v11 + 20) = v13;
  *(_BYTE *)(v11 + 22) = a10;
}

void OUTLINED_FUNCTION_55_12()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_57_13@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  if (v1)
    return a1;
  return result;
}

void OUTLINED_FUNCTION_58_8()
{
  sub_1A5751898();
}

uint64_t OUTLINED_FUNCTION_59_10(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)v3 = result;
  *(_QWORD *)(v3 + 8) = a2;
  *(_DWORD *)(v3 + 16) = a3;
  *(_BYTE *)(v3 + 22) = BYTE6(a3);
  *(_WORD *)(v3 + 20) = WORD2(a3);
  return result;
}

uint64_t OUTLINED_FUNCTION_60_12()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_61_10()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_62_9(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)v3 = result;
  *(_QWORD *)(v3 + 8) = a2;
  *(_DWORD *)(v3 + 16) = a3;
  *(_WORD *)(v3 + 20) = WORD2(a3);
  *(_BYTE *)(v3 + 22) = BYTE6(a3);
  return result;
}

void OUTLINED_FUNCTION_66_9()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_67_10()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

void OUTLINED_FUNCTION_70_7()
{
  sub_1A5751898();
}

uint64_t OUTLINED_FUNCTION_71_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_72_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_77_7(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return ByteBufferView.init(_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_79_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_80_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t OUTLINED_FUNCTION_82_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_84_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_88_4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 96) = &a9;
  *(_QWORD *)(v9 + 32) = result;
  *(_QWORD *)(v9 + 40) = a2;
  *(_QWORD *)(v9 + 48) = a3;
  *(_DWORD *)(v9 + 56) = a4;
  *(_WORD *)(v9 + 60) = WORD2(a4);
  *(_BYTE *)(v9 + 62) = BYTE6(a4) & 1;
  *(_QWORD *)(v10 - 72) = v9;
  return result;
}

void OUTLINED_FUNCTION_90_4()
{
  sub_1A5740104();
}

uint64_t OUTLINED_FUNCTION_91_4(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_DWORD *)(v2 + 8) = a2;
  *(_BYTE *)(v2 + 12) = BYTE4(a2);
  return result;
}

void OUTLINED_FUNCTION_93_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_1A576F59C(a1, (uint64_t)va1, a3, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_94_4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = a2;
  *(_DWORD *)(v3 + 48) = a3;
  *(_WORD *)(v3 + 52) = WORD2(a3);
  *(_BYTE *)(v3 + 54) = BYTE6(a3);
  *(_QWORD *)(v4 - 72) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_96_2()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t OUTLINED_FUNCTION_99_4()
{
  return sub_1A594C720();
}

uint64_t OUTLINED_FUNCTION_100_2()
{
  return sub_1A594B5F8();
}

void OUTLINED_FUNCTION_106_2()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  __int16 v3;
  char v4;
  uint64_t v5;

  *(_QWORD *)v0 = v1;
  *(_QWORD *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v3;
  *(_BYTE *)(v0 + 22) = v4;
}

void OUTLINED_FUNCTION_108_3()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  __int16 v3;
  char v4;
  uint64_t v5;

  *(_QWORD *)v0 = v1;
  *(_QWORD *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v3;
  *(_BYTE *)(v0 + 22) = v4;
}

void OUTLINED_FUNCTION_109_3()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  __int16 v3;
  char v4;
  uint64_t v5;

  *(_QWORD *)v0 = v1;
  *(_QWORD *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v3;
  *(_BYTE *)(v0 + 22) = v4;
}

void OUTLINED_FUNCTION_110_1(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a2 - 256) | 0x8000000000000000;
  *(_QWORD *)(a1 + 16) = 0xD000000000000020;
  *(_QWORD *)(a1 + 24) = v2;
}

void OUTLINED_FUNCTION_111_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 - 48) = a4;
  *(_QWORD *)(v7 - 40) = a5;
  *(_QWORD *)(v7 - 32) = a6;
  *(_QWORD *)(v7 - 24) = a7;
}

void OUTLINED_FUNCTION_113_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;

  v14[2] = a14;
  v14[3] = a13;
  v14[4] = a12;
  v14[5] = a11;
  v14[6] = a10;
}

uint64_t OUTLINED_FUNCTION_114_3()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A566676C(v0, *(_QWORD *)(v1 - 248));
}

uint64_t OUTLINED_FUNCTION_116_2()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_117_1()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_118_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_119_3()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_122_2(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A576B64C(a1, a2, v2, 0, 0x29uLL, 0xE100000000000000, 0);
}

uint64_t OUTLINED_FUNCTION_123_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_125_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_130_3()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_131_3()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

uint64_t OUTLINED_FUNCTION_133_2()
{
  return swift_willThrow();
}

void OUTLINED_FUNCTION_135_2()
{
  sub_1A5740A68();
}

void OUTLINED_FUNCTION_143_2()
{
  sub_1A5751898();
}

uint64_t OUTLINED_FUNCTION_147_2(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_1A56E6FE8((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_148_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_152_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_154_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;

  return sub_1A573FE50(a1, 0, a3, 0, a5, 0, v16, v15, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t OUTLINED_FUNCTION_159_2(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)v4 = result;
  *(_QWORD *)(v4 + 8) = a2;
  *(_QWORD *)(v4 + 16) = a3;
  *(_DWORD *)(v4 + 24) = a4;
  *(_WORD *)(v4 + 28) = WORD2(a4);
  *(_BYTE *)(v4 + 30) = BYTE6(a4) & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_160_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_161_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_164_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_165_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 - 48) = a4;
  *(_QWORD *)(v7 - 40) = a5;
  *(_QWORD *)(v7 - 32) = a6;
  *(_QWORD *)(v7 - 24) = a7;
}

uint64_t OUTLINED_FUNCTION_166_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return sub_1A574BA64(a1, a2, a3, v3, *(_QWORD *)(v5 - 152), v4, *(_QWORD *)(v5 - 144), *(_QWORD *)(v5 - 136));
}

uint64_t OUTLINED_FUNCTION_167_2()
{
  return 34;
}

uint64_t OUTLINED_FUNCTION_168_2()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A56667BC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_171_2()
{
  return swift_release();
}

void OUTLINED_FUNCTION_172_1(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  sub_1A5742CDC(a1, a2, a3, a4, a5, a6, v7, v6);
}

uint64_t OUTLINED_FUNCTION_177_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

void OUTLINED_FUNCTION_178_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

uint64_t OUTLINED_FUNCTION_181_2()
{
  return sub_1A574AF34();
}

uint64_t OUTLINED_FUNCTION_184_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 72);
}

_QWORD *OUTLINED_FUNCTION_185_1(uint64_t a1, ...)
{
  _QWORD *(*v1)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  va_list va;

  va_start(va, a1);
  return v1((uint64_t *)va, v3, v4, v2);
}

void OUTLINED_FUNCTION_186_1()
{
  sub_1A574FE04();
}

void OUTLINED_FUNCTION_188_1(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
}

void OUTLINED_FUNCTION_190_0()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_191_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return sub_1A56CA7DC(a12, a13, a14, a16);
}

void OUTLINED_FUNCTION_192_1()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  char v4;
  int v5;
  __int16 v6;

  *(_QWORD *)v0 = v1;
  *(_DWORD *)(v0 + 8) = v3;
  *(_DWORD *)(v0 + 12) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v6;
  *(_BYTE *)(v0 + 22) = v4;
}

void OUTLINED_FUNCTION_193_0()
{
  uint64_t v0;
  __int16 v1;
  char v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;

  *(_QWORD *)v0 = v4;
  *(_DWORD *)(v0 + 8) = v6;
  *(_DWORD *)(v0 + 12) = v3;
  *(_DWORD *)(v0 + 16) = v5;
  *(_WORD *)(v0 + 20) = v1;
  *(_BYTE *)(v0 + 22) = v2;
}

void OUTLINED_FUNCTION_199_0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
}

uint64_t OUTLINED_FUNCTION_200_0()
{
  return sub_1A594CC9C();
}

uint64_t OUTLINED_FUNCTION_204_0(uint64_t result)
{
  uint64_t v1;

  **(_QWORD **)(v1 - 88) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_210_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_212_0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A555D250(v1, v0);
}

unint64_t OUTLINED_FUNCTION_214(unint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A5761038(result, a2, a3, a4);
}

void OUTLINED_FUNCTION_215_0(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  a1[2] = a2;
  a1[3] = (v2 - 32) | 0x8000000000000000;
  a1[4] = 167;
}

void OUTLINED_FUNCTION_216_0(uint64_t a1, _QWORD *a2)
{
  *a2 = 0x2064696C61766E49;
}

void OUTLINED_FUNCTION_226_0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_QWORD *)v0 = *(_QWORD *)(v1 - 160);
  v2 = *(_DWORD *)(v1 - 192);
  *(_DWORD *)(v0 + 8) = *(_DWORD *)(v1 - 188);
  *(_DWORD *)(v0 + 12) = v2;
}

unint64_t OUTLINED_FUNCTION_227_0()
{
  return sub_1A56E9774();
}

id OUTLINED_FUNCTION_228_0()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 200) = v0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_229_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return a13;
}

void OUTLINED_FUNCTION_231_0()
{
  sub_1A569D850();
}

uint64_t OUTLINED_FUNCTION_232_0()
{
  return swift_initStackObject();
}

void OUTLINED_FUNCTION_235_0()
{
  uint64_t v0;
  unint64_t v1;

  sub_1A569A3A0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_236_0()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

_QWORD *OUTLINED_FUNCTION_240_0(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result[2] = v4;
  result[3] = v3;
  result[4] = v2;
  result[5] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_243_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_246_0()
{
  return swift_willThrow();
}

unint64_t OUTLINED_FUNCTION_249_0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5761038(a1, a2, a3, 1);
}

uint64_t OUTLINED_FUNCTION_252_0()
{
  return swift_initStackObject();
}

void OUTLINED_FUNCTION_255_0()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_256_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_261_0()
{
  sub_1A5751898();
}

uint64_t OUTLINED_FUNCTION_263_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_264_0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return ByteBufferView.init(_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_267_0(uint64_t a1)
{
  char v1;
  uint64_t v2;

  return sub_1A566658C(a1, v2, v1);
}

void OUTLINED_FUNCTION_268_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  *(_QWORD *)(v9 - 96) = &a9;
}

void OUTLINED_FUNCTION_272_0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
}

void OUTLINED_FUNCTION_274_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v8 - 80) = v7;
  *(_QWORD *)(v8 - 72) = v8 - 64;
  *(_QWORD *)(v8 - 128) = a4;
  *(_QWORD *)(v8 - 120) = a5;
  *(_QWORD *)(v8 - 112) = a6;
  *(_QWORD *)(v8 - 104) = a7;
}

void OUTLINED_FUNCTION_275_0()
{
  uint64_t v0;
  int v1;
  __int16 v2;
  char v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 8) = v4;
  *(_DWORD *)(v0 + 16) = v1;
  *(_WORD *)(v0 + 20) = v2;
  *(_BYTE *)(v0 + 22) = v3;
}

void OUTLINED_FUNCTION_276_0()
{
  uint64_t v0;
  __int16 v1;
  int v2;
  char v3;
  int v4;
  int v5;

  *(_DWORD *)(v0 + 8) = v2;
  *(_DWORD *)(v0 + 12) = v5;
  *(_DWORD *)(v0 + 16) = v4;
  *(_WORD *)(v0 + 20) = v1;
  *(_BYTE *)(v0 + 22) = v3;
}

unint64_t sub_1A5751670(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unsigned __int8 v12;
  BOOL v13;
  char v14;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  unsigned __int8 v18;
  unint64_t v19;
  unsigned __int8 v20;
  unint64_t v22;
  unsigned __int8 v23;
  char v24;

  v4 = HIBYTE(a2) & 0xF;
  v5 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v6 = v4;
  else
    v6 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v8 = sub_1A56A1354(a1, a2, 10);
    v10 = v24;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0)
      v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v7 = (unsigned __int8 *)sub_1A594C7D4();
    v8 = (unint64_t)sub_1A56A132C(v7, v5);
    v10 = v9 & 1;
    goto LABEL_39;
  }
  if (a1 == 43)
  {
    if (!v4)
      goto LABEL_52;
    if (v4 == 1)
      goto LABEL_36;
    OUTLINED_FUNCTION_4_19();
    if (!v14 && v13)
      goto LABEL_36;
    v8 = v18;
    if (v17 != 2)
    {
      while (1)
      {
        OUTLINED_FUNCTION_10_13();
        if (!v14 && v13)
          goto LABEL_36;
        if (!is_mul_ok(v8, v19))
          goto LABEL_36;
        v13 = __CFADD__(10 * v8, v20);
        v8 = 10 * v8 + v20;
        if (v13)
          goto LABEL_36;
        v10 = 0;
        OUTLINED_FUNCTION_263_1();
        if (v14)
          goto LABEL_39;
      }
    }
LABEL_38:
    v10 = 0;
    goto LABEL_39;
  }
  if (a1 != 45)
  {
    if (!v4 || (a1 - 48) > 9u)
      goto LABEL_36;
    v8 = (a1 - 48);
    if (v4 != 1)
    {
      while (1)
      {
        OUTLINED_FUNCTION_10_13();
        if (!v14 && v13)
          goto LABEL_36;
        if (!is_mul_ok(v8, v22))
          goto LABEL_36;
        v13 = __CFADD__(10 * v8, v23);
        v8 = 10 * v8 + v23;
        if (v13)
          goto LABEL_36;
        v10 = 0;
        OUTLINED_FUNCTION_263_1();
        if (v14)
          goto LABEL_39;
      }
    }
    goto LABEL_38;
  }
  if (v4)
  {
    if (v4 != 1)
    {
      OUTLINED_FUNCTION_4_19();
      if (v14 || !v13)
      {
        v2 = 0;
        v8 = -(uint64_t)v12;
        if (!v12)
        {
          if (v11 != 2)
          {
            while (1)
            {
              OUTLINED_FUNCTION_10_13();
              if (!v14 && v13)
                goto LABEL_36;
              if (!is_mul_ok(v8, v15))
                goto LABEL_36;
              v13 = 10 * v8 >= v16;
              v8 = 10 * v8 - v16;
              if (!v13)
                goto LABEL_36;
              v10 = 0;
              OUTLINED_FUNCTION_263_1();
              if (v14)
                goto LABEL_39;
            }
          }
          goto LABEL_38;
        }
        goto LABEL_53;
      }
    }
LABEL_36:
    v8 = 0;
    v10 = 1;
    goto LABEL_39;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  v10 = 1;
  v8 = v2;
LABEL_39:
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
    return 0;
  else
    return v8;
}

void sub_1A5751898()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  char v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  int v17;
  uint64_t *v18;
  char v19;
  _WORD v20[42];

  OUTLINED_FUNCTION_1_89();
  v8 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    v9 = v6;
    if (v8 >= v6)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v18 = v9;
    }
    else
    {
      v10 = v5;
      v11 = v4;
      v12 = v3;
      v13 = v2;
      v14 = v1;
      v15 = *v5;
      v16 = v5[1];
      v17 = *((_DWORD *)v5 + 4);
      v19 = *((_BYTE *)v5 + 22);
      v20[0] = *((_WORD *)v5 + 10);
      OUTLINED_FUNCTION_0_10();
      sub_1A576B64C(v10, v8, v9, v11 & 1, v14, v13, v12 & 1);
      if (!v0)
      {
        OUTLINED_FUNCTION_4_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_68_0();
      *v10 = v15;
      v10[1] = v16;
      *((_DWORD *)v10 + 4) = v17;
      *((_WORD *)v10 + 10) = v20[0];
      *((_BYTE *)v10 + 22) = v19;
    }
    OUTLINED_FUNCTION_246_0();
LABEL_7:
    OUTLINED_FUNCTION_3_65();
    return;
  }
  __break(1u);
}

void sub_1A5751974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  _QWORD *v7;

  v4 = __OFADD__(a2, 1);
  v5 = a2 + 1;
  if (!v4)
  {
    if (v5 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v7 = a3;
    }
    else
    {
      sub_1A576B3AC(a1);
      if (!v3)
      {
LABEL_7:
        OUTLINED_FUNCTION_2_70();
        return;
      }
      OUTLINED_FUNCTION_106_2();
    }
    OUTLINED_FUNCTION_80_4();
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_1A5751A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A5736DD4);
}

uint64_t sub_1A5751A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A5736EAC);
}

uint64_t sub_1A5751A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A56E8F6C);
}

#error "1A5751AB4: call analysis failed (funcsize=40)"

uint64_t sub_1A5751AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A5751B10(a1, a2, a3, a4, a5);
}

#error "1A5751B4C: call analysis failed (funcsize=29)"

uint64_t sub_1A5751B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A5769918);
}

uint64_t sub_1A5751BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A5764408);
}

uint64_t sub_1A5751BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A57692E8);
}

uint64_t sub_1A5751BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A576663C);
}

#error "1A5751C9C: call analysis failed (funcsize=59)"

uint64_t sub_1A5751CE8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t *v14;
  char v15;
  __int16 v16;

  v6 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v6 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v14 = a3;
      return swift_willThrow();
    }
    v10 = result;
    v11 = *(_QWORD *)result;
    v12 = *(_QWORD *)(result + 8);
    v13 = *(_DWORD *)(result + 16);
    v15 = *(_BYTE *)(result + 22);
    v16 = *(_WORD *)(result + 20);
    swift_retain();
    sub_1A57690C4((uint64_t *)v10, v6, a3, a4, a5);
    if (v5)
    {
      swift_release();
      *(_QWORD *)v10 = v11;
      *(_QWORD *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v16;
      *(_BYTE *)(v10 + 22) = v15;
      return swift_willThrow();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1A5751E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A57652D4);
}

uint64_t sub_1A5751E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A57654F4);
}

uint64_t sub_1A5751E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A5765A9C);
}

uint64_t sub_1A5751E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A5769E8C);
}

uint64_t sub_1A5751E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A5765D2C);
}

uint64_t sub_1A5751E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A5765F64);
}

uint64_t sub_1A5751EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752440(a1, a2, a3, a4, a5, a6, sub_1A569E0E0);
}

uint64_t sub_1A5751ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A5766FA4);
}

uint64_t sub_1A5751EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A576A090);
}

uint64_t sub_1A5751F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A576719C);
}

uint64_t sub_1A5751F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A57673B4);
}

uint64_t sub_1A5751F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A576A294);
}

void sub_1A5751F58()
{
  sub_1A5751F7C();
}

void sub_1A5751F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  void (*v6)(uint64_t);
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  __int16 v12;
  int v13;
  uint64_t v14;

  OUTLINED_FUNCTION_6_55();
  if (!__OFADD__(v2, 1))
  {
    if (v2 + 1 >= v3)
    {
      sub_1A5718F9C();
      v9 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_292(v9, v10);
    }
    else
    {
      OUTLINED_FUNCTION_325();
      v4 = *(_QWORD *)(v0 + 8);
      v12 = *(_WORD *)(v0 + 20);
      v13 = *(_DWORD *)(v0 + 16);
      v11 = *(_BYTE *)(v0 + 22);
      v14 = *v5;
      v7 = v6;
      swift_retain();
      v8 = OUTLINED_FUNCTION_249_1();
      v7(v8);
      if (!v1)
      {
        OUTLINED_FUNCTION_84_1();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_68_0();
      *(_QWORD *)v0 = v14;
      *(_QWORD *)(v0 + 8) = v4;
      *(_DWORD *)(v0 + 16) = v13;
      *(_WORD *)(v0 + 20) = v12;
      *(_BYTE *)(v0 + 22) = v11;
    }
    OUTLINED_FUNCTION_80_4();
LABEL_7:
    OUTLINED_FUNCTION_12_42();
    return;
  }
  __break(1u);
}

void sub_1A5752050()
{
  sub_1A5751F7C();
}

void sub_1A5752074()
{
  sub_1A5751F7C();
}

void sub_1A5752098()
{
  sub_1A57520CC();
  OUTLINED_FUNCTION_9();
}

void sub_1A57520CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  __int16 v10;
  int v11;
  uint64_t v12;

  OUTLINED_FUNCTION_27_22();
  if (!__OFADD__(v2, 1))
  {
    if (v2 + 1 >= v3)
    {
      sub_1A5718F9C();
      v7 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_292(v7, v8);
    }
    else
    {
      OUTLINED_FUNCTION_325();
      v4 = *(_QWORD *)(v0 + 8);
      v10 = *(_WORD *)(v0 + 20);
      v11 = *(_DWORD *)(v0 + 16);
      v9 = *(_BYTE *)(v0 + 22);
      v12 = *v5;
      swift_retain();
      v6 = OUTLINED_FUNCTION_249_1();
      sub_1A5768EEC(v6);
      if (!v1)
      {
        swift_release();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_68_0();
      *(_QWORD *)v0 = v12;
      *(_QWORD *)(v0 + 8) = v4;
      *(_DWORD *)(v0 + 16) = v11;
      *(_WORD *)(v0 + 20) = v10;
      *(_BYTE *)(v0 + 22) = v9;
    }
    OUTLINED_FUNCTION_80_4();
LABEL_7:
    OUTLINED_FUNCTION_37_21();
    return;
  }
  __break(1u);
}

void sub_1A57521B4()
{
  sub_1A5751F7C();
}

void sub_1A57521D8()
{
  sub_1A5751F7C();
}

uint64_t sub_1A57521FC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  __int16 v10;
  char v11;
  uint64_t *v12;

  v4 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v4 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v12 = a3;
      return swift_willThrow();
    }
    v6 = result;
    v7 = *(_QWORD *)result;
    v8 = *(_QWORD *)(result + 8);
    v9 = *(_DWORD *)(result + 16);
    v10 = *(_WORD *)(result + 20);
    v11 = *(_BYTE *)(result + 22);
    swift_retain();
    sub_1A576129C(43, 0xE100000000000000, v6, v4, a3);
    if (v3)
    {
      swift_release();
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v9;
      *(_WORD *)(v6 + 20) = v10;
      *(_BYTE *)(v6 + 22) = v11;
      return swift_willThrow();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1A57522E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A576947C);
}

#error "1A5752334: call analysis failed (funcsize=35)"

#error "1A57523C4: call analysis failed (funcsize=35)"

uint64_t sub_1A5752424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752440(a1, a2, a3, a4, a5, a6, sub_1A569E744);
}

#error "1A57524B4: call analysis failed (funcsize=43)"

uint64_t sub_1A57524F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A576A724);
}

uint64_t sub_1A575250C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A5768A54);
}

uint64_t sub_1A5752528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A5768C8C);
}

#error "1A5752598: call analysis failed (funcsize=35)"

uint64_t sub_1A57525D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5752544(a1, a2, a3, a4, a5, a6, sub_1A576ADC0);
}

void sub_1A57525F0()
{
  sub_1A57520CC();
  OUTLINED_FUNCTION_9();
}

void sub_1A5752624(uint64_t a1)
{
  sub_1A575266C(a1);
  OUTLINED_FUNCTION_9();
}

void sub_1A5752648(uint64_t a1)
{
  sub_1A575266C(a1);
  OUTLINED_FUNCTION_9();
}

#error "1A5752714: call analysis failed (funcsize=59)"

void sub_1A575275C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(_QWORD *, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;

  OUTLINED_FUNCTION_61_11();
  v5 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    v6 = v2;
    if (v5 >= v2)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v10 = v6;
    }
    else
    {
      v7 = v3;
      v8 = v1;
      v9 = *v1;
      OUTLINED_FUNCTION_1_2();
      v7(v8, v5, v6);
      if (!v0)
      {
        OUTLINED_FUNCTION_2_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_68_4();
      *v8 = v9;
      OUTLINED_FUNCTION_223_0();
    }
    OUTLINED_FUNCTION_80_4();
LABEL_7:
    OUTLINED_FUNCTION_55_13();
    return;
  }
  __break(1u);
}

uint64_t sub_1A575280C()
{
  return sub_1A5752820();
}

#error "1A5752890: call analysis failed (funcsize=30)"

void sub_1A575289C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A57528B8(a1, a2, a3);
}

void sub_1A57528B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = __OFADD__(a2, 1);
  v5 = a2 + 1;
  if (!v4)
  {
    if (v5 >= a3)
    {
      sub_1A5718F9C();
      v15 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v15, v16);
    }
    else
    {
      OUTLINED_FUNCTION_195_2();
      v7 = v6();
      if (!v3)
      {
        OUTLINED_FUNCTION_80_5(v7, v8, v9, v10, v11, v12, v13, v14, v17, v18);
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_108_3();
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_197_2();
    return;
  }
  __break(1u);
}

void sub_1A5752938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A57528B8(a1, a2, a3);
}

void sub_1A5752954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A57528B8(a1, a2, a3);
}

void sub_1A5752970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A575298C(a1, a2, a3);
}

void sub_1A575298C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = __OFADD__(a2, 1);
  v5 = a2 + 1;
  if (!v4)
  {
    if (v5 >= a3)
    {
      sub_1A5718F9C();
      v14 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v14, v15);
    }
    else
    {
      OUTLINED_FUNCTION_195_2();
      v6 = sub_1A5762920();
      if (!v3)
      {
        OUTLINED_FUNCTION_80_5(v6, v7, v8, v9, v10, v11, v12, v13, v16, v17);
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_108_3();
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_197_2();
    return;
  }
  __break(1u);
}

void sub_1A5752A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A57528B8(a1, a2, a3);
}

void sub_1A5752A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A575298C(a1, a2, a3);
}

uint64_t sub_1A5752A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5752D4C(a1, a2, a3, a4, a5, a6, a7, 123, 0xE100000000000000, sub_1A5746268, 1286);
}

void sub_1A5752A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A57528B8(a1, a2, a3);
}

void sub_1A5752A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A57528B8(a1, a2, a3);
}

uint64_t sub_1A5752AB4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  BOOL v21;
  _QWORD *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  __int16 v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  unsigned __int16 v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  uint64_t v37;
  uint64_t v38;

  if (__OFADD__(a2, 1))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (a2 + 1 >= a3)
  {
    sub_1A5718F9C();
    OUTLINED_FUNCTION_21();
    *v22 = a3;
  }
  else
  {
    v3 = result;
    v5 = *(_QWORD *)result;
    v6 = *(unsigned int *)(result + 8);
    v7 = *(unsigned int *)(result + 12);
    OUTLINED_FUNCTION_317();
    v38 = v8;
    v27 = v10;
    v28 = v9;
    v25 = v8 | (v9 << 32) | (v10 << 48);
    v26 = v6 | (v7 << 32);
    result = ByteBufferView.init(_:)(v5, v26, v25, (uint64_t)&v29);
    v11 = v34;
    v12 = v35;
    if (v34 != v35)
    {
      v13 = v30;
      v14 = v31 - v30;
      if (v31 >= v30)
      {
        v23 = v7;
        v24 = v5;
        v7 = v29;
        v15 = v6;
        v6 = v33 | ((unint64_t)v32 << 8);
        result = OUTLINED_FUNCTION_176();
        v16 = *(_QWORD *)(v7 + 24);
        v17 = v6 + v13;
        LODWORD(v6) = v15;
        LODWORD(v7) = v23;
        v5 = v24;
        v18 = v16 + v17;
        while (1)
        {
          if (v11 >= v12)
          {
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
          v19 = v11 - v13;
          if (__OFSUB__(v11, v13))
            goto LABEL_26;
          if (v19 < 0)
            goto LABEL_27;
          if (v19 >= v14)
            goto LABEL_28;
          v20 = *(unsigned __int8 *)(v18 + v19);
          if ((v20 - 59) < 0xFFFFFFF5)
          {
            v21 = (v20 - 45) > 0x32 || ((1 << (v20 - 45)) & 0x4000000000003) == 0;
            if (v21 && (v20 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5)
              break;
          }
          if (v12 == ++v11)
            goto LABEL_18;
        }
        OUTLINED_FUNCTION_87();
        sub_1A553E5DC((uint64_t)&v29);
        ByteBufferView.init(_:)(v24, v26, v25, (uint64_t)v36);
        OUTLINED_FUNCTION_0_10();
        sub_1A553E5DC((uint64_t)v36);
        result = v11 - v37;
        if (__OFSUB__(v11, v37))
          goto LABEL_31;
        result = ByteBuffer.readSlice(length:)(result);
        if (result)
        {
          v3 = result;
          OUTLINED_FUNCTION_4_4();
          return v3;
        }
        goto LABEL_32;
      }
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      return result;
    }
LABEL_18:
    OUTLINED_FUNCTION_87();
    sub_1A553E5DC((uint64_t)&v29);
    sub_1A571EA80();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_8_23();
    OUTLINED_FUNCTION_68_4();
    *(_QWORD *)v3 = v5;
    *(_DWORD *)(v3 + 8) = v6;
    *(_DWORD *)(v3 + 12) = v7;
    *(_DWORD *)(v3 + 16) = v38;
    *(_WORD *)(v3 + 20) = v28;
    *(_BYTE *)(v3 + 22) = v27;
  }
  OUTLINED_FUNCTION_133_2();
  return v3;
}

void sub_1A5752CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A57528B8(a1, a2, a3);
}

uint64_t sub_1A5752D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5752D4C(a1, a2, a3, a4, a5, a6, a7, 31614, 0xE200000000000000, sub_1A5746268, 1304);
}

#error "1A5752EDC: call analysis failed (funcsize=121)"

uint64_t *sub_1A5752F44(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  __int16 v11;
  int v12;

  if (!__OFADD__(a2, 1))
  {
    v4 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v8 = v4;
    }
    else
    {
      v5 = result;
      v6 = *result;
      v7 = result[1];
      v11 = *((_WORD *)result + 10);
      v12 = *((_DWORD *)result + 4);
      v10 = *((_BYTE *)result + 22);
      swift_retain();
      sub_1A5751898();
      if (!v3)
      {
        sub_1A573EF04();
        v4 = v9;
        swift_release();
        swift_release();
        return (uint64_t *)v4;
      }
      swift_release();
      *v5 = v6;
      v5[1] = v7;
      *((_DWORD *)v5 + 4) = v12;
      *((_WORD *)v5 + 10) = v11;
      *((_BYTE *)v5 + 22) = v10;
    }
    swift_willThrow();
    swift_release();
    return (uint64_t *)v4;
  }
  __break(1u);
  return result;
}

#error "1A5753114: call analysis failed (funcsize=38)"

uint64_t sub_1A575315C()
{
  return sub_1A5753170();
}

#error "1A57531E0: call analysis failed (funcsize=30)"

#error "1A5753240: call analysis failed (funcsize=38)"

void sub_1A5753288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  int v8;
  __int16 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _BYTE v19[84];

  OUTLINED_FUNCTION_1_89();
  if (!__OFADD__(v4, 1))
  {
    OUTLINED_FUNCTION_122_3();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_312();
      v8 = *(_DWORD *)(v7 + 16);
      v9 = *(_WORD *)(v7 + 20);
      v19[0] = *(_BYTE *)(v7 + 22);
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_251_0();
      sub_1A575DE18();
      if (!v1)
      {
        OUTLINED_FUNCTION_100_3();
        if ((OUTLINED_FUNCTION_127_3() & 0x8000000000000000) == 0)
        {
          OUTLINED_FUNCTION_219_1();
          sub_1A575DE18();
          OUTLINED_FUNCTION_100_3();
          v12 = (uint64_t *)OUTLINED_FUNCTION_219_1();
          sub_1A575DBEC(v12, v13, v14);
          OUTLINED_FUNCTION_23();
          OUTLINED_FUNCTION_4_4();
          goto LABEL_8;
        }
        sub_1A56E9774();
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_228_1();
        OUTLINED_FUNCTION_5_61(v15, v16);
        OUTLINED_FUNCTION_57_14(v17, v18);
      }
      OUTLINED_FUNCTION_68_4();
      *(_QWORD *)v0 = v2;
      *(_QWORD *)(v0 + 8) = v3;
      *(_DWORD *)(v0 + 16) = v8;
      *(_WORD *)(v0 + 20) = v9;
      *(_BYTE *)(v0 + 22) = v19[0];
    }
    else
    {
      sub_1A5718F9C();
      v10 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_258_1(v10, v11);
    }
    OUTLINED_FUNCTION_246_0();
    OUTLINED_FUNCTION_23();
LABEL_8:
    OUTLINED_FUNCTION_3_65();
    return;
  }
  __break(1u);
}

#error "1A5753438: call analysis failed (funcsize=38)"

#error "1A57534F0: call analysis failed (funcsize=52)"

void sub_1A5753554(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _OWORD *v4;
  char v5;
  char v6;
  _QWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[5];
  __int16 v23;
  __int16 v24;
  int v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_234_0();
    if (v5 != v6)
    {
      v7 = v3;
      v8 = v4;
      v9 = *v3;
      OUTLINED_FUNCTION_144_3();
      OUTLINED_FUNCTION_1_2();
      OUTLINED_FUNCTION_17_0();
      v10 = OUTLINED_FUNCTION_254_0();
      sub_1A5753480(v10);
      if (!v2)
      {
        OUTLINED_FUNCTION_158_2();
        OUTLINED_FUNCTION_296();
        sub_1A5751898();
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_2_4();
        *v8 = v26;
        v8[1] = v27;
        v8[2] = v28;
        return;
      }
      v13 = OUTLINED_FUNCTION_68_4();
      *v7 = v9;
      OUTLINED_FUNCTION_60_13(v13, v14, v15, v16, v17, v18, v19, v20, v21, *(int *)v22, v22[4], v23, v24, v25);
    }
    else
    {
      sub_1A5718F9C();
      v11 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_256_1(v11, v12);
    }
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_23();
  }
}

#error "1A5753790: call analysis failed (funcsize=51)"

#error "1A5753870: call analysis failed (funcsize=86)"

#error "1A57539BC: call analysis failed (funcsize=43)"

#error "1A5753AA4: call analysis failed (funcsize=57)"

uint64_t sub_1A5753AEC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v24 = v7;
    v25 = v5;
    v26 = v6;
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v16 = a3;
    }
    else
    {
      v9 = result;
      v21 = a4;
      v10 = *(_QWORD *)result;
      v11 = *(_QWORD *)(result + 8);
      v12 = *(_DWORD *)(result + 16);
      v19 = *(unsigned __int16 *)(result + 20);
      v20 = v12;
      v18 = *(unsigned __int8 *)(result + 22);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF50);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1A59ABD10;
      v22 = v10;
      swift_retain();
      sub_1A5743BC4();
      if (!v4)
      {
        v17 = (uint64_t)&v17;
        *(_QWORD *)(v13 + 32) = v14;
        *(_QWORD *)(v13 + 40) = v15;
        v23 = v13;
        MEMORY[0x1E0C80A78](v14);
        sub_1A5751F7C();
        swift_release();
        swift_release();
        return v23;
      }
      *(_QWORD *)(v13 + 16) = 0;
      swift_release();
      swift_release();
      *(_QWORD *)v9 = v22;
      *(_QWORD *)(v9 + 8) = v11;
      *(_DWORD *)(v9 + 16) = v20;
      *(_WORD *)(v9 + 20) = v19;
      *(_BYTE *)(v9 + 22) = v18;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

#error "1A5753D6C: call analysis failed (funcsize=38)"

#error "1A5753E08: call analysis failed (funcsize=38)"

void sub_1A5753E50()
{
  sub_1A575D07C();
}

uint64_t sub_1A5753E64()
{
  return sub_1A5753E78();
}

#error "1A5753EE8: call analysis failed (funcsize=30)"

#error "1A5753F88: call analysis failed (funcsize=78)"

uint64_t sub_1A5754030()
{
  return sub_1A5754044();
}

#error "1A57540AC: call analysis failed (funcsize=44)"

uint64_t sub_1A57540F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char v20;
  __int16 v21;
  int v22;

  v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v18 = a3;
    }
    else
    {
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v21 = *(_WORD *)(result + 20);
      v22 = *(_DWORD *)(result + 16);
      v20 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751974(v14, v9, a3);
      if (!v7)
      {
        sub_1A571CD80(v14, v9, a3, a4, a5, a6, a7);
        v8 = v17;
        swift_retain();
        sub_1A575E830(v14, v9, a3, a4, a5, a6);
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v22;
      *(_WORD *)(v14 + 20) = v21;
      *(_BYTE *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A57542A8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  __int16 v21;
  int v22;

  v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v19 = a3;
    }
    else
    {
      v15 = result;
      v17 = *(_QWORD *)result;
      v18 = *(_QWORD *)(result + 8);
      v21 = *(_WORD *)(result + 20);
      v22 = *(_DWORD *)(result + 16);
      v20 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A571BD9C(v15, v9, a3, a4, a5, a6, a7, a8);
      if (!v8)
      {
        swift_release();
        return swift_release();
      }
      swift_release();
      *(_QWORD *)v15 = v17;
      *(_QWORD *)(v15 + 8) = v18;
      *(_DWORD *)(v15 + 16) = v22;
      *(_WORD *)(v15 + 20) = v21;
      *(_BYTE *)(v15 + 22) = v20;
    }
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

#error "1A5754424: call analysis failed (funcsize=38)"

void sub_1A5754480()
{
  sub_1A5757384();
}

uint64_t sub_1A5754494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A575D540(a1, a2, a3, a4, a5, a6, a7, sub_1A5735388);
}

uint64_t sub_1A57544B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A575D540(a1, a2, a3, a4, a5, a6, a7, sub_1A5743EA4);
}

uint64_t sub_1A57544CC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  __int16 v12;

  if (!__OFADD__(a2, 1))
  {
    v4 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v10 = v4;
    }
    else
    {
      v5 = result;
      v6 = *(_QWORD *)result;
      v7 = *(_QWORD *)(result + 8);
      v8 = *(_DWORD *)(result + 16);
      v11 = *(_BYTE *)(result + 22);
      v12 = *(_WORD *)(result + 20);
      swift_retain();
      v9 = sub_1A574C7B0();
      if (!v3)
      {
        v4 = v9;
        swift_release();
        swift_release();
        return v4;
      }
      swift_release();
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v8;
      *(_WORD *)(v5 + 20) = v12;
      *(_BYTE *)(v5 + 22) = v11;
    }
    swift_willThrow();
    swift_release();
    return v4;
  }
  __break(1u);
  return result;
}

void sub_1A5754604()
{
  sub_1A5754618();
}

void sub_1A5754618()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_1_89();
  if (!__OFADD__(v1, 1))
  {
    OUTLINED_FUNCTION_56_13();
    if (v2 != v3)
    {
      OUTLINED_FUNCTION_2_76();
      OUTLINED_FUNCTION_10_42();
      if (!v0)
      {
        OUTLINED_FUNCTION_2_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_16_32();
      OUTLINED_FUNCTION_11_30();
    }
    else
    {
      sub_1A5718F9C();
      v4 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v4, v5);
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_3_65();
    return;
  }
  __break(1u);
}

uint64_t sub_1A5754694(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char v19;
  __int16 v20;
  int v21;

  v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v18 = a3;
    }
    else
    {
      v8 = a6;
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v20 = *(_WORD *)(result + 20);
      v21 = *(_DWORD *)(result + 16);
      v19 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751898();
      if (!v7)
      {
        sub_1A57411C8(v14, v9, a3, a4, a5, v8, a7);
        v8 = v17;
        sub_1A5751974(v14, v9, a3);
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v21;
      *(_WORD *)(v14 + 20) = v20;
      *(_BYTE *)(v14 + 22) = v19;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

#error "1A57548BC: call analysis failed (funcsize=57)"

uint64_t sub_1A5754920(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  __int16 v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _BYTE v19[40];

  v4 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v4 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v12 = a3;
    }
    else
    {
      v6 = result;
      v7 = *(_QWORD *)result;
      v8 = *(_QWORD *)(result + 8);
      v9 = *(_DWORD *)(result + 16);
      v10 = *(_WORD *)(result + 20);
      v11 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751974(v6, v4, a3);
      if (!v3)
      {
        sub_1A57528B8(v6, v4, a3);
        ByteBufferView.init(_:)(v14, v15, v13 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v19);
        swift_retain();
        v16 = sub_1A56E6FE8((uint64_t)v19);
        if (v17)
        {
          v4 = v16;
          swift_release();
          swift_release();
          return v4;
        }
        sub_1A56E9774();
        swift_allocError();
        strcpy(v18, "Invalid UTF8");
        v18[13] = 0;
        *((_WORD *)v18 + 7) = -5120;
        *((_QWORD *)v18 + 2) = 0xD000000000000020;
        *((_QWORD *)v18 + 3) = 0x80000001A5A0F5E0;
        *((_QWORD *)v18 + 4) = 318;
        swift_willThrow();
        swift_release();
      }
      swift_release();
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v9;
      *(_WORD *)(v6 + 20) = v10;
      *(_BYTE *)(v6 + 22) = v11;
    }
    swift_willThrow();
    return v4;
  }
  __break(1u);
  return result;
}

#error "1A5754B54: call analysis failed (funcsize=44)"

#error "1A5754BF4: call analysis failed (funcsize=38)"

#error "1A5754CB0: call analysis failed (funcsize=46)"

uint64_t sub_1A5754D04(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  __int16 v12;
  int v13;

  v4 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v5 = a3;
    if (v4 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v9 = v5;
    }
    else
    {
      v6 = result;
      v7 = *(_QWORD *)result;
      v8 = *(_QWORD *)(result + 8);
      v12 = *(_WORD *)(result + 20);
      v13 = *(_DWORD *)(result + 16);
      v11 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751974(v6, v4, v5);
      if (!v3)
      {
        sub_1A571E834();
        v5 = v10;
        swift_release();
        swift_release();
        return v5;
      }
      swift_release();
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v13;
      *(_WORD *)(v6 + 20) = v12;
      *(_BYTE *)(v6 + 22) = v11;
    }
    swift_willThrow();
    swift_release();
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5754E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A57220B0);
}

uint64_t sub_1A5754E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A57221B8);
}

uint64_t sub_1A5754EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A572224C);
}

uint64_t sub_1A5754EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A5721F2C);
}

uint64_t sub_1A5754EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A5721E90);
}

uint64_t sub_1A5754EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A5722578);
}

void sub_1A5754F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;

  OUTLINED_FUNCTION_61_11();
  v2 = v1 + 1;
  if (!__OFADD__(v1, 1))
  {
    OUTLINED_FUNCTION_234_0();
    if (v5 != v6)
    {
      v7 = v3;
      v42 = v4;
      v8 = *(_QWORD *)v3;
      v9 = *(_QWORD *)(v3 + 8);
      v10 = *(_DWORD *)(v3 + 16);
      v44 = *(unsigned __int16 *)(v3 + 20);
      v45 = v10;
      v43 = *(unsigned __int8 *)(v3 + 22);
      OUTLINED_FUNCTION_1_2();
      OUTLINED_FUNCTION_291(v7, v2);
      if (!v0)
      {
        v11 = OUTLINED_FUNCTION_201_1();
        v40 = sub_1A57332C4(v11, v12, v13, v14, v15, v16, v17);
        v41 = v18;
        OUTLINED_FUNCTION_132_3();
        v19 = OUTLINED_FUNCTION_201_1();
        v39 = sub_1A575EC98(v19, v20, v21, v22, v23, v24, v25, v26, (uint64_t)sub_1A57564E4);
        OUTLINED_FUNCTION_23();
        v29 = MEMORY[0x1E0DEE9D8];
        if (v39)
          v29 = v39;
        v39 = v29;
        OUTLINED_FUNCTION_298();
        OUTLINED_FUNCTION_138_2(v30, v31, v32);
        v38[1] = v38;
        MEMORY[0x1E0C80A78](v33);
        OUTLINED_FUNCTION_248_1();
        MEMORY[0x1E0C80A78](v34);
        OUTLINED_FUNCTION_270_0();
        OUTLINED_FUNCTION_8_42();
        sub_1A576F8EC((uint64_t)sub_1A576DE9C, v35, (uint64_t)sub_1A576DEB0, v36);
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_267_1();
        OUTLINED_FUNCTION_207_0(v39);
        *(_OWORD *)(v37 + 104) = xmmword_1A59AC390;
        goto LABEL_10;
      }
      OUTLINED_FUNCTION_16_32();
      *(_QWORD *)v7 = v8;
      *(_QWORD *)(v7 + 8) = v9;
      *(_DWORD *)(v7 + 16) = v45;
      *(_WORD *)(v7 + 20) = v44;
      *(_BYTE *)(v7 + 22) = v43;
    }
    else
    {
      sub_1A5718F9C();
      v27 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_311(v27, v28);
    }
    OUTLINED_FUNCTION_46_11();
    OUTLINED_FUNCTION_23();
LABEL_10:
    OUTLINED_FUNCTION_55_13();
    return;
  }
  __break(1u);
}

uint64_t sub_1A5755130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A5722694);
}

uint64_t sub_1A575514C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A5721DFC);
}

#error "1A57552F8: call analysis failed (funcsize=120)"

uint64_t sub_1A5755350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A5721AD0);
}

uint64_t sub_1A575536C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A5722BBC);
}

#error "1A57554A4: call analysis failed (funcsize=89)"

uint64_t sub_1A57554F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A5721900);
}

#error "1A57555B4: call analysis failed (funcsize=80)"

uint64_t sub_1A5755660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A572186C);
}

uint64_t sub_1A575567C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A57228B8);
}

uint64_t sub_1A5755698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A572293C);
}

#error "1A57557F4: call analysis failed (funcsize=95)"

uint64_t sub_1A5755844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5751A58(a1, a2, a3, a4, a5, a6, a7, sub_1A57229C0);
}

void sub_1A5755860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;

  OUTLINED_FUNCTION_61_11();
  if (!__OFADD__(v1, 1))
  {
    OUTLINED_FUNCTION_234_0();
    if (v4 != v5)
    {
      v6 = v2;
      v34 = v3;
      v7 = *v2;
      v8 = *((_DWORD *)v2 + 4);
      v36 = *((unsigned __int16 *)v2 + 10);
      v37 = v8;
      v35 = *((unsigned __int8 *)v2 + 22);
      OUTLINED_FUNCTION_1_2();
      OUTLINED_FUNCTION_296();
      sub_1A5751898();
      if (!v0)
      {
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_193_1();
        sub_1A57570A0();
        v31 = HIDWORD(v10);
        v32 = v9;
        v33 = v10;
        OUTLINED_FUNCTION_87();
        v11 = OUTLINED_FUNCTION_193_1();
        v30 = sub_1A575EC98(v11, v12, v13, v14, v15, v16, v17, v18, (uint64_t)sub_1A57564E4);
        OUTLINED_FUNCTION_23();
        v21 = MEMORY[0x1E0DEE9D8];
        if (v30)
          v21 = v30;
        v30 = v21;
        OUTLINED_FUNCTION_158_2();
        v29 = (uint64_t)&v29;
        MEMORY[0x1E0C80A78](v22);
        OUTLINED_FUNCTION_248_1();
        MEMORY[0x1E0C80A78](v23);
        OUTLINED_FUNCTION_270_0();
        OUTLINED_FUNCTION_8_42();
        OUTLINED_FUNCTION_296();
        sub_1A576F8EC(v24, v25, v26, v27);
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_267_1();
        OUTLINED_FUNCTION_207_0(v30);
        *(_OWORD *)(v28 + 104) = xmmword_1A59AC3D0;
        goto LABEL_10;
      }
      OUTLINED_FUNCTION_68_4();
      *v6 = v7;
      OUTLINED_FUNCTION_224_0();
    }
    else
    {
      sub_1A5718F9C();
      v19 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_256_1(v19, v20);
    }
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_23();
LABEL_10:
    OUTLINED_FUNCTION_55_13();
    return;
  }
  __break(1u);
}

#error "1A5755ACC: call analysis failed (funcsize=39)"

uint64_t *sub_1A5755B14(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  __int16 v16;
  int v17;

  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v14 = a3;
    }
    else
    {
      v8 = a7;
      v10 = result;
      v11 = *result;
      v12 = result[1];
      v16 = *((_WORD *)result + 10);
      v17 = *((_DWORD *)result + 4);
      v15 = *((_BYTE *)result + 22);
      swift_retain();
      sub_1A5751898();
      if (!v7)
      {
        swift_retain();
        sub_1A575F6F8();
        if (v13)
          v8 = v13;
        else
          v8 = MEMORY[0x1E0DEE9D8];
        sub_1A5751898();
        swift_release();
        swift_release();
        return (uint64_t *)v8;
      }
      swift_release();
      *v10 = v11;
      v10[1] = v12;
      *((_DWORD *)v10 + 4) = v17;
      *((_WORD *)v10 + 10) = v16;
      *((_BYTE *)v10 + 22) = v15;
    }
    swift_willThrow();
    swift_release();
    return (uint64_t *)v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5755CE0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD v27[6];
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v26 = a3;
    }
    else
    {
      v10 = result;
      v32 = a4;
      v14 = *(_QWORD *)result;
      v15 = *(_QWORD *)(result + 8);
      v16 = *(_DWORD *)(result + 16);
      v30 = *(unsigned __int16 *)(result + 20);
      v31 = v16;
      v29 = *(unsigned __int8 *)(result + 22);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AEF8);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1A59ABD10;
      v33 = v14;
      v18 = a5;
      v19 = a7;
      v20 = a6;
      v21 = v32;
      swift_retain();
      sub_1A573D2B4();
      if (!v7)
      {
        v28 = (uint64_t)&v28;
        *(_QWORD *)(v17 + 32) = v22;
        *(_QWORD *)(v17 + 40) = v23;
        *(_QWORD *)(v17 + 48) = v24;
        *(_DWORD *)(v17 + 56) = v25;
        *(_WORD *)(v17 + 60) = WORD2(v25);
        *(_BYTE *)(v17 + 62) = BYTE6(v25);
        v34 = v17;
        MEMORY[0x1E0C80A78](v22);
        v27[2] = v21;
        v27[3] = v18;
        v27[4] = v20;
        v27[5] = v19;
        sub_1A5752544(v10, v8, a3, sub_1A576DCFC, v27, &v34, sub_1A5767D54);
        swift_release();
        swift_release();
        return v34;
      }
      *(_QWORD *)(v17 + 16) = 0;
      swift_release();
      swift_release();
      *(_QWORD *)v10 = v33;
      *(_QWORD *)(v10 + 8) = v15;
      *(_DWORD *)(v10 + 16) = v31;
      *(_WORD *)(v10 + 20) = v30;
      *(_BYTE *)(v10 + 22) = v29;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A5755F0C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;

  v6 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v7 = a3;
    if (v6 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v17 = v7;
    }
    else
    {
      v10 = result;
      v11 = *(_QWORD *)result;
      v12 = *(_QWORD *)(result + 8);
      v13 = *(_DWORD *)(result + 16);
      v14 = *(_WORD *)(result + 20);
      v18 = *(_BYTE *)(result + 22);
      swift_retain();
      v15 = v7;
      v7 = a5;
      v16 = a4(v10, v6, v15);
      if (!v5)
      {
        v7 = v16;
        swift_release();
        return v7;
      }
      swift_release();
      *(_QWORD *)v10 = v11;
      *(_QWORD *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(_BYTE *)(v10 + 22) = v18;
    }
    swift_willThrow();
    return v7;
  }
  __break(1u);
  return result;
}

#error "1A575609C: call analysis failed (funcsize=44)"

void sub_1A57560E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char v6;
  char v7;
  _QWORD *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD v15[2];
  int v16;
  int v17;
  int v18;

  OUTLINED_FUNCTION_61_11();
  v4 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    OUTLINED_FUNCTION_181_3();
    if (v6 != v7)
    {
      v8 = v5;
      OUTLINED_FUNCTION_118_4();
      v17 = v9;
      v18 = v10;
      v16 = *(unsigned __int8 *)(v11 + 22);
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_112_2();
      if (!v0)
      {
        v15[1] = v15;
        MEMORY[0x1E0C80A78](v12);
        OUTLINED_FUNCTION_271_1();
        sub_1A5760F38((uint64_t)v8, v4, v1, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_1A576DCB4);
        OUTLINED_FUNCTION_162_2();
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_48();
LABEL_8:
        OUTLINED_FUNCTION_55_13();
        return;
      }
      OUTLINED_FUNCTION_68_4();
      *v8 = v2;
      OUTLINED_FUNCTION_224_0();
    }
    else
    {
      sub_1A5718F9C();
      v13 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_194_2(v13, v14);
    }
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_23();
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1A5756204(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  __int16 v12;
  int v13;

  v4 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v5 = a3;
    if (v4 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v9 = v5;
    }
    else
    {
      v6 = result;
      v7 = *(_QWORD *)result;
      v8 = *(_QWORD *)(result + 8);
      v12 = *(_WORD *)(result + 20);
      v13 = *(_DWORD *)(result + 16);
      v11 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751974(v6, v4, v5);
      if (!v3)
      {
        sub_1A57405D0();
        v5 = v10;
        swift_release();
        swift_release();
        return v5;
      }
      swift_release();
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v13;
      *(_WORD *)(v6 + 20) = v12;
      *(_BYTE *)(v6 + 22) = v11;
    }
    swift_willThrow();
    swift_release();
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5756370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A575D540(a1, a2, a3, a4, a5, a6, a7, sub_1A5722ED0);
}

uint64_t *sub_1A575638C(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  __int16 v12;

  if (!__OFADD__(a2, 1))
  {
    v4 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v10 = v4;
    }
    else
    {
      v5 = result;
      v6 = *result;
      v7 = result[1];
      v8 = *((_DWORD *)result + 4);
      v11 = *((_BYTE *)result + 22);
      v12 = *((_WORD *)result + 10);
      swift_retain();
      swift_retain();
      sub_1A5758E50();
      if (!v3)
      {
        v4 = v9;
        swift_release();
        swift_release();
        return (uint64_t *)v4;
      }
      swift_release();
      *v5 = v6;
      v5[1] = v7;
      *((_DWORD *)v5 + 4) = v8;
      *((_WORD *)v5 + 10) = v12;
      *((_BYTE *)v5 + 22) = v11;
    }
    swift_willThrow();
    swift_release();
    return (uint64_t *)v4;
  }
  __break(1u);
  return result;
}

#error "1A5756540: call analysis failed (funcsize=40)"

void sub_1A5756588()
{
  sub_1A575A6A4();
}

void sub_1A575659C()
{
  sub_1A575AE18();
}

#error "1A575666C: call analysis failed (funcsize=62)"

void sub_1A57566B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  char v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_61_11();
  if (!__OFADD__(v2, 1))
  {
    OUTLINED_FUNCTION_122_3();
    if (v5 != v6)
    {
      v7 = v3;
      v36 = v4;
      v8 = *v3;
      OUTLINED_FUNCTION_143_3();
      v34 = v9;
      v35 = v10;
      v33 = *(unsigned __int8 *)(v11 + 22);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A94F8);
      v12 = OUTLINED_FUNCTION_20_1();
      *(_OWORD *)(v12 + 16) = xmmword_1A59ABD10;
      v37 = v8;
      swift_retain();
      OUTLINED_FUNCTION_304();
      v20 = sub_1A573EE0C(v13, v14, v15, v16, v17, v18, v19);
      if (!v0)
      {
        v32 = (uint64_t)&v32;
        *(_QWORD *)(v12 + 32) = v20;
        *(_QWORD *)(v12 + 40) = v21;
        *(_DWORD *)(v12 + 48) = v22;
        *(_WORD *)(v12 + 52) = WORD2(v22);
        *(_BYTE *)(v12 + 54) = BYTE6(v22);
        v38 = v12;
        MEMORY[0x1E0C80A78](v20);
        OUTLINED_FUNCTION_271_1();
        v25 = OUTLINED_FUNCTION_219_1();
        sub_1A5752544(v25, v26, v27, v28, v29, v30, v31);
        OUTLINED_FUNCTION_23();
        swift_release();
LABEL_8:
        OUTLINED_FUNCTION_55_13();
        return;
      }
      *(_QWORD *)(v12 + 16) = 0;
      OUTLINED_FUNCTION_4_4();
      OUTLINED_FUNCTION_68_4();
      *v7 = v37;
      v7[1] = v1;
      *((_DWORD *)v7 + 4) = v35;
      *((_WORD *)v7 + 10) = v34;
      *((_BYTE *)v7 + 22) = v33;
    }
    else
    {
      sub_1A5718F9C();
      v23 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_258_1(v23, v24);
    }
    OUTLINED_FUNCTION_246_0();
    OUTLINED_FUNCTION_23();
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1A575685C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  int v20;
  __int16 v21;

  v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v19 = a3;
    }
    else
    {
      v8 = a6;
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v20 = *(_DWORD *)(result + 16);
      v21 = *(_WORD *)(result + 20);
      v17 = *(_BYTE *)(result + 22);
      swift_retain();
      swift_retain();
      v18 = sub_1A575D540(v14, v9, a3, a4, a5, v8, a7, sub_1A5746E78);
      if (!v7)
      {
        v8 = v18;
        sub_1A5751974(v14, v9, a3);
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v21;
      *(_BYTE *)(v14 + 22) = v17;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

void sub_1A57569C8()
{
  sub_1A5758E50();
}

#error "1A5756A68: call analysis failed (funcsize=54)"

#error "1A5756B34: call analysis failed (funcsize=46)"

uint64_t sub_1A5756B7C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  __int16 v12;
  int v13;

  if (__OFADD__(a2, 1))
  {
    __break(1u);
    return result;
  }
  if (a2 + 1 >= a3)
  {
    sub_1A5718F9C();
    swift_allocError();
    *v10 = a3;
    goto LABEL_7;
  }
  v5 = result;
  v6 = *(_QWORD *)result;
  v7 = *(_QWORD *)(result + 8);
  v12 = *(_WORD *)(result + 20);
  v13 = *(_DWORD *)(result + 16);
  v11 = *(_BYTE *)(result + 22);
  swift_retain();
  sub_1A5751898();
  if (v3)
  {
    swift_release();
    *(_QWORD *)v5 = v6;
    *(_QWORD *)(v5 + 8) = v7;
    *(_DWORD *)(v5 + 16) = v13;
    *(_WORD *)(v5 + 20) = v12;
    *(_BYTE *)(v5 + 22) = v11;
LABEL_7:
    swift_willThrow();
    return swift_release();
  }
  swift_retain();
  sub_1A575F6F8();
  v9 = v8;
  sub_1A5751898();
  swift_release();
  swift_release();
  if (v9)
    return v9;
  else
    return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A5756D44(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _OWORD *v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32[4];

  v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v22 = a3;
    }
    else
    {
      v10 = result;
      v29 = a4;
      v14 = *(_QWORD *)result;
      v15 = *(_QWORD *)(result + 8);
      v16 = *(_DWORD *)(result + 16);
      v27 = *(unsigned __int16 *)(result + 20);
      v28 = v16;
      v26 = *(unsigned __int8 *)(result + 22);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE10);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1A59ABD10;
      v30 = v14;
      v18 = a5;
      v19 = a7;
      v20 = a6;
      v21 = v29;
      swift_retain();
      sub_1A5740DE8(v29, v18, v20, v19, v32);
      if (!v7)
      {
        v23 = sub_1A56D0898(v32, (_OWORD *)(v17 + 32));
        v25 = (uint64_t)&v25;
        v31 = v17;
        MEMORY[0x1E0C80A78](v23);
        v24[2] = v21;
        v24[3] = v18;
        v24[4] = v20;
        v24[5] = v19;
        sub_1A5752544(v10, v8, a3, sub_1A576DD40, v24, &v31, sub_1A57668C8);
        swift_release();
        swift_release();
        return v31;
      }
      *(_QWORD *)(v17 + 16) = 0;
      swift_release();
      swift_release();
      *(_QWORD *)v10 = v30;
      *(_QWORD *)(v10 + 8) = v15;
      *(_DWORD *)(v10 + 16) = v28;
      *(_WORD *)(v10 + 20) = v27;
      *(_BYTE *)(v10 + 22) = v26;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A5756F64(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  __int16 v10;
  int v11;

  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v8 = a3;
    }
    else
    {
      v5 = result;
      v6 = *(_QWORD *)result;
      v7 = *(_QWORD *)(result + 8);
      v10 = *(_WORD *)(result + 20);
      v11 = *(_DWORD *)(result + 16);
      v9 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A572C6B0();
      if (!v3)
      {
        swift_release();
        return swift_release();
      }
      swift_release();
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v11;
      *(_WORD *)(v5 + 20) = v10;
      *(_BYTE *)(v5 + 22) = v9;
    }
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

void sub_1A57570A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __int16 v26;
  int v27;

  OUTLINED_FUNCTION_1_89();
  v10 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    v11 = v6;
    v12 = v4;
    if (v10 >= v4)
    {
      sub_1A5718F9C();
      v20 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_258_1(v20, v21);
    }
    else
    {
      v13 = v8;
      v14 = v7;
      v15 = v5;
      OUTLINED_FUNCTION_312();
      v26 = *(_WORD *)(v16 + 20);
      v27 = *(_DWORD *)(v16 + 16);
      v17 = *(_BYTE *)(v16 + 22);
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_17_0();
      v18 = sub_1A5759210(v0, v10, v12, v15, v11, v14, v13);
      if (!v1)
      {
        v22 = v18;
        v23 = v19;
        if (sub_1A56B60D0(v18, v19 & 0xFFFFFFFFFFLL) > 0)
        {
          OUTLINED_FUNCTION_40();
          OUTLINED_FUNCTION_4_4();
          goto LABEL_7;
        }
        sub_1A54E3458(v22, v23, SBYTE4(v23));
        sub_1A56E9774();
        OUTLINED_FUNCTION_21();
        *v24 = 0xD000000000000015;
        v24[1] = 0x80000001A5A0FF60;
        OUTLINED_FUNCTION_15_35((uint64_t)v24, 0xD000000000000020);
        OUTLINED_FUNCTION_11_20(v25, 65);
      }
      OUTLINED_FUNCTION_68_4();
      *(_QWORD *)v0 = v2;
      *(_QWORD *)(v0 + 8) = v3;
      *(_DWORD *)(v0 + 16) = v27;
      *(_WORD *)(v0 + 20) = v26;
      *(_BYTE *)(v0 + 22) = v17;
    }
    OUTLINED_FUNCTION_246_0();
    OUTLINED_FUNCTION_23();
LABEL_7:
    OUTLINED_FUNCTION_3_65();
    return;
  }
  __break(1u);
}

#error "1A5757290: call analysis failed (funcsize=48)"

#error "1A5757378: call analysis failed (funcsize=43)"

void sub_1A5757384()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_1_89();
  if (!__OFADD__(v1, 1))
  {
    OUTLINED_FUNCTION_56_13();
    if (v2 != v3)
    {
      OUTLINED_FUNCTION_2_76();
      OUTLINED_FUNCTION_10_42();
      if (!v0)
      {
        OUTLINED_FUNCTION_2_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_16_32();
      OUTLINED_FUNCTION_11_30();
    }
    else
    {
      sub_1A5718F9C();
      v4 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v4, v5);
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_3_65();
    return;
  }
  __break(1u);
}

void sub_1A5757400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  int v8;
  __int16 v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _BYTE v16[84];

  OUTLINED_FUNCTION_1_89();
  if (!__OFADD__(v4, 1))
  {
    OUTLINED_FUNCTION_122_3();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_312();
      v8 = *(_DWORD *)(v7 + 16);
      v9 = *(_WORD *)(v7 + 20);
      v16[0] = *(_BYTE *)(v7 + 22);
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_113_2();
      if (!v1)
      {
        if ((OUTLINED_FUNCTION_127_3() & 0x8000000000000000) == 0)
        {
          OUTLINED_FUNCTION_100_3();
          OUTLINED_FUNCTION_23();
          OUTLINED_FUNCTION_4_4();
          goto LABEL_7;
        }
        sub_1A56E9774();
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_228_1();
        OUTLINED_FUNCTION_5_61(v12, v13);
        OUTLINED_FUNCTION_57_14(v14, v15);
      }
      OUTLINED_FUNCTION_68_4();
      *(_QWORD *)v0 = v2;
      *(_QWORD *)(v0 + 8) = v3;
      *(_DWORD *)(v0 + 16) = v8;
      *(_WORD *)(v0 + 20) = v9;
      *(_BYTE *)(v0 + 22) = v16[0];
    }
    else
    {
      sub_1A5718F9C();
      v10 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_258_1(v10, v11);
    }
    OUTLINED_FUNCTION_246_0();
    OUTLINED_FUNCTION_23();
LABEL_7:
    OUTLINED_FUNCTION_3_65();
    return;
  }
  __break(1u);
}

#error "1A57575E4: call analysis failed (funcsize=72)"

void sub_1A575762C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_61_11();
  if (!__OFADD__(v1, 1))
  {
    OUTLINED_FUNCTION_122_3();
    if (v3 != v4)
    {
      v5 = v2;
      v6 = *v2;
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_113_2();
      if (!v0)
      {
        if ((OUTLINED_FUNCTION_127_3() & 0x8000000000000000) == 0)
        {
          OUTLINED_FUNCTION_23();
          OUTLINED_FUNCTION_4_4();
          goto LABEL_7;
        }
        sub_1A56E9774();
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_228_1();
        OUTLINED_FUNCTION_5_61(v9, v10);
        OUTLINED_FUNCTION_57_14(v11, v12);
      }
      OUTLINED_FUNCTION_68_4();
      *v5 = v6;
      OUTLINED_FUNCTION_223_0();
    }
    else
    {
      sub_1A5718F9C();
      v7 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_258_1(v7, v8);
    }
    OUTLINED_FUNCTION_246_0();
    OUTLINED_FUNCTION_23();
LABEL_7:
    OUTLINED_FUNCTION_55_13();
    return;
  }
  __break(1u);
}

uint64_t sub_1A5757718(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;

  v6 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v7 = a3;
    if (v6 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v18 = v7;
    }
    else
    {
      v10 = result;
      v11 = *(_QWORD *)result;
      v12 = *(_QWORD *)(result + 8);
      v13 = *(_DWORD *)(result + 16);
      v14 = *(_WORD *)(result + 20);
      v15 = *(_BYTE *)(result + 22);
      swift_retain();
      v16 = v7;
      v7 = a5;
      v17 = a4(v10, v6, v16);
      if (!v5)
      {
        v7 = v17;
        swift_release();
        return v7;
      }
      swift_release();
      *(_QWORD *)v10 = v11;
      *(_QWORD *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(_BYTE *)(v10 + 22) = v15;
    }
    swift_willThrow();
    return v7;
  }
  __break(1u);
  return result;
}

void sub_1A5757818()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  OUTLINED_FUNCTION_61_11();
  if (!__OFADD__(v1, 1))
  {
    OUTLINED_FUNCTION_122_3();
    if (v3 != v4)
    {
      v5 = v2;
      v6 = *v2;
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_113_2();
      if (!v0)
      {
        OUTLINED_FUNCTION_251_0();
        if ((sub_1A5761038(v7, v8, v9, 0) & 0x8000000000000000) == 0)
        {
          OUTLINED_FUNCTION_23();
          OUTLINED_FUNCTION_4_4();
          goto LABEL_8;
        }
        sub_1A56E9774();
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_228_1();
        OUTLINED_FUNCTION_5_61(v12, v13);
        OUTLINED_FUNCTION_57_14(v14, v15);
      }
      OUTLINED_FUNCTION_68_4();
      *v5 = v6;
      OUTLINED_FUNCTION_223_0();
    }
    else
    {
      sub_1A5718F9C();
      v10 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_258_1(v10, v11);
    }
    OUTLINED_FUNCTION_246_0();
    OUTLINED_FUNCTION_23();
LABEL_8:
    OUTLINED_FUNCTION_55_13();
    return;
  }
  __break(1u);
}

uint64_t sub_1A5757910(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char v19;
  __int16 v20;
  int v21;

  v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v18 = a3;
    }
    else
    {
      v8 = a6;
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v20 = *(_WORD *)(result + 20);
      v21 = *(_DWORD *)(result + 16);
      v19 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751898();
      if (!v7)
      {
        sub_1A5740C1C(v14, v9, a3, a4, a5, v8, a7);
        v8 = v17;
        sub_1A5751898();
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v21;
      *(_WORD *)(v14 + 20) = v20;
      *(_BYTE *)(v14 + 22) = v19;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

#error "1A5757B18: call analysis failed (funcsize=38)"

#error "1A5757C0C: call analysis failed (funcsize=57)"

void sub_1A5757C54()
{
  sub_1A5757C68();
}

void sub_1A5757C68()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_6_55();
  if (!__OFADD__(v1, 1))
  {
    OUTLINED_FUNCTION_56_13();
    if (v2 != v3)
    {
      OUTLINED_FUNCTION_2_76();
      OUTLINED_FUNCTION_10_42();
      if (!v0)
      {
        OUTLINED_FUNCTION_2_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_16_32();
      OUTLINED_FUNCTION_11_30();
    }
    else
    {
      sub_1A5718F9C();
      v4 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v4, v5);
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_12_42();
    return;
  }
  __break(1u);
}

uint64_t sub_1A5757CE8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  __int16 v12;

  if (!__OFADD__(a2, 1))
  {
    v4 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v10 = v4;
    }
    else
    {
      v5 = result;
      v6 = *(_QWORD *)result;
      v7 = *(_QWORD *)(result + 8);
      v8 = *(_DWORD *)(result + 16);
      v11 = *(_BYTE *)(result + 22);
      v12 = *(_WORD *)(result + 20);
      swift_retain();
      v9 = sub_1A5740C80();
      if (!v3)
      {
        v4 = v9;
        swift_release();
        swift_release();
        return v4;
      }
      swift_release();
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v8;
      *(_WORD *)(v5 + 20) = v12;
      *(_BYTE *)(v5 + 22) = v11;
    }
    swift_willThrow();
    swift_release();
    return v4;
  }
  __break(1u);
  return result;
}

void sub_1A5757E30()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __int16 v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _WORD v21[42];

  OUTLINED_FUNCTION_1_89();
  if (!__OFADD__(v3, 1))
  {
    if (v3 + 1 >= v4)
    {
      sub_1A5718F9C();
      v14 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_107_3(v14, v15);
    }
    else
    {
      v5 = v2;
      v6 = *v2;
      OUTLINED_FUNCTION_143_3();
      v20 = v8;
      v21[0] = v7;
      v10 = *(_BYTE *)(v9 + 22);
      OUTLINED_FUNCTION_17_0();
      v11 = sub_1A574A0BC();
      if (!v0)
      {
        if (v12 < 2u || v11 != 2)
        {
          OUTLINED_FUNCTION_40();
          OUTLINED_FUNCTION_23();
LABEL_13:
          OUTLINED_FUNCTION_3_65();
          return;
        }
        sub_1A56E9774();
        OUTLINED_FUNCTION_21();
        *v16 = 0xD00000000000002ALL;
        v16[1] = 0x80000001A5A0FF80;
        OUTLINED_FUNCTION_8_42();
        *(_QWORD *)(v17 + 16) = v19;
        *(_QWORD *)(v17 + 24) = v18;
        OUTLINED_FUNCTION_11_20(v17, 1999);
      }
      OUTLINED_FUNCTION_16_32();
      *v5 = v6;
      v5[1] = v1;
      *((_DWORD *)v5 + 4) = v20;
      *((_WORD *)v5 + 10) = v21[0];
      *((_BYTE *)v5 + 22) = v10;
    }
    OUTLINED_FUNCTION_46_11();
    OUTLINED_FUNCTION_5_1();
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1A5757F8C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t *v10;
  char v11;
  __int16 v12;
  uint64_t v13;

  v4 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v4 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v10 = a3;
      goto LABEL_6;
    }
    v6 = result;
    v7 = *(_QWORD *)result;
    v8 = *(_QWORD *)(result + 8);
    v9 = *(_DWORD *)(result + 16);
    v11 = *(_BYTE *)(result + 22);
    v12 = *(_WORD *)(result + 20);
    swift_retain();
    sub_1A57485D8(v6, v4, a3, (unsigned int *)&v13);
    if (v3)
    {
      swift_release();
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v9;
      *(_WORD *)(v6 + 20) = v12;
      *(_BYTE *)(v6 + 22) = v11;
LABEL_6:
      swift_willThrow();
      return swift_release();
    }
    swift_release();
    swift_release();
    return v13;
  }
  return result;
}

#error "1A575812C: call analysis failed (funcsize=58)"

#error "1A5758210: call analysis failed (funcsize=43)"

uint64_t sub_1A5758268()
{
  return sub_1A575CCC0();
}

void sub_1A575827C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1A575B280(a1, a2, a3, a4, a5, a6, a7, 0x534445474E414843, 0xED00002045434E49);
  OUTLINED_FUNCTION_9();
}

void sub_1A57582B8()
{
  sub_1A57582CC();
}

void sub_1A57582CC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_1_89();
  if (!__OFADD__(v1, 1))
  {
    OUTLINED_FUNCTION_56_13();
    if (v2 != v3)
    {
      OUTLINED_FUNCTION_2_76();
      OUTLINED_FUNCTION_10_42();
      if (!v0)
      {
        OUTLINED_FUNCTION_2_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_16_32();
      OUTLINED_FUNCTION_11_30();
    }
    else
    {
      sub_1A5718F9C();
      v4 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v4, v5);
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_3_65();
    return;
  }
  __break(1u);
}

#error "1A5758354: call analysis failed (funcsize=5)"

#error "1A57583D8: call analysis failed (funcsize=76)"

#error "1A57584E8: call analysis failed (funcsize=38)"

#error "1A5758584: call analysis failed (funcsize=38)"

#error "1A5758620: call analysis failed (funcsize=38)"

#error "1A5758700: call analysis failed (funcsize=72)"

uint64_t sub_1A575878C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v8;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  __int16 v20;
  int v21;

  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v18 = a3;
    }
    else
    {
      v14 = result;
      v16 = *(_QWORD *)result;
      v17 = *(_QWORD *)(result + 8);
      v20 = *(_WORD *)(result + 20);
      v21 = *(_DWORD *)(result + 16);
      v19 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A572F340(a4, a5, a6, a7, a8);
      if (!v8)
      {
        swift_release();
        return swift_release();
      }
      swift_release();
      *(_QWORD *)v14 = v16;
      *(_QWORD *)(v14 + 8) = v17;
      *(_DWORD *)(v14 + 16) = v21;
      *(_WORD *)(v14 + 20) = v20;
      *(_BYTE *)(v14 + 22) = v19;
    }
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

#error "1A5758944: call analysis failed (funcsize=48)"

#error "1A5758A0C: call analysis failed (funcsize=86)"

uint64_t sub_1A5758AF8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  __int16 v19;
  int v20;

  v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v10 = a3;
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v17 = v10;
    }
    else
    {
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v19 = *(_WORD *)(result + 20);
      v20 = *(_DWORD *)(result + 16);
      v18 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751974(v14, v8, v10);
      if (!v7)
      {
        swift_retain();
        v10 = sub_1A5758C6C(v14, v8, v10, a4, a5, a6, a7);
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v19;
      *(_BYTE *)(v14 + 22) = v18;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5758C6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  __int16 v21;
  int v22;

  v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v19 = a3;
    }
    else
    {
      v8 = a7;
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v21 = *(_WORD *)(result + 20);
      v22 = *(_DWORD *)(result + 16);
      v20 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751898();
      if (!v7)
      {
        swift_retain();
        v17 = sub_1A575F4B0(v14, v9, a3, a4, a5, a6);
        if (v18)
          v8 = v17;
        else
          v8 = sub_1A574F7B4(MEMORY[0x1E0DEE9D8]);
        sub_1A5751898();
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v22;
      *(_WORD *)(v14 + 20) = v21;
      *(_BYTE *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

void sub_1A5758E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  int v17;
  __int16 v18;
  int v19;

  OUTLINED_FUNCTION_27_22();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_45_14();
    if (v3 == v4)
    {
      sub_1A5718F9C();
      v13 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_199_0(v13, v14);
LABEL_6:
      OUTLINED_FUNCTION_46_11();
      OUTLINED_FUNCTION_23();
      return;
    }
    v18 = *(_WORD *)(v2 + 20);
    v19 = *(_DWORD *)(v2 + 16);
    v17 = *(unsigned __int8 *)(v2 + 22);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_49_9();
    if (v0)
    {
      v5 = OUTLINED_FUNCTION_16_32();
      OUTLINED_FUNCTION_189_2(v5, v6, v7, v8, v9, v10, v11, v12, v15, v16, v17, SHIWORD(v17), v18, v19);
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_48();
  }
}

uint64_t sub_1A5758F24(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  __int16 v21;

  v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v10 = a3;
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v19 = v10;
    }
    else
    {
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v17 = *(_DWORD *)(result + 16);
      v20 = *(_BYTE *)(result + 22);
      v21 = *(_WORD *)(result + 20);
      swift_retain();
      v18 = sub_1A572E168(v14, v8, v10, a4, a5, a6, a7);
      if (!v7)
      {
        v10 = v18;
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v17;
      *(_WORD *)(v14 + 20) = v21;
      *(_BYTE *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_1A575905C()
{
  sub_1A5759070();
}

void sub_1A5759070()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_6_55();
  if (!__OFADD__(v1, 1))
  {
    OUTLINED_FUNCTION_56_13();
    if (v2 != v3)
    {
      OUTLINED_FUNCTION_2_76();
      OUTLINED_FUNCTION_10_42();
      if (!v0)
      {
        OUTLINED_FUNCTION_2_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_16_32();
      OUTLINED_FUNCTION_11_30();
    }
    else
    {
      sub_1A5718F9C();
      v4 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v4, v5);
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_12_42();
    return;
  }
  __break(1u);
}

void sub_1A5759108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  __int16 v23;
  int v24;

  OUTLINED_FUNCTION_1_89();
  v5 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    OUTLINED_FUNCTION_45_14();
    if (v7 != v8)
    {
      v9 = v6;
      OUTLINED_FUNCTION_118_4();
      v23 = v10;
      v24 = v11;
      v22 = *(_BYTE *)(v12 + 22);
      OUTLINED_FUNCTION_30();
      sub_1A5751974(v9, v5, v1);
      if (!v0)
      {
        v13 = OUTLINED_FUNCTION_74_3();
        sub_1A5741024(v13, v14, v15, v16, v17, v18, v19);
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_48();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_16_32();
      *(_QWORD *)v9 = v2;
      *(_QWORD *)(v9 + 8) = v3;
      *(_DWORD *)(v9 + 16) = v24;
      *(_WORD *)(v9 + 20) = v23;
      *(_BYTE *)(v9 + 22) = v22;
    }
    else
    {
      sub_1A5718F9C();
      v20 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_199_0(v20, v21);
    }
    OUTLINED_FUNCTION_46_11();
    OUTLINED_FUNCTION_23();
LABEL_7:
    OUTLINED_FUNCTION_282();
    OUTLINED_FUNCTION_3_65();
    return;
  }
  __break(1u);
}

uint64_t sub_1A57591F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A575D540(a1, a2, a3, a4, a5, a6, a7, sub_1A5748A28);
}

#error "1A5759278: call analysis failed (funcsize=46)"

uint64_t sub_1A57592CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  __int16 v19;
  int v20;

  v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v10 = a3;
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v17 = v10;
    }
    else
    {
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v19 = *(_WORD *)(result + 20);
      v20 = *(_DWORD *)(result + 16);
      v18 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751974(v14, v8, v10);
      if (!v7)
      {
        swift_retain();
        v10 = sub_1A5759210(v14, v8, v10, a4, a5, a6, a7);
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v19;
      *(_BYTE *)(v14 + 22) = v18;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5759438(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  __int16 v21;

  v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v10 = a3;
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v19 = v10;
    }
    else
    {
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v17 = *(_DWORD *)(result + 16);
      v20 = *(_BYTE *)(result + 22);
      v21 = *(_WORD *)(result + 20);
      swift_retain();
      v18 = sub_1A57410A4(v14, v8, v10, a4, a5, a6, a7);
      if (!v7)
      {
        v10 = v18;
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v17;
      *(_WORD *)(v14 + 20) = v21;
      *(_BYTE *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_1A5759580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;
  int v36;

  OUTLINED_FUNCTION_102_2();
  v4 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    OUTLINED_FUNCTION_345();
    if (v4 >= v7)
    {
      sub_1A5718F9C();
      v30 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_256_1(v30, v31);
    }
    else
    {
      v8 = (uint64_t)v5;
      v34 = v6;
      v9 = *v5;
      OUTLINED_FUNCTION_143_3();
      v35 = v10;
      v36 = v11;
      v13 = *(_BYTE *)(v12 + 22);
      swift_retain();
      sub_1A573FF70(v8, v4, v1);
      if (!v0)
      {
        v32 = v14;
        v33 = v15;
        v16 = OUTLINED_FUNCTION_335();
        sub_1A5751974(v16, v17, v18);
        OUTLINED_FUNCTION_17_0();
        sub_1A5759B5C();
        v20 = v19;
        v22 = v21;
        v24 = v23;
        v26 = v25;
        v27 = (uint64_t *)OUTLINED_FUNCTION_335();
        sub_1A575DBEC(v27, v28, v29);
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_25_3();
        *(_QWORD *)v34 = v32;
        *(_QWORD *)(v34 + 8) = v33;
        *(_QWORD *)(v34 + 16) = v20;
        *(_QWORD *)(v34 + 24) = v22;
        *(_QWORD *)(v34 + 32) = v24;
        *(_BYTE *)(v34 + 40) = v26;
LABEL_8:
        OUTLINED_FUNCTION_92_4();
        return;
      }
      OUTLINED_FUNCTION_68_4();
      *(_QWORD *)v8 = v9;
      *(_QWORD *)(v8 + 8) = v2;
      *(_DWORD *)(v8 + 16) = v36;
      *(_WORD *)(v8 + 20) = v35;
      *(_BYTE *)(v8 + 22) = v13;
    }
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_23();
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1A5759724(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  __int16 v19;
  int v20;

  v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v17 = a3;
    }
    else
    {
      v8 = a7;
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v19 = *(_WORD *)(result + 20);
      v20 = *(_DWORD *)(result + 16);
      v18 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751898();
      if (!v7)
      {
        v8 = sub_1A5734364(v14, v9, a3, a4, a5, a6, v8);
        sub_1A5751898();
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v19;
      *(_BYTE *)(v14 + 22) = v18;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

#error "1A5759970: call analysis failed (funcsize=73)"

#error "1A5759AD0: call analysis failed (funcsize=79)"

void sub_1A5759B40()
{
  sub_1A5759B5C();
}

void sub_1A5759B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _BYTE v17[5];
  __int16 v18;
  __int16 v19;
  int v20;

  OUTLINED_FUNCTION_27_22();
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_45_14();
    if (v4 == v5)
    {
      sub_1A5718F9C();
      v15 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_199_0(v15, v16);
LABEL_6:
      OUTLINED_FUNCTION_46_11();
      OUTLINED_FUNCTION_23();
      return;
    }
    v6 = v3;
    OUTLINED_FUNCTION_5_62();
    OUTLINED_FUNCTION_49_9();
    if (v0)
    {
      v7 = OUTLINED_FUNCTION_16_32();
      *v6 = v1;
      OUTLINED_FUNCTION_16_33(v7, v8, v9, v10, v11, v12, v13, v14, *(int *)v17, v17[4], v18, v19, v20);
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_48();
  }
}

#error "1A5759CC0: call analysis failed (funcsize=43)"

void sub_1A5759CCC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  __int16 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  OUTLINED_FUNCTION_61_11();
  if (!__OFADD__(v2, 1))
  {
    if (v2 + 1 >= v3)
    {
      sub_1A5718F9C();
      v17 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_199_0(v17, v18);
    }
    else
    {
      v4 = v1;
      v5 = *v1;
      v6 = v1[1];
      v7 = *((_DWORD *)v1 + 4);
      v8 = *((_WORD *)v1 + 10);
      v9 = *((_BYTE *)v1 + 22);
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_348();
      sub_1A5751898();
      if (!v0)
      {
        MEMORY[0x1E0C80A78](v10);
        OUTLINED_FUNCTION_330();
        sub_1A5760D2C(v11, v12, v13, v14, v15, v16);
        OUTLINED_FUNCTION_23();
        swift_release();
LABEL_8:
        OUTLINED_FUNCTION_282();
        OUTLINED_FUNCTION_55_13();
        return;
      }
      OUTLINED_FUNCTION_16_32();
      *v4 = v5;
      v4[1] = v6;
      *((_DWORD *)v4 + 4) = v7;
      *((_WORD *)v4 + 10) = v8;
      *((_BYTE *)v4 + 22) = v9;
    }
    OUTLINED_FUNCTION_46_11();
    OUTLINED_FUNCTION_23();
    goto LABEL_8;
  }
  __break(1u);
}

#error "1A5759EBC: call analysis failed (funcsize=48)"

uint64_t sub_1A5759F08()
{
  return sub_1A5759F1C();
}

#error "1A5759F84: call analysis failed (funcsize=44)"

void sub_1A5759FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  __int16 v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *__dst;
  char v34;
  __int16 v35;
  int v36;
  _BYTE v37[192];
  _QWORD __src[32];
  _BYTE v39[200];

  OUTLINED_FUNCTION_61_11();
  v5 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    OUTLINED_FUNCTION_345();
    if (v5 >= v6)
    {
      sub_1A5718F9C();
      v19 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_311(v19, v20);
    }
    else
    {
      OUTLINED_FUNCTION_149_2();
      __dst = v7;
      OUTLINED_FUNCTION_118_4();
      v35 = v8;
      v36 = v9;
      v34 = *(_BYTE *)(v10 + 22);
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_306();
      sub_1A5751898();
      if (!v0)
      {
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_42_12();
        sub_1A575AE94(v11, v12, v13, v14, v15, v16, v17, v18);
        v28 = __src[0];
        v29 = __src[1];
        v30 = __src[2];
        v31 = __src[3];
        v32 = __src[5];
        v25 = __src[6];
        v26 = __src[4];
        v27 = __src[7];
        OUTLINED_FUNCTION_306();
        OUTLINED_FUNCTION_185_2();
        OUTLINED_FUNCTION_132_3();
        OUTLINED_FUNCTION_42_12();
        sub_1A5760000(v21, v22, v23, v24);
        OUTLINED_FUNCTION_48();
        OUTLINED_FUNCTION_131_4();
        sub_1A55032A0((uint64_t)v39, (uint64_t)v37, &qword_1EE7A90D0);
        __src[0] = v28;
        __src[1] = v29;
        __src[2] = v30;
        __src[3] = v31;
        __src[4] = v26;
        __src[5] = v32;
        __src[6] = v25;
        LOBYTE(__src[7]) = v27;
        sub_1A55032A0((uint64_t)v37, (uint64_t)&__src[8], &qword_1EE7A90D0);
        memcpy(__dst, __src, 0x100uLL);
LABEL_8:
        OUTLINED_FUNCTION_55_13();
        return;
      }
      OUTLINED_FUNCTION_16_32();
      *(_QWORD *)v1 = v2;
      *(_QWORD *)(v1 + 8) = v3;
      *(_DWORD *)(v1 + 16) = v36;
      *(_WORD *)(v1 + 20) = v35;
      *(_BYTE *)(v1 + 22) = v34;
    }
    OUTLINED_FUNCTION_46_11();
    OUTLINED_FUNCTION_23();
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1A575A1C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v25[6];
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v24 = a3;
    }
    else
    {
      v10 = result;
      v30 = a4;
      v14 = *(_QWORD *)result;
      v15 = *(_QWORD *)(result + 8);
      v16 = *(_DWORD *)(result + 16);
      v28 = *(unsigned __int16 *)(result + 20);
      v29 = v16;
      v27 = *(unsigned __int8 *)(result + 22);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE78);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1A59ABD10;
      v31 = v14;
      v18 = a5;
      v19 = a7;
      v20 = a6;
      v21 = v30;
      swift_retain();
      sub_1A574122C();
      if (!v7)
      {
        v26 = (uint64_t)&v26;
        *(_QWORD *)(v17 + 32) = v22;
        *(_QWORD *)(v17 + 40) = v23;
        v32 = v17;
        MEMORY[0x1E0C80A78](v22);
        v25[2] = v21;
        v25[3] = v18;
        v25[4] = v20;
        v25[5] = v19;
        sub_1A5752544(v10, v8, a3, sub_1A576CAEC, v25, &v32, sub_1A57675EC);
        swift_release();
        swift_release();
        return v32;
      }
      *(_QWORD *)(v17 + 16) = 0;
      swift_release();
      swift_release();
      *(_QWORD *)v10 = v31;
      *(_QWORD *)(v10 + 8) = v15;
      *(_DWORD *)(v10 + 16) = v29;
      *(_WORD *)(v10 + 20) = v28;
      *(_BYTE *)(v10 + 22) = v27;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A575A3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A575D540(a1, a2, a3, a4, a5, a6, a7, sub_1A5736770);
}

#error "1A575A488: call analysis failed (funcsize=87)"

uint64_t sub_1A575A550@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  __int16 v12;
  int v13;
  __int128 v14;
  __int128 v15;
  char v16;

  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v10 = a3;
      goto LABEL_6;
    }
    v6 = result;
    v8 = *(_QWORD *)result;
    v9 = *(_QWORD *)(result + 8);
    v12 = *(_WORD *)(result + 20);
    v13 = *(_DWORD *)(result + 16);
    v11 = *(_BYTE *)(result + 22);
    swift_retain();
    sub_1A5739814();
    if (v4)
    {
      swift_release();
      *(_QWORD *)v6 = v8;
      *(_QWORD *)(v6 + 8) = v9;
      *(_DWORD *)(v6 + 16) = v13;
      *(_WORD *)(v6 + 20) = v12;
      *(_BYTE *)(v6 + 22) = v11;
LABEL_6:
      swift_willThrow();
      return swift_release();
    }
    swift_release();
    result = swift_release();
    *(_OWORD *)a4 = v14;
    *(_OWORD *)(a4 + 16) = v15;
    *(_BYTE *)(a4 + 32) = v16;
  }
  return result;
}

void sub_1A575A6A4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_1_89();
  if (!__OFADD__(v1, 1))
  {
    OUTLINED_FUNCTION_56_13();
    if (v2 != v3)
    {
      OUTLINED_FUNCTION_2_76();
      OUTLINED_FUNCTION_10_42();
      if (!v0)
      {
        OUTLINED_FUNCTION_2_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_16_32();
      OUTLINED_FUNCTION_11_30();
    }
    else
    {
      sub_1A5718F9C();
      v4 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v4, v5);
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_3_65();
    return;
  }
  __break(1u);
}

void sub_1A575A72C()
{
  sub_1A575A740();
}

void sub_1A575A740()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_1_89();
  if (!__OFADD__(v1, 1))
  {
    OUTLINED_FUNCTION_56_13();
    if (v2 != v3)
    {
      OUTLINED_FUNCTION_2_76();
      OUTLINED_FUNCTION_10_42();
      if (!v0)
      {
        OUTLINED_FUNCTION_2_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_16_32();
      OUTLINED_FUNCTION_11_30();
    }
    else
    {
      sub_1A5718F9C();
      v4 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v4, v5);
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_3_65();
    return;
  }
  __break(1u);
}

#error "1A575A834: call analysis failed (funcsize=44)"

void sub_1A575A880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  __int16 v22;
  int v23;

  OUTLINED_FUNCTION_27_22();
  v4 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    OUTLINED_FUNCTION_122_3();
    if (v6 != v7)
    {
      v8 = v5;
      OUTLINED_FUNCTION_337();
      v22 = v9;
      v23 = v10;
      v21 = *(_BYTE *)(v11 + 22);
      OUTLINED_FUNCTION_1_2();
      OUTLINED_FUNCTION_179_2(v8, v4);
      if (!v0)
      {
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_42_12();
        sub_1A5757910(v12, v13, v14, v15, v16, v17, v18);
        OUTLINED_FUNCTION_128_3(v8, v4);
        sub_1A573F6E4((uint64_t)sub_1A5760F90, 0, (uint64_t)sub_1A5760FAC, 0, (uint64_t)sub_1A5760FC8, 0, v8);
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_2_4();
LABEL_8:
        OUTLINED_FUNCTION_37_21();
        return;
      }
      OUTLINED_FUNCTION_16_32();
      *(_QWORD *)v8 = v1;
      *(_QWORD *)(v8 + 8) = v2;
      *(_DWORD *)(v8 + 16) = v23;
      *(_WORD *)(v8 + 20) = v22;
      *(_BYTE *)(v8 + 22) = v21;
    }
    else
    {
      sub_1A5718F9C();
      v19 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_107_3(v19, v20);
    }
    OUTLINED_FUNCTION_46_11();
    OUTLINED_FUNCTION_23();
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1A575A9F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  __int16 v19;
  int v20;

  v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v10 = a3;
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v17 = v10;
    }
    else
    {
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v19 = *(_WORD *)(result + 20);
      v20 = *(_DWORD *)(result + 16);
      v18 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751974(v14, v8, v10);
      if (!v7)
      {
        swift_retain();
        v10 = sub_1A575AB74(v14, v8, v10, a4, a5, a6, a7);
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v19;
      *(_BYTE *)(v14 + 22) = v18;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A575AB74(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  __int16 v23;
  int v24;

  v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v18 = a3;
    }
    else
    {
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v23 = *(_WORD *)(result + 20);
      v24 = *(_DWORD *)(result + 16);
      v22 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751898();
      if (!v7)
      {
        v17 = (_QWORD *)swift_allocObject();
        v17[2] = a4;
        v17[3] = a5;
        v17[4] = a6;
        v17[5] = a7;
        swift_retain();
        sub_1A573BB70(v14, v8, a3, (uint64_t)sub_1A576DD28, (uint64_t)v17);
        v21 = v19;
        swift_release();
        sub_1A5751974(v14, v8, a3);
        v20 = (_QWORD *)swift_allocObject();
        v20[2] = a4;
        v20[3] = a5;
        v20[4] = a6;
        v20[5] = a7;
        swift_retain();
        sub_1A573BB70(v14, v8, a3, (uint64_t)sub_1A576DD28, (uint64_t)v20);
        swift_release();
        sub_1A5751898();
        swift_release();
        swift_release();
        return v21;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v24;
      *(_WORD *)(v14 + 20) = v23;
      *(_BYTE *)(v14 + 22) = v22;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

void sub_1A575AE18()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_1_89();
  if (!__OFADD__(v1, 1))
  {
    OUTLINED_FUNCTION_56_13();
    if (v2 != v3)
    {
      OUTLINED_FUNCTION_2_76();
      OUTLINED_FUNCTION_10_42();
      if (!v0)
      {
        OUTLINED_FUNCTION_2_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_16_32();
      OUTLINED_FUNCTION_11_30();
    }
    else
    {
      sub_1A5718F9C();
      v4 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v4, v5);
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_3_65();
    return;
  }
  __break(1u);
}

uint64_t sub_1A575AE94@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  __int16 v21;
  int v22;

  v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v19 = a3;
    }
    else
    {
      v15 = result;
      v17 = *(_QWORD *)result;
      v18 = *(_QWORD *)(result + 8);
      v21 = *(_WORD *)(result + 20);
      v22 = *(_DWORD *)(result + 16);
      v20 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5744A28(v15, v9, a3, a4, a5, a6, a7, a8);
      if (!v8)
      {
        swift_release();
        return swift_release();
      }
      swift_release();
      *(_QWORD *)v15 = v17;
      *(_QWORD *)(v15 + 8) = v18;
      *(_DWORD *)(v15 + 16) = v22;
      *(_WORD *)(v15 + 20) = v21;
      *(_BYTE *)(v15 + 22) = v20;
    }
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

#error "1A575B024: call analysis failed (funcsize=38)"

uint64_t sub_1A575B06C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  __int16 v19;
  int v20;

  v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v17 = a3;
    }
    else
    {
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v19 = *(_WORD *)(result + 20);
      v20 = *(_DWORD *)(result + 16);
      v18 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5745E8C(v14, v8, a3, a4, a5, a6, a7);
      if (!v7)
      {
        swift_release();
        return swift_release();
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v19;
      *(_BYTE *)(v14 + 22) = v18;
    }
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

#error "1A575B1FC: call analysis failed (funcsize=38)"

void sub_1A575B244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1A575B280(a1, a2, a3, a4, a5, a6, a7, 0x45474E4148434E55, 0xEF2045434E495344);
  OUTLINED_FUNCTION_9();
}

#error "1A575B2EC: call analysis failed (funcsize=45)"

uint64_t sub_1A575B338()
{
  return sub_1A575D768();
}

uint64_t sub_1A575B34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A575B384(a1, a2, a3, a4, a5, a6, a7, sub_1A5742BB4);
}

uint64_t sub_1A575B368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A575B384(a1, a2, a3, a4, a5, a6, a7, sub_1A57431E4);
}

#error "1A575B3D8: call analysis failed (funcsize=38)"

uint64_t sub_1A575B420(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  __int16 v21;

  v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v10 = a3;
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v19 = v10;
    }
    else
    {
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v17 = *(_DWORD *)(result + 16);
      v20 = *(_BYTE *)(result + 22);
      v21 = *(_WORD *)(result + 20);
      swift_retain();
      swift_retain();
      v18 = sub_1A575B384(v14, v8, v10, a4, a5, a6, a7, sub_1A57431E4);
      if (!v7)
      {
        v10 = v18;
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v17;
      *(_WORD *)(v14 + 20) = v21;
      *(_BYTE *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A575B570(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  __int16 v9;
  char v10;
  _QWORD *v11;

  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v11 = a3;
    }
    else
    {
      v5 = result;
      v6 = *(_QWORD *)result;
      v7 = *(_QWORD *)(result + 8);
      v8 = *(_DWORD *)(result + 16);
      v9 = *(_WORD *)(result + 20);
      v10 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751898();
      if (!v3)
      {
        swift_release();
        return 1;
      }
      swift_release();
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v8;
      *(_WORD *)(v5 + 20) = v9;
      *(_BYTE *)(v5 + 22) = v10;
    }
    swift_willThrow();
    return 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A575B66C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int16 v11;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;
  _OWORD v19[3];
  uint64_t v20;
  char v21;

  v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v13 = a3;
    }
    else
    {
      v7 = result;
      v8 = *(_QWORD *)result;
      v9 = *(_QWORD *)(result + 8);
      v10 = *(_DWORD *)(result + 16);
      v11 = *(_WORD *)(result + 20);
      v12 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751898();
      if (!v4)
      {
        swift_retain();
        sub_1A575B7F4(v7, v5, a3, (uint64_t)v19);
        swift_release();
        result = swift_release();
        v14 = v20;
        v15 = v21;
        v16 = v19[1];
        v17 = v19[2];
        *(_OWORD *)a4 = v19[0];
        *(_OWORD *)(a4 + 16) = v16;
        *(_OWORD *)(a4 + 32) = v17;
        *(_QWORD *)(a4 + 48) = v14;
        *(_BYTE *)(a4 + 56) = v15;
        return result;
      }
      swift_release();
      *(_QWORD *)v7 = v8;
      *(_QWORD *)(v7 + 8) = v9;
      *(_DWORD *)(v7 + 16) = v10;
      *(_WORD *)(v7 + 20) = v11;
      *(_BYTE *)(v7 + 22) = v12;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A575B7F4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  __int16 v12;
  int v13;

  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v10 = a3;
    }
    else
    {
      v6 = result;
      v8 = *(_QWORD *)result;
      v9 = *(_QWORD *)(result + 8);
      v12 = *(_WORD *)(result + 20);
      v13 = *(_DWORD *)(result + 16);
      v11 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A574605C(a4);
      if (!v4)
      {
        swift_release();
        return swift_release();
      }
      swift_release();
      *(_QWORD *)v6 = v8;
      *(_QWORD *)(v6 + 8) = v9;
      *(_DWORD *)(v6 + 16) = v13;
      *(_WORD *)(v6 + 20) = v12;
      *(_BYTE *)(v6 + 22) = v11;
    }
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

#error "1A575B9D8: call analysis failed (funcsize=70)"

uint64_t sub_1A575BA4C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t *v18;
  uint64_t *v19;
  char v20;
  __int16 v21;

  v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v10 = a3;
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v19 = v10;
    }
    else
    {
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v17 = *(_DWORD *)(result + 16);
      v20 = *(_BYTE *)(result + 22);
      v21 = *(_WORD *)(result + 20);
      swift_retain();
      swift_retain();
      v18 = sub_1A575BB94((uint64_t *)v14, v8, v10, a4, a5, a6, a7);
      if (!v7)
      {
        v10 = (uint64_t)v18;
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v17;
      *(_WORD *)(v14 + 20) = v21;
      *(_BYTE *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t *sub_1A575BB94(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD v21[10];
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (!__OFADD__(a2, 1))
  {
    v8 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v19 = v8;
    }
    else
    {
      v10 = result;
      v26 = a6;
      v27 = a7;
      v28 = a5;
      v11 = *result;
      v12 = result[1];
      v13 = *((_DWORD *)result + 4);
      v14 = *((unsigned __int16 *)result + 10);
      v15 = *((unsigned __int8 *)result + 22);
      swift_retain();
      sub_1A5751898();
      if (!v7)
      {
        v22 = v15;
        v23 = v14;
        v25 = v11;
        v24 = v13;
        MEMORY[0x1E0C80A78](v16);
        v21[6] = a4;
        v21[7] = v28;
        v21[8] = v26;
        v21[9] = v27;
        MEMORY[0x1E0C80A78](v17);
        v21[2] = sub_1A576CAAC;
        v21[3] = v18;
        sub_1A576F8EC((uint64_t)sub_1A5761274, 0, (uint64_t)sub_1A576CAC4, (uint64_t)v21);
        v8 = v20;
        swift_release();
        swift_release();
        return (uint64_t *)v8;
      }
      swift_release();
      *v10 = v11;
      v10[1] = v12;
      *((_DWORD *)v10 + 4) = v13;
      *((_WORD *)v10 + 10) = v14;
      *((_BYTE *)v10 + 22) = v15;
    }
    swift_willThrow();
    swift_release();
    return (uint64_t *)v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A575BDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A575BEC0(a1, a2, a3, a4, a5, a6, a7, 0x4C4149545241503BLL, 0xE90000000000003DLL, sub_1A575BF94);
}

#error "1A575BE3C: call analysis failed (funcsize=42)"

uint64_t sub_1A575BE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A575BEC0(a1, a2, a3, a4, a5, a6, a7, 47, 0xE100000000000000, sub_1A575BDA4);
}

#error "1A575BF40: call analysis failed (funcsize=52)"

unint64_t sub_1A575BF94(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  unint64_t v17;
  uint64_t *v18;
  _QWORD *v19;
  _QWORD v20[7];
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v18 = a3;
    }
    else
    {
      v11 = result;
      v25 = a4;
      v26 = a6;
      v27 = a7;
      v28 = a5;
      v12 = *(_QWORD *)result;
      v13 = *(_QWORD *)(result + 8);
      v14 = *(_DWORD *)(result + 16);
      v15 = *(unsigned __int16 *)(result + 20);
      v16 = *(unsigned __int8 *)(result + 22);
      swift_retain();
      v17 = sub_1A5761038(v11, v9, a3, 1);
      if (!v7)
      {
        v8 = v17;
        v21 = v16;
        v22 = v15;
        v23 = v14;
        v24 = v12;
        if ((v17 & 0x8000000000000000) == 0)
        {
          MEMORY[0x1E0C80A78](v17);
          v20[2] = v25;
          v20[3] = v28;
          v20[4] = v26;
          v20[5] = v27;
          sub_1A575F114(v11, v9, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A576CA94, (uint64_t)v20);
          swift_release();
          swift_release();
          return v8;
        }
        sub_1A56E9774();
        swift_allocError();
        *v19 = 0xD000000000000011;
        v19[1] = 0x80000001A5A0F840;
        v19[2] = 0xD000000000000020;
        v19[3] = 0x80000001A5A0F5E0;
        v19[4] = 167;
        swift_willThrow();
        v12 = v24;
        LOWORD(v15) = v22;
        v14 = v23;
        LOBYTE(v16) = v21;
      }
      swift_release();
      *(_QWORD *)v11 = v12;
      *(_QWORD *)(v11 + 8) = v13;
      *(_DWORD *)(v11 + 16) = v14;
      *(_WORD *)(v11 + 20) = v15;
      *(_BYTE *)(v11 + 22) = v16;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A575C1AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  __int16 v21;

  v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v10 = a3;
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v19 = v10;
    }
    else
    {
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v17 = *(_DWORD *)(result + 16);
      v20 = *(_BYTE *)(result + 22);
      v21 = *(_WORD *)(result + 20);
      swift_retain();
      swift_retain();
      v18 = sub_1A575C318(v14, v8, v10, a4, a5, a6, a7, 0x4F49544345533B2FLL, 0xEA00000000003D4ELL, sub_1A57430BC);
      if (!v7)
      {
        v10 = v18;
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v17;
      *(_WORD *)(v14 + 20) = v21;
      *(_BYTE *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

#error "1A575C39C: call analysis failed (funcsize=51)"

uint64_t sub_1A575C3E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  __int16 v21;
  int v22;

  v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v19 = a3;
    }
    else
    {
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v21 = *(_WORD *)(result + 20);
      v22 = *(_DWORD *)(result + 16);
      v17 = *(_BYTE *)(result + 22);
      swift_retain();
      swift_retain();
      v18 = sub_1A575C578(v14, v8, a3, a4, a5, a6, a7);
      if (!v7)
      {
        v20 = v18;
        sub_1A5751898();
        swift_release();
        swift_release();
        return v20;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v22;
      *(_WORD *)(v14 + 20) = v21;
      *(_BYTE *)(v14 + 22) = v17;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A575C578(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v14;
  char v15;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;

  v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v24 = a3;
LABEL_10:
      swift_willThrow();
      return swift_release();
    }
    v10 = result;
    v11 = *(_QWORD *)result;
    v12 = *(_QWORD *)(result + 8);
    v30 = *(_DWORD *)(result + 16);
    v14 = *(_WORD *)(result + 20);
    v28 = v7;
    v15 = *(_BYTE *)(result + 22);
    swift_retain();
    swift_retain();
    v27 = a7;
    v19 = v30;
    sub_1A576047C();
    if (v28)
    {
LABEL_9:
      swift_release();
      *(_QWORD *)v10 = v11;
      *(_QWORD *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v19;
      *(_WORD *)(v10 + 20) = v14;
      *(_BYTE *)(v10 + 22) = v15;
      goto LABEL_10;
    }
    v26 = v20;
    v29 = v21;
    swift_retain_n();
    sub_1A5760548(v10, v8, a3, a4, a5, a6, v27);
    v23 = v22;
    swift_release();
    if (!v29 && v23 == 1)
    {
      sub_1A56E9774();
      swift_allocError();
      *v25 = 0xD000000000000021;
      v25[1] = 0x80000001A5A0FEF0;
      v25[2] = 0xD000000000000020;
      v25[3] = 0x80000001A5A0F5E0;
      v25[4] = 1218;
      swift_willThrow();
      v19 = v30;
      goto LABEL_9;
    }
    swift_release();
    swift_release();
    return v26;
  }
  return result;
}

void sub_1A575C7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __int16 v29;
  int v30;

  OUTLINED_FUNCTION_6_55();
  if (!__OFADD__(v2, 1))
  {
    OUTLINED_FUNCTION_75_5();
    if (v5 != v6)
    {
      v7 = v4;
      v8 = v3;
      v9 = *v3;
      OUTLINED_FUNCTION_143_3();
      v29 = v10;
      v30 = v11;
      v13 = *(_BYTE *)(v12 + 22);
      swift_retain();
      OUTLINED_FUNCTION_17_0();
      v14 = OUTLINED_FUNCTION_260_1();
      sub_1A575B384(v14, v15, v16, v17, v18, v19, v7, v20);
      if (!v0)
      {
        OUTLINED_FUNCTION_350();
        v21 = OUTLINED_FUNCTION_260_1();
        sub_1A575FD64(v21, v22, v23, v24, v25, v26, 0);
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_5_1();
LABEL_8:
        OUTLINED_FUNCTION_12_42();
        return;
      }
      OUTLINED_FUNCTION_16_32();
      *v8 = v9;
      v8[1] = v1;
      *((_DWORD *)v8 + 4) = v30;
      *((_WORD *)v8 + 10) = v29;
      *((_BYTE *)v8 + 22) = v13;
    }
    else
    {
      sub_1A5718F9C();
      v27 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_107_3(v27, v28);
    }
    OUTLINED_FUNCTION_46_11();
    OUTLINED_FUNCTION_23();
    goto LABEL_8;
  }
  __break(1u);
}

#error "1A575C954: call analysis failed (funcsize=50)"

uint64_t sub_1A575C9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return OUTLINED_FUNCTION_310(a1, a2, a3, a4, a5, a6, a7);
}

#error "1A575CA3C: call analysis failed (funcsize=46)"

#error "1A575CB20: call analysis failed (funcsize=66)"

#error "1A575CC5C: call analysis failed (funcsize=74)"

#error "1A575CD30: call analysis failed (funcsize=32)"

void sub_1A575CD44()
{
  sub_1A575CD58();
}

void sub_1A575CD58()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_1_89();
  if (!__OFADD__(v1, 1))
  {
    OUTLINED_FUNCTION_56_13();
    if (v2 != v3)
    {
      OUTLINED_FUNCTION_2_76();
      OUTLINED_FUNCTION_10_42();
      if (!v0)
      {
        OUTLINED_FUNCTION_2_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_16_32();
      OUTLINED_FUNCTION_11_30();
    }
    else
    {
      sub_1A5718F9C();
      v4 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v4, v5);
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_3_65();
    return;
  }
  __break(1u);
}

#error "1A575CE28: call analysis failed (funcsize=38)"

#error "1A575CEB0: call analysis failed (funcsize=38)"

void sub_1A575CF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  _QWORD *v13;
  __int16 v14;
  int v15;

  OUTLINED_FUNCTION_102_2();
  v5 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    v6 = v2;
    if (v5 >= v2)
    {
      sub_1A5718F9C();
      v12 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_107_3(v12, v13);
    }
    else
    {
      v7 = v1;
      v8 = *(_QWORD *)v1;
      v9 = *(_QWORD *)(v1 + 8);
      v14 = *(_WORD *)(v1 + 20);
      v15 = *(_DWORD *)(v1 + 16);
      v10 = *(_BYTE *)(v1 + 22);
      v11 = v3;
      swift_retain();
      sub_1A5742B2C(v7, v5, v6);
      if (!v0)
      {
        OUTLINED_FUNCTION_348();
        OUTLINED_FUNCTION_183_1();
        sub_1A574052C(v7, v5, v6, v11);
        OUTLINED_FUNCTION_340();
        swift_release();
        swift_release();
LABEL_8:
        OUTLINED_FUNCTION_92_4();
        return;
      }
      OUTLINED_FUNCTION_16_32();
      *(_QWORD *)v7 = v8;
      *(_QWORD *)(v7 + 8) = v9;
      *(_DWORD *)(v7 + 16) = v15;
      *(_WORD *)(v7 + 20) = v14;
      *(_BYTE *)(v7 + 22) = v10;
    }
    OUTLINED_FUNCTION_46_11();
    OUTLINED_FUNCTION_23();
    goto LABEL_8;
  }
  __break(1u);
}

void sub_1A575D07C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_6_55();
  if (!__OFADD__(v1, 1))
  {
    OUTLINED_FUNCTION_56_13();
    if (v2 != v3)
    {
      OUTLINED_FUNCTION_2_76();
      OUTLINED_FUNCTION_10_42();
      if (!v0)
      {
        OUTLINED_FUNCTION_2_4();
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_16_32();
      OUTLINED_FUNCTION_11_30();
    }
    else
    {
      sub_1A5718F9C();
      v4 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v4, v5);
    }
    OUTLINED_FUNCTION_133_2();
LABEL_7:
    OUTLINED_FUNCTION_12_42();
    return;
  }
  __break(1u);
}

uint64_t sub_1A575D11C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  __int16 v19;
  int v20;

  v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v10 = a3;
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v17 = v10;
    }
    else
    {
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v19 = *(_WORD *)(result + 20);
      v20 = *(_DWORD *)(result + 16);
      v18 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751974(v14, v8, v10);
      if (!v7)
      {
        swift_retain();
        v10 = sub_1A575D298(v14, v8, v10, a4, a5, a6, a7);
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v19;
      *(_BYTE *)(v14 + 22) = v18;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A575D298(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  __int16 v19;
  int v20;

  v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v17 = a3;
    }
    else
    {
      v8 = a7;
      v14 = result;
      v15 = *(_QWORD *)result;
      v16 = *(_QWORD *)(result + 8);
      v19 = *(_WORD *)(result + 20);
      v20 = *(_DWORD *)(result + 16);
      v18 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751898();
      if (!v7)
      {
        v8 = sub_1A5748184(v14, v9, a3, a4, a5, a6, v8);
        sub_1A5751898();
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(_QWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v19;
      *(_BYTE *)(v14 + 22) = v18;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A575D45C()
{
  return sub_1A575D470();
}

#error "1A575D4D8: call analysis failed (funcsize=44)"

uint64_t sub_1A575D524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A575D540(a1, a2, a3, a4, a5, a6, a7, sub_1A574AA4C);
}

#error "1A575D5AC: call analysis failed (funcsize=44)"

uint64_t sub_1A575D5F4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  __int16 v10;
  int v11;

  if (!__OFADD__(a2, 1))
  {
    v4 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v8 = v4;
    }
    else
    {
      v5 = result;
      v6 = *(_QWORD *)result;
      v7 = *(_QWORD *)(result + 8);
      v10 = *(_WORD *)(result + 20);
      v11 = *(_DWORD *)(result + 16);
      v9 = *(_BYTE *)(result + 22);
      swift_retain();
      sub_1A5751898();
      if (!v3)
      {
        v4 = sub_1A574A0BC();
        swift_release();
        swift_release();
        return v4;
      }
      swift_release();
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v11;
      *(_WORD *)(v5 + 20) = v10;
      *(_BYTE *)(v5 + 22) = v9;
    }
    swift_willThrow();
    swift_release();
    return v4;
  }
  __break(1u);
  return result;
}

#error "1A575D7D8: call analysis failed (funcsize=34)"

void sub_1A575D7F4()
{
  sub_1A575D82C();
}

void sub_1A575D810()
{
  sub_1A575D82C();
}

void sub_1A575D82C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _BYTE v17[5];
  __int16 v18;
  __int16 v19;
  int v20;

  OUTLINED_FUNCTION_6_55();
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_45_14();
    if (v4 == v5)
    {
      sub_1A5718F9C();
      v15 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_199_0(v15, v16);
LABEL_6:
      OUTLINED_FUNCTION_46_11();
      OUTLINED_FUNCTION_23();
      return;
    }
    v6 = v3;
    OUTLINED_FUNCTION_5_62();
    OUTLINED_FUNCTION_49_9();
    if (v0)
    {
      v7 = OUTLINED_FUNCTION_16_32();
      *v6 = v1;
      OUTLINED_FUNCTION_16_33(v7, v8, v9, v10, v11, v12, v13, v14, *(int *)v17, v17[4], v18, v19, v20);
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_48();
  }
}

#error "1A575D9A4: call analysis failed (funcsize=73)"

uint64_t sub_1A575DA38(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;

  v6 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    v7 = a3;
    if (v6 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v18 = v7;
    }
    else
    {
      v10 = result;
      v11 = *(_QWORD *)result;
      v12 = *(_QWORD *)(result + 8);
      v13 = *(_DWORD *)(result + 16);
      v14 = *(_WORD *)(result + 20);
      v15 = *(_BYTE *)(result + 22);
      swift_retain();
      v16 = v7;
      v7 = a5;
      v17 = a4(v10, v6, v16);
      if (!v5)
      {
        v7 = v17;
        swift_release();
        return v7;
      }
      swift_release();
      *(_QWORD *)v10 = v11;
      *(_QWORD *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(_BYTE *)(v10 + 22) = v15;
    }
    swift_willThrow();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A575DB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t result;

  v4 = *(_DWORD *)(a1 + 8);
  v5 = *(_DWORD *)(a1 + 12);
  result = v5 - v4;
  if (v5 < v4)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!(_DWORD)result)
  {
    sub_1A571EA80();
    OUTLINED_FUNCTION_21();
    return OUTLINED_FUNCTION_8_23();
  }
  if (result < a4)
  {
    result = ByteBuffer.readSlice(length:)(result);
    if (result)
      return result;
    goto LABEL_10;
  }
  result = ByteBuffer.readSlice(length:)(a4);
  if (!result)
LABEL_11:
    __break(1u);
  return result;
}

void sub_1A575DBEC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  __int16 v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v37;

  v4 = *a1;
  v5 = *((_DWORD *)a1 + 2);
  v6 = *((_DWORD *)a1 + 3);
  v7 = *((_DWORD *)a1 + 4);
  v8 = *((_WORD *)a1 + 10);
  v9 = *((_BYTE *)a1 + 22);
  v10 = OUTLINED_FUNCTION_300();
  v15 = sub_1A566FE78(v10, v11, v12, v13, v14);
  if ((v15 & 0x10000) == 0)
  {
    if ((unsigned __int16)v15 != 3338)
      goto LABEL_15;
    v16 = v5 + 2;
    if (v5 >= 0xFFFFFFFE)
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v6 >= v16)
    {
LABEL_20:
      *((_DWORD *)a1 + 2) = v16;
      return;
    }
    __break(1u);
  }
  v17 = OUTLINED_FUNCTION_300();
  sub_1A566FE08(v17, v18, v19, v20);
  if ((v15 & 0x100) != 0)
  {
    sub_1A571EA80();
    OUTLINED_FUNCTION_21();
    goto LABEL_30;
  }
  if (v15 != 13 && v15 != 10)
  {
    sub_1A56E9774();
    v22 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_168_3(v22, v23);
    OUTLINED_FUNCTION_15_35(v24, v25);
    v27 = 365;
LABEL_29:
    *(_QWORD *)(v26 + 32) = v27;
    goto LABEL_30;
  }
  v16 = v5 + 1;
  if (v5 == -1)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v6 >= v16)
    goto LABEL_20;
  __break(1u);
LABEL_15:
  if (BYTE1(v15) == 10)
    goto LABEL_18;
  if (BYTE1(v15) != 32)
  {
    if (BYTE1(v15) != 13)
    {
      sub_1A56E9774();
      v30 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_168_3(v30, v31);
      OUTLINED_FUNCTION_15_35(v32, v33);
      v27 = 369;
      goto LABEL_29;
    }
LABEL_18:
    v16 = v5 + 1;
    if (v5 != -1)
    {
      if (v6 >= v16)
        goto LABEL_20;
      goto LABEL_36;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v28 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v28 >= a3)
  {
    sub_1A5718F9C();
    OUTLINED_FUNCTION_21();
    *v34 = a3;
    goto LABEL_30;
  }
  v29 = v5 + 1;
  if (v5 == -1)
    goto LABEL_38;
  if (v6 >= v29)
  {
    *((_DWORD *)a1 + 2) = v29;
    OUTLINED_FUNCTION_1_2();
    sub_1A575DBEC(a1, v28, a3);
    if (!v37)
    {
      OUTLINED_FUNCTION_2_4();
      return;
    }
    OUTLINED_FUNCTION_68_4();
    *a1 = v4;
    *((_DWORD *)a1 + 2) = v5;
    *((_DWORD *)a1 + 3) = v6;
    *((_DWORD *)a1 + 4) = v7;
    *((_WORD *)a1 + 10) = v8;
    *((_BYTE *)a1 + 22) = v9;
LABEL_30:
    OUTLINED_FUNCTION_133_2();
    return;
  }
LABEL_39:
  __break(1u);
}

void sub_1A575DE18()
{
  void *v0;

  sub_1A575275C();
  if (v0)
  {
    OUTLINED_FUNCTION_76_8();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((OUTLINED_FUNCTION_17_31() & 1) != 0)
    {
      OUTLINED_FUNCTION_77_8();
      OUTLINED_FUNCTION_77();
      OUTLINED_FUNCTION_9_2();

    }
    else
    {

    }
  }
}

void sub_1A575DEAC()
{
  sub_1A575DE18();
}

void sub_1A575DEC8()
{
  sub_1A575DE18();
}

void sub_1A575DEE4()
{
  sub_1A575DE18();
}

void sub_1A575DF00()
{
  sub_1A575DE18();
}

void sub_1A575DF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v4;

  sub_1A57521FC(a1, a2, a3);
  if (v3)
  {
    v4 = v3;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    else
    {

    }
  }
}

void sub_1A575DFC4()
{
  sub_1A575DE18();
}

void sub_1A575DFE0()
{
  sub_1A575EBD8();
}

uint64_t sub_1A575DFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v13;
  id v14;

  swift_retain();
  v13 = sub_1A5753AEC(a1, a2, a3, a4);
  if (v7)
  {
    v14 = v7;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      return 0;
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    a7 = v13;
    swift_release();
  }
  return a7;
}

void sub_1A575E130(int a1, int a2, int a3, int a4, int a5, int a6, uint64_t a7)
{
  sub_1A575EFFC(a1, a2, a3, a4, a5, a6, a7, (int)sub_1A5753954, (uint64_t)sub_1A5756AC0);
  OUTLINED_FUNCTION_9();
}

void sub_1A575E15C(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  sub_1A575E170(a1, a2, a3, a4);
}

void sub_1A575E170(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int16 v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v10 = a1 + 1;
  if (!__OFADD__(a1, 1))
  {
    if (v10 >= a2)
    {
      sub_1A5718F9C();
      v21 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_256_1(v21, v22);
    }
    else
    {
      OUTLINED_FUNCTION_327();
      OUTLINED_FUNCTION_118_4();
      v31 = v14;
      v32 = v15;
      v30 = *(_BYTE *)(v16 + 22);
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_291(v6, v10);
      v5 = v4;
      if (!v4)
      {
        OUTLINED_FUNCTION_329();
        sub_1A571C374();
        v29 = v34;
        v27 = v36;
        v28 = v35;
        v26 = v37;
        OUTLINED_FUNCTION_11_1();
        v17 = OUTLINED_FUNCTION_329();
        v23 = sub_1A575E38C(v17, v18, v19, v20, a3, v8, v7);
        OUTLINED_FUNCTION_276_1();
        v25 = v24;
        OUTLINED_FUNCTION_48();
        *a4 = v33;
        a4[1] = v29;
        a4[2] = v28;
        a4[3] = v27;
        a4[4] = v26;
        a4[5] = v23;
        a4[6] = a2;
        a4[7] = v7;
        a4[8] = v25;
LABEL_10:
        swift_release();
        return;
      }
      OUTLINED_FUNCTION_5_52();
      *(_QWORD *)v6 = a3;
      *(_QWORD *)(v6 + 8) = v9;
      *(_DWORD *)(v6 + 16) = v32;
      *(_WORD *)(v6 + 20) = v31;
      *(_BYTE *)(v6 + 22) = v30;
    }
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_164_3();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (OUTLINED_FUNCTION_17_31())
    {
      OUTLINED_FUNCTION_165_3();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_17();
      *(_OWORD *)a4 = xmmword_1A59ABD60;
      *((_OWORD *)a4 + 1) = 0u;
      *((_OWORD *)a4 + 2) = 0u;
      *((_OWORD *)a4 + 3) = 0u;
      a4[8] = 0;

      OUTLINED_FUNCTION_48();
      return;
    }

    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1A575E38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v15;
  id v16;

  swift_retain();
  v15 = sub_1A57540F8(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
  {
    v16 = v7;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      return 0;
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    a6 = v15;
    swift_release();
  }
  return a6;
}

void sub_1A575E4CC()
{
  sub_1A576047C();
}

void sub_1A575E4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A5754920(a1, a2, a3);
  if (v3)
  {
    OUTLINED_FUNCTION_76_8();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((OUTLINED_FUNCTION_17_31() & 1) != 0)
    {
      OUTLINED_FUNCTION_77_8();
      OUTLINED_FUNCTION_77();
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_173_2();
  }
}

void sub_1A575E570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 a13, __int128 a14, __int128 a15, __int128 a16, __int128 a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  OUTLINED_FUNCTION_214_0();
  v22 = v21 + 1;
  if (!__OFADD__(v21, 1))
  {
    OUTLINED_FUNCTION_210_1();
    if (v24 != v25)
    {
      v26 = v23;
      OUTLINED_FUNCTION_111_2();
      OUTLINED_FUNCTION_179_2(v26, v22);
      if (!v19)
      {
        OUTLINED_FUNCTION_11_1();
        v27 = OUTLINED_FUNCTION_171_3();
        sub_1A5753EF4(v27);
        if (!v20)
        {
          OUTLINED_FUNCTION_15_1();
          *(_OWORD *)v18 = a13;
          *(_OWORD *)(v18 + 16) = a14;
          *(_OWORD *)(v18 + 32) = a15;
          *(_OWORD *)(v18 + 48) = a16;
          *(_OWORD *)(v18 + 64) = a17;
          *(_QWORD *)(v18 + 80) = a18;
          goto LABEL_10;
        }
      }
      OUTLINED_FUNCTION_5_52();
      OUTLINED_FUNCTION_257_0();
    }
    else
    {
      sub_1A5718F9C();
      v28 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_222_0(v28, v29);
    }
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_164_3();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (OUTLINED_FUNCTION_17_31())
    {
      OUTLINED_FUNCTION_165_3();
      OUTLINED_FUNCTION_187_1();
      OUTLINED_FUNCTION_17();
      *(_OWORD *)v18 = xmmword_1A59ABD60;
      *(_OWORD *)(v18 + 16) = 0u;
      *(_OWORD *)(v18 + 32) = 0u;
      *(_OWORD *)(v18 + 48) = 0u;
      *(_OWORD *)(v18 + 64) = 0u;
      *(_QWORD *)(v18 + 80) = 0;
      OUTLINED_FUNCTION_55_12();
      OUTLINED_FUNCTION_15_1();
LABEL_11:
      OUTLINED_FUNCTION_18_32();
      return;
    }
    OUTLINED_FUNCTION_55_12();
LABEL_10:
    swift_release();
    goto LABEL_11;
  }
  __break(1u);
}

void sub_1A575E6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  __int16 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v11 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    OUTLINED_FUNCTION_210_1();
    if (v16 != v17)
    {
      v18 = v12;
      v27 = v13;
      v28 = v14;
      v29 = v15;
      OUTLINED_FUNCTION_111_2();
      OUTLINED_FUNCTION_179_2(v18, v11);
      v4 = v3;
      if (!v3)
      {
        OUTLINED_FUNCTION_11_1();
        sub_1A57542A8(v18, v11, v5, v27, v6, v28, v29, (uint64_t)&v30);
        OUTLINED_FUNCTION_15_1();
        v21 = v36;
        v22 = v31;
        v23 = v32;
        v24 = v33;
        v25 = v34;
        v26 = v35;
        *(_QWORD *)v2 = v30;
        *(_OWORD *)(v2 + 8) = v22;
        *(_OWORD *)(v2 + 24) = v23;
        *(_OWORD *)(v2 + 40) = v24;
        *(_OWORD *)(v2 + 56) = v25;
        *(_OWORD *)(v2 + 72) = v26;
        *(_QWORD *)(v2 + 88) = v21;
        goto LABEL_10;
      }
      OUTLINED_FUNCTION_5_52();
      *(_QWORD *)v18 = v6;
      *(_QWORD *)(v18 + 8) = v10;
      *(_DWORD *)(v18 + 16) = v7;
      *(_WORD *)(v18 + 20) = v8;
      *(_BYTE *)(v18 + 22) = v9;
    }
    else
    {
      sub_1A5718F9C();
      v19 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_222_0(v19, v20);
    }
    OUTLINED_FUNCTION_80_4();
    v37 = v4;
    OUTLINED_FUNCTION_164_3();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (OUTLINED_FUNCTION_17_31())
    {
      OUTLINED_FUNCTION_165_3();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_17();
      *(_OWORD *)(v2 + 64) = 0u;
      *(_OWORD *)(v2 + 80) = 0u;
      *(_OWORD *)(v2 + 32) = 0u;
      *(_OWORD *)(v2 + 48) = 0u;
      *(_OWORD *)v2 = 0u;
      *(_OWORD *)(v2 + 16) = 0u;
      OUTLINED_FUNCTION_55_12();
      OUTLINED_FUNCTION_15_1();
LABEL_11:
      OUTLINED_FUNCTION_170_3();
      return;
    }
    OUTLINED_FUNCTION_55_12();
LABEL_10:
    swift_release();
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_1A575E830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t v11;
  id v12;

  swift_retain();
  v11 = sub_1A5754D04(a1, a2, a3);
  if (v6)
  {
    v12 = v6;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      return 0;
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    a6 = v11;
    swift_release();
  }
  return a6;
}

void sub_1A575E964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v5;

  sub_1A5755F0C(a1, a2, a3, a4, a5);
  if (v5)
  {
    OUTLINED_FUNCTION_76_8();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((OUTLINED_FUNCTION_17_31() & 1) != 0)
    {
      OUTLINED_FUNCTION_77_8();
      OUTLINED_FUNCTION_77();
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_173_2();
  }
}

void sub_1A575E9F4(int a1, int a2, int a3, int a4, int a5, int a6, int a7)
{
  sub_1A575EC98(a1, a2, a3, a4, a5, a6, a7, (int)sub_1A5755B14, (uint64_t)sub_1A5755A74);
  OUTLINED_FUNCTION_9();
}

void sub_1A575EA20()
{
  sub_1A5760670();
}

void sub_1A575EA3C()
{
  sub_1A575F8B4();
  OUTLINED_FUNCTION_5();
}

void sub_1A575EA7C()
{
  sub_1A575F6F8();
}

void sub_1A575EA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 a13, __int128 a14, __int128 a15, __int128 a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  OUTLINED_FUNCTION_155_2();
  v21 = v20 + 1;
  if (!__OFADD__(v20, 1))
  {
    OUTLINED_FUNCTION_210_1();
    if (v23 != v24)
    {
      v25 = v22;
      OUTLINED_FUNCTION_111_2();
      OUTLINED_FUNCTION_179_2(v25, v21);
      if (!v18)
      {
        OUTLINED_FUNCTION_11_1();
        v26 = OUTLINED_FUNCTION_171_3();
        sub_1A5756F64(v26, v27, v28);
        if (!v19)
        {
          OUTLINED_FUNCTION_15_1();
          *(_OWORD *)v17 = a13;
          *(_OWORD *)(v17 + 16) = a14;
          *(_OWORD *)(v17 + 32) = a15;
          *(_OWORD *)(v17 + 48) = a16;
          *(_QWORD *)(v17 + 64) = a17;
          goto LABEL_10;
        }
      }
      OUTLINED_FUNCTION_5_52();
      OUTLINED_FUNCTION_257_0();
    }
    else
    {
      sub_1A5718F9C();
      v29 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_222_0(v29, v30);
    }
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_164_3();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (OUTLINED_FUNCTION_17_31())
    {
      OUTLINED_FUNCTION_165_3();
      OUTLINED_FUNCTION_187_1();
      OUTLINED_FUNCTION_17();
      *(_QWORD *)(v17 + 64) = 0;
      *(_OWORD *)(v17 + 32) = 0u;
      *(_OWORD *)(v17 + 48) = 0u;
      *(_OWORD *)v17 = 0u;
      *(_OWORD *)(v17 + 16) = 0u;
      OUTLINED_FUNCTION_55_12();
      OUTLINED_FUNCTION_15_1();
LABEL_11:
      OUTLINED_FUNCTION_53_12();
      return;
    }
    OUTLINED_FUNCTION_55_12();
LABEL_10:
    swift_release();
    goto LABEL_11;
  }
  __break(1u);
}

void sub_1A575EBBC()
{
  sub_1A575EBD8();
}

void sub_1A575EBD8()
{
  void *v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_197_1();
  OUTLINED_FUNCTION_52_11();
  v1 = OUTLINED_FUNCTION_196_2();
  sub_1A5756AC0(v1);
  if (v0)
  {
    OUTLINED_FUNCTION_141_2();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    v2 = OUTLINED_FUNCTION_17_31();
    if ((v2 & 1) != 0)
    {
      OUTLINED_FUNCTION_66_9();
      OUTLINED_FUNCTION_209();
      v2 = OUTLINED_FUNCTION_9_2();
    }
    OUTLINED_FUNCTION_136_3(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v0);
    OUTLINED_FUNCTION_23();
  }
  else
  {
    OUTLINED_FUNCTION_23();
  }
  OUTLINED_FUNCTION_342();
  OUTLINED_FUNCTION_85_4();
}

uint64_t sub_1A575EC98(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_34_19();
  OUTLINED_FUNCTION_161_2();
  if (v9)
  {
    OUTLINED_FUNCTION_141_2();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    v10 = OUTLINED_FUNCTION_17_31();
    if ((v10 & 1) != 0)
    {
      OUTLINED_FUNCTION_66_9();
      OUTLINED_FUNCTION_77();
      v10 = OUTLINED_FUNCTION_9_2();
    }
    OUTLINED_FUNCTION_53_13(v10, v11, v12, v13, v14, v15, v16, v17, v19, v20, v21, v22, v23, v24, v25, v9);
    OUTLINED_FUNCTION_23();
  }
  else
  {
    OUTLINED_FUNCTION_23();
  }
  return OUTLINED_FUNCTION_342();
}

#error "1A575ED80: call analysis failed (funcsize=5)"

#error "1A575EDBC: call analysis failed (funcsize=45)"

uint64_t sub_1A575EE4C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_87_6();
  OUTLINED_FUNCTION_17_37();
  v26 = OUTLINED_FUNCTION_33_20();
  v29 = sub_1A5757CE8(v26, v27, v28);
  if (v24)
  {
    OUTLINED_FUNCTION_76_8();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    v30 = OUTLINED_FUNCTION_17_31();
    if ((v30 & 1) != 0)
    {
      OUTLINED_FUNCTION_77_8();
      OUTLINED_FUNCTION_77();
      v38 = OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_53_13(v38, v39, v40, v41, v42, v43, v44, v45, v47, v48, v49, v50, v51, v52, v53, v24);
      OUTLINED_FUNCTION_17_4();
      OUTLINED_FUNCTION_191_2();
    }
    else
    {
      OUTLINED_FUNCTION_53_13(v30, v31, v32, v33, v34, v35, v36, v37, v47, v48, v49, v50, v51, v52, v53, v24);
      OUTLINED_FUNCTION_17_4();
    }
  }
  else
  {
    v25 = v29;
    OUTLINED_FUNCTION_17_4();
  }
  return v25;
}

#error "1A575EF1C: call analysis failed (funcsize=5)"

#error "1A575EFBC: call analysis failed (funcsize=41)"

void sub_1A575EFD4(int a1, int a2, int a3, int a4, int a5, int a6, uint64_t a7)
{
  sub_1A575EFFC(a1, a2, a3, a4, a5, a6, a7, 58, (uint64_t)sub_1A575762C);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1A575EFFC(int a1, int a2, int a3, int a4, int a5, int a6, uint64_t a7, int a8, uint64_t a9)
{
  void *v9;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_34_19();
  v11 = OUTLINED_FUNCTION_161_2();
  if (v9)
  {
    OUTLINED_FUNCTION_141_2();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    v12 = OUTLINED_FUNCTION_17_31();
    if ((v12 & 1) != 0)
    {
      OUTLINED_FUNCTION_66_9();
      OUTLINED_FUNCTION_77();
      v20 = OUTLINED_FUNCTION_52();
      OUTLINED_FUNCTION_53_13(v20, v21, v22, v23, v24, v25, v26, v27, v29, v30, v31, v32, v33, v34, v35, v9);
      OUTLINED_FUNCTION_23();
      return 0;
    }
    else
    {
      OUTLINED_FUNCTION_53_13(v12, v13, v14, v15, v16, v17, v18, v19, v29, v30, v31, v32, v33, v34, v35, v9);
      OUTLINED_FUNCTION_23();
    }
  }
  else
  {
    a7 = v11;
    OUTLINED_FUNCTION_23();
  }
  return a7;
}

void sub_1A575F0EC(int a1, int a2, int a3, int a4, int a5, int a6, uint64_t a7)
{
  sub_1A575EFFC(a1, a2, a3, a4, a5, a6, a7, 46, (uint64_t)sub_1A575762C);
  OUTLINED_FUNCTION_9();
}

void sub_1A575F114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  void *v5;
  id v6;

  sub_1A5757718(a1, a2, a3, a4, a5);
  if (v5)
  {
    v6 = v5;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

void sub_1A575F1C4()
{
  sub_1A575F8B4();
  OUTLINED_FUNCTION_5();
}

void sub_1A575F204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, __int16 a12, __int16 a13, int a14, uint64_t a15, char a16, uint64_t a17, char a18, int a19, char a20,int a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,unsigned __int8 a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;

  OUTLINED_FUNCTION_214_0();
  if (!__OFADD__(v31, 1))
  {
    OUTLINED_FUNCTION_235_1();
    if (v33 != v34)
    {
      v35 = v32;
      v36 = *v32;
      OUTLINED_FUNCTION_144_3();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_17_0();
      v37 = OUTLINED_FUNCTION_116_3();
      sub_1A575878C(v37, v38, v39, v40, v41, v42, v43, v44);
      if (!v29)
      {
        OUTLINED_FUNCTION_15_1();
        *(_QWORD *)v28 = a15;
        *(_BYTE *)(v28 + 8) = a16;
        *(_QWORD *)(v28 + 16) = a17;
        *(_BYTE *)(v28 + 24) = a18;
        *(_DWORD *)(v28 + 28) = a19;
        *(_BYTE *)(v28 + 32) = a20;
        *(_DWORD *)(v28 + 36) = a21;
        *(_BYTE *)(v28 + 40) = a22;
        *(_QWORD *)(v28 + 48) = a23;
        *(_BYTE *)(v28 + 56) = a24;
        *(_QWORD *)(v28 + 64) = a25;
        *(_BYTE *)(v28 + 72) = a26;
        *(_QWORD *)(v28 + 80) = a27;
        *(_WORD *)(v28 + 88) = a28;
        goto LABEL_10;
      }
      OUTLINED_FUNCTION_5_52();
      *v35 = v36;
      v35[1] = v30;
      *((_DWORD *)v35 + 4) = a14;
      *((_WORD *)v35 + 10) = a13;
      *((_BYTE *)v35 + 22) = a11;
    }
    else
    {
      sub_1A5718F9C();
      v45 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_222_0(v45, v46);
    }
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_164_3();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (OUTLINED_FUNCTION_17_31())
    {
      OUTLINED_FUNCTION_165_3();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_52();
      *(_OWORD *)(v28 + 73) = 0u;
      *(_OWORD *)(v28 + 48) = 0u;
      *(_OWORD *)(v28 + 64) = 0u;
      *(_OWORD *)(v28 + 16) = 0u;
      *(_OWORD *)(v28 + 32) = 0u;
      *(_OWORD *)v28 = 0u;
      *(_BYTE *)(v28 + 89) = 1;
      OUTLINED_FUNCTION_55_12();
      OUTLINED_FUNCTION_23();
LABEL_11:
      OUTLINED_FUNCTION_18_32();
      return;
    }
    OUTLINED_FUNCTION_55_12();
LABEL_10:
    OUTLINED_FUNCTION_23();
    goto LABEL_11;
  }
  __break(1u);
}

void sub_1A575F3A4()
{
  sub_1A575F6F8();
}

void sub_1A575F3C0()
{
  sub_1A575F3DC();
}

void sub_1A575F3DC()
{
  void *v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_197_1();
  OUTLINED_FUNCTION_52_11();
  OUTLINED_FUNCTION_177_3();
  if (v0)
  {
    OUTLINED_FUNCTION_76_8();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    v1 = OUTLINED_FUNCTION_17_31();
    if ((v1 & 1) != 0)
    {
      OUTLINED_FUNCTION_77_8();
      OUTLINED_FUNCTION_209();
      v9 = OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_136_3(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v0);
      OUTLINED_FUNCTION_17_4();
      OUTLINED_FUNCTION_191_2();
    }
    else
    {
      OUTLINED_FUNCTION_136_3(v1, v2, v3, v4, v5, v6, v7, v8, v17, v18, v19, v20, v21, v0);
      OUTLINED_FUNCTION_17_4();
    }
  }
  else
  {
    OUTLINED_FUNCTION_17_4();
  }
  OUTLINED_FUNCTION_85_4();
}

uint64_t sub_1A575F4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t v8;
  id v9;

  swift_retain();
  sub_1A5758E50();
  if (v6)
  {
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      return 0;
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    a6 = v8;
    swift_release();
  }
  return a6;
}

void sub_1A575F5EC()
{
  sub_1A5760670();
}

#error "1A575F69C: call analysis failed (funcsize=44)"

void sub_1A575F6C0()
{
  sub_1A575F6F8();
}

void sub_1A575F6DC()
{
  sub_1A575F6F8();
}

void sub_1A575F6F8()
{
  void *v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_197_1();
  v2 = v1;
  OUTLINED_FUNCTION_52_11();
  v3 = OUTLINED_FUNCTION_226_1();
  v2(v3);
  if (v0)
  {
    OUTLINED_FUNCTION_141_2();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    v4 = OUTLINED_FUNCTION_17_31();
    if ((v4 & 1) != 0)
    {
      OUTLINED_FUNCTION_66_9();
      OUTLINED_FUNCTION_209();
      v4 = OUTLINED_FUNCTION_9_2();
    }
    OUTLINED_FUNCTION_136_3(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v0);
    OUTLINED_FUNCTION_23();
  }
  else
  {
    OUTLINED_FUNCTION_23();
  }
  OUTLINED_FUNCTION_342();
  OUTLINED_FUNCTION_85_4();
}

#error "1A575F84C: call analysis failed (funcsize=45)"

void sub_1A575F874()
{
  sub_1A575F8B4();
  OUTLINED_FUNCTION_5();
}

uint64_t sub_1A575F8B4()
{
  void *v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  unsigned int v4;

  OUTLINED_FUNCTION_206_1();
  OUTLINED_FUNCTION_34_19();
  v1 = OUTLINED_FUNCTION_196_2();
  v2 = sub_1A5758668(v1);
  if (!v0)
  {
    v4 = v2;
    OUTLINED_FUNCTION_23();
    v3 = v4;
    return v3 | ((unint64_t)(v0 != 0) << 32);
  }
  OUTLINED_FUNCTION_141_2();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
  if ((OUTLINED_FUNCTION_17_31() & 1) != 0)
  {
    OUTLINED_FUNCTION_66_9();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_52();

    OUTLINED_FUNCTION_23();
    v3 = 0;
    return v3 | ((unint64_t)(v0 != 0) << 32);
  }

  return OUTLINED_FUNCTION_23();
}

uint64_t sub_1A575F9B8@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  OUTLINED_FUNCTION_34_19();
  v3 = OUTLINED_FUNCTION_225_0();
  sub_1A575A550(v3, v4, v5, v6);
  if (!v1)
  {
    v8 = v13;
    v9 = v14;
    v10 = v15;
    v11 = v16;
    v12 = v17;
    result = OUTLINED_FUNCTION_17_4();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_164_3();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
  if ((OUTLINED_FUNCTION_17_31() & 1) != 0)
  {
    OUTLINED_FUNCTION_165_3();
    OUTLINED_FUNCTION_77();
    OUTLINED_FUNCTION_52();

    result = OUTLINED_FUNCTION_17_4();
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
LABEL_5:
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    *(_BYTE *)(a1 + 32) = v12;
    return result;
  }

  return OUTLINED_FUNCTION_17_4();
}

void sub_1A575FAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A575B570(a1, a2, a3);
  if (v3)
  {
    OUTLINED_FUNCTION_76_8();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((OUTLINED_FUNCTION_17_31() & 1) != 0)
    {
      OUTLINED_FUNCTION_77_8();
      OUTLINED_FUNCTION_77();
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_173_2();
  }
}

void sub_1A575FB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char v6;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _BYTE v26[5];
  __int16 v27;
  __int16 v28;
  int v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  char v35;
  __int128 v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;

  if (!__OFADD__(a2, 1))
  {
    OUTLINED_FUNCTION_235_1();
    if (v6 != v7)
    {
      v8 = v5;
      OUTLINED_FUNCTION_81_7();
      OUTLINED_FUNCTION_17_0();
      v9 = OUTLINED_FUNCTION_116_3();
      sub_1A575B06C(v9, v10, v11, v12, v13, v14, v15);
      if (!v3)
      {
        OUTLINED_FUNCTION_15_1();
        *(_OWORD *)v2 = v30;
        *(_OWORD *)(v2 + 16) = v31;
        *(_OWORD *)(v2 + 32) = v32;
        *(_QWORD *)(v2 + 48) = v33;
        *(_BYTE *)(v2 + 56) = v34;
        *(_BYTE *)(v2 + 57) = v35;
        *(_OWORD *)(v2 + 64) = v36;
        *(_BYTE *)(v2 + 80) = v37;
        *(_OWORD *)(v2 + 88) = v38;
        *(_QWORD *)(v2 + 104) = v39;
        *(_QWORD *)(v2 + 112) = v40;
        goto LABEL_10;
      }
      v16 = OUTLINED_FUNCTION_5_52();
      *v8 = v4;
      OUTLINED_FUNCTION_59_11(v16, v17, v18, v19, v20, v21, v22, v23, *(int *)v26, v26[4], v27, v28, v29);
    }
    else
    {
      sub_1A5718F9C();
      v24 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_222_0(v24, v25);
    }
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_164_3();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (OUTLINED_FUNCTION_17_31())
    {
      OUTLINED_FUNCTION_165_3();
      OUTLINED_FUNCTION_244_0();
      OUTLINED_FUNCTION_52();
      *(_QWORD *)(v2 + 112) = 0;
      *(_OWORD *)(v2 + 80) = 0u;
      *(_OWORD *)(v2 + 96) = 0u;
      *(_OWORD *)(v2 + 48) = 0u;
      *(_OWORD *)(v2 + 64) = 0u;
      *(_OWORD *)(v2 + 16) = 0u;
      *(_OWORD *)(v2 + 32) = 0u;
      *(_OWORD *)v2 = 0u;
      OUTLINED_FUNCTION_55_12();
      OUTLINED_FUNCTION_23();
LABEL_11:
      OUTLINED_FUNCTION_170_3();
      return;
    }
    OUTLINED_FUNCTION_55_12();
LABEL_10:
    OUTLINED_FUNCTION_23();
    goto LABEL_11;
  }
  __break(1u);
}

#error "1A575FD40: call analysis failed (funcsize=46)"

uint64_t sub_1A575FD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  unsigned int v15;
  id v16;
  uint64_t v17;
  unsigned int v18;

  swift_retain();
  v15 = sub_1A575C9CC(a1, a2, a3, a4, a5, a6, a7, 0x494C41564449553BLL);
  if (!v7)
  {
    v18 = v15;
    swift_release();
    v17 = v18;
    return v17 | ((unint64_t)(v7 != 0) << 32);
  }
  v16 = v7;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
  if ((swift_dynamicCast() & 1) != 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    v17 = 0;
    return v17 | ((unint64_t)(v7 != 0) << 32);
  }

  return swift_release();
}

uint64_t sub_1A575FEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v15;
  id v16;

  swift_retain();
  v15 = sub_1A575C318(a1, a2, a3, a4, a5, a6, a7, 63, 0xE100000000000000, sub_1A5742F94);
  if (v7)
  {
    v16 = v7;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      return 0;
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    a6 = v15;
    swift_release();
  }
  return a6;
}

uint64_t sub_1A5760000@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  void *v11;
  _QWORD *v12;
  id v13;
  char v14;
  __int16 v15;
  _BYTE v17[192];
  id v18;
  _BYTE v19[200];

  if (!__OFADD__(a2, 1))
  {
    v6 = (uint64_t)a4;
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      v11 = (void *)swift_allocError();
      *v12 = a3;
    }
    else
    {
      v7 = result;
      v8 = *(_QWORD *)result;
      v9 = *(_QWORD *)(result + 8);
      v10 = *(_DWORD *)(result + 16);
      v14 = *(_BYTE *)(result + 22);
      v15 = *(_WORD *)(result + 20);
      swift_retain();
      sub_1A5744140();
      v11 = v4;
      if (!v4)
      {
        swift_release();
        sub_1A5687D00(v19, a4);
        nullsub_1(a4);
        return swift_release();
      }
      swift_release();
      *(_QWORD *)v7 = v8;
      *(_QWORD *)(v7 + 8) = v9;
      *(_DWORD *)(v7 + 16) = v10;
      *(_WORD *)(v7 + 20) = v15;
      *(_BYTE *)(v7 + 22) = v14;
      v6 = (uint64_t)a4;
    }
    swift_willThrow();
    v18 = v11;
    v13 = v11;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (swift_dynamicCast())
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5657B40((uint64_t)v17);
      sub_1A55032A0((uint64_t)v17, v6, &qword_1EE7A90D0);

      return swift_release();
    }

    return swift_release();
  }
  __break(1u);
  return result;
}

void sub_1A57601E0()
{
  sub_1A576047C();
}

uint64_t sub_1A57601FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5760234(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1A5760218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5760234(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1A5760234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_52_11();
  v9 = OUTLINED_FUNCTION_225_0();
  v10 = sub_1A575BDE4(v9);
  if (v7)
  {
    OUTLINED_FUNCTION_76_8();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    v11 = OUTLINED_FUNCTION_17_31();
    if ((v11 & 1) != 0)
    {
      OUTLINED_FUNCTION_77_8();
      OUTLINED_FUNCTION_244_0();
      v19 = OUTLINED_FUNCTION_52();
      OUTLINED_FUNCTION_53_13(v19, v20, v21, v22, v23, v24, v25, v26, v28, v29, v30, v31, v32, v33, v34, v7);
      OUTLINED_FUNCTION_17_4();
      OUTLINED_FUNCTION_191_2();
    }
    else
    {
      OUTLINED_FUNCTION_53_13(v11, v12, v13, v14, v15, v16, v17, v18, v28, v29, v30, v31, v32, v33, v34, v7);
      OUTLINED_FUNCTION_17_4();
    }
  }
  else
  {
    a7 = v10;
    OUTLINED_FUNCTION_17_4();
  }
  return a7;
}

void sub_1A5760324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  char v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _BYTE v24[5];
  __int16 v25;
  __int16 v26;
  int v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  unsigned __int8 v32;

  if (!__OFADD__(a2, 1))
  {
    OUTLINED_FUNCTION_235_1();
    if (v7 != v8)
    {
      v9 = v6;
      OUTLINED_FUNCTION_81_7();
      OUTLINED_FUNCTION_17_0();
      v10 = OUTLINED_FUNCTION_116_3();
      sub_1A575B66C(v10, v11, v12, v13);
      v4 = v3;
      if (!v3)
      {
        OUTLINED_FUNCTION_15_1();
        *(_OWORD *)v2 = v28;
        *(_OWORD *)(v2 + 16) = v29;
        *(_OWORD *)(v2 + 32) = v30;
        *(_QWORD *)(v2 + 48) = v31;
        *(_WORD *)(v2 + 56) = v32;
LABEL_10:
        OUTLINED_FUNCTION_23();
        return;
      }
      v14 = OUTLINED_FUNCTION_5_52();
      *v9 = v5;
      OUTLINED_FUNCTION_59_11(v14, v15, v16, v17, v18, v19, v20, v21, *(int *)v24, v24[4], v25, v26, v27);
    }
    else
    {
      sub_1A5718F9C();
      v22 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_222_0(v22, v23);
    }
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_164_3();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (OUTLINED_FUNCTION_17_31())
    {
      OUTLINED_FUNCTION_165_3();
      OUTLINED_FUNCTION_244_0();
      OUTLINED_FUNCTION_52();
      *(_OWORD *)(v2 + 41) = 0u;
      *(_OWORD *)(v2 + 16) = 0u;
      *(_OWORD *)(v2 + 32) = 0u;
      *(_OWORD *)v2 = 0u;
      *(_BYTE *)(v2 + 57) = 1;

      OUTLINED_FUNCTION_23();
      return;
    }

    goto LABEL_10;
  }
  __break(1u);
}

void sub_1A576047C()
{
  void *v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_197_1();
  v2 = v1;
  OUTLINED_FUNCTION_52_11();
  v3 = OUTLINED_FUNCTION_226_1();
  v2(v3);
  if (v0)
  {
    OUTLINED_FUNCTION_141_2();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    v4 = OUTLINED_FUNCTION_17_31();
    if ((v4 & 1) != 0)
    {
      OUTLINED_FUNCTION_66_9();
      OUTLINED_FUNCTION_209();
      v12 = OUTLINED_FUNCTION_9_2();
      OUTLINED_FUNCTION_136_3(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v0);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_191_2();
    }
    else
    {
      OUTLINED_FUNCTION_136_3(v4, v5, v6, v7, v8, v9, v10, v11, v20, v21, v22, v23, v24, v0);
      OUTLINED_FUNCTION_23();
    }
  }
  else
  {
    OUTLINED_FUNCTION_23();
  }
  OUTLINED_FUNCTION_85_4();
}

uint64_t sub_1A5760548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v15;
  id v16;

  swift_retain();
  v15 = sub_1A575BA4C(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
  {
    v16 = v7;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      return 0;
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    a6 = v15;
    swift_release();
  }
  return a6;
}

void sub_1A5760670()
{
  void *v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_197_1();
  OUTLINED_FUNCTION_52_11();
  OUTLINED_FUNCTION_177_3();
  if (v0)
  {
    OUTLINED_FUNCTION_76_8();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    v1 = OUTLINED_FUNCTION_17_31();
    if ((v1 & 1) != 0)
    {
      OUTLINED_FUNCTION_77_8();
      OUTLINED_FUNCTION_209();
      v9 = OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_136_3(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v0);
      OUTLINED_FUNCTION_17_4();
      OUTLINED_FUNCTION_191_2();
    }
    else
    {
      OUTLINED_FUNCTION_136_3(v1, v2, v3, v4, v5, v6, v7, v8, v17, v18, v19, v20, v21, v0);
      OUTLINED_FUNCTION_17_4();
    }
  }
  else
  {
    OUTLINED_FUNCTION_17_4();
  }
  OUTLINED_FUNCTION_85_4();
}

#error "1A57607DC: call analysis failed (funcsize=47)"

#error "1A5760898: call analysis failed (funcsize=41)"

#error "1A5760948: call analysis failed (funcsize=45)"

#error "1A5760A14: call analysis failed (funcsize=46)"

void sub_1A5760A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v5;

  sub_1A575DA38(a1, a2, a3, a4, a5);
  if (v5)
  {
    OUTLINED_FUNCTION_76_8();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((OUTLINED_FUNCTION_17_31() & 1) != 0)
    {
      OUTLINED_FUNCTION_77_8();
      OUTLINED_FUNCTION_77();
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_173_2();
  }
}

void sub_1A5760ABC(uint64_t a1@<X8>)
{
  void *v1;

  sub_1A5751B10();
  if (v1)
  {
    OUTLINED_FUNCTION_164_3();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (OUTLINED_FUNCTION_17_31())
    {
      OUTLINED_FUNCTION_165_3();
      OUTLINED_FUNCTION_77();
      OUTLINED_FUNCTION_52();
      OUTLINED_FUNCTION_354(a1, 1);
    }

  }
  else
  {
    OUTLINED_FUNCTION_354(a1, 0);
  }
}

void sub_1A5760B70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;

  OUTLINED_FUNCTION_317();
  v3 = *(unsigned int *)(v2 + 8);
  sub_1A566FE08(v3, 0, v5, v3 | (v4 << 32));
  if ((v6 & 0x100) != 0)
  {
    sub_1A571EA80();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_8_23();
  }
  else if ((_DWORD)v3 == -1)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(a1 + 8) = v3 + 1;
  }
}

uint64_t sub_1A5760C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v6 = *(_QWORD *)a1;
  OUTLINED_FUNCTION_317();
  v8 = *(unsigned int *)(v7 + 8);
  v10 = v8 | (v9 << 32);
  v14 = v11 | (v12 << 32) | (v13 << 48);
  swift_retain();
  ByteBuffer.getSlice(at:length:)(v8, a4, v6, v10, v14);
  OUTLINED_FUNCTION_340();
  result = OUTLINED_FUNCTION_40();
  if (!v14)
  {
    sub_1A571EA80();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_8_23();
    return v14;
  }
  if (!__CFADD__((_DWORD)v8, (_DWORD)a4))
  {
    *(_DWORD *)(a1 + 8) = v8 + a4;
    return v14;
  }
  __break(1u);
  return result;
}

void sub_1A5760CC8(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1();
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_DWORD *)(a2 + 16) = v6;
    *(_BYTE *)(a2 + 22) = BYTE6(v6);
    *(_WORD *)(a2 + 20) = WORD2(v6);
    *(_BYTE *)(a2 + 23) = HIBYTE(v6) & 1;
  }
  OUTLINED_FUNCTION_1();
}

void sub_1A5760D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_177_2(a1, a2, a3, a4);
  if (!v5)
    *v4 = v6;
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5760D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v14;
  uint64_t v15;

  v15 = sub_1A594CD14();
  sub_1A5763EA8(a1, (uint64_t)&v15, a2, a3, a4, a5, a6);
  if (!v6)
    return v15;
  v14 = sub_1A594BAF0();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(&v15, v14);
}

uint64_t sub_1A5760DFC()
{
  return sub_1A5760E34();
}

uint64_t sub_1A5760E18()
{
  return sub_1A5760E34();
}

uint64_t sub_1A5760E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_206_1();
  v3 = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_34_19();
  OUTLINED_FUNCTION_298();
  sub_1A5751BF8(v1);
  OUTLINED_FUNCTION_23();
  if (v0)
    return OUTLINED_FUNCTION_52();
  else
    return v3;
}

uint64_t sub_1A5760EC8()
{
  return sub_1A5760E34();
}

uint64_t sub_1A5760EE4()
{
  return sub_1A5760E34();
}

uint64_t sub_1A5760F00()
{
  return sub_1A5760E34();
}

uint64_t sub_1A5760F1C()
{
  return sub_1A5760E34();
}

uint64_t sub_1A5760F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v7 = MEMORY[0x1E0DEE9D8];
  sub_1A5751CE8(a1, a2, a3, &v7, a4);
  v5 = v7;
  if (v4)
    swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A5760F90@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A5760FE4((uint64_t (*)(void))sub_1A57258CC, a1);
}

uint64_t sub_1A5760FAC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A5760FE4((uint64_t (*)(void))sub_1A57258F8, a1);
}

uint64_t sub_1A5760FC8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A5760FE4((uint64_t (*)(void))sub_1A5725924, a1);
}

uint64_t sub_1A5760FE4@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_1A576100C(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = a1();
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1A5761038(unint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;

  v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1A5718F9C();
      v14 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_188_1(v14, v15);
      return OUTLINED_FUNCTION_133_2();
    }
    v8 = result;
    v9 = *(_QWORD *)result;
    v10 = *(_QWORD *)(result + 8);
    v11 = *(_DWORD *)(result + 16);
    v12 = *(_WORD *)(result + 20);
    v13 = *(_BYTE *)(result + 22);
    OUTLINED_FUNCTION_1_2();
    sub_1A576AF5C(v8, v5, a3, a4 & 1, &v16);
    if (v4)
    {
      OUTLINED_FUNCTION_16_32();
      *(_QWORD *)v8 = v9;
      *(_QWORD *)(v8 + 8) = v10;
      *(_DWORD *)(v8 + 16) = v11;
      *(_WORD *)(v8 + 20) = v12;
      *(_BYTE *)(v8 + 22) = v13;
      return OUTLINED_FUNCTION_133_2();
    }
    OUTLINED_FUNCTION_2_4();
    return v16;
  }
  return result;
}

uint64_t sub_1A5761118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, _QWORD, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  OUTLINED_FUNCTION_197_1();
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  sub_1A5751898();
  if (!v11)
  {
    v26 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    v26[2] = v19;
    v26[3] = v17;
    v26[4] = v15;
    v26[5] = v13;
    OUTLINED_FUNCTION_30();
    v21 = a11(a9, 0, a10, v26, v25, v23, v21, 0xD000000000000020, 0x80000001A5A0F5E0, 33);
    OUTLINED_FUNCTION_19_0();
  }
  return v21;
}

_QWORD *sub_1A576122C@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr)@<X3>, void *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[24];

  result = a1(v5);
  if (!v2)
    return sub_1A5687D00(v5, a2);
  return result;
}

uint64_t sub_1A5761274@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A57444B8();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

void sub_1A576129C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  __int16 v9;
  uint64_t v10;
  uint64_t *v11;

  v9 = sub_1A594B19C();
  if ((v9 & 0x100) == 0)
  {
    v10 = a4 + 1;
    if (!__OFADD__(a4, 1))
    {
      if (v10 >= a5)
      {
        sub_1A5718F9C();
        OUTLINED_FUNCTION_21();
        *v11 = a5;
      }
      else
      {
        sub_1A576C068(a3, v10, a5, v9);
        if (!v5)
        {
LABEL_8:
          OUTLINED_FUNCTION_2_70();
          return;
        }
        OUTLINED_FUNCTION_106_2();
      }
      OUTLINED_FUNCTION_80_4();
      goto LABEL_8;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1A576134C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned int v3;
  unint64_t v4;
  uint64_t result;

  v3 = a3;
  v4 = HIDWORD(a3);
  result = OUTLINED_FUNCTION_176();
  if (v4 >= v3)
    return sub_1A594CE70();
  __break(1u);
  return result;
}

uint64_t sub_1A57613C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;

  if (HIDWORD(a2) < a2)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (HIDWORD(a5) < a5)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  result = HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5
        && ((a3 & 0xFFFFFFFFFFFFFFLL) == (a6 & 0xFFFFFFFFFFFFFFLL) ? (v6 = result == a4) : (v6 = 0),
            v6 || (OUTLINED_FUNCTION_155(), (sub_1A566B918() & 1) != 0));
  return result;
}

uint64_t sub_1A5761478(uint64_t a1, unint64_t a2)
{
  unsigned int v2;
  unint64_t v3;
  uint64_t result;

  v2 = a2;
  v3 = HIDWORD(a2);
  sub_1A594CE64();
  result = OUTLINED_FUNCTION_176();
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    return sub_1A594CED0();
  }
  return result;
}

uint64_t sub_1A5761504()
{
  uint64_t v0;

  return sub_1A5761478(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_1A5761520(uint64_t a1)
{
  uint64_t v1;

  return sub_1A576134C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1A576153C(uint64_t a1, uint64_t a2)
{
  return sub_1A57613C8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48));
}

uint64_t BadCommand.commandTag.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_338();
  return v0;
}

void BadCommand.commandTag.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_28_7();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_8_1();
}

double (*BadCommand.commandTag.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BadCommand.parserError.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[3];
  v3 = v1[4];
  v4 = v1[5];
  v5 = v1[6];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void BadCommand.parserError.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(a1 + 32);
  OUTLINED_FUNCTION_1();
}

double (*BadCommand.parserError.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ParserError.hint.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_338();
  return v0;
}

void ParserError.hint.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_28_7();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_8_1();
}

double (*ParserError.hint.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t TooMuchRecursion.limit.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*TooMuchRecursion.limit.modify())(_QWORD)
{
  return nullsub_1;
}

void sub_1A57616BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  BOOL v17;
  __int16 v18;
  unsigned __int8 v19;
  unsigned int v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  unsigned __int16 v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  uint64_t v35;
  uint64_t v36[5];
  _BYTE v37[24];
  uint64_t v38;
  uint64_t v39;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v26 = *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48);
  ByteBufferView.init(_:)(*(_QWORD *)a1, v4, v26, (uint64_t)&v27);
  v5 = v32;
  v6 = v33;
  if (v32 == v33)
  {
LABEL_2:
    swift_retain();
    sub_1A553E5DC((uint64_t)&v27);
    sub_1A571EA80();
    swift_allocError();
LABEL_31:
    swift_willThrow();
    return;
  }
  v7 = v28;
  v8 = v29 - v28;
  if (v29 < v28)
  {
LABEL_39:
    __break(1u);
  }
  else
  {
    v25 = v3;
    v9 = a2;
    v10 = v27;
    v11 = v31 | ((unint64_t)v30 << 8);
    swift_beginAccess();
    while (1)
    {
      if (v5 >= v6)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v12 = v5 - v7;
      if (__OFSUB__(v5, v7))
        goto LABEL_36;
      if (v12 < 0)
        goto LABEL_37;
      if (v12 >= v8)
        goto LABEL_38;
      v13 = *(unsigned __int8 *)(*(_QWORD *)(v10 + 24) + v11 + v5);
      if (v13 != 93)
      {
        v14 = v13 - 32;
        if (v13 < 0x20)
          break;
        v17 = v14 > 0x3C;
        v15 = (1 << v14) & 0x1000000000000725;
        v16 = v17 || v15 == 0;
        if (!v16 || v13 == 123 || (v13 & 0x80) != 0 || v13 == 43)
          break;
      }
      if (v6 == ++v5)
        goto LABEL_2;
    }
    swift_retain();
    sub_1A553E5DC((uint64_t)&v27);
    ByteBufferView.init(_:)(v25, v4, v26, (uint64_t)v34);
    swift_retain();
    sub_1A553E5DC((uint64_t)v34);
    if (v35 != v5)
    {
      ByteBufferView.init(_:)(v25, v4, v26, (uint64_t)v37);
      swift_retain();
      sub_1A553E5DC((uint64_t)v37);
      if (__OFSUB__(v5, v38))
        goto LABEL_41;
      v22 = ByteBuffer.readSlice(length:)((int)v5 - (int)v38);
      if (v22)
      {
        *(_QWORD *)v9 = v22;
        *(_QWORD *)(v9 + 8) = v23;
        *(_DWORD *)(v9 + 16) = v24;
        *(_WORD *)(v9 + 20) = WORD2(v24);
        *(_BYTE *)(v9 + 22) = BYTE6(v24);
        return;
      }
      goto LABEL_43;
    }
    ByteBufferView.init(_:)(v25, v4, v26, (uint64_t)v36);
    v17 = v5 >= v36[3] && v5 < v36[4];
    if (v17)
    {
      sub_1A566FE08(v5, 0, v36[0], v36[1]);
      if ((v18 & 0x100) != 0)
        goto LABEL_42;
      v19 = v18;
      swift_retain();
      sub_1A553E5DC((uint64_t)v36);
      sub_1A594C720();
      sub_1A594B5F8();
      v20 = (((v19 & 0x3F) << 8) | (v19 >> 6)) + 33217;
      if ((v19 & 0x80) == 0)
        v20 = (v19 + 1);
      v39 = (v20 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v20) >> 3)) & 7)));
      MEMORY[0x1A85AD9BC](&v39);
      sub_1A594B1E4();
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      swift_allocError();
      *v21 = 0;
      v21[1] = 0xE000000000000000;
      v21[2] = 0xD000000000000020;
      v21[3] = 0x80000001A5A0F5E0;
      v21[4] = 110;
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
}

void sub_1A5761A8C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int16 v14;
  unsigned __int8 v15;
  unsigned int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned __int16 v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  uint64_t v31;
  uint64_t v32[5];
  _BYTE v33[24];
  uint64_t v34;
  uint64_t v35;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v22 = *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48);
  ByteBufferView.init(_:)(*(_QWORD *)a1, v4, v22, (uint64_t)&v23);
  v5 = v28;
  v6 = v29;
  if (v28 == v29)
  {
LABEL_10:
    swift_retain();
    sub_1A553E5DC((uint64_t)&v23);
    sub_1A571EA80();
    swift_allocError();
LABEL_11:
    swift_willThrow();
    return;
  }
  v7 = v24;
  v8 = v25 - v24;
  if (v25 < v24)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v21 = v3;
  v9 = a2;
  v10 = v23;
  v11 = v27 | ((unint64_t)v26 << 8);
  swift_beginAccess();
  while (1)
  {
    if (v5 >= v6)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v12 = v5 - v7;
    if (__OFSUB__(v5, v7))
      goto LABEL_26;
    if (v12 < 0)
      goto LABEL_27;
    if (v12 >= v8)
      goto LABEL_28;
    if (*(unsigned __int8 *)(*(_QWORD *)(v10 + 24) + v11 + v5) - 58 < 0xFFFFFFF6)
      break;
    if (v6 == ++v5)
      goto LABEL_10;
  }
  swift_retain();
  sub_1A553E5DC((uint64_t)&v23);
  ByteBufferView.init(_:)(v21, v4, v22, (uint64_t)v30);
  swift_retain();
  sub_1A553E5DC((uint64_t)v30);
  if (v31 != v5)
  {
    ByteBufferView.init(_:)(v21, v4, v22, (uint64_t)v33);
    swift_retain();
    sub_1A553E5DC((uint64_t)v33);
    if (__OFSUB__(v5, v34))
      goto LABEL_31;
    v18 = ByteBuffer.readSlice(length:)((int)v5 - (int)v34);
    if (v18)
    {
      *(_QWORD *)v9 = v18;
      *(_QWORD *)(v9 + 8) = v19;
      *(_DWORD *)(v9 + 16) = v20;
      *(_WORD *)(v9 + 20) = WORD2(v20);
      *(_BYTE *)(v9 + 22) = BYTE6(v20);
      return;
    }
    goto LABEL_33;
  }
  ByteBufferView.init(_:)(v21, v4, v22, (uint64_t)v32);
  if (v5 >= v32[3] && v5 < v32[4])
  {
    sub_1A566FE08(v5, 0, v32[0], v32[1]);
    if ((v14 & 0x100) != 0)
      goto LABEL_32;
    v15 = v14;
    swift_retain();
    sub_1A553E5DC((uint64_t)v32);
    sub_1A594C720();
    sub_1A594B5F8();
    v16 = (((v15 & 0x3F) << 8) | (v15 >> 6)) + 33217;
    if ((v15 & 0x80) == 0)
      v16 = (v15 + 1);
    v35 = (v16 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v16) >> 3)) & 7)));
    MEMORY[0x1A85AD9BC](&v35);
    sub_1A594B1E4();
    swift_bridgeObjectRelease();
    sub_1A56E9774();
    swift_allocError();
    *v17 = 0;
    v17[1] = 0xE000000000000000;
    v17[2] = 0xD000000000000020;
    v17[3] = 0x80000001A5A0F5E0;
    v17[4] = 110;
    goto LABEL_11;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

void sub_1A5761E20(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int16 v14;
  unsigned __int8 v15;
  unsigned int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned __int16 v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  uint64_t v32;
  uint64_t v33[5];
  _BYTE v34[24];
  uint64_t v35;
  uint64_t v36;

  v2 = *(_QWORD *)a1;
  v22 = *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48);
  v23 = *(_QWORD *)(a1 + 8);
  ByteBufferView.init(_:)(*(_QWORD *)a1, v23, v22, (uint64_t)&v24);
  v4 = v29;
  v3 = v30;
  if (v29 == v30)
  {
LABEL_13:
    swift_retain();
    sub_1A553E5DC((uint64_t)&v24);
    sub_1A571EA80();
    swift_allocError();
LABEL_14:
    swift_willThrow();
    return;
  }
  v5 = v25;
  v6 = v26 - v25;
  if (v26 < v25)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v7 = v28 | ((unint64_t)v27 << 8);
  v8 = (_QWORD *)(v24 + 24);
  swift_beginAccess();
  v9 = v7 + v5;
  while (1)
  {
    if (v4 >= v3)
    {
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v10 = v4 - v5;
    if (__OFSUB__(v4, v5))
      goto LABEL_29;
    if (v10 < 0)
      goto LABEL_30;
    if (v10 >= v6)
      goto LABEL_31;
    v11 = *(unsigned __int8 *)(*v8 + v9 + v10);
    if (!isalnum(v11) && (v11 - 45) > 1)
      break;
    if (v3 == ++v4)
      goto LABEL_13;
  }
  swift_retain();
  sub_1A553E5DC((uint64_t)&v24);
  ByteBufferView.init(_:)(v2, v23, v22, (uint64_t)v31);
  swift_retain();
  sub_1A553E5DC((uint64_t)v31);
  if (v32 != v4)
  {
    ByteBufferView.init(_:)(v2, v23, v22, (uint64_t)v34);
    swift_retain();
    sub_1A553E5DC((uint64_t)v34);
    if (__OFSUB__(v4, v35))
      goto LABEL_34;
    v18 = ByteBuffer.readSlice(length:)((int)v4 - (int)v35);
    if (v18)
    {
      *(_QWORD *)a2 = v18;
      *(_QWORD *)(a2 + 8) = v19;
      *(_DWORD *)(a2 + 16) = v20;
      *(_WORD *)(a2 + 20) = WORD2(v20);
      *(_BYTE *)(a2 + 22) = BYTE6(v20);
      return;
    }
    goto LABEL_36;
  }
  ByteBufferView.init(_:)(v2, v23, v22, (uint64_t)v33);
  if (v4 >= v33[3] && v4 < v33[4])
  {
    sub_1A566FE08(v4, 0, v33[0], v33[1]);
    if ((v14 & 0x100) != 0)
      goto LABEL_35;
    v15 = v14;
    swift_retain();
    sub_1A553E5DC((uint64_t)v33);
    sub_1A594C720();
    sub_1A594B5F8();
    v16 = (((v15 & 0x3F) << 8) | (v15 >> 6)) + 33217;
    if ((v15 & 0x80) == 0)
      v16 = (v15 + 1);
    v36 = (v16 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v16) >> 3)) & 7)));
    MEMORY[0x1A85AD9BC](&v36);
    sub_1A594B1E4();
    swift_bridgeObjectRelease();
    sub_1A56E9774();
    swift_allocError();
    *v17 = 0;
    v17[1] = 0xE000000000000000;
    v17[2] = 0xD000000000000020;
    v17[3] = 0x80000001A5A0F5E0;
    v17[4] = 110;
    goto LABEL_14;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_1A57621A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  BOOL v17;
  __int16 v18;
  unsigned __int8 v19;
  unsigned int v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  unsigned __int16 v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  uint64_t v35;
  uint64_t v36[5];
  _BYTE v37[24];
  uint64_t v38;
  uint64_t v39;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48);
  ByteBufferView.init(_:)(*(_QWORD *)a1, v4, v5, (uint64_t)&v27);
  v6 = v32;
  v7 = v33;
  if (v32 == v33)
  {
LABEL_2:
    swift_retain();
    sub_1A553E5DC((uint64_t)&v27);
    sub_1A571EA80();
    swift_allocError();
LABEL_29:
    swift_willThrow();
    return;
  }
  v8 = v28;
  if (v29 < v28)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    v26 = v3;
    v25 = a2;
    v9 = v27;
    v10 = v31 | ((unint64_t)v30 << 8);
    v11 = v29 - v28;
    swift_beginAccess();
    while (1)
    {
      if (v6 >= v7)
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      v12 = v6 - v8;
      if (__OFSUB__(v6, v8))
        goto LABEL_34;
      if (v12 < 0)
        goto LABEL_35;
      if (v12 >= v11)
        goto LABEL_36;
      v13 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 24) + v10 + v6);
      v14 = v13 - 32;
      if (v13 < 0x20)
        break;
      v17 = v14 > 0x3D;
      v15 = (1 << v14) & 0x3000000000000725;
      v16 = v17 || v15 == 0;
      if (!v16 || v13 == 123 || (v13 & 0x80) != 0)
        break;
      if (v7 == ++v6)
        goto LABEL_2;
    }
    swift_retain();
    sub_1A553E5DC((uint64_t)&v27);
    ByteBufferView.init(_:)(v26, v4, v5, (uint64_t)v34);
    swift_retain();
    sub_1A553E5DC((uint64_t)v34);
    if (v35 != v6)
    {
      ByteBufferView.init(_:)(v26, v4, v5, (uint64_t)v37);
      swift_retain();
      sub_1A553E5DC((uint64_t)v37);
      if (__OFSUB__(v6, v38))
        goto LABEL_39;
      v22 = ByteBuffer.readSlice(length:)((int)v6 - (int)v38);
      if (v22)
      {
        *(_QWORD *)v25 = v22;
        *(_QWORD *)(v25 + 8) = v23;
        *(_DWORD *)(v25 + 16) = v24;
        *(_WORD *)(v25 + 20) = WORD2(v24);
        *(_BYTE *)(v25 + 22) = BYTE6(v24);
        return;
      }
      goto LABEL_41;
    }
    ByteBufferView.init(_:)(v26, v4, v5, (uint64_t)v36);
    v17 = v6 >= v36[3] && v6 < v36[4];
    if (v17)
    {
      sub_1A566FE08(v6, 0, v36[0], v36[1]);
      if ((v18 & 0x100) != 0)
        goto LABEL_40;
      v19 = v18;
      swift_retain();
      sub_1A553E5DC((uint64_t)v36);
      sub_1A594C720();
      sub_1A594B5F8();
      v20 = (((v19 & 0x3F) << 8) | (v19 >> 6)) + 33217;
      if ((v19 & 0x80) == 0)
        v20 = (v19 + 1);
      v39 = (v20 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v20) >> 3)) & 7)));
      MEMORY[0x1A85AD9BC](&v39);
      sub_1A594B1E4();
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      swift_allocError();
      *v21 = 0;
      v21[1] = 0xE000000000000000;
      v21[2] = 0xD000000000000020;
      v21[3] = 0x80000001A5A0F5E0;
      v21[4] = 110;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

void sub_1A5762578(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  BOOL v14;
  __int16 v17;
  unsigned __int8 v18;
  unsigned int v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned __int16 v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  uint64_t v34;
  uint64_t v35[5];
  _BYTE v36[24];
  uint64_t v37;
  uint64_t v38;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v25 = *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48);
  ByteBufferView.init(_:)(*(_QWORD *)a1, v4, v25, (uint64_t)&v26);
  v5 = v31;
  v6 = v32;
  if (v31 == v32)
  {
LABEL_16:
    swift_retain();
    sub_1A553E5DC((uint64_t)&v26);
    sub_1A571EA80();
    swift_allocError();
LABEL_17:
    swift_willThrow();
    return;
  }
  v7 = v27;
  v8 = v28 - v27;
  if (v28 < v27)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v24 = v3;
  v9 = a2;
  v10 = v26;
  v11 = v30 | ((unint64_t)v29 << 8);
  swift_beginAccess();
  while (1)
  {
    if (v5 >= v6)
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v12 = v5 - v7;
    if (__OFSUB__(v5, v7))
      goto LABEL_32;
    if (v12 < 0)
      goto LABEL_33;
    if (v12 >= v8)
      goto LABEL_34;
    v13 = *(unsigned __int8 *)(*(_QWORD *)(v10 + 24) + v11 + v5);
    v14 = (v13 - 45) >= 2 && (v13 - 48) >= 0xA;
    if (v14 && (v13 & 0xFFFFFFDF) - 65 > 0x19)
      break;
    if (v6 == ++v5)
      goto LABEL_16;
  }
  swift_retain();
  sub_1A553E5DC((uint64_t)&v26);
  ByteBufferView.init(_:)(v24, v4, v25, (uint64_t)v33);
  swift_retain();
  sub_1A553E5DC((uint64_t)v33);
  if (v34 != v5)
  {
    ByteBufferView.init(_:)(v24, v4, v25, (uint64_t)v36);
    swift_retain();
    sub_1A553E5DC((uint64_t)v36);
    if (__OFSUB__(v5, v37))
      goto LABEL_37;
    v21 = ByteBuffer.readSlice(length:)((int)v5 - (int)v37);
    if (v21)
    {
      *(_QWORD *)v9 = v21;
      *(_QWORD *)(v9 + 8) = v22;
      *(_DWORD *)(v9 + 16) = v23;
      *(_WORD *)(v9 + 20) = WORD2(v23);
      *(_BYTE *)(v9 + 22) = BYTE6(v23);
      return;
    }
    goto LABEL_39;
  }
  ByteBufferView.init(_:)(v24, v4, v25, (uint64_t)v35);
  if (v5 >= v35[3] && v5 < v35[4])
  {
    sub_1A566FE08(v5, 0, v35[0], v35[1]);
    if ((v17 & 0x100) != 0)
      goto LABEL_38;
    v18 = v17;
    swift_retain();
    sub_1A553E5DC((uint64_t)v35);
    sub_1A594C720();
    sub_1A594B5F8();
    v19 = (((v18 & 0x3F) << 8) | (v18 >> 6)) + 33217;
    if ((v18 & 0x80) == 0)
      v19 = (v18 + 1);
    v38 = (v19 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v19) >> 3)) & 7)));
    MEMORY[0x1A85AD9BC](&v38);
    sub_1A594B1E4();
    swift_bridgeObjectRelease();
    sub_1A56E9774();
    swift_allocError();
    *v20 = 0;
    v20[1] = 0xE000000000000000;
    v20[2] = 0xD000000000000020;
    v20[3] = 0x80000001A5A0F5E0;
    v20[4] = 110;
    goto LABEL_17;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

#error "1A5762A10: call analysis failed (funcsize=120)"

#error "1A5762B6C: call analysis failed (funcsize=118)"

void sub_1A5762D90(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  BOOL v14;
  __int16 v16;
  unsigned __int8 v17;
  unsigned int v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned __int16 v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  uint64_t v33;
  uint64_t v34[5];
  _BYTE v35[24];
  uint64_t v36;
  uint64_t v37;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v24 = *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48);
  ByteBufferView.init(_:)(*(_QWORD *)a1, v4, v24, (uint64_t)&v25);
  v5 = v30;
  v6 = v31;
  if (v30 == v31)
  {
LABEL_2:
    swift_retain();
    sub_1A553E5DC((uint64_t)&v25);
    sub_1A571EA80();
    swift_allocError();
LABEL_28:
    swift_willThrow();
    return;
  }
  v7 = v26;
  v8 = v27 - v26;
  if (v27 < v26)
  {
LABEL_36:
    __break(1u);
  }
  else
  {
    v23 = v3;
    v9 = a2;
    v10 = v25;
    v11 = v29 | ((unint64_t)v28 << 8);
    swift_beginAccess();
    while (1)
    {
      if (v5 >= v6)
      {
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v12 = v5 - v7;
      if (__OFSUB__(v5, v7))
        goto LABEL_33;
      if (v12 < 0)
        goto LABEL_34;
      if (v12 >= v8)
        goto LABEL_35;
      v13 = *(unsigned __int8 *)(*(_QWORD *)(v10 + 24) + v11 + v5);
      v14 = v13 == 10 || v13 == 13;
      if (v14 || (v13 & 0x80) != 0 || !*(_BYTE *)(*(_QWORD *)(v10 + 24) + v11 + v5) || v13 == 93)
        break;
      if (v6 == ++v5)
        goto LABEL_2;
    }
    swift_retain();
    sub_1A553E5DC((uint64_t)&v25);
    ByteBufferView.init(_:)(v23, v4, v24, (uint64_t)v32);
    swift_retain();
    sub_1A553E5DC((uint64_t)v32);
    if (v33 != v5)
    {
      ByteBufferView.init(_:)(v23, v4, v24, (uint64_t)v35);
      swift_retain();
      sub_1A553E5DC((uint64_t)v35);
      if (__OFSUB__(v5, v36))
        goto LABEL_38;
      v20 = ByteBuffer.readSlice(length:)((int)v5 - (int)v36);
      if (v20)
      {
        *(_QWORD *)v9 = v20;
        *(_QWORD *)(v9 + 8) = v21;
        *(_DWORD *)(v9 + 16) = v22;
        *(_WORD *)(v9 + 20) = WORD2(v22);
        *(_BYTE *)(v9 + 22) = BYTE6(v22);
        return;
      }
      goto LABEL_40;
    }
    ByteBufferView.init(_:)(v23, v4, v24, (uint64_t)v34);
    if (v5 >= v34[3] && v5 < v34[4])
    {
      sub_1A566FE08(v5, 0, v34[0], v34[1]);
      if ((v16 & 0x100) != 0)
        goto LABEL_39;
      v17 = v16;
      swift_retain();
      sub_1A553E5DC((uint64_t)v34);
      sub_1A594C720();
      sub_1A594B5F8();
      v18 = (((v17 & 0x3F) << 8) | (v17 >> 6)) + 33217;
      if ((v17 & 0x80) == 0)
        v18 = (v17 + 1);
      v37 = (v18 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v18) >> 3)) & 7)));
      MEMORY[0x1A85AD9BC](&v37);
      sub_1A594B1E4();
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      swift_allocError();
      *v19 = 0;
      v19[1] = 0xE000000000000000;
      v19[2] = 0xD000000000000020;
      v19[3] = 0x80000001A5A0F5E0;
      v19[4] = 110;
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

void sub_1A5763138(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  __int16 v16;
  unsigned __int8 v17;
  unsigned int v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned __int16 v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  uint64_t v33;
  uint64_t v34[5];
  _BYTE v35[24];
  uint64_t v36;
  uint64_t v37;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v24 = *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48);
  ByteBufferView.init(_:)(*(_QWORD *)a1, v4, v24, (uint64_t)&v25);
  v5 = v30;
  v6 = v31;
  if (v30 == v31)
  {
LABEL_2:
    swift_retain();
    sub_1A553E5DC((uint64_t)&v25);
    sub_1A571EA80();
    swift_allocError();
    goto LABEL_27;
  }
  v7 = v26;
  v8 = v27 - v26;
  if (v27 < v26)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v23 = v3;
  v9 = a2;
  v10 = v25;
  v11 = v29 | ((unint64_t)v28 << 8);
  swift_beginAccess();
  while (1)
  {
    if (v5 >= v6)
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v12 = v5 - v7;
    if (__OFSUB__(v5, v7))
      goto LABEL_32;
    if (v12 < 0)
      goto LABEL_33;
    if (v12 >= v8)
      goto LABEL_34;
    v13 = *(unsigned __int8 *)(*(_QWORD *)(v10 + 24) + v11 + v5);
    v14 = v13 - 32;
    if (v13 < 0x20)
      break;
    if (v14 <= 0x3D)
    {
      if (v14 == 61)
        goto LABEL_15;
      if (((1 << (v13 - 32)) & 0x1000000000000725) != 0)
        break;
    }
    if (v13 == 123 || (v13 & 0x80) != 0)
      break;
LABEL_15:
    if (v6 == ++v5)
      goto LABEL_2;
  }
  swift_retain();
  sub_1A553E5DC((uint64_t)&v25);
  ByteBufferView.init(_:)(v23, v4, v24, (uint64_t)v32);
  swift_retain();
  sub_1A553E5DC((uint64_t)v32);
  if (v33 != v5)
  {
    ByteBufferView.init(_:)(v23, v4, v24, (uint64_t)v35);
    swift_retain();
    sub_1A553E5DC((uint64_t)v35);
    if (__OFSUB__(v5, v36))
      goto LABEL_37;
    v20 = ByteBuffer.readSlice(length:)((int)v5 - (int)v36);
    if (v20)
    {
      *(_QWORD *)v9 = v20;
      *(_QWORD *)(v9 + 8) = v21;
      *(_DWORD *)(v9 + 16) = v22;
      *(_WORD *)(v9 + 20) = WORD2(v22);
      *(_BYTE *)(v9 + 22) = BYTE6(v22);
      return;
    }
LABEL_39:
    __break(1u);
    return;
  }
  ByteBufferView.init(_:)(v23, v4, v24, (uint64_t)v34);
  if (v5 < v34[3] || v5 >= v34[4])
    goto LABEL_36;
  sub_1A566FE08(v5, 0, v34[0], v34[1]);
  if ((v16 & 0x100) != 0)
    goto LABEL_38;
  v17 = v16;
  swift_retain();
  sub_1A553E5DC((uint64_t)v34);
  sub_1A594C720();
  sub_1A594B5F8();
  v18 = (((v17 & 0x3F) << 8) | (v17 >> 6)) + 33217;
  if ((v17 & 0x80) == 0)
    v18 = (v17 + 1);
  v37 = (v18 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v18) >> 3)) & 7)));
  MEMORY[0x1A85AD9BC](&v37);
  sub_1A594B1E4();
  swift_bridgeObjectRelease();
  sub_1A56E9774();
  swift_allocError();
  *v19 = 0;
  v19[1] = 0xE000000000000000;
  v19[2] = 0xD000000000000020;
  v19[3] = 0x80000001A5A0F5E0;
  v19[4] = 110;
LABEL_27:
  swift_willThrow();
}

void sub_1A5763500(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  BOOL v17;
  __int16 v18;
  unsigned __int8 v19;
  unsigned int v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  unsigned __int16 v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  uint64_t v35;
  uint64_t v36[5];
  _BYTE v37[24];
  uint64_t v38;
  uint64_t v39;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48);
  ByteBufferView.init(_:)(*(_QWORD *)a1, v4, v5, (uint64_t)&v27);
  v6 = v32;
  v7 = v33;
  if (v32 == v33)
  {
LABEL_2:
    swift_retain();
    sub_1A553E5DC((uint64_t)&v27);
    sub_1A571EA80();
    swift_allocError();
LABEL_30:
    swift_willThrow();
    return;
  }
  v8 = v28;
  if (v29 < v28)
  {
LABEL_38:
    __break(1u);
  }
  else
  {
    v26 = v3;
    v25 = a2;
    v9 = v27;
    v10 = v31 | ((unint64_t)v30 << 8);
    v11 = v29 - v28;
    swift_beginAccess();
    while (1)
    {
      if (v6 >= v7)
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      v12 = v6 - v8;
      if (__OFSUB__(v6, v8))
        goto LABEL_35;
      if (v12 < 0)
        goto LABEL_36;
      if (v12 >= v11)
        goto LABEL_37;
      v13 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 24) + v10 + v6);
      v14 = v13 - 32;
      if (v13 < 0x20)
        break;
      v17 = v14 > 0x3D;
      v15 = (1 << v14) & 0x3000000000000725;
      v16 = v17 || v15 == 0;
      if (!v16 || v13 == 123 || (v13 & 0x80) != 0 || v13 == 47)
        break;
      if (v7 == ++v6)
        goto LABEL_2;
    }
    swift_retain();
    sub_1A553E5DC((uint64_t)&v27);
    ByteBufferView.init(_:)(v26, v4, v5, (uint64_t)v34);
    swift_retain();
    sub_1A553E5DC((uint64_t)v34);
    if (v35 != v6)
    {
      ByteBufferView.init(_:)(v26, v4, v5, (uint64_t)v37);
      swift_retain();
      sub_1A553E5DC((uint64_t)v37);
      if (__OFSUB__(v6, v38))
        goto LABEL_40;
      v22 = ByteBuffer.readSlice(length:)((int)v6 - (int)v38);
      if (v22)
      {
        *(_QWORD *)v25 = v22;
        *(_QWORD *)(v25 + 8) = v23;
        *(_DWORD *)(v25 + 16) = v24;
        *(_WORD *)(v25 + 20) = WORD2(v24);
        *(_BYTE *)(v25 + 22) = BYTE6(v24);
        return;
      }
      goto LABEL_42;
    }
    ByteBufferView.init(_:)(v26, v4, v5, (uint64_t)v36);
    v17 = v6 >= v36[3] && v6 < v36[4];
    if (v17)
    {
      sub_1A566FE08(v6, 0, v36[0], v36[1]);
      if ((v18 & 0x100) != 0)
        goto LABEL_41;
      v19 = v18;
      swift_retain();
      sub_1A553E5DC((uint64_t)v36);
      sub_1A594C720();
      sub_1A594B5F8();
      v20 = (((v19 & 0x3F) << 8) | (v19 >> 6)) + 33217;
      if ((v19 & 0x80) == 0)
        v20 = (v19 + 1);
      v39 = (v20 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v20) >> 3)) & 7)));
      MEMORY[0x1A85AD9BC](&v39);
      sub_1A594B1E4();
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      swift_allocError();
      *v21 = 0;
      v21[1] = 0xE000000000000000;
      v21[2] = 0xD000000000000020;
      v21[3] = 0x80000001A5A0F5E0;
      v21[4] = 110;
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

#error "1A57638EC: call analysis failed (funcsize=119)"

void sub_1A5763B10(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int16 v14;
  unsigned __int8 v15;
  unsigned int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned __int16 v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  uint64_t v31;
  uint64_t v32[5];
  _BYTE v33[24];
  uint64_t v34;
  uint64_t v35;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v22 = *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48);
  ByteBufferView.init(_:)(*(_QWORD *)a1, v4, v22, (uint64_t)&v23);
  v5 = v28;
  v6 = v29;
  if (v28 == v29)
  {
LABEL_10:
    swift_retain();
    sub_1A553E5DC((uint64_t)&v23);
    sub_1A571EA80();
    swift_allocError();
LABEL_11:
    swift_willThrow();
    return;
  }
  v7 = v24;
  v8 = v25 - v24;
  if (v25 < v24)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v21 = v3;
  v9 = a2;
  v10 = v23;
  v11 = v27 | ((unint64_t)v26 << 8);
  swift_beginAccess();
  while (1)
  {
    if (v5 >= v6)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v12 = v5 - v7;
    if (__OFSUB__(v5, v7))
      goto LABEL_26;
    if (v12 < 0)
      goto LABEL_27;
    if (v12 >= v8)
      goto LABEL_28;
    if ((*(_BYTE *)(*(_QWORD *)(v10 + 24) + v11 + v5) & 0xDFu) - 91 < 0xFFFFFFE6)
      break;
    if (v6 == ++v5)
      goto LABEL_10;
  }
  swift_retain();
  sub_1A553E5DC((uint64_t)&v23);
  ByteBufferView.init(_:)(v21, v4, v22, (uint64_t)v30);
  swift_retain();
  sub_1A553E5DC((uint64_t)v30);
  if (v31 != v5)
  {
    ByteBufferView.init(_:)(v21, v4, v22, (uint64_t)v33);
    swift_retain();
    sub_1A553E5DC((uint64_t)v33);
    if (__OFSUB__(v5, v34))
      goto LABEL_31;
    v18 = ByteBuffer.readSlice(length:)((int)v5 - (int)v34);
    if (v18)
    {
      *(_QWORD *)v9 = v18;
      *(_QWORD *)(v9 + 8) = v19;
      *(_DWORD *)(v9 + 16) = v20;
      *(_WORD *)(v9 + 20) = WORD2(v20);
      *(_BYTE *)(v9 + 22) = BYTE6(v20);
      return;
    }
    goto LABEL_33;
  }
  ByteBufferView.init(_:)(v21, v4, v22, (uint64_t)v32);
  if (v5 >= v32[3] && v5 < v32[4])
  {
    sub_1A566FE08(v5, 0, v32[0], v32[1]);
    if ((v14 & 0x100) != 0)
      goto LABEL_32;
    v15 = v14;
    swift_retain();
    sub_1A553E5DC((uint64_t)v32);
    sub_1A594C720();
    sub_1A594B5F8();
    v16 = (((v15 & 0x3F) << 8) | (v15 >> 6)) + 33217;
    if ((v15 & 0x80) == 0)
      v16 = (v15 + 1);
    v35 = (v16 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v16) >> 3)) & 7)));
    MEMORY[0x1A85AD9BC](&v35);
    sub_1A594B1E4();
    swift_bridgeObjectRelease();
    sub_1A56E9774();
    swift_allocError();
    *v17 = 0;
    v17[1] = 0xE000000000000000;
    v17[2] = 0xD000000000000020;
    v17[3] = 0x80000001A5A0F5E0;
    v17[4] = 110;
    goto LABEL_11;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

uint64_t sub_1A5763EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD v8[6];

  v8[2] = a7;
  v8[3] = a2;
  v8[4] = a5;
  v8[5] = a6;
  return sub_1A5751B10(a1, a3, a4, sub_1A576DC98, v8);
}

_QWORD *initializeWithCopy for BadCommand(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for BadCommand(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

_QWORD *assignWithTake for BadCommand(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

uint64_t getEnumTagSinglePayload for BadCommand(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BadCommand(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for BadCommand()
{
  OUTLINED_FUNCTION_3_1();
}

_QWORD *initializeWithCopy for ParserError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for ParserError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

_QWORD *assignWithTake for ParserError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

void type metadata accessor for ParserError()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for TooMuchRecursion()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for IncompleteMessage()
{
  OUTLINED_FUNCTION_3_1();
}

void sub_1A57641F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, double), uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v29 = a6;
  v27 = a5;
  v33 = a4;
  v11 = sub_1A594C354();
  v25 = *(_QWORD *)(v11 - 8);
  v26 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - v12;
  v14 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v25 - v19;
  v22 = MEMORY[0x1E0C80A78](v21);
  v30 = a1;
  v31 = a2;
  v32 = a3;
  v23 = v28;
  v27(a1, a2, a3, v22);
  if (!v23)
  {
    v24 = sub_1A594BAF0();
    sub_1A594BA84();
    sub_1A5760ABC((uint64_t)v13);
    v28 = v24;
    while (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, a7) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v13, a7);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v20, a7);
      sub_1A594BA84();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v20, a7);
      sub_1A5760ABC((uint64_t)v13);
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
  }
}

void sub_1A5764408(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  _QWORD v29[3];
  id v30;

  v7 = v6;
  v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v9 = a3;
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      v7 = (void *)swift_allocError();
      *v24 = v9;
    }
    else
    {
      while (1)
      {
        v11 = *a1;
        v12 = a1[1];
        v13 = *((_DWORD *)a1 + 4);
        v14 = *((_WORD *)a1 + 10);
        v15 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(v29, a1, v8, v9);
        if (v7)
          break;
        swift_release();
        v16 = v29[0];
        v17 = v29[1];
        v18 = *a6;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569DC18();
          v18 = v22;
          *a6 = v22;
        }
        v20 = *(_QWORD *)(v18 + 16);
        if (v20 >= *(_QWORD *)(v18 + 24) >> 1)
        {
          sub_1A569DC18();
          v18 = v23;
          *a6 = v23;
        }
        *(_QWORD *)(v18 + 16) = v20 + 1;
        v21 = v18 + 16 * v20;
        *(_QWORD *)(v21 + 32) = v16;
        *(_QWORD *)(v21 + 40) = v17;
        swift_bridgeObjectRelease();
        v9 = a3;
      }
      swift_release();
      *a1 = v11;
      a1[1] = v12;
      *((_DWORD *)a1 + 4) = v13;
      *((_WORD *)a1 + 10) = v14;
      *((_BYTE *)a1 + 22) = v15;
    }
    swift_willThrow();
    v30 = v7;
    v25 = v7;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

void **sub_1A5764628(void **result, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  uint64_t v16;
  int v17;
  void *v18;
  int v19;
  int v20;
  int v21;
  __int16 v22;
  char v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  id v27;
  uint64_t v28;
  int v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t *v39;
  id v40;
  id v41;
  void *v42;
  int v43;
  int v44;
  int v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  __int16 v50;
  id v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t *v73;
  void *v74;
  uint64_t *v75;
  int v76;
  int v77;
  int v78;
  __int16 v79;
  char v80;
  id v81;
  _QWORD v82[4];
  _QWORD v83[4];
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t *v88;
  int v89;
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  int v111;
  int v112;
  int v113;
  void *v114;
  uint64_t v115;
  id v116;
  _QWORD *v117;

  v103 = a8;
  v102 = a7;
  v106 = a6;
  v101 = a5;
  v100 = a4;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v9 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      v10 = (void *)swift_allocError();
      *v73 = v9;
    }
    else
    {
      v10 = v8;
      v11 = (uint64_t)result;
      v12 = *result;
      v99 = *(_DWORD *)(v11 + 8);
      v98 = *(_DWORD *)(v11 + 12);
      v97 = *(_DWORD *)(v11 + 16);
      v96 = *(unsigned __int16 *)(v11 + 20);
      v95 = *(unsigned __int8 *)(v11 + 22);
      if (a2 + 2 < a3)
      {
        v13 = a2 + 3;
        v93 = a2 + 1;
        v92 = a2 + 4;
        v86 = (unint64_t)"SHSERVICE response type: ";
        v87 = 0x80000001A5A0F5E0;
        v85 = 0x80000001A5A0F840;
        v108 = a3;
        v110 = a2 + 3;
        v94 = a2 + 2;
        do
        {
          v109 = v12;
          swift_retain();
          sub_1A576B3AC(v11);
          if (v10)
          {
            *(_QWORD *)v11 = v109;
            v76 = v99;
            v77 = v98;
            *(_DWORD *)(v11 + 8) = v99;
            *(_DWORD *)(v11 + 12) = v77;
            v78 = v97;
            *(_DWORD *)(v11 + 16) = v97;
            v79 = v96;
            *(_WORD *)(v11 + 20) = v96;
            v80 = v95;
            *(_BYTE *)(v11 + 22) = v95;
            goto LABEL_47;
          }
          v107 = &v84;
          v14 = &v84;
          v117 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          v15 = *(void **)v11;
          v16 = *(_QWORD *)(v11 + 8);
          v17 = *(_DWORD *)(v11 + 16);
          v112 = *(unsigned __int16 *)(v11 + 20);
          v113 = v17;
          v111 = *(unsigned __int8 *)(v11 + 22);
          v114 = v15;
          if (v13 >= v9)
          {
            sub_1A5718F9C();
            v10 = (void *)swift_allocError();
            *v25 = v9;
            swift_retain();
            swift_retain();
          }
          else
          {
            v104 = &v84;
            v18 = *(void **)v11;
            v19 = *(_DWORD *)(v11 + 8);
            v20 = *(_DWORD *)(v11 + 12);
            v21 = *(_DWORD *)(v11 + 16);
            v22 = *(_WORD *)(v11 + 20);
            v23 = *(_BYTE *)(v11 + 22);
            v24 = v92;
            if (v92 < v9)
            {
              LODWORD(v105) = *(_DWORD *)(v11 + 8);
              swift_retain_n();
              swift_retain();
              swift_retain();
              sub_1A576B64C((void **)v11, v24, v9, 0, 0x4C494EuLL, 0xE300000000000000, 0);
              swift_release();
              swift_release_n();
              v57 = 0;
              v58 = 0;
              v59 = 0;
LABEL_32:
              v56 = 0;
              goto LABEL_33;
            }
            sub_1A5718F9C();
            v10 = (void *)swift_allocError();
            *v26 = v9;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_willThrow();
            swift_release();
            *(_QWORD *)v11 = v18;
            *(_DWORD *)(v11 + 8) = v19;
            *(_DWORD *)(v11 + 12) = v20;
            *(_DWORD *)(v11 + 16) = v21;
            *(_WORD *)(v11 + 20) = v22;
            *(_BYTE *)(v11 + 22) = v23;
            v13 = v110;
            v15 = v114;
            v14 = v104;
          }
          swift_willThrow();
          v116 = v10;
          v27 = v10;
          v28 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
          v29 = swift_dynamicCast();
          v105 = v28;
          if (v29)
          {

          }
          else
          {

            v116 = v10;
            v30 = v10;
            if ((swift_dynamicCast() & 1) == 0)
            {

              goto LABEL_19;
            }

            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (v13 < v9)
          {
            v104 = v14;
            v91 = *(_DWORD *)(v11 + 16);
            v90 = *(unsigned __int16 *)(v11 + 20);
            v89 = *(unsigned __int8 *)(v11 + 22);
            v31 = (_QWORD *)swift_allocObject();
            v88 = &v84;
            v32 = v101;
            v33 = v106;
            v31[2] = v101;
            v31[3] = v33;
            v34 = v102;
            v35 = v103;
            v31[4] = v102;
            v31[5] = v35;
            MEMORY[0x1E0C80A78](v31);
            v83[2] = sub_1A576DC68;
            v83[3] = v36;
            v37 = (_QWORD *)swift_allocObject();
            v37[2] = v32;
            v37[3] = v33;
            v37[4] = v34;
            v37[5] = v35;
            MEMORY[0x1E0C80A78](v37);
            v82[2] = sub_1A576DC80;
            v82[3] = v38;
            swift_retain_n();
            swift_retain();
            sub_1A576F59C((uint64_t)sub_1A572CAE8, (uint64_t)v83, (uint64_t)sub_1A575083C, (uint64_t)v82);
            v10 = 0;
            v57 = v53;
            v58 = v54;
            v59 = v55;
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            goto LABEL_32;
          }
          sub_1A5718F9C();
          v10 = (void *)swift_allocError();
          *v39 = v9;
          swift_willThrow();
LABEL_19:
          swift_release();
          *(_QWORD *)v11 = v15;
          *(_QWORD *)(v11 + 8) = v16;
          *(_DWORD *)(v11 + 16) = v113;
          *(_WORD *)(v11 + 20) = v112;
          *(_BYTE *)(v11 + 22) = v111;
          swift_willThrow();
          v116 = v10;
          v40 = v10;
          if ((swift_dynamicCast() & 1) != 0)
          {

          }
          else
          {

            v116 = v10;
            v41 = v10;
            if ((swift_dynamicCast() & 1) == 0)
            {

              goto LABEL_28;
            }

            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v42 = *(void **)v11;
          v43 = *(_DWORD *)(v11 + 8);
          v44 = *(_DWORD *)(v11 + 12);
          v45 = *(_DWORD *)(v11 + 16);
          LODWORD(v104) = *(unsigned __int16 *)(v11 + 20);
          v46 = *(_BYTE *)(v11 + 22);
          v47 = v108;
          v48 = v110;
          if (v110 >= v108)
          {
            sub_1A5718F9C();
            v10 = (void *)swift_allocError();
            *v49 = v47;
            swift_retain();
            v50 = (__int16)v104;
            swift_willThrow();
          }
          else
          {
            swift_retain_n();
            sub_1A576AF5C(v11, v48, v47, 1, (unint64_t *)&v115);
            v10 = 0;
            swift_release();
            v57 = v115;
            if ((v115 & 0x8000000000000000) == 0)
            {
              swift_release();
              v58 = 0;
              v59 = 0;
              v56 = 1;
LABEL_33:
              v52 = v117;
              sub_1A5691E18(v57, v58, v59, v56);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1A569DC04();
                v52 = v71;
              }
              v60 = v52[2];
              if (v60 >= v52[3] >> 1)
              {
                sub_1A569DC04();
                v52 = v72;
              }
              v52[2] = v60 + 1;
              v61 = (char *)&v52[3 * v60];
              *((_QWORD *)v61 + 4) = v57;
              *((_QWORD *)v61 + 5) = v58;
              v61[54] = BYTE6(v59);
              *((_WORD *)v61 + 26) = WORD2(v59);
              *((_DWORD *)v61 + 12) = v59;
              v61[55] = v56;
              sub_1A56974C4(v57, v58, v59, v56);
              swift_release();
              swift_release();
              v9 = v108;
              v13 = v110;
              goto LABEL_38;
            }
            sub_1A56E9774();
            v10 = (void *)swift_allocError();
            v66 = v85;
            *v67 = 0xD000000000000011;
            v67[1] = v66;
            v68 = v86 | 0x8000000000000000;
            v67[2] = 0xD000000000000020;
            v67[3] = v68;
            v67[4] = 167;
            swift_willThrow();
            v50 = (__int16)v104;
          }
          swift_release();
          *(_QWORD *)v11 = v42;
          *(_DWORD *)(v11 + 8) = v43;
          *(_DWORD *)(v11 + 12) = v44;
          *(_DWORD *)(v11 + 16) = v45;
          *(_WORD *)(v11 + 20) = v50;
          *(_BYTE *)(v11 + 22) = v46;
          swift_willThrow();
          v9 = v108;
          v13 = v110;
          v15 = v114;
LABEL_28:
          v116 = v10;
          v51 = v10;
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_release();

            swift_bridgeObjectRelease();
            v76 = v99;
            v77 = v98;
            v78 = v97;
            v79 = v96;
            v80 = v95;
            goto LABEL_49;
          }
          swift_release();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_QWORD *)v11 = v15;
          *(_QWORD *)(v11 + 8) = v16;
          *(_DWORD *)(v11 + 16) = v113;
          *(_WORD *)(v11 + 20) = v112;
          *(_BYTE *)(v11 + 22) = v111;
          swift_retain();
          sub_1A571AD04(v11, v93, v9, (uint64_t *)&v117, v101, v106, v102, v103);
          v10 = 0;
          swift_release();

          swift_release();
          v52 = v117;
LABEL_38:
          v62 = v100;
          v63 = *v100;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v62 = v63;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1A569DCD0();
            v63 = v69;
            *v100 = v69;
          }
          v65 = *(_QWORD *)(v63 + 16);
          if (v65 >= *(_QWORD *)(v63 + 24) >> 1)
          {
            sub_1A569DCD0();
            v63 = v70;
            *v100 = v70;
          }
          *(_QWORD *)(v63 + 16) = v65 + 1;
          *(_QWORD *)(v63 + 8 * v65 + 32) = v52;
          swift_bridgeObjectRelease();
          v12 = *(void **)v11;
          v99 = *(_DWORD *)(v11 + 8);
          v98 = *(_DWORD *)(v11 + 12);
          v97 = *(_DWORD *)(v11 + 16);
          v96 = *(unsigned __int16 *)(v11 + 20);
          v95 = *(unsigned __int8 *)(v11 + 22);
        }
        while (v94 < v9);
      }
      v74 = v12;
      sub_1A5718F9C();
      v10 = (void *)swift_allocError();
      *v75 = v9;
      v109 = v74;
      swift_retain();
      v76 = v99;
      v77 = v98;
      v78 = v97;
      v79 = v96;
      v80 = v95;
LABEL_47:
      swift_willThrow();
LABEL_49:
      swift_release();
      *(_QWORD *)v11 = v109;
      *(_DWORD *)(v11 + 8) = v76;
      *(_DWORD *)(v11 + 12) = v77;
      *(_DWORD *)(v11 + 16) = v78;
      *(_WORD *)(v11 + 20) = v79;
      *(_BYTE *)(v11 + 22) = v80;
    }
    swift_willThrow();
    v117 = v10;
    v81 = v10;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    return (void **)swift_release();
  }
  return result;
}

void sub_1A57652D4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  unint64_t v26;
  id v27;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = v6;
    if (v7 >= a3)
    {
      sub_1A5718F9C();
      v8 = (void *)swift_allocError();
      *v22 = a3;
    }
    else
    {
      while (1)
      {
        v11 = *a1;
        v12 = a1[1];
        v13 = *((_DWORD *)a1 + 4);
        v14 = *((_WORD *)a1 + 10);
        v15 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(&v26, a1, v7, a3);
        if (v8)
          break;
        swift_release();
        v16 = v26;
        v17 = *a6;
        sub_1A568079C(v26);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v17;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569DDA0();
          v17 = v20;
          *a6 = v20;
        }
        v19 = *(_QWORD *)(v17 + 16);
        if (v19 >= *(_QWORD *)(v17 + 24) >> 1)
        {
          sub_1A569DDA0();
          v17 = v21;
        }
        *(_QWORD *)(v17 + 16) = v19 + 1;
        *(_QWORD *)(v17 + 8 * v19 + 32) = v16;
        *a6 = v17;
        sub_1A567FE68(v16);
      }
      swift_release();
      *a1 = v11;
      a1[1] = v12;
      *((_DWORD *)a1 + 4) = v13;
      *((_WORD *)a1 + 10) = v14;
      *((_BYTE *)a1 + 22) = v15;
    }
    swift_willThrow();
    v27 = v8;
    v23 = v8;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

void sub_1A57654F4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  uint64_t v7;
  void *v9;
  uint64_t v12;
  uint64_t v13;
  int v14;
  __int16 v15;
  char v16;
  char v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v27;
  id v28;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v7 >= a3)
    {
      sub_1A5718F9C();
      v9 = (void *)swift_allocError();
      *v23 = a3;
    }
    else
    {
      v9 = v6;
      while (1)
      {
        v12 = *a1;
        v13 = a1[1];
        v14 = *((_DWORD *)a1 + 4);
        v15 = *((_WORD *)a1 + 10);
        v16 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(&v27, a1, v7, a3);
        if (v6)
          break;
        swift_release();
        v17 = v27;
        v18 = *a6;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569DDB4();
          v18 = v21;
          *a6 = v21;
        }
        v20 = *(_QWORD *)(v18 + 16);
        if (v20 >= *(_QWORD *)(v18 + 24) >> 1)
        {
          sub_1A569DDB4();
          v18 = v22;
        }
        *(_QWORD *)(v18 + 16) = v20 + 1;
        *(_BYTE *)(v18 + v20 + 32) = v17;
        *a6 = v18;
      }
      swift_release();
      *a1 = v12;
      a1[1] = v13;
      *((_DWORD *)a1 + 4) = v14;
      *((_WORD *)a1 + 10) = v15;
      *((_BYTE *)a1 + 22) = v16;
    }
    swift_willThrow();
    v28 = v9;
    v24 = v9;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

uint64_t sub_1A57656EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  void *v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  __int16 v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  char v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _BYTE v36[40];
  id v37;

  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      v12 = (void *)swift_allocError();
      *v26 = a3;
    }
    else
    {
      v6 = result;
      v7 = *(_QWORD *)result;
      v8 = *(_DWORD *)(result + 8);
      v9 = *(_DWORD *)(result + 12);
      v10 = *(_DWORD *)(result + 16);
      v11 = *(_WORD *)(result + 20);
      v34 = *(_BYTE *)(result + 22);
      if (a2 + 2 >= a3)
      {
LABEL_14:
        sub_1A5718F9C();
        v12 = (void *)swift_allocError();
        *v27 = a3;
        swift_retain();
        v28 = v34;
LABEL_15:
        swift_willThrow();
      }
      else
      {
        v12 = v4;
        v32 = result;
        v33 = a2 + 1;
        v31 = a2 + 2;
        while (1)
        {
          swift_retain();
          sub_1A576B3AC(v6);
          if (v12)
          {
            *(_QWORD *)v6 = v7;
            *(_DWORD *)(v6 + 8) = v8;
            *(_DWORD *)(v6 + 12) = v9;
            *(_DWORD *)(v6 + 16) = v10;
            *(_WORD *)(v6 + 20) = v11;
            v28 = v34;
            *(_BYTE *)(v6 + 22) = v34;
            goto LABEL_15;
          }
          sub_1A57528B8(v6, v33, a3);
          v12 = 0;
          ByteBufferView.init(_:)(v14, v15, v13 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v36);
          swift_retain();
          v16 = sub_1A56E6FE8((uint64_t)v36);
          if (!v17)
            break;
          v18 = v16;
          v19 = v17;
          swift_release();
          swift_release();
          v20 = *a4;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *a4 = v20;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1A569DE78();
            v20 = v24;
            *a4 = v24;
          }
          v6 = v32;
          v22 = *(_QWORD *)(v20 + 16);
          if (v22 >= *(_QWORD *)(v20 + 24) >> 1)
          {
            sub_1A569DE78();
            v20 = v25;
            *a4 = v25;
          }
          *(_QWORD *)(v20 + 16) = v22 + 1;
          v23 = v20 + 16 * v22;
          *(_QWORD *)(v23 + 32) = v18;
          *(_QWORD *)(v23 + 40) = v19;
          swift_bridgeObjectRelease();
          v7 = *(_QWORD *)v32;
          v8 = *(_DWORD *)(v32 + 8);
          v9 = *(_DWORD *)(v32 + 12);
          v10 = *(_DWORD *)(v32 + 16);
          v11 = *(_WORD *)(v32 + 20);
          v34 = *(_BYTE *)(v32 + 22);
          if (v31 >= a3)
            goto LABEL_14;
        }
        sub_1A56E9774();
        v12 = (void *)swift_allocError();
        strcpy(v29, "Invalid UTF8");
        v29[13] = 0;
        *((_WORD *)v29 + 7) = -5120;
        *((_QWORD *)v29 + 2) = 0xD000000000000020;
        *((_QWORD *)v29 + 3) = 0x80000001A5A0F5E0;
        *((_QWORD *)v29 + 4) = 2455;
        swift_willThrow();
        swift_release();
        v6 = v32;
        v28 = v34;
      }
      swift_release();
      *(_QWORD *)v6 = v7;
      *(_DWORD *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 12) = v9;
      *(_DWORD *)(v6 + 16) = v10;
      *(_WORD *)(v6 + 20) = v11;
      *(_BYTE *)(v6 + 22) = v28;
    }
    swift_willThrow();
    v37 = v12;
    v30 = v12;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    return swift_release();
  }
  return result;
}

void sub_1A5765A9C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  char v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned __int8 v44;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = a3;
    if (v7 >= a3)
    {
LABEL_11:
      sub_1A5718F9C();
      v15 = (void *)swift_allocError();
      *v27 = v8;
    }
    else
    {
      v29 = a2 + 1;
      while (1)
      {
        v10 = *a1;
        v11 = a1[1];
        v12 = *((_DWORD *)a1 + 4);
        v13 = *((_WORD *)a1 + 10);
        v14 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(&v36, a1, v7, v8);
        v15 = v6;
        if (v6)
          break;
        swift_release();
        v16 = v39;
        if (v39 > 0xFFFEFFFFFFFFFFFFLL)
          return;
        v18 = v36;
        v17 = v37;
        v19 = v41;
        v20 = v43 | ((unint64_t)v44 << 32);
        v21 = *a6;
        v34 = v40;
        v35 = v38;
        v33 = v42;
        sub_1A5666A3C(v36, v37, v38, v39, v40, v41, v42, v20);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569DE8C();
          v21 = v25;
          *a6 = v25;
        }
        v23 = *(_QWORD *)(v21 + 16);
        if (v23 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_1A569DE8C();
          v21 = v26;
          *a6 = v26;
        }
        *(_QWORD *)(v21 + 16) = v23 + 1;
        v24 = v21 + (v23 << 6);
        *(_QWORD *)(v24 + 32) = v18;
        *(_QWORD *)(v24 + 40) = v17;
        *(_QWORD *)(v24 + 48) = v35;
        *(_QWORD *)(v24 + 56) = v16;
        *(_QWORD *)(v24 + 64) = v34;
        *(_QWORD *)(v24 + 72) = v19;
        *(_QWORD *)(v24 + 80) = v33;
        *(_DWORD *)(v24 + 88) = v20;
        *(_BYTE *)(v24 + 92) = BYTE4(v20);
        sub_1A576DD14(v18, v17, v35, v16, v34, v19, v33, v20);
        v7 = v29;
        v8 = a3;
        if (v29 >= a3)
          goto LABEL_11;
      }
      swift_release();
      *a1 = v10;
      a1[1] = v11;
      *((_DWORD *)a1 + 4) = v12;
      *((_WORD *)a1 + 10) = v13;
      *((_BYTE *)a1 + 22) = v14;
    }
    swift_willThrow();
    v28 = v15;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (swift_dynamicCast())
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    else
    {

    }
  }
}

void sub_1A5765D2C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  __int16 v19;
  char v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  _QWORD v33[2];
  int v34;
  __int16 v35;
  char v36;
  id v37;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = a3;
    if (v7 >= a3)
    {
      sub_1A5718F9C();
      v9 = (void *)swift_allocError();
      *v27 = v8;
    }
    else
    {
      v9 = v6;
      v29 = a2 + 1;
      while (1)
      {
        v11 = *a1;
        v12 = a1[1];
        v13 = *((_DWORD *)a1 + 4);
        v14 = *((_WORD *)a1 + 10);
        v15 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(v33, a1, v7, v8);
        if (v6)
          break;
        swift_release();
        v16 = v33[0];
        v17 = v33[1];
        v18 = v34;
        v19 = v35;
        v20 = v36;
        v21 = *a6;
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569DF48();
          v21 = v25;
          *a6 = v25;
        }
        v23 = *(_QWORD *)(v21 + 16);
        if (v23 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_1A569DF48();
          v21 = v26;
        }
        *(_QWORD *)(v21 + 16) = v23 + 1;
        v24 = v21 + 24 * v23;
        *(_QWORD *)(v24 + 32) = v16;
        *(_QWORD *)(v24 + 40) = v17;
        *(_DWORD *)(v24 + 48) = v18;
        *(_WORD *)(v24 + 52) = v19;
        *(_BYTE *)(v24 + 54) = v20;
        *a6 = v21;
        swift_release();
        v7 = v29;
        v8 = a3;
      }
      swift_release();
      *a1 = v11;
      a1[1] = v12;
      *((_DWORD *)a1 + 4) = v13;
      *((_WORD *)a1 + 10) = v14;
      *((_BYTE *)a1 + 22) = v15;
    }
    swift_willThrow();
    v37 = v9;
    v28 = v9;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

void sub_1A5765F64(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unsigned __int8 v38;
  id v39;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = a3;
    if (v7 >= a3)
    {
      sub_1A5718F9C();
      v15 = (void *)swift_allocError();
      *v27 = v8;
    }
    else
    {
      v29 = a2 + 1;
      while (1)
      {
        v10 = *a1;
        v11 = a1[1];
        v12 = *((_DWORD *)a1 + 4);
        v13 = *((_WORD *)a1 + 10);
        v14 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(&v33, a1, v7, v8);
        v15 = v6;
        if (v6)
          break;
        swift_release();
        v16 = v33;
        v17 = v34;
        v18 = v35;
        v19 = v36;
        v20 = v37 | ((unint64_t)v38 << 32);
        v21 = *a6;
        sub_1A5666B64(v33, v34, v35, v36, v20);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569E0CC();
          v21 = v25;
          *a6 = v25;
        }
        v23 = *(_QWORD *)(v21 + 16);
        if (v23 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_1A569E0CC();
          v21 = v26;
          *a6 = v26;
        }
        *(_QWORD *)(v21 + 16) = v23 + 1;
        v24 = v21 + 40 * v23;
        *(_QWORD *)(v24 + 32) = v16;
        *(_QWORD *)(v24 + 40) = v17;
        *(_QWORD *)(v24 + 48) = v18;
        *(_QWORD *)(v24 + 56) = v19;
        *(_BYTE *)(v24 + 68) = BYTE4(v20);
        *(_DWORD *)(v24 + 64) = v20;
        sub_1A5666BFC(v16, v17, v18, v19, v20);
        v6 = 0;
        v7 = v29;
        v8 = a3;
      }
      swift_release();
      *a1 = v10;
      a1[1] = v11;
      *((_DWORD *)a1 + 4) = v12;
      *((_WORD *)a1 + 10) = v13;
      *((_BYTE *)a1 + 22) = v14;
    }
    swift_willThrow();
    v39 = v15;
    v28 = v15;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

uint64_t sub_1A57661C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  uint64_t v9;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  id v27;
  uint64_t v28;
  char v29;
  __int16 v30;
  int v31;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v9 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      v18 = (void *)swift_allocError();
      *v25 = a3;
    }
    else
    {
      v11 = v8;
      v12 = result;
      v28 = a2 + 2;
      while (1)
      {
        v13 = *(_QWORD *)v12;
        v14 = *(_QWORD *)(v12 + 8);
        v30 = *(_WORD *)(v12 + 20);
        v31 = *(_DWORD *)(v12 + 16);
        v29 = *(_BYTE *)(v12 + 22);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E10);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1A59ABD70;
        *(_QWORD *)(inited + 32) = sub_1A572C560;
        *(_QWORD *)(inited + 40) = 0;
        *(_QWORD *)(inited + 48) = sub_1A572C590;
        *(_QWORD *)(inited + 56) = 0;
        *(_QWORD *)(inited + 64) = sub_1A572C600;
        *(_QWORD *)(inited + 72) = 0;
        *(_QWORD *)(inited + 80) = sub_1A572C638;
        *(_QWORD *)(inited + 88) = 0;
        v16 = (_QWORD *)swift_allocObject();
        v16[2] = a5;
        v16[3] = a6;
        v16[4] = a7;
        v16[5] = a8;
        v17 = swift_allocObject();
        *(_QWORD *)(v17 + 16) = sub_1A576DE14;
        *(_QWORD *)(v17 + 24) = v16;
        *(_QWORD *)(inited + 96) = sub_1A572CB80;
        *(_QWORD *)(inited + 104) = v17;
        swift_retain();
        swift_retain();
        sub_1A5770930(inited, v12, v9, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 100);
        v18 = v11;
        if (v11)
        {
          swift_setDeallocating();
          sub_1A5774244();
          goto LABEL_14;
        }
        swift_setDeallocating();
        sub_1A5774244();
        if (v28 >= a3)
          break;
        sub_1A576B3AC(v12);
        swift_release();
        v19 = *a4;
        sub_1A576DDA8(v37, v38, v39, v40, v41, v42, v43, v44, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A56667EC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5666818);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a4 = v19;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569E0F4();
          v19 = v23;
          *a4 = v23;
        }
        v21 = *(_QWORD *)(v19 + 16);
        if (v21 >= *(_QWORD *)(v19 + 24) >> 1)
        {
          sub_1A569E0F4();
          v19 = v24;
          *a4 = v24;
        }
        *(_QWORD *)(v19 + 16) = v21 + 1;
        v22 = (_QWORD *)(v19 + (v21 << 6));
        v22[4] = v37;
        v22[5] = v38;
        v22[6] = v39;
        v22[7] = v40;
        v22[8] = v41;
        v22[9] = v42;
        v22[10] = v43;
        v22[11] = v44;
        sub_1A576DDA8(v37, v38, v39, v40, v41, v42, v43, v44, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A5666868, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A56668A4);
        v11 = 0;
      }
      sub_1A5718F9C();
      v18 = (void *)swift_allocError();
      *v26 = a3;
      swift_willThrow();
      sub_1A576DDA8(v37, v38, v39, v40, v41, v42, v43, v44, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A5666868, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A56668A4);
LABEL_14:
      swift_release();
      *(_QWORD *)v12 = v13;
      *(_QWORD *)(v12 + 8) = v14;
      *(_DWORD *)(v12 + 16) = v31;
      *(_WORD *)(v12 + 20) = v30;
      *(_BYTE *)(v12 + 22) = v29;
    }
    swift_willThrow();
    v27 = v18;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    return swift_release();
  }
  return result;
}

void sub_1A576663C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = a3;
    if (v7 >= a3)
    {
LABEL_11:
      sub_1A5718F9C();
      v15 = (void *)swift_allocError();
      *v27 = v8;
    }
    else
    {
      v29 = a2 + 1;
      while (1)
      {
        v10 = *a1;
        v11 = a1[1];
        v12 = *((_DWORD *)a1 + 4);
        v13 = *((_WORD *)a1 + 10);
        v14 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(&v36, a1, v7, v8);
        v15 = v6;
        if (v6)
          break;
        swift_release();
        v16 = v40;
        if (v40 == 251)
          return;
        v18 = v36;
        v17 = v37;
        v19 = v38;
        v20 = v41;
        v21 = *a6;
        v34 = v42;
        v35 = v39;
        v33 = v43;
        sub_1A576DDA8(v36, v37, v38, v39, v40, v41, v42, v43, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A56667EC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5666818);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569E0F4();
          v21 = v25;
          *a6 = v25;
        }
        v23 = *(_QWORD *)(v21 + 16);
        if (v23 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_1A569E0F4();
          v21 = v26;
          *a6 = v26;
        }
        *(_QWORD *)(v21 + 16) = v23 + 1;
        v24 = (_QWORD *)(v21 + (v23 << 6));
        v24[4] = v18;
        v24[5] = v17;
        v24[6] = v19;
        v24[7] = v35;
        v24[8] = v16;
        v24[9] = v20;
        v24[10] = v34;
        v24[11] = v33;
        sub_1A576DD6C(v18, v17, v19, v35, v16, v20, v34, v33);
        v7 = v29;
        v8 = a3;
        if (v29 >= a3)
          goto LABEL_11;
      }
      swift_release();
      *a1 = v10;
      a1[1] = v11;
      *((_DWORD *)a1 + 4) = v12;
      *((_WORD *)a1 + 10) = v13;
      *((_BYTE *)a1 + 22) = v14;
    }
    swift_willThrow();
    v28 = v15;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (swift_dynamicCast())
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    else
    {

    }
  }
}

void sub_1A57668C8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  char v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = a3;
    if (v7 >= a3)
    {
LABEL_11:
      sub_1A5718F9C();
      v15 = (void *)swift_allocError();
      *v27 = v8;
    }
    else
    {
      v29 = a2 + 1;
      while (1)
      {
        v10 = *a1;
        v11 = a1[1];
        v12 = *((_DWORD *)a1 + 4);
        v13 = *((_WORD *)a1 + 10);
        v14 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(&v36, a1, v7, v8);
        v15 = v6;
        if (v6)
          break;
        swift_release();
        v16 = v40;
        if (v40 >> 1 == 0xFFFFFFFF)
          return;
        v18 = v36;
        v17 = v37;
        v19 = v38;
        v20 = v41;
        v21 = *a6;
        v34 = v42;
        v35 = v39;
        v33 = v43;
        sub_1A5666914(v36, v37, v38, v39, v40, v41, v42, v43);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569E108();
          v21 = v25;
          *a6 = v25;
        }
        v23 = *(_QWORD *)(v21 + 16);
        if (v23 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_1A569E108();
          v21 = v26;
          *a6 = v26;
        }
        *(_QWORD *)(v21 + 16) = v23 + 1;
        v24 = (_QWORD *)(v21 + (v23 << 6));
        v24[4] = v18;
        v24[5] = v17;
        v24[6] = v19;
        v24[7] = v35;
        v24[8] = v16;
        v24[9] = v20;
        v24[10] = v34;
        v24[11] = v33;
        sub_1A576DD58(v18, v17, v19, v35, v16, v20, v34, v33);
        v7 = v29;
        v8 = a3;
        if (v29 >= a3)
          goto LABEL_11;
      }
      swift_release();
      *a1 = v10;
      a1[1] = v11;
      *((_DWORD *)a1 + 4) = v12;
      *((_WORD *)a1 + 10) = v13;
      *((_BYTE *)a1 + 22) = v14;
    }
    swift_willThrow();
    v28 = v15;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (swift_dynamicCast())
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    else
    {

    }
  }
}

uint64_t sub_1A5766B40(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  char v14;
  void *v15;
  void *v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  int v24;
  __int16 v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t *v29;
  id v30;
  __int16 v32;
  int v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v38 = v7;
    v39 = v5;
    v40 = v6;
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      v15 = (void *)swift_allocError();
      *v22 = a3;
    }
    else
    {
      v9 = result;
      v10 = a2 + 2;
      v11 = *(_QWORD *)result;
      v12 = *(_DWORD *)(result + 8);
      v13 = *(_DWORD *)(result + 12);
      v32 = *(_WORD *)(result + 20);
      v33 = *(_DWORD *)(result + 16);
      v14 = *(_BYTE *)(result + 22);
      if (a2 + 2 >= a3)
      {
LABEL_15:
        v34 = v14;
        sub_1A5718F9C();
        v15 = (void *)swift_allocError();
        *v23 = a3;
        swift_retain();
        v25 = v32;
        v24 = v33;
LABEL_16:
        swift_willThrow();
      }
      else
      {
        v15 = v4;
        while (1)
        {
          swift_retain();
          sub_1A576B3AC(v9);
          v34 = v14;
          if (v4)
          {
            *(_QWORD *)v9 = v11;
            *(_DWORD *)(v9 + 8) = v12;
            *(_DWORD *)(v9 + 12) = v13;
            v25 = v32;
            v24 = v33;
            *(_DWORD *)(v9 + 16) = v33;
            *(_WORD *)(v9 + 20) = v32;
            *(_BYTE *)(v9 + 22) = v14;
            goto LABEL_16;
          }
          swift_retain();
          sub_1A576AF5C(v9, v10, a3, 0, &v35);
          swift_release();
          v16 = (void *)v35;
          if ((v35 & 0x8000000000000000) != 0)
          {
            sub_1A56E9774();
            v15 = (void *)swift_allocError();
            *v26 = 0xD000000000000011;
            v26[1] = 0x80000001A5A0F840;
            v26[2] = 0xD000000000000020;
            v26[3] = 0x80000001A5A0F5E0;
            v26[4] = 167;
            swift_willThrow();
            goto LABEL_20;
          }
          if (v35 - 0x100000000 < 0xFFFFFFFF00000001)
            break;
          swift_release();
          v17 = *a4;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *a4 = v17;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1A569E1C4();
            v17 = v20;
            *a4 = v20;
          }
          v19 = *(_QWORD *)(v17 + 16);
          if (v19 >= *(_QWORD *)(v17 + 24) >> 1)
          {
            sub_1A569E1C4();
            v17 = v21;
          }
          *(_QWORD *)(v17 + 16) = v19 + 1;
          *(_DWORD *)(v17 + 4 * v19 + 32) = (_DWORD)v16;
          *a4 = v17;
          v11 = *(_QWORD *)v9;
          v12 = *(_DWORD *)(v9 + 8);
          v13 = *(_DWORD *)(v9 + 12);
          v32 = *(_WORD *)(v9 + 20);
          v33 = *(_DWORD *)(v9 + 16);
          v14 = *(_BYTE *)(v9 + 22);
          if (v10 >= a3)
            goto LABEL_15;
        }
        v35 = 0;
        v36 = 0xE000000000000000;
        sub_1A594C720();
        swift_bridgeObjectRelease();
        v35 = 0xD00000000000002BLL;
        v36 = 0x80000001A5A0FA80;
        v37 = v16;
        sub_1A594CC9C();
        sub_1A594B5F8();
        swift_bridgeObjectRelease();
        v27 = v35;
        v28 = v36;
        sub_1A56E9774();
        v15 = (void *)swift_allocError();
        *v29 = v27;
        v29[1] = v28;
        v29[2] = 0xD000000000000020;
        v29[3] = 0x80000001A5A0F5E0;
        v29[4] = 62;
        swift_willThrow();
LABEL_20:
        v25 = v32;
        v24 = v33;
      }
      swift_release();
      *(_QWORD *)v9 = v11;
      *(_DWORD *)(v9 + 8) = v12;
      *(_DWORD *)(v9 + 12) = v13;
      *(_DWORD *)(v9 + 16) = v24;
      *(_WORD *)(v9 + 20) = v25;
      *(_BYTE *)(v9 + 22) = v34;
    }
    swift_willThrow();
    v37 = v15;
    v30 = v15;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    return swift_release();
  }
  return result;
}

void sub_1A5766FA4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  uint64_t v7;
  void *v9;
  uint64_t v12;
  uint64_t v13;
  int v14;
  __int16 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v27;
  id v28;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v7 >= a3)
    {
      sub_1A5718F9C();
      v9 = (void *)swift_allocError();
      *v23 = a3;
    }
    else
    {
      v9 = v6;
      while (1)
      {
        v12 = *a1;
        v13 = a1[1];
        v14 = *((_DWORD *)a1 + 4);
        v15 = *((_WORD *)a1 + 10);
        v16 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(&v27, a1, v7, a3);
        if (v6)
          break;
        swift_release();
        v17 = v27;
        v18 = *a6;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569D6EC();
          v18 = v21;
          *a6 = v21;
        }
        v20 = *(_QWORD *)(v18 + 16);
        if (v20 >= *(_QWORD *)(v18 + 24) >> 1)
        {
          sub_1A569D6EC();
          v18 = v22;
        }
        *(_QWORD *)(v18 + 16) = v20 + 1;
        *(_QWORD *)(v18 + 8 * v20 + 32) = v17;
        *a6 = v18;
      }
      swift_release();
      *a1 = v12;
      a1[1] = v13;
      *((_DWORD *)a1 + 4) = v14;
      *((_WORD *)a1 + 10) = v15;
      *((_BYTE *)a1 + 22) = v16;
    }
    swift_willThrow();
    v28 = v9;
    v24 = v9;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

void sub_1A576719C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v29;
  uint64_t v30;
  id v31;

  v7 = v6;
  v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v9 = a3;
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      v7 = (void *)swift_allocError();
      *v24 = v9;
    }
    else
    {
      while (1)
      {
        v11 = *a1;
        v12 = a1[1];
        v13 = *((_DWORD *)a1 + 4);
        v14 = *((_WORD *)a1 + 10);
        v15 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(&v29, a1, v8, v9);
        if (v7)
          break;
        swift_release();
        v16 = v29;
        v17 = v30;
        v18 = *a6;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569E288();
          v18 = v22;
          *a6 = v22;
        }
        v20 = *(_QWORD *)(v18 + 16);
        if (v20 >= *(_QWORD *)(v18 + 24) >> 1)
        {
          sub_1A569E288();
          v18 = v23;
        }
        *(_QWORD *)(v18 + 16) = v20 + 1;
        v21 = v18 + 16 * v20;
        *(_QWORD *)(v21 + 32) = v16;
        *(_BYTE *)(v21 + 40) = v17;
        *a6 = v18;
        v9 = a3;
      }
      swift_release();
      *a1 = v11;
      a1[1] = v12;
      *((_DWORD *)a1 + 4) = v13;
      *((_WORD *)a1 + 10) = v14;
      *((_BYTE *)a1 + 22) = v15;
    }
    swift_willThrow();
    v31 = v7;
    v25 = v7;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

void sub_1A57673B4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  __int16 v19;
  char v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  _QWORD v33[2];
  int v34;
  __int16 v35;
  char v36;
  id v37;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = a3;
    if (v7 >= a3)
    {
      sub_1A5718F9C();
      v9 = (void *)swift_allocError();
      *v27 = v8;
    }
    else
    {
      v9 = v6;
      v29 = a2 + 1;
      while (1)
      {
        v11 = *a1;
        v12 = a1[1];
        v13 = *((_DWORD *)a1 + 4);
        v14 = *((_WORD *)a1 + 10);
        v15 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(v33, a1, v7, v8);
        if (v6)
          break;
        swift_release();
        v16 = v33[0];
        v17 = v33[1];
        v18 = v34;
        v19 = v35;
        v20 = v36;
        v21 = *a6;
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569E330();
          v21 = v25;
          *a6 = v25;
        }
        v23 = *(_QWORD *)(v21 + 16);
        if (v23 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_1A569E330();
          v21 = v26;
        }
        *(_QWORD *)(v21 + 16) = v23 + 1;
        v24 = v21 + 24 * v23;
        *(_QWORD *)(v24 + 32) = v16;
        *(_QWORD *)(v24 + 40) = v17;
        *(_DWORD *)(v24 + 48) = v18;
        *(_WORD *)(v24 + 52) = v19;
        *(_BYTE *)(v24 + 54) = v20;
        *a6 = v21;
        swift_release();
        v7 = v29;
        v8 = a3;
      }
      swift_release();
      *a1 = v11;
      a1[1] = v12;
      *((_DWORD *)a1 + 4) = v13;
      *((_WORD *)a1 + 10) = v14;
      *((_BYTE *)a1 + 22) = v15;
    }
    swift_willThrow();
    v37 = v9;
    v28 = v9;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

void sub_1A57675EC(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  _QWORD v29[3];
  id v30;

  v7 = v6;
  v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v9 = a3;
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      v7 = (void *)swift_allocError();
      *v24 = v9;
    }
    else
    {
      while (1)
      {
        v11 = *a1;
        v12 = a1[1];
        v13 = *((_DWORD *)a1 + 4);
        v14 = *((_WORD *)a1 + 10);
        v15 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(v29, a1, v8, v9);
        if (v7)
          break;
        swift_release();
        v16 = v29[0];
        v17 = v29[1];
        v18 = *a6;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569E350();
          v18 = v22;
          *a6 = v22;
        }
        v20 = *(_QWORD *)(v18 + 16);
        if (v20 >= *(_QWORD *)(v18 + 24) >> 1)
        {
          sub_1A569E350();
          v18 = v23;
          *a6 = v23;
        }
        *(_QWORD *)(v18 + 16) = v20 + 1;
        v21 = v18 + 16 * v20;
        *(_QWORD *)(v21 + 32) = v16;
        *(_QWORD *)(v21 + 40) = v17;
        swift_bridgeObjectRelease();
        v9 = a3;
      }
      swift_release();
      *a1 = v11;
      a1[1] = v12;
      *((_DWORD *)a1 + 4) = v13;
      *((_WORD *)a1 + 10) = v14;
      *((_BYTE *)a1 + 22) = v15;
    }
    swift_willThrow();
    v30 = v7;
    v25 = v7;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

uint64_t *sub_1A576780C(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  char *v36;
  id v37;
  char v39;
  __int16 v40;
  int v41;
  __int16 v42;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[48];

  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v5 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      v6 = (void *)swift_allocError();
      *v33 = v5;
    }
    else
    {
      v6 = v4;
      v7 = (uint64_t)result;
      v8 = a2 + 2;
      v9 = *result;
      v10 = *(_DWORD *)(v7 + 8);
      v11 = *(_DWORD *)(v7 + 12);
      v12 = *(_DWORD *)(v7 + 16);
      v13 = *(_WORD *)(v7 + 20);
      v44 = *(_BYTE *)(v7 + 22);
      if (a2 + 2 >= a3)
      {
LABEL_14:
        v34 = v9;
        sub_1A5718F9C();
        v6 = (void *)swift_allocError();
        *v35 = v5;
        v47 = v34;
        swift_retain();
LABEL_15:
        swift_willThrow();
      }
      else
      {
        v46 = a2 + 2;
        while (1)
        {
          v47 = v9;
          swift_retain();
          sub_1A576B3AC(v7);
          if (v6)
          {
            *(_QWORD *)v7 = v47;
            *(_DWORD *)(v7 + 8) = v10;
            *(_DWORD *)(v7 + 12) = v11;
            *(_DWORD *)(v7 + 16) = v12;
            *(_WORD *)(v7 + 20) = v13;
            *(_BYTE *)(v7 + 22) = v44;
            goto LABEL_15;
          }
          v42 = v13;
          v14 = *(_QWORD *)v7;
          v15 = *(_QWORD *)(v7 + 8);
          v40 = *(_WORD *)(v7 + 20);
          v41 = *(_DWORD *)(v7 + 16);
          v39 = *(_BYTE *)(v7 + 22);
          swift_retain();
          swift_retain();
          sub_1A57528B8(v7, v8, v5);
          ByteBufferView.init(_:)(v17, v18, v16 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v48);
          swift_retain();
          v19 = sub_1A56E6FE8((uint64_t)v48);
          if (!v20)
            break;
          v21 = v20;
          v45 = v19;
          swift_release();
          swift_retain_n();
          v22 = sub_1A5752F44((uint64_t *)v7, v46, v5);
          v24 = v23;
          v26 = v25;
          swift_release();
          swift_release_n();
          swift_release();
          v27 = *a4;
          swift_retain();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *a4 = v27;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1A569E408();
            v27 = v31;
            *a4 = v31;
          }
          v29 = *(_QWORD *)(v27 + 16);
          if (v29 >= *(_QWORD *)(v27 + 24) >> 1)
          {
            sub_1A569E408();
            v27 = v32;
            *a4 = v32;
          }
          *(_QWORD *)(v27 + 16) = v29 + 1;
          v30 = v27 + 40 * v29;
          *(_QWORD *)(v30 + 32) = v45;
          *(_QWORD *)(v30 + 40) = v21;
          *(_QWORD *)(v30 + 48) = v22;
          *(_QWORD *)(v30 + 56) = v24;
          *(_BYTE *)(v30 + 70) = BYTE6(v26);
          *(_WORD *)(v30 + 68) = WORD2(v26);
          *(_DWORD *)(v30 + 64) = v26;
          swift_release();
          swift_bridgeObjectRelease();
          v9 = *(_QWORD *)v7;
          v10 = *(_DWORD *)(v7 + 8);
          v11 = *(_DWORD *)(v7 + 12);
          v12 = *(_DWORD *)(v7 + 16);
          v13 = *(_WORD *)(v7 + 20);
          v44 = *(_BYTE *)(v7 + 22);
          v5 = a3;
          v8 = v46;
          if (v46 >= a3)
            goto LABEL_14;
        }
        sub_1A56E9774();
        v6 = (void *)swift_allocError();
        strcpy(v36, "Invalid UTF8");
        v36[13] = 0;
        *((_WORD *)v36 + 7) = -5120;
        *((_QWORD *)v36 + 2) = 0xD000000000000020;
        *((_QWORD *)v36 + 3) = 0x80000001A5A0F5E0;
        *((_QWORD *)v36 + 4) = 2455;
        swift_willThrow();
        swift_release();
        swift_release();
        *(_QWORD *)v7 = v14;
        *(_QWORD *)(v7 + 8) = v15;
        *(_DWORD *)(v7 + 16) = v41;
        *(_WORD *)(v7 + 20) = v40;
        *(_BYTE *)(v7 + 22) = v39;
        swift_willThrow();
        swift_release();
        v13 = v42;
      }
      swift_release();
      *(_QWORD *)v7 = v47;
      *(_DWORD *)(v7 + 8) = v10;
      *(_DWORD *)(v7 + 12) = v11;
      *(_DWORD *)(v7 + 16) = v12;
      *(_WORD *)(v7 + 20) = v13;
      *(_BYTE *)(v7 + 22) = v44;
    }
    swift_willThrow();
    v37 = v6;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    return (uint64_t *)swift_release();
  }
  return result;
}

void sub_1A5767D54(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned __int16 v37;
  char v38;
  id v39;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = a3;
    if (v7 >= a3)
    {
      sub_1A5718F9C();
      v15 = (void *)swift_allocError();
      *v27 = v8;
    }
    else
    {
      v29 = a2 + 1;
      while (1)
      {
        v10 = *a1;
        v11 = a1[1];
        v12 = *((_DWORD *)a1 + 4);
        v13 = *((_WORD *)a1 + 10);
        v14 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(&v33, a1, v7, v8);
        v15 = v6;
        if (v6)
          break;
        swift_release();
        v16 = v33;
        v17 = v34;
        v18 = v35;
        v19 = v36 | ((unint64_t)v37 << 32);
        v20 = v38;
        v21 = *a6;
        sub_1A5666CC4(v33, v34, v35, v19, v38);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569E570();
          v21 = v25;
          *a6 = v25;
        }
        v23 = *(_QWORD *)(v21 + 16);
        if (v23 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_1A569E570();
          v21 = v26;
          *a6 = v26;
        }
        *(_QWORD *)(v21 + 16) = v23 + 1;
        v24 = v21 + 32 * v23;
        *(_QWORD *)(v24 + 32) = v16;
        *(_QWORD *)(v24 + 40) = v17;
        *(_QWORD *)(v24 + 48) = v18;
        *(_DWORD *)(v24 + 56) = v19;
        *(_WORD *)(v24 + 60) = WORD2(v19);
        *(_BYTE *)(v24 + 62) = v20;
        sub_1A5666D04(v16, v17, v18, v19, v20);
        v6 = 0;
        v7 = v29;
        v8 = a3;
      }
      swift_release();
      *a1 = v10;
      a1[1] = v11;
      *((_DWORD *)a1 + 4) = v12;
      *((_WORD *)a1 + 10) = v13;
      *((_BYTE *)a1 + 22) = v14;
    }
    swift_willThrow();
    v39 = v15;
    v28 = v15;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

#error "1A5768130: call analysis failed (funcsize=97)"

uint64_t sub_1A5768144(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t))
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  id v29;
  uint64_t v30;

  v6 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v7 = a3;
    if (v6 >= a3)
    {
      sub_1A5718F9C();
      v8 = (void *)swift_allocError();
      *v28 = v7;
    }
    else
    {
      v8 = v5;
      v9 = result;
      v30 = a2 + 1;
      while (1)
      {
        v10 = *(_QWORD *)v9;
        v11 = *(_QWORD *)(v9 + 8);
        v12 = *(_DWORD *)(v9 + 16);
        v13 = *(_WORD *)(v9 + 20);
        v14 = *(_BYTE *)(v9 + 22);
        swift_retain();
        sub_1A5751974(v9, v6, v7);
        if (v8)
          break;
        sub_1A574052C(v9, v6, v7, a5);
        v8 = 0;
        v16 = v15;
        v18 = v17;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v19 = sub_1A56AB370(61, 0xE100000000000000, v16, v18);
        v21 = v20;
        swift_release();
        swift_bridgeObjectRelease();
        v22 = *a4;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a4 = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569E65C();
          v22 = v26;
          *a4 = v26;
        }
        v24 = *(_QWORD *)(v22 + 16);
        if (v24 >= *(_QWORD *)(v22 + 24) >> 1)
        {
          sub_1A569E65C();
          v22 = v27;
          *a4 = v27;
        }
        *(_QWORD *)(v22 + 16) = v24 + 1;
        v25 = v22 + 32 * v24;
        *(_QWORD *)(v25 + 32) = v16;
        *(_QWORD *)(v25 + 40) = v18;
        *(_QWORD *)(v25 + 48) = v19;
        *(_BYTE *)(v25 + 56) = v21 & 1;
        swift_bridgeObjectRelease();
        v6 = v30;
        v7 = a3;
      }
      swift_release();
      *(_QWORD *)v9 = v10;
      *(_QWORD *)(v9 + 8) = v11;
      *(_DWORD *)(v9 + 16) = v12;
      *(_WORD *)(v9 + 20) = v13;
      *(_BYTE *)(v9 + 22) = v14;
    }
    swift_willThrow();
    v29 = v8;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    return swift_release();
  }
  return result;
}

uint64_t sub_1A57683C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  __int16 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  uint64_t v32;
  int v34;

  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v5 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      v26 = (void *)swift_allocError();
      *v27 = v5;
    }
    else
    {
      v6 = result;
      v7 = *(_QWORD *)result;
      v8 = *(_DWORD *)(result + 12);
      v34 = *(_DWORD *)(result + 8);
      v9 = *(_DWORD *)(result + 16);
      v10 = *(_WORD *)(result + 20);
      v11 = *(_BYTE *)(result + 22);
      if (a2 + 2 >= a3)
      {
LABEL_13:
        sub_1A5718F9C();
        v4 = swift_allocError();
        *v28 = v5;
        swift_retain();
      }
      else
      {
        v32 = result;
        v30 = a2 + 2;
        while (1)
        {
          swift_retain();
          sub_1A576B3AC(v6);
          if (v4)
            break;
          sub_1A573C834();
          v13 = v12;
          v15 = v14;
          v17 = v16;
          v19 = v18;
          swift_release();
          v20 = *a4;
          sub_1A56664F4(v13, v15, v17, v19);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *a4 = v20;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1A569E670();
            v20 = v24;
            *a4 = v24;
          }
          v22 = *(_QWORD *)(v20 + 16);
          if (v22 >= *(_QWORD *)(v20 + 24) >> 1)
          {
            sub_1A569E670();
            v20 = v25;
            *a4 = v25;
          }
          *(_QWORD *)(v20 + 16) = v22 + 1;
          v23 = v20 + 32 * v22;
          *(_QWORD *)(v23 + 32) = v13;
          *(_QWORD *)(v23 + 40) = v15;
          *(_QWORD *)(v23 + 48) = v17;
          *(_DWORD *)(v23 + 56) = v19;
          *(_WORD *)(v23 + 60) = WORD2(v19);
          sub_1A5666598(v13, v15, v17, v19);
          v5 = a3;
          v6 = v32;
          v7 = *(_QWORD *)v32;
          v8 = *(_DWORD *)(v32 + 12);
          v34 = *(_DWORD *)(v32 + 8);
          v9 = *(_DWORD *)(v32 + 16);
          v10 = *(_WORD *)(v32 + 20);
          v11 = *(_BYTE *)(v32 + 22);
          v4 = 0;
          if (v30 >= a3)
            goto LABEL_13;
        }
        *(_QWORD *)v6 = v7;
        *(_DWORD *)(v6 + 8) = v34;
        *(_DWORD *)(v6 + 12) = v8;
        *(_DWORD *)(v6 + 16) = v9;
        *(_WORD *)(v6 + 20) = v10;
        *(_BYTE *)(v6 + 22) = v11;
      }
      swift_willThrow();
      swift_release();
      *(_QWORD *)v6 = v7;
      *(_DWORD *)(v6 + 8) = v34;
      *(_DWORD *)(v6 + 12) = v8;
      *(_DWORD *)(v6 + 16) = v9;
      *(_WORD *)(v6 + 20) = v10;
      *(_BYTE *)(v6 + 22) = v11;
      v26 = (void *)v4;
    }
    swift_willThrow();
    v29 = v26;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    return swift_release();
  }
  return result;
}

#error "1A5768874: call analysis failed (funcsize=104)"

#error "1A576898C: call analysis failed (funcsize=112)"

void sub_1A5768A54(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  __int16 v19;
  char v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  _QWORD v33[2];
  int v34;
  __int16 v35;
  char v36;
  id v37;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = a3;
    if (v7 >= a3)
    {
      sub_1A5718F9C();
      v9 = (void *)swift_allocError();
      *v27 = v8;
    }
    else
    {
      v9 = v6;
      v29 = a2 + 1;
      while (1)
      {
        v11 = *a1;
        v12 = a1[1];
        v13 = *((_DWORD *)a1 + 4);
        v14 = *((_WORD *)a1 + 10);
        v15 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(v33, a1, v7, v8);
        if (v6)
          break;
        swift_release();
        v16 = v33[0];
        v17 = v33[1];
        v18 = v34;
        v19 = v35;
        v20 = v36;
        v21 = *a6;
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569E758();
          v21 = v25;
          *a6 = v25;
        }
        v23 = *(_QWORD *)(v21 + 16);
        if (v23 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_1A569E758();
          v21 = v26;
        }
        *(_QWORD *)(v21 + 16) = v23 + 1;
        v24 = v21 + 24 * v23;
        *(_QWORD *)(v24 + 32) = v16;
        *(_QWORD *)(v24 + 40) = v17;
        *(_DWORD *)(v24 + 48) = v18;
        *(_WORD *)(v24 + 52) = v19;
        *(_BYTE *)(v24 + 54) = v20;
        *a6 = v21;
        swift_release();
        v7 = v29;
        v8 = a3;
      }
      swift_release();
      *a1 = v11;
      a1[1] = v12;
      *((_DWORD *)a1 + 4) = v13;
      *((_WORD *)a1 + 10) = v14;
      *((_BYTE *)a1 + 22) = v15;
    }
    swift_willThrow();
    v37 = v9;
    v28 = v9;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

void sub_1A5768C8C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unsigned __int16 v35;
  unsigned __int8 v36;
  char v37;
  id v38;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = a3;
    if (v7 >= a3)
    {
      sub_1A5718F9C();
      v15 = (void *)swift_allocError();
      *v26 = v8;
    }
    else
    {
      v28 = a2 + 1;
      while (1)
      {
        v10 = *a1;
        v11 = a1[1];
        v12 = *((_DWORD *)a1 + 4);
        v13 = *((_WORD *)a1 + 10);
        v14 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(&v32, a1, v7, v8);
        v15 = v6;
        if (v6)
          break;
        swift_release();
        v16 = v32;
        v17 = v33;
        v18 = v34 | ((unint64_t)(v35 | (v36 << 16)) << 32);
        v19 = v37;
        v20 = *a6;
        sub_1A56667D4(v32, v33, v18, v37);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569E818();
          v20 = v24;
          *a6 = v24;
        }
        v22 = *(_QWORD *)(v20 + 16);
        if (v22 >= *(_QWORD *)(v20 + 24) >> 1)
        {
          sub_1A569E818();
          v20 = v25;
          *a6 = v25;
        }
        *(_QWORD *)(v20 + 16) = v22 + 1;
        v23 = v20 + 24 * v22;
        *(_QWORD *)(v23 + 32) = v16;
        *(_QWORD *)(v23 + 40) = v17;
        *(_BYTE *)(v23 + 54) = BYTE6(v18);
        *(_WORD *)(v23 + 52) = WORD2(v18);
        *(_DWORD *)(v23 + 48) = v18;
        *(_BYTE *)(v23 + 55) = v19;
        sub_1A56667E0(v16, v17, v18, v19);
        v7 = v28;
        v8 = a3;
      }
      swift_release();
      *a1 = v10;
      a1[1] = v11;
      *((_DWORD *)a1 + 4) = v12;
      *((_WORD *)a1 + 10) = v13;
      *((_BYTE *)a1 + 22) = v14;
    }
    swift_willThrow();
    v38 = v15;
    v27 = v15;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

#error "1A5768FFC: call analysis failed (funcsize=115)"

void sub_1A57690C4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t *, uint64_t, uint64_t))
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;

  v6 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v7 = a3;
    if (v6 >= a3)
    {
      sub_1A5718F9C();
      v26 = (void *)swift_allocError();
      *v27 = v7;
    }
    else
    {
      v29 = a2 + 1;
      while (1)
      {
        v9 = *a1;
        v10 = a1[1];
        v11 = *((_DWORD *)a1 + 4);
        v12 = *((_WORD *)a1 + 10);
        v13 = *((_BYTE *)a1 + 22);
        swift_retain();
        v14 = a5(a1, v6, v7);
        if (v5)
          break;
        v17 = v14;
        v18 = v15;
        v19 = v16;
        swift_release();
        v20 = *a4;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a4 = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A569E998();
          v20 = v24;
          *a4 = v24;
        }
        v22 = *(_QWORD *)(v20 + 16);
        if (v22 >= *(_QWORD *)(v20 + 24) >> 1)
        {
          sub_1A569E998();
          v20 = v25;
          *a4 = v25;
        }
        *(_QWORD *)(v20 + 16) = v22 + 1;
        v23 = (_QWORD *)(v20 + 24 * v22);
        v23[4] = v17;
        v23[5] = v18;
        v23[6] = v19;
        swift_bridgeObjectRelease();
        v6 = v29;
        v7 = a3;
      }
      swift_release();
      *a1 = v9;
      a1[1] = v10;
      *((_DWORD *)a1 + 4) = v11;
      *((_WORD *)a1 + 10) = v12;
      *((_BYTE *)a1 + 22) = v13;
      v26 = v5;
    }
    swift_willThrow();
    v28 = v26;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

void sub_1A57692E8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, id *, uint64_t *, uint64_t, uint64_t))
{
  void *v4;
  uint64_t v5;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  char v13;
  _QWORD *v14;
  id v15;
  id v17;
  uint64_t v18;

  v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1A5718F9C();
      v7 = (void *)swift_allocError();
      *v14 = a3;
    }
    else
    {
      v7 = v4;
      while (1)
      {
        v9 = *a1;
        v10 = a1[1];
        v11 = *((_DWORD *)a1 + 4);
        v12 = *((_WORD *)a1 + 10);
        v13 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(&v18, &v17, a1, v5, a3);
        if (v4)
          break;
        swift_release();
        sub_1A5724928();
      }
      swift_release();
      *a1 = v9;
      a1[1] = v10;
      *((_DWORD *)a1 + 4) = v11;
      *((_WORD *)a1 + 10) = v12;
      *((_BYTE *)a1 + 22) = v13;
    }
    swift_willThrow();
    v17 = v7;
    v15 = v7;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

void sub_1A576947C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, id *, uint64_t *, uint64_t, uint64_t), uint64_t a5, _QWORD *a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  BOOL v38;
  BOOL v39;
  BOOL v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v44;
  id v45;
  uint64_t v47;
  uint64_t *v49;
  id v51;
  id v52[2];
  uint64_t v53;
  uint64_t v54;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
    goto LABEL_66;
  v8 = a3;
  if (v7 >= a3)
  {
    sub_1A5718F9C();
    v9 = (void *)swift_allocError();
    *v44 = v8;
LABEL_60:
    swift_willThrow();
    v52[0] = v9;
    v45 = v9;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    return;
  }
  v9 = v6;
  v49 = a6 + 2;
  v47 = a2 + 1;
  while (1)
  {
    v11 = *a1;
    v12 = a1[1];
    v13 = *((_DWORD *)a1 + 4);
    v14 = *((_WORD *)a1 + 10);
    v15 = *((_BYTE *)a1 + 22);
    swift_retain();
    v16 = v9;
    a4(&v53, v52, a1, v7, v8);
    if (v9)
    {
      swift_release();
      *a1 = v11;
      a1[1] = v12;
      *((_DWORD *)a1 + 4) = v13;
      *((_WORD *)a1 + 10) = v14;
      *((_BYTE *)a1 + 22) = v15;
      goto LABEL_60;
    }
    swift_release();
    v17 = v53;
    v18 = v54;
    v19 = v52[1];
    v51 = v52[0];
    v20 = (_QWORD *)a6[1];
    v21 = v20[2];
    if (*a6)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      swift_retain();
      sub_1A576D4C0(v17, v18, (uint64_t)(v20 + 4));
      v23 = v22;
      v25 = v24;
      v27 = v26;
      swift_release();
      swift_release();
      if ((v25 & 1) != 0)
      {
        v9 = 0;
        goto LABEL_23;
      }
    }
    else
    {
      if (!v21)
        goto LABEL_22;
      v28 = v20[4] == v53 && v20[5] == v54;
      if (v28 || (sub_1A594CD38() & 1) != 0)
      {
        v23 = 0;
      }
      else
      {
        if (v21 == 1)
          goto LABEL_22;
        v38 = v20[6] == v17 && v20[7] == v18;
        if (v38 || (sub_1A594CD38() & 1) != 0)
        {
          v23 = 1;
        }
        else
        {
          if (v21 == 2)
            goto LABEL_22;
          v39 = v20[8] == v17 && v20[9] == v18;
          if (v39 || (sub_1A594CD38() & 1) != 0)
          {
            v23 = 2;
          }
          else
          {
            if (v21 == 3)
              goto LABEL_22;
            v40 = v20[10] == v17 && v20[11] == v18;
            if (!v40 && (sub_1A594CD38() & 1) == 0)
            {
              v41 = v20 + 13;
              v42 = 4;
              while (1)
              {
                v9 = v16;
                if (v21 == v42)
                  break;
                if (*(v41 - 1) == v17 && *v41 == v18)
                {
                  v23 = v42;
                  goto LABEL_15;
                }
                v23 = v42++;
                v41 += 2;
                if ((sub_1A594CD38() & 1) != 0)
                  goto LABEL_15;
              }
LABEL_22:
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v27 = 0;
LABEL_23:
              v7 = v47;
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              sub_1A576CB1C(v17, v18, v27, (void (*)(uint64_t))sub_1A568367C);
              v33 = a6[2];
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              a6[2] = v33;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1A5683778(0, *(_QWORD *)(v33 + 16) + 1, 1);
                v33 = *v49;
              }
              v36 = *(_QWORD *)(v33 + 16);
              v35 = *(_QWORD *)(v33 + 24);
              if (v36 >= v35 >> 1)
              {
                sub_1A5683778(v35 > 1, v36 + 1, 1);
                v33 = *v49;
              }
              *(_QWORD *)(v33 + 16) = v36 + 1;
              v37 = v33 + 16 * v36;
              *(_QWORD *)(v37 + 32) = v51;
              *(_QWORD *)(v37 + 40) = v19;
              *v49 = v33;
              goto LABEL_28;
            }
            v23 = 3;
          }
        }
      }
LABEL_15:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    v7 = v47;
    v29 = *v49;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v30 = swift_isUniquelyReferenced_nonNull_native();
    *v49 = v29;
    if ((v30 & 1) == 0)
    {
      sub_1A576C3DC(v29);
      v29 = v31;
      *v49 = v31;
    }
    if ((v23 & 0x8000000000000000) != 0)
      break;
    if (v23 >= *(_QWORD *)(v29 + 16))
      goto LABEL_65;
    v32 = v29 + 16 * v23;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    v9 = 0;
    *(_QWORD *)(v32 + 32) = v51;
    *(_QWORD *)(v32 + 40) = v19;
LABEL_28:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v8 = a3;
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
}

void sub_1A5769918(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, _QWORD *a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  uint64_t v41;
  BOOL v42;
  BOOL v43;
  BOOL v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v48;
  id v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  unsigned __int8 v63;
  char v64;
  id v65;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
    goto LABEL_67;
  v8 = a3;
  if (v7 >= a3)
  {
    sub_1A5718F9C();
    v15 = (void *)swift_allocError();
    *v48 = v8;
LABEL_61:
    swift_willThrow();
    v65 = v15;
    v49 = v15;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    return;
  }
  v9 = a6 + 2;
  v50 = a6 + 2;
  v52 = a2 + 1;
  while (1)
  {
    v10 = *a1;
    v11 = a1[1];
    v12 = *((_DWORD *)a1 + 4);
    v13 = *((_WORD *)a1 + 10);
    v14 = *((_BYTE *)a1 + 22);
    swift_retain();
    a4(&v59, a1, v7, v8);
    v15 = v6;
    if (v6)
    {
      swift_release();
      *a1 = v10;
      a1[1] = v11;
      *((_DWORD *)a1 + 4) = v12;
      *((_WORD *)a1 + 10) = v13;
      *((_BYTE *)a1 + 22) = v14;
      goto LABEL_61;
    }
    swift_release();
    v17 = v59;
    v16 = v60;
    v57 = v60;
    v58 = v61;
    v18 = v62 | ((unint64_t)v63 << 32);
    v19 = v64;
    v20 = (_QWORD *)a6[1];
    v21 = v20[2];
    v22 = HIDWORD(v18);
    if (*a6)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      swift_retain();
      sub_1A566658C(v58, v18, v19);
      v51 = v17;
      sub_1A576D4C0(v17, v16, (uint64_t)(v20 + 4));
      v24 = v23;
      v26 = v25;
      v28 = v27;
      swift_release();
      swift_release();
      if ((v26 & 1) != 0)
      {
        v16 = v57;
        LOBYTE(v22) = BYTE4(v18);
        v17 = v51;
        goto LABEL_24;
      }
      v9 = v50;
      LOBYTE(v22) = BYTE4(v18);
    }
    else
    {
      if (!v21)
        goto LABEL_23;
      v29 = v20[4] == v59 && v20[5] == v60;
      if (v29 || (sub_1A594CD38() & 1) != 0)
      {
        v24 = 0;
      }
      else
      {
        if (v21 == 1)
          goto LABEL_23;
        v42 = v20[6] == v17 && v20[7] == v16;
        if (v42 || (sub_1A594CD38() & 1) != 0)
        {
          v24 = 1;
        }
        else
        {
          if (v21 == 2)
            goto LABEL_23;
          v43 = v20[8] == v17 && v20[9] == v16;
          if (v43 || (sub_1A594CD38() & 1) != 0)
          {
            v24 = 2;
          }
          else
          {
            if (v21 == 3)
              goto LABEL_23;
            v44 = v20[10] == v17 && v20[11] == v16;
            if (!v44 && (sub_1A594CD38() & 1) == 0)
            {
              v45 = v20 + 13;
              v46 = 4;
              while (1)
              {
                v16 = v57;
                if (v21 == v46)
                  break;
                if (*(v45 - 1) == v17 && *v45 == v57)
                {
                  v24 = v46;
                  goto LABEL_15;
                }
                v24 = v46++;
                v45 += 2;
                if ((sub_1A594CD38() & 1) != 0)
                  goto LABEL_15;
              }
LABEL_23:
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              sub_1A566658C(v58, v18, v19);
              v28 = 0;
LABEL_24:
              sub_1A566658C(v58, v18, v19);
              sub_1A576CB1C(v17, v16, v28, (void (*)(uint64_t))sub_1A568367C);
              v38 = a6[2];
              sub_1A566658C(v58, v18, v19);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              a6[2] = v38;
              v9 = v50;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1A5683644();
                v38 = *v50;
              }
              v40 = *(_QWORD *)(v38 + 16);
              if (v40 >= *(_QWORD *)(v38 + 24) >> 1)
              {
                sub_1A5683644();
                v38 = *v50;
              }
              *(_QWORD *)(v38 + 16) = v40 + 1;
              v41 = v38 + 16 * v40;
              *(_QWORD *)(v41 + 32) = v58;
              *(_DWORD *)(v41 + 40) = v18;
              *(_BYTE *)(v41 + 44) = v22;
              *(_BYTE *)(v41 + 45) = v19;
              *v50 = v38;
              goto LABEL_29;
            }
            v24 = 3;
          }
        }
      }
LABEL_15:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A566658C(v58, v18, v19);
    }
    v30 = *v9;
    sub_1A566658C(v58, v18, v19);
    v31 = swift_isUniquelyReferenced_nonNull_native();
    *v9 = v30;
    if ((v31 & 1) == 0)
    {
      sub_1A576C2E0();
      v30 = v32;
      *v9 = v32;
    }
    if ((v24 & 0x8000000000000000) != 0)
      break;
    if (v24 >= *(_QWORD *)(v30 + 16))
      goto LABEL_66;
    v33 = v30 + 16 * v24;
    v34 = *(_DWORD *)(v33 + 40);
    v33 += 40;
    v35 = *(_QWORD *)(v33 - 8);
    v36 = v34 | ((unint64_t)*(unsigned __int8 *)(v33 + 4) << 32);
    v37 = *(_BYTE *)(v33 + 5);
    sub_1A566658C(v58, v18, v19);
    sub_1A5666618(v35, v36, v37);
    *(_QWORD *)(v33 - 8) = v58;
    *(_BYTE *)(v33 + 4) = v22;
    *(_DWORD *)v33 = v18;
    *(_BYTE *)(v33 + 5) = v19;
LABEL_29:
    swift_bridgeObjectRelease();
    sub_1A5666618(v58, v18, v19);
    sub_1A5666618(v58, v18, v19);
    swift_bridgeObjectRelease();
    sub_1A5666618(v58, v18, v19);
    v6 = 0;
    v7 = v52;
    v8 = a3;
  }
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
}

void sub_1A5769E8C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, uint64_t *, uint64_t, uint64_t))
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  _QWORD v25[5];
  unsigned int v26;
  unsigned __int16 v27;
  unsigned __int8 v28;

  v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v6 = a3;
    if (v5 >= a3)
    {
LABEL_7:
      sub_1A5718F9C();
      v7 = (void *)swift_allocError();
      *v21 = v6;
    }
    else
    {
      v7 = v4;
      while (1)
      {
        v9 = *a1;
        v10 = a1[1];
        v11 = *((_DWORD *)a1 + 4);
        v12 = *((_WORD *)a1 + 10);
        v13 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(v25, a1, v5, v6);
        if (v7)
          break;
        swift_release();
        v14 = v25[0];
        if (!v25[0])
          return;
        v15 = v26 | ((unint64_t)(v27 | (v28 << 16)) << 32);
        v16 = v25[4];
        v17 = v5;
        v18 = v25[1];
        v19 = v25[2] & 0xFFFFFFFFFFFFFFLL;
        swift_retain();
        v20 = swift_retain();
        sub_1A5724A7C(v20, v16, v15, v14, v18, v19);
        v5 = v17;
        v6 = a3;
        v7 = 0;
        sub_1A576DBBC(v14);
        if (v5 >= a3)
          goto LABEL_7;
      }
      swift_release();
      *a1 = v9;
      a1[1] = v10;
      *((_DWORD *)a1 + 4) = v11;
      *((_WORD *)a1 + 10) = v12;
      *((_BYTE *)a1 + 22) = v13;
    }
    swift_willThrow();
    v22 = v7;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (swift_dynamicCast())
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    else
    {

    }
  }
}

void sub_1A576A090(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, uint64_t *, uint64_t, uint64_t))
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  _QWORD v26[4];
  unsigned int v27;
  unsigned __int16 v28;

  v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v6 = a3;
    if (v5 >= a3)
    {
LABEL_7:
      sub_1A5718F9C();
      v7 = (void *)swift_allocError();
      *v23 = v6;
    }
    else
    {
      v7 = v4;
      while (1)
      {
        v9 = *a1;
        v10 = a1[1];
        v11 = *((_DWORD *)a1 + 4);
        v12 = *((_WORD *)a1 + 10);
        v13 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(v26, a1, v5, v6);
        if (v7)
          break;
        swift_release();
        v14 = v26[0];
        if (!v26[0])
          return;
        v15 = v27 | ((unint64_t)v28 << 32);
        v16 = v5;
        v17 = v6;
        v19 = v26[2];
        v18 = v26[3];
        v20 = v26[1];
        v21 = HIBYTE(v28) & 1;
        swift_retain();
        sub_1A566658C(v18, v15, v21);
        sub_1A5724C8C(v18, v15 & 0x1FFFFFFFFFFLL, v14, v20, v19 & 0xFFFFFFFFFFFFFFLL);
        v22 = v19;
        v6 = v17;
        v5 = v16;
        v7 = 0;
        sub_1A576DBE8(v14, v20, v22, v18, v15);
        if (v5 >= v6)
          goto LABEL_7;
      }
      swift_release();
      *a1 = v9;
      a1[1] = v10;
      *((_DWORD *)a1 + 4) = v11;
      *((_WORD *)a1 + 10) = v12;
      *((_BYTE *)a1 + 22) = v13;
    }
    swift_willThrow();
    v24 = v7;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (swift_dynamicCast())
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    else
    {

    }
  }
}

void sub_1A576A294(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  BOOL v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  uint64_t v34;
  BOOL v35;
  BOOL v36;
  BOOL v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v41;
  id v42;
  uint64_t v44;
  uint64_t *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
    goto LABEL_66;
  v8 = a3;
  if (v7 >= a3)
  {
    sub_1A5718F9C();
    v9 = (void *)swift_allocError();
    *v41 = v8;
LABEL_60:
    swift_willThrow();
    v53 = v9;
    v42 = v9;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    return;
  }
  v9 = v6;
  v46 = a6 + 2;
  v44 = a2 + 1;
  while (1)
  {
    v11 = *a1;
    v12 = a1[1];
    v13 = *((_DWORD *)a1 + 4);
    v14 = *((_WORD *)a1 + 10);
    v15 = *((_BYTE *)a1 + 22);
    swift_retain();
    v16 = v9;
    a4(&v49, a1, v7, v8);
    if (v9)
    {
      swift_release();
      *a1 = v11;
      a1[1] = v12;
      *((_DWORD *)a1 + 4) = v13;
      *((_WORD *)a1 + 10) = v14;
      *((_BYTE *)a1 + 22) = v15;
      goto LABEL_60;
    }
    swift_release();
    v17 = v49;
    v18 = v50;
    v19 = v52;
    v48 = v51;
    v20 = *a6;
    v21 = (_QWORD *)a6[1];
    v22 = v21[2];
    if (*a6)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      swift_retain();
      v23 = sub_1A576D70C(v17, v18, (uint64_t)(v21 + 4), v22, (_QWORD *)(v20 + 16));
      v25 = v24;
      swift_release();
      swift_release();
      if ((v25 & 1) != 0)
      {
        v9 = 0;
        goto LABEL_23;
      }
    }
    else
    {
      if (!v22)
        goto LABEL_22;
      v26 = v21[4] == v49 && v21[5] == v50;
      if (v26 || (sub_1A594CD38() & 1) != 0)
      {
        v23 = 0;
      }
      else
      {
        if (v22 == 1)
          goto LABEL_22;
        v35 = v21[6] == v17 && v21[7] == v18;
        if (v35 || (sub_1A594CD38() & 1) != 0)
        {
          v23 = 1;
        }
        else
        {
          if (v22 == 2)
            goto LABEL_22;
          v36 = v21[8] == v17 && v21[9] == v18;
          if (v36 || (sub_1A594CD38() & 1) != 0)
          {
            v23 = 2;
          }
          else
          {
            if (v22 == 3)
              goto LABEL_22;
            v37 = v21[10] == v17 && v21[11] == v18;
            if (!v37 && (sub_1A594CD38() & 1) == 0)
            {
              v38 = v21 + 13;
              v39 = 4;
              while (1)
              {
                v9 = v16;
                if (v22 == v39)
                  break;
                if (*(v38 - 1) == v17 && *v38 == v18)
                {
                  v23 = v39;
                  goto LABEL_15;
                }
                v23 = v39++;
                v38 += 2;
                if ((sub_1A594CD38() & 1) != 0)
                  goto LABEL_15;
              }
LABEL_22:
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_23:
              v7 = v44;
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              sub_1A576CE18(v17, v18);
              v31 = a6[2];
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              a6[2] = v31;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1A5683740();
                v31 = *v46;
              }
              v33 = *(_QWORD *)(v31 + 16);
              if (v33 >= *(_QWORD *)(v31 + 24) >> 1)
              {
                sub_1A5683740();
                v31 = *v46;
              }
              *(_QWORD *)(v31 + 16) = v33 + 1;
              v34 = v31 + 16 * v33;
              *(_QWORD *)(v34 + 32) = v48;
              *(_QWORD *)(v34 + 40) = v19;
              *v46 = v31;
              goto LABEL_28;
            }
            v23 = 3;
          }
        }
      }
LABEL_15:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    v7 = v44;
    v27 = *v46;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v28 = swift_isUniquelyReferenced_nonNull_native();
    *v46 = v27;
    if ((v28 & 1) == 0)
    {
      sub_1A576C3A0();
      v27 = v29;
      *v46 = v29;
    }
    if ((v23 & 0x8000000000000000) != 0)
      break;
    if (v23 >= *(_QWORD *)(v27 + 16))
      goto LABEL_65;
    v30 = v27 + 16 * v23;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    v9 = 0;
    *(_QWORD *)(v30 + 32) = v48;
    *(_QWORD *)(v30 + 40) = v19;
LABEL_28:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v8 = a3;
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
}

void sub_1A576A724(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  char v15;
  void *v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  size_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  BOOL v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  BOOL v44;
  char v46;
  uint64_t v47;
  size_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  BOOL v60;
  int v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  id v71;
  uint64_t *v72;
  uint64_t v73;
  unint64_t v77;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  char v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  char v103;

  v7 = a2 + 1;
  if (__OFADD__(a2, 1))
    goto LABEL_71;
  v8 = a3;
  if (v7 >= a3)
  {
LABEL_59:
    sub_1A5718F9C();
    v9 = (void *)swift_allocError();
    *v70 = v8;
LABEL_61:
    swift_willThrow();
    v71 = v9;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (swift_dynamicCast())
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    else
    {

    }
    return;
  }
  v9 = v6;
  v10 = a6 + 2;
  v72 = a6 + 2;
  v73 = a2 + 1;
  while (1)
  {
    v11 = *a1;
    v12 = a1[1];
    v13 = *((_DWORD *)a1 + 4);
    v14 = *((_WORD *)a1 + 10);
    v15 = *((_BYTE *)a1 + 22);
    swift_retain();
    v16 = v9;
    a4(&v92, a1, v7, v8);
    if (v9)
    {
      swift_release();
      *a1 = v11;
      a1[1] = v12;
      *((_DWORD *)a1 + 4) = v13;
      *((_WORD *)a1 + 10) = v14;
      *((_BYTE *)a1 + 22) = v15;
      goto LABEL_61;
    }
    swift_release();
    v87 = v92;
    if (!v92)
      return;
    v17 = v93;
    v80 = v95;
    v81 = v93;
    v18 = HIDWORD(v93);
    v19 = HIDWORD(v94);
    v86 = v94;
    v84 = WORD2(v94);
    v85 = BYTE6(v94);
    v20 = *a6;
    v83 = a6[1];
    if (!*a6)
      break;
    sub_1A594CE64();
    swift_beginAccess();
    v21 = v18 - v17;
    if (v18 < v17)
      goto LABEL_66;
    v22 = v85 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v19 << 8);
    v82 = v17;
    sub_1A594CE70();
    v23 = sub_1A594CED0();
    v24 = 1 << *(_QWORD *)(v20 + 16);
    v25 = __OFSUB__(v24, 1);
    v26 = v24 - 1;
    if (v25)
      goto LABEL_67;
    v27 = v26 & v23;
    v28 = sub_1A594A3D4();
    *(_QWORD *)&v100 = v20 + 16;
    *((_QWORD *)&v100 + 1) = v20 + 32;
    *(_QWORD *)&v101 = v27;
    *((_QWORD *)&v101 + 1) = v28;
    *(_QWORD *)&v102 = v29;
    *((_QWORD *)&v102 + 1) = v30;
    v103 = 0;
    v31 = sub_1A594A3F8();
    v33 = v32;
    v88 = v100;
    v89 = v101;
    v90 = v102;
    v91 = v103;
    swift_retain();
    v34 = v80;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    if ((v33 & 1) != 0)
    {
LABEL_26:
      swift_release();
      v9 = 0;
LABEL_53:
      swift_release();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v77 = v77 & 0xFF00000000000000 | v86 & 0xFFFFFFFFFFFFFFLL;
      sub_1A576CC98(v87, v81, v77, v27, (void (*)(uint64_t))sub_1A5683724);
      v66 = a6[2];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      a6[2] = v66;
      v7 = v73;
      v8 = a3;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A5683794(0, *(_QWORD *)(v66 + 16) + 1, 1);
        v66 = *v10;
      }
      v69 = *(_QWORD *)(v66 + 16);
      v68 = *(_QWORD *)(v66 + 24);
      if (v69 >= v68 >> 1)
      {
        sub_1A5683794(v68 > 1, v69 + 1, 1);
        v66 = *v10;
      }
      *(_QWORD *)(v66 + 16) = v69 + 1;
      *(_QWORD *)(v66 + 8 * v69 + 32) = v34;
      *v10 = v66;
      goto LABEL_58;
    }
    while (1)
    {
      v35 = v83 + 32 + 24 * v31;
      v37 = *(unsigned int *)(v35 + 8);
      v36 = *(_DWORD *)(v35 + 12);
      v38 = v36 >= v37;
      v39 = v36 - v37;
      if (!v38)
      {
        __break(1u);
        goto LABEL_65;
      }
      if (v39 == (_DWORD)v21)
      {
        v40 = *(_QWORD *)v35;
        v41 = *(unsigned __int16 *)(v35 + 20);
        v42 = *(unsigned __int8 *)(v35 + 22);
        v43 = *(_DWORD *)(v35 + 16) == (_DWORD)v86 && (_DWORD)v41 == v84;
        v44 = v43 && (_DWORD)v42 == (_DWORD)v85;
        if (v44 && v40 == v87)
          break;
        swift_beginAccess();
        if (!memcmp((const void *)(*(_QWORD *)(v40 + 24) + (v42 | (v41 << 8)) + v37), (const void *)(*(_QWORD *)(v87 + 24) + v22 + v82), v21))break;
      }
      sub_1A594A410();
      v96 = v88;
      v97 = v89;
      v98 = v90;
      v99 = v91;
      v27 = v89;
      v31 = sub_1A594A3F8();
      if ((v46 & 1) != 0)
      {
        v10 = v72;
        v34 = v80;
        goto LABEL_26;
      }
    }
    swift_release();
LABEL_47:
    swift_release();
    v10 = v72;
    v63 = *v72;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v64 = swift_isUniquelyReferenced_nonNull_native();
    *v72 = v63;
    v9 = 0;
    v7 = v73;
    v8 = a3;
    if ((v64 & 1) == 0)
    {
      sub_1A576C418(v63);
      v63 = v65;
      *v72 = v65;
    }
    if ((v31 & 0x8000000000000000) != 0)
      goto LABEL_68;
    if (v31 >= *(_QWORD *)(v63 + 16))
      goto LABEL_69;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v63 + 8 * v31 + 32) = v80;
LABEL_58:
    swift_release();
    swift_bridgeObjectRelease_n();
    sub_1A576DAFC(v87);
    if (v7 >= v8)
      goto LABEL_59;
  }
  v47 = *(_QWORD *)(a6[1] + 16);
  if (!v47)
  {
    swift_retain();
    v34 = v80;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    v27 = 0;
    goto LABEL_53;
  }
  v48 = (HIDWORD(v93) - v93);
  if (HIDWORD(v93) < v93)
    goto LABEL_70;
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_beginAccess();
  v49 = v83;
  v50 = 0;
  v31 = 0;
  v79 = v17;
  v51 = v85 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v19 << 8);
  while (1)
  {
    v52 = v49 + v50;
    v54 = *(unsigned int *)(v49 + v50 + 40);
    v53 = *(_DWORD *)(v49 + v50 + 44);
    v38 = v53 >= v54;
    v55 = v53 - v54;
    if (!v38)
      break;
    if (v55 == (_DWORD)v48)
    {
      v56 = *(_QWORD *)(v52 + 32);
      v57 = *(unsigned __int16 *)(v52 + 52);
      v58 = *(unsigned __int8 *)(v52 + 54);
      v59 = *(_DWORD *)(v52 + 48) == (_DWORD)v86 && (_DWORD)v57 == v84;
      v60 = v59 && (_DWORD)v58 == (_DWORD)v85;
      if (v60 && v56 == v87)
        goto LABEL_47;
      swift_beginAccess();
      v62 = memcmp((const void *)(*(_QWORD *)(v56 + 24) + (v58 | (v57 << 8)) + v54), (const void *)(*(_QWORD *)(v87 + 24) + v51 + v79), v48);
      v49 = v83;
      if (!v62)
        goto LABEL_47;
    }
    ++v31;
    v50 += 24;
    if (v47 == v31)
    {
      v27 = 0;
      v9 = v16;
      v10 = v72;
      v34 = v80;
      goto LABEL_53;
    }
  }
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
}

void sub_1A576ADC0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t))
{
  void *v4;
  uint64_t v5;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  char v13;
  _QWORD *v14;
  id v15;
  uint64_t v17;
  id v18;

  v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1A5718F9C();
      v7 = (void *)swift_allocError();
      *v14 = a3;
    }
    else
    {
      v7 = v4;
      while (1)
      {
        v9 = *a1;
        v10 = a1[1];
        v11 = *((_DWORD *)a1 + 4);
        v12 = *((_WORD *)a1 + 10);
        v13 = *((_BYTE *)a1 + 22);
        swift_retain();
        a4(&v17, a1, v5, a3);
        if (v4)
          break;
        swift_release();
        sub_1A5724EA4();
      }
      swift_release();
      *a1 = v9;
      a1[1] = v10;
      *((_DWORD *)a1 + 4) = v11;
      *((_WORD *)a1 + 10) = v12;
      *((_BYTE *)a1 + 22) = v13;
    }
    swift_willThrow();
    v18 = v7;
    v15 = v7;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

void sub_1A576AF5C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, unint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unint64_t v19;
  char v20;
  char v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  BOOL v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  unsigned __int8 v33;
  unint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  unint64_t v37;
  __int16 v38;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  unint64_t v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  unint64_t v48;
  unint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  _BYTE v54[40];

  sub_1A57528B8(a1, a2, a3);
  if (!v5)
  {
    ByteBufferView.init(_:)(v8, v9, v10 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v54);
    OUTLINED_FUNCTION_17_0();
    v11 = sub_1A56E6FE8((uint64_t)v54);
    if (!v12)
    {
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      strcpy(v22, "Invalid UTF8");
      v22[13] = 0;
      *((_WORD *)v22 + 7) = -5120;
      OUTLINED_FUNCTION_15_35((uint64_t)v22, 0xD000000000000020);
      v24 = 176;
LABEL_46:
      OUTLINED_FUNCTION_11_20(v23, v24);
      OUTLINED_FUNCTION_23();
      return;
    }
    v13 = v11;
    v14 = v12;
    v15 = HIBYTE(v12) & 0xF;
    v16 = v11 & 0xFFFFFFFFFFFFLL;
    if ((v14 & 0x2000000000000000) != 0)
      v17 = v15;
    else
      v17 = v11 & 0xFFFFFFFFFFFFLL;
    if (!v17)
      goto LABEL_45;
    if ((v14 & 0x1000000000000000) != 0)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v51 = OUTLINED_FUNCTION_344();
      v19 = sub_1A56A1354(v51, v52, 10);
      v21 = v53;
      OUTLINED_FUNCTION_72();
      goto LABEL_40;
    }
    if ((v14 & 0x2000000000000000) == 0)
    {
      if ((v11 & 0x1000000000000000) != 0)
      {
        v18 = (unsigned __int8 *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else
      {
        OUTLINED_FUNCTION_344();
        v18 = (unsigned __int8 *)sub_1A594C7D4();
      }
      v19 = (unint64_t)sub_1A56A132C(v18, v16);
      v21 = v20 & 1;
LABEL_40:
      if ((v21 & 1) == 0)
      {
        if ((a4 & 1) != 0)
        {
LABEL_47:
          *a5 = v19;
          OUTLINED_FUNCTION_344();
          v42 = sub_1A594B5A4();
          OUTLINED_FUNCTION_72();
          OUTLINED_FUNCTION_23();
          a5[1] = v42;
          return;
        }
        v36 = OUTLINED_FUNCTION_344();
        v38 = sub_1A56C7FE0(v36, v37);
        if ((v38 & 0x100) == 0)
        {
          if (v38 == 48)
          {
            OUTLINED_FUNCTION_72();
            sub_1A56E9774();
            OUTLINED_FUNCTION_21();
            strcpy(v39, "starts with 0");
            *((_WORD *)v39 + 7) = -4864;
            OUTLINED_FUNCTION_15_35((uint64_t)v39, 0xD000000000000020);
            v24 = 181;
            goto LABEL_46;
          }
          goto LABEL_47;
        }
LABEL_72:
        __break(1u);
        return;
      }
LABEL_45:
      sub_1A594C720();
      OUTLINED_FUNCTION_34_20();
      sub_1A594B5F8();
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v40 = v13;
      v40[1] = v14;
      OUTLINED_FUNCTION_8_42();
      *(_QWORD *)(v23 + 16) = 0xD000000000000020;
      *(_QWORD *)(v23 + 24) = v41;
      v24 = 178;
      goto LABEL_46;
    }
    if (v11 == 43)
    {
      if (v15)
      {
        if (v15 != 1)
        {
          OUTLINED_FUNCTION_4_19();
          if (v28 || !v27)
          {
            v19 = v31;
            if (v30 == 2)
              goto LABEL_39;
            OUTLINED_FUNCTION_4_19();
            if (v28 || !v27)
            {
              v19 = 10 * v19 + v33;
              if (v32 != 3)
              {
                while (1)
                {
                  OUTLINED_FUNCTION_10_13();
                  if (!v28 && v27)
                    goto LABEL_36;
                  if (!is_mul_ok(v19, v34))
                    goto LABEL_36;
                  v27 = __CFADD__(10 * v19, v35);
                  v19 = 10 * v19 + v35;
                  if (v27)
                    goto LABEL_36;
                  v21 = 0;
                  OUTLINED_FUNCTION_263_1();
                  if (v28)
                    goto LABEL_40;
                }
              }
              goto LABEL_39;
            }
          }
        }
        goto LABEL_36;
      }
    }
    else
    {
      if (v11 != 45)
      {
        if (v15 && (v11 - 48) <= 9u)
        {
          v19 = (v11 - 48);
          if (v15 == 1)
            goto LABEL_39;
          OUTLINED_FUNCTION_4_19();
          if (v28 || !v27)
          {
            v19 = 10 * v19 + v44;
            if (v43 != 2)
            {
              while (1)
              {
                OUTLINED_FUNCTION_10_13();
                if (!v28 && v27)
                  goto LABEL_36;
                if (!is_mul_ok(v19, v45))
                  goto LABEL_36;
                v27 = __CFADD__(10 * v19, v46);
                v19 = 10 * v19 + v46;
                if (v27)
                  goto LABEL_36;
                v21 = 0;
                OUTLINED_FUNCTION_263_1();
                if (v28)
                  goto LABEL_40;
              }
            }
            goto LABEL_39;
          }
        }
LABEL_36:
        v19 = 0;
LABEL_37:
        v21 = 1;
        goto LABEL_40;
      }
      if (v15)
      {
        if (v15 != 1)
        {
          OUTLINED_FUNCTION_4_19();
          if (v28 || !v27)
          {
            v19 = 0;
            v27 = v26 == 0;
            v29 = -(uint64_t)v26;
            if (!v27)
              goto LABEL_37;
            if (v25 == 2)
            {
              v21 = 0;
              v19 = v29;
              goto LABEL_40;
            }
            v47 = BYTE2(v13) - 48;
            if ((BYTE2(v13) - 48) <= 9u && is_mul_ok(v29, 0xAuLL))
            {
              v48 = 10 * v29;
              v19 = v48 - v47;
              if (v48 >= v47)
              {
                if (v25 != 3)
                {
                  while (1)
                  {
                    OUTLINED_FUNCTION_10_13();
                    if (!v28 && v27)
                      goto LABEL_36;
                    if (!is_mul_ok(v19, v49))
                      goto LABEL_36;
                    v27 = 10 * v19 >= v50;
                    v19 = 10 * v19 - v50;
                    if (!v27)
                      goto LABEL_36;
                    v21 = 0;
                    OUTLINED_FUNCTION_263_1();
                    if (v28)
                      goto LABEL_40;
                  }
                }
LABEL_39:
                v21 = 0;
                goto LABEL_40;
              }
            }
          }
        }
        goto LABEL_36;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_72;
  }
}

void sub_1A576B3AC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  unsigned __int16 v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v1 = *(unsigned int *)(a1 + 8);
  v2 = *(unsigned int *)(a1 + 12);
  if (v2 < v1)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((_DWORD)v2 == (_DWORD)v1)
  {
    sub_1A571EA80();
    OUTLINED_FUNCTION_21();
LABEL_4:
    OUTLINED_FUNCTION_133_2();
    return;
  }
  v4 = *(_QWORD *)a1;
  v5 = v1 | (v2 << 32);
  v6 = *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48);
  v7 = *(_QWORD *)a1;
  v40 = v6;
  ByteBufferView.init(_:)(v7, v5, v6, (uint64_t)&v27);
  v8 = v32;
  v9 = v33;
  if (v32 == v33)
  {
LABEL_14:
    OUTLINED_FUNCTION_0_10();
    sub_1A553E5DC((uint64_t)&v27);
LABEL_15:
    *(_DWORD *)(a1 + 8) = v2;
    return;
  }
  v10 = v28;
  v11 = v29 - v28;
  if (v29 < v28)
    goto LABEL_31;
  v24 = v5;
  v25 = v4;
  v12 = v27;
  v13 = v31 | ((unint64_t)v30 << 8);
  OUTLINED_FUNCTION_176();
  while (1)
  {
    if (v8 >= v9)
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v14 = v8 - v10;
    if (__OFSUB__(v8, v10))
      goto LABEL_27;
    if (v14 < 0)
      goto LABEL_28;
    if (v14 >= v11)
      goto LABEL_29;
    if (*(_BYTE *)(*(_QWORD *)(v12 + 24) + v13 + v8) != 32)
      break;
    if (v9 == ++v8)
      goto LABEL_14;
  }
  OUTLINED_FUNCTION_0_10();
  sub_1A553E5DC((uint64_t)&v27);
  ByteBufferView.init(_:)(v25, v24, v40, (uint64_t)v34);
  OUTLINED_FUNCTION_0_10();
  sub_1A553E5DC((uint64_t)v34);
  if (v35 < v8)
  {
    if (v2 < v8)
      goto LABEL_32;
    LODWORD(v2) = v8;
    goto LABEL_15;
  }
  sub_1A594C720();
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_8_42();
  v26 = v15;
  OUTLINED_FUNCTION_251_0();
  ByteBufferView.init(_:)(v16, v17, v18, v19);
  if (v8 >= v38 && v8 < v39)
  {
    sub_1A566FE08(v8, 0, v36, v37);
    if ((v21 & 0x100) != 0)
      goto LABEL_34;
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_279_0();
    sub_1A594CC9C();
    sub_1A594B5F8();
    OUTLINED_FUNCTION_17();
    sub_1A56E9774();
    OUTLINED_FUNCTION_21();
    *v22 = 0xD000000000000016;
    v22[1] = v26;
    OUTLINED_FUNCTION_15_35((uint64_t)v22, 0xD000000000000020);
    *(_QWORD *)(v23 + 32) = 201;
    goto LABEL_4;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

void sub_1A576B64C(void **a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, unint64_t a6, char a7)
{
  uint64_t v7;
  Swift::Int v12;
  Swift::String_optional v13;
  unint64_t countAndFlagsBits;
  void *object;
  BOOL v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _BYTE v30[40];
  _QWORD v31[2];
  unsigned __int16 v32;
  uint64_t v33;
  unint64_t v34;

  if ((a4 & 1) == 0 || (sub_1A575DE18(), !v7))
  {
    if ((a6 & 0x1000000000000000) != 0)
    {
      v12 = sub_1A594B640();
    }
    else if ((a6 & 0x2000000000000000) != 0)
    {
      v12 = HIBYTE(a6) & 0xF;
    }
    else
    {
      v12 = a5 & 0xFFFFFFFFFFFFLL;
    }
    v13 = ByteBuffer.readString(length:)(v12);
    if (v13.value._object)
    {
      countAndFlagsBits = v13.value._countAndFlagsBits;
      object = v13.value._object;
      v16 = v13.value._countAndFlagsBits == a5 && v13.value._object == (void *)a6;
      if (v16 || (sub_1A594CD38() & 1) != 0)
        goto LABEL_13;
      if ((a7 & 1) != 0)
      {
        OUTLINED_FUNCTION_289();
        sub_1A594C720();
        OUTLINED_FUNCTION_128();
        OUTLINED_FUNCTION_202_0();
        OUTLINED_FUNCTION_198_2();
        OUTLINED_FUNCTION_297();
        OUTLINED_FUNCTION_38();
        sub_1A56E9774();
        v25 = OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_339(v25, v26);
        v23[2] = 0xD000000000000020;
        v23[3] = 0x80000001A5A0F5E0;
        v24 = 234;
        goto LABEL_27;
      }
      if (((uint64_t)v13.value._object & 0x1000000000000000) == 0)
      {
        if (((uint64_t)v13.value._object & 0x2000000000000000) != 0)
          v27 = ((unint64_t)v13.value._object >> 56) & 0xF;
        else
          v27 = v13.value._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
        goto LABEL_24;
      }
    }
    else
    {
      object = *a1;
      OUTLINED_FUNCTION_286((uint64_t)v30);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_30();
      sub_1A576BA8C((uint64_t)v30, a5, a6);
      v18 = v17;
      sub_1A553E5DC((uint64_t)v30);
      OUTLINED_FUNCTION_17();
      if ((v18 & 1) != 0)
      {
        sub_1A571EA80();
        OUTLINED_FUNCTION_21();
LABEL_28:
        OUTLINED_FUNCTION_8_23();
        return;
      }
      OUTLINED_FUNCTION_289();
      sub_1A594C720();
      OUTLINED_FUNCTION_128();
      sub_1A594B5F8();
      sub_1A594B5F8();
      OUTLINED_FUNCTION_286((uint64_t)v31);
      v19 = v33;
      countAndFlagsBits = v34;
      a5 = v32;
      a6 = v31[0] + 24;
      OUTLINED_FUNCTION_176();
      if (!__OFSUB__(countAndFlagsBits, v19))
      {
        OUTLINED_FUNCTION_30();
        sub_1A594B538();
        sub_1A553E5DC((uint64_t)v31);
        sub_1A594B5F8();
        OUTLINED_FUNCTION_52();
        OUTLINED_FUNCTION_281();
        v20 = OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_339(v20, v21);
        OUTLINED_FUNCTION_15_35(v22, 0xD000000000000020);
        v24 = 218;
LABEL_27:
        v23[4] = v24;
        goto LABEL_28;
      }
      __break(1u);
    }
    v27 = sub_1A594B640();
LABEL_24:
    if (v12 == v27 && (sub_1A576BD68(a5, a6, countAndFlagsBits, (unint64_t)object) & 1) != 0)
    {
LABEL_13:
      OUTLINED_FUNCTION_38();
      return;
    }
    OUTLINED_FUNCTION_289();
    sub_1A594C720();
    OUTLINED_FUNCTION_128();
    OUTLINED_FUNCTION_202_0();
    OUTLINED_FUNCTION_198_2();
    OUTLINED_FUNCTION_297();
    OUTLINED_FUNCTION_38();
    sub_1A56E9774();
    v28 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_339(v28, v29);
    v23[2] = 0xD000000000000020;
    v23[3] = 0x80000001A5A0F5E0;
    v24 = 231;
    goto LABEL_27;
  }
}

void sub_1A576B9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int16 v11;
  char v12;
  _QWORD *v13;

  v4 = __OFADD__(a2, 1);
  v5 = a2 + 1;
  if (v4)
  {
    __break(1u);
    return;
  }
  if (v5 >= a3)
  {
    sub_1A5718F9C();
    swift_allocError();
    *v13 = a3;
  }
  else
  {
    v8 = *(_QWORD *)a1;
    v9 = *(_QWORD *)(a1 + 8);
    v10 = *(_DWORD *)(a1 + 16);
    v11 = *(_WORD *)(a1 + 20);
    v12 = *(_BYTE *)(a1 + 22);
    sub_1A576B3AC(a1);
    if (!v3)
      return;
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v9;
    *(_DWORD *)(a1 + 16) = v10;
    *(_WORD *)(a1 + 20) = v11;
    *(_BYTE *)(a1 + 22) = v12;
  }
  swift_willThrow();
}

void sub_1A576BA8C(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  unsigned __int8 v21;
  unint64_t v22;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  BOOL v34;
  _QWORD v36[2];
  unint64_t v37;

  v3 = *(_QWORD *)a1;
  v5 = *(unsigned int *)(a1 + 8);
  v4 = *(_DWORD *)(a1 + 12);
  v6 = *(unsigned __int16 *)(a1 + 20);
  v7 = *(unsigned __int8 *)(a1 + 22);
  v8 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v8 = a2 & 0xFFFFFFFFFFFFLL;
  v10 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v25 = *(unsigned int *)(a1 + 12);
  v26 = v10;
  if (v8)
  {
    v37 = v8;
    v31 = 4 * v8;
    v12 = (a2 >> 59) & 1;
    if ((a3 & 0x1000000000000000) == 0)
      LOBYTE(v12) = 1;
    v13 = 4 << v12;
    v29 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
    v30 = a3 & 0xFFFFFFFFFFFFFFLL;
    v33 = v4 - v5;
    v34 = v4 < v5;
    v14 = (_QWORD *)(v3 + 24);
    v15 = 15;
    v32 = v7 | (v6 << 8);
    do
    {
      v16 = v15;
      if ((v15 & 0xC) == v13)
        v16 = sub_1A56C83D0(v15, a2, a3);
      v17 = v16 >> 16;
      v18 = a2;
      if (v16 >> 16 >= v37)
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      if ((a3 & 0x1000000000000000) != 0)
      {
        v21 = sub_1A594B670();
        v18 = a2;
        v20 = v21;
      }
      else if ((a3 & 0x2000000000000000) != 0)
      {
        v36[0] = a2;
        v36[1] = v30;
        v20 = *((_BYTE *)v36 + v17);
      }
      else
      {
        v19 = v29;
        if ((a2 & 0x1000000000000000) == 0)
        {
          v19 = sub_1A594C7D4();
          v18 = a2;
        }
        v20 = *(_BYTE *)(v19 + v17);
      }
      if ((v15 & 0xC) == v13)
      {
        v15 = sub_1A56C83D0(v15, v18, a3);
        if ((a3 & 0x1000000000000000) == 0)
        {
LABEL_18:
          v15 = (v15 & 0xFFFFFFFFFFFF0000) + 65540;
          goto LABEL_23;
        }
      }
      else if ((a3 & 0x1000000000000000) == 0)
      {
        goto LABEL_18;
      }
      if (v37 <= v15 >> 16)
        goto LABEL_49;
      v15 = sub_1A594B64C();
LABEL_23:
      if (v9 == v10)
      {
        sub_1A553E5B4(a1);
        goto LABEL_42;
      }
      if (v10 >= v9)
        goto LABEL_44;
      v22 = v10 - v5;
      if (__OFSUB__(v10, v5))
        goto LABEL_45;
      if ((v22 & 0x8000000000000000) != 0)
        goto LABEL_46;
      if (v34)
        goto LABEL_47;
      if (v22 >= v33)
        goto LABEL_48;
      swift_beginAccess();
      if (((*(_BYTE *)(*v14 + v32 + v10) ^ v20) & 0xDF) != 0)
      {
        sub_1A553E5B4(a1);
        goto LABEL_42;
      }
      ++v10;
    }
    while (v31 != v15 >> 14);
  }
  sub_1A553E5B4(a1);
  if (v10 == v9)
    goto LABEL_42;
  if (v10 < v26 || v10 >= v9)
    goto LABEL_50;
  sub_1A566FE08(v10, 0, v27, v5 | (v25 << 32));
  if ((v24 & 0x100) != 0)
LABEL_51:
    __break(1u);
  else
LABEL_42:
    swift_release();
}

unint64_t sub_1A576BD68(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _BOOL8 v14;
  unsigned __int8 v15;
  unint64_t result;
  unint64_t v17;
  unint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if ((a4 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a4) & 0xF;
  else
    v6 = a3 & 0xFFFFFFFFFFFFLL;
  v24 = v6;
  v7 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v7) = 1;
  v8 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v8 = HIBYTE(a2) & 0xF;
  v32 = 4 * v6;
  v27 = 4 << v7;
  v28 = v8;
  v20 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v21 = a4 & 0xFFFFFFFFFFFFFFLL;
  v26 = 4 * v8;
  v9 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0)
    LOBYTE(v9) = 1;
  v10 = 4 << v9;
  v22 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v23 = a2 & 0xFFFFFFFFFFFFFFLL;
  v11 = 15;
  v12 = 15;
  while (1)
  {
    v13 = v12 >> 14;
    v14 = v12 >> 14 == v32;
    if (v12 >> 14 == v32)
    {
      v15 = 0;
      goto LABEL_29;
    }
    result = v12;
    if ((v12 & 0xC) == v27)
      result = sub_1A56C83D0(v12, a3, a4);
    v17 = result >> 16;
    if (result >> 16 >= v24)
      goto LABEL_51;
    if ((a4 & 0x1000000000000000) != 0)
    {
      result = sub_1A594B670();
      v15 = result;
    }
    else if ((a4 & 0x2000000000000000) != 0)
    {
      v30 = a3;
      v31 = v21;
      v15 = *((_BYTE *)&v30 + v17);
    }
    else
    {
      result = v20;
      if ((a3 & 0x1000000000000000) == 0)
        result = sub_1A594C7D4();
      v15 = *(_BYTE *)(result + v17);
    }
    if ((v12 & 0xC) == v27)
    {
      result = sub_1A56C83D0(v12, a3, a4);
      v12 = result;
      if ((a4 & 0x1000000000000000) == 0)
      {
LABEL_24:
        v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_29;
      }
    }
    else if ((a4 & 0x1000000000000000) == 0)
    {
      goto LABEL_24;
    }
    if (v24 <= v12 >> 16)
      goto LABEL_53;
    v12 = sub_1A594B64C();
LABEL_29:
    if (v26 == v11 >> 14)
      return v14;
    result = v11;
    if ((v11 & 0xC) == v10)
      result = sub_1A56C83D0(v11, a1, a2);
    v18 = result >> 16;
    if (result >> 16 >= v28)
      break;
    if ((a2 & 0x1000000000000000) != 0)
    {
      result = sub_1A594B670();
      v19 = result;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v30 = a1;
      v31 = v23;
      v19 = *((_BYTE *)&v30 + v18);
    }
    else
    {
      result = v22;
      if ((a1 & 0x1000000000000000) == 0)
        result = sub_1A594C7D4();
      v19 = *(_BYTE *)(result + v18);
    }
    if ((v11 & 0xC) == v10)
    {
      result = sub_1A56C83D0(v11, a1, a2);
      v11 = result;
      if ((a2 & 0x1000000000000000) == 0)
      {
LABEL_41:
        v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_46;
      }
    }
    else if ((a2 & 0x1000000000000000) == 0)
    {
      goto LABEL_41;
    }
    if (v28 <= v11 >> 16)
      goto LABEL_52;
    v11 = sub_1A594B64C();
LABEL_46:
    if (v13 == v32 || ((v19 ^ v15) & 0xDF) != 0)
      return 0;
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

void sub_1A576C068(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v6;
  __int16 v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD v11[2];
  char v12;

  v6 = *(unsigned int *)(a1 + 8);
  sub_1A566FE08(v6, 0, *(_QWORD *)a1, v6 | ((unint64_t)*(unsigned int *)(a1 + 12) << 32));
  if ((v7 & 0x100) != 0)
  {
    sub_1A571EA80();
    swift_allocError();
    goto LABEL_6;
  }
  if ((_DWORD)v6 == -1)
  {
    __break(1u);
    return;
  }
  v8 = v7;
  *(_DWORD *)(a1 + 8) = v6 + 1;
  if (v7 != a4)
  {
    sub_1A594C720();
    swift_bridgeObjectRelease();
    strcpy((char *)v11, "looking for ");
    BYTE5(v11[1]) = 0;
    HIWORD(v11[1]) = -5120;
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    v12 = v8;
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    v9 = v11[1];
    sub_1A56E9774();
    swift_allocError();
    *v10 = v11[0];
    v10[1] = v9;
    v10[2] = 0xD000000000000020;
    v10[3] = 0x80000001A5A0F5E0;
    v10[4] = 246;
LABEL_6:
    swift_willThrow();
  }
}

_QWORD *sub_1A576C228(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, _QWORD), uint64_t a2, uint64_t a3)
{
  return sub_1A576C23C(a1, a2, a3);
}

_QWORD *sub_1A576C23C(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, _QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5, a3 + 32, *(_QWORD *)(a3 + 16));
  if (!v3)
    return (_QWORD *)v5;
  return result;
}

void sub_1A576C288()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_221_0();
  sub_1A576C470(0, v0, 0, v1, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1A569F9A8);
}

void sub_1A576C2B0()
{
  OUTLINED_FUNCTION_221_0();
  OUTLINED_FUNCTION_346();
}

void sub_1A576C2E0()
{
  OUTLINED_FUNCTION_221_0();
  OUTLINED_FUNCTION_346();
}

void sub_1A576C310()
{
  OUTLINED_FUNCTION_221_0();
  OUTLINED_FUNCTION_261_1();
}

void sub_1A576C340()
{
  OUTLINED_FUNCTION_221_0();
  OUTLINED_FUNCTION_261_1();
}

void sub_1A576C370()
{
  OUTLINED_FUNCTION_221_0();
  OUTLINED_FUNCTION_261_1();
}

void sub_1A576C3A0()
{
  sub_1A576C854();
}

void sub_1A576C3DC(uint64_t a1)
{
  sub_1A576C904(0, *(_QWORD *)(a1 + 16), 0, a1, (uint64_t)&unk_1EE7962C0, (void (*)(uint64_t, uint64_t, char *))sub_1A569D6A8, &qword_1EE7993B0);
}

void sub_1A576C418(uint64_t a1)
{
  sub_1A576C9CC(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void sub_1A576C42C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_221_0();
  sub_1A576C904(0, v0, 0, v1, (uint64_t)&unk_1EE7A9EA0, (void (*)(uint64_t, uint64_t, char *))sub_1A569D6A8, &qword_1EE7A9EA8);
}

void sub_1A576C464(char a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1A576C470(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1A569F9A8);
}

void sub_1A576C470(char a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v9 != v10)
    {
      OUTLINED_FUNCTION_7_14();
      if (v9)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  else
  {
    v8 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v8 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v8;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9EB0);
    v13 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    v14 = _swift_stdlib_malloc_size_0(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 16);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((a1 & 1) != 0)
  {
    a5(a4 + 32, v11, v13 + 4);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v13 + 4, (const void *)(a4 + 32), 16 * v11);
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A576C540()
{
  sub_1A576C854();
}

void sub_1A576C55C()
{
  sub_1A576C854();
}

void sub_1A576C578()
{
  sub_1A576C854();
}

void sub_1A576C594(char a1, uint64_t a2, char a3, uint64_t a4)
{
  size_t v4;
  uint64_t v5;
  char v8;
  char v9;
  uint64_t v10;
  size_t v11;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_7_14();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_9_16();
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B348);
    v10 = swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0((const void *)v10);
    *(_QWORD *)(v10 + 16) = v4;
    *(_QWORD *)(v10 + 24) = 2 * v11 - 64;
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  if ((a1 & 1) != 0)
  {
    sub_1A569D680((char *)(a4 + 32), v4, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    memcpy((void *)(v10 + 32), (const void *)(a4 + 32), v4);
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A576C64C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v8;
  char v9;
  char *v10;
  size_t v11;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_7_14();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_9_16();
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
    v10 = (char *)OUTLINED_FUNCTION_4_18();
    v11 = _swift_stdlib_malloc_size_0(v10);
    OUTLINED_FUNCTION_288(v11);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  if ((a1 & 1) != 0)
  {
    sub_1A569D660((char *)(a4 + 32), v4, v10 + 32);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v10 + 32, (const void *)(a4 + 32), 8 * v4);
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A576C6FC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1A576C904(a1, a2, a3, a4, (uint64_t)&unk_1EE7A9EA0, (void (*)(uint64_t, uint64_t, char *))sub_1A569D6A8, &qword_1EE7A9EA8);
}

void sub_1A576C718()
{
  sub_1A576C76C();
}

void sub_1A576C734()
{
  sub_1A576C76C();
}

void sub_1A576C750()
{
  sub_1A576C76C();
}

void sub_1A576C76C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;

  OUTLINED_FUNCTION_347();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_277_0();
  if (v3)
  {
    OUTLINED_FUNCTION_18_8(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)swift_allocObject();
    v7 = _swift_stdlib_malloc_size_0(v12);
    v12[2] = v2;
    v12[3] = 2 * ((uint64_t)(v7 - 32) / 24);
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_332(v7, v0 + 32);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_280();
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_15_3();
}

void sub_1A576C81C()
{
  sub_1A576C854();
}

void sub_1A576C838()
{
  sub_1A576C854();
}

void sub_1A576C854()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  OUTLINED_FUNCTION_347();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_7_14();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_277_0();
  if (v2)
  {
    OUTLINED_FUNCTION_18_8(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_4_18();
    v12 = _swift_stdlib_malloc_size_0(v11);
    v6 = OUTLINED_FUNCTION_287(v12);
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_332(v6, v0 + 32);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_280();
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A576C8E8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1A576C904(a1, a2, a3, a4, (uint64_t)&unk_1EE7962C0, (void (*)(uint64_t, uint64_t, char *))sub_1A569D6A8, &qword_1EE7993B0);
}

void sub_1A576C904(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, char *), uint64_t *a7)
{
  uint64_t v7;
  uint64_t v8;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char *v20;
  size_t v21;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v13 != v14)
    {
      OUTLINED_FUNCTION_7_14();
      if (v13)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_277_0();
  if (v8)
  {
    OUTLINED_FUNCTION_18_8(v15, v16, v17, v18, v19);
    v20 = (char *)OUTLINED_FUNCTION_4_18();
    v21 = _swift_stdlib_malloc_size_0(v20);
    OUTLINED_FUNCTION_287(v21);
  }
  else
  {
    v20 = (char *)MEMORY[0x1E0DEE9D8];
  }
  if ((a1 & 1) != 0)
  {
    a6(a4 + 32, v7, v20 + 32);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a7);
    swift_arrayInitWithCopy();
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_15_3();
}

void sub_1A576C9CC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v8;
  char v9;
  char *v10;
  size_t v11;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_7_14();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_9_16();
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E70);
    v10 = (char *)OUTLINED_FUNCTION_4_18();
    v11 = _swift_stdlib_malloc_size_0(v10);
    OUTLINED_FUNCTION_288(v11);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  if ((a1 & 1) != 0)
  {
    sub_1A569D660((char *)(a4 + 32), v4, v10 + 32);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E78);
    swift_arrayInitWithCopy();
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A576CA94()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A5748988();
}

uint64_t sub_1A576CAAC()
{
  OUTLINED_FUNCTION_4_52();
  return sub_1A57444E0();
}

void sub_1A576CAC4(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *a1 = v4;
    a1[1] = v5;
  }
  OUTLINED_FUNCTION_1();
}

void sub_1A576CAEC()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A57356E8();
}

void sub_1A576CB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A576CB1C(a1, a2, a3, (void (*)(uint64_t))sub_1A5683660);
}

void sub_1A576CB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A576CB1C(a1, a2, a3, (void (*)(uint64_t))sub_1A568367C);
}

void sub_1A576CB1C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v6 = v4;
  v11 = v4[1];
  v9 = v4 + 1;
  v10 = v11;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v9 = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v13 = OUTLINED_FUNCTION_5_55();
    a4(v13);
    v10 = *v9;
  }
  v15 = *(_QWORD *)(v10 + 16);
  v14 = *(_QWORD *)(v10 + 24);
  if (v15 >= v14 >> 1)
  {
    ((void (*)(BOOL, unint64_t, uint64_t))a4)(v14 > 1, v15 + 1, 1);
    v10 = *v9;
  }
  *(_QWORD *)(v10 + 16) = v15 + 1;
  v16 = v10 + 16 * v15;
  *(_QWORD *)(v16 + 32) = a1;
  *(_QWORD *)(v16 + 40) = a2;
  v6[1] = v10;
  v17 = *(_QWORD *)(v10 + 16);
  v18 = *v6;
  if (*v6)
  {
    OUTLINED_FUNCTION_176();
    if (MEMORY[0x1A85AC894](*(_QWORD *)(v18 + 16) & 0x3FLL) < (uint64_t)v17)
    {
      if (v17 <= 0xF && (*(_QWORD *)(v18 + 24) & 0x3FLL) == 0)
      {
        swift_release();
        *v6 = 0;
        return;
      }
      goto LABEL_14;
    }
    sub_1A576CF84();
    if (*v6)
      OUTLINED_FUNCTION_349();
    else
      __break(1u);
  }
  else if (v17 > 0xF)
  {
LABEL_14:
    MEMORY[0x1A85AC8B8](v17);
    sub_1A576D028();
  }
}

void sub_1A576CC70(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A576CC98(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A5683708);
}

void sub_1A576CC84(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A576CC98(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A5683724);
}

void sub_1A576CC98(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t *v5;
  uint64_t *v7;
  int v9;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v7 = v5;
  v9 = a2;
  v11 = HIDWORD(a2);
  v14 = v5[1];
  v12 = v5 + 1;
  v13 = v14;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v12 = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v16 = OUTLINED_FUNCTION_5_55();
    a5(v16);
    v13 = *v12;
  }
  v18 = *(_QWORD *)(v13 + 16);
  v17 = *(_QWORD *)(v13 + 24);
  if (v18 >= v17 >> 1)
  {
    ((void (*)(BOOL, unint64_t, uint64_t))a5)(v17 > 1, v18 + 1, 1);
    v13 = *v12;
  }
  *(_QWORD *)(v13 + 16) = v18 + 1;
  v19 = v13 + 24 * v18;
  *(_QWORD *)(v19 + 32) = a1;
  *(_DWORD *)(v19 + 40) = v9;
  *(_DWORD *)(v19 + 44) = v11;
  *(_DWORD *)(v19 + 48) = a3;
  *(_WORD *)(v19 + 52) = WORD2(a3);
  *(_BYTE *)(v19 + 54) = BYTE6(a3);
  v7[1] = v13;
  v20 = *v7;
  if (!*v7)
  {
    if (v18 <= 0xE)
      return;
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_176();
  if (MEMORY[0x1A85AC894](*(_QWORD *)(v20 + 16) & 0x3FLL) <= (uint64_t)v18)
  {
    if (v18 <= 0xE && (*(_QWORD *)(v20 + 24) & 0x3FLL) == 0)
    {
      swift_release();
      *v7 = 0;
      return;
    }
LABEL_15:
    MEMORY[0x1A85AC8B8](v18 + 1);
    sub_1A576D058();
    return;
  }
  sub_1A576CF84();
  if (*v7)
    OUTLINED_FUNCTION_349();
  else
    __break(1u);
}

void sub_1A576CE18(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v3 = v2;
  v8 = v2[1];
  v6 = v2 + 1;
  v7 = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1A568375C();
    v7 = *v6;
  }
  v10 = *(_QWORD *)(v7 + 16);
  if (v10 >= *(_QWORD *)(v7 + 24) >> 1)
  {
    sub_1A568375C();
    v7 = *v6;
  }
  *(_QWORD *)(v7 + 16) = v10 + 1;
  v11 = v7 + 16 * v10;
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = a2;
  v3[1] = v7;
  v12 = *(_QWORD *)(v7 + 16);
  v13 = *v3;
  if (*v3)
  {
    swift_beginAccess();
    if (MEMORY[0x1A85AC894](*(_QWORD *)(v13 + 16) & 0x3FLL) < (uint64_t)v12)
    {
      if (v12 <= 0xF && (*(_QWORD *)(v13 + 24) & 0x3FLL) == 0)
      {
        swift_release();
        *v3 = 0;
        return;
      }
      goto LABEL_14;
    }
    sub_1A576CF84();
    if (*v3)
      sub_1A576CFC0();
    else
      __break(1u);
  }
  else if (v12 > 0xF)
  {
LABEL_14:
    MEMORY[0x1A85AC8B8](v12);
    sub_1A576D058();
  }
}

void sub_1A576CF84()
{
  uint64_t v0;
  _QWORD *v1;

  if (!*v1 || swift_isUniquelyReferenced_native())
    goto LABEL_5;
  if (*v1)
  {
    sub_1A594A434();
    OUTLINED_FUNCTION_250_0();
    *v1 = v0;
LABEL_5:
    OUTLINED_FUNCTION_1();
    return;
  }
  __break(1u);
}

uint64_t sub_1A576CFC0()
{
  return sub_1A594A3EC();
}

void sub_1A576D028()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_246_1();
  sub_1A576D080(v2, v3, v4, v5);
  OUTLINED_FUNCTION_250_0();
  *v1 = v0;
  OUTLINED_FUNCTION_1();
}

void sub_1A576D04C()
{
  sub_1A576D058();
}

void sub_1A576D058()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  v2 = OUTLINED_FUNCTION_246_1();
  sub_1A576D0F8(v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_250_0();
  *v1 = v0;
  OUTLINED_FUNCTION_1();
}

void sub_1A576D080(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = MEMORY[0x1A85AC8B8](*(_QWORD *)(a1 + 16));
  if ((a3 & 1) != 0)
    v9 = 0;
  else
    v9 = a2;
  if (v9 <= v8)
    v9 = v8;
  if (v9 <= a4)
    v10 = a4;
  else
    v10 = v9;
  if (v10 >= 5)
  {
    MEMORY[0x1A85AC8C4]();
    sub_1A576D174(a1);
  }
  OUTLINED_FUNCTION_17_1();
}

void sub_1A576D0F8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = MEMORY[0x1A85AC8B8](*(_QWORD *)(a1 + 16));
  if ((a3 & 1) != 0)
    v11 = 0;
  else
    v11 = a2;
  if (v11 <= v10)
    v11 = v10;
  if (v11 <= a4)
    v12 = a4;
  else
    v12 = v11;
  if (v12 >= 5)
  {
    v13 = MEMORY[0x1A85AC8C4]();
    a5(a1, v13 + 16, v13 + 32);
  }
  OUTLINED_FUNCTION_17_1();
}

void sub_1A576D174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    while (1)
    {
      sub_1A594CE64();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594B1D8();
      sub_1A594CED0();
      OUTLINED_FUNCTION_241_0();
      if (v3)
        break;
      v4 = sub_1A594A3D4();
      OUTLINED_FUNCTION_276_1();
      swift_bridgeObjectRelease();
      if (v4)
      {
        while (1)
          sub_1A594A410();
      }
      sub_1A594A404();
      if (++v2 == v1)
        return;
    }
    __break(1u);
  }
}

uint64_t sub_1A576D278(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    v5 = result + 32;
    while (1)
    {
      v6 = v5 + 24 * v4;
      v8 = *(_DWORD *)(v6 + 8);
      v7 = *(_DWORD *)(v6 + 12);
      sub_1A594CE64();
      result = swift_beginAccess();
      if (v7 < v8)
        break;
      sub_1A594CE70();
      result = sub_1A594CED0();
      if (__OFSUB__(1 << *a2, 1))
        goto LABEL_10;
      if (sub_1A594A3D4())
      {
        while (1)
          sub_1A594A410();
      }
      result = sub_1A594A404();
      if (++v4 == v2)
        return result;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t sub_1A576D3AC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    while (1)
    {
      sub_1A594CE64();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594B1D8();
      result = sub_1A594CED0();
      if (__OFSUB__(1 << *a2, 1))
        break;
      v5 = sub_1A594A3D4();
      swift_bridgeObjectRelease();
      if (v5)
      {
        while (1)
          sub_1A594A410();
      }
      result = sub_1A594A404();
      if (++v4 == v2)
        return result;
    }
    __break(1u);
  }
  return result;
}

void sub_1A576D4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v11;
  char v12;
  _QWORD *v13;

  sub_1A594CE64();
  sub_1A594B1D8();
  sub_1A594CED0();
  OUTLINED_FUNCTION_241_0();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_251_0();
    sub_1A594A3D4();
    v7 = sub_1A594A3F8();
    if ((v8 & 1) == 0)
    {
      v9 = (_QWORD *)(a3 + 16 * v7);
      if (*v9 != a1 || v9[1] != a2)
      {
        do
        {
          if ((sub_1A594CD38() & 1) != 0)
            break;
          sub_1A594A410();
          v11 = sub_1A594A3F8();
          if ((v12 & 1) != 0)
            break;
          v13 = (_QWORD *)(a3 + 16 * v11);
        }
        while (*v13 != a1 || v13[1] != a2);
      }
    }
  }
}

void sub_1A576D614()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  BOOL v20;
  unsigned int v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;

  OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_176();
  v5 = v2 - v1;
  if (v2 < v1)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_123_4();
  v6 = (uint64_t)&v76;
  sub_1A594CED0();
  OUTLINED_FUNCTION_241_0();
  if (!v7)
  {
    OUTLINED_FUNCTION_240_1();
    v8 = OUTLINED_FUNCTION_239_0();
    OUTLINED_FUNCTION_238_0(v8, v9, v10, v11, v12, v13, v14, v15, v42, v44, v46, v48, v50, v3, v53, v55, v57, v59, v61,
      v63,
      v64,
      v66,
      v67,
      v69,
      v70,
      v72,
      v73,
      v74,
      v75,
      v76);
    if ((v16 & 1) != 0)
    {
LABEL_20:
      OUTLINED_FUNCTION_10_30();
      return;
    }
    OUTLINED_FUNCTION_313();
    while (1)
    {
      v17 = v0 + v6 * v2;
      v19 = *(_DWORD *)(v17 + 8);
      v18 = *(_DWORD *)(v17 + 12);
      v20 = v18 >= v19;
      v21 = v18 - v19;
      if (!v20)
        break;
      if (v21 != v5
        || ((OUTLINED_FUNCTION_236_1(), v22) ? (v22 = (_DWORD)v3 + 24 == (_DWORD)v47) : (v22 = 0),
            v22 ? (v23 = v4 == (_DWORD)v45) : (v23 = 0),
            v23 ? (v24 = v2 == v52) : (v24 = 0),
            !v24
         && (v25 = OUTLINED_FUNCTION_176(),
             v2 = 24,
             OUTLINED_FUNCTION_133_3(v25, v26, v27, v28, v29, v30, v31, v32, v43, v45, v47, v49, v51))))
      {
        v33 = sub_1A594A410();
        v6 = OUTLINED_FUNCTION_166_3(v33, v34, v35, v36, v37, v38, v39, v40, v43, v45, v47, v49, v51, v52, v54, v56, v58, v60, v62,
               v65,
               v68,
               v71);
        if ((v41 & 1) == 0)
          continue;
      }
      goto LABEL_20;
    }
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
}

uint64_t sub_1A576D70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v15;
  char v16;
  _QWORD *v17;

  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  result = sub_1A594CED0();
  if (__OFSUB__(1 << *a5, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1A594A3D4();
    v10 = sub_1A594A3F8();
    v11 = v10;
    if ((v12 & 1) == 0)
    {
      v13 = (_QWORD *)(a3 + 16 * v10);
      if (*v13 != a1 || v13[1] != a2)
      {
        do
        {
          if ((sub_1A594CD38() & 1) != 0)
            break;
          sub_1A594A410();
          v15 = sub_1A594A3F8();
          v11 = v15;
          if ((v16 & 1) != 0)
            break;
          v17 = (_QWORD *)(a3 + 16 * v15);
        }
        while (*v17 != a1 || v17[1] != a2);
      }
    }
    return v11;
  }
  return result;
}

void sub_1A576D87C(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;

  v8 = *a4;
  v9 = a4[1];
  if (a3)
  {
    swift_retain();
    sub_1A576D4C0(v8, v9, (uint64_t)a1);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    OUTLINED_FUNCTION_40();
    v16 = v13 & 1;
  }
  else
  {
    if (!a2)
      goto LABEL_11;
    v17 = *a1 == v8 && a1[1] == v9;
    if (v17 || (OUTLINED_FUNCTION_190_1() & 1) != 0)
    {
      v15 = 0;
      v11 = 0;
      v16 = 0;
      goto LABEL_12;
    }
    if (a2 == 1)
      goto LABEL_11;
    v18 = a1[2] == v8 && a1[3] == v9;
    if (v18 || (OUTLINED_FUNCTION_190_1() & 1) != 0)
    {
      v15 = 0;
      v16 = 0;
      v11 = 1;
      goto LABEL_12;
    }
    if (a2 == 2)
    {
LABEL_11:
      v15 = 0;
      v11 = 0;
      v16 = 1;
      goto LABEL_12;
    }
    v19 = a1[4] == v8 && a1[5] == v9;
    if (v19 || (OUTLINED_FUNCTION_190_1() & 1) != 0)
    {
      v15 = 0;
      v16 = 0;
      v11 = 2;
    }
    else
    {
      v20 = a1 + 7;
      v21 = 2;
      v22 = 3;
      while (1)
      {
        v16 = a2 == v22;
        if (a2 == v22)
        {
          v15 = 0;
          v11 = 0;
          goto LABEL_12;
        }
        v23 = v21 + 1;
        if (*(v20 - 1) == v8 && *v20 == v9)
          break;
        v26 = v23;
        v11 = v22;
        v25 = sub_1A594CD38();
        v15 = 0;
        v22 = v11 + 1;
        v20 += 2;
        v21 = v26;
        if ((v25 & 1) != 0)
          goto LABEL_12;
      }
      v15 = 0;
      v11 = v23;
    }
  }
LABEL_12:
  *(_QWORD *)a5 = v11;
  *(_BYTE *)(a5 + 8) = v16;
  *(_QWORD *)(a5 + 16) = v15;
  OUTLINED_FUNCTION_32_17();
}

void sub_1A576DA20(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  if (a3)
  {
    swift_retain();
    sub_1A576D614();
    v7 = v6;
    v9 = v8;
    v11 = v10;
    OUTLINED_FUNCTION_4_4();
  }
  else
  {
    sub_1A56AB450(*(_QWORD *)a4, *(unsigned int *)(a4 + 8) | ((unint64_t)*(unsigned int *)(a4 + 12) << 32), *(unsigned int *)(a4 + 16) | ((unint64_t)*(unsigned __int16 *)(a4 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a4 + 22) << 48), a1, a2);
    v7 = v12;
    v9 = v13;
    v11 = 0;
  }
  *(_QWORD *)a5 = v7;
  *(_BYTE *)(a5 + 8) = v9 & 1;
  *(_QWORD *)(a5 + 16) = v11;
  OUTLINED_FUNCTION_32_17();
}

uint64_t sub_1A576DAFC(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A576DB28()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A576DB4C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A576DB78()
{
  uint64_t v0;

  sub_1A54E3458(*(_QWORD *)(v0 + 24), *(unsigned int *)(v0 + 32), *(_BYTE *)(v0 + 36));
  return swift_deallocObject();
}

void sub_1A576DBA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A57258A0(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A576DBBC(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A576DBE8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    swift_release();
    return sub_1A5666618(a4, a5, BYTE5(a5) & 1);
  }
  return result;
}

void sub_1A576DC20()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A5743DC8();
}

uint64_t *sub_1A576DC38(uint64_t *a1)
{
  sub_1A5524450(*a1, a1[1]);
  return a1;
}

void sub_1A576DC68()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A5740D2C();
}

void sub_1A576DC80()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A574B658();
}

void sub_1A576DC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A57641F0(a1, a2, a3, *(_QWORD *)(v3 + 24), *(void (**)(uint64_t, uint64_t, uint64_t, double))(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 16));
}

void sub_1A576DCB4()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A574C81C();
}

void sub_1A576DCCC()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A574B5E4();
}

void sub_1A576DCE4()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A574B620();
}

void sub_1A576DCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A573D400(v0, v1, v2);
}

void sub_1A576DD14(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a4 <= 0xFFFEFFFFFFFFFFFFLL)
    sub_1A56669A0(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1A576DD28()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A573E424();
}

void sub_1A576DD40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A572C8D4(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A576DD58(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a5 >> 1 != 0xFFFFFFFF)
    return sub_1A56668BC(result, a2, a3, a4, a5, a6, a7, a8);
  return result;
}

uint64_t sub_1A576DD6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a5 != 251)
    return sub_1A576DDA8(result, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A5666868, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A56668A4);
  return result;
}

uint64_t sub_1A576DDA8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t (*a10)(uint64_t, uint64_t, uint64_t))
{
  if ((a5 & 0xFC | 2) != 0xFE)
  {
    a9(result, a2, a3, a4, a5 & 1);
    return a10(a6, a7, a8);
  }
  return result;
}

double sub_1A576DE14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A572C4A4(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A576DE2C()
{
  swift_release();
  return swift_deallocObject();
}

void type metadata accessor for ParseBuffer()
{
  OUTLINED_FUNCTION_3_1();
}

unint64_t sub_1A576DE60()
{
  unint64_t result;

  result = qword_1EE7A9EB8;
  if (!qword_1EE7A9EB8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B71C0, &unk_1E4E5C4E0);
    atomic_store(result, (unint64_t *)&qword_1EE7A9EB8);
  }
  return result;
}

void sub_1A576DE9C()
{
  sub_1A576DCCC();
}

void sub_1A576DEB0()
{
  sub_1A576DCE4();
}

uint64_t OUTLINED_FUNCTION_2_76()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_5_62()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_7_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, __int16 a11, __int16 a12, int a13)
{
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 + 8) = v14;
  *(_DWORD *)(v13 + 16) = a13;
  *(_WORD *)(v13 + 20) = a12;
  *(_BYTE *)(v13 + 22) = a10;
}

uint64_t OUTLINED_FUNCTION_8_49()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_9_47()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_10_42()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, v3, v1);
}

void OUTLINED_FUNCTION_11_30()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  __int16 v3;
  char v4;
  uint64_t v5;

  *(_QWORD *)v0 = v1;
  *(_QWORD *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v3;
  *(_BYTE *)(v0 + 22) = v4;
}

void OUTLINED_FUNCTION_16_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, __int16 a11, __int16 a12, int a13)
{
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 + 8) = v14;
  *(_DWORD *)(v13 + 16) = a13;
  *(_WORD *)(v13 + 20) = a12;
  *(_BYTE *)(v13 + 22) = a10;
}

uint64_t OUTLINED_FUNCTION_17_37()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_19_33()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_20_30()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_23_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11)
{
  uint64_t v11;
  int v12;
  __int16 v13;
  uint64_t v14;

  *(_QWORD *)(v11 + 8) = v14;
  *(_DWORD *)(v11 + 16) = v12;
  *(_WORD *)(v11 + 20) = v13;
  *(_BYTE *)(v11 + 22) = a11;
}

uint64_t OUTLINED_FUNCTION_24_25()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_25_26()
{
  unsigned __int8 v0;
  uint64_t v1;
  unsigned int v2;

  v2 = (((v0 & 0x3F) << 8) | (v0 >> 6)) + 33217;
  if ((v0 & 0x80) == 0)
    v2 = (v0 + 1);
  *(_QWORD *)(v1 - 72) = (v2 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v2) >> 3)) & 7)));
  JUMPOUT(0x1A85AD9BCLL);
}

uint64_t OUTLINED_FUNCTION_26_18()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_33_20()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_34_23()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(v1, v3, v0);
}

void OUTLINED_FUNCTION_39_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, __int16 a13, __int16 a14, int a15)
{
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v15 + 8) = v16;
  *(_DWORD *)(v15 + 16) = a15;
  *(_WORD *)(v15 + 20) = a14;
  *(_BYTE *)(v15 + 22) = a12;
}

uint64_t OUTLINED_FUNCTION_49_9()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return v1(v2, v7, v3, v6, v0, v5, v4);
}

uint64_t OUTLINED_FUNCTION_52_11()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_53_13(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16)
{

}

uint64_t OUTLINED_FUNCTION_57_14@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  a1[2] = a2;
  a1[3] = (v2 - 32) | 0x8000000000000000;
  a1[4] = 167;
  return swift_willThrow();
}

void OUTLINED_FUNCTION_58_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, __int16 a12)
{
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;

  *(_QWORD *)v12 = v13;
  *(_QWORD *)(v12 + 8) = v15;
  *(_DWORD *)(v12 + 16) = v14;
  *(_WORD *)(v12 + 20) = a12;
  *(_BYTE *)(v12 + 22) = a10;
}

void OUTLINED_FUNCTION_59_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, __int16 a11, __int16 a12, int a13)
{
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 + 8) = v14;
  *(_DWORD *)(v13 + 16) = a13;
  *(_WORD *)(v13 + 20) = a12;
  *(_BYTE *)(v13 + 22) = a10;
}

void OUTLINED_FUNCTION_60_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, __int16 a12, __int16 a13, int a14)
{
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v14 + 8) = v15;
  *(_DWORD *)(v14 + 16) = a14;
  *(_WORD *)(v14 + 20) = a13;
  *(_BYTE *)(v14 + 22) = a11;
}

void OUTLINED_FUNCTION_64_8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
}

void OUTLINED_FUNCTION_70_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, __int16 a13, __int16 a14, int a15)
{
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v15 + 8) = v16;
  *(_DWORD *)(v15 + 16) = a15;
  *(_WORD *)(v15 + 20) = a14;
  *(_BYTE *)(v15 + 22) = a12;
}

void OUTLINED_FUNCTION_71_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, __int16 a10, __int16 a11)
{
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  *(_QWORD *)v11 = v12;
  *(_QWORD *)(v11 + 8) = v14;
  *(_DWORD *)(v11 + 16) = v13;
  *(_WORD *)(v11 + 20) = a11;
  *(_BYTE *)(v11 + 22) = a9;
}

uint64_t OUTLINED_FUNCTION_74_3()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_76_8()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_77_8()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_78_8()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_79_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;

  sub_1A566FE08(v29, 0, a28, a29);
}

uint64_t OUTLINED_FUNCTION_80_6()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_81_7()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_82_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1A574763C(v12, v13, v14, v16, v11, v15, a11);
}

void OUTLINED_FUNCTION_89_4()
{
  sub_1A5751898();
}

void OUTLINED_FUNCTION_99_5()
{
  sub_1A5751898();
}

void OUTLINED_FUNCTION_100_3()
{
  sub_1A5751898();
}

void OUTLINED_FUNCTION_101_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, __int16 a11, __int16 a12, int a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)v13 = v14;
  *(_QWORD *)(v13 + 8) = v15;
  *(_DWORD *)(v13 + 16) = a13;
  *(_WORD *)(v13 + 20) = a12;
  *(_BYTE *)(v13 + 22) = a10;
}

uint64_t OUTLINED_FUNCTION_103_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  return ByteBufferView.init(_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), (uint64_t)va);
}

void OUTLINED_FUNCTION_107_3(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
}

uint64_t OUTLINED_FUNCTION_109_4(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9)
{
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  return sub_1A575EC98(a1, a2, v10, v13, v9, v12, v11, a8, a9);
}

uint64_t OUTLINED_FUNCTION_111_2()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_112_2()
{
  sub_1A5751898();
}

void OUTLINED_FUNCTION_113_2()
{
  sub_1A5751898();
}

void OUTLINED_FUNCTION_114_4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
}

uint64_t OUTLINED_FUNCTION_116_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_123_4()
{
  return sub_1A594CE70();
}

uint64_t OUTLINED_FUNCTION_124_3()
{
  return sub_1A594B5F8();
}

void OUTLINED_FUNCTION_125_4()
{
  sub_1A5751898();
}

unint64_t OUTLINED_FUNCTION_127_3()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A5761038(v0, v2, v1, 1);
}

void OUTLINED_FUNCTION_128_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A5751974(a1, a2, v2);
}

void OUTLINED_FUNCTION_130_4()
{
  sub_1A5751898();
}

uint64_t OUTLINED_FUNCTION_131_4()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_132_3()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_133_3(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  return memcmp((const void *)(*(_QWORD *)(v13 + 24) + (v17 | (v19 << 8)) + v15), (const void *)(*v18 + v14 + a13), v16);
}

uint64_t OUTLINED_FUNCTION_134_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_136_3(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14)
{

}

uint64_t OUTLINED_FUNCTION_137_1()
{
  return sub_1A594CE64();
}

void OUTLINED_FUNCTION_138_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A5751974(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_140_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  return ByteBufferView.init(_:)(v1, v3, v2, a1);
}

id OUTLINED_FUNCTION_141_2()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_151_3()
{
  sub_1A5740A68();
}

unint64_t OUTLINED_FUNCTION_152_3()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A573E438(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_153_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  return sub_1A575D540(v9, v14, v10, v13, v8, v12, v11, a8);
}

uint64_t OUTLINED_FUNCTION_154_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return sub_1A573EE0C(v2, v1, v4, v3, v0, v6, v5);
}

uint64_t OUTLINED_FUNCTION_156_2@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return ByteBufferView.init(_:)(a1, a2, v3, a3);
}

uint64_t OUTLINED_FUNCTION_157_3()
{
  return sub_1A594C720();
}

void OUTLINED_FUNCTION_158_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A5751974(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_159_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return v2(v0, v7, v1, v6, v3, v5, v4);
}

_QWORD *OUTLINED_FUNCTION_160_3(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *(*v4)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  va_list va;

  va_start(va, a2);
  return v4((uint64_t *)va, v3, v5, v2);
}

uint64_t OUTLINED_FUNCTION_161_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  return v8(v7, v6, v5, v4, v0, v3, v2, v1);
}

void OUTLINED_FUNCTION_162_2()
{
  sub_1A5751898();
}

uint64_t OUTLINED_FUNCTION_163_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return sub_1A5728830(v1, v2, v3, v6, v0, v5, v4);
}

id OUTLINED_FUNCTION_164_3()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_165_3()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_166_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int128 a19, __int128 a20,__int128 a21,char a22)
{
  uint64_t v22;

  *(_OWORD *)(v22 - 160) = a19;
  *(_OWORD *)(v22 - 144) = a20;
  *(_OWORD *)(v22 - 128) = a21;
  *(_BYTE *)(v22 - 112) = a22;
  return sub_1A594A3F8();
}

uint64_t OUTLINED_FUNCTION_167_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return v2(v0, v6, v1, v5, v4, v3);
}

void OUTLINED_FUNCTION_168_3(uint64_t a1, _QWORD *a2)
{
  *a2 = 0x6E776F6E6B6E55;
  a2[1] = 0xE700000000000000;
}

uint64_t OUTLINED_FUNCTION_171_3()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_173_2()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_177_3()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return v0(v7, v6, v5, v4, v1, v3, v2);
}

void OUTLINED_FUNCTION_179_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A5751974(a1, a2, v2);
}

void OUTLINED_FUNCTION_180_2(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  a1[2] = a2;
  a1[3] = (v2 - 32) | 0x8000000000000000;
  a1[4] = 110;
}

void OUTLINED_FUNCTION_182_3()
{
  sub_1A5751898();
}

void OUTLINED_FUNCTION_183_1()
{
  sub_1A5751898();
}

uint64_t OUTLINED_FUNCTION_184_2(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)v3 = result;
  *(_QWORD *)(v3 + 8) = a2;
  *(_DWORD *)(v3 + 16) = a3;
  *(_WORD *)(v3 + 20) = WORD2(a3);
  *(_BYTE *)(v3 + 22) = BYTE6(a3);
  return result;
}

void OUTLINED_FUNCTION_185_2()
{
  sub_1A5751898();
}

void OUTLINED_FUNCTION_186_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16, __int16 a17, __int16 a18, int a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)v19 = v20;
  *(_QWORD *)(v19 + 8) = v21;
  *(_DWORD *)(v19 + 16) = a19;
  *(_WORD *)(v19 + 20) = a18;
  *(_BYTE *)(v19 + 22) = a16;
}

uint64_t OUTLINED_FUNCTION_187_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_188_2()
{
  return sub_1A594B1E4();
}

void OUTLINED_FUNCTION_189_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, __int16 a12, __int16 a13, int a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)v14 = v15;
  *(_QWORD *)(v14 + 8) = v16;
  *(_DWORD *)(v14 + 16) = a14;
  *(_WORD *)(v14 + 20) = a13;
  *(_BYTE *)(v14 + 22) = a11;
}

uint64_t OUTLINED_FUNCTION_190_1()
{
  return sub_1A594CD38();
}

uint64_t OUTLINED_FUNCTION_192_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_193_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_194_2(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
}

uint64_t OUTLINED_FUNCTION_196_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_198_2()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_200_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_201_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_202_0()
{
  return sub_1A594B5F8();
}

void OUTLINED_FUNCTION_203_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, __int16 a13, __int16 a14, int a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)v16 = v15;
  *(_QWORD *)(v16 + 8) = v17;
  *(_DWORD *)(v16 + 16) = a15;
  *(_WORD *)(v16 + 20) = a14;
  *(_BYTE *)(v16 + 22) = a12;
}

double OUTLINED_FUNCTION_207_0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  result = 0.0;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_212_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_218_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_219_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_222_0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
}

void OUTLINED_FUNCTION_223_0()
{
  uint64_t v0;
  int v1;
  __int16 v2;
  char v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 8) = v4;
  *(_DWORD *)(v0 + 16) = v1;
  *(_WORD *)(v0 + 20) = v2;
  *(_BYTE *)(v0 + 22) = v3;
}

void OUTLINED_FUNCTION_224_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 8) = v2;
  *(_DWORD *)(v0 + 16) = *(_DWORD *)(v1 - 84);
  *(_WORD *)(v0 + 20) = *(_DWORD *)(v1 - 88);
  *(_BYTE *)(v0 + 22) = *(_DWORD *)(v1 - 92);
}

uint64_t OUTLINED_FUNCTION_225_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_226_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_229_1()
{
  return 34;
}

uint64_t OUTLINED_FUNCTION_232_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_233_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  return a10();
}

__n128 OUTLINED_FUNCTION_238_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,__int128 a30)
{
  return (__n128)a30;
}

uint64_t OUTLINED_FUNCTION_239_0()
{
  return sub_1A594A3F8();
}

uint64_t OUTLINED_FUNCTION_240_1()
{
  return sub_1A594A3D4();
}

void OUTLINED_FUNCTION_242_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _QWORD *a14)
{
  *a14 = a12;
  a14[1] = a13 & 0xFFFFFFFFFFLL;
}

uint64_t OUTLINED_FUNCTION_244_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_245_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t OUTLINED_FUNCTION_246_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_247_0()
{
  uint64_t v0;

  return sub_1A54E3458(*(_QWORD *)(v0 - 120), *(_QWORD *)(v0 - 112), *(_QWORD *)(v0 - 128));
}

uint64_t OUTLINED_FUNCTION_249_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_250_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_252_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_254_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_256_1(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
}

void OUTLINED_FUNCTION_257_0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  __int16 v3;
  char v4;
  uint64_t v5;

  *(_QWORD *)v0 = v1;
  *(_QWORD *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v3;
  *(_BYTE *)(v0 + 22) = v4;
}

void OUTLINED_FUNCTION_258_1(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
}

uint64_t OUTLINED_FUNCTION_260_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_261_1()
{
  sub_1A576C76C();
}

double OUTLINED_FUNCTION_264_1@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = a1;
  result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_QWORD *)(v2 + 96) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_266_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

void OUTLINED_FUNCTION_267_1()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(v0 - 104);
  v2 = *(_QWORD *)(v0 - 112) & 0xFFFFFFFFFFLL;
  *v1 = *(_QWORD *)(v0 - 120);
  v1[1] = v2;
}

uint64_t OUTLINED_FUNCTION_269_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

uint64_t OUTLINED_FUNCTION_279_0()
{
  uint64_t v0;

  return sub_1A553E5DC(v0 - 128);
}

uint64_t OUTLINED_FUNCTION_280()
{
  return swift_arrayInitWithCopy();
}

unint64_t OUTLINED_FUNCTION_281()
{
  return sub_1A56E9774();
}

uint64_t OUTLINED_FUNCTION_282()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_283()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_285()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_286@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  return ByteBufferView.init(_:)(v1, v2, v3, a1);
}

uint64_t OUTLINED_FUNCTION_287(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * ((result - 32) / 16);
  return result;
}

uint64_t OUTLINED_FUNCTION_288(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * ((result - 32) / 8);
  return result;
}

void OUTLINED_FUNCTION_291(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A5751974(a1, a2, v2);
}

void OUTLINED_FUNCTION_292(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
}

void OUTLINED_FUNCTION_293(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, __int16 a14, int a15)
{
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v15 + 8) = v16;
  *(_DWORD *)(v15 + 16) = a15;
  *(_WORD *)(v15 + 20) = a14;
}

uint64_t OUTLINED_FUNCTION_297()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_300()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_301()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_302()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  char v4;
  uint64_t v5;

  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = v5;
  *(_DWORD *)(v2 + 16) = v0;
  *(_WORD *)(v2 + 20) = v3;
  *(_BYTE *)(v2 + 22) = v4;
}

uint64_t OUTLINED_FUNCTION_308()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A575C9CC(a1, a2, a3, a4, a5, a6, a7, 0x3D4449553BLL);
}

void OUTLINED_FUNCTION_311(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
}

uint64_t OUTLINED_FUNCTION_315(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13)
{
  return sub_1A54E3458(a12, a13, a11);
}

uint64_t OUTLINED_FUNCTION_316(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return sub_1A56CA7DC(a12, a13, a14, a15);
}

uint64_t OUTLINED_FUNCTION_319(int a1)
{
  return ByteBuffer.readSlice(length:)(a1);
}

uint64_t OUTLINED_FUNCTION_320()
{
  uint64_t v0;

  return sub_1A5503B8C(*(_QWORD *)(v0 - 120), *(_QWORD *)(v0 - 112));
}

uint64_t OUTLINED_FUNCTION_321(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;

  return a9(a1, a2, a3, v9);
}

uint64_t OUTLINED_FUNCTION_323()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_329()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_332(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;

  return v2(a2, v3);
}

uint64_t OUTLINED_FUNCTION_333(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  return sub_1A553E5DC((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  return sub_1A553E5DC((uint64_t)&a28);
}

uint64_t OUTLINED_FUNCTION_335()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_338()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void OUTLINED_FUNCTION_339(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
}

uint64_t OUTLINED_FUNCTION_341()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_342()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_343()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_344()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_346()
{
  sub_1A576C854();
}

uint64_t OUTLINED_FUNCTION_349()
{
  return sub_1A576CFC0();
}

uint64_t OUTLINED_FUNCTION_350()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_353(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
}

uint64_t OUTLINED_FUNCTION_354(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void sub_1A576F59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_75_6(a1, a2, a3, a4);
  OUTLINED_FUNCTION_5();
}

#error "1A576F670: call analysis failed (funcsize=65)"

void sub_1A576F6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_139_2(a1, a2, a3, a4);
  OUTLINED_FUNCTION_5();
}

void sub_1A576F708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_75_6(a1, a2, a3, a4);
  OUTLINED_FUNCTION_5();
}

void sub_1A576F734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;

  OUTLINED_FUNCTION_20_31(a1, a2, a3, a4, a5);
  v8 = sub_1A5754030();
  if (v6)
  {
    OUTLINED_FUNCTION_59_12(v8, v9, v10, v11, v12, v13, v14, v15, v50, v53, v56, v59, v62, v65, v68, v71);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    v16 = OUTLINED_FUNCTION_17_31();
    if ((v16 & 1) != 0)
    {
      OUTLINED_FUNCTION_19_26();
    }
    else
    {
      OUTLINED_FUNCTION_53_13(v16, v17, v18, v19, v20, v21, v22, v23, v51, v54, v57, v60, v63, v66, v69, v72);
      OUTLINED_FUNCTION_59_12(v24, v25, v26, v27, v28, v29, v30, v31, v52, v55, v58, v61, v64, v67, v70, v73);
      v32 = OUTLINED_FUNCTION_17_31();
      if ((v32 & 1) == 0)
      {
        OUTLINED_FUNCTION_53_13(v32, v33, v34, v35, v36, v37, v38, v39, v51, v54, v57, v60, v63, v66, v69, v72);
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_19_26();
      OUTLINED_FUNCTION_94_5();
    }
    swift_bridgeObjectRelease();
    v40 = OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_53_13(v40, v41, v42, v43, v44, v45, v46, v47, v51, v54, v57, v60, v63, v66, v69, v72);
    OUTLINED_FUNCTION_39_20();
    sub_1A5754030();
  }
  else
  {
    v48 = *(_QWORD *)(v7 + 32);
    v49 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)v5 = *(_OWORD *)v7;
    *(_OWORD *)(v5 + 16) = v49;
    *(_QWORD *)(v5 + 32) = v48;
  }
LABEL_9:
  OUTLINED_FUNCTION_57_15();
}

#error "1A576F864: call analysis failed (funcsize=39)"

void sub_1A576F8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_27_23(a1, a2, a3, a4);
  OUTLINED_FUNCTION_5();
}

void sub_1A576F8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_60_14(a1, a2, a3, a4);
  OUTLINED_FUNCTION_5();
}

void sub_1A576F918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_117_2(a1, a2, a3, a4);
  OUTLINED_FUNCTION_5();
}

void sub_1A576F944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_118_5(a1, a2, a3, a4);
  OUTLINED_FUNCTION_5();
}

#error "1A576F9B8: call analysis failed (funcsize=40)"

#error "1A576FA68: call analysis failed (funcsize=42)"

#error "1A576FB1C: call analysis failed (funcsize=43)"

#error "1A576FBD4: call analysis failed (funcsize=42)"

#error "1A576FC84: call analysis failed (funcsize=38)"

void sub_1A576FCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;

  OUTLINED_FUNCTION_20_31(a1, a2, a3, a4, a5);
  v8 = sub_1A5759F08();
  if (v6)
  {
    OUTLINED_FUNCTION_59_12(v8, v9, v10, v11, v12, v13, v14, v15, v50, v53, v56, v59, v62, v65, v68, v71);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    v16 = OUTLINED_FUNCTION_17_31();
    if ((v16 & 1) != 0)
    {
      OUTLINED_FUNCTION_19_26();
    }
    else
    {
      OUTLINED_FUNCTION_53_13(v16, v17, v18, v19, v20, v21, v22, v23, v51, v54, v57, v60, v63, v66, v69, v72);
      OUTLINED_FUNCTION_59_12(v24, v25, v26, v27, v28, v29, v30, v31, v52, v55, v58, v61, v64, v67, v70, v73);
      v32 = OUTLINED_FUNCTION_17_31();
      if ((v32 & 1) == 0)
      {
        OUTLINED_FUNCTION_53_13(v32, v33, v34, v35, v36, v37, v38, v39, v51, v54, v57, v60, v63, v66, v69, v72);
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_19_26();
      OUTLINED_FUNCTION_94_5();
    }
    swift_bridgeObjectRelease();
    v40 = OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_53_13(v40, v41, v42, v43, v44, v45, v46, v47, v51, v54, v57, v60, v63, v66, v69, v72);
    OUTLINED_FUNCTION_39_20();
    sub_1A5759F08();
  }
  else
  {
    v48 = *(_DWORD *)(v7 + 32);
    v49 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)v5 = *(_OWORD *)v7;
    *(_OWORD *)(v5 + 16) = v49;
    *(_DWORD *)(v5 + 32) = v48;
  }
LABEL_9:
  OUTLINED_FUNCTION_57_15();
}

#error "1A576FE0C: call analysis failed (funcsize=38)"

#error "1A576FEB4: call analysis failed (funcsize=42)"

#error "1A576FF68: call analysis failed (funcsize=43)"

#error "1A576FFF4: call analysis failed (funcsize=10)"

#error "1A577004C: call analysis failed (funcsize=37)"

void sub_1A57700A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  char v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;

  OUTLINED_FUNCTION_20_31(a1, a2, a3, a4, a5);
  v8 = sub_1A575D45C();
  if (v6)
  {
    OUTLINED_FUNCTION_59_12(v8, v9, v10, v11, v12, v13, v14, v15, v50, v53, v56, v59, v62, v65, v68, v71);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    v16 = OUTLINED_FUNCTION_17_31();
    if ((v16 & 1) != 0)
    {
      OUTLINED_FUNCTION_19_26();
    }
    else
    {
      OUTLINED_FUNCTION_53_13(v16, v17, v18, v19, v20, v21, v22, v23, v51, v54, v57, v60, v63, v66, v69, v72);
      OUTLINED_FUNCTION_59_12(v24, v25, v26, v27, v28, v29, v30, v31, v52, v55, v58, v61, v64, v67, v70, v73);
      v32 = OUTLINED_FUNCTION_17_31();
      if ((v32 & 1) == 0)
      {
        OUTLINED_FUNCTION_53_13(v32, v33, v34, v35, v36, v37, v38, v39, v51, v54, v57, v60, v63, v66, v69, v72);
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_19_26();
      OUTLINED_FUNCTION_94_5();
    }
    swift_bridgeObjectRelease();
    v40 = OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_53_13(v40, v41, v42, v43, v44, v45, v46, v47, v51, v54, v57, v60, v63, v66, v69, v72);
    OUTLINED_FUNCTION_39_20();
    sub_1A575D45C();
  }
  else
  {
    v48 = *(_BYTE *)(v7 + 32);
    v49 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)v5 = *(_OWORD *)v7;
    *(_OWORD *)(v5 + 16) = v49;
    *(_BYTE *)(v5 + 32) = v48;
  }
LABEL_9:
  OUTLINED_FUNCTION_57_15();
}

void sub_1A5770188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void (*a29)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t);

  OUTLINED_FUNCTION_21_34();
  a29(v32, v33, v34, v30, v31);
  if (v29)
  {
    OUTLINED_FUNCTION_137_2();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((OUTLINED_FUNCTION_0_106() & 1) != 0)
    {
      OUTLINED_FUNCTION_77_8();
LABEL_6:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_7_46();
      v35 = OUTLINED_FUNCTION_39_20();
      v36(v35);
      goto LABEL_9;
    }
    OUTLINED_FUNCTION_7_46();
    OUTLINED_FUNCTION_137_2();
    if ((OUTLINED_FUNCTION_0_106() & 1) != 0)
    {
      OUTLINED_FUNCTION_77_8();
      OUTLINED_FUNCTION_242();
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_7_46();
  }
LABEL_9:
  OUTLINED_FUNCTION_34_24();
}

#error "1A57702CC: call analysis failed (funcsize=40)"

void sub_1A577032C(void (*a1)(uint64_t *, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  int v17;
  __int16 v18;
  char v19;
  void *v20;
  _QWORD *v21;
  id v22;
  id v23;
  id v27;

  v8 = a6 + 1;
  if (__OFADD__(a6, 1))
  {
    __break(1u);
  }
  else
  {
    v10 = a6;
    v12 = a4;
    v13 = a3;
    if (v8 >= a7)
    {
      sub_1A5718F9C();
      v20 = (void *)swift_allocError();
      *v21 = a7;
    }
    else
    {
      v15 = *a5;
      v16 = a5[1];
      v17 = *((_DWORD *)a5 + 4);
      v18 = *((_WORD *)a5 + 10);
      v19 = *((_BYTE *)a5 + 22);
      swift_retain();
      a1(a5, v8, a7);
      v20 = v7;
      if (!v7)
      {
        swift_release();
        return;
      }
      swift_release();
      *a5 = v15;
      a5[1] = v16;
      *((_DWORD *)a5 + 4) = v17;
      *((_WORD *)a5 + 10) = v18;
      *((_BYTE *)a5 + 22) = v19;
      v10 = a6;
      v12 = a4;
      v13 = a3;
    }
    swift_willThrow();
    v27 = v20;
    v22 = v20;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

LABEL_10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1A5751B10(a5, v10, a7, v13, v12);
      return;
    }

    v27 = v20;
    v23 = v20;
    if ((swift_dynamicCast() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      goto LABEL_10;
    }

  }
}

#error "1A57705CC: call analysis failed (funcsize=82)"

uint64_t sub_1A5770694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5770CEC(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03DA8);
}

uint64_t sub_1A57706B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5770CEC(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03D30);
}

#error "1A5770808: call analysis failed (funcsize=138)"

uint64_t sub_1A5770914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5770968(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03C40);
}

uint64_t sub_1A5770930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5770968(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03E20);
}

uint64_t sub_1A577094C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5770968(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03DF8);
}

#error "1A57709C0: call analysis failed (funcsize=91)"

uint64_t sub_1A5770AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5770968(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03BA0);
}

uint64_t sub_1A5770B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5771818(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03BC8);
}

#error "1A5770BC4: call analysis failed (funcsize=85)"

uint64_t sub_1A5770C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5770968(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03C68);
}

uint64_t sub_1A5770CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5770968(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03B50);
}

uint64_t sub_1A5770CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5770CEC(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03AB0);
}

#error "1A5770D60: call analysis failed (funcsize=105)"

#error "1A5770FF4: call analysis failed (funcsize=83)"

#error "1A57710B0: call analysis failed (funcsize=85)"

#error "1A57712CC: call analysis failed (funcsize=85)"

void sub_1A57712F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(__int128 *__return_ptr, uint64_t, _QWORD *);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  OUTLINED_FUNCTION_22_34();
  OUTLINED_FUNCTION_31_20();
  if (!v1)
  {
LABEL_15:
    sub_1A56E9774();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_43_11();
    OUTLINED_FUNCTION_8_50(v38, v39);
    OUTLINED_FUNCTION_80_4();
    return;
  }
  v50 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    OUTLINED_FUNCTION_9_48();
    OUTLINED_FUNCTION_52_12();
    while (1)
    {
      v3 = (__n128 *)OUTLINED_FUNCTION_70_5();
      OUTLINED_FUNCTION_19_34(v3);
      if (v4 != v5)
      {
        OUTLINED_FUNCTION_3_66();
        OUTLINED_FUNCTION_18_0();
        v6 = OUTLINED_FUNCTION_4_61();
        sub_1A5774454(v6, v7, v8, v9, v10);
        if (!v0)
        {
          OUTLINED_FUNCTION_23_29();
          OUTLINED_FUNCTION_77();
          OUTLINED_FUNCTION_19_0();
          return;
        }
        OUTLINED_FUNCTION_61_12();
        OUTLINED_FUNCTION_11_31();
      }
      else
      {
        sub_1A5718F9C();
        v11 = OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_26_19(v11, v12);
      }
      OUTLINED_FUNCTION_80_4();
      OUTLINED_FUNCTION_16_34();
      v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
      OUTLINED_FUNCTION_17_38(v13, v14, v15, v16, v17, v18, v19, v20, v40, v42, v44, v46, v48, v50, v52, v54, v56, v58, v60);
      if (OUTLINED_FUNCTION_17_31())
      {
        OUTLINED_FUNCTION_165_3();
        OUTLINED_FUNCTION_100_4(v21, v22, v23, v24, v25, v26, v27, v28, v41, v43, v45, v47, v49, v51, v53, v55, v57, v59, v61,
          v62,
          v63,
          v64);
      }
      else
      {
        OUTLINED_FUNCTION_55_12();
        v29 = OUTLINED_FUNCTION_16_34();
        OUTLINED_FUNCTION_17_38((uint64_t)v29, v30, v31, v32, v33, v34, v35, v36, v41, v43, v45, v47, v49, v51, v53, v55, v57, v59, v61);
        if ((OUTLINED_FUNCTION_17_31() & 1) == 0)
        {
          OUTLINED_FUNCTION_38();
          OUTLINED_FUNCTION_55_12();
          OUTLINED_FUNCTION_23_29();
          return;
        }
        OUTLINED_FUNCTION_165_3();
        OUTLINED_FUNCTION_25_27();
      }
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_52();
      OUTLINED_FUNCTION_55_12();
      OUTLINED_FUNCTION_23_29();
      OUTLINED_FUNCTION_49_10();
      if (v37)
      {
        OUTLINED_FUNCTION_38();
        OUTLINED_FUNCTION_98_4();
        goto LABEL_15;
      }
    }
  }
  __break(1u);
}

uint64_t sub_1A577147C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5771638(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03D08);
}

void sub_1A5771498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(__int128 *__return_ptr, uint64_t, _QWORD *);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  OUTLINED_FUNCTION_22_34();
  OUTLINED_FUNCTION_31_20();
  if (!v1)
  {
LABEL_15:
    sub_1A56E9774();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_43_11();
    OUTLINED_FUNCTION_8_50(v38, v39);
    OUTLINED_FUNCTION_80_4();
    return;
  }
  v50 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    OUTLINED_FUNCTION_9_48();
    OUTLINED_FUNCTION_52_12();
    while (1)
    {
      v3 = (__n128 *)OUTLINED_FUNCTION_70_5();
      OUTLINED_FUNCTION_19_34(v3);
      if (v4 != v5)
      {
        OUTLINED_FUNCTION_3_66();
        OUTLINED_FUNCTION_18_0();
        v6 = OUTLINED_FUNCTION_4_61();
        sub_1A57744A8(v6, v7, v8, v9, v10);
        if (!v0)
        {
          OUTLINED_FUNCTION_23_29();
          OUTLINED_FUNCTION_77();
          OUTLINED_FUNCTION_19_0();
          return;
        }
        OUTLINED_FUNCTION_61_12();
        OUTLINED_FUNCTION_11_31();
      }
      else
      {
        sub_1A5718F9C();
        v11 = OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_26_19(v11, v12);
      }
      OUTLINED_FUNCTION_80_4();
      OUTLINED_FUNCTION_16_34();
      v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
      OUTLINED_FUNCTION_17_38(v13, v14, v15, v16, v17, v18, v19, v20, v40, v42, v44, v46, v48, v50, v52, v54, v56, v58, v60);
      if (OUTLINED_FUNCTION_17_31())
      {
        OUTLINED_FUNCTION_165_3();
        OUTLINED_FUNCTION_100_4(v21, v22, v23, v24, v25, v26, v27, v28, v41, v43, v45, v47, v49, v51, v53, v55, v57, v59, v61,
          v62,
          v63,
          v64);
      }
      else
      {
        OUTLINED_FUNCTION_55_12();
        v29 = OUTLINED_FUNCTION_16_34();
        OUTLINED_FUNCTION_17_38((uint64_t)v29, v30, v31, v32, v33, v34, v35, v36, v41, v43, v45, v47, v49, v51, v53, v55, v57, v59, v61);
        if ((OUTLINED_FUNCTION_17_31() & 1) == 0)
        {
          OUTLINED_FUNCTION_38();
          OUTLINED_FUNCTION_55_12();
          OUTLINED_FUNCTION_23_29();
          return;
        }
        OUTLINED_FUNCTION_165_3();
        OUTLINED_FUNCTION_25_27();
      }
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_52();
      OUTLINED_FUNCTION_55_12();
      OUTLINED_FUNCTION_23_29();
      OUTLINED_FUNCTION_49_10();
      if (v37)
      {
        OUTLINED_FUNCTION_38();
        OUTLINED_FUNCTION_98_4();
        goto LABEL_15;
      }
    }
  }
  __break(1u);
}

uint64_t sub_1A577161C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5771638(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03B00);
}

#error "1A5771724: call analysis failed (funcsize=99)"

uint64_t sub_1A57717E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5771638(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03CB8);
}

uint64_t sub_1A57717FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5771818(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03CE0);
}

#error "1A5771904: call analysis failed (funcsize=100)"

uint64_t sub_1A57719C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5770CEC(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03D80);
}

uint64_t sub_1A57719E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5771818(a1, a2, a3, a4, a5, a6, a7, &unk_1E4F03E48);
}

uint64_t sub_1A57719FC(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  __int16 v22;
  char v23;
  void *v24;
  _QWORD *v25;
  id v26;
  id v27;
  _QWORD *v28;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *, _QWORD *);
  uint64_t v35;
  _QWORD v36[3];
  id v37;

  v8 = a7;
  v9 = a6;
  v10 = a5;
  v11 = *(_QWORD *)(result + 16);
  if (!v11)
  {
LABEL_14:
    sub_1A56E9774();
    swift_allocError();
    *v28 = 0xD000000000000019;
    v28[1] = 0x80000001A5A10000;
    v28[2] = v10;
    v28[3] = v9;
    v28[4] = v8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return swift_willThrow();
  }
  v12 = a3 + 1;
  if (__OFADD__(a3, 1))
  {
    __break(1u);
    return result;
  }
  v15 = result;
  v16 = 0;
  v35 = a3 + 1;
  v32 = *(_QWORD *)(result + 16);
  v33 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  while (1)
  {
    v17 = swift_allocObject();
    v18 = *(_OWORD *)(v15 + 16 * v16 + 32);
    *(_OWORD *)(v17 + 16) = v18;
    if (v12 >= a4)
    {
      sub_1A5718F9C();
      v24 = (void *)swift_allocError();
      *v25 = a4;
      swift_retain();
    }
    else
    {
      v19 = *a2;
      v20 = a2[1];
      v21 = *((_DWORD *)a2 + 4);
      v22 = *((_WORD *)a2 + 10);
      v23 = *((_BYTE *)a2 + 22);
      v34 = (void (*)(uint64_t *, _QWORD *))v18;
      swift_retain();
      swift_retain();
      v36[0] = v12;
      v36[1] = a4;
      v34(a2, v36);
      v24 = v7;
      if (!v7)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      swift_release();
      *a2 = v19;
      a2[1] = v20;
      *((_DWORD *)a2 + 4) = v21;
      *((_WORD *)a2 + 10) = v22;
      *((_BYTE *)a2 + 22) = v23;
      v11 = v32;
      v15 = v33;
    }
    swift_willThrow();
    v37 = v24;
    v26 = v24;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (!swift_dynamicCast())
      break;

LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    v7 = 0;
    ++v16;
    v12 = v35;
    if (v11 == v16)
    {
      swift_bridgeObjectRelease();
      v8 = a7;
      v9 = a6;
      v10 = a5;
      goto LABEL_14;
    }
  }

  v37 = v24;
  v27 = v24;
  if ((swift_dynamicCast() & 1) != 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1A5771CE4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = sub_1A574156C(*a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1A5771D10(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, _QWORD *))
{
  uint64_t v4;
  _QWORD v5[2];

  v5[0] = a1;
  v5[1] = a2;
  a3(&v4, v5);
  return v4;
}

uint64_t ExceededMaximumMessageAttributesError.actualCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*ExceededMaximumMessageAttributesError.actualCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ExceededMaximumMessageAttributesError.maximumCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

double (*ExceededMaximumMessageAttributesError.maximumCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ExceededMaximumBodySizeError.actualCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*ExceededMaximumBodySizeError.actualCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ExceededMaximumBodySizeError.maximumCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ExceededMaximumBodySizeError.maximumCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*ExceededMaximumBodySizeError.maximumCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1A5771DBC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    sub_1A594CE88();
  return sub_1A594CE88();
}

BOOL sub_1A5771DF8(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) == 0)
      return a1 == a3;
    return 0;
  }
  return (a4 & 1) != 0;
}

uint64_t sub_1A5771E20(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_15_10();
  if ((a2 & 1) == 0)
    sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A5771E74(uint64_t a1, uint64_t a2, char a3, char a4)
{
  if (a4)
  {
    if (a4 != 1)
      sub_1A594CE88();
    goto LABEL_7;
  }
  sub_1A594CE88();
  if ((a3 & 1) == 0)
LABEL_7:
    sub_1A594CE88();
  return sub_1A594CE88();
}

uint64_t sub_1A5771EEC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  _BOOL4 v7;
  _BOOL4 v10;

  if (!a3)
  {
    if (a6)
      return 0;
    if ((a2 & 1) != 0)
    {
      if ((a5 & 1) == 0)
        return 0;
    }
    else if ((a5 & 1) != 0 || a1 != a4)
    {
      return 0;
    }
    return 1;
  }
  v7 = a6 == 1 && a1 == a4;
  v10 = a6 == 2 && a1 == a4 && a2 == a5;
  if (a3 == 1)
    return v7;
  else
    return v10;
}

uint64_t sub_1A5771F50(uint64_t a1, char a2, char a3)
{
  _BYTE v7[72];

  OUTLINED_FUNCTION_15_10();
  sub_1A5771E74((uint64_t)v7, a1, a2, a3);
  return sub_1A594CED0();
}

uint64_t sub_1A5771FA4()
{
  uint64_t v0;

  return sub_1A5771E20(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_1A5771FB0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5771DBC(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_1A5771FBC()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 8);
  sub_1A594CE64();
  if ((v1 & 1) == 0)
    sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CED0();
}

BOOL sub_1A5772018(uint64_t a1, uint64_t a2)
{
  return sub_1A5771DF8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_1A5772034()
{
  uint64_t v0;

  return sub_1A5771F50(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_1A5772040(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5771E74(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

uint64_t sub_1A577204C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BYTE v5[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_1A594CE64();
  sub_1A5771E74((uint64_t)v5, v1, v2, v3);
  return sub_1A594CED0();
}

uint64_t sub_1A57720A0(uint64_t a1, uint64_t a2)
{
  return sub_1A5771EEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

double ResponseParser.init(bufferLimit:messageAttributeLimit:bodySizeLimit:literalSizeLimit:parsedStringCache:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t (*v15)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>);
  uint64_t v16;
  double result;

  if (a5)
  {
    v14 = OUTLINED_FUNCTION_70_5();
    *(_QWORD *)(v14 + 16) = a5;
    *(_QWORD *)(v14 + 24) = a6;
    v15 = sub_1A5772198;
  }
  else
  {
    v14 = 0;
    v15 = sub_1A5771CE4;
  }
  v16 = OUTLINED_FUNCTION_70_5();
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  *(_QWORD *)a7 = sub_1A5772190;
  *(_QWORD *)(a7 + 8) = v16;
  *(_QWORD *)(a7 + 16) = a4;
  *(_QWORD *)(a7 + 24) = 0x7FFFFFFFFFFFFFFFLL;
  *(_QWORD *)(a7 + 32) = a1;
  *(_QWORD *)(a7 + 40) = a2;
  *(_QWORD *)(a7 + 48) = a3;
  result = 0.0;
  *(_OWORD *)(a7 + 56) = xmmword_1A59ABD60;
  *(_BYTE *)(a7 + 72) = 0;
  return result;
}

uint64_t sub_1A5772174()
{
  swift_release();
  OUTLINED_FUNCTION_20_28();
  return swift_deallocObject();
}

uint64_t sub_1A5772190(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5771D10(a1, a2, *(void (**)(uint64_t *__return_ptr, _QWORD *))(v2 + 16));
}

uint64_t sub_1A5772198@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  a2[1] = v5;
  return result;
}

void ResponseParser.parseResponseStream(buffer:)(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  int v38;
  BOOL v39;
  int v40;
  unsigned int v41;
  id v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  id *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  int v85;
  int v86;
  unsigned int v87;
  __n128 v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t __dst;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char __src[184];
  uint64_t v145;
  unsigned int v146;
  unint64_t v147;
  __int16 v148;
  char v149;
  _BYTE v150[184];
  _BYTE v151[184];
  _BYTE v152[184];

  v7 = *(_QWORD *)a1;
  v8 = *(_DWORD *)(a1 + 8);
  v9 = *(_WORD *)(a1 + 20);
  v10 = *(_BYTE *)(a1 + 22);
  v145 = *(_QWORD *)a1;
  v146 = v8;
  a3.n128_u64[0] = *(_QWORD *)(a1 + 12);
  v88 = a3;
  v147 = a3.n128_u64[0];
  v148 = v9;
  v149 = v10;
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  if (!*(_BYTE *)(v3 + 72))
  {
LABEL_10:
    swift_retain_n();
    sub_1A5772D50(&v145, 1, 100, v11, v12 & 1, v3, __src);
    v3 = v4;
    if (!v4)
    {
      swift_release();
      sub_1A56EF344(__src, &__dst);
      sub_1A56EF344(&__dst, &v121);
      nullsub_1(&v121);
      OUTLINED_FUNCTION_120_3(v47, v48, v49, v50, v51, v52, v53, v54, *(_OWORD *)&v88);
      if (!v39)
        goto LABEL_49;
      if (v147 < v146)
      {
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      v57 = v56 - (v147 - v146);
      v39 = __CFADD__(v8, v57);
      v58 = v8 + v57;
      if (v39)
      {
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      if (v55 < v58)
      {
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      OUTLINED_FUNCTION_112_3();
      v59 = &v121;
LABEL_37:
      sub_1A5772988((uint64_t)v59, (uint64_t)v152);
      sub_1A5772988((uint64_t)v152, a2);
      return;
    }
    swift_release();
    v145 = v7;
    v146 = v8;
    LODWORD(v147) = v88.n128_u32[0];
    OUTLINED_FUNCTION_46_11();
LABEL_13:
    v121 = (id)v3;
    v42 = (id)v3;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (!OUTLINED_FUNCTION_17_31())
    {

      v46 = *(_DWORD *)(a1 + 8);
      v45 = *(_DWORD *)(a1 + 12);
      if (v45 >= v46)
      {
        if (v147 >= v146)
        {
          if (!__CFADD__(v46, v45 - v46 - (v147 - v146)))
          {
            if (v45 >= v45 - ((_DWORD)v147 - v146))
            {
              OUTLINED_FUNCTION_112_3();
              return;
            }
            goto LABEL_45;
          }
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }

    sub_1A5772958((uint64_t)__src);
    v44 = *(_DWORD *)(a1 + 8);
    v43 = *(_DWORD *)(a1 + 12);
    if (v43 < v44)
    {
      __break(1u);
    }
    else if (v147 >= v146)
    {
      if (!__CFADD__(v44, v43 - v44 - (v147 - v146)))
      {
        if (v43 >= v43 - ((_DWORD)v147 - v146))
        {
LABEL_18:
          OUTLINED_FUNCTION_112_3();
LABEL_36:
          v59 = (id *)__src;
          goto LABEL_37;
        }
        goto LABEL_41;
      }
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    __break(1u);
    goto LABEL_40;
  }
  if (*(_BYTE *)(v3 + 72) == 1)
  {
    OUTLINED_FUNCTION_1_2();
    sub_1A5772774(&v145, v11, v151);
    v3 = v4;
    if (v4)
      goto LABEL_13;
    v13 = sub_1A5715EC4(v151, &__dst);
    OUTLINED_FUNCTION_132_4((uint64_t)v13, v14, v15, v16, v17, v18, v19, v20, v88.n128_i64[0], v88.n128_i64[1], v95, __dst, v99, v100, v101, v102, v103, v104, v105,
      v106,
      v107,
      v108,
      v109,
      v110,
      v111,
      v112,
      v113,
      v114,
      v115,
      v116,
      v117,
      v118,
      v119,
      v120,
      (char)v121);
    v21 = sub_1A57729D0((uint64_t)&v121);
    OUTLINED_FUNCTION_130_5(v21, v22, v23, v24, v25, v26, v27, v28, v89, v93, v96, __dst, v99, v100, v101, v102, v103, v104, v105,
      v106,
      v107,
      v108,
      v109,
      v110,
      v111,
      v112,
      v113,
      v114,
      v115,
      v116,
      v117,
      v118,
      v119,
      v120,
      (char)v121,
      v122,
      v123,
      v124,
      v125,
      v126,
      v127,
      v128,
      v129,
      v130,
      v131,
      v132,
      v133,
      v134,
      v135,
      v136,
      v137,
      v138,
      v139,
      v140,
      v141,
      v142,
      v143,
      __src[0]);
    nullsub_1(__src);
    OUTLINED_FUNCTION_120_3(v29, v30, v31, v32, v33, v34, v35, v36, v90);
    if (!v39)
      goto LABEL_46;
    if (v147 < v146)
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    v40 = v38 - (v147 - v146);
    v39 = __CFADD__(v8, v40);
    v41 = v8 + v40;
    if (v39)
    {
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (v37 >= v41)
      goto LABEL_18;
    __break(1u);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_1_2();
  sub_1A5772528((uint64_t)&v145, v11, v12, v150);
  v3 = v4;
  if (v4)
    goto LABEL_13;
  sub_1A5715EC4(v150, &__dst);
  v60 = swift_release();
  OUTLINED_FUNCTION_132_4(v60, v61, v62, v63, v64, v65, v66, v67, v88.n128_i64[0], v88.n128_i64[1], v95, __dst, v99, v100, v101, v102, v103, v104, v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    (char)v121);
  v68 = sub_1A57729D0((uint64_t)&v121);
  OUTLINED_FUNCTION_130_5(v68, v69, v70, v71, v72, v73, v74, v75, v91, v94, v97, __dst, v99, v100, v101, v102, v103, v104, v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    (char)v121,
    v122,
    v123,
    v124,
    v125,
    v126,
    v127,
    v128,
    v129,
    v130,
    v131,
    v132,
    v133,
    v134,
    v135,
    v136,
    v137,
    v138,
    v139,
    v140,
    v141,
    v142,
    v143,
    __src[0]);
  nullsub_1(__src);
  OUTLINED_FUNCTION_120_3(v76, v77, v78, v79, v80, v81, v82, v83, v92);
  if (!v39)
    goto LABEL_53;
  if (v84 < v146)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v86 = v85 - (v84 - v146);
  v39 = __CFADD__(v8, v86);
  v87 = v8 + v86;
  if (v39)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (v84 >= v87)
  {
    *(_DWORD *)(a1 + 8) = v87;
    goto LABEL_36;
  }
LABEL_56:
  __break(1u);
}

void *sub_1A5772528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  _QWORD __src[2];
  int v17;
  __int16 v18;
  char v19;
  _BYTE __dst[184];
  _BYTE v21[184];

  if (a2)
  {
    result = (void *)sub_1A575DB48(a1, 0, 100, a2);
    if (v5)
      return result;
    v12 = HIDWORD(v10) - v10;
    if (HIDWORD(v10) >= v10)
    {
      v13 = a2 - v12;
      if (!__OFSUB__(a2, v12))
      {
        __src[0] = result;
        __src[1] = v10;
        v17 = v11;
        v18 = WORD2(v11);
        v19 = BYTE6(v11);
        sub_1A572B4A8((uint64_t)__src);
        sub_1A56DDB8C(__src, __dst);
        sub_1A5773950((uint64_t)__dst);
        if (*(_BYTE *)(v4 + 72) != 2 || *(_QWORD *)(v4 + 56) != a2 || *(_QWORD *)(v4 + 64) != a3)
        {
          while (1)
          {
            swift_retain();
            sub_1A594C720();
            sub_1A594B5F8();
LABEL_25:
            sub_1A594C924();
            sub_1A594C9C0();
            __break(1u);
          }
        }
        *(_QWORD *)(v4 + 56) = v13;
        *(_QWORD *)(v4 + 64) = a3;
        *(_BYTE *)(v4 + 72) = 2;
        goto LABEL_19;
      }
      goto LABEL_23;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    sub_1A594C720();
    sub_1A594B5F8();
    goto LABEL_25;
  }
  if (__OFADD__(a3, 1))
  {
    __break(1u);
    goto LABEL_22;
  }
  sub_1A572B468(__src);
  sub_1A56DDB8C(__src, __dst);
  sub_1A5773950((uint64_t)__dst);
  if (*(_BYTE *)(v4 + 72) != 2 || *(_QWORD *)(v4 + 56) || *(_QWORD *)(v4 + 64) != a3)
    goto LABEL_24;
  *(_QWORD *)(v4 + 56) = a3 + 1;
  *(_QWORD *)(v4 + 64) = 0;
  *(_BYTE *)(v4 + 72) = 0;
LABEL_19:
  sub_1A5715EC4(__dst, v21);
  return sub_1A5715EC4(v21, a4);
}

void *sub_1A5772774@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int16 v11;
  char v12;
  void *result;
  _QWORD __src[2];
  int v16;
  __int16 v17;
  char v18;
  _BYTE __dst[184];
  uint64_t v20;
  uint64_t v21;
  int v22;
  __int16 v23;
  char v24;

  v8 = *a1;
  v9 = a1[1];
  v10 = *((_DWORD *)a1 + 4);
  v11 = *((_WORD *)a1 + 10);
  v12 = *((_BYTE *)a1 + 22);
  swift_retain();
  sub_1A5748B7C();
  if (v4)
  {
    swift_release();
    *a1 = v8;
    a1[1] = v9;
    *((_DWORD *)a1 + 4) = v10;
    *((_WORD *)a1 + 10) = v11;
    *((_BYTE *)a1 + 22) = v12;
    return (void *)swift_willThrow();
  }
  else
  {
    swift_release();
    __src[0] = v20;
    __src[1] = v21;
    v16 = v22;
    v17 = v23;
    v18 = v24;
    sub_1A572B4A8((uint64_t)__src);
    sub_1A56DDB8C(__src, __dst);
    sub_1A5773950((uint64_t)__dst);
    if (*(_BYTE *)(v3 + 72) == 1 && *(_QWORD *)(v3 + 56) == a2)
    {
      *(_QWORD *)(v3 + 56) = 0;
      *(_QWORD *)(v3 + 64) = a2;
      *(_BYTE *)(v3 + 72) = 2;
      return sub_1A5715EC4(__dst, a3);
    }
    else
    {
      swift_retain();
      sub_1A594C720();
      sub_1A594B5F8();
      sub_1A594C924();
      result = (void *)sub_1A594C9C0();
      __break(1u);
    }
  }
  return result;
}

void sub_1A5772958(uint64_t a1)
{
  bzero((void *)a1, 0xB0uLL);
  *(_BYTE *)(a1 + 178) = -8;
  *(_WORD *)(a1 + 176) = 0;
}

uint64_t sub_1A5772988(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A57729D0(uint64_t a1)
{
  uint64_t result;
  int v2;

  v2 = *(unsigned __int16 *)(a1 + 176);
  result = a1 + 176;
  *(_BYTE *)(result + 2) = ((v2 | (*(unsigned __int8 *)(result + 2) << 16)) & 0x7FFFF | 0x800000u) >> 16;
  *(_WORD *)result = v2;
  return result;
}

void *sub_1A57729F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W4>, uint64_t *a5@<X5>, void *a6@<X8>)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *p_src;
  uint64_t v19;
  uint64_t v20;
  _BYTE __dst[184];
  char __src;
  char v23;
  _BYTE v24[192];

  v13 = *a5;
  v12 = a5[1];
  v14 = a5[2];
  v15 = a5[3];
  swift_retain();
  if ((a4 & 1) != 0)
  {
    sub_1A572A4E0(a1, a2, a3, v13, v12, v14, v15, v16, v19, v20);
    if (!v6)
    {
      p_src = &__src;
      goto LABEL_7;
    }
    return (void *)swift_release();
  }
  sub_1A572AEC4(a1, a2, a3, v13, v12, v14, v15, v16, v19, v20);
  if (v6)
    return (void *)swift_release();
  p_src = &v23;
LABEL_7:
  sub_1A56DDB8C(p_src, &v19);
  swift_release();
  sub_1A56DDB8C(&v19, __dst);
  sub_1A5773950((uint64_t)__dst);
  sub_1A56EF344(__dst, v24);
  return sub_1A56EF344(v24, a6);
}

_QWORD *sub_1A5772B0C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v12;
  __int16 v13;
  int v14;
  _QWORD __src[13];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v10 = a3;
      swift_retain();
    }
    else
    {
      v7 = (uint64_t)result;
      v8 = *result;
      v9 = result[1];
      v13 = *((_WORD *)result + 10);
      v14 = *((_DWORD *)result + 4);
      v12 = *((_BYTE *)result + 22);
      swift_retain();
      swift_retain();
      sub_1A5751898();
      if (!v4)
      {
        sub_1A5733598(v7, v5, a3);
        sub_1A575DBEC((uint64_t *)v7, v5, a3);
        swift_release();
        swift_release();
        __src[0] = v17;
        __src[1] = v18;
        __src[2] = v19;
        __src[3] = v20;
        __src[4] = v21;
        __src[5] = v22;
        __src[6] = v23;
        __src[7] = v24;
        __src[8] = v25;
        __src[9] = v26;
        __src[10] = v27;
        __src[11] = v28;
        __src[12] = v29;
        v16 = v30;
        sub_1A5773890((uint64_t)__src);
        return sub_1A56EF344(__src, a4);
      }
      swift_release();
      *(_QWORD *)v7 = v8;
      *(_QWORD *)(v7 + 8) = v9;
      *(_DWORD *)(v7 + 16) = v14;
      *(_WORD *)(v7 + 20) = v13;
      *(_BYTE *)(v7 + 22) = v12;
    }
    swift_willThrow();
    return (_QWORD *)swift_release();
  }
  return result;
}

void sub_1A5772D50(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  void *v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _QWORD v30[15];
  char v31;
  uint64_t v32;
  _BYTE v33[184];
  _OWORD v34[6];
  uint64_t v35;
  char v36;
  _BYTE v37[184];
  _BYTE v38[184];
  _BYTE v39[184];
  uint64_t v40;

  sub_1A5751974((uint64_t)a1, a2, a3);
  if (v7)

  MEMORY[0x1E0C80A78](v15);
  v30[14] = a4;
  v31 = a5 & 1;
  v32 = a6;
  MEMORY[0x1E0C80A78](v16);
  v30[10] = sub_1A57735E8;
  v30[11] = v17;
  MEMORY[0x1E0C80A78](v18);
  v30[6] = a6;
  MEMORY[0x1E0C80A78](v19);
  v30[2] = sub_1A5773668;
  v30[3] = v20;
  sub_1A577032C((void (*)(uint64_t *, uint64_t, uint64_t))sub_1A5773650, v21, (uint64_t)sub_1A5774DB8, (uint64_t)v30, a1, a2, a3);
  sub_1A56EF344(&v40, v38);
  sub_1A56EF344(v38, v39);
  if (sub_1A5773888((uint64_t)v39) == 1)
  {
    nullsub_1(v39);
    sub_1A56DDB8C(v22, v33);
    v23 = (char *)&loc_1A5772F9C + *((int *)qword_1A5773398 + sub_1A56EFCB0((uint64_t)v33));
    __asm { BR              X10 }
  }
  nullsub_1(v39);
  v25 = *(_QWORD *)(v24 + 96);
  v26 = *(_BYTE *)(v24 + 104);
  v27 = *(_OWORD *)(v24 + 16);
  v34[0] = *(_OWORD *)v24;
  v34[1] = v27;
  v28 = *(_OWORD *)(v24 + 48);
  v34[2] = *(_OWORD *)(v24 + 32);
  v34[3] = v28;
  v29 = *(_OWORD *)(v24 + 80);
  v34[4] = *(_OWORD *)(v24 + 64);
  v34[5] = v29;
  v35 = v25;
  v36 = v26;
  sub_1A5773890((uint64_t)v34);
  sub_1A5715EC4(v34, v37);
  sub_1A57729D0((uint64_t)v37);
  sub_1A56EF344(v37, a7);
}

void type metadata accessor for ExceededMaximumMessageAttributesError()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for ExceededMaximumBodySizeError()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t initializeWithCopy for ResponseParser(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ResponseParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v5;
  return a1;
}

void *__swift_memcpy73_8_0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t assignWithTake for ResponseParser(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseParser(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseParser(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResponseParser()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A577358C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1A5773594(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void type metadata accessor for ResponseParser.Mode()
{
  OUTLINED_FUNCTION_3_1();
}

unint64_t sub_1A57735AC()
{
  unint64_t result;

  result = qword_1EE7A9EC0;
  if (!qword_1EE7A9EC0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B7334, &unk_1E4E5F5A8);
    atomic_store(result, (unint64_t *)&qword_1EE7A9EC0);
  }
  return result;
}

void *sub_1A57735E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;

  return sub_1A57729F4(a1, a2, a3, *(_BYTE *)(v4 + 24), *(uint64_t **)(v4 + 32), a4);
}

_QWORD *sub_1A5773608@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr)@<X3>, void *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD __src[23];

  result = a1(__src);
  if (!v2)
    return sub_1A56EF344(__src, a2);
  return result;
}

_QWORD *sub_1A5773650@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return sub_1A5773608(*(_QWORD *(**)(_QWORD *__return_ptr))(v1 + 16), a1);
}

_QWORD *sub_1A5773668@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1A5772B0C(a1, a2, a3, a4);
}

void *sub_1A5773680@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  const void *v4;
  uint64_t v5;
  const void *v6;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[184];
  _BYTE __src[184];

  v6 = v4;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796218);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD40;
  v12 = swift_allocObject();
  memcpy((void *)(v12 + 16), v6, 0x49uLL);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1A5773A30;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(inited + 32) = sub_1A5773B74;
  *(_QWORD *)(inited + 40) = v13;
  v14 = swift_allocObject();
  memcpy((void *)(v14 + 16), v6, 0x49uLL);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1A5773BB0;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(inited + 48) = sub_1A5774D30;
  *(_QWORD *)(inited + 56) = v15;
  sub_1A5773838((uint64_t)v6);
  sub_1A5773838((uint64_t)v6);
  sub_1A57719FC(inited, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 220);
  swift_setDeallocating();
  if (v5)
    return (void *)sub_1A577425C(&qword_1EE79B548);
  sub_1A577425C(&qword_1EE79B548);
  sub_1A56EF344(__src, v17);
  return sub_1A56EF344(v17, a4);
}

uint64_t sub_1A5773838(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1A5773860(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_1A5773888(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 178);
}

uint64_t sub_1A5773890(uint64_t result)
{
  *(_BYTE *)(result + 178) = 0;
  return result;
}

unint64_t sub_1A5773898()
{
  unint64_t result;

  result = qword_1EE7A9EC8;
  if (!qword_1EE7A9EC8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ExceededMaximumMessageAttributesError, &type metadata for ExceededMaximumMessageAttributesError);
    atomic_store(result, (unint64_t *)&qword_1EE7A9EC8);
  }
  return result;
}

uint64_t sub_1A57738D4(uint64_t a1)
{
  sub_1A572B774(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_WORD *)(a1 + 176),
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56DDC24,
    (uint64_t (*)(void))sub_1A56DDDA4);
  return a1;
}

uint64_t sub_1A5773950(uint64_t result)
{
  *(_BYTE *)(result + 178) = 1;
  return result;
}

void sub_1A577395C(uint64_t a1)
{
  *(_QWORD *)a1 = 1;
  bzero((void *)(a1 + 8), 0xA8uLL);
  *(_WORD *)(a1 + 176) = 2560;
}

unint64_t sub_1A5773990()
{
  unint64_t result;

  result = qword_1EE7A9ED0;
  if (!qword_1EE7A9ED0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ExceededMaximumBodySizeError, &type metadata for ExceededMaximumBodySizeError);
    atomic_store(result, (unint64_t *)&qword_1EE7A9ED0);
  }
  return result;
}

void *sub_1A57739CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, void *a5@<X8>)
{
  uint64_t v5;
  void *result;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD __src[3];
  char v12;

  result = (void *)sub_1A5741E18(a1, a2, a3, *a4, a4[1], a4[2], a4[3]);
  if (!v5)
  {
    __src[0] = result;
    __src[1] = v8;
    __src[2] = v9;
    v12 = v10 & 1;
    sub_1A57744F4((uint64_t)__src);
    return sub_1A56EF344(__src, a5);
  }
  return result;
}

void *sub_1A5773A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;

  return sub_1A57739CC(a1, a2, a3, (uint64_t *)(v4 + 16), a4);
}

void sub_1A5773A48(void *a1@<X8>)
{
  uint64_t v1;
  _QWORD v3[2];
  __int128 v4;
  uint64_t v5;
  char v6;
  _BYTE __src[184];
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char v12;

  swift_retain();
  sub_1A5759580();
  if (!v1)
  {
    v3[0] = v8;
    v3[1] = v9;
    v4 = v10;
    v5 = v11;
    v6 = v12;
    sub_1A577429C((uint64_t)v3);
    sub_1A5715EC4(v3, __src);
    sub_1A57729D0((uint64_t)__src);
    sub_1A56EF344(__src, a1);
  }
}

_QWORD *sub_1A5773B20@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *(*a3)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD)@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  _QWORD __src[23];

  result = a3(__src, a1, *a2, a2[1]);
  if (!v4)
    return sub_1A56EF344(__src, a4);
  return result;
}

_QWORD *sub_1A5773B74@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;

  return sub_1A5773B20(a1, a2, *(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))(v3 + 16), a3);
}

uint64_t sub_1A5773B8C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A5773BB0(void *a1@<X8>)
{
  sub_1A5773A48(a1);
}

uint64_t sub_1A5773BC8(uint64_t a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  _BYTE v8[184];
  _BYTE __src[184];
  _BYTE v10[184];
  _BYTE __dst[184];
  _BYTE v12[184];

  sub_1A56EF344(v1, __src);
  sub_1A56EF344(__src, v12);
  sub_1A56EF344(v1, v10);
  if (sub_1A5773888((uint64_t)v10) == 1)
  {
    nullsub_1(v10);
    sub_1A56DDB8C(v3, __dst);
    sub_1A594CE88();
    sub_1A56EF344(v12, v8);
    nullsub_1(v8);
    sub_1A57738D4(v4);
    sub_1A572A820(a1);
  }
  else
  {
    nullsub_1(v10);
    sub_1A56EFC74(v5, __dst);
    sub_1A594CE88();
    sub_1A56EF344(v12, v8);
    nullsub_1(v8);
    sub_1A56EF4D4(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_QWORD *)(v6 + 72), *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), *(_QWORD *)(v6 + 96), *(_BYTE *)(v6 + 104));
    ResponsePayload.hash(into:)();
  }
  return sub_1A5774CA8((uint64_t)v1, (uint64_t (*)(void))sub_1A56EF880, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5683900, (uint64_t (*)(void))sub_1A5683854);
}

uint64_t sub_1A5773CFC(void *a1, void *a2)
{
  int v4;
  void *v5;
  int v6;
  void *v7;
  char v8;
  int v9;
  void *v10;
  char v11;
  _BYTE v13[184];
  _BYTE v14[184];
  _BYTE v15[184];
  _BYTE __dst[184];

  sub_1A56EF344(a1, v15);
  v4 = sub_1A5773888((uint64_t)v15);
  nullsub_1(v15);
  if (v4 == 1)
  {
    sub_1A56DDB8C(v5, __dst);
    sub_1A56EF344(a2, v13);
    v6 = sub_1A5773888((uint64_t)v13);
    nullsub_1(v13);
    if (v6 == 1)
    {
      sub_1A56DDB8C(v7, v14);
      sub_1A5774CA8((uint64_t)a1, (uint64_t (*)(void))sub_1A56EF4D4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56DDC24, (uint64_t (*)(void))sub_1A56DDDA4);
      sub_1A5774CA8((uint64_t)a2, (uint64_t (*)(void))sub_1A56EF4D4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56DDC24, (uint64_t (*)(void))sub_1A56DDDA4);
      sub_1A572AA34(__dst);
LABEL_9:
      v11 = v8;
      sub_1A5774CA8((uint64_t)a2, (uint64_t (*)(void))sub_1A56EF880, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5683900, (uint64_t (*)(void))sub_1A5683854);
      sub_1A5774CA8((uint64_t)a1, (uint64_t (*)(void))sub_1A56EF880, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5683900, (uint64_t (*)(void))sub_1A5683854);
      return v11 & 1;
    }
    sub_1A56EFC74(v7, v14);
  }
  else
  {
    sub_1A56EFC74(v5, v14);
    sub_1A56EF344(a2, v13);
    v9 = sub_1A5773888((uint64_t)v13);
    nullsub_1(v13);
    if (v9 != 1)
    {
      sub_1A56EFC74(v10, __dst);
      sub_1A5774CA8((uint64_t)a1, (uint64_t (*)(void))sub_1A56EF4D4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56DDC24, (uint64_t (*)(void))sub_1A56DDDA4);
      sub_1A5774CA8((uint64_t)a2, (uint64_t (*)(void))sub_1A56EF4D4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56DDC24, (uint64_t (*)(void))sub_1A56DDDA4);
      static ResponsePayload.__derived_enum_equals(_:_:)(v14);
      goto LABEL_9;
    }
    sub_1A56DDB8C(v10, __dst);
  }
  v11 = 0;
  return v11 & 1;
}

uint64_t sub_1A5773EC8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  _BYTE v6[184];
  _BYTE v7[72];
  _BYTE __src[184];
  _BYTE v9[184];
  _BYTE __dst[184];
  _BYTE v11[184];

  sub_1A56EF344(v0, __src);
  sub_1A56EF344(__src, v11);
  sub_1A594CE64();
  sub_1A56EF344(v0, v9);
  if (sub_1A5773888((uint64_t)v9) == 1)
  {
    nullsub_1(v9);
    sub_1A56DDB8C(v1, __dst);
    sub_1A594CE88();
    sub_1A56EF344(v11, v6);
    nullsub_1(v6);
    sub_1A57738D4(v2);
    sub_1A572A820((uint64_t)v7);
  }
  else
  {
    nullsub_1(v9);
    sub_1A56EFC74(v3, __dst);
    sub_1A594CE88();
    sub_1A56EF344(v11, v6);
    nullsub_1(v6);
    sub_1A56EF4D4(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), *(_QWORD *)(v4 + 96), *(_BYTE *)(v4 + 104));
    ResponsePayload.hash(into:)();
  }
  sub_1A5774CA8((uint64_t)v0, (uint64_t (*)(void))sub_1A56EF880, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5683900, (uint64_t (*)(void))sub_1A5683854);
  return sub_1A594CED0();
}

uint64_t sub_1A577400C()
{
  void *v0;
  _BYTE __dst[184];

  sub_1A56EF344(v0, __dst);
  return sub_1A5773EC8();
}

uint64_t sub_1A5774040(uint64_t a1)
{
  void *v1;
  _BYTE __dst[184];

  sub_1A56EF344(v1, __dst);
  return sub_1A5773BC8(a1);
}

uint64_t sub_1A577407C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _BYTE v11[184];
  _BYTE v12[72];
  _OWORD __dst[6];
  uint64_t v14;
  char v15;
  _BYTE __src[184];
  _BYTE v17[184];

  sub_1A56EF344(v0, __src);
  sub_1A594CE64();
  sub_1A56EF344(__src, v17);
  if (sub_1A5773888((uint64_t)v17) == 1)
  {
    nullsub_1(v17);
    sub_1A56DDB8C(v1, __dst);
    sub_1A594CE88();
    sub_1A56EF344(__src, v11);
    nullsub_1(v11);
    sub_1A57738D4(v2);
    sub_1A572A820((uint64_t)v12);
  }
  else
  {
    nullsub_1(v17);
    v4 = *(_QWORD *)(v3 + 96);
    v5 = *(_BYTE *)(v3 + 104);
    v6 = *(_OWORD *)(v3 + 16);
    __dst[0] = *(_OWORD *)v3;
    __dst[1] = v6;
    v7 = *(_OWORD *)(v3 + 48);
    __dst[2] = *(_OWORD *)(v3 + 32);
    __dst[3] = v7;
    v8 = *(_OWORD *)(v3 + 80);
    __dst[4] = *(_OWORD *)(v3 + 64);
    __dst[5] = v8;
    v14 = v4;
    v15 = v5;
    sub_1A594CE88();
    sub_1A56EF344(__src, v11);
    nullsub_1(v11);
    sub_1A56EF4D4(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32), *(_QWORD *)(v9 + 40), *(_QWORD *)(v9 + 48), *(_QWORD *)(v9 + 56), *(_QWORD *)(v9 + 64), *(_QWORD *)(v9 + 72), *(_QWORD *)(v9 + 80), *(_QWORD *)(v9 + 88), *(_QWORD *)(v9 + 96), *(_BYTE *)(v9 + 104));
    ResponsePayload.hash(into:)();
  }
  sub_1A5774CA8((uint64_t)__src, (uint64_t (*)(void))sub_1A56EF880, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5683900, (uint64_t (*)(void))sub_1A5683854);
  return sub_1A594CED0();
}

uint64_t sub_1A57741D4(void *a1, void *a2)
{
  _BYTE v4[184];
  _BYTE __dst[184];

  sub_1A56EF344(a1, v4);
  sub_1A56EF344(a2, __dst);
  return sub_1A5773CFC(v4, __dst) & 1;
}

uint64_t sub_1A577421C()
{
  swift_arrayDestroy();
  OUTLINED_FUNCTION_20_28();
  return swift_deallocClassInstance();
}

uint64_t sub_1A5774244()
{
  return sub_1A577425C(&qword_1EE79B548);
}

uint64_t sub_1A5774250()
{
  return sub_1A577425C(&qword_1EE7A9ED8);
}

uint64_t sub_1A577425C(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName_0(a1);
  swift_arrayDestroy();
  OUTLINED_FUNCTION_20_28();
  return swift_deallocClassInstance();
}

uint64_t sub_1A577429C(uint64_t result)
{
  *(_BYTE *)(result + 178) = 2;
  return result;
}

double sub_1A57742A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(__int128 *__return_ptr, uint64_t, _QWORD *)@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v5;
  double result;
  _QWORD v8[2];
  __int128 v9;

  v8[0] = a2;
  v8[1] = a3;
  a4(&v9, a1, v8);
  if (!v5)
  {
    result = *(double *)&v9;
    *a5 = v9;
  }
  return result;
}

_QWORD *sub_1A57742EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, _QWORD *)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  _QWORD *result;
  int v8;
  char v9;
  _QWORD v10[2];
  uint64_t v11;
  int v12;
  char v13;

  v10[0] = a2;
  v10[1] = a3;
  result = a4(&v11, a1, v10);
  if (!v5)
  {
    v8 = v12;
    v9 = v13;
    *(_QWORD *)a5 = v11;
    *(_BYTE *)(a5 + 12) = v9;
    *(_DWORD *)(a5 + 8) = v8;
  }
  return result;
}

double sub_1A5774340@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(__int128 *__return_ptr, uint64_t, _QWORD *)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  double result;
  uint64_t v8;
  int v9;
  __int16 v10;
  _QWORD v11[2];
  __int128 v12;
  uint64_t v13;
  int v14;
  __int16 v15;

  v11[0] = a2;
  v11[1] = a3;
  a4(&v12, a1, v11);
  if (!v5)
  {
    v8 = v13;
    v9 = v14;
    v10 = v15;
    result = *(double *)&v12;
    *(_OWORD *)a5 = v12;
    *(_QWORD *)(a5 + 16) = v8;
    *(_WORD *)(a5 + 28) = v10;
    *(_DWORD *)(a5 + 24) = v9;
  }
  return result;
}

_QWORD *sub_1A577439C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, _QWORD *)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  _QWORD *result;
  int v8;
  char v9;
  _QWORD v10[2];
  uint64_t v11;
  int v12;
  char v13;

  v10[0] = a2;
  v10[1] = a3;
  result = a4(&v11, a1, v10);
  if (!v5)
  {
    v8 = v12;
    v9 = v13;
    *(_QWORD *)a5 = v11;
    *(_DWORD *)(a5 + 8) = v8;
    *(_BYTE *)(a5 + 12) = v9;
  }
  return result;
}

double sub_1A57743F0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(__int128 *__return_ptr, uint64_t, _QWORD *)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  double result;
  uint64_t v8;
  int v9;
  __int16 v10;
  char v11;
  _QWORD v12[2];
  __int128 v13;
  uint64_t v14;
  int v15;
  __int16 v16;
  char v17;

  v12[0] = a2;
  v12[1] = a3;
  a4(&v13, a1, v12);
  if (!v5)
  {
    v8 = v14;
    v9 = v15;
    v10 = v16;
    v11 = v17;
    result = *(double *)&v13;
    *(_OWORD *)a5 = v13;
    *(_QWORD *)(a5 + 16) = v8;
    *(_WORD *)(a5 + 28) = v10;
    *(_DWORD *)(a5 + 24) = v9;
    *(_BYTE *)(a5 + 30) = v11;
  }
  return result;
}

double sub_1A5774454@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(__int128 *__return_ptr, uint64_t, _QWORD *)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  double result;
  uint64_t v8;
  char v9;
  _QWORD v10[2];
  __int128 v11;
  uint64_t v12;
  char v13;

  v10[0] = a2;
  v10[1] = a3;
  a4(&v11, a1, v10);
  if (!v5)
  {
    v8 = v12;
    v9 = v13;
    result = *(double *)&v11;
    *(_OWORD *)a5 = v11;
    *(_QWORD *)(a5 + 16) = v8;
    *(_BYTE *)(a5 + 24) = v9;
  }
  return result;
}

double sub_1A57744A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(__int128 *__return_ptr, uint64_t, _QWORD *)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  double result;
  char v8;
  _QWORD v9[2];
  __int128 v10;
  char v11;

  v9[0] = a2;
  v9[1] = a3;
  a4(&v10, a1, v9);
  if (!v5)
  {
    v8 = v11;
    result = *(double *)&v10;
    *(_OWORD *)a5 = v10;
    *(_BYTE *)(a5 + 16) = v8;
  }
  return result;
}

uint64_t sub_1A57744F4(uint64_t a1)
{
  uint64_t result;
  int v2;

  v2 = *(unsigned __int16 *)(a1 + 176);
  result = a1 + 176;
  *(_BYTE *)(result + 2) = ((v2 | (*(unsigned __int8 *)(result + 2) << 16)) >> 16) & 7;
  *(_WORD *)result = v2;
  return result;
}

uint64_t sub_1A5774510(uint64_t a1)
{
  sub_1A56EF880(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  return a1;
}

void sub_1A5774568(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_108_4(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11, v12);
  if (!v9)
  {
    *v8 = v13;
    v8[1] = v14;
  }
  OUTLINED_FUNCTION_110_3();
}

void sub_1A5774590(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  OUTLINED_FUNCTION_108_4(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11, v12);
  if (!v9)
  {
    *(_QWORD *)v8 = v13;
    *(_BYTE *)(v8 + 8) = v14;
  }
  OUTLINED_FUNCTION_110_3();
}

uint64_t sub_1A57745C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23,char a24,uint64_t (*a25)(void),uint64_t (*a26)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t (*a27)(void))
{
  if ((a24 & 1) != 0)
    return sub_1A572B774(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a26,
             a27);
  else
    return a25();
}

uint64_t destroy for ResponseParser._Response(uint64_t a1)
{
  return sub_1A57745C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_WORD *)(a1 + 176),
           *(_BYTE *)(a1 + 178),
           (uint64_t (*)(void))sub_1A56EF880,
           (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5683900,
           (uint64_t (*)(void))sub_1A5683854);
}

uint64_t initializeWithCopy for ResponseParser._Response(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 v26;
  char v27;

  v3 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 168);
  v26 = *(_WORD *)(a2 + 176);
  v27 = *(_BYTE *)(a2 + 178);
  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  sub_1A57745C0(*(_QWORD *)a2, v6, v7, v8, v9, v10, v11, v3, v4, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    (uint64_t (*)(void))sub_1A56EF4D4,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56DDC24,
    (uint64_t (*)(void))sub_1A56DDDA4);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v3;
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  *(_WORD *)(a1 + 176) = v26;
  *(_BYTE *)(a1 + 178) = v27;
  return a1;
}

uint64_t assignWithCopy for ResponseParser._Response(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int16 v44;
  char v45;

  v3 = *(_QWORD *)(a2 + 56);
  v31 = *(_QWORD *)(a2 + 72);
  v32 = *(_QWORD *)(a2 + 80);
  v33 = *(_QWORD *)(a2 + 88);
  v34 = *(_QWORD *)(a2 + 96);
  v35 = *(_QWORD *)(a2 + 104);
  v36 = *(_QWORD *)(a2 + 112);
  v37 = *(_QWORD *)(a2 + 120);
  v38 = *(_QWORD *)(a2 + 128);
  v39 = *(_QWORD *)(a2 + 136);
  v40 = *(_QWORD *)(a2 + 144);
  v41 = *(_QWORD *)(a2 + 152);
  v42 = *(_QWORD *)(a2 + 160);
  v43 = *(_QWORD *)(a2 + 168);
  v44 = *(_WORD *)(a2 + 176);
  v45 = *(_BYTE *)(a2 + 178);
  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  sub_1A57745C0(*(_QWORD *)a2, v6, v7, v8, v9, v10, v11, v3, v4, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    (uint64_t (*)(void))sub_1A56EF4D4,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56DDC24,
    (uint64_t (*)(void))sub_1A56DDDA4);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v3;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 72) = v31;
  *(_QWORD *)(a1 + 80) = v32;
  *(_QWORD *)(a1 + 88) = v33;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v34;
  *(_QWORD *)(a1 + 104) = v35;
  *(_QWORD *)(a1 + 112) = v36;
  *(_QWORD *)(a1 + 120) = v37;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v38;
  *(_QWORD *)(a1 + 136) = v39;
  *(_QWORD *)(a1 + 144) = v40;
  *(_QWORD *)(a1 + 152) = v41;
  v26 = *(_QWORD *)(a1 + 160);
  v27 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = v42;
  *(_QWORD *)(a1 + 168) = v43;
  v28 = *(_WORD *)(a1 + 176);
  *(_WORD *)(a1 + 176) = v44;
  v29 = *(_BYTE *)(a1 + 178);
  *(_BYTE *)(a1 + 178) = v45;
  sub_1A57745C0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27,
    v28,
    v29,
    (uint64_t (*)(void))sub_1A56EF880,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5683900,
    (uint64_t (*)(void))sub_1A5683854);
  return a1;
}

uint64_t assignWithTake for ResponseParser._Response(uint64_t a1, uint64_t a2)
{
  __int16 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int16 v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v4 = *(_WORD *)(a2 + 176);
  v5 = *(_BYTE *)(a2 + 178);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_OWORD *)(a1 + 64);
  v15 = *(_OWORD *)(a1 + 80);
  v16 = *(_OWORD *)(a1 + 96);
  v17 = *(_OWORD *)(a1 + 112);
  v18 = *(_OWORD *)(a1 + 128);
  v19 = *(_OWORD *)(a1 + 144);
  v20 = *(_QWORD *)(a1 + 160);
  v21 = *(_QWORD *)(a1 + 168);
  v22 = *(_WORD *)(a1 + 176);
  v23 = *(_BYTE *)(a1 + 178);
  v24 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v24;
  v25 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v25;
  v26 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v26;
  v27 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v27;
  v28 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v28;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_WORD *)(a1 + 176) = v4;
  *(_BYTE *)(a1 + 178) = v5;
  sub_1A57745C0(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19,
    *((uint64_t *)&v19 + 1),
    v20,
    v21,
    v22,
    v23,
    (uint64_t (*)(void))sub_1A56EF880,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5683900,
    (uint64_t (*)(void))sub_1A5683854);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseParser._Response(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 179))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 178);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseParser._Response(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 178) = 0;
    *(_WORD *)(result + 176) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 179) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 179) = 0;
    if (a2)
      *(_BYTE *)(result + 178) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5774BE0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 178) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseParser._Response()
{
  return &type metadata for ResponseParser._Response;
}

uint64_t sub_1A5774BFC(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 8) = v2;
  return result;
}

void type metadata accessor for ResponseParser.ResponseState()
{
  OUTLINED_FUNCTION_3_1();
}

unint64_t sub_1A5774C2C()
{
  unint64_t result;

  result = qword_1EE7A9EE0;
  if (!qword_1EE7A9EE0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B73B4, &unk_1E4E5F518);
    atomic_store(result, (unint64_t *)&qword_1EE7A9EE0);
  }
  return result;
}

unint64_t sub_1A5774C6C()
{
  unint64_t result;

  result = qword_1EE7A9EE8;
  if (!qword_1EE7A9EE8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B741C, &type metadata for ResponseParser._Response);
    atomic_store(result, (unint64_t *)&qword_1EE7A9EE8);
  }
  return result;
}

uint64_t sub_1A5774CA8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a4)(void))
{
  sub_1A57745C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_WORD *)(a1 + 176),
    *(_BYTE *)(a1 + 178),
    a2,
    a3,
    a4);
  return a1;
}

_QWORD *sub_1A5774D30@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  return sub_1A5773B74(a1, a2, a3);
}

_QWORD *sub_1A5774DB8@<X0>(void *a1@<X8>)
{
  return sub_1A5773650(a1);
}

uint64_t OUTLINED_FUNCTION_0_106()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_3_66()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_4_61()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_5_63()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 56) = v0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_56(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5;
}

void OUTLINED_FUNCTION_7_46()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_8_50@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  a1[2] = v5;
  a1[3] = v3;
  a1[4] = v4;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_9_48()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void OUTLINED_FUNCTION_11_31()
{
  __int16 v0;
  int v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)v3 = v4;
  *(_QWORD *)(v3 + 8) = v5;
  *(_DWORD *)(v3 + 16) = v1;
  *(_WORD *)(v3 + 20) = v0;
  *(_BYTE *)(v3 + 22) = v2;
}

uint64_t OUTLINED_FUNCTION_12_43()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_16_34()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
  return v0;
}

char *OUTLINED_FUNCTION_17_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  return &a19;
}

__n128 OUTLINED_FUNCTION_19_34(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = v1[2];
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_20_31(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5;
}

uint64_t OUTLINED_FUNCTION_23_29()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_24_26()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_25_27()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_26_19(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_27_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5770280(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_32_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t (*a17)(uint64_t, uint64_t *), uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  a22 = v23;
  a23 = v24;
  return a17(v25, &a22);
}

uint64_t OUTLINED_FUNCTION_38_14()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_39_20()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_42_13()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_46_12@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  a1[2] = v5;
  a1[3] = v3;
  a1[4] = v4;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_47_12()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void OUTLINED_FUNCTION_48_11()
{
  uint64_t v0;
  char v1;
  int v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = v5;
  *(_DWORD *)(v4 + 16) = v2;
  *(_WORD *)(v4 + 20) = v3;
  *(_BYTE *)(v4 + 22) = v1;
}

void OUTLINED_FUNCTION_50_9()
{
  char v0;
  int v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)v2 = v4;
  *(_QWORD *)(v2 + 8) = v5;
  *(_DWORD *)(v2 + 16) = v1;
  *(_WORD *)(v2 + 20) = v3;
  *(_BYTE *)(v2 + 22) = v0;
}

uint64_t OUTLINED_FUNCTION_51_10()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_53_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 32))(a5, a6, a7, a1, a2);
}

uint64_t OUTLINED_FUNCTION_58_10()
{
  return swift_retain();
}

id OUTLINED_FUNCTION_59_12(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void *v16;

  return v16;
}

uint64_t OUTLINED_FUNCTION_60_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5770004(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_61_12()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_62_10()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_64_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5;
}

void OUTLINED_FUNCTION_66_10()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_67_11(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{

}

uint64_t OUTLINED_FUNCTION_69_6()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_71_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_73_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(uint64_t, uint64_t *), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  a21 = v22;
  a22 = v23;
  return a15(v24, &a21);
}

uint64_t OUTLINED_FUNCTION_75_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A576FC3C(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_77_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_78_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 40))(v4, v2, v0, v3, v1);
}

uint64_t OUTLINED_FUNCTION_80_7()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

__n128 OUTLINED_FUNCTION_85_5(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = v1[2];
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_86_4()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_88_6()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_89_5@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  a1[2] = v5;
  a1[3] = v3;
  a1[4] = v4;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_90_5@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  a1[2] = v5;
  a1[3] = v3;
  a1[4] = v4;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_91_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_92_5(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_94_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_96_3()
{
  return swift_release();
}

void OUTLINED_FUNCTION_99_6()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char v3;
  __int16 v4;
  uint64_t v5;

  *(_QWORD *)v0 = v1;
  *(_QWORD *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v4;
  *(_BYTE *)(v0 + 22) = v3;
}

uint64_t OUTLINED_FUNCTION_100_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return a22;
}

char *OUTLINED_FUNCTION_104_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  return &a21;
}

_QWORD *OUTLINED_FUNCTION_108_4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  a9 = a2;
  a10 = a3;
  return a4(&a11, a1, &a9);
}

uint64_t OUTLINED_FUNCTION_109_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_111_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_112_3()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = v0;
  return swift_release();
}

void OUTLINED_FUNCTION_113_3()
{
  uint64_t v0;
  char v1;
  int v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = v5;
  *(_DWORD *)(v4 + 16) = v2;
  *(_WORD *)(v4 + 20) = v3;
  *(_BYTE *)(v4 + 22) = v1;
}

__n128 OUTLINED_FUNCTION_114_5(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = v1[2];
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_117_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A576FDC4(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_118_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A576FF1C(a1, a2, a3, a4);
}

__n128 OUTLINED_FUNCTION_120_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  return (__n128)a9;
}

char *OUTLINED_FUNCTION_121_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  return &a22;
}

__n128 OUTLINED_FUNCTION_125_5(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = v1[2];
  a1[1] = result;
  return result;
}

void *OUTLINED_FUNCTION_130_5(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char __src,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char __dst)
{
  return sub_1A56EF344(&__src, &__dst);
}

uint64_t OUTLINED_FUNCTION_131_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return a19;
}

void *OUTLINED_FUNCTION_132_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  return sub_1A5715EC4(&a12, &a35);
}

uint64_t OUTLINED_FUNCTION_135_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return a24;
}

id OUTLINED_FUNCTION_137_2()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 56) = v0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_139_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A576F970(a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_140_3(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void (*a30)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1A5770188(a1, a2, a3, a4, a5, a6, a7, a8, a9, v30, v32, v31, a14, a15, a16, a17, a18, a19, a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30);
}

uint64_t SynchronizingLiteralParser.init()()
{
  return 0;
}

void SynchronizingLiteralParser.parseContinuationsNecessary(_:)(uint64_t a1, unint64_t a2, unint64_t a3)
{
  int64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int64_t *v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  BOOL v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int v44;
  uint64_t v45;
  unint64_t v47;
  BOOL v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  __int16 v54;
  char v55;
  uint64_t v56;
  int v57;
  int v58;
  int v59;
  __int16 v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;

  v5 = v4;
  v6 = v3;
  v7 = a3;
  v8 = a2;
  v9 = a1;
  v10 = HIDWORD(a2);
  v11 = *v3;
  v12 = a2;
  v50 = HIDWORD(a3);
  v13 = BYTE6(a3) | (WORD2(a3) << 8);
  v64 = a3 - v13;
  v14 = a3 < v13;
  v44 = a3;
  v45 = a3 & 0xFFFFFFFFFFFFFFLL;
  v49 = HIWORD(a3);
  v43 = a2;
  v48 = a3 < v13;
  while (1)
  {
    if (*((_BYTE *)v6 + 24) == 1)
    {
      if (v14)
        goto LABEL_52;
      if (v10 > v64)
        goto LABEL_54;
      v15 = v12 + v11;
      if (__OFADD__(v12, v11))
        goto LABEL_56;
      if (v10 < v12 || (uint64_t)v10 < v15)
        goto LABEL_58;
      if (v15 < 0)
        goto LABEL_60;
      v56 = v9;
      v57 = v8;
      v58 = v10;
      v59 = v7;
      v60 = v50;
      v61 = v49;
      v62 = v12 + v11;
      v63 = v10;
      sub_1A57760B0();
      if ((v18 & 1) != 0)
      {
        v20 = v11;
LABEL_39:
        v14 = v48;
        goto LABEL_40;
      }
      v19 = v17 - v12;
      if (__OFSUB__(v17, v12))
        goto LABEL_62;
      v20 = v19 + 1;
      if (__OFADD__(v19, 1))
        goto LABEL_65;
      *v6 = v20;
      v21 = v17 + 1;
      if (__OFADD__(v17, 1))
        goto LABEL_67;
      v22 = v21 - v12;
      if (v21 < (uint64_t)v12)
        goto LABEL_68;
      if (v21 > (uint64_t)v64)
        goto LABEL_69;
      swift_retain();
      v47 = v47 & 0xFF00000000000000 | v45;
      v23 = ByteBuffer.getSlice(at:length:)(v12, v22, v9, v8, v47);
      if (!v23)
        goto LABEL_72;
      v26 = v24;
      v51 = v23;
      v52 = v24;
      v53 = v25;
      v54 = WORD2(v25);
      v55 = BYTE6(v25);
      sub_1A5775A50((uint64_t)&v51);
      if (v5)
      {
        swift_release();
        OUTLINED_FUNCTION_19_0();
        return;
      }
      v27 = HIDWORD(v52) == v26;
      if (HIDWORD(v52) < v26)
        goto LABEL_70;
      v9 = a1;
      if (v27 || (v5 = 0, (OUTLINED_FUNCTION_1_90(0x7Du, (uint64_t)&v51) & 1) == 0))
      {
        swift_release();
        OUTLINED_FUNCTION_19_0();
        v8 = v43;
        v7 = v44;
        goto LABEL_39;
      }
      v28 = OUTLINED_FUNCTION_1_90(0x2Bu, (uint64_t)&v51);
      if ((v28 & 1) != 0 || (v28 = OUTLINED_FUNCTION_1_90(0x2Du, (uint64_t)&v51), (v28 & 1) != 0))
      {
        OUTLINED_FUNCTION_2_77(v28, v29, v30, v31, v32, v33, v34, v35, v43);
        v5 = 0;
        OUTLINED_FUNCTION_3_67();
        OUTLINED_FUNCTION_19_0();
      }
      else
      {
        OUTLINED_FUNCTION_2_77(v28, v29, v30, v31, v32, v33, v34, v35);
        v5 = 0;
        OUTLINED_FUNCTION_3_67();
        OUTLINED_FUNCTION_19_0();
        v41 = v6[1];
        v37 = __OFADD__(v41, 1);
        v42 = v41 + 1;
        if (v37)
          goto LABEL_71;
        v6[1] = v42;
      }
      v8 = v43;
      v14 = v48;
      if (a1 >= 1)
      {
        v6[2] = a1;
        *((_BYTE *)v6 + 24) = 0;
      }
      v9 = a1;
      v7 = v44;
    }
    else
    {
      if (v10 < v12)
        goto LABEL_53;
      if (v14)
        goto LABEL_55;
      if (v10 > v64)
        goto LABEL_57;
      v36 = v12 + v11;
      if (__OFADD__(v12, v11))
        goto LABEL_59;
      v37 = __OFSUB__(v10, v36);
      v38 = v10 - v36;
      if (v37)
        goto LABEL_61;
      v39 = v6[2];
      if (v38 >= v39)
      {
        v6[2] = 0;
        *((_BYTE *)v6 + 24) = 1;
        v20 = v11 + v39;
        if (__OFADD__(v11, v39))
          goto LABEL_64;
      }
      else
      {
        v37 = __OFSUB__(v39, v38);
        v40 = v39 - v38;
        if (v37)
          goto LABEL_63;
        v6[2] = v40;
        *((_BYTE *)v6 + 24) = 0;
        v20 = v11 + v38;
        if (__OFADD__(v11, v38))
          goto LABEL_66;
      }
      *v6 = v20;
    }
LABEL_40:
    if (v11 >= v20)
      goto LABEL_49;
    if (v10 < v12)
      break;
    v11 = v20;
    if (v20 >= (uint64_t)v10)
    {
LABEL_49:
      v6[1] = 0;
      return;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
}

Swift::Void __swiftcall SynchronizingLiteralParser.consumed(_:)(Swift::Int a1)
{
  Swift::Int *v1;

  if (*v1 < a1)
  {
    __break(1u);
  }
  else if (!__OFSUB__(*v1, a1))
  {
    *v1 -= a1;
    return;
  }
  __break(1u);
}

uint64_t sub_1A57759E8(uint64_t a1, char a2)
{
  sub_1A594CE64();
  if ((a2 & 1) == 0)
    sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A5775A44()
{
  uint64_t v0;

  return sub_1A57759E8(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_1A5775A50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _BOOL4 v7;
  char v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD v14[2];
  int v15;
  __int16 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[40];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  __int16 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)a1;
  v2 = *(unsigned int *)(a1 + 12);
  v3 = *(unsigned int *)(a1 + 8) | (unint64_t)(v2 << 32);
  v4 = *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48);
  ByteBufferView.init(_:)(*(_QWORD *)a1, v3, v4, (uint64_t)v14);
  if (v19 < v18)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (__OFSUB__(v18, v19))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v5 = v18;
  if (v18 == v19)
  {
LABEL_9:
    if (v19 >= v5)
    {
      if (v5 == v18)
      {
        v7 = 0;
      }
      else
      {
        v21 = v5;
        v22 = v18;
        v23 = v14[0];
        v24 = v14[1];
        v25 = v15;
        v26 = v16;
        v27 = v17;
        v28 = v18;
        v29 = v19;
        sub_1A5776284(v5);
        v7 = v8 == 13;
      }
      swift_retain();
      sub_1A553E5DC((uint64_t)v14);
      v9 = ByteBufferView.init(_:)(v1, v3, v4, (uint64_t)v20);
      v10 = sub_1A569A30C(v9);
      swift_retain();
      sub_1A553E5DC((uint64_t)v20);
      if (v7)
      {
        if ((v10 & 0x100) == 0)
        {
          v11 = v10;
          if (v10 == 10)
          {
            v12 = -2;
LABEL_21:
            ByteBuffer.moveWriterIndex(to:)(v12 + v2);
            return;
          }
LABEL_19:
          if (v11 == 13)
            goto LABEL_20;
        }
      }
      else if ((v10 & 0x100) == 0)
      {
        v11 = v10;
        if (v10 == 10)
        {
LABEL_20:
          v12 = -1;
          goto LABEL_21;
        }
        goto LABEL_19;
      }
      sub_1A56E9774();
      swift_allocError();
      *v13 = 0x6E776F6E6B6E55;
      v13[1] = 0xE700000000000000;
      v13[2] = 0xD000000000000020;
      v13[3] = 0x80000001A5A0F5E0;
      v13[4] = 45;
      swift_willThrow();
      return;
    }
    goto LABEL_25;
  }
  v5 = v19 - 1;
  if (!__OFSUB__(v19, 1))
  {
    if (v5 < v18 || __OFSUB__(v19, v5))
      goto LABEL_27;
    goto LABEL_9;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
}

unint64_t sub_1A5775C54(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  unint64_t v6;
  _QWORD *v7;
  _BYTE v9[40];

  v3 = *(unsigned int *)(a2 + 12);
  v4 = ByteBufferView.init(_:)(*(_QWORD *)a2, *(unsigned int *)(a2 + 8) | (unint64_t)(v3 << 32), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48), (uint64_t)v9);
  v5 = sub_1A569A30C(v4);
  swift_retain();
  sub_1A553E5DC((uint64_t)v9);
  if ((v5 & 0x100) != 0)
  {
    sub_1A594C720();
    swift_bridgeObjectRelease();
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    v6 = 0x80000001A5A10020;
    sub_1A56E9774();
    swift_allocError();
    *v7 = 0xD000000000000013;
    v7[1] = 0x80000001A5A10020;
    v7[2] = 0xD000000000000020;
    v7[3] = 0x80000001A5A0F5E0;
    v7[4] = 57;
    swift_willThrow();
  }
  else
  {
    LOBYTE(v6) = v5 == a1;
    if ((_BYTE)v6)
      ByteBuffer.moveWriterIndex(to:)(v3 - 1);
  }
  return v6 & 1;
}

uint64_t sub_1A5775DE0(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;

  v2 = *(_DWORD *)(result + 16);
  v3 = *(unsigned __int8 *)(result + 22) | ((unint64_t)*(unsigned __int16 *)(result + 20) << 8);
  v4 = v2 - v3;
  if (v2 < v3)
  {
LABEL_31:
    __break(1u);
  }
  else
  {
    v5 = result;
    v6 = *(unsigned int *)(result + 8);
    v7 = (_QWORD *)(*(_QWORD *)result + 24);
    result = swift_beginAccess();
    v8 = *(_DWORD *)(v5 + 12);
    if (v8 < v6)
    {
LABEL_16:
      __break(1u);
LABEL_17:
      sub_1A56E9774();
      swift_allocError();
      *v17 = 0x6E776F6E6B6E55;
      v18 = 0xE700000000000000;
      v19 = 85;
    }
    else
    {
      v1 = 0;
      v9 = 1;
      while (1)
      {
        if (v4 < v8)
        {
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
        if ((_DWORD)v6 == v8)
          goto LABEL_17;
        v10 = v8 + ~v6;
        if (v10 < 0)
          goto LABEL_25;
        if (v8 < v6)
          goto LABEL_26;
        if (v10 >= (unint64_t)(v8 - v6))
          goto LABEL_27;
        if (v8 - v6 < v10)
          goto LABEL_28;
        v11 = *(_BYTE *)(*v7 + v3 + v6 + v10);
        if ((v11 - 58) < 0xF6u)
          break;
        v12 = (v11 - 48);
        v13 = v9 * v12;
        if ((unsigned __int128)(v9 * (__int128)v12) >> 64 != (v9 * v12) >> 63)
          goto LABEL_29;
        v14 = __OFADD__(v1, v13);
        v15 = v1 + v13;
        if (v14)
        {
          sub_1A56E9774();
          swift_allocError();
          *v17 = 0x776F6C667265764FLL;
          v18 = 0xE800000000000000;
          v19 = 69;
          goto LABEL_22;
        }
        v16 = (unsigned __int128)(v9 * (__int128)10) >> 64;
        v9 *= 10;
        if (v16 != v9 >> 63)
        {
          sub_1A56E9774();
          swift_allocError();
          *v17 = 0x776F6C667265764FLL;
          v18 = 0xE800000000000000;
          v19 = 74;
          goto LABEL_22;
        }
        if (v4 < --v8)
          goto LABEL_30;
        *(_DWORD *)(v5 + 12) = v8;
        v1 = v15;
        if (v8 < v6)
          goto LABEL_16;
      }
      if (v9 != 1)
        return v1;
      sub_1A56E9774();
      swift_allocError();
      *v17 = 0x6E776F6E6B6E55;
      v18 = 0xE700000000000000;
      v19 = 80;
    }
LABEL_22:
    v17[1] = v18;
    v17[2] = 0xD000000000000020;
    v17[3] = 0x80000001A5A0F5E0;
    v17[4] = v19;
    swift_willThrow();
    return v1;
  }
  return result;
}

uint64_t SynchronizingLiteralParser.FramingResult.maximumValidBytes.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*SynchronizingLiteralParser.FramingResult.maximumValidBytes.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SynchronizingLiteralParser.FramingResult.synchronizingLiteralCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SynchronizingLiteralParser.FramingResult.synchronizingLiteralCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*SynchronizingLiteralParser.FramingResult.synchronizingLiteralCount.modify())(_QWORD)
{
  return nullsub_1;
}

void sub_1A57760B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v10;
  __int16 v11;
  __int16 v12;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  if (v1 == v2)
    return;
  v3 = *(unsigned int *)(v0 + 8);
  v4 = *(unsigned int *)(v0 + 12);
  if (v4 < v3)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return;
  }
  v5 = *(_QWORD *)v0;
  v6 = *(unsigned __int8 *)(v0 + 22) | ((unint64_t)*(unsigned __int16 *)(v0 + 20) << 8);
  swift_beginAccess();
  while (1)
  {
    if (v1 >= v2)
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v7 = v1 - v3;
    if (__OFSUB__(v1, v3))
      goto LABEL_20;
    if (v7 < 0)
      goto LABEL_21;
    if (v7 >= (v4 - v3))
      goto LABEL_22;
    v8 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 24) + v6 + v1);
    if (v8 == 10 || v8 == 13)
      break;
    if (v2 == ++v1)
      return;
  }
  v10 = v3 | (v4 << 32);
  sub_1A566FE08(v1, 0, v5, v10);
  if ((v11 & 0x100) != 0)
    goto LABEL_24;
  if (v11 == 13 && v1 + 1 < v2)
  {
    sub_1A566FE08(v1 + 1, 0, v5, v10);
    if ((v12 & 0x100) != 0)
      goto LABEL_25;
  }
}

ValueMetadata *type metadata accessor for SynchronizingLiteralParser()
{
  return &type metadata for SynchronizingLiteralParser;
}

ValueMetadata *type metadata accessor for SynchronizingLiteralParser.FramingResult()
{
  return &type metadata for SynchronizingLiteralParser.FramingResult;
}

ValueMetadata *type metadata accessor for SynchronizingLiteralParser.State()
{
  return &type metadata for SynchronizingLiteralParser.State;
}

unint64_t sub_1A5776248()
{
  unint64_t result;

  result = qword_1EE7A9EF0;
  if (!qword_1EE7A9EF0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B74D0, &type metadata for SynchronizingLiteralParser.State);
    atomic_store(result, (unint64_t *)&qword_1EE7A9EF0);
  }
  return result;
}

void sub_1A5776284(uint64_t a1)
{
  _QWORD *v1;
  BOOL v3;
  uint64_t v4;
  __int16 v8;

  v3 = __OFSUB__(a1, 1);
  v4 = a1 - 1;
  if (v3)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v4 >= v1[6] || v4 < v1[5] || v1[1] >= a1 || *v1 < a1)
    goto LABEL_15;
  sub_1A566FE08(v4, 0, v1[2], v1[3]);
  if ((v8 & 0x100) != 0)
LABEL_16:
    __break(1u);
}

unint64_t OUTLINED_FUNCTION_1_90(unsigned __int8 a1, uint64_t a2)
{
  return sub_1A5775C54(a1, a2);
}

uint64_t OUTLINED_FUNCTION_2_77(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  return sub_1A5775DE0((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_3_67()
{
  return swift_release();
}

BOOL sub_1A577630C(char a1)
{
  BOOL v1;

  v1 = a1 == 10 || a1 == 13;
  if (v1 || a1 < 0 || !a1)
    return 0;
  if (a1 == 34)
    return 0;
  return a1 != 92;
}

BOOL sub_1A5776348(unsigned __int8 a1)
{
  return a1 - 58 > 0xFFFFFFF5 || a1 - 103 > 0xFFFFFFF9 || a1 - 65 < 6;
}

uint64_t sub_1A5776374(unsigned __int8 a1)
{
  int v1;
  int v2;
  _BOOL4 v3;
  unsigned int v4;

  v1 = a1;
  v2 = isalnum(a1);
  v3 = v1 == 126;
  if (v1 == 95)
    v3 = 1;
  v4 = (v1 - 45) < 2 || v3;
  if (v2)
    return 1;
  else
    return v4;
}

uint64_t sub_1A57763C4(unsigned __int8 a1)
{
  return (a1 < 0x2Du) & (0x1F9200000000uLL >> a1);
}

uint64_t sub_1A57763E0(unsigned __int8 a1)
{
  _BOOL4 v1;

  v1 = a1 - 65 < 0x1A;
  if (a1 - 123 > 0xFFFFFFE5)
    v1 = 1;
  return a1 - 45 <= 0x32 && ((1 << (a1 - 45)) & 0x4000000000003) != 0 || v1;
}

void *sub_1A5776428()
{
  return &unk_1E4E62F10;
}

void PipeliningRequirement.hash(into:)()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_74_4();
  if (!v0)
  {
    OUTLINED_FUNCTION_22_9();
    goto LABEL_5;
  }
  if (v0 == 1)
  {
    OUTLINED_FUNCTION_103_2();
LABEL_5:
    v1 = OUTLINED_FUNCTION_182();
    OUTLINED_FUNCTION_26_20(v1, v2, v3);
    return;
  }
  sub_1A594CE88();
  OUTLINED_FUNCTION_8_1();
}

void static PipeliningRequirement.__derived_enum_equals(_:_:)(int32x2_t *a1, uint64_t a2, int32x2_t *a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  BOOL v8;

  v4 = a4 & 0xFFFFFFFFFFLL;
  v5 = ((unint64_t)a2 >> 38) & 3;
  if (!(_DWORD)v5)
  {
    if (!(v4 >> 38))
    {
      OUTLINED_FUNCTION_21_35(a1, a2, a3, a4);
      return;
    }
    goto LABEL_27;
  }
  if ((_DWORD)v5 == 1)
  {
    if ((a4 & 0xC000000000) == 0x4000000000)
    {
      OUTLINED_FUNCTION_23_30(a1, a2, a3, a4);
      return;
    }
    goto LABEL_27;
  }
  if ((unint64_t)a1 | a2 & 0xFFFFFFFFFFLL ^ 0x8000000000)
  {
    v6 = a4 & 0xC000000000;
    if ((a2 & 0xFFFFFFFFFFLL) == 0x8000000000 && a1 == (int32x2_t *)1)
      v8 = v6 == 0x8000000000 && a3 == (int32x2_t *)1;
    else
      v8 = v6 == 0x8000000000 && a3 == (int32x2_t *)2;
    if (!v8 || v4 != 0x8000000000)
      goto LABEL_27;
LABEL_19:
    OUTLINED_FUNCTION_56();
    return;
  }
  if ((a4 & 0xC000000000) == 0x8000000000 && !a3 && v4 == 0x8000000000)
    goto LABEL_19;
LABEL_27:
  OUTLINED_FUNCTION_53();
}

void PipeliningRequirement.hashValue.getter()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_36_19();
  v1 = (v0 >> 38) & 3;
  if ((_DWORD)v1)
  {
    if ((_DWORD)v1 != 1)
    {
      sub_1A594CE88();
      goto LABEL_7;
    }
    v2 = OUTLINED_FUNCTION_103_2();
    v5 = v0 & 0x3FFFFFFFFFLL;
  }
  else
  {
    v2 = OUTLINED_FUNCTION_22_9();
    v5 = v0 & 0xFFFFFFFFFFLL;
  }
  OUTLINED_FUNCTION_75_7(v2, v3, v5, v4);
LABEL_7:
  sub_1A594CED0();
  OUTLINED_FUNCTION_85_4();
}

void sub_1A5776610()
{
  PipeliningRequirement.hashValue.getter();
}

void sub_1A5776624()
{
  PipeliningRequirement.hash(into:)();
}

uint64_t sub_1A5776638()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 12);
  v3 = *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
  sub_1A594CE64();
  if (v2 >> 6)
  {
    if (v2 >> 6 != 1)
    {
      sub_1A594CE88();
      return sub_1A594CED0();
    }
    sub_1A594CE88();
    v4 = v3 & 0x3FFFFFFFFFLL;
    v5 = v1;
  }
  else
  {
    sub_1A594CE88();
    v5 = v1;
    v4 = v3;
  }
  sub_1A56B6298((uint64_t)v7, v5, v4);
  return sub_1A594CED0();
}

void sub_1A5776708(uint64_t a1, uint64_t a2)
{
  static PipeliningRequirement.__derived_enum_equals(_:_:)(*(int32x2_t **)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(int32x2_t **)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32));
}

void sub_1A5776734(uint64_t a1)
{
  sub_1A5776C4C(a1, static PipeliningRequirement.noFlagChangesToAnyMessage, 0x100000000, (uint64_t)&static PipeliningRequirement.noFlagChangesToAnyMessage[1]);
}

_QWORD *PipeliningRequirement.noFlagChangesToAnyMessage.unsafeMutableAddressor()
{
  if (qword_1EE7A90B0 != -1)
    swift_once();
  return static PipeliningRequirement.noFlagChangesToAnyMessage;
}

uint64_t static PipeliningRequirement.noFlagChangesToAnyMessage.getter()
{
  return sub_1A577681C(&qword_1EE7A90B0);
}

void sub_1A57767A8(uint64_t a1)
{
  sub_1A5776C4C(a1, static PipeliningRequirement.noFlagReadsFromAnyMessage, 0x4100000000, (uint64_t)&static PipeliningRequirement.noFlagReadsFromAnyMessage[1]);
}

_QWORD *PipeliningRequirement.noFlagReadsFromAnyMessage.unsafeMutableAddressor()
{
  if (qword_1EE7A90B8 != -1)
    swift_once();
  return static PipeliningRequirement.noFlagReadsFromAnyMessage;
}

uint64_t static PipeliningRequirement.noFlagReadsFromAnyMessage.getter()
{
  return sub_1A577681C(&qword_1EE7A90B8);
}

uint64_t sub_1A577681C(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t (*v3)(uint64_t, unint64_t, uint64_t);

  if (*a1 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_182();
  sub_1A5779798(v1, v2, v3);
  return OUTLINED_FUNCTION_182();
}

void PipeliningBehavior.hash(into:)()
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_74_4();
  if (v1)
  {
    if (v1 != 1)
      __asm { BR              X9 }
    sub_1A594CE88();
  }
  else
  {
    OUTLINED_FUNCTION_103_2();
  }
  v2 = OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_26_20(v2, v3, v4);
}

void sub_1A57768D4()
{
  sub_1A594CE88();
  OUTLINED_FUNCTION_8_1();
}

void static PipeliningBehavior.__derived_enum_equals(_:_:)(int32x2_t *a1, uint64_t a2, int32x2_t *a3, uint64_t a4)
{
  unint64_t v4;

  v4 = ((unint64_t)a2 >> 38) & 3;
  if ((_DWORD)v4)
  {
    if ((_DWORD)v4 != 1)
    {
      ((void (*)(void))((char *)&loc_1A5776950 + 4 * byte_1A59B7545[(_QWORD)a1]))();
      return;
    }
    if ((a4 & 0xC000000000) == 0x4000000000)
    {
      OUTLINED_FUNCTION_23_30(a1, a2, a3, a4);
      return;
    }
  }
  else if (!((a4 & 0xFFFFFFFFFFuLL) >> 38))
  {
    OUTLINED_FUNCTION_21_35(a1, a2, a3, a4);
    return;
  }
  OUTLINED_FUNCTION_53();
}

void PipeliningBehavior.hashValue.getter()
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_36_19();
  v2 = (v1 >> 38) & 3;
  if ((_DWORD)v2)
  {
    if ((_DWORD)v2 != 1)
      __asm { BR              X9 }
    v3 = sub_1A594CE88();
    v6 = v1 & 0x3FFFFFFFFFLL;
  }
  else
  {
    v3 = OUTLINED_FUNCTION_103_2();
    v6 = v1 & 0xFFFFFFFFFFLL;
  }
  OUTLINED_FUNCTION_75_7(v3, v4, v6, v5);
  sub_1A594CED0();
  OUTLINED_FUNCTION_85_4();
}

void sub_1A5776A88()
{
  PipeliningBehavior.hashValue.getter();
}

void sub_1A5776A9C()
{
  PipeliningBehavior.hash(into:)();
}

uint64_t sub_1A5776AB0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 12);
  v3 = *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
  sub_1A594CE64();
  if (v2 >> 6)
  {
    if (v2 >> 6 != 1)
      __asm { BR              X9 }
    sub_1A594CE88();
    v4 = v3 & 0x3FFFFFFFFFLL;
    v5 = v1;
  }
  else
  {
    sub_1A594CE88();
    v5 = v1;
    v4 = v3;
  }
  sub_1A56B6298((uint64_t)v7, v5, v4);
  return sub_1A594CED0();
}

void sub_1A5776B98(uint64_t a1, uint64_t a2)
{
  static PipeliningBehavior.__derived_enum_equals(_:_:)(*(int32x2_t **)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(int32x2_t **)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32));
}

void sub_1A5776BC4(uint64_t a1)
{
  sub_1A5776C4C(a1, static PipeliningBehavior.changesFlagsOnAnyMessage, 0x100000000, (uint64_t)&static PipeliningBehavior.changesFlagsOnAnyMessage[1]);
}

_QWORD *PipeliningBehavior.changesFlagsOnAnyMessage.unsafeMutableAddressor()
{
  if (qword_1EE7A90C0 != -1)
    swift_once();
  return static PipeliningBehavior.changesFlagsOnAnyMessage;
}

uint64_t static PipeliningBehavior.changesFlagsOnAnyMessage.getter()
{
  return sub_1A577681C(&qword_1EE7A90C0);
}

void sub_1A5776C38(uint64_t a1)
{
  sub_1A5776C4C(a1, static PipeliningBehavior.readsFlagsFromAnyMessage, 0x4100000000, (uint64_t)&static PipeliningBehavior.readsFlagsFromAnyMessage[1]);
}

void sub_1A5776C4C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  *a2 = &unk_1E4E62F10;
  *(_DWORD *)a4 = a3;
  *(_BYTE *)(a4 + 4) = BYTE4(a3);
}

_QWORD *PipeliningBehavior.readsFlagsFromAnyMessage.unsafeMutableAddressor()
{
  if (qword_1EE7A90C8 != -1)
    swift_once();
  return static PipeliningBehavior.readsFlagsFromAnyMessage;
}

uint64_t static PipeliningBehavior.readsFlagsFromAnyMessage.getter()
{
  return sub_1A577681C(&qword_1EE7A90C8);
}

void CommandStreamPart.pipeliningRequirements.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95[528];

  v8 = OUTLINED_FUNCTION_41_13(a1, a2, a3, a4, a5, a6, a7, a8, v25, v28, v31, v34, v37, v40, v43, v46, v49, v52, v55,
         v58,
         v61,
         v64,
         v67,
         v70,
         v73,
         v76);
  v16 = OUTLINED_FUNCTION_59_13((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v26, v29, v32, v35, v38, v41, v44, v47, v50, v53, v56,
          v59,
          v62,
          v65,
          v68,
          v71,
          v74,
          v77);
  OUTLINED_FUNCTION_57_16((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v27, v30, v33, v36, v39, v42, v45, v48, v51, v54, v57,
    v60,
    v63,
    v66,
    v69,
    v72,
    v75,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91,
    v92,
    v93,
    v94,
    v95[0]);
  v24 = (char *)sub_1A5776D2C + 4 * byte_1A59B7554[sub_1A567FF60((uint64_t)v95)];
  __asm { BR              X10 }
}

void sub_1A5776D2C()
{
  void *v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[34];
  uint64_t v19[17];
  char v20;

  v0 = (void *)sub_1A5680210((uint64_t)v19);
  OUTLINED_FUNCTION_38_15(v0, v1, v2, v3, v4, v5, v6, v7, v18[0], v18[1], v18[2], v18[3], v18[4], v18[5], v18[6], v18[7], v18[8], v18[9], v18[10],
    v18[11],
    v18[12],
    v18[13],
    v18[14],
    v18[15],
    v18[16],
    v18[17],
    v18[18],
    v18[19],
    v18[20],
    v18[21],
    v18[22],
    v18[23],
    v18[24],
    v18[25],
    v18[26],
    v18[27],
    v18[28],
    v18[29],
    v18[30],
    v18[31],
    v18[32],
    v18[33],
    v19[0],
    v19[1],
    v19[2],
    v19[3],
    v19[4],
    v19[5],
    v19[6],
    v19[7],
    v19[8],
    v19[9],
    v19[10],
    v19[11],
    v19[12],
    v19[13],
    v19[14],
    v19[15],
    v19[16],
    v20);
  v8 = OUTLINED_FUNCTION_79_8();
  OUTLINED_FUNCTION_78_10((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v18[0]);
  v16 = sub_1A5680210((uint64_t)v18);
  v17 = sub_1A568033C(v16);
  sub_1A5776D80(v17);
  OUTLINED_FUNCTION_72_9();
  OUTLINED_FUNCTION_60_4();
}

void sub_1A5776D80(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD v3[21];

  v1 = OUTLINED_FUNCTION_44_12(a1, &v2);
  OUTLINED_FUNCTION_44_12((uint64_t)v1, v3);
  __asm { BR              X11 }
}

uint64_t sub_1A5776DF0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_18_33();
  sub_1A568079C(v0);
  sub_1A5777454(v0);
  v2 = v1;
  OUTLINED_FUNCTION_171_1();
  return v2;
}

void sub_1A5777454(uint64_t a1)
{
  unint64_t v1;
  _QWORD *i;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;

  i = (_QWORD *)MEMORY[0x1E0DEE9E8];
  sub_1A57785C8(a1);
  if ((v4 & 1) == 0)
    goto LABEL_44;
  OUTLINED_FUNCTION_10_43();
  OUTLINED_FUNCTION_65_8();
  OUTLINED_FUNCTION_25_28();
  OUTLINED_FUNCTION_17_39();
  if ((v5 & 1) != 0)
  {
    do
    {
      OUTLINED_FUNCTION_62_11();
      if (v8 < 0)
      {
        v9 = *v7;
        v10 = (v8 & 0xFFFFFFFFFFLL) == v6 && v9 == 1;
        if (v10)
          goto LABEL_26;
      }
      OUTLINED_FUNCTION_22_35();
    }
    while ((v11 & 1) != 0);
  }
  OUTLINED_FUNCTION_6_49();
  OUTLINED_FUNCTION_58_11();
  if (!(!v10 & v14))
  {
    v15 = v13 + 1;
    if (v12)
      sub_1A577A714(v15, &qword_1EE7A9F20);
    else
      sub_1A577B814(v15, &qword_1EE7A9F20);
    i = (_QWORD *)v66;
    OUTLINED_FUNCTION_10_43();
    OUTLINED_FUNCTION_65_8();
    OUTLINED_FUNCTION_25_28();
    OUTLINED_FUNCTION_1_91();
    if ((v16 & 1) == 0)
      goto LABEL_24;
    OUTLINED_FUNCTION_50_10();
    while (1)
    {
      OUTLINED_FUNCTION_27_24();
      if (v19 < 0)
      {
        v20 = *v18;
        if ((v19 & 0xFFFFFFFFFFLL) == v17 && v20 == 1)
          break;
      }
      OUTLINED_FUNCTION_12_44();
      if ((v22 & 1) == 0)
        goto LABEL_24;
    }
LABEL_52:
    sub_1A594CDEC();
    __break(1u);
    return;
  }
  if ((v12 & 1) == 0)
    goto LABEL_51;
  for (i = (_QWORD *)MEMORY[0x1E0DEE9E8]; ; i = (_QWORD *)v66)
  {
LABEL_24:
    *(_QWORD *)((char *)i + ((v1 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v1;
    OUTLINED_FUNCTION_11_32(i[6] + 16 * v1);
    if (v24)
    {
      __break(1u);
      goto LABEL_50;
    }
    OUTLINED_FUNCTION_19_35(v23);
LABEL_26:
    OUTLINED_FUNCTION_10_43();
    OUTLINED_FUNCTION_64_10();
    OUTLINED_FUNCTION_25_28();
    OUTLINED_FUNCTION_1_91();
    if ((v27 & 1) != 0)
      break;
LABEL_31:
    v31 = OUTLINED_FUNCTION_6_49();
    v32 = v31;
    v66 = (uint64_t)i;
    v33 = i[2];
    if (i[3] <= v33)
    {
      v34 = v33 + 1;
      if (v32)
        sub_1A577A714(v34, &qword_1EE7A9F20);
      else
        sub_1A577B814(v34, &qword_1EE7A9F20);
      OUTLINED_FUNCTION_10_43();
      OUTLINED_FUNCTION_64_10();
      OUTLINED_FUNCTION_25_28();
      OUTLINED_FUNCTION_1_91();
      if ((v35 & 1) != 0)
      {
        OUTLINED_FUNCTION_50_10();
        do
        {
          OUTLINED_FUNCTION_27_24();
          if (v38 < 0 && __PAIR128__(v38 & 0xFFFFFFFFFFLL, *v37) >= __PAIR128__(v36, 2))
            goto LABEL_52;
          OUTLINED_FUNCTION_12_44();
        }
        while ((v39 & 1) != 0);
      }
    }
    else if ((v31 & 1) == 0)
    {
      OUTLINED_FUNCTION_77_10(&qword_1EE7A9F20);
    }
    OUTLINED_FUNCTION_14_37();
    OUTLINED_FUNCTION_11_32(v40);
    if (!v24)
    {
      OUTLINED_FUNCTION_19_35(v41);
      goto LABEL_44;
    }
LABEL_50:
    __break(1u);
LABEL_51:
    OUTLINED_FUNCTION_77_10(&qword_1EE7A9F20);
  }
  v28 = ~v26;
  while (1)
  {
    v29 = i[6] + 16 * v1;
    v30 = *(unsigned int *)(v29 + 8) | (unint64_t)((uint64_t)*(char *)(v29 + 12) << 32);
    if ((v30 & 0x8000000000000000) != 0
      && __PAIR128__(0x8000000000, 1) < __PAIR128__(v30 & 0xFFFFFFFFFFLL, *(_QWORD *)v29))
    {
      break;
    }
    v1 = (v1 + 1) & v28;
    if (((*(_QWORD *)(v25 + ((v1 >> 3) & 0xFFFFFFFFFFFFF8)) >> v1) & 1) == 0)
      goto LABEL_31;
  }
LABEL_44:
  OUTLINED_FUNCTION_49_11();
  if ((v42 & 1) != 0)
  {
    if (qword_1EE7A90B0 != -1)
      swift_once();
    OUTLINED_FUNCTION_73_7();
    v43 = sub_1A5779798(a1, (unint64_t)i, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
    v51 = OUTLINED_FUNCTION_70_9(v43, v44, v45, v46, v47, v48, v49, v50, v64, v66, v68);
    v54 = sub_1A5779A04((uint64_t)v51, v52, v53);
    v62 = OUTLINED_FUNCTION_69_7(v54, v55, v56, v57, v58, v59, v60, v61, v65, v67, v69);
    sub_1A5779798(v62, v63, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E3458);
  }
  OUTLINED_FUNCTION_20_32();
}

void sub_1A577773C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t, unint64_t))
{
  uint64_t v3;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned __int8 v12;
  uint64_t v13;

  v13 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = (int *)(a1 + 40);
    do
    {
      v6 = *((_QWORD *)v5 - 1);
      v7 = *((unsigned __int8 *)v5 + 4);
      v8 = *v5;
      v5 += 4;
      v9 = v8 | (unint64_t)(v7 << 32);
      sub_1A5779798(v6, v9, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
      a3(&v10, v6, v9);
      OUTLINED_FUNCTION_60_15(v10, v11 | ((unint64_t)v12 << 32));
      --v3;
    }
    while (v3);
    OUTLINED_FUNCTION_17();
  }
  else
  {
    OUTLINED_FUNCTION_17();
  }
  OUTLINED_FUNCTION_85_4();
}

void CommandStreamPart.pipeliningBehavior.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95[528];

  v8 = OUTLINED_FUNCTION_41_13(a1, a2, a3, a4, a5, a6, a7, a8, v25, v28, v31, v34, v37, v40, v43, v46, v49, v52, v55,
         v58,
         v61,
         v64,
         v67,
         v70,
         v73,
         v76);
  v16 = OUTLINED_FUNCTION_59_13((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v26, v29, v32, v35, v38, v41, v44, v47, v50, v53, v56,
          v59,
          v62,
          v65,
          v68,
          v71,
          v74,
          v77);
  OUTLINED_FUNCTION_57_16((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v27, v30, v33, v36, v39, v42, v45, v48, v51, v54, v57,
    v60,
    v63,
    v66,
    v69,
    v72,
    v75,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91,
    v92,
    v93,
    v94,
    v95[0]);
  v24 = (char *)sub_1A577784C + 4 * byte_1A59B75A4[sub_1A567FF60((uint64_t)v95)];
  __asm { BR              X10 }
}

void sub_1A577784C()
{
  void *v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[34];
  uint64_t v19[17];
  char v20;

  v0 = (void *)sub_1A5680210((uint64_t)v19);
  OUTLINED_FUNCTION_38_15(v0, v1, v2, v3, v4, v5, v6, v7, v18[0], v18[1], v18[2], v18[3], v18[4], v18[5], v18[6], v18[7], v18[8], v18[9], v18[10],
    v18[11],
    v18[12],
    v18[13],
    v18[14],
    v18[15],
    v18[16],
    v18[17],
    v18[18],
    v18[19],
    v18[20],
    v18[21],
    v18[22],
    v18[23],
    v18[24],
    v18[25],
    v18[26],
    v18[27],
    v18[28],
    v18[29],
    v18[30],
    v18[31],
    v18[32],
    v18[33],
    v19[0],
    v19[1],
    v19[2],
    v19[3],
    v19[4],
    v19[5],
    v19[6],
    v19[7],
    v19[8],
    v19[9],
    v19[10],
    v19[11],
    v19[12],
    v19[13],
    v19[14],
    v19[15],
    v19[16],
    v20);
  v8 = OUTLINED_FUNCTION_79_8();
  OUTLINED_FUNCTION_78_10((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v18[0]);
  v16 = sub_1A5680210((uint64_t)v18);
  v17 = sub_1A568033C(v16);
  sub_1A5777904(v17);
  OUTLINED_FUNCTION_72_9();
  OUTLINED_FUNCTION_60_4();
}

void sub_1A5777904(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD v3[18];

  v1 = OUTLINED_FUNCTION_44_12(a1, &v2);
  OUTLINED_FUNCTION_44_12((uint64_t)v1, v3);
  __asm { BR              X11 }
}

uint64_t sub_1A5777974()
{
  OUTLINED_FUNCTION_4_62();
  return sub_1A5778FE0((uint64_t)&unk_1E4E65FC8);
}

uint64_t sub_1A5778028(uint64_t a1)
{
  uint64_t v1;
  unsigned int *i;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  BOOL v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return OUTLINED_FUNCTION_53();
  for (i = (unsigned int *)(a1 + 64); ; i += 10)
  {
    if (*((unsigned __int8 *)i + 4) >> 5 >= 6u)
    {
      v3 = *i | ((unint64_t)*((unsigned __int8 *)i + 4) << 32);
      v4 = *((_QWORD *)i - 1);
      v5 = *((_QWORD *)i - 4);
      v6 = *((_QWORD *)i - 2) | *((_QWORD *)i - 3);
      if (v6 | v5 | v4 || v3 != 0xC000000000)
      {
        v8 = v6 | v4;
        v9 = v3 == 0xC000000000 && v5 == 1;
        if (v9 && v8 == 0)
          break;
      }
    }
    if (!--v1)
      return OUTLINED_FUNCTION_53();
  }
  return OUTLINED_FUNCTION_56();
}

void sub_1A5778110(uint64_t a1)
{
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;

  v2 = MEMORY[0x1E0DEE9E8];
  sub_1A5778870(a1);
  if ((v3 & 1) == 0)
  {
LABEL_26:
    OUTLINED_FUNCTION_49_11();
    if ((v25 & 1) != 0)
    {
      if (qword_1EE7A90C8 != -1)
        swift_once();
      OUTLINED_FUNCTION_73_7();
      v26 = sub_1A5779798(a1, v2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
      v34 = OUTLINED_FUNCTION_70_9(v26, v27, v28, v29, v30, v31, v32, v33, v47, v49, v51);
      v37 = sub_1A577A050((uint64_t)v34, v35, v36);
      v45 = OUTLINED_FUNCTION_69_7(v37, v38, v39, v40, v41, v42, v43, v44, v48, v50, v52);
      sub_1A5779798(v45, v46, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E3458);
    }
    OUTLINED_FUNCTION_20_32();
    return;
  }
  OUTLINED_FUNCTION_10_43();
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_25_28();
  OUTLINED_FUNCTION_17_39();
  if ((v4 & 1) != 0)
  {
    do
    {
      OUTLINED_FUNCTION_62_11();
      if (v7 < 0)
      {
        v8 = *v6;
        v9 = (v7 & 0xFFFFFFFFFFLL) == v5 && v8 == 3;
        if (v9)
          goto LABEL_26;
      }
      OUTLINED_FUNCTION_22_35();
    }
    while ((v10 & 1) != 0);
  }
  OUTLINED_FUNCTION_6_49();
  OUTLINED_FUNCTION_58_11();
  if (!v9 & v13)
  {
    if ((v11 & 1) == 0)
      goto LABEL_32;
    v2 = MEMORY[0x1E0DEE9E8];
LABEL_24:
    while (1)
    {
      OUTLINED_FUNCTION_14_37();
      OUTLINED_FUNCTION_11_32(v22);
      if (!v24)
        break;
      __break(1u);
LABEL_32:
      OUTLINED_FUNCTION_77_10(&qword_1EE7A9F10);
      v2 = v49;
    }
    OUTLINED_FUNCTION_19_35(v23);
    goto LABEL_26;
  }
  v14 = v12 + 1;
  if (v11)
    sub_1A577A714(v14, &qword_1EE7A9F10);
  else
    sub_1A577B814(v14, &qword_1EE7A9F10);
  v2 = v49;
  OUTLINED_FUNCTION_10_43();
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_25_28();
  OUTLINED_FUNCTION_1_91();
  if ((v15 & 1) == 0)
    goto LABEL_24;
  OUTLINED_FUNCTION_50_10();
  while (1)
  {
    OUTLINED_FUNCTION_27_24();
    if (v18 < 0)
    {
      v19 = *v17;
      if ((v18 & 0xFFFFFFFFFFLL) == v16 && v19 == 3)
        break;
    }
    OUTLINED_FUNCTION_12_44();
    if ((v21 & 1) == 0)
      goto LABEL_24;
  }
  sub_1A594CDEC();
  __break(1u);
}

void sub_1A57782C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t inited;
  _BYTE v11[40];

  v3 = v2;
  sub_1A5666B28(v3, (uint64_t)v11);
  OUTLINED_FUNCTION_32_22();
  if (v8)
  {
    OUTLINED_FUNCTION_43_12();
    v8 = v8 && v7 == 1;
    if (v8 && v6 == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9F18);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
      *(_QWORD *)(inited + 32) = a1;
      *(_BYTE *)(inited + 44) = BYTE4(a2);
      *(_DWORD *)(inited + 40) = a2;
      sub_1A54E4334(a1, a2, SBYTE4(a2));
      sub_1A57789C0(inited);
    }
  }
  OUTLINED_FUNCTION_20_32();
}

uint64_t sub_1A5778364(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned __int8 v18;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v8 | (v2 << 6); ; i = __clz(__rbit64(v11)) + (v2 << 6))
  {
    v13 = *(_QWORD *)(v1 + 48) + 16 * i;
    v14 = *(_QWORD *)v13;
    v15 = *(unsigned int *)(v13 + 8) | ((unint64_t)*(unsigned __int8 *)(v13 + 12) << 32);
    sub_1A5779798(*(_QWORD *)v13, v15, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
    sub_1A5779A04((uint64_t)&v16, v14, v15);
    result = sub_1A5779798(v16, v17 | ((unint64_t)v18 << 32), (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E3458);
    if (v6)
      goto LABEL_4;
LABEL_5:
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        return swift_release();
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          return swift_release();
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            return swift_release();
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v11 - 1) & v11;
  }
  v12 = v10 + 4;
  if (v12 >= v7)
    return swift_release();
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1A5778510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t inited;
  uint64_t v6;
  unint64_t v7;
  _BYTE v8[40];

  sub_1A5666B28(v0, (uint64_t)v8);
  OUTLINED_FUNCTION_32_22();
  if (v3)
  {
    OUTLINED_FUNCTION_43_12();
    v3 = v3 && v2 == 1;
    if (v3 && v1 == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9F18);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
      if (qword_1EE7A90B0 != -1)
        swift_once();
      v6 = OUTLINED_FUNCTION_9_49(static PipeliningRequirement.noFlagChangesToAnyMessage);
      sub_1A5779798(v6, v7, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
      sub_1A57789C0(inited);
    }
  }
  OUTLINED_FUNCTION_85_4();
}

void sub_1A57785C8(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_1A577861C(uint64_t a1@<X8>)
{
  unint64_t v1;

  v1 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
  sub_1A568079C(v1);
  sub_1A57785C8(v1);
  sub_1A567FE68(v1);
  sub_1A5778608();
}

void sub_1A5778648(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v1 = a1 & 0xFFFFFFFFFFFFFFBLL;
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  sub_1A568079C(v3);
  sub_1A568079C(v2);
  sub_1A57785C8(v3);
  if ((v4 & 1) == 0)
    sub_1A57785C8(v2);
  sub_1A567FE68(v3);
  sub_1A567FE68(v2);
  sub_1A5778608();
}

void sub_1A5778718(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_1A577876C(uint64_t a1@<X8>)
{
  sub_1A568079C(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10));
  OUTLINED_FUNCTION_49_11();
  OUTLINED_FUNCTION_171_1();
  sub_1A5778758();
}

void sub_1A5778790(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v1 = a1 & 0xFFFFFFFFFFFFFFBLL;
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  sub_1A568079C(v3);
  sub_1A568079C(v2);
  sub_1A5778718(v3);
  if ((v4 & 1) != 0)
  {
    sub_1A567FE68(v3);
  }
  else
  {
    OUTLINED_FUNCTION_49_11();
    OUTLINED_FUNCTION_55_14();
  }
  OUTLINED_FUNCTION_171_1();
  sub_1A5778758();
}

void sub_1A5778870(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_1A57788C4(uint64_t a1@<X8>)
{
  unint64_t v1;

  v1 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
  sub_1A568079C(v1);
  sub_1A5778870(v1);
  sub_1A567FE68(v1);
  sub_1A57788B0();
}

void sub_1A57788F0(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v1 = a1 & 0xFFFFFFFFFFFFFFBLL;
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  sub_1A568079C(v3);
  sub_1A568079C(v2);
  sub_1A5778870(v3);
  if ((v4 & 1) == 0)
    sub_1A5778870(v2);
  sub_1A567FE68(v3);
  sub_1A567FE68(v2);
  sub_1A57788B0();
}

uint64_t sub_1A57789C0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int32x2_t *v36;
  uint64_t v37;
  int32x2_t *v38;
  int32x2_t v39;
  int32x2_t v40;
  int32x2_t v41;
  int32x2_t v42;
  uint64_t v43;
  int32x2_t *v46;
  uint64_t v47;
  int32x2_t *v48;
  int32x2_t v49;
  int32x2_t v50;
  int32x2_t v51;
  int32x2_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t result;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  char v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  _BYTE v77[80];

  v4 = a1;
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = MEMORY[0x1E0DEE9E8];
    goto LABEL_117;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9F20);
  v5 = sub_1A594C6E4();
  v7 = v5;
  v69 = *(_QWORD *)(v4 + 16);
  if (!v69)
    goto LABEL_117;
  v8 = 0;
  v9 = v5 + 56;
  v66 = v4;
  v67 = v4 + 32;
  v68 = v5 + 56;
  while (1)
  {
    if (v8 >= *(_QWORD *)(v4 + 16))
    {
      __break(1u);
      goto LABEL_119;
    }
    v10 = v67 + 16 * v8;
    v3 = *(_QWORD *)v10;
    v11 = *(unsigned __int8 *)(v10 + 12);
    v76 = *(unsigned int *)(v10 + 8) | ((unint64_t)*(unsigned __int8 *)(v10 + 12) << 32);
    sub_1A594CE64();
    v12 = v11 >> 6;
    v70 = v8;
    if (!(v11 >> 6))
    {
      sub_1A594CE88();
      v13 = v76;
      v14 = v65 & 0xFFFFFF0000000000 | v76 | v76 & 0xFF00000000;
      v15 = v3;
      v65 = v14;
      goto LABEL_9;
    }
    if (v12 == 1)
    {
      sub_1A594CE88();
      v13 = v76;
      v14 = v64 & 0xFFFFFF0000000000 | v76 | v76 & 0x3F00000000;
      v15 = v3;
      v64 = v14;
LABEL_9:
      sub_1A56B6298((uint64_t)v77, v15, v14);
      goto LABEL_12;
    }
    v13 = v76;
    sub_1A594CE88();
    if (v3 | v76 ^ 0x8000000000)
      v13 = v76;
LABEL_12:
    v16 = sub_1A594CED0();
    v17 = -1 << *(_BYTE *)(v7 + 32);
    v18 = v16 & ~v17;
    v1 = v18 >> 6;
    v2 = 1 << v18;
    v19 = (1 << v18) & *(_QWORD *)(v9 + 8 * (v18 >> 6));
    sub_1A5779798(v3, v13, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
    v20 = HIDWORD(v13);
    v6 = v13;
    if (!v19)
      break;
    v74 = HIDWORD(v13);
    v21 = ~v17;
    v22 = v3 != 2;
    v23 = v3 != 1;
    v24 = v3 != 0;
    if (v13 != 0x8000000000)
    {
      v22 = 1;
      v23 = 1;
      v24 = 1;
    }
    v75 = HIDWORD(v13) & 0x3F;
    v25 = v12 != 2 || v22;
    v26 = v12 != 2 || v23;
    v72 = v26;
    v73 = v25;
    v27 = v12 != 2 || v24;
    v71 = v27;
    while (1)
    {
      v28 = *(_QWORD *)(v7 + 48) + 16 * v18;
      v1 = *(_QWORD *)v28;
      v2 = *(unsigned int *)(v28 + 8) | ((unint64_t)*(unsigned __int8 *)(v28 + 12) << 32);
      v29 = *(unsigned __int8 *)(v28 + 12) >> 6;
      if (v29)
      {
        if (v29 != 1)
        {
          if (v1 | v2 ^ 0x8000000000)
          {
            if (v2 == 0x8000000000 && v1 == 1)
            {
              if ((v72 & 1) == 0)
                goto LABEL_113;
            }
            else if ((v73 & 1) == 0)
            {
              goto LABEL_113;
            }
          }
          else if ((v71 & 1) == 0)
          {
            goto LABEL_113;
          }
          goto LABEL_108;
        }
        if (v12 == 1)
        {
          v30 = HIDWORD(v2) & 0x3F;
          if (!(_DWORD)v30)
          {
            LOBYTE(v31) = v75;
            if ((_DWORD)v75)
            {
              v55 = v3;
              if ((_DWORD)v75 != 1)
              {
LABEL_94:
                sub_1A54E4334(v3, v76, v31);
                goto LABEL_107;
              }
LABEL_102:
              if (*(_QWORD *)(v55 + 16) == 1)
                goto LABEL_120;
              goto LABEL_106;
            }
            goto LABEL_95;
          }
          v31 = v75;
          if ((_DWORD)v30 != 1)
            goto LABEL_85;
          if (!(_DWORD)v75)
          {
            sub_1A54E4334(v1, v2, 1);
            LOBYTE(v31) = 0;
            v6 = v76;
            v55 = v1;
            goto LABEL_102;
          }
          v32 = v1;
          if ((_DWORD)v75 != 1)
            goto LABEL_87;
          v33 = *(_QWORD *)(v1 + 16);
          if (v33 == *(_QWORD *)(v3 + 16))
          {
            if (!v33 || v1 == v3)
              goto LABEL_115;
            if (*(_DWORD *)(v3 + 32) == *(_DWORD *)(v1 + 32) && *(_DWORD *)(v3 + 36) == *(_DWORD *)(v1 + 36))
            {
              if (v33 == 1)
                goto LABEL_115;
              if (*(_DWORD *)(v3 + 40) == *(_DWORD *)(v1 + 40) && *(_DWORD *)(v3 + 44) == *(_DWORD *)(v1 + 44))
              {
                v36 = (int32x2_t *)(v1 + 48);
                v37 = v33 - 2;
                v38 = (int32x2_t *)(v3 + 48);
                while (v37)
                {
                  v39 = *v38++;
                  v40 = v39;
                  v41 = *v36++;
                  v42 = vceq_s32(v40, v41);
                  --v37;
                  if ((v42.i32[0] & v42.i32[1] & 1) == 0)
                    goto LABEL_108;
                }
                goto LABEL_115;
              }
            }
          }
        }
        goto LABEL_108;
      }
      if (v12)
        goto LABEL_108;
      if (!HIDWORD(v2))
      {
        LOBYTE(v31) = v74;
        if ((_DWORD)v74)
        {
          v56 = v3;
          if ((_DWORD)v74 != 1)
            goto LABEL_94;
LABEL_105:
          if (*(_QWORD *)(v56 + 16) == 1)
            goto LABEL_121;
LABEL_106:
          sub_1A54E4334(v3, v76, v31);
          swift_bridgeObjectRelease();
LABEL_107:
          v6 = v76;
          goto LABEL_108;
        }
LABEL_95:
        if ((_DWORD)v2 == (_DWORD)v6 && v1 == v3)
          goto LABEL_115;
        goto LABEL_108;
      }
      v31 = v74;
      if (HIDWORD(v2) != 1)
      {
LABEL_85:
        if (!v31)
          goto LABEL_94;
        v32 = v3;
        if (v31 != 1)
          goto LABEL_115;
LABEL_87:
        v54 = *(_QWORD *)(v32 + 16);
        sub_1A5779798(v3, v76, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
        v9 = v68;
        sub_1A5779798(v1, v2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
        swift_bridgeObjectRelease();
        v6 = v76;
        if (!v54)
          goto LABEL_115;
        goto LABEL_108;
      }
      if (!(_DWORD)v74)
      {
        sub_1A54E4334(v1, v2, 1);
        LOBYTE(v31) = 0;
        v6 = v76;
        v56 = v1;
        goto LABEL_105;
      }
      v32 = v1;
      if ((_DWORD)v74 != 1)
        goto LABEL_87;
      v43 = *(_QWORD *)(v1 + 16);
      if (v43 == *(_QWORD *)(v3 + 16))
      {
        if (!v43 || v1 == v3)
          goto LABEL_115;
        if (*(_DWORD *)(v3 + 32) == *(_DWORD *)(v1 + 32) && *(_DWORD *)(v3 + 36) == *(_DWORD *)(v1 + 36))
        {
          if (v43 == 1)
            goto LABEL_115;
          if (*(_DWORD *)(v3 + 40) == *(_DWORD *)(v1 + 40) && *(_DWORD *)(v3 + 44) == *(_DWORD *)(v1 + 44))
            break;
        }
      }
LABEL_108:
      v18 = (v18 + 1) & v21;
      v1 = v18 >> 6;
      v58 = *(_QWORD *)(v9 + 8 * (v18 >> 6));
      v2 = 1 << v18;
      if ((v58 & (1 << v18)) == 0)
      {
        LOBYTE(v20) = v74;
        goto LABEL_111;
      }
    }
    v46 = (int32x2_t *)(v1 + 48);
    v47 = v43 - 2;
    v48 = (int32x2_t *)(v3 + 48);
    while (v47)
    {
      v49 = *v48++;
      v50 = v49;
      v51 = *v46++;
      v52 = vceq_s32(v50, v51);
      --v47;
      if ((v52.i32[0] & v52.i32[1] & 1) == 0)
        goto LABEL_108;
    }
LABEL_115:
    sub_1A5779798(v3, v6, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E3458);
LABEL_113:
    v8 = v70 + 1;
    v4 = v66;
    if (v70 + 1 == v69)
    {
LABEL_117:
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  v58 = *(_QWORD *)(v9 + 8 * v1);
LABEL_111:
  *(_QWORD *)(v9 + 8 * v1) = v2 | v58;
  v59 = *(_QWORD *)(v7 + 48) + 16 * v18;
  *(_QWORD *)v59 = v3;
  *(_BYTE *)(v59 + 12) = v20;
  *(_DWORD *)(v59 + 8) = v6;
  v60 = *(_QWORD *)(v7 + 16);
  v61 = __OFADD__(v60, 1);
  v62 = v60 + 1;
  if (!v61)
  {
    *(_QWORD *)(v7 + 16) = v62;
    goto LABEL_113;
  }
LABEL_119:
  __break(1u);
LABEL_120:
  sub_1A5779798(v3, v6, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
  sub_1A5779798(v1, v2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_121:
  sub_1A5779798(v3, v6, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
  sub_1A5779798(v1, v2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1A5778FE0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int32x2_t *v30;
  uint64_t v31;
  int32x2_t *v32;
  int32x2_t v33;
  int32x2_t v34;
  int32x2_t v35;
  int32x2_t v36;
  uint64_t v37;
  int32x2_t *v40;
  uint64_t v41;
  int32x2_t *v42;
  int32x2_t v43;
  int32x2_t v44;
  int32x2_t v45;
  int32x2_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67[80];

  v4 = a1;
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = MEMORY[0x1E0DEE9E8];
    goto LABEL_94;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9F10);
  v5 = sub_1A594C6E4();
  v7 = v5;
  v62 = *(_QWORD *)(v4 + 16);
  if (v62)
  {
    v8 = 0;
    v9 = v5 + 56;
    v59 = v4;
    v60 = v4 + 32;
    v61 = v5 + 56;
    do
    {
      if (v8 >= *(_QWORD *)(v4 + 16))
      {
        __break(1u);
        goto LABEL_96;
      }
      v10 = v60 + 16 * v8;
      v3 = *(_QWORD *)v10;
      v11 = *(unsigned __int8 *)(v10 + 12);
      v66 = *(unsigned int *)(v10 + 8) | ((unint64_t)*(unsigned __int8 *)(v10 + 12) << 32);
      sub_1A594CE64();
      v12 = v11 >> 6;
      v63 = v8;
      if (v12)
      {
        if (v12 != 1)
          __asm { BR              X8 }
        sub_1A594CE88();
        v13 = v66;
        v14 = v57 & 0xFFFFFF0000000000 | v66 | v66 & 0x3F00000000;
        v15 = v3;
        v57 = v14;
      }
      else
      {
        sub_1A594CE88();
        v13 = v66;
        v14 = v58 & 0xFFFFFF0000000000 | v66 | v66 & 0xFF00000000;
        v15 = v3;
        v58 = v14;
      }
      sub_1A56B6298((uint64_t)v67, v15, v14);
      v16 = sub_1A594CED0();
      v17 = -1 << *(_BYTE *)(v7 + 32);
      v18 = v16 & ~v17;
      v1 = v18 >> 6;
      v2 = 1 << v18;
      v19 = (1 << v18) & *(_QWORD *)(v9 + 8 * (v18 >> 6));
      sub_1A5779798(v3, v13, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
      v20 = HIDWORD(v13);
      v6 = v13;
      if (!v19)
      {
        v51 = *(_QWORD *)(v9 + 8 * v1);
        goto LABEL_88;
      }
      v64 = HIDWORD(v13);
      v21 = ~v17;
      v65 = HIDWORD(v13) & 0x3F;
      while (1)
      {
        v22 = *(_QWORD *)(v7 + 48) + 16 * v18;
        v1 = *(_QWORD *)v22;
        v2 = *(unsigned int *)(v22 + 8) | ((unint64_t)*(unsigned __int8 *)(v22 + 12) << 32);
        v23 = *(unsigned __int8 *)(v22 + 12) >> 6;
        if (v23)
        {
          if (v23 != 1)
            __asm { BR              X8 }
          if (v12 != 1)
            goto LABEL_85;
          v24 = HIDWORD(v2) & 0x3F;
          if ((_DWORD)v24)
          {
            v25 = v65;
            if ((_DWORD)v24 != 1)
            {
LABEL_62:
              if (v25)
              {
                v26 = v3;
                if (v25 != 1)
                  goto LABEL_92;
LABEL_64:
                v47 = *(_QWORD *)(v26 + 16);
                sub_1A5779798(v3, v66, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
                v9 = v61;
                sub_1A5779798(v1, v2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
                swift_bridgeObjectRelease();
                v6 = v66;
                if (!v47)
                  goto LABEL_92;
                goto LABEL_85;
              }
LABEL_71:
              sub_1A54E4334(v3, v66, v25);
              goto LABEL_84;
            }
            if ((_DWORD)v65)
            {
              v26 = v1;
              if ((_DWORD)v65 == 1)
              {
                v27 = *(_QWORD *)(v1 + 16);
                if (v27 == *(_QWORD *)(v3 + 16))
                {
                  if (!v27 || v1 == v3)
                    goto LABEL_92;
                  if (*(_DWORD *)(v3 + 32) == *(_DWORD *)(v1 + 32) && *(_DWORD *)(v3 + 36) == *(_DWORD *)(v1 + 36))
                  {
                    if (v27 == 1)
                      goto LABEL_92;
                    if (*(_DWORD *)(v3 + 40) == *(_DWORD *)(v1 + 40) && *(_DWORD *)(v3 + 44) == *(_DWORD *)(v1 + 44))
                    {
                      v30 = (int32x2_t *)(v1 + 48);
                      v31 = v27 - 2;
                      v32 = (int32x2_t *)(v3 + 48);
                      while (v31)
                      {
                        v33 = *v32++;
                        v34 = v33;
                        v35 = *v30++;
                        v36 = vceq_s32(v34, v35);
                        --v31;
                        if ((v36.i32[0] & v36.i32[1] & 1) == 0)
                          goto LABEL_85;
                      }
                      goto LABEL_92;
                    }
                  }
                }
                goto LABEL_85;
              }
              goto LABEL_64;
            }
            sub_1A54E4334(v1, v2, 1);
            LOBYTE(v25) = 0;
            v6 = v66;
            v48 = v1;
          }
          else
          {
            LOBYTE(v25) = v65;
            if (!(_DWORD)v65)
              goto LABEL_72;
            v48 = v3;
            if ((_DWORD)v65 != 1)
              goto LABEL_71;
          }
          if (*(_QWORD *)(v48 + 16) == 1)
            goto LABEL_97;
          goto LABEL_83;
        }
        if (!v12)
          break;
LABEL_85:
        v18 = (v18 + 1) & v21;
        v1 = v18 >> 6;
        v51 = *(_QWORD *)(v9 + 8 * (v18 >> 6));
        v2 = 1 << v18;
        if ((v51 & (1 << v18)) == 0)
        {
          LOBYTE(v20) = v64;
LABEL_88:
          *(_QWORD *)(v9 + 8 * v1) = v2 | v51;
          v52 = *(_QWORD *)(v7 + 48) + 16 * v18;
          *(_QWORD *)v52 = v3;
          *(_BYTE *)(v52 + 12) = v20;
          *(_DWORD *)(v52 + 8) = v6;
          v53 = *(_QWORD *)(v7 + 16);
          v54 = __OFADD__(v53, 1);
          v55 = v53 + 1;
          if (!v54)
          {
            *(_QWORD *)(v7 + 16) = v55;
            goto LABEL_90;
          }
LABEL_96:
          __break(1u);
LABEL_97:
          sub_1A5779798(v3, v6, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
          sub_1A5779798(v1, v2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
          swift_bridgeObjectRelease();
          __break(1u);
LABEL_98:
          sub_1A5779798(v3, v6, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
          sub_1A5779798(v1, v2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
          swift_bridgeObjectRelease();
          __break(1u);
          JUMPOUT(0x1A577964CLL);
        }
      }
      if (!HIDWORD(v2))
      {
        LOBYTE(v25) = v64;
        if (!(_DWORD)v64)
        {
LABEL_72:
          if ((_DWORD)v2 == (_DWORD)v6 && v1 == v3)
            goto LABEL_92;
          goto LABEL_85;
        }
        v49 = v3;
        if ((_DWORD)v64 != 1)
          goto LABEL_71;
LABEL_82:
        if (*(_QWORD *)(v49 + 16) == 1)
          goto LABEL_98;
LABEL_83:
        sub_1A54E4334(v3, v66, v25);
        swift_bridgeObjectRelease();
LABEL_84:
        v6 = v66;
        goto LABEL_85;
      }
      v25 = v64;
      if (HIDWORD(v2) != 1)
        goto LABEL_62;
      if (!(_DWORD)v64)
      {
        sub_1A54E4334(v1, v2, 1);
        LOBYTE(v25) = 0;
        v6 = v66;
        v49 = v1;
        goto LABEL_82;
      }
      v26 = v1;
      if ((_DWORD)v64 != 1)
        goto LABEL_64;
      v37 = *(_QWORD *)(v1 + 16);
      if (v37 != *(_QWORD *)(v3 + 16))
        goto LABEL_85;
      if (!v37 || v1 == v3)
        goto LABEL_92;
      if (*(_DWORD *)(v3 + 32) != *(_DWORD *)(v1 + 32) || *(_DWORD *)(v3 + 36) != *(_DWORD *)(v1 + 36))
        goto LABEL_85;
      if (v37 == 1)
        goto LABEL_92;
      if (*(_DWORD *)(v3 + 40) != *(_DWORD *)(v1 + 40) || *(_DWORD *)(v3 + 44) != *(_DWORD *)(v1 + 44))
        goto LABEL_85;
      v40 = (int32x2_t *)(v1 + 48);
      v41 = v37 - 2;
      v42 = (int32x2_t *)(v3 + 48);
      while (v41)
      {
        v43 = *v42++;
        v44 = v43;
        v45 = *v40++;
        v46 = vceq_s32(v44, v45);
        --v41;
        if ((v46.i32[0] & v46.i32[1] & 1) == 0)
          goto LABEL_85;
      }
LABEL_92:
      sub_1A5779798(v3, v6, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E3458);
LABEL_90:
      v8 = v63 + 1;
      v4 = v59;
    }
    while (v63 + 1 != v62);
  }
LABEL_94:
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_1A5779678()
{
  unint64_t result;

  result = qword_1EE7A9EF8;
  if (!qword_1EE7A9EF8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for PipeliningRequirement, &type metadata for PipeliningRequirement);
    atomic_store(result, (unint64_t *)&qword_1EE7A9EF8);
  }
  return result;
}

unint64_t sub_1A57796B8()
{
  unint64_t result;

  result = qword_1EE7A9F00;
  if (!qword_1EE7A9F00)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for PipeliningBehavior, &type metadata for PipeliningBehavior);
    atomic_store(result, (unint64_t *)&qword_1EE7A9F00);
  }
  return result;
}

ValueMetadata *type metadata accessor for PipeliningRequirement()
{
  return &type metadata for PipeliningRequirement;
}

uint64_t initializeBufferWithCopyOfBuffer for PipeliningBehavior(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)a2;
  v4 = *(unsigned __int8 *)(a2 + 12);
  v5 = *(unsigned int *)(a2 + 8);
  sub_1A5779798(*(_QWORD *)a2, v5 | (v4 << 32), (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v5;
  return a1;
}

uint64_t destroy for PipeliningBehavior(uint64_t a1)
{
  return sub_1A5779798(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E3458);
}

uint64_t sub_1A5779798(uint64_t result, unint64_t a2, uint64_t (*a3)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v3;

  v3 = (a2 >> 38) & 3;
  if ((_DWORD)v3 == 1)
    return a3(result, a2, HIDWORD(a2) & 0x3F);
  if (!(_DWORD)v3)
    return a3(result, a2, BYTE4(a2));
  return result;
}

uint64_t _s12NIOIMAPCore221PipeliningRequirementOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)a2;
  v4 = *(unsigned __int8 *)(a2 + 12);
  v5 = *(unsigned int *)(a2 + 8);
  sub_1A5779798(*(_QWORD *)a2, v5 | (v4 << 32), (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
  v6 = *(_QWORD *)a1;
  v7 = *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 12) = v4;
  sub_1A5779798(v6, v7, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E3458);
  return a1;
}

uint64_t assignWithTake for PipeliningBehavior(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 12);
  v5 = *((_DWORD *)a2 + 2);
  v6 = a1 + 8;
  v7 = *(unsigned int *)(a1 + 8);
  v8 = *(_QWORD *)a1;
  v9 = v7 | ((unint64_t)*(unsigned __int8 *)(v6 + 4) << 32);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)v6 = v5;
  *(_BYTE *)(v6 + 4) = v4;
  sub_1A5779798(v8, v9, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E3458);
  return a1;
}

uint64_t _s12NIOIMAPCore221PipeliningRequirementOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x3E && *(_BYTE *)(a1 + 13))
    {
      v2 = *(_DWORD *)a1 + 61;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 12) >> 6) & 0xFFFFFFC3 | (4 * ((*(unsigned __int8 *)(a1 + 12) >> 2) & 0xF))) ^ 0x3F;
      if (v2 >= 0x3D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t _s12NIOIMAPCore221PipeliningRequirementOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(_BYTE *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 62;
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 13) = 1;
  }
  else
  {
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 13) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_DWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 12) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1A5779934(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 12) >> 6;
  if (v1 <= 1)
    return v1;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A5779950(uint64_t a1)
{
  uint64_t result;
  unsigned int v2;
  unint64_t v3;

  v2 = *(_DWORD *)(a1 + 8);
  result = a1 + 8;
  v3 = v2 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32);
  *(_DWORD *)result = v2;
  *(_BYTE *)(result + 4) = BYTE4(v3) & 0x3F;
  return result;
}

uint64_t sub_1A577996C(uint64_t result, uint64_t a2)
{
  unsigned int v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *(_DWORD *)(result + 8);
    result += 8;
    v3 = (v2 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32)) & 0x3FFFFFFFFLL | (a2 << 38);
    *(_DWORD *)result = v2;
    *(_BYTE *)(result + 4) = BYTE4(v3);
  }
  else
  {
    *(_QWORD *)result = (a2 - 2);
    *(_DWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 12) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for PipeliningBehavior()
{
  return &type metadata for PipeliningBehavior;
}

uint64_t sub_1A57799BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5779A04(uint64_t a1, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  int32x2_t *v29;
  uint64_t v30;
  int32x2_t *v31;
  int32x2_t v32;
  int32x2_t v33;
  int32x2_t v34;
  int32x2_t v35;
  uint64_t v36;
  int32x2_t *v38;
  uint64_t v39;
  int32x2_t *v40;
  int32x2_t v41;
  int32x2_t v42;
  int32x2_t v43;
  int32x2_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD v72[9];

  v4 = v3;
  v8 = *v3;
  sub_1A594CE64();
  v9 = (a3 >> 38) & 3;
  if ((_DWORD)v9)
  {
    if ((_DWORD)v9 != 1)
    {
      sub_1A594CE88();
      goto LABEL_7;
    }
    sub_1A594CE88();
    v10 = a3 & 0x3FFFFFFFFFLL;
  }
  else
  {
    sub_1A594CE88();
    v10 = a3 & 0xFFFFFFFFFFLL;
  }
  sub_1A56B6298((uint64_t)v72, a2, v10);
LABEL_7:
  v11 = sub_1A594CED0();
  v12 = -1 << *(_BYTE *)(v8 + 32);
  v13 = v11 & ~v12;
  v70 = HIDWORD(a3);
  if (((*(_QWORD *)(v8 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_108:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v72[0] = *v4;
    *v4 = 0x8000000000000000;
    sub_1A5779798(a2, a3, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
    sub_1A577AAE0(a2, a3 & 0xFFFFFFFFFFLL, v13, isUniquelyReferenced_nonNull_native);
    *v4 = v72[0];
    swift_bridgeObjectRelease();
    *(_QWORD *)a1 = a2;
    *(_BYTE *)(a1 + 12) = v70;
    result = 1;
    *(_DWORD *)(a1 + 8) = a3;
    return result;
  }
  v63 = v3;
  v64 = a1;
  v14 = ~v12;
  v15 = (a3 & 0xFFFFFFFFFFLL) != 0x8000000000 || a2 != 2;
  v16 = (a3 & 0xFFFFFFFFFFLL) != 0x8000000000 || a2 != 1;
  v17 = (a3 & 0xFFFFFFFFFFLL) != 0x8000000000 || a2 != 0;
  v71 = a3;
  v68 = HIDWORD(a3) & 0x3F;
  v18 = (_DWORD)v9 != 2 || v15;
  v19 = (_DWORD)v9 != 2 || v16;
  v66 = v19;
  v67 = v18;
  v20 = (_DWORD)v9 != 2 || v17;
  v65 = v20;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v69 = (a3 >> 38) & 3;
  while (1)
  {
    v21 = *(_QWORD *)(v8 + 48) + 16 * v13;
    v22 = *(_QWORD *)v21;
    v23 = *(unsigned int *)(v21 + 8) | ((unint64_t)*(unsigned __int8 *)(v21 + 12) << 32);
    v24 = *(unsigned __int8 *)(v21 + 12) >> 6;
    if (v24)
      break;
    if ((_DWORD)v9)
      goto LABEL_106;
    if (!HIDWORD(v23))
    {
      if ((_BYTE)v70)
      {
        v50 = a2;
        if (v70 != 1)
        {
LABEL_90:
          v48 = a2;
          v26 = v70;
          v49 = v71;
LABEL_91:
          sub_1A54E4334(v48, v49, v26);
LABEL_105:
          LODWORD(v9) = v69;
          goto LABEL_106;
        }
LABEL_102:
        if (*(_QWORD *)(v50 + 16) == 1)
          goto LABEL_113;
        v53 = a2;
        v26 = v70;
        v54 = v71;
LABEL_104:
        sub_1A54E4334(v53, v54, v26);
        swift_bridgeObjectRelease();
        goto LABEL_105;
      }
      goto LABEL_92;
    }
    if (HIDWORD(v23) != 1)
    {
      if (!(_BYTE)v70)
        goto LABEL_90;
      v9 = a2;
      if (v70 != 1)
        goto LABEL_109;
LABEL_88:
      v51 = *(_QWORD *)(v9 + 16);
      sub_1A5779798(a2, v71, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
      sub_1A5779798(v22, v23, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
      swift_bridgeObjectRelease();
      LODWORD(v9) = v69;
      if (!v51)
        goto LABEL_109;
      goto LABEL_106;
    }
    if (!(_BYTE)v70)
    {
      sub_1A54E4334(v22, v23, 1);
      v50 = v22;
      goto LABEL_102;
    }
    v9 = v22;
    if (v70 != 1)
      goto LABEL_88;
    v36 = *(_QWORD *)(v22 + 16);
    LODWORD(v9) = v69;
    if (v36 == *(_QWORD *)(a2 + 16))
    {
      if (!v36 || v22 == a2)
        goto LABEL_109;
      if (*(_DWORD *)(a2 + 32) == *(_DWORD *)(v22 + 32) && *(_DWORD *)(a2 + 36) == *(_DWORD *)(v22 + 36))
      {
        v38 = (int32x2_t *)(v22 + 40);
        v39 = v36 - 1;
        v40 = (int32x2_t *)(a2 + 40);
        while (v39)
        {
          v41 = *v40++;
          v42 = v41;
          v43 = *v38++;
          v44 = vceq_s32(v42, v43);
          --v39;
          if ((v44.i32[0] & v44.i32[1] & 1) == 0)
            goto LABEL_106;
        }
LABEL_109:
        swift_bridgeObjectRelease();
        v58 = a2;
        v57 = v71;
LABEL_111:
        sub_1A5779798(v58, v57, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E3458);
        v59 = *(_QWORD *)(*v63 + 48) + 16 * v13;
        v60 = *(_QWORD *)v59;
        v61 = *(unsigned __int8 *)(v59 + 12);
        v62 = *(unsigned int *)(v59 + 8);
        *(_QWORD *)v64 = v60;
        *(_BYTE *)(v64 + 12) = v61;
        *(_DWORD *)(v64 + 8) = v62;
        sub_1A5779798(v60, v62 | (v61 << 32), (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
        return 0;
      }
    }
LABEL_106:
    v13 = (v13 + 1) & v14;
    if (((*(_QWORD *)(v8 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v4 = v63;
      a1 = v64;
      a3 = v71;
      goto LABEL_108;
    }
  }
  if (v24 != 1)
  {
    if (v22 | v23 ^ 0x8000000000)
    {
      if (v23 != 0x8000000000 || v22 != 1)
      {
        if ((v67 & 1) != 0)
          goto LABEL_106;
        swift_bridgeObjectRelease();
        v58 = 2;
LABEL_110:
        v57 = 0x8000000000;
        goto LABEL_111;
      }
      if ((v66 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v58 = 1;
        goto LABEL_110;
      }
    }
    else if ((v65 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v58 = 0;
      goto LABEL_110;
    }
    goto LABEL_106;
  }
  if ((_DWORD)v9 != 1)
    goto LABEL_106;
  v25 = HIDWORD(v23) & 0x3F;
  if ((_DWORD)v25)
  {
    v26 = v68;
    if ((_DWORD)v25 != 1)
    {
      if (!(_DWORD)v68)
        goto LABEL_82;
      v9 = a2;
      if ((_DWORD)v68 != 1)
        goto LABEL_109;
LABEL_80:
      v47 = *(_QWORD *)(v9 + 16);
      sub_1A5779798(a2, v71, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
      sub_1A5779798(v22, v23, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
      swift_bridgeObjectRelease();
      LODWORD(v9) = v69;
      if (!v47)
        goto LABEL_109;
      goto LABEL_106;
    }
    if (!(_DWORD)v68)
    {
      sub_1A54E4334(v22, v23, 1);
      v26 = 0;
      v46 = v22;
      goto LABEL_99;
    }
    v9 = v22;
    if ((_DWORD)v68 != 1)
      goto LABEL_80;
    v27 = *(_QWORD *)(v22 + 16);
    LODWORD(v9) = v69;
    if (v27 == *(_QWORD *)(a2 + 16))
    {
      if (!v27 || v22 == a2)
        goto LABEL_109;
      if (*(_DWORD *)(a2 + 32) == *(_DWORD *)(v22 + 32) && *(_DWORD *)(a2 + 36) == *(_DWORD *)(v22 + 36))
      {
        v29 = (int32x2_t *)(v22 + 40);
        v30 = v27 - 1;
        v31 = (int32x2_t *)(a2 + 40);
        while (v30)
        {
          v32 = *v31++;
          v33 = v32;
          v34 = *v29++;
          v35 = vceq_s32(v33, v34);
          --v30;
          if ((v35.i32[0] & v35.i32[1] & 1) == 0)
            goto LABEL_106;
        }
        goto LABEL_109;
      }
    }
    goto LABEL_106;
  }
  v26 = v68;
  if (!(_DWORD)v68)
  {
LABEL_92:
    if ((_DWORD)v23 == (_DWORD)v71 && v22 == a2)
      goto LABEL_109;
    goto LABEL_106;
  }
  v46 = a2;
  if ((_DWORD)v68 != 1)
  {
LABEL_82:
    v48 = a2;
    v49 = v71;
    goto LABEL_91;
  }
LABEL_99:
  if (*(_QWORD *)(v46 + 16) != 1)
  {
    v53 = a2;
    v54 = v71;
    goto LABEL_104;
  }
  sub_1A5779798(a2, v71, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
  sub_1A5779798(v22, v23, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_113:
  sub_1A5779798(a2, v71, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
  sub_1A5779798(v22, v23, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1A577A050(uint64_t a1, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int32x2_t *v23;
  uint64_t v24;
  int32x2_t *v25;
  int32x2_t v26;
  int32x2_t v27;
  int32x2_t v28;
  int32x2_t v29;
  uint64_t v30;
  int32x2_t *v32;
  uint64_t v33;
  int32x2_t *v34;
  int32x2_t v35;
  int32x2_t v36;
  int32x2_t v37;
  int32x2_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD v60[10];

  v4 = v3;
  v8 = *v3;
  sub_1A594CE64();
  v9 = (a3 >> 38) & 3;
  if ((_DWORD)v9)
  {
    if ((_DWORD)v9 != 1)
      __asm { BR              X9 }
    sub_1A594CE88();
    v10 = a3 & 0x3FFFFFFFFFLL;
  }
  else
  {
    sub_1A594CE88();
    v10 = a3 & 0xFFFFFFFFFFLL;
  }
  sub_1A56B6298((uint64_t)v60, a2, v10);
  v11 = sub_1A594CED0();
  v12 = -1 << *(_BYTE *)(v8 + 32);
  v13 = v11 & ~v12;
  v58 = HIDWORD(a3);
  if (((*(_QWORD *)(v8 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_79:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v60[0] = *v4;
    *v4 = 0x8000000000000000;
    sub_1A5779798(a2, a3, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
    sub_1A577B06C(a2, a3 & 0xFFFFFFFFFFLL, v13, isUniquelyReferenced_nonNull_native);
    *v4 = v60[0];
    swift_bridgeObjectRelease();
    *(_QWORD *)a1 = a2;
    *(_BYTE *)(a1 + 12) = v58;
    result = 1;
    *(_DWORD *)(a1 + 8) = a3;
    return result;
  }
  v54 = v3;
  v55 = a1;
  v14 = ~v12;
  v59 = a3;
  v56 = HIDWORD(a3) & 0x3F;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v57 = (a3 >> 38) & 3;
  while (1)
  {
    v15 = *(_QWORD *)(v8 + 48) + 16 * v13;
    v16 = *(_QWORD *)v15;
    v17 = *(unsigned int *)(v15 + 8) | ((unint64_t)*(unsigned __int8 *)(v15 + 12) << 32);
    v18 = *(unsigned __int8 *)(v15 + 12) >> 6;
    if (v18)
    {
      if (v18 != 1)
        __asm { BR              X8 }
      if ((_DWORD)v9 != 1)
        goto LABEL_77;
      v19 = HIDWORD(v17) & 0x3F;
      if ((_DWORD)v19)
      {
        v20 = v56;
        if ((_DWORD)v19 == 1)
        {
          if ((_DWORD)v56)
          {
            v9 = v16;
            if ((_DWORD)v56 != 1)
              goto LABEL_51;
            v21 = *(_QWORD *)(v16 + 16);
            LODWORD(v9) = v57;
            if (v21 == *(_QWORD *)(a2 + 16))
            {
              if (!v21 || v16 == a2)
                goto LABEL_80;
              if (*(_DWORD *)(a2 + 32) == *(_DWORD *)(v16 + 32) && *(_DWORD *)(a2 + 36) == *(_DWORD *)(v16 + 36))
              {
                v23 = (int32x2_t *)(v16 + 40);
                v24 = v21 - 1;
                v25 = (int32x2_t *)(a2 + 40);
                while (v24)
                {
                  v26 = *v25++;
                  v27 = v26;
                  v28 = *v23++;
                  v29 = vceq_s32(v27, v28);
                  --v24;
                  if ((v29.i32[0] & v29.i32[1] & 1) == 0)
                    goto LABEL_77;
                }
                goto LABEL_80;
              }
            }
            goto LABEL_77;
          }
          sub_1A54E4334(v16, v17, 1);
          v20 = 0;
          v39 = v16;
          goto LABEL_70;
        }
        if ((_DWORD)v56)
        {
          v9 = a2;
          if ((_DWORD)v56 != 1)
            goto LABEL_80;
LABEL_51:
          v40 = *(_QWORD *)(v9 + 16);
          sub_1A5779798(a2, v59, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
          sub_1A5779798(v16, v17, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
          swift_bridgeObjectRelease();
          LODWORD(v9) = v57;
          if (!v40)
            goto LABEL_80;
          goto LABEL_77;
        }
LABEL_53:
        v41 = a2;
        v42 = v59;
LABEL_62:
        sub_1A54E4334(v41, v42, v20);
LABEL_76:
        LODWORD(v9) = v57;
        goto LABEL_77;
      }
      v20 = v56;
      if ((_DWORD)v56)
      {
        v39 = a2;
        if ((_DWORD)v56 == 1)
        {
LABEL_70:
          if (*(_QWORD *)(v39 + 16) == 1)
          {
            sub_1A5779798(a2, v59, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
            sub_1A5779798(v16, v17, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
            swift_bridgeObjectRelease();
            __break(1u);
LABEL_82:
            sub_1A5779798(a2, v59, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
            sub_1A5779798(v16, v17, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
            swift_bridgeObjectRelease();
            __break(1u);
            JUMPOUT(0x1A577A6ECLL);
          }
          v46 = a2;
          v47 = v59;
LABEL_75:
          sub_1A54E4334(v46, v47, v20);
          swift_bridgeObjectRelease();
          goto LABEL_76;
        }
        goto LABEL_53;
      }
LABEL_63:
      if ((_DWORD)v17 == (_DWORD)v59 && v16 == a2)
        goto LABEL_80;
      goto LABEL_77;
    }
    if ((_DWORD)v9)
      goto LABEL_77;
    if (!HIDWORD(v17))
    {
      if ((_BYTE)v58)
      {
        v43 = a2;
        if (v58 != 1)
          goto LABEL_61;
LABEL_73:
        if (*(_QWORD *)(v43 + 16) == 1)
          goto LABEL_82;
        v46 = a2;
        v20 = v58;
        v47 = v59;
        goto LABEL_75;
      }
      goto LABEL_63;
    }
    if (HIDWORD(v17) != 1)
    {
      if ((_BYTE)v58)
      {
        v9 = a2;
        if (v58 != 1)
          goto LABEL_80;
LABEL_59:
        v44 = *(_QWORD *)(v9 + 16);
        sub_1A5779798(a2, v59, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
        sub_1A5779798(v16, v17, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
        swift_bridgeObjectRelease();
        LODWORD(v9) = v57;
        if (!v44)
          goto LABEL_80;
        goto LABEL_77;
      }
LABEL_61:
      v41 = a2;
      v20 = v58;
      v42 = v59;
      goto LABEL_62;
    }
    if (!(_BYTE)v58)
    {
      sub_1A54E4334(v16, v17, 1);
      v43 = v16;
      goto LABEL_73;
    }
    v9 = v16;
    if (v58 != 1)
      goto LABEL_59;
    v30 = *(_QWORD *)(v16 + 16);
    LODWORD(v9) = v57;
    if (v30 == *(_QWORD *)(a2 + 16))
    {
      if (!v30 || v16 == a2)
        goto LABEL_80;
      if (*(_DWORD *)(a2 + 32) == *(_DWORD *)(v16 + 32) && *(_DWORD *)(a2 + 36) == *(_DWORD *)(v16 + 36))
        break;
    }
LABEL_77:
    v13 = (v13 + 1) & v14;
    if (((*(_QWORD *)(v8 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v4 = v54;
      a1 = v55;
      a3 = v59;
      goto LABEL_79;
    }
  }
  v32 = (int32x2_t *)(v16 + 40);
  v33 = v30 - 1;
  v34 = (int32x2_t *)(a2 + 40);
  while (v33)
  {
    v35 = *v34++;
    v36 = v35;
    v37 = *v32++;
    v38 = vceq_s32(v36, v37);
    --v33;
    if ((v38.i32[0] & v38.i32[1] & 1) == 0)
      goto LABEL_77;
  }
LABEL_80:
  swift_bridgeObjectRelease();
  sub_1A5779798(a2, v59, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E3458);
  v50 = *(_QWORD *)(*v54 + 48) + 16 * v13;
  v51 = *(_QWORD *)v50;
  v52 = *(unsigned __int8 *)(v50 + 12);
  v53 = *(unsigned int *)(v50 + 8);
  *(_QWORD *)v55 = v51;
  *(_BYTE *)(v55 + 12) = v52;
  *(_DWORD *)(v55 + 8) = v53;
  sub_1A5779798(v51, v53 | (v52 << 32), (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
  return 0;
}

void sub_1A577A714(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  _QWORD *v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_16_35(a1, a2);
  v5 = sub_1A594C6CC();
  if (v3[2])
  {
    OUTLINED_FUNCTION_24_27();
    v6 = v3 + 7;
    OUTLINED_FUNCTION_61_13();
    v9 = v8 & v7;
    v11 = (unint64_t)(v10 + 63) >> 6;
    swift_retain();
    v12 = 0;
    if (!v9)
      goto LABEL_4;
LABEL_3:
    OUTLINED_FUNCTION_40_20();
    while (1)
    {
      v16 = OUTLINED_FUNCTION_63_10(v3[6] + 16 * v13);
      v4(v16);
      if (v9)
        goto LABEL_3;
LABEL_4:
      v14 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
        return;
      }
      if (v14 >= v11)
        goto LABEL_20;
      ++v12;
      if (!v6[v14])
      {
        v12 = v14 + 1;
        if (v14 + 1 >= v11)
          goto LABEL_20;
        if (!v6[v12])
        {
          v12 = v14 + 2;
          if (v14 + 2 >= v11)
            goto LABEL_20;
          if (!v6[v12])
          {
            v15 = v14 + 3;
            if (v15 >= v11)
            {
LABEL_20:
              OUTLINED_FUNCTION_36();
              OUTLINED_FUNCTION_24_27();
              if (v17 > 63)
                sub_1A577B670(0, (unint64_t)(v17 + 63) >> 6, v3 + 7);
              else
                *v6 = -1 << v17;
              v3[2] = 0;
              break;
            }
            if (!v6[v15])
            {
              while (1)
              {
                v12 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_26;
                if (v12 >= v11)
                  goto LABEL_20;
                ++v15;
                if (v6[v12])
                  goto LABEL_17;
              }
            }
            v12 = v15;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_51_11();
    }
  }
  OUTLINED_FUNCTION_36();
  *v2 = v5;
  OUTLINED_FUNCTION_15_3();
}

unint64_t sub_1A577A874(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  _BYTE v10[72];

  sub_1A594CE64();
  v6 = (a2 >> 38) & 3;
  if ((_DWORD)v6)
  {
    if ((_DWORD)v6 != 1)
    {
      sub_1A594CE88();
      goto LABEL_7;
    }
    sub_1A594CE88();
    v7 = a2 & 0x3FFFFFFFFFLL;
  }
  else
  {
    sub_1A594CE88();
    v7 = a2 & 0xFFFFFFFFFFLL;
  }
  sub_1A56B6298((uint64_t)v10, a1, v7);
LABEL_7:
  sub_1A594CED0();
  result = sub_1A594C5DC();
  *(_QWORD *)(a3 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  v9 = *(_QWORD *)(a3 + 48) + 16 * result;
  *(_QWORD *)v9 = a1;
  *(_BYTE *)(v9 + 12) = BYTE4(a2);
  *(_DWORD *)(v9 + 8) = a2;
  ++*(_QWORD *)(a3 + 16);
  return result;
}

unint64_t sub_1A577A9A0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  _BYTE v10[72];

  sub_1A594CE64();
  v6 = (a2 >> 38) & 3;
  if ((_DWORD)v6)
  {
    if ((_DWORD)v6 != 1)
      __asm { BR              X9 }
    sub_1A594CE88();
    v7 = a2 & 0x3FFFFFFFFFLL;
  }
  else
  {
    sub_1A594CE88();
    v7 = a2 & 0xFFFFFFFFFFLL;
  }
  sub_1A56B6298((uint64_t)v10, a1, v7);
  sub_1A594CED0();
  result = sub_1A594C5DC();
  *(_QWORD *)(a3 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  v9 = *(_QWORD *)(a3 + 48) + 16 * result;
  *(_QWORD *)v9 = a1;
  *(_BYTE *)(v9 + 12) = BYTE4(a2);
  *(_DWORD *)(v9 + 8) = a2;
  ++*(_QWORD *)(a3 + 16);
  return result;
}

void sub_1A577AAE0(uint64_t a1, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  int32x2_t *v32;
  uint64_t v33;
  int32x2_t *v34;
  int32x2_t v35;
  int32x2_t v36;
  int32x2_t v37;
  int32x2_t v38;
  uint64_t v39;
  BOOL v40;
  int32x2_t *v42;
  uint64_t v43;
  int32x2_t *v44;
  int32x2_t v45;
  int32x2_t v46;
  int32x2_t v47;
  int32x2_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  int32x2_t *v63;
  uint64_t v64;
  char v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t *v69;
  unint64_t v70;
  char v72[72];

  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  v70 = HIDWORD(a2);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_116;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_1A577A714(v11, &qword_1EE7A9F20);
  }
  else
  {
    if (v10 > v9)
    {
      sub_1A577B68C(&qword_1EE7A9F20);
      goto LABEL_116;
    }
    sub_1A577B814(v11, &qword_1EE7A9F20);
  }
  v12 = *v4;
  sub_1A594CE64();
  v13 = (a2 >> 38) & 3;
  if (!(_DWORD)v13)
  {
    sub_1A594CE88();
    v14 = a2 & 0xFFFFFFFFFFLL;
    goto LABEL_12;
  }
  if ((_DWORD)v13 == 1)
  {
    sub_1A594CE88();
    v14 = a2 & 0x3FFFFFFFFFLL;
LABEL_12:
    sub_1A56B6298((uint64_t)v72, a1, v14);
    goto LABEL_14;
  }
  sub_1A594CE88();
LABEL_14:
  v15 = sub_1A594CED0();
  v16 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v15 & ~v16;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v17 = ~v16;
    v18 = (a2 & 0xFFFFFFFFFFLL) != 0x8000000000 || a1 != 2;
    v19 = (a2 & 0xFFFFFFFFFFLL) != 0x8000000000 || a1 != 1;
    v20 = (a2 & 0xFFFFFFFFFFLL) != 0x8000000000 || a1 != 0;
    v68 = HIDWORD(a2) & 0x3F;
    v21 = (_DWORD)v13 != 2 || v18;
    v22 = (_DWORD)v13 != 2 || v19;
    v66 = v22;
    v67 = v21;
    v23 = (_DWORD)v13 != 2 || v20;
    v65 = v23;
    v63 = (int32x2_t *)(a1 + 40);
    v64 = a1;
    do
    {
      v24 = *(_QWORD *)(v12 + 48) + 16 * a3;
      v5 = *(_QWORD *)v24;
      v6 = *(unsigned int *)(v24 + 8) | ((unint64_t)*(unsigned __int8 *)(v24 + 12) << 32);
      v25 = *(unsigned __int8 *)(v24 + 12) >> 6;
      if (v25)
      {
        if (v25 != 1)
        {
          if (v5 | v6 ^ 0x8000000000)
          {
            if (v6 == 0x8000000000 && v5 == 1)
            {
              if ((v66 & 1) == 0)
                goto LABEL_121;
            }
            else if ((v67 & 1) == 0)
            {
              goto LABEL_121;
            }
          }
          else if ((v65 & 1) == 0)
          {
            goto LABEL_121;
          }
          goto LABEL_115;
        }
        if ((_DWORD)v13 == 1)
        {
          v26 = HIDWORD(v6) & 0x3F;
          if (!(_DWORD)v26)
          {
            v27 = BYTE4(a2) & 0x3F;
            if ((_DWORD)v68)
            {
              v50 = a1;
              if ((_DWORD)v68 == 1)
                goto LABEL_109;
              goto LABEL_90;
            }
            goto LABEL_97;
          }
          v27 = BYTE4(a2) & 0x3F;
          if ((_DWORD)v26 != 1)
          {
            if ((_DWORD)v68)
            {
              v28 = a1;
              if ((_DWORD)v68 != 1)
                goto LABEL_121;
              goto LABEL_106;
            }
LABEL_90:
            v51 = a1;
            v52 = a2;
            goto LABEL_96;
          }
          if (!(_DWORD)v68)
          {
            sub_1A54E4334(v5, v6, 1);
            v27 = 0;
            v50 = v5;
LABEL_109:
            if (*(_QWORD *)(v50 + 16) == 1)
              goto LABEL_119;
            v56 = a1;
            v57 = a2;
            goto LABEL_114;
          }
          v28 = v5;
          if ((_DWORD)v68 != 1)
            goto LABEL_106;
          v29 = *(_QWORD *)(v5 + 16);
          if (v29 == *(_QWORD *)(a1 + 16))
          {
            if (v29)
              v30 = v5 == a1;
            else
              v30 = 1;
            if (v30)
              goto LABEL_121;
            if (*(_DWORD *)(a1 + 32) == *(_DWORD *)(v5 + 32) && *(_DWORD *)(a1 + 36) == *(_DWORD *)(v5 + 36))
            {
              v32 = (int32x2_t *)(v5 + 40);
              v33 = v29 - 1;
              v34 = v63;
              while (v33)
              {
                v35 = *v34++;
                v36 = v35;
                v37 = *v32++;
                v38 = vceq_s32(v36, v37);
                --v33;
                if ((v38.i32[0] & v38.i32[1] & 1) == 0)
                  goto LABEL_115;
              }
              goto LABEL_121;
            }
          }
        }
      }
      else
      {
        if ((_DWORD)v13)
          goto LABEL_115;
        if (!HIDWORD(v6))
        {
          if ((_BYTE)v70)
          {
            v53 = a1;
            if (v70 == 1)
              goto LABEL_112;
LABEL_95:
            v51 = a1;
            v27 = v70;
            v52 = a2;
LABEL_96:
            sub_1A54E4334(v51, v52, v27);
            goto LABEL_115;
          }
LABEL_97:
          if ((_DWORD)v6 == (_DWORD)a2 && v5 == a1)
            goto LABEL_121;
          goto LABEL_115;
        }
        if (HIDWORD(v6) != 1)
        {
          if ((_BYTE)v70)
          {
            v28 = a1;
            if (v70 != 1)
              goto LABEL_121;
LABEL_106:
            v55 = *(_QWORD *)(v28 + 16);
            sub_1A5779798(a1, a2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
            a1 = v64;
            sub_1A5779798(v5, v6, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
            swift_bridgeObjectRelease();
            if (!v55)
              goto LABEL_121;
            goto LABEL_115;
          }
          goto LABEL_95;
        }
        if (!(_BYTE)v70)
        {
          sub_1A54E4334(v5, v6, 1);
          v53 = v5;
LABEL_112:
          if (*(_QWORD *)(v53 + 16) == 1)
            goto LABEL_120;
          v56 = a1;
          v27 = v70;
          v57 = a2;
LABEL_114:
          sub_1A54E4334(v56, v57, v27);
          swift_bridgeObjectRelease();
          goto LABEL_115;
        }
        v28 = v5;
        if (v70 != 1)
          goto LABEL_106;
        v39 = *(_QWORD *)(v5 + 16);
        if (v39 == *(_QWORD *)(a1 + 16))
        {
          if (v39)
            v40 = v5 == a1;
          else
            v40 = 1;
          if (v40)
            goto LABEL_121;
          if (*(_DWORD *)(a1 + 32) == *(_DWORD *)(v5 + 32) && *(_DWORD *)(a1 + 36) == *(_DWORD *)(v5 + 36))
          {
            v42 = (int32x2_t *)(v5 + 40);
            v43 = v39 - 1;
            v44 = v63;
            while (v43)
            {
              v45 = *v44++;
              v46 = v45;
              v47 = *v42++;
              v48 = vceq_s32(v46, v47);
              --v43;
              if ((v48.i32[0] & v48.i32[1] & 1) == 0)
                goto LABEL_115;
            }
            goto LABEL_121;
          }
        }
      }
LABEL_115:
      a3 = (a3 + 1) & v17;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_116:
  v58 = *v69;
  *(_QWORD *)(*v69 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v59 = *(_QWORD *)(v58 + 48) + 16 * a3;
  *(_QWORD *)v59 = a1;
  *(_BYTE *)(v59 + 12) = v70;
  *(_DWORD *)(v59 + 8) = a2;
  v60 = *(_QWORD *)(v58 + 16);
  v61 = __OFADD__(v60, 1);
  v62 = v60 + 1;
  if (v61)
  {
    __break(1u);
LABEL_119:
    sub_1A5779798(a1, a2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
    sub_1A5779798(v5, v6, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_120:
    sub_1A5779798(a1, a2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
    sub_1A5779798(v5, v6, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_121:
    sub_1A594CDEC();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v58 + 16) = v62;
  }
}

void sub_1A577B06C(uint64_t a1, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  int32x2_t *v26;
  uint64_t v27;
  int32x2_t *v28;
  int32x2_t v29;
  int32x2_t v30;
  int32x2_t v31;
  int32x2_t v32;
  uint64_t v33;
  BOOL v34;
  int32x2_t *v36;
  uint64_t v37;
  int32x2_t *v38;
  int32x2_t v39;
  int32x2_t v40;
  int32x2_t v41;
  int32x2_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  _BYTE v60[72];

  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  v58 = HIDWORD(a2);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    v11 = v9 + 1;
    if ((a4 & 1) != 0)
    {
      sub_1A577A714(v11, &qword_1EE7A9F10);
    }
    else
    {
      if (v10 > v9)
      {
        sub_1A577B68C(&qword_1EE7A9F10);
        goto LABEL_87;
      }
      sub_1A577B814(v11, &qword_1EE7A9F10);
    }
    v12 = *v4;
    sub_1A594CE64();
    v13 = (a2 >> 38) & 3;
    if ((_DWORD)v13)
    {
      if ((_DWORD)v13 != 1)
        __asm { BR              X9 }
      sub_1A594CE88();
      v14 = a2 & 0x3FFFFFFFFFLL;
    }
    else
    {
      sub_1A594CE88();
      v14 = a2 & 0xFFFFFFFFFFLL;
    }
    sub_1A56B6298((uint64_t)v60, a1, v14);
    v15 = sub_1A594CED0();
    v16 = -1 << *(_BYTE *)(v12 + 32);
    a3 = v15 & ~v16;
    if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
    {
      v17 = ~v16;
      v56 = HIDWORD(a2) & 0x3F;
      do
      {
        v18 = *(_QWORD *)(v12 + 48) + 16 * a3;
        v5 = *(_QWORD *)v18;
        v6 = *(unsigned int *)(v18 + 8) | ((unint64_t)*(unsigned __int8 *)(v18 + 12) << 32);
        v19 = *(unsigned __int8 *)(v18 + 12) >> 6;
        if (v19)
        {
          if (v19 != 1)
            __asm { BR              X8 }
          if ((_DWORD)v13 != 1)
            goto LABEL_86;
          v20 = HIDWORD(v6) & 0x3F;
          if (!(_DWORD)v20)
          {
            v21 = BYTE4(a2) & 0x3F;
            if ((_DWORD)v56)
            {
              v43 = a1;
              if ((_DWORD)v56 == 1)
                goto LABEL_80;
              goto LABEL_61;
            }
            goto LABEL_68;
          }
          v21 = BYTE4(a2) & 0x3F;
          if ((_DWORD)v20 != 1)
          {
            if ((_DWORD)v56)
            {
              v22 = a1;
              if ((_DWORD)v56 != 1)
                goto LABEL_92;
              goto LABEL_77;
            }
LABEL_61:
            v44 = a1;
            v45 = a2;
            goto LABEL_67;
          }
          if (!(_DWORD)v56)
          {
            sub_1A54E4334(v5, v6, 1);
            v21 = 0;
            v43 = v5;
LABEL_80:
            if (*(_QWORD *)(v43 + 16) == 1)
              goto LABEL_90;
            v49 = a1;
            v50 = a2;
            goto LABEL_85;
          }
          v22 = v5;
          if ((_DWORD)v56 != 1)
            goto LABEL_77;
          v23 = *(_QWORD *)(v5 + 16);
          if (v23 == *(_QWORD *)(a1 + 16))
          {
            if (v23)
              v24 = v5 == a1;
            else
              v24 = 1;
            if (v24)
              goto LABEL_92;
            if (*(_DWORD *)(a1 + 32) == *(_DWORD *)(v5 + 32) && *(_DWORD *)(a1 + 36) == *(_DWORD *)(v5 + 36))
            {
              v26 = (int32x2_t *)(v5 + 40);
              v27 = v23 - 1;
              v28 = (int32x2_t *)(a1 + 40);
              while (v27)
              {
                v29 = *v28++;
                v30 = v29;
                v31 = *v26++;
                v32 = vceq_s32(v30, v31);
                --v27;
                if ((v32.i32[0] & v32.i32[1] & 1) == 0)
                  goto LABEL_86;
              }
              goto LABEL_92;
            }
          }
        }
        else
        {
          if ((_DWORD)v13)
            goto LABEL_86;
          if (!HIDWORD(v6))
          {
            if ((_BYTE)v58)
            {
              v46 = a1;
              if (v58 == 1)
                goto LABEL_83;
LABEL_66:
              v44 = a1;
              v21 = v58;
              v45 = a2;
LABEL_67:
              sub_1A54E4334(v44, v45, v21);
              goto LABEL_86;
            }
LABEL_68:
            if ((_DWORD)v6 == (_DWORD)a2 && v5 == a1)
              goto LABEL_92;
            goto LABEL_86;
          }
          if (HIDWORD(v6) != 1)
          {
            if ((_BYTE)v58)
            {
              v22 = a1;
              if (v58 != 1)
                goto LABEL_92;
LABEL_77:
              v48 = *(_QWORD *)(v22 + 16);
              sub_1A5779798(a1, a2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
              LODWORD(v13) = (a2 >> 38) & 3;
              sub_1A5779798(v5, v6, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
              swift_bridgeObjectRelease();
              if (!v48)
                goto LABEL_92;
              goto LABEL_86;
            }
            goto LABEL_66;
          }
          if (!(_BYTE)v58)
          {
            sub_1A54E4334(v5, v6, 1);
            v46 = v5;
LABEL_83:
            if (*(_QWORD *)(v46 + 16) == 1)
              goto LABEL_91;
            v49 = a1;
            v21 = v58;
            v50 = a2;
LABEL_85:
            sub_1A54E4334(v49, v50, v21);
            swift_bridgeObjectRelease();
            goto LABEL_86;
          }
          v22 = v5;
          if (v58 != 1)
            goto LABEL_77;
          v33 = *(_QWORD *)(v5 + 16);
          if (v33 == *(_QWORD *)(a1 + 16))
          {
            if (v33)
              v34 = v5 == a1;
            else
              v34 = 1;
            if (v34)
              goto LABEL_92;
            if (*(_DWORD *)(a1 + 32) == *(_DWORD *)(v5 + 32) && *(_DWORD *)(a1 + 36) == *(_DWORD *)(v5 + 36))
            {
              v36 = (int32x2_t *)(v5 + 40);
              v37 = v33 - 1;
              v38 = (int32x2_t *)(a1 + 40);
              while (v37)
              {
                v39 = *v38++;
                v40 = v39;
                v41 = *v36++;
                v42 = vceq_s32(v40, v41);
                --v37;
                if ((v42.i32[0] & v42.i32[1] & 1) == 0)
                  goto LABEL_86;
              }
              goto LABEL_92;
            }
          }
        }
LABEL_86:
        a3 = (a3 + 1) & v17;
      }
      while (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
    }
  }
LABEL_87:
  v51 = *v57;
  *(_QWORD *)(*v57 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v52 = *(_QWORD *)(v51 + 48) + 16 * a3;
  *(_QWORD *)v52 = a1;
  *(_BYTE *)(v52 + 12) = v58;
  *(_DWORD *)(v52 + 8) = a2;
  v53 = *(_QWORD *)(v51 + 16);
  v54 = __OFADD__(v53, 1);
  v55 = v53 + 1;
  if (v54)
  {
    __break(1u);
LABEL_90:
    sub_1A5779798(a1, a2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
    sub_1A5779798(v5, v6, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_91:
    sub_1A5779798(a1, a2, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
    sub_1A5779798(v5, v6, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1A54E4334);
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_92:
    sub_1A594CDEC();
    __break(1u);
    JUMPOUT(0x1A577B648);
  }
  *(_QWORD *)(v51 + 16) = v55;
}

uint64_t sub_1A577B670(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_1A577B68C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName_0(a1);
  v3 = (_QWORD *)*v1;
  v4 = sub_1A594C6C0();
  v5 = v4;
  if (!v3[2])
  {
LABEL_28:
    OUTLINED_FUNCTION_36();
    *v2 = v5;
    OUTLINED_FUNCTION_15_3();
    return;
  }
  v6 = (_QWORD *)(v4 + 56);
  v7 = v3 + 7;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if ((_QWORD *)v5 != v3 || v6 >= &v3[v8 + 7])
    memmove(v6, v3 + 7, 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = v3[2];
  OUTLINED_FUNCTION_24_27();
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v3[7];
  v14 = (unint64_t)(v11 + 63) >> 6;
  if (!v13)
    goto LABEL_12;
LABEL_11:
  OUTLINED_FUNCTION_40_20();
  while (1)
  {
    v18 = v3[6] + 16 * v15;
    v19 = *(_QWORD *)v18;
    v20 = *(unsigned __int8 *)(v18 + 12);
    v21 = *(unsigned int *)(v18 + 8);
    v22 = *(_QWORD *)(v5 + 48) + 16 * v15;
    *(_QWORD *)v22 = v19;
    *(_DWORD *)(v22 + 8) = v21;
    *(_BYTE *)(v22 + 12) = v20;
    OUTLINED_FUNCTION_60_15(v19, v21 | (v20 << 32));
    if (v13)
      goto LABEL_11;
LABEL_12:
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v14)
      goto LABEL_28;
    ++v10;
    if (!v7[v16])
    {
      v10 = v16 + 1;
      if (v16 + 1 >= v14)
        goto LABEL_28;
      if (!v7[v10])
      {
        v10 = v16 + 2;
        if (v16 + 2 >= v14)
          goto LABEL_28;
        if (!v7[v10])
          break;
      }
    }
LABEL_25:
    OUTLINED_FUNCTION_51_11();
  }
  v17 = v16 + 3;
  if (v17 >= v14)
    goto LABEL_28;
  if (v7[v17])
  {
    v10 = v17;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    ++v17;
    if (v7[v10])
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_1A577B814(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, unint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;

  OUTLINED_FUNCTION_16_35(a1, a2);
  v5 = sub_1A594C6CC();
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_21:
    result = OUTLINED_FUNCTION_36();
    *v2 = v5;
    return result;
  }
  v22 = v2;
  OUTLINED_FUNCTION_24_27();
  v6 = v3 + 56;
  OUTLINED_FUNCTION_61_13();
  v9 = v8 & v7;
  v11 = (unint64_t)(v10 + 63) >> 6;
  result = swift_retain();
  v13 = 0;
  if (!v9)
    goto LABEL_4;
LABEL_3:
  v14 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = *(_QWORD *)(v3 + 48) + 16 * i;
    v20 = *(_QWORD *)v19;
    v21 = *(unsigned int *)(v19 + 8) | ((unint64_t)*(unsigned __int8 *)(v19 + 12) << 32);
    OUTLINED_FUNCTION_60_15(*(_QWORD *)v19, v21);
    result = v4(v20, v21, v5);
    if (v9)
      goto LABEL_3;
LABEL_4:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v16 >= v11)
      goto LABEL_20;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v13;
    if (!v17)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v11)
        goto LABEL_20;
      v17 = *(_QWORD *)(v6 + 8 * v13);
      if (!v17)
      {
        v13 = v16 + 2;
        if (v16 + 2 >= v11)
          goto LABEL_20;
        v17 = *(_QWORD *)(v6 + 8 * v13);
        if (!v17)
          break;
      }
    }
LABEL_17:
    v9 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v11)
  {
LABEL_20:
    OUTLINED_FUNCTION_36();
    v2 = v22;
    goto LABEL_21;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v11)
      goto LABEL_20;
    v17 = *(_QWORD *)(v6 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_17;
  }
LABEL_23:
  __break(1u);
  return result;
}

__n128 *OUTLINED_FUNCTION_0_107(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 1;
  result[2].n128_u8[12] = 0x80;
  result[2].n128_u32[2] = 0;
  result[3].n128_u64[0] = 2;
  result[3].n128_u8[12] = 0x80;
  result[3].n128_u32[2] = 0;
  result[4].n128_u64[0] = 3;
  result[4].n128_u8[12] = 0x80;
  result[4].n128_u32[2] = 0;
  return result;
}

__n128 *OUTLINED_FUNCTION_2_78(__n128 *result, __n128 a2)
{
  unint64_t v2;
  unsigned __int32 v3;
  unsigned __int8 v4;

  result[1] = a2;
  result[2].n128_u64[0] = 1;
  result[2].n128_u8[12] = 0x80;
  result[2].n128_u32[2] = 0;
  result[3].n128_u64[0] = 2;
  result[3].n128_u8[12] = 0x80;
  result[3].n128_u32[2] = 0;
  result[4].n128_u64[0] = 3;
  result[4].n128_u8[12] = 0x80;
  result[4].n128_u32[2] = 0;
  result[5].n128_u64[0] = v2;
  result[5].n128_u8[12] = v4;
  result[5].n128_u32[2] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_6_57@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v3;
  int v4;

  result = *a1;
  v3 = *((_BYTE *)a1 + 12);
  v4 = *((_DWORD *)a1 + 2);
  *(_QWORD *)(v1 + 48) = result;
  *(_BYTE *)(v1 + 60) = v3;
  *(_DWORD *)(v1 + 56) = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_47@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v3;
  int v4;

  result = *a1;
  v3 = *((_BYTE *)a1 + 12);
  v4 = *((_DWORD *)a1 + 2);
  *(_QWORD *)(v1 + 64) = result;
  *(_BYTE *)(v1 + 76) = v3;
  *(_DWORD *)(v1 + 72) = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_8_51@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v3;
  int v4;

  result = *a1;
  v3 = *((_BYTE *)a1 + 12);
  v4 = *((_DWORD *)a1 + 2);
  *(_QWORD *)(v1 + 80) = result;
  *(_BYTE *)(v1 + 92) = v3;
  *(_DWORD *)(v1 + 88) = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_9_49@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v3;
  int v4;

  result = *a1;
  v3 = *((_BYTE *)a1 + 12);
  v4 = *((_DWORD *)a1 + 2);
  *(_QWORD *)(v1 + 32) = result;
  *(_BYTE *)(v1 + 44) = v3;
  *(_DWORD *)(v1 + 40) = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_10_43()
{
  return sub_1A594CE64();
}

void OUTLINED_FUNCTION_11_32(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 12) = 0x80;
  *(_DWORD *)(a1 + 8) = 0;
}

__n128 *OUTLINED_FUNCTION_13_38(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 1;
  result[2].n128_u8[12] = 0x80;
  result[2].n128_u32[2] = 0;
  return result;
}

void OUTLINED_FUNCTION_14_37()
{
  uint64_t v0;
  unint64_t v1;

  *(_QWORD *)(v0 + ((v1 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v1;
}

__n128 *OUTLINED_FUNCTION_15_42(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 1;
  result[2].n128_u8[12] = 0x80;
  result[2].n128_u32[2] = 0;
  result[3].n128_u64[0] = 2;
  result[3].n128_u8[12] = 0x80;
  result[3].n128_u32[2] = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_35(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledName_0(a2);
}

uint64_t OUTLINED_FUNCTION_19_35@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v2 - 40) = v1;
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_21_35(int32x2_t *a1, uint64_t a2, int32x2_t *a3, uint64_t a4)
{
  sub_1A56B614C(a1, a2 & 0xFFFFFFFFFFLL, a3, a4 & 0xFFFFFFFFFFLL);
}

void OUTLINED_FUNCTION_23_30(int32x2_t *a1, uint64_t a2, int32x2_t *a3, uint64_t a4)
{
  sub_1A56B614C(a1, a2 & 0x3FFFFFFFFFLL, a3, a4 & 0x3FFFFFFFFFLL);
}

uint64_t OUTLINED_FUNCTION_25_28()
{
  return sub_1A594CED0();
}

void OUTLINED_FUNCTION_26_20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A56B6298(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_28_22()
{
  void (*v0)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t);
  uint64_t v1;

  return sub_1A5666BBC(v1 - 128, v0);
}

uint64_t OUTLINED_FUNCTION_34_25()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A5503BA0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_36_19()
{
  return sub_1A594CE64();
}

uint64_t OUTLINED_FUNCTION_37_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A56807D8(v0, v1, v2);
}

void *OUTLINED_FUNCTION_38_15(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char __dst)
{
  return memcpy(&__dst, __src, 0x88uLL);
}

uint64_t OUTLINED_FUNCTION_39_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  return sub_1A5680210((uint64_t)&a43);
}

void *OUTLINED_FUNCTION_41_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  const void *v26;

  return sub_1A567FF24(v26, &a26);
}

void OUTLINED_FUNCTION_42_14()
{
  unint64_t v0;

  sub_1A568079C(v0);
  sub_1A5778110(v0);
}

void *OUTLINED_FUNCTION_44_12(uint64_t a1, void *a2)
{
  void *v2;

  return sub_1A56B60BC(v2, a2);
}

__n128 *OUTLINED_FUNCTION_46_13(__n128 *result, __n128 a2)
{
  unint64_t v2;
  uint64_t v3;

  result[1] = a2;
  result[2].n128_u64[0] = v2;
  result[2].n128_u8[12] = BYTE4(v3);
  result[2].n128_u32[2] = v3;
  return result;
}

void OUTLINED_FUNCTION_49_11()
{
  uint64_t v0;

  sub_1A5778718(v0);
}

uint64_t OUTLINED_FUNCTION_52_13()
{
  void (*v0)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t);
  uint64_t v1;

  return sub_1A5666BBC(v1 - 128, v0);
}

unint64_t OUTLINED_FUNCTION_55_14()
{
  unint64_t v0;

  return sub_1A567FE68(v0);
}

void *OUTLINED_FUNCTION_57_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  const void *v43;

  return sub_1A567FF24(v43, &a43);
}

void *OUTLINED_FUNCTION_59_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  return sub_1A567FF24(&a26, (void *)(v26 - 168));
}

uint64_t OUTLINED_FUNCTION_60_15(uint64_t a1, unint64_t a2)
{
  uint64_t (*v2)(uint64_t, unint64_t, uint64_t);

  return sub_1A5779798(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_63_10@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_64_10()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_65_8()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_69_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return a11;
}

char *OUTLINED_FUNCTION_70_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return &a11;
}

uint64_t OUTLINED_FUNCTION_71_7()
{
  uint64_t v0;

  return sub_1A568081C(v0);
}

uint64_t OUTLINED_FUNCTION_72_9()
{
  uint64_t v0;

  return sub_1A567FF88(v0);
}

void OUTLINED_FUNCTION_75_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_1A56B6298((uint64_t)va, v4, a3);
}

uint64_t OUTLINED_FUNCTION_76_9(uint64_t result)
{
  return sub_1A5778364(result);
}

void OUTLINED_FUNCTION_77_10(uint64_t *a1)
{
  sub_1A577B68C(a1);
}

void *OUTLINED_FUNCTION_78_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return sub_1A567FF24((const void *)(v9 - 168), &a9);
}

void *OUTLINED_FUNCTION_79_8()
{
  uint64_t v0;

  return sub_1A56B60BC((void *)(v0 + 16), &STACK[0x220]);
}

uint64_t PreviewText.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t static PreviewText.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t PreviewText.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A577BFDC()
{
  return PreviewText.hashValue.getter();
}

uint64_t sub_1A577BFE4()
{
  return PreviewText.hash(into:)();
}

unint64_t sub_1A577BFF0()
{
  unint64_t result;

  result = qword_1EE7A9F28;
  if (!qword_1EE7A9F28)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for PreviewText, &type metadata for PreviewText);
    atomic_store(result, (unint64_t *)&qword_1EE7A9F28);
  }
  return result;
}

uint64_t sub_1A577C02C(uint64_t *a1, uint64_t *a2)
{
  return static PreviewText.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for PreviewText()
{
  return &type metadata for PreviewText;
}

void sub_1A577C050(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  Swift::Int v3;
  _DWORD *v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  char v10;
  Swift::Int v11;
  int v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  BOOL v16;
  Swift::Int v17;
  Swift::Int v18;
  Swift::Int v19;
  char v20;
  char v21;
  Swift::String v22;
  int v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;

  v4 = v1;
  sub_1A56DDBAC(a1, (uint64_t)&v48);
  v5 = v52;
  v6 = v52 >> 6;
  if (!v6)
  {
    v52 &= 0x3Fu;
    v4 = v1 + 5;
    v25 = OUTLINED_FUNCTION_34_10();
    OUTLINED_FUNCTION_1_59(v25, v26);
    if ((v27 & 1) != 0)
    {
      v28 = OUTLINED_FUNCTION_34_10();
      OUTLINED_FUNCTION_1_25(v28, v29);
    }
    OUTLINED_FUNCTION_13_21();
    if (!v13)
      goto LABEL_45;
    __break(1u);
    goto LABEL_17;
  }
  v2 = v48;
  if (v6 != 1)
  {
LABEL_17:
    if (v5 != 128 || (v50 | v51 | v2 | v49) != 0)
    {
      if (v5 == 128 && v2 == 1 && (v50 | v51 | v49) == 0)
        goto LABEL_42;
      v34 = OUTLINED_FUNCTION_3_68();
      v35 = OUTLINED_FUNCTION_18_15(v34);
      OUTLINED_FUNCTION_1_59(v35, v36);
      if ((v37 & 1) != 0)
      {
        v38 = OUTLINED_FUNCTION_18_15(0x323238434652);
        OUTLINED_FUNCTION_1_25(v38, v39);
      }
      OUTLINED_FUNCTION_13_21();
      if (!v13)
        goto LABEL_45;
      __break(1u);
    }
    v40 = OUTLINED_FUNCTION_3_68();
    OUTLINED_FUNCTION_1_59(v40, 0xE600000000000000);
    if ((v41 & 1) != 0)
      OUTLINED_FUNCTION_1_25(0x323238434652, 0xE600000000000000);
    OUTLINED_FUNCTION_13_21();
    if (!v13)
      goto LABEL_45;
    __break(1u);
    goto LABEL_38;
  }
  v52 &= 0x3Fu;
  v7 = v49;
  v8 = v50;
  OUTLINED_FUNCTION_1_59(1497648962, 0xE400000000000000);
  if ((v10 & 1) != 0)
    v9 = OUTLINED_FUNCTION_1_25(1497648962, 0xE400000000000000);
  v11 = v9;
  v12 = v1[5];
  v13 = __CFADD__(v12, (_DWORD)v9);
  v14 = v12 + v9;
  if (v13)
  {
    __break(1u);
    goto LABEL_48;
  }
  v1[5] = v14;
  sub_1A5700244(v2, v7, v8);
  v16 = __OFADD__(v11, v15);
  v3 = v11 + v15;
  if (v16)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    return;
  }
  if ((v5 & 1) != 0)
  {
LABEL_38:
    v19 = 0;
    goto LABEL_39;
  }
  sub_1A594CC9C();
  sub_1A594B5F8();
  OUTLINED_FUNCTION_72();
  sub_1A594B5F8();
  v17 = v1[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(60, 0xE100000000000000, (uint64_t)(v1 + 2), v17);
  v19 = v18;
  v21 = v20;
  OUTLINED_FUNCTION_72();
  if ((v21 & 1) != 0)
  {
    v22._countAndFlagsBits = 60;
    v22._object = (void *)0xE100000000000000;
    v19 = ByteBuffer._setStringSlowpath(_:at:)(v22, v17);
  }
  OUTLINED_FUNCTION_72();
  v23 = v4[5];
  v13 = __CFADD__(v23, (_DWORD)v19);
  v24 = v23 + v19;
  if (v13)
    goto LABEL_49;
  v4[5] = v24;
LABEL_39:
  if (!__OFADD__(v3, v19))
    return;
  __break(1u);
LABEL_42:
  v42 = OUTLINED_FUNCTION_3_68();
  v43 = OUTLINED_FUNCTION_32_11(v42);
  OUTLINED_FUNCTION_1_59(v43, v44);
  if ((v45 & 1) != 0)
  {
    v46 = OUTLINED_FUNCTION_32_11(0x323238434652);
    OUTLINED_FUNCTION_1_25(v46, v47);
  }
  OUTLINED_FUNCTION_13_21();
  if (v13)
    goto LABEL_50;
LABEL_45:
  *v4 = v30;
}

void ResponseEncodeBuffer.writeResponse(_:)(const void *a1)
{
  char *v2;
  _BYTE v3[184];
  _BYTE v4[184];
  _BYTE v5[184];

  sub_1A5715EC4(a1, v3);
  sub_1A5715EC4(v3, v5);
  sub_1A5715EC4(a1, v4);
  v2 = (char *)&loc_1A577C348 + dword_1A577C70C[sub_1A56EFC28((uint64_t)v4)];
  __asm { BR              X10 }
}

uint64_t sub_1A577C358()
{
  uint64_t v0;
  const void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;

  nullsub_1(&v60);
  v2 = sub_1A56EFC74(v1, &v36);
  v10 = OUTLINED_FUNCTION_10_44((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v22, v24, v26, v28, v30, v32, v34, v36, v37, v38, v39,
          v40,
          v41,
          v42,
          v43,
          v44,
          v45,
          v46,
          v47,
          v48,
          v49,
          v50,
          v51,
          v52,
          v53,
          v54,
          v55,
          v56,
          v57,
          v58,
          v59);
  OUTLINED_FUNCTION_53_8((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17, v23, v25, v27, v29, v31, v33, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59);
  sub_1A56EF4D4(*(_QWORD *)v18, *(_QWORD *)(v18 + 8), *(_QWORD *)(v18 + 16), *(_QWORD *)(v18 + 24), *(_QWORD *)(v18 + 32), *(_QWORD *)(v18 + 40), *(_QWORD *)(v18 + 48), *(_QWORD *)(v18 + 56), *(_QWORD *)(v18 + 64), *(_QWORD *)(v18 + 72), *(_QWORD *)(v18 + 80), *(_QWORD *)(v18 + 88), *(_QWORD *)(v18 + 96), *(_BYTE *)(v18 + 104));
  sub_1A56F1F54(&v36);
  v20 = v19;
  sub_1A577CCA4(v0);
  return v20;
}

void sub_1A577C724(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[40];

  if (qword_1EE796BD0 != -1)
    swift_once();
  v3 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  swift_retain();
  sub_1A567D650(MEMORY[0x1E0DEE9D8]);
  OUTLINED_FUNCTION_20_33();
  sub_1A56EC628();
  OUTLINED_FUNCTION_8_52();
  ByteBufferView.init(_:)(v3, v4, v5, v6);
  swift_retain();
  sub_1A56D7A2C((uint64_t)v7);
  swift_release();
  swift_release();
  sub_1A577CCA4(a2);
  OUTLINED_FUNCTION_8_6();
}

void sub_1A577C828(char a1, void (*a2)(_BYTE *))
{
  uint64_t v4;
  int v5;
  __int16 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[8];
  uint64_t v17;
  uint64_t v18;
  int v19;
  __int16 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[40];

  if (qword_1EE796BD0 != -1)
    swift_once();
  v4 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  v5 = dword_1EE7F9220;
  v6 = word_1EE7F9224;
  v7 = byte_1EE7F9226;
  swift_retain();
  v8 = qword_1EE7F9218;
  sub_1A567D650(MEMORY[0x1E0DEE9D8]);
  v16[0] = a1 & 1;
  OUTLINED_FUNCTION_20_33();
  v17 = v4;
  v18 = v8;
  v19 = v5;
  v20 = v6;
  v21 = v7;
  v22 = v9;
  v23 = v10;
  v24 = v11;
  a2(v16);
  v12 = v17;
  OUTLINED_FUNCTION_8_52();
  ByteBufferView.init(_:)(v12, v13, v14, v15);
  swift_retain();
  sub_1A56D7A2C((uint64_t)v25);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_8_6();
}

void ResponseEncodeBuffer.readBytes()()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;

  EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
  v1 = *(_DWORD *)(v0 + 16);
  v2 = *(_DWORD *)(v0 + 20);
  if (v2 < v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v2 != v1)
  {
LABEL_7:
    __break(1u);
    return;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *(_QWORD *)(v0 + 8) = sub_1A566C3C4(*(_DWORD *)(*(_QWORD *)(v0 + 8) + 16));
    swift_release();
  }
  *(_DWORD *)(v0 + 24) = *(_DWORD *)(*(_QWORD *)(v0 + 8) + 16);
  *(_WORD *)(v0 + 28) = 0;
  *(_BYTE *)(v0 + 30) = 0;
  *(_QWORD *)(v0 + 16) = 0;
}

void ResponseEncodeBuffer.init(buffer:options:loggingMode:)(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  int v7;
  int v8;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = a3;
  v8 = a2;
  v11 = HIDWORD(a2);
  v12 = HIDWORD(a3);
  v13 = HIWORD(a3);
  if ((a4 & 1) != 0)
    v14 = 256;
  else
    v14 = 0;
  sub_1A567D650(MEMORY[0x1E0DEE9D8]);
  *(_BYTE *)a6 = a5;
  *(_BYTE *)(a6 + 5) = 0x80;
  *(_DWORD *)(a6 + 1) = v14;
  *(_QWORD *)(a6 + 8) = a1;
  *(_DWORD *)(a6 + 16) = v8;
  *(_DWORD *)(a6 + 20) = v11;
  *(_DWORD *)(a6 + 24) = v7;
  *(_WORD *)(a6 + 28) = v12;
  *(_BYTE *)(a6 + 30) = v13;
  *(_QWORD *)(a6 + 32) = v15;
  *(_QWORD *)(a6 + 40) = v16;
  *(_QWORD *)(a6 + 48) = v17;
}

uint64_t ResponseEncodeBuffer.init(buffer:capabilities:loggingMode:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W4>, uint64_t a5@<X8>)
{
  int v6;
  int v7;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  unint64_t v19;

  v6 = a3;
  v7 = a2;
  v10 = HIDWORD(a2);
  v18 = HIDWORD(a3);
  v19 = HIWORD(a3);
  sub_1A567D650(MEMORY[0x1E0DEE9D8]);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  result = swift_bridgeObjectRelease();
  *(_BYTE *)a5 = a4;
  *(_BYTE *)(a5 + 5) = 0x80;
  *(_DWORD *)(a5 + 1) = 256;
  *(_QWORD *)(a5 + 8) = a1;
  *(_DWORD *)(a5 + 16) = v7;
  *(_DWORD *)(a5 + 20) = v10;
  *(_DWORD *)(a5 + 24) = v6;
  *(_WORD *)(a5 + 28) = v18;
  *(_BYTE *)(a5 + 30) = v19;
  *(_QWORD *)(a5 + 32) = v12;
  *(_QWORD *)(a5 + 40) = v14;
  *(_QWORD *)(a5 + 48) = v16;
  return result;
}

void ResponseEncodeBuffer.writeContinuationRequest(_:)(unint64_t a1, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int v10;
  char v11;
  Swift::Int v12;
  int v13;
  BOOL v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  int v31;
  _BYTE v32[40];

  v5 = v4;
  OUTLINED_FUNCTION_1_59(8235, 0xE200000000000000);
  if ((v11 & 1) != 0)
    v10 = OUTLINED_FUNCTION_1_25(8235, 0xE200000000000000);
  v12 = v10;
  v13 = *(_DWORD *)(v4 + 20);
  v14 = __CFADD__(v13, (_DWORD)v10);
  v15 = v13 + v10;
  if (v14)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  *(_DWORD *)(v4 + 20) = v15;
  if ((a4 & 1) == 0)
  {
    sub_1A56E9CF0(a1);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v16 = sub_1A56F3CD4(a1, a2, (void *)a3);
    sub_1A568380C(a1);
    OUTLINED_FUNCTION_72();
    a3 = v12 + v16;
    if (!__OFADD__(v12, v16))
      goto LABEL_9;
    __break(1u);
  }
  ByteBufferView.init(_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v32);
  v17 = OUTLINED_FUNCTION_26_21();
  sub_1A56E9D40(v17, v18, v19, v20);
  swift_retain();
  sub_1A5658B54((uint64_t)v32);
  v22 = v21;
  sub_1A553E5DC((uint64_t)v32);
  sub_1A56B7518(v22);
  v24 = v23;
  swift_bridgeObjectRelease();
  v25 = OUTLINED_FUNCTION_26_21();
  sub_1A56E9D6C(v25, v26, v27, v28);
  a3 = v12 + v24;
  if (__OFADD__(v12, v24))
  {
LABEL_17:
    __break(1u);
    return;
  }
LABEL_9:
  OUTLINED_FUNCTION_3_23(2573, 0xE200000000000000);
  if ((v29 & 1) != 0)
    OUTLINED_FUNCTION_1_25(2573, 0xE200000000000000);
  OUTLINED_FUNCTION_249();
  if (v14)
    goto LABEL_15;
  *(_DWORD *)(v5 + 20) = v31;
  if (__OFADD__(a3, v30))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
}

uint64_t sub_1A577CCA4(uint64_t a1)
{
  sub_1A56EF730(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_WORD *)(a1 + 176),
    *(_BYTE *)(a1 + 178));
  return a1;
}

void sub_1A577CD14(void *a1)
{
  char *v2;
  _BYTE __dst[184];
  _BYTE v4[368];
  _BYTE v5[184];

  sub_1A56DDB8C(a1, __dst);
  sub_1A56DDB8C(__dst, v5);
  sub_1A56DDB8C(a1, v4);
  v2 = (char *)&loc_1A577CD70 + *((int *)qword_1A577D0B0 + sub_1A56EFCB0((uint64_t)v4));
  __asm { BR              X10 }
}

Swift::Int sub_1A577CD80()
{
  uint64_t v0;
  int v1;
  Swift::Int v2;
  char v3;
  Swift::Int v4;
  int v5;
  BOOL v6;
  int v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v18;

  v1 = *(_DWORD *)sub_1A56EFCCC((uint64_t)&v18);
  OUTLINED_FUNCTION_3_23(8234, 0xE200000000000000);
  if ((v3 & 1) != 0)
    v2 = OUTLINED_FUNCTION_1_25(8234, 0xE200000000000000);
  v4 = v2;
  v5 = *(_DWORD *)(v0 + 20);
  v6 = __CFADD__(v5, (_DWORD)v2);
  v7 = v5 + v2;
  if (v6)
  {
    __break(1u);
    JUMPOUT(0x1A577D080);
  }
  *(_DWORD *)(v0 + 20) = v7;
  sub_1A5703008(v1);
  v9 = v4 + v8;
  if (__OFADD__(v4, v8))
  {
    __break(1u);
    JUMPOUT(0x1A577D08CLL);
  }
  v10 = OUTLINED_FUNCTION_12_45();
  OUTLINED_FUNCTION_3_23(v10, v11);
  if ((v12 & 1) != 0)
  {
    v13 = OUTLINED_FUNCTION_12_45();
    OUTLINED_FUNCTION_1_25(v13, v14);
  }
  OUTLINED_FUNCTION_249();
  if (v6)
  {
    __break(1u);
    JUMPOUT(0x1A577D094);
  }
  *(_DWORD *)(v0 + 20) = v16;
  if (__OFADD__(v9, v15))
  {
    __break(1u);
    JUMPOUT(0x1A577CE08);
  }
  return v9 + v15;
}

ValueMetadata *type metadata accessor for ResponseEncodeBuffer()
{
  return &type metadata for ResponseEncodeBuffer;
}

void sub_1A577D0DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  char v6;
  int v7;
  Swift::Int v8;
  Swift::Int v9;
  Swift::Int v10;
  Swift::Int v11;
  char v12;
  char v13;
  Swift::String v14;
  int v15;
  BOOL v16;
  int v17;

  v2 = v1;
  sub_1A577C050(a1);
  v4 = v3;
  OUTLINED_FUNCTION_1_59(32, 0xE100000000000000);
  if ((v6 & 1) != 0)
    v5 = OUTLINED_FUNCTION_1_25(32, 0xE100000000000000);
  v7 = *(_DWORD *)(v1 + 20);
  v8 = (v7 + v5);
  if (__CFADD__(v7, (_DWORD)v5))
  {
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(v1 + 20) = v8;
  v9 = v4 + v5;
  if (__OFADD__(v4, v5))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1A594CC9C();
  sub_1A594B5F8();
  OUTLINED_FUNCTION_38();
  sub_1A594B5F8();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(123, 0xE100000000000000, v1 + 8, v8);
  v11 = v10;
  v13 = v12;
  OUTLINED_FUNCTION_38();
  if ((v13 & 1) != 0)
  {
    v14._countAndFlagsBits = 123;
    v14._object = (void *)0xE100000000000000;
    v11 = ByteBuffer._setStringSlowpath(_:at:)(v14, v8);
  }
  OUTLINED_FUNCTION_38();
  v15 = *(_DWORD *)(v2 + 20);
  v16 = __CFADD__(v15, (_DWORD)v11);
  v17 = v15 + v11;
  if (v16)
    goto LABEL_12;
  *(_DWORD *)(v2 + 20) = v17;
  if (__OFADD__(v9, v11))
LABEL_13:
    __break(1u);
}

uint64_t sub_1A577D220(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))
{
  __int16 v4;

  v4 = *(_WORD *)(a1 + 176);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    v4);
  return a1;
}

uint64_t OUTLINED_FUNCTION_3_68()
{
  return 0x323238434652;
}

uint64_t OUTLINED_FUNCTION_6_58()
{
  return 0x4354454644495520;
}

void *OUTLINED_FUNCTION_10_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  return sub_1A5715EC4(&STACK[0x348], &a39);
}

uint64_t OUTLINED_FUNCTION_12_45()
{
  return 0x2820484354454620;
}

void OUTLINED_FUNCTION_14_38()
{
  sub_1A577D0DC((uint64_t)&STACK[0x230]);
}

void OUTLINED_FUNCTION_15_43(__int16 a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 5) = 0x80;
  *(_DWORD *)(v1 + 1) = a1 & 0x100 | 1;
}

void OUTLINED_FUNCTION_25_29()
{
  sub_1A56DCE54(&STACK[0x230]);
}

uint64_t OUTLINED_FUNCTION_26_21()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_27_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return sub_1A56DDB8C((void *)(v9 - 248), &a9);
}

BOOL static ResponseEncodingOptions.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return ((a1 ^ a2) & 1) == 0;
}

NIOIMAPCore2::ResponseEncodingOptions __swiftcall ResponseEncodingOptions.init(capabilities:)(Swift::OpaquePointer capabilities)
{
  swift_bridgeObjectRelease();
  return (NIOIMAPCore2::ResponseEncodingOptions)1;
}

NIOIMAPCore2::ResponseEncodingOptions __swiftcall ResponseEncodingOptions.init()()
{
  return (NIOIMAPCore2::ResponseEncodingOptions)1;
}

uint64_t ResponseEncodingOptions.useQuotedString.getter(char a1)
{
  return a1 & 1;
}

uint64_t ResponseEncodingOptions.useQuotedString.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

double (*ResponseEncodingOptions.useQuotedString.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ResponseEncodingOptions.hash(into:)()
{
  return sub_1A594CE94();
}

uint64_t ResponseEncodingOptions.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE94();
  return sub_1A594CED0();
}

uint64_t sub_1A577D424()
{
  return ResponseEncodingOptions.hashValue.getter();
}

uint64_t sub_1A577D42C()
{
  return ResponseEncodingOptions.hash(into:)();
}

uint64_t sub_1A577D434()
{
  sub_1A594CE64();
  sub_1A594CE94();
  return sub_1A594CED0();
}

unint64_t sub_1A577D478()
{
  unint64_t result;

  result = qword_1EE7A9F30[0];
  if (!qword_1EE7A9F30[0])
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ResponseEncodingOptions, &type metadata for ResponseEncodingOptions);
    atomic_store(result, qword_1EE7A9F30);
  }
  return result;
}

BOOL sub_1A577D4B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ResponseEncodingOptions.__derived_struct_equals(_:_:)(*a1, *a2);
}

uint64_t getEnumTagSinglePayload for ResponseEncodingOptions(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseEncodingOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A577D5A4 + 4 * byte_1A59B7825[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A577D5D8 + 4 * asc_1A59B7820[v4]))();
}

uint64_t sub_1A577D5D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A577D5E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A577D5E8);
  return result;
}

uint64_t sub_1A577D5F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A577D5FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A577D600(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A577D608(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseEncodingOptions()
{
  return &type metadata for ResponseEncodingOptions;
}

void sub_1A577D624()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A577D634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a3 - 8);
  return MEMORY[0x1A85B1874](&unk_1A59B78D0, a1, &v4);
}

void sub_1A577D668(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v8;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = a3;
  v11 = HIDWORD(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6, a1, a4);
  v13 = a6 + *(int *)(type metadata accessor for DiscontiguousSlice(0, a4, a5, v12) + 36);
  *(_QWORD *)v13 = a2;
  *(_DWORD *)(v13 + 8) = v8;
  *(_BYTE *)(v13 + 12) = v11;
  OUTLINED_FUNCTION_17_1();
}

void sub_1A577D6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for DiscontiguousSlice.Index(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 + 8), a4);
  OUTLINED_FUNCTION_15_44();
  v4 = OUTLINED_FUNCTION_59_14();
  v5 = OUTLINED_FUNCTION_19_36(v4);
  OUTLINED_FUNCTION_49_12(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_4_6();
}

void sub_1A577D744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  OUTLINED_FUNCTION_41_14();
  type metadata accessor for DiscontiguousSlice.Index(0, a3, a4, v6);
  OUTLINED_FUNCTION_61_14();
  OUTLINED_FUNCTION_40_21();
  sub_1A594B280();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A577D7CC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if (*a1 == *a2)
  {
    OUTLINED_FUNCTION_41_14();
    type metadata accessor for DiscontiguousSlice.Index(0, a3, a4, v6);
    OUTLINED_FUNCTION_61_14();
    OUTLINED_FUNCTION_40_21();
    sub_1A594B37C();
  }
  OUTLINED_FUNCTION_17_1();
}

uint64_t sub_1A577D86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v6;
  uint64_t AssociatedTypeWitness;

  *a5 = a1;
  v6 = (char *)a5 + *(int *)(type metadata accessor for DiscontiguousSlice.Index(0, a3, a4, a4) + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v6, a2, AssociatedTypeWitness);
}

void sub_1A577D8EC()
{
  sub_1A594CE88();
  swift_getAssociatedTypeWitness();
  sub_1A594B154();
  OUTLINED_FUNCTION_17_1();
}

uint64_t sub_1A577D958()
{
  sub_1A594CE64();
  sub_1A577D8EC();
  return sub_1A594CED0();
}

void sub_1A577D9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A577D744(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void sub_1A577D9BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_1A577D7CC(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1A577D9C8()
{
  return sub_1A577D958();
}

void sub_1A577D9D0()
{
  sub_1A577D8EC();
}

uint64_t sub_1A577D9D8()
{
  sub_1A594CE64();
  sub_1A577D8EC();
  return sub_1A594CED0();
}

void sub_1A577DA28()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_16_4();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v0);
  swift_getAssociatedConformanceWitness();
  sub_1A594BFE8();
  OUTLINED_FUNCTION_51_12();
  MEMORY[0x1E0C80A78](v1);
  RangeSet.isEmpty.getter();
}

void sub_1A577DB24(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((a1 & 1) != 0)
  {
    sub_1A577DBB0(v24, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
  }
  else
  {
    sub_1A5786A60(v23, v20, v26);
    OUTLINED_FUNCTION_20_34(v22, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 104) + 16));
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v26, v25);
    sub_1A577D86C(0, v22, *(_QWORD *)(v27 - 112), *(_QWORD *)(v27 - 96), *(_QWORD **)(v27 - 88));
    OUTLINED_FUNCTION_1_3();
  }
}

void sub_1A577DBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t AssociatedTypeWitness;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t AssociatedConformanceWitness;
  uint64_t v38;

  OUTLINED_FUNCTION_16_4();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v28 = *(_QWORD *)(v23 + 16);
  v27 = *(_QWORD *)(v23 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&a9 - v31;
  v33 = (uint64_t *)(v20 + *(int *)(v24 + 36));
  v34 = *v33;
  v35 = *((unsigned int *)v33 + 2);
  v36 = *((unsigned __int8 *)v33 + 12);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v38 = sub_1A5786B4C(v34, v35 | (v36 << 32), AssociatedTypeWitness, AssociatedConformanceWitness);
  sub_1A594BDB4();
  sub_1A577D86C(v38, (uint64_t)v32, v28, v27, v26);
  OUTLINED_FUNCTION_1_3();
}

#error "1A577DED8: call analysis failed (funcsize=152)"

void sub_1A577DEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for DiscontiguousSlice.Index(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  OUTLINED_FUNCTION_15_44();
  v4 = OUTLINED_FUNCTION_59_14();
  v5 = OUTLINED_FUNCTION_19_36(v4);
  OUTLINED_FUNCTION_49_12(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_4_6();
}

void sub_1A577DF5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_50_11(v4, v5);
  v60 = v6;
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_22_36(v8, v54);
  v59 = v9;
  OUTLINED_FUNCTION_62_12();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v55 = OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_23_31();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v54 - v13;
  v19 = OUTLINED_FUNCTION_29_22(v15, v16, v17, v18);
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_24_28();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_47_13();
  OUTLINED_FUNCTION_43_13();
  swift_getAssociatedConformanceWitness();
  v21 = OUTLINED_FUNCTION_21_36();
  v22 = *(_QWORD *)(v21 - 8);
  v57 = v21;
  v58 = v22;
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_8_53(v27, v28, v29, v30, v31, v32, v33, v34, v54);
  v35 = v2 + *(int *)(v1 + 36);
  MEMORY[0x1A85B1874](&unk_1A59B7B00, v1);
  v36 = OUTLINED_FUNCTION_46_14();
  OUTLINED_FUNCTION_26_22(v36);
  if ((OUTLINED_FUNCTION_11_33() & 1) != 0)
  {
    v37 = v55;
    v38 = (uint64_t)&v14[*(int *)(v55 + 48)];
    v39 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 32);
    OUTLINED_FUNCTION_33_15((uint64_t)v14, v35);
    OUTLINED_FUNCTION_33_15(v38, v0);
    v40 = OUTLINED_FUNCTION_56_14();
    OUTLINED_FUNCTION_2_67(v40, (uint64_t)v14);
    OUTLINED_FUNCTION_2_67(v0, v38);
    OUTLINED_FUNCTION_33_15((uint64_t)v25, v3);
    OUTLINED_FUNCTION_35_18();
    v41 = v3 + *(int *)(v37 + 48);
    OUTLINED_FUNCTION_33_15(v3, (uint64_t)v14);
    OUTLINED_FUNCTION_33_15(v41, v38);
    OUTLINED_FUNCTION_33_15((uint64_t)&v25[*(int *)(v57 + 36)], v41);
    OUTLINED_FUNCTION_63_11();
    v42 = OUTLINED_FUNCTION_53_15();
    OUTLINED_FUNCTION_13_39(v42, (uint64_t)v25, v43);
    OUTLINED_FUNCTION_12_46();
    OUTLINED_FUNCTION_13_39((uint64_t)v25, v39, v44);
    OUTLINED_FUNCTION_42_15();
    OUTLINED_FUNCTION_39_22((uint64_t)v25, v45, v46, v47, v48, v49, v50, v51, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64,
      v65);
    OUTLINED_FUNCTION_7_48(v52, v53);
    OUTLINED_FUNCTION_10_45();
    OUTLINED_FUNCTION_14_39();
    OUTLINED_FUNCTION_17_40();
    OUTLINED_FUNCTION_1_3();
  }
  else
  {
    __break(1u);
  }
}

void (*sub_1A577E17C(uint64_t **a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_1A577E1D8(v6, a2, a3);
  return sub_1A5673EB0;
}

void (*sub_1A577E1D8(uint64_t *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *a1 = AssociatedTypeWitness;
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  a1[1] = v7;
  a1[2] = (uint64_t)malloc(*(_QWORD *)(v7 + 64));
  sub_1A577DEF4(a2, a3, v8, v9);
  return sub_1A5673F48;
}

void sub_1A577E26C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char v66;
  uint64_t v67;

  OUTLINED_FUNCTION_16_4();
  v2 = v1;
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = MEMORY[0x1E0DEB5C0];
  v54 = *(_QWORD *)(OUTLINED_FUNCTION_31_21() - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_28_2();
  v53 = v7;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_20_21();
  v52 = v9;
  v62 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_36_2();
  v51 = v11;
  v55 = v4;
  v56 = v3;
  v12 = OUTLINED_FUNCTION_44_13();
  v13 = sub_1A594BFE8();
  v50 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v44 - v15;
  v17 = *(int *)(v2 + 36);
  v57 = v0;
  v18 = v0 + v17;
  v19 = *(_QWORD *)v18;
  v20 = *(unsigned int *)(v18 + 8);
  v21 = *(unsigned __int8 *)(v18 + 12);
  v22 = OUTLINED_FUNCTION_6_1();
  v67 = v22;
  sub_1A54E4334(v19, v20, v21);
  if (v22 == OUTLINED_FUNCTION_58_12(v19, v20 | (unint64_t)(v21 << 32)))
  {
LABEL_5:
    OUTLINED_FUNCTION_45_15();
    OUTLINED_FUNCTION_1_3();
  }
  else
  {
    v23 = 0;
    v47 = v21 << 32;
    v48 = v16;
    v49 = v13;
    v24 = (unint64_t)&v16[*(int *)(v13 + 36)];
    v46 = v24;
    v45 = v20;
    v44 = v21;
    v25 = v51;
    while (1)
    {
      v61 = v23;
      v26 = (uint64_t)v48;
      v59 = v20 | v47;
      v60 = v24 & 0xFFFFFF0000000000 | v20 | v47;
      sub_1A5786A60(v19, v60, (uint64_t)v48);
      v64 = v19;
      v65 = v20;
      v66 = v21;
      v28 = type metadata accessor for _RangeSetStorage(0, v5, v12, v27);
      MEMORY[0x1A85B1874](&unk_1A59B82CC, v28);
      sub_1A594BD24();
      v67 = v63;
      v29 = v55;
      OUTLINED_FUNCTION_13_39(v25, v57, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 16));
      v30 = v54;
      v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16);
      v32 = v19;
      v33 = v52;
      v31(v52, v26, v5);
      v34 = v5;
      v35 = v53;
      v31(v53, v46, v34);
      v36 = v26;
      v37 = v61;
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v36, v49);
      v38 = sub_1A594BDA8();
      v39 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v40 = v35;
      v5 = v34;
      v39(v40, v34);
      v39(v33, v34);
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v25, v29);
      v41 = __OFADD__(v37, v38);
      v23 = v37 + v38;
      if (v41)
        break;
      v42 = v67;
      v58 = v58 & 0xFFFFFF0000000000 | v59;
      v43 = OUTLINED_FUNCTION_58_12(v32, v58);
      v19 = v32;
      v20 = v45;
      LOBYTE(v21) = v44;
      v24 = v60;
      if (v42 == v43)
        goto LABEL_5;
    }
    __break(1u);
  }
}

uint64_t sub_1A577E594@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;

  type metadata accessor for DiscontiguousSlice.Index(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  v4 = sub_1A594C354();
  return __swift_storeEnumTagSinglePayload(a3, 1, 1, v4);
}

uint64_t sub_1A577E5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v6 = type metadata accessor for DiscontiguousSlice.Index(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v12 - v9;
  sub_1A577DC94(a1, a2, v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v10, v6);
}

void sub_1A577E690(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  double v7;

  v6 = type metadata accessor for DiscontiguousSlice.Index(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  v7 = MEMORY[0x1E0C80A78](v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(a1 - 8) + 16))(a3, v3, a1, v7);
  sub_1A577DA28();
}

uint64_t sub_1A577E70C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v0);
  MEMORY[0x1A85B1874](&unk_1A59B7A20, v0);
  v7 = sub_1A594C948();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2 + *(int *)(v7 + 36), v4, v3);
}

uint64_t sub_1A577E770(uint64_t a1)
{
  MEMORY[0x1A85B1874](&unk_1A59B7A20, a1);
  return sub_1A594BDE4();
}

void sub_1A577E7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_16_4();
  v2 = v1;
  v3 = MEMORY[0x1E0DEB5C0];
  OUTLINED_FUNCTION_31_21();
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_31_21();
  v5 = OUTLINED_FUNCTION_44_13();
  v6 = sub_1A594BFE8();
  v22 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_97_0();
  v21 = v8;
  OUTLINED_FUNCTION_60_16();
  sub_1A594B9F4();
  v9 = sub_1A594C834();
  v10 = v0 + *(int *)(v2 + 36);
  v11 = *(_QWORD *)v10;
  v12 = *(unsigned int *)(v10 + 8);
  v13 = *(unsigned __int8 *)(v10 + 12);
  v14 = v12 | (unint64_t)(v13 << 32);
  v25 = OUTLINED_FUNCTION_6_1();
  sub_1A54E4334(v11, v12, v13);
  if (v25 != sub_1A5786B4C(v11, v14, v3, v5))
  {
    v20 = v13 << 32;
    do
    {
      v9 = v9 & 0xFFFFFF0000000000 | v12 | v20;
      sub_1A5786A60(v11, v9, v21);
      OUTLINED_FUNCTION_62_12();
      v19 = type metadata accessor for _RangeSetStorage(v15, v16, v17, v18);
      MEMORY[0x1A85B1874](&unk_1A59B82CC, v19);
      sub_1A594BD24();
      sub_1A594BEC8();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      sub_1A594C8C4();
      swift_getAssociatedConformanceWitness();
      sub_1A594C888();
      v14 = v14 & 0xFFFFFF0000000000 | v12 | v20;
    }
    while (v24 != sub_1A5786B4C(v11, v14, v3, v5));
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0, v2);
  sub_1A54E3458(v11, v12, v13);
  OUTLINED_FUNCTION_1_3();
}

void sub_1A577EABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  void (*v32)(_QWORD, _QWORD, _QWORD, double);
  uint64_t v33;
  _QWORD v34[5];
  void (*v35)(char *, uint64_t, uint64_t);
  void (*v36)(_QWORD, _QWORD, _QWORD, double);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_16_4();
  v1 = v0;
  v3 = v2;
  v34[4] = v4;
  v5 = *(_QWORD *)(v0 + 16);
  v34[1] = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_36_2();
  v34[0] = v7;
  v34[3] = v8;
  v9 = *(_QWORD *)(v8 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_66_11();
  v41 = v11;
  v12 = sub_1A594BFE8();
  v42 = *(_QWORD *)(v12 - 8);
  v43 = v12;
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_97_0();
  v38 = AssociatedTypeWitness;
  v39 = v14;
  v46 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_28_2();
  v40 = v16;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_20_21();
  v37 = v18;
  v19 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_28_2();
  v45 = v21;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v34 - v23;
  v26 = type metadata accessor for DiscontiguousSlice.Index(0, v5, v9, v25);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_28_2();
  v44 = v28;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v29);
  v31 = MEMORY[0x1E0C80A78](v30);
  v32 = *(void (**)(_QWORD, _QWORD, _QWORD, double))(v27 + 16);
  v47 = v3;
  v36 = v32;
  v32((char *)v34 - v33, v3, v26, v31);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v35(v24, v48, v1);
  sub_1A577DA28();
}

#error "1A577ECF4: call analysis failed (funcsize=160)"

void sub_1A577EF30()
{
  sub_1A577EABC();
}

void sub_1A577EF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for DiscontiguousSlice.Index(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8), a4);
  MEMORY[0x1E0C80A78](v4);
  sub_1A577EABC();
}

uint64_t sub_1A577EFAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v0, v2, v1);
}

void sub_1A577EFF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  OUTLINED_FUNCTION_16_4();
  v18[0] = v1;
  v3 = v2;
  v5 = v4;
  v6 = *(_QWORD *)(v1 + 8);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = OUTLINED_FUNCTION_60_16();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v18 - v11;
  OUTLINED_FUNCTION_60_16();
  OUTLINED_FUNCTION_51_12();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v18 - v14;
  v17 = type metadata accessor for DiscontiguousSlice.Index(0, v8, v6, v16);
  OUTLINED_FUNCTION_13_39((uint64_t)v15, v3 + *(int *)(v17 + 36), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  OUTLINED_FUNCTION_20_34((uint64_t)v12, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  sub_1A594B334();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v5, v9);
  OUTLINED_FUNCTION_1_3();
}

void sub_1A577F124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_50_11(v4, v5);
  v59 = v6;
  v60 = v7;
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_22_36(v9, v54);
  OUTLINED_FUNCTION_62_12();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v55 = OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_23_31();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v54 - v13;
  v19 = OUTLINED_FUNCTION_29_22(v15, v16, v17, v18);
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_24_28();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_47_13();
  OUTLINED_FUNCTION_43_13();
  swift_getAssociatedConformanceWitness();
  v21 = OUTLINED_FUNCTION_21_36();
  v22 = *(_QWORD *)(v21 - 8);
  v57 = v21;
  v58 = v22;
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_8_53(v27, v28, v29, v30, v31, v32, v33, v34, v54);
  v35 = v2 + *(int *)(v1 + 36);
  MEMORY[0x1A85B1874](&unk_1A59B7B00, v1);
  v36 = OUTLINED_FUNCTION_46_14();
  OUTLINED_FUNCTION_26_22(v36);
  if ((OUTLINED_FUNCTION_11_33() & 1) != 0)
  {
    v37 = v55;
    v38 = (uint64_t)&v14[*(int *)(v55 + 48)];
    v39 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 32);
    OUTLINED_FUNCTION_33_15((uint64_t)v14, v35);
    OUTLINED_FUNCTION_33_15(v38, v0);
    v40 = OUTLINED_FUNCTION_56_14();
    OUTLINED_FUNCTION_2_67(v40, (uint64_t)v14);
    OUTLINED_FUNCTION_2_67(v0, v38);
    OUTLINED_FUNCTION_33_15((uint64_t)v25, v3);
    OUTLINED_FUNCTION_35_18();
    v41 = v3 + *(int *)(v37 + 48);
    OUTLINED_FUNCTION_33_15(v3, (uint64_t)v14);
    OUTLINED_FUNCTION_33_15(v41, v38);
    OUTLINED_FUNCTION_33_15((uint64_t)&v25[*(int *)(v57 + 36)], v41);
    OUTLINED_FUNCTION_63_11();
    v42 = OUTLINED_FUNCTION_53_15();
    OUTLINED_FUNCTION_13_39(v42, (uint64_t)v25, v43);
    OUTLINED_FUNCTION_12_46();
    OUTLINED_FUNCTION_13_39((uint64_t)v25, v39, v44);
    OUTLINED_FUNCTION_42_15();
    OUTLINED_FUNCTION_39_22((uint64_t)v25, v45, v46, v47, v48, v49, v50, v51, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64,
      v65);
    OUTLINED_FUNCTION_7_48(v52, v53);
    OUTLINED_FUNCTION_10_45();
    OUTLINED_FUNCTION_14_39();
    OUTLINED_FUNCTION_17_40();
    OUTLINED_FUNCTION_1_3();
  }
  else
  {
    __break(1u);
  }
}

void sub_1A577F338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t AssociatedConformanceWitness;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t TupleTypeMetadata2;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(_QWORD *, uint64_t);
  uint64_t v115;
  void (*v116)(char *, uint64_t, uint64_t);
  char *v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  OUTLINED_FUNCTION_16_4();
  v110 = v0;
  v111 = v1;
  v3 = v2;
  v5 = v4;
  v107 = v6;
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(_QWORD *)(v2 + 16);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_97_0();
  v106 = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v119 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_97_0();
  v105 = v13;
  MEMORY[0x1A85B1874](&unk_1A59B7A20, v3);
  OUTLINED_FUNCTION_66_11();
  v112 = v3;
  v113 = v14;
  v15 = sub_1A594B190();
  v115 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_97_0();
  v114 = v17;
  MEMORY[0x1A85B1874](MEMORY[0x1E0DEA228], v15);
  OUTLINED_FUNCTION_66_11();
  v123 = v15;
  v102 = sub_1A594C948();
  v109 = *(_QWORD *)(v102 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_28_2();
  v95 = v19;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_20_21();
  v97 = v21;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_28_2();
  v99 = v23;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_20_21();
  v26 = v25;
  v28 = type metadata accessor for DiscontiguousSlice.Index(0, v8, v7, v27);
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_28_2();
  v122 = v30;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v31);
  v117 = (char *)&v91 - v32;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v91 - v34;
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v91 - v37;
  v121 = v7;
  v98 = v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v103 = sub_1A594BFE8();
  v101 = *(_QWORD *)(v103 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_28_2();
  v92 = v41;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_20_21();
  v100 = v43;
  v94 = v29;
  v44 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  v44(v38, v5, v28);
  v45 = (uint64_t)&v38[*(int *)(v28 + 36)];
  MEMORY[0x1A85B1874](&unk_1A59B7B00, v28);
  OUTLINED_FUNCTION_66_11();
  v96 = sub_1A594BFE8();
  v46 = v5 + *(int *)(v96 + 36);
  v116 = v44;
  v44(v35, v46, v28);
  v108 = v28;
  v47 = (uint64_t)&v35[*(int *)(v28 + 36)];
  OUTLINED_FUNCTION_40_21();
  if ((sub_1A594B298() & 1) != 0)
  {
    v91 = v5;
    v118 = v38;
    v48 = TupleTypeMetadata2;
    v49 = v26 + *(int *)(TupleTypeMetadata2 + 48);
    v120 = AssociatedConformanceWitness;
    v50 = v119;
    OUTLINED_FUNCTION_16_36(v26, v45);
    OUTLINED_FUNCTION_16_36(v49, v47);
    v51 = v99;
    v52 = v99 + *(int *)(v48 + 48);
    v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
    v53(v99, v26, AssociatedTypeWitness);
    v104 = v53;
    v53(v52, v49, AssociatedTypeWitness);
    v54 = v92;
    OUTLINED_FUNCTION_16_36(v92, v51);
    v55 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    v55(v52, AssociatedTypeWitness);
    v56 = v51 + *(int *)(v48 + 48);
    OUTLINED_FUNCTION_16_36(v51, v26);
    OUTLINED_FUNCTION_16_36(v56, v49);
    OUTLINED_FUNCTION_16_36(v54 + *(int *)(v103 + 36), v56);
    v55(v51, AssociatedTypeWitness);
    v57 = v101;
    v58 = v100;
    OUTLINED_FUNCTION_85_0(v100, v54, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 32));
    v59 = v110 + *(int *)(v112 + 36);
    v60 = *(_QWORD *)v59;
    v61 = *(unsigned int *)(v59 + 8);
    v62 = *(unsigned __int8 *)(v59 + 12);
    OUTLINED_FUNCTION_85_0(v54, v58, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 16));
    sub_1A54E4334(v60, v61, v62);
    v63 = v120;
    RangeSet.init(_:)(v54, AssociatedTypeWitness, v120, v64, v65, v66, v67, v68, v91, v92, TupleTypeMetadata2, v94, v95, v96, v97, v98, v99, v100, v101,
      v102);
    v70 = v69;
    v72 = v71;
    v73 = HIDWORD(v71);
    v119 = RangeSet.intersection(_:)(v69, v71 & 0xFFFFFFFFFFLL, v60, v61 | (v62 << 32), AssociatedTypeWitness, v63);
    v99 = v74;
    sub_1A54E3458(v70, v72, v73);
    v75 = (uint64_t)v114;
    sub_1A594BE98();
    v76 = v115;
    v77 = v95;
    v78 = v123;
    OUTLINED_FUNCTION_85_0(v95, v75, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 16));
    v79 = v118;
    MEMORY[0x1A85AD5E4](v78);
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v78);
    v80 = v102;
    v81 = v77 + *(int *)(v102 + 36);
    v82 = v94;
    v83 = v108;
    v115 = *(_QWORD *)(v94 + 32);
    ((void (*)(uint64_t, _QWORD *, uint64_t))v115)(v81, v79, v108);
    v84 = v109;
    v85 = v97;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 32))(v97, v77, v80);
    v86 = (_QWORD *)(v85 + *(int *)(v80 + 36));
    sub_1A594B178();
    OUTLINED_FUNCTION_65_9(v86, v79);
    LOBYTE(v80) = v87;
    v114 = *(void (**)(_QWORD *, uint64_t))(v82 + 8);
    v114(v79, v83);
    v88 = v83;
    v89 = v122;
    if ((v80 & 1) == 0)
    {
      v113 = v99 & 0xFFFFFFFFFFLL;
      v90 = v117;
      v116(v117, (uint64_t)v86, v88);
      sub_1A594B184();
      ((void (*)(uint64_t, char *, uint64_t))v115)(v89, v90, v88);
      RangeSet.contains(_:)();
    }
    sub_1A54E3458(v119, v99, SBYTE4(v99));
    (*(void (**)(uint64_t))(*(_QWORD *)(v96 - 8) + 8))(v91);
    (*(void (**)(uint64_t))(*(_QWORD *)(v112 - 8) + 8))(v111);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v85, v102);
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v100, v103);
    OUTLINED_FUNCTION_1_3();
  }
  else
  {
    __break(1u);
  }
}

void sub_1A577FAA4()
{
  sub_1A577EFF4();
}

void (*sub_1A577FAAC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  uint64_t v20;

  v9 = malloc(0x58uLL);
  *a1 = v9;
  *v9 = v4;
  v9[1] = a3;
  v10 = *(_QWORD *)(a4 - 8);
  v9[2] = v10;
  v11 = *(_QWORD *)(v10 + 8);
  v12 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[3] = AssociatedTypeWitness;
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[4] = v14;
  v15 = *(_QWORD *)(v14 + 64);
  v9[5] = malloc(v15);
  v9[6] = malloc(v15);
  v17 = type metadata accessor for DiscontiguousSlice.Index(0, v12, v11, v16);
  v9[7] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v9[8] = v18;
  v19 = *(_QWORD *)(v18 + 64);
  v9[9] = malloc(v19);
  v9[10] = malloc(v19);
  (*(void (**)(void))(v18 + 16))();
  sub_1A577D6D8(a2, a3, v10, v20);
  return sub_1A577FBD0;
}

void sub_1A577FBD0(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 72);
  v4 = *(void **)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    v5 = v2[8];
    v7 = (void *)v2[5];
    v6 = (void *)v2[6];
    v8 = v2[3];
    v9 = v2[4];
    v12 = v2[7];
    v10 = OUTLINED_FUNCTION_67_12();
    v11(v10);
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v3, v4, v12);
    sub_1A577EFF4();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    v7 = (void *)v2[5];
    v6 = (void *)v2[6];
    OUTLINED_FUNCTION_54_8();
    sub_1A577EFF4();
  }
  free(v4);
  free(v3);
  free(v6);
  free(v7);
  OUTLINED_FUNCTION_6_59(v2);
}

void sub_1A577FC98()
{
  sub_1A577F338();
}

void (*sub_1A577FCA0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;

  v8 = malloc(0x50uLL);
  *a1 = v8;
  *v8 = v4;
  v8[1] = a3;
  v9 = *(_QWORD *)(a4 - 8);
  v10 = *(_QWORD *)(a3 - 8);
  v8[2] = v9;
  v8[3] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v8[4] = malloc(v11);
  v8[5] = malloc(v11);
  v13 = type metadata accessor for DiscontiguousSlice.Index(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(v9 + 8), v12);
  MEMORY[0x1A85B1874](&unk_1A59B7B00, v13);
  v14 = sub_1A594BFE8();
  v8[6] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[7] = v15;
  v16 = *(_QWORD *)(v15 + 64);
  v8[8] = malloc(v16);
  v8[9] = malloc(v16);
  (*(void (**)(void))(v15 + 16))();
  sub_1A577F124();
  return sub_1A577FDB8;
}

void sub_1A577FDB8(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 64);
  v4 = *(void **)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    v5 = v2[7];
    v7 = (void *)v2[4];
    v6 = (void *)v2[5];
    v8 = v2[3];
    v9 = v2[1];
    v10 = OUTLINED_FUNCTION_67_12();
    v11(v10);
    OUTLINED_FUNCTION_13_39((uint64_t)v3, (uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    sub_1A577F338();
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v9);
  }
  else
  {
    v7 = (void *)v2[4];
    v6 = (void *)v2[5];
    OUTLINED_FUNCTION_54_8();
    sub_1A577F338();
  }
  free(v4);
  free(v3);
  free(v6);
  free(v7);
  OUTLINED_FUNCTION_6_59(v2);
}

uint64_t sub_1A577FE78()
{
  return sub_1A594B2EC();
}

uint64_t sub_1A577FE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(a3 - 8);
  v5 = MEMORY[0x1A85B1874](&unk_1A59B794C, a2, &v6);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEA210], a1, &v5);
}

uint64_t sub_1A577FEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a3 - 8);
  return MEMORY[0x1A85B1874](&unk_1A59B794C, a1, &v4);
}

void sub_1A577FF18()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A577FF28()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A577FF38()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t type metadata accessor for DiscontiguousSlice.Index(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DiscontiguousSlice.Index);
}

uint64_t type metadata accessor for DiscontiguousSlice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DiscontiguousSlice);
}

uint64_t sub_1A577FF60()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A577FFEC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 8) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & ~v6, ((unint64_t)a2 + v6 + 8) & ~v6, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_1A57800B0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
}

_QWORD *sub_1A5780108(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_QWORD *sub_1A5780178(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_QWORD *sub_1A57801E8(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_QWORD *sub_1A5780258(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1A57802C8(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (a2 <= v6)
    goto LABEL_18;
  v8 = ((v7 + 8) & ~v7) + *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((a2 - v6 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload((a1 + v7 + 8) & ~v7, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if ((_DWORD)v8)
  {
    if (v8 > 3)
      LODWORD(v8) = 4;
    __asm { BR              X11 }
  }
  return (v6 + v12 + 1);
}

void sub_1A5780420(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 <= v7)
  {
    v10 = 0u;
  }
  else if (v8 <= 3)
  {
    v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v12))
    {
      v10 = 4u;
    }
    else if (v12 >= 0x100)
    {
      v10 = 2;
    }
    else
    {
      v10 = v12 > 1;
    }
  }
  else
  {
    v10 = 1u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_1A5780608()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A578067C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int v13;
  char v14;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 13 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)v11;
    v13 = *(_DWORD *)(v11 + 8);
    v14 = *(_BYTE *)(v11 + 12);
    sub_1A54E4334(*(_QWORD *)v11, v13, v14);
    *(_QWORD *)v10 = v12;
    *(_DWORD *)(v10 + 8) = v13;
    *(_BYTE *)(v10 + 12) = v14;
  }
  return v4;
}

uint64_t sub_1A5780754(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A54E3458(*(_QWORD *)v4, *(unsigned int *)(v4 + 8), *(_BYTE *)(v4 + 12));
}

uint64_t sub_1A578079C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)v8;
  LODWORD(v5) = *(_DWORD *)(v8 + 8);
  v10 = *(_BYTE *)(v8 + 12);
  sub_1A54E4334(*(_QWORD *)v8, v5, v10);
  *(_QWORD *)v7 = v9;
  *(_DWORD *)(v7 + 8) = v5;
  *(_BYTE *)(v7 + 12) = v10;
  return a1;
}

uint64_t sub_1A5780820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)v8;
  LODWORD(v5) = *(_DWORD *)(v8 + 8);
  v10 = *(_BYTE *)(v8 + 12);
  sub_1A54E4334(*(_QWORD *)v8, v5, v10);
  v11 = *(_QWORD *)v7;
  v12 = *(unsigned int *)(v7 + 8);
  *(_QWORD *)v7 = v9;
  *(_DWORD *)(v7 + 8) = v5;
  v13 = *(_BYTE *)(v7 + 12);
  *(_BYTE *)(v7 + 12) = v10;
  sub_1A54E3458(v11, v12, v13);
  return a1;
}

uint64_t sub_1A57808B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *(_QWORD *)((char *)v8 + 5);
  *v7 = *v8;
  *(_QWORD *)((char *)v7 + 5) = v9;
  return a1;
}

uint64_t sub_1A5780918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)v8;
  v10 = *(_DWORD *)(v8 + 8);
  LOBYTE(v8) = *(_BYTE *)(v8 + 12);
  v11 = *(_QWORD *)v7;
  v12 = *(unsigned int *)(v7 + 8);
  *(_QWORD *)v7 = v9;
  *(_DWORD *)(v7 + 8) = v10;
  v13 = *(_BYTE *)(v7 + 12);
  *(_BYTE *)(v7 + 12) = v8;
  sub_1A54E3458(v11, v12, v13);
  return a1;
}

uint64_t sub_1A5780994(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v10;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0xFD)
    v7 = 253;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 < a2 && *((_BYTE *)a1 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 13))
    return v7 + *a1 + 1;
  if (v6 >= 0xFD)
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v6, v4);
  v10 = *(unsigned __int8 *)((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) + 0xC);
  if (v10 > 2)
    return (v10 ^ 0xFF) + 1;
  else
    return 0;
}

void sub_1A5780A18(_BYTE *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  size_t v11;
  int v12;
  unint64_t v13;

  v6 = *(_QWORD *)(a4 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0xFD)
    v9 = 253;
  else
    v9 = *(_DWORD *)(v7 + 84);
  v10 = *(_QWORD *)(v7 + 64);
  v11 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 13;
  if (v9 >= a2)
  {
    if (v9 < a3)
      a1[v11] = 0;
    if ((_DWORD)a2)
    {
      if (v8 < 0xFD)
      {
        v13 = (unint64_t)&a1[v10 + 7] & 0xFFFFFFFFFFFFFFF8;
        if (a2 > 0xFD)
        {
          *(_BYTE *)(v13 + 12) = 0;
          *(_DWORD *)(v13 + 8) = 0;
          *(_QWORD *)v13 = (a2 - 254);
        }
        else
        {
          *(_BYTE *)(v13 + 12) = -(char)a2;
        }
      }
      else
      {
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v8, v6);
      }
    }
  }
  else
  {
    v12 = ~v9 + a2;
    bzero(a1, v11);
    *(_DWORD *)a1 = v12;
    if (v9 < a3)
      a1[v11] = 1;
  }
}

void OUTLINED_FUNCTION_6_59(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_7_48(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 136) = HIDWORD(a2);
  return RangeSet.intersection(_:)(a1, a2 & 0xFFFFFFFFFFLL, v2, v4 | (v5 << 32), v3, v6);
}

uint64_t OUTLINED_FUNCTION_8_53(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v13 - 160) = (char *)&a9 - v9;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 16))(v12, *(_QWORD *)(v13 - 96), v11);
}

uint64_t OUTLINED_FUNCTION_10_45()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1A54E3458(v1, v2, *(_QWORD *)(v5 - 136));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v0, v3);
}

uint64_t OUTLINED_FUNCTION_11_33()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  return sub_1A594B298();
}

uint64_t OUTLINED_FUNCTION_13_39@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_14_39()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 - 128) + 16))(*(_QWORD *)(v0 - 120), *(_QWORD *)(v0 - 88), *(_QWORD *)(v0 - 176));
}

uint64_t OUTLINED_FUNCTION_15_44()
{
  return sub_1A594BED4();
}

uint64_t OUTLINED_FUNCTION_16_36(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void OUTLINED_FUNCTION_17_40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1A577D668(v3, v0, v1 & 0xFFFFFFFFFFLL, v2, *(_QWORD *)(v4 - 112), *(_QWORD *)(v4 - 104));
}

uint64_t OUTLINED_FUNCTION_19_36(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_20_34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_21_36()
{
  return sub_1A594BFE8();
}

void OUTLINED_FUNCTION_22_36(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_26_22(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(v1, v3 + *(int *)(a1 + 36), v4);
}

uint64_t OUTLINED_FUNCTION_28_23(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_29_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for DiscontiguousSlice.Index(0, v4, v5, a4);
}

uint64_t OUTLINED_FUNCTION_30_21()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_31_21()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_32_23@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void OUTLINED_FUNCTION_34_26()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1A577D7CC(v2, v1, v0, v3);
}

uint64_t OUTLINED_FUNCTION_35_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void OUTLINED_FUNCTION_39_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  RangeSet.init(_:)(a1, v20, *(_QWORD *)(v21 - 96), a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t OUTLINED_FUNCTION_41_14()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_42_15()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  return sub_1A54E4334(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_43_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  *(_QWORD *)(v2 - 112) = v1;
  result = v1;
  *(_QWORD *)(v2 - 176) = v0;
  return result;
}

uint64_t OUTLINED_FUNCTION_44_13()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_45_15()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  return sub_1A54E3458(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_46_14()
{
  return sub_1A594BFE8();
}

uint64_t OUTLINED_FUNCTION_49_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t (*v9)(uint64_t *, _QWORD);

  return v9(&a9, 0);
}

uint64_t OUTLINED_FUNCTION_50_11@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 96) = result;
  *(_QWORD *)(v3 - 88) = v2;
  *(_QWORD *)(v3 - 104) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_52_14()
{
  return sub_1A594B1FC();
}

uint64_t OUTLINED_FUNCTION_53_15()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 160);
}

uint64_t OUTLINED_FUNCTION_54_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_56_14()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_58_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_1A5786B4C(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_59_14()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_60_16()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_61_14()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_63_11()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t OUTLINED_FUNCTION_64_11(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 224))(a1, v1);
}

void OUTLINED_FUNCTION_65_9(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_1A577D7CC(a1, a2, v2, *(_QWORD *)(v3 - 112));
}

uint64_t OUTLINED_FUNCTION_66_11()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_67_12()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1A5780EF4()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char *v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v3 = &v2;
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A5780F7C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A578103C + 4 * byte_1A59B7C20[(v8 - 1)]))();
}

void sub_1A5781088(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for Pair(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Pair);
}

uint64_t sub_1A578124C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32);
  v9(a4, a1);
  v7 = a4 + *(int *)(OUTLINED_FUNCTION_2_79() + 48);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v7, a2, a3);
}

uint64_t sub_1A57812BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  _QWORD v21[2];
  uint64_t v22;
  unint64_t v23;

  v6 = v3;
  v9 = *(_QWORD *)(a2 + 16);
  v10 = OUTLINED_FUNCTION_2_79();
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v21 - v12;
  if (a1 == 1)
  {
    v14 = *(int *)(v11 + 48);
    v15 = &v13[v14];
    v16 = v6 + v14;
    OUTLINED_FUNCTION_0_108();
    v5(v15, v16, v9);
LABEL_5:
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(a3, v15, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v13, v9);
  }
  if (!a1)
  {
    v17 = *(int *)(v11 + 48);
    v18 = &v13[v17];
    v19 = v6 + v17;
    OUTLINED_FUNCTION_0_108();
    v5(v18, v19, v9);
    v15 = v13;
    v13 = v18;
    goto LABEL_5;
  }
  v22 = 0;
  v23 = 0xE000000000000000;
  sub_1A594C720();
  swift_bridgeObjectRelease();
  v22 = 0x27207865646E49;
  v23 = 0xE700000000000000;
  v21[1] = a1;
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  result = sub_1A594C9C0();
  __break(1u);
  return result;
}

uint64_t sub_1A5781478()
{
  MEMORY[0x1A85B1874](&unk_1A59B7D18);
  return sub_1A594BD30();
}

_QWORD *sub_1A57814C8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5781770(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB508]);
}

uint64_t sub_1A57814D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85B1874](&unk_1A59B7D18, a3);
  return sub_1A594BD3C();
}

uint64_t sub_1A5781538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1A85B1874](&unk_1A59B7D18, a4);
  return sub_1A594BD18();
}

uint64_t sub_1A578159C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85B1874](&unk_1A59B7D18, a3);
  return sub_1A594BD54();
}

void sub_1A57815F0(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void (*sub_1A57815FC(_QWORD *a1, uint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_1A5781658(v6, *a2, a3);
  return sub_1A5673EB0;
}

void (*sub_1A5781658(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  *a1 = v6;
  a1[1] = v7;
  v8 = malloc(*(_QWORD *)(v7 + 64));
  a1[2] = v8;
  sub_1A57812BC(a2, a3, (uint64_t)v8);
  return sub_1A5673F48;
}

uint64_t sub_1A57816C4(uint64_t a1)
{
  MEMORY[0x1A85B1874](&unk_1A59B7D18, a1);
  return sub_1A594BD48();
}

uint64_t sub_1A5781714()
{
  MEMORY[0x1A85B1874](&unk_1A59B7D18);
  return sub_1A594BD24();
}

_QWORD *sub_1A5781764(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5781770(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB500]);
}

_QWORD *sub_1A5781770(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  v7 = MEMORY[0x1A85B1874](&unk_1A59B7D18);
  result = a4(&v9, a1, a2, v7, MEMORY[0x1E0DEB458]);
  *a1 = v9;
  return result;
}

uint64_t sub_1A57817D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = *(_QWORD *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v2, a1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, a1);
  MEMORY[0x1A85B1874](&unk_1A59B7D68, a1);
  result = sub_1A594C948();
  *(_QWORD *)(a2 + *(int *)(result + 36)) = 0;
  return result;
}

uint64_t sub_1A578184C(uint64_t a1)
{
  MEMORY[0x1A85B1874](&unk_1A59B7D68, a1);
  return sub_1A594BDE4();
}

uint64_t sub_1A5781880(uint64_t a1)
{
  MEMORY[0x1A85B1874](&unk_1A59B7D68, a1);
  return sub_1A594BE14();
}

void sub_1A57818B4()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A57818C4(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85B1874](&unk_1A59B7CB8);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE28], a1, &v3);
}

void sub_1A578190C()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A578191C(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85B1874](&unk_1A59B7D18);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE40], a1, &v3);
}

void sub_1A5781964()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t OUTLINED_FUNCTION_0_108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_2_79()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t sub_1A57819AC@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  void (*v20)(char *, _QWORD);
  char *v21;
  char v22;
  char v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char v48[32];
  uint64_t AssociatedTypeWitness;

  v6 = v5;
  v42 = a1;
  v43 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)&v36 - v10;
  v12 = swift_getAssociatedTypeWitness();
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v37 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v36 - v15;
  v17 = sub_1A594BD78();
  v46 = a4;
  v47 = a5;
  v45 = a3;
  result = sub_1A594BD60();
  if (v17 >= 1)
  {
    v39 = v11;
    while (1)
    {
      v19 = (unint64_t)v17 >> 1;
      sub_1A594BD90();
      v20 = (void (*)(char *, _QWORD))sub_1A594BED4();
      v21 = v39;
      (*(void (**)(char *))(v44 + 16))(v39);
      v20(v48, 0);
      v22 = v42(v21);
      if (v6)
        break;
      v23 = v22;
      OUTLINED_FUNCTION_0_109();
      if ((v23 & 1) != 0)
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v16, v41);
        v17 = (unint64_t)v17 >> 1;
      }
      else
      {
        v24 = v37;
        sub_1A594BD84();
        v25 = v40;
        v26 = *(void (**)(char *, uint64_t))(v40 + 8);
        v27 = v16;
        v38 = v17;
        v28 = v16;
        v29 = v41;
        v26(v27, v41);
        v30 = v47;
        v26(v47, v29);
        v31 = v30;
        v6 = 0;
        v32 = v29;
        v16 = v28;
        v33 = v38;
        result = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v31, v24, v32);
        v17 = v33 + ~v19;
      }
      if (v17 <= 0)
        return result;
    }
    OUTLINED_FUNCTION_0_109();
    v34 = v41;
    v35 = *(void (**)(char *, uint64_t))(v40 + 8);
    v35(v16, v41);
    return ((uint64_t (*)(char *, uint64_t))v35)(v47, v34);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_109()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 72));
}

uint64_t sub_1A5781C48(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  char *v25;
  char *v26;
  void (*v27)(char *, _QWORD);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v49[40];
  uint64_t v50;

  v37 = a5;
  v38 = a8;
  v44 = a1;
  v45 = a2;
  v36 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v46 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v41 = (char *)&v32 - v13;
  MEMORY[0x1E0C80A78](v14);
  v40 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_getAssociatedTypeWitness();
  v39 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v35 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v32 - v19;
  v42 = v8;
  v21 = a6;
  v22 = sub_1A594BD78();
  if (!v22)
    return sub_1A594B9F4();
  v23 = v22;
  v33 = v16;
  v50 = sub_1A594C8B8();
  v43 = sub_1A594C8C4();
  sub_1A594C840();
  v34 = v20;
  result = sub_1A594BD60();
  if (v23 < 0)
  {
    __break(1u);
  }
  else
  {
    v47 = v21;
    v25 = v41;
    v26 = v34;
    while (1)
    {
      v27 = (void (*)(char *, _QWORD))sub_1A594BED4();
      (*(void (**)(char *))(v12 + 16))(v25);
      v27(v49, 0);
      v28 = v48;
      v44(v25, v46);
      if (v28)
        break;
      v48 = 0;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v25, AssociatedTypeWitness);
      sub_1A594C894();
      sub_1A594BDC0();
      if (!--v23)
      {
        v29 = v39;
        v30 = v35;
        v31 = v33;
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v26, v33);
        sub_1A594C66C();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
        return v50;
      }
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v25, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v33);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(v38, v46, v37);
  }
  return result;
}

void RangeSet.insert(contentsOf:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[24];
  uint64_t *v39;
  uint64_t v40;
  int v41;
  char v42;

  OUTLINED_FUNCTION_16_4();
  v39 = v0;
  v3 = v2;
  v5 = v4;
  v6 = *(_QWORD *)(v2 + 16);
  OUTLINED_FUNCTION_35_19();
  v38[12] = OUTLINED_FUNCTION_13_31();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_28_2();
  v38[13] = v8;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_20_21();
  v38[11] = v10;
  v38[19] = v3;
  v11 = *(_QWORD *)(v3 + 24);
  v12 = sub_1A594BFE8();
  v13 = sub_1A594C804();
  v14 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_97_0();
  v38[14] = v16;
  v38[21] = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v17);
  v38[10] = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_64_12();
  sub_1A594C354();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_28_2();
  v38[18] = v21;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v22);
  v38[20] = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_28_2();
  v38[15] = v24;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v25);
  v38[16] = (char *)v38 - v26;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v27);
  v38[17] = (char *)v38 - v28;
  OUTLINED_FUNCTION_9_50();
  v30 = MEMORY[0x1E0C80A78](v29);
  v32 = (char *)v38 - v31;
  MEMORY[0x1E0C80A78](v30);
  v38[22] = v12;
  v38[23] = v5;
  if ((sub_1A594BFD0() & 1) == 0)
  {
    v38[9] = v32;
    v38[5] = v14;
    v38[6] = v13;
    v38[7] = v11;
    v38[8] = v1;
    v33 = *((_DWORD *)v39 + 2);
    v34 = *((_BYTE *)v39 + 12);
    v40 = *v39;
    v41 = v33;
    v42 = v34;
    v35 = OUTLINED_FUNCTION_35_19();
    type metadata accessor for _RangeSetStorage(v35, v36, v11, v37);
    OUTLINED_FUNCTION_27_26();
  }
  OUTLINED_FUNCTION_1_3();
}

uint64_t RangeSet.init()()
{
  return OUTLINED_FUNCTION_72_3();
}

void RangeSet.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(void);

  OUTLINED_FUNCTION_16_4();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v24 = sub_1A594BFE8();
  v25 = *(_QWORD *)(v24 - 8);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&a9 - v27;
  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_72_3();
  OUTLINED_FUNCTION_61_15();
  if ((sub_1A594BFD0() & 1) == 0)
  {
    OUTLINED_FUNCTION_84_4();
    OUTLINED_FUNCTION_62_13();
    v29();
    sub_1A5786B50((uint64_t)v28);
    OUTLINED_FUNCTION_61_15();
  }
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  OUTLINED_FUNCTION_1_3();
}

uint64_t static RangeSet.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A578709C(a1, a2 & 0xFFFFFFFFFFLL, a3, a4 & 0xFFFFFFFFFFLL);
}

uint64_t RangeSet.ranges.getter(uint64_t a1, uint64_t a2)
{
  sub_1A54E4334(a1, a2, SBYTE4(a2));
  return a1;
}

uint64_t RangeSet.Ranges.startIndex.getter()
{
  return OUTLINED_FUNCTION_6_1();
}

uint64_t RangeSet.Ranges.endIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5786B4C(a1, a2 & 0xFFFFFFFFFFLL, a3, a4);
}

uint64_t RangeSet.Ranges.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1A5786A60(a1, a2 & 0xFFFFFFFFFFLL, a3);
}

void RangeSet.isEmpty.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_75_8();
  type metadata accessor for _RangeSetStorage(v0, v1, v2, v3);
  OUTLINED_FUNCTION_16_6();
}

uint64_t sub_1A57827C8()
{
  return sub_1A594BE5C() & 1;
}

void RangeSet.contains(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_16_4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = HIDWORD(v4);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_68_6();
  sub_1A54E4334(v7, v5, v8);
  type metadata accessor for _RangeSetStorage(0, v3, v1, v11);
  OUTLINED_FUNCTION_45_0();
}

uint64_t sub_1A57828B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  sub_1A57819AC((uint64_t (*)(char *))sub_1A57858A0, v10 - 160, v2, a1, (char *)(v10 - 88));
  sub_1A54E3458(*(_QWORD *)(v10 - 104), *(unsigned int *)(v10 - 96), *(_BYTE *)(v10 - 92));
  v11 = *(_QWORD *)(v10 - 88);
  OUTLINED_FUNCTION_62_13();
  if (v11 == sub_1A5786B4C(v12, v13, v14, v3))
  {
    v15 = 0;
  }
  else
  {
    sub_1A5786A60(v6, v9 & 0xFFFFFFFFFFLL, v8);
    v16 = *(_QWORD *)(v10 - 168);
    OUTLINED_FUNCTION_108_5(v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v7);
    v15 = sub_1A594B298();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v5, v1);
  }
  return v15 & 1;
}

void RangeSet.union(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for RangeSet(0, a5, a6, a4);
  v6 = RangeSet.formUnion(_:)();
  OUTLINED_FUNCTION_55_9(v6, v7, v8, v9, v10, v11, v12, v13, a3);
  OUTLINED_FUNCTION_16_27();
}

#error "1A5783194: call analysis failed (funcsize=560)"

uint64_t RangeSet.symmetricDifference(_:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v24;

  OUTLINED_FUNCTION_12_47();
  v3 = HIDWORD(v2);
  OUTLINED_FUNCTION_78_11(v4, v2, v5, v6);
  sub_1A54E4334(v1, v0, v3);
  OUTLINED_FUNCTION_30_22();
  RangeSet.union(_:)(v7, v8, v9, v10, v11, v12);
  v14 = v13;
  v16 = v15;
  v24 = HIDWORD(v15);
  v17 = OUTLINED_FUNCTION_50_12(v1, v0 & 0xFFFFFFFFFFLL);
  v19 = v18;
  v20 = HIDWORD(v18);
  sub_1A54E3458(v1, v0, v3);
  RangeSet.subtracting(_:)(v17, v19 & 0xFFFFFFFFFFLL, v14, v16 & 0xFFFFFFFFFFLL);
  v22 = v21;
  sub_1A54E3458(v17, v19, v20);
  sub_1A54E3458(v14, v16, v24);
  return v22;
}

void RangeSet.remove(contentsOf:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  int v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  _QWORD v64[9];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  char v89;

  OUTLINED_FUNCTION_16_4();
  v2 = v1;
  v4 = v3;
  v6 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v5 + 24);
  v8 = sub_1A594BFE8();
  v9 = OUTLINED_FUNCTION_35_19();
  v65 = type metadata accessor for Pair(v9, v10, v11, v12);
  v64[8] = *(_QWORD *)(v65 - 8);
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_97_0();
  v64[7] = v14;
  OUTLINED_FUNCTION_35_19();
  v15 = sub_1A594C804();
  v68 = *(_QWORD *)(v15 - 8);
  v69 = v15;
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_97_0();
  v67 = v17;
  v73 = OUTLINED_FUNCTION_13_31();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v18);
  v72 = (char *)v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_20_21();
  v71 = v21;
  OUTLINED_FUNCTION_12_6();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_28_2();
  v78 = v23;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_65_10();
  v80 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_28_2();
  v76 = v26;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_19_37();
  v77 = v28;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_19_37();
  v81 = v30;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v64 - v32;
  v85 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_46_8();
  v37 = v35 - v36;
  MEMORY[0x1E0C80A78](v38);
  v70 = (char *)v64 - v39;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v40);
  v74 = (char *)v64 - v41;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_19_37();
  v75 = v43;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_19_37();
  v83 = v45;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)v64 - v47;
  v86 = v4;
  v49 = sub_1A594BFD0();
  v84 = v2;
  v82 = v7;
  if ((v49 & 1) != 0)
  {
    v51 = v6;
    v52 = 1;
  }
  else
  {
    v53 = *((_DWORD *)v2 + 2);
    v54 = *((_BYTE *)v2 + 12);
    v87 = *v2;
    v88 = v53;
    v89 = v54;
    v51 = v6;
    v55 = type metadata accessor for _RangeSetStorage(0, v6, v7, v50);
    MEMORY[0x1A85B1874](&unk_1A59B8434, v55);
    v52 = sub_1A594BE5C();
  }
  v56 = *(_QWORD *)(v85 + 16);
  OUTLINED_FUNCTION_109_6((uint64_t)v48);
  if ((v52 & 1) != 0)
  {
    OUTLINED_FUNCTION_47_14((uint64_t)v48);
    v57 = v83;
    OUTLINED_FUNCTION_109_6(v83);
  }
  else
  {
    v66 = v56;
    v64[4] = v37;
    v79 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
    v79(v33, v48, v51);
    OUTLINED_FUNCTION_28_24();
    v59 = type metadata accessor for _RangeSetStorage(0, v51, v82, v58);
    MEMORY[0x1A85B1874](&unk_1A59B83D4, v59);
    v64[6] = v59;
    sub_1A594B208();
    OUTLINED_FUNCTION_42_0(v0, 1, v8);
    if (v60)
    {
      __break(1u);
      JUMPOUT(0x1A5783F58);
    }
    v61 = v81;
    OUTLINED_FUNCTION_89_6(v81, v0 + *(int *)(v8 + 36));
    v62 = *(_QWORD *)(v85 + 8);
    OUTLINED_FUNCTION_47_14(v0);
    OUTLINED_FUNCTION_94_6();
    v63 = sub_1A594B28C();
    OUTLINED_FUNCTION_11_34(v61);
    OUTLINED_FUNCTION_11_34((uint64_t)v33);
    OUTLINED_FUNCTION_47_14((uint64_t)v48);
    v57 = v83;
    OUTLINED_FUNCTION_41_15();
    if ((v63 & 1) == 0)
    {
      v64[5] = v62;
      v79(v77, (char *)(v57 + *(int *)(v8 + 36)), v51);
      OUTLINED_FUNCTION_28_24();
      OUTLINED_FUNCTION_14_40();
    }
  }
  OUTLINED_FUNCTION_47_14(v57);
  OUTLINED_FUNCTION_1_3();
}

uint64_t RangeSet.formUnion(_:)()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_16_4();
  v1 = v0;
  v3 = v2;
  v9 = HIDWORD(v0);
  OUTLINED_FUNCTION_39_23();
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_97_0();
  v8 = v5;
  v10 = OUTLINED_FUNCTION_98_5();
  if (v10 != OUTLINED_FUNCTION_24_29(v3, v1 & 0xFFFFFFFFFFLL))
  {
    OUTLINED_FUNCTION_86_5(v3, v1 & 0xFFFFFFFFFFLL, v8);
    OUTLINED_FUNCTION_38_16(v7, v9);
    OUTLINED_FUNCTION_45_0();
  }
  return OUTLINED_FUNCTION_16_37(v3, v1, v9);
}

void sub_1A578403C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_51_13();
  v3 = *(_QWORD *)(v2 - 168);
  sub_1A594BD24();
  *(_QWORD *)(v2 - 88) = *(_QWORD *)(v2 - 112);
  RangeSet.insert(contentsOf:)();
  OUTLINED_FUNCTION_93_4(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v4 = *(_QWORD *)(v2 - 88);
  if (v4 != OUTLINED_FUNCTION_24_29(v1, v0))
    JUMPOUT(0x1A5784004);
  sub_1A54E3458(v1, *(_QWORD *)(v2 - 128), *(_QWORD *)(v2 - 120));
  OUTLINED_FUNCTION_1_3();
}

uint64_t RangeSet.formIntersection(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57840B8(a1, a2, a3, RangeSet.intersection(_:));
}

uint64_t RangeSet.formSymmetricDifference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57840B8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD))RangeSet.symmetricDifference(_:));
}

uint64_t sub_1A57840B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t result;
  int v6;
  char v7;

  result = a4(a1, a2 & 0xFFFFFFFFFFLL, *(_QWORD *)v4, *(unsigned int *)(v4 + 8) | ((unint64_t)*(unsigned __int8 *)(v4 + 12) << 32), *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  *(_QWORD *)v4 = result;
  *(_DWORD *)(v4 + 8) = v6;
  *(_BYTE *)(v4 + 12) = v7;
  return result;
}

void RangeSet.subtracting(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1A54E4334(a3, a4, SBYTE4(a4));
  OUTLINED_FUNCTION_62_13();
  type metadata accessor for RangeSet(v4, v5, v6, v7);
  v8 = RangeSet.subtract(_:)();
  OUTLINED_FUNCTION_55_9(v8, v9, v10, v11, v12, v13, v14, v15, a3);
  OUTLINED_FUNCTION_16_27();
}

uint64_t RangeSet.isSubset(of:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_12_47();
  OUTLINED_FUNCTION_78_11(v2, v3, v4, v5);
  OUTLINED_FUNCTION_50_12(v1, v0 & 0xFFFFFFFFFFLL);
  OUTLINED_FUNCTION_61_15();
  OUTLINED_FUNCTION_30_22();
  v10 = static RangeSet.__derived_struct_equals(_:_:)(v6, v7, v8, v9);
  OUTLINED_FUNCTION_84_4();
  return v10 & 1;
}

uint64_t RangeSet.isSuperset(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5784350(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))RangeSet.isSubset(of:));
}

uint64_t RangeSet.subtract(_:)()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_16_4();
  v1 = v0;
  v3 = v2;
  v4 = HIDWORD(v0);
  OUTLINED_FUNCTION_39_23();
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_97_0();
  v9 = v6;
  v10 = OUTLINED_FUNCTION_98_5();
  sub_1A54E4334(v3, v1, v4);
  if (v10 != OUTLINED_FUNCTION_24_29(v3, v1 & 0xFFFFFFFFFFLL))
  {
    OUTLINED_FUNCTION_86_5(v3, v1 & 0xFFFFFFFFFFLL, v9);
    OUTLINED_FUNCTION_38_16(v8, v4);
    OUTLINED_FUNCTION_45_0();
  }
  return OUTLINED_FUNCTION_16_37(v3, v1, v4);
}

void sub_1A57842D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_51_13();
  sub_1A594BD24();
  *(_QWORD *)(v4 - 88) = *(_QWORD *)(v4 - 112);
  OUTLINED_FUNCTION_60_17();
  RangeSet.remove(contentsOf:)();
  OUTLINED_FUNCTION_48_12(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v5 = *(_QWORD *)(v4 - 88);
  if (v5 != OUTLINED_FUNCTION_24_29(v2, *(_QWORD *)(v4 - 120)))
    JUMPOUT(0x1A578429CLL);
  sub_1A54E3458(v2, v0, *(_QWORD *)(v4 - 128));
  OUTLINED_FUNCTION_1_3();
}

uint64_t RangeSet.isStrictSuperset(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5784350(a1, a2, a3, a4, a5, a6, RangeSet.isStrictSubset(of:));
}

uint64_t sub_1A5784350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a7(a3, a4 & 0xFFFFFFFFFFLL, a1, a2 & 0xFFFFFFFFFFLL);
}

uint64_t RangeSet.isStrictSubset(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((static RangeSet.__derived_struct_equals(_:_:)(a3, a4 & 0xFFFFFFFFFFLL, a1, a2 & 0xFFFFFFFFFFLL) & 1) != 0)
    return 0;
  OUTLINED_FUNCTION_87_7();
  return RangeSet.isSubset(of:)();
}

void sub_1A57843F0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41[11];
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char v53;

  OUTLINED_FUNCTION_16_4();
  v2 = v1;
  v4 = v3;
  v5 = *(_QWORD *)(v1 + 16);
  v41[5] = OUTLINED_FUNCTION_13_31();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_28_2();
  v41[6] = v7;
  OUTLINED_FUNCTION_9_50();
  v9 = MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_99_7(v9, v10, v11, v12, v13, v14, v15, v16, v41[0]);
  v48 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v17);
  v41[8] = (uint64_t)v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_20_21();
  v44 = v20;
  v21 = *(_QWORD *)(v2 + 24);
  v22 = sub_1A594BFE8();
  OUTLINED_FUNCTION_104_3();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_28_2();
  v41[9] = v24;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_20_21();
  v46 = v26;
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_28_2();
  v41[3] = v28;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_19_37();
  v41[7] = v30;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v31);
  v41[10] = (uint64_t)v41 - v32;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v33);
  v45 = (char *)v41 - v34;
  OUTLINED_FUNCTION_9_50();
  v36 = MEMORY[0x1E0C80A78](v35);
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_65_10();
  v49 = v37;
  v50 = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v2, v4, v22);
  v38 = *v0;
  v39 = *((_DWORD *)v0 + 2);
  v42 = v0;
  v43 = v21;
  LOBYTE(v4) = *((_BYTE *)v0 + 12);
  v51 = v38;
  v52 = v39;
  v53 = v4;
  v47 = v5;
  type metadata accessor for _RangeSetStorage(0, v5, v21, v40);
  OUTLINED_FUNCTION_27_26();
}

void sub_1A57845F8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v9 = sub_1A594BE5C();
  v10 = OUTLINED_FUNCTION_60_17();
  *(_QWORD *)(v8 - 120) = v1;
  *(_QWORD *)(v8 - 112) = v3;
  v1(v10);
  *(_QWORD *)(v8 - 152) = v5;
  if ((v9 & 1) == 0)
  {
    *(_QWORD *)(v8 - 272) = v0;
    *(_QWORD *)(v8 - 280) = v7;
    *(_QWORD *)(v8 - 104) = v2;
    *(_DWORD *)(v8 - 96) = v6;
    *(_BYTE *)(v8 - 92) = v4;
    OUTLINED_FUNCTION_27_26();
  }
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 136) + 8);
  v12 = *(_QWORD *)(v8 - 112);
  v11(v7, v12);
  v13 = v0;
  v14 = v11;
  v11(v13, v12);
  v15 = *(_QWORD *)(v8 - 128);
  v16 = *(_QWORD *)(v8 - 160);
  v17 = *(_QWORD *)(v8 - 176);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v8 - 120))(v17, v15, *(_QWORD *)(v8 - 112));
  v18 = sub_1A594BFD0();
  OUTLINED_FUNCTION_52_15(v17);
  if ((v18 & 1) != 0)
    goto LABEL_20;
  v19 = *(_QWORD *)(v8 - 200);
  v20 = *(_QWORD *)v19;
  v21 = *(_DWORD *)(v19 + 8);
  v22 = *(_BYTE *)(v19 + 12);
  *(_QWORD *)(v8 - 104) = *(_QWORD *)v19;
  *(_DWORD *)(v8 - 96) = v21;
  *(_BYTE *)(v8 - 92) = v22;
  v23 = *(_QWORD *)(v8 - 152);
  if ((sub_1A594BE5C() & 1) != 0)
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v8 - 120))(*(_QWORD *)(v8 - 208), v15, *(_QWORD *)(v8 - 112));
    MEMORY[0x1A85B1874](&unk_1A59B831C, v23);
LABEL_14:
    sub_1A594BF40();
    goto LABEL_15;
  }
  *(_QWORD *)(v8 - 104) = v20;
  *(_DWORD *)(v8 - 96) = v21;
  *(_BYTE *)(v8 - 92) = v22;
  MEMORY[0x1A85B1874](&unk_1A59B83D4, v23);
  v24 = *(_QWORD *)(v8 - 216);
  sub_1A594B208();
  OUTLINED_FUNCTION_42_0(v24, 1, *(_QWORD *)(v8 - 112));
  if (v25)
  {
LABEL_20:
    __break(1u);
    JUMPOUT(0x1A5784A50);
  }
  v26 = *(_QWORD *)(v8 - 112);
  v27 = v24 + *(int *)(v26 + 36);
  v28 = *(_QWORD *)(v8 - 144);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
  v30 = *(_QWORD *)(v8 - 184);
  *(_QWORD *)(v8 - 160) = v29;
  v29(v30, v27, v16);
  v14(v24, v26);
  v31 = *(_QWORD *)(v8 - 128);
  OUTLINED_FUNCTION_106_4();
  LOBYTE(v26) = sub_1A594B37C();
  v32 = *(_QWORD *)(v28 + 8);
  OUTLINED_FUNCTION_47_14(v30);
  if ((v26 & 1) == 0)
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v8 - 120))(*(_QWORD *)(v8 - 208), v31, *(_QWORD *)(v8 - 112));
    MEMORY[0x1A85B1874](&unk_1A59B831C, v23);
    goto LABEL_14;
  }
  *(_QWORD *)(v8 - 120) = v32;
  v33 = *(_QWORD *)v19;
  v34 = *(unsigned int *)(v19 + 8) | ((unint64_t)*(unsigned __int8 *)(v19 + 12) << 32);
  v35 = OUTLINED_FUNCTION_40_22();
  v36 = v35 - 1;
  if (__OFSUB__(v35, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (__OFSUB__(OUTLINED_FUNCTION_40_22(), 1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v37 = *(_QWORD *)(v8 - 232);
  sub_1A5786A60(v33, v34, v37);
  OUTLINED_FUNCTION_101_5(v30, v37);
  v38 = *(_QWORD *)(v8 - 112);
  v14(v37, v38);
  v39 = *(_QWORD *)(v8 - 224);
  OUTLINED_FUNCTION_34_27(v39, *(_QWORD *)(v8 - 128) + *(int *)(v38 + 36));
  OUTLINED_FUNCTION_106_4();
  if ((sub_1A594B298() & 1) == 0)
  {
LABEL_19:
    __break(1u);
    JUMPOUT(0x1A5784A60);
  }
  v40 = *(_QWORD *)(v8 - 248);
  v41 = *(int *)(v40 + 48);
  *(_QWORD *)(v8 - 128) = v36;
  v42 = *(_QWORD *)(v8 - 256);
  v43 = v42 + v41;
  OUTLINED_FUNCTION_20_35(v42, v30);
  OUTLINED_FUNCTION_20_35(v43, v39);
  v44 = *(_QWORD *)(v8 - 240);
  v45 = v44 + *(int *)(v40 + 48);
  OUTLINED_FUNCTION_34_27(v44, v42);
  OUTLINED_FUNCTION_34_27(v45, v43);
  v46 = *(_QWORD *)(v8 - 264);
  OUTLINED_FUNCTION_20_35(v46, v44);
  (*(void (**)(uint64_t, uint64_t))(v8 - 120))(v45, v16);
  v47 = v44 + *(int *)(v40 + 48);
  OUTLINED_FUNCTION_20_35(v44, v42);
  OUTLINED_FUNCTION_20_35(v47, v43);
  OUTLINED_FUNCTION_20_35(v46 + *(int *)(*(_QWORD *)(v8 - 112) + 36), v47);
  OUTLINED_FUNCTION_112_4();
  v48 = *(_QWORD *)(v8 - 208);
  OUTLINED_FUNCTION_83_6(v48, v46, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 136) + 32));
  sub_1A5786CBC(v48, *(_QWORD *)(v8 - 128));
LABEL_15:
  OUTLINED_FUNCTION_1_3();
}

void RangeSet.init<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_16_4();
  v28 = v2;
  v29 = v1;
  v25 = v3;
  v5 = v4;
  v7 = v6;
  v8 = sub_1A594BFE8();
  v30 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - v10;
  OUTLINED_FUNCTION_104_3();
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v25 - v13;
  v15 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_70_10();
  v26 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v17);
  v18 = v7;
  v19 = v25;
  v20 = OUTLINED_FUNCTION_72_3();
  OUTLINED_FUNCTION_91_6(v20, v21);
  v27 = v15;
  OUTLINED_FUNCTION_83_6(v0, v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  sub_1A594B730();
  v28 = v5;
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_37_23();
  OUTLINED_FUNCTION_42_0((uint64_t)v14, 1, v8);
  if (!v22)
  {
    v23 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    do
    {
      v23(v11, v14, v8);
      type metadata accessor for RangeSet(0, v18, v19, v24);
      RangeSet.insert(contentsOf:)();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v8);
      OUTLINED_FUNCTION_37_23();
      OUTLINED_FUNCTION_42_0((uint64_t)v14, 1, v8);
    }
    while (!v22);
  }
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  OUTLINED_FUNCTION_93_4(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  OUTLINED_FUNCTION_66_12();
  OUTLINED_FUNCTION_1_3();
}

void sub_1A5784C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_16_4();
  v1 = v0;
  v3 = v2;
  OUTLINED_FUNCTION_75_8();
  v4 = sub_1A594BFE8();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_46_8();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_29_23();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_64_12();
  OUTLINED_FUNCTION_13_31();
  sub_1A594C354();
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_68_6();
  OUTLINED_FUNCTION_88_7();
  OUTLINED_FUNCTION_88_7();
  type metadata accessor for RangeSet.Ranges(0, v3, v1, v8);
  OUTLINED_FUNCTION_16_6();
}

void sub_1A5785034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_72_3();
  sub_1A54E3458(v0, v1, SBYTE4(v1));
  OUTLINED_FUNCTION_62_13();
  sub_1A5786C3C();
  sub_1A54E4334(v2, v3, SBYTE4(v3));
  sub_1A5784C5C();
}

void sub_1A57850CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(_QWORD, _QWORD, _QWORD);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  void (*v62)(_QWORD, _QWORD, _QWORD);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  int v68;
  char v69;
  uint64_t v70;
  int v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  char v76;
  uint64_t v77;

  OUTLINED_FUNCTION_16_4();
  v3 = v2;
  v5 = v4;
  v66 = v6;
  v64 = v7;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_12_6();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_28_2();
  v55 = v12;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_64_12();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_28_2();
  v56 = v15;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v16);
  v61 = (uint64_t)&v53 - v17;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_20_21();
  v57 = v19;
  v20 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_46_8();
  v24 = v22 - v23;
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_29_23();
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v53 - v27;
  v29 = *(void (**)(_QWORD, _QWORD, _QWORD))(v20 + 16);
  v65 = v9;
  v62 = v29;
  v29((char *)&v53 - v27, v9, v10);
  LOBYTE(v9) = sub_1A594BFD0();
  v60 = *(void (**)(char *, uint64_t))(v20 + 8);
  v60(v28, v10);
  if ((v9 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v54 = v24;
    v31 = v64;
    v70 = v64;
    v32 = HIDWORD(v66);
    v71 = v66;
    v72 = BYTE4(v66);
    v63 = v3;
    v33 = type metadata accessor for _RangeSetStorage(0, v5, v3, v30);
    v34 = MEMORY[0x1A85B1874](&unk_1A59B8434, v33);
    if ((sub_1A594BE5C() & 1) == 0)
    {
      v35 = v31;
      v59 = v34;
      OUTLINED_FUNCTION_71_8(v0);
      v36 = v57;
      OUTLINED_FUNCTION_82_6(v57, v0);
      v70 = v35;
      v71 = v66;
      v53 = v32;
      v72 = v32;
      MEMORY[0x1A85B1874](&unk_1A59B83D4, v33);
      v58 = v33;
      sub_1A594B208();
      OUTLINED_FUNCTION_42_0(v1, 1, v10);
      if (v37)
      {
        __break(1u);
        goto LABEL_13;
      }
      v38 = v61;
      OUTLINED_FUNCTION_82_6(v61, v1 + *(int *)(v10 + 36));
      v39 = (void (*)(uint64_t, uint64_t))v60;
      v60((char *)v1, v10);
      v40 = sub_1A594B298();
      OUTLINED_FUNCTION_80_8(v38);
      OUTLINED_FUNCTION_80_8(v36);
      v39(v0, v10);
      v41 = v56;
      if ((v40 & 1) != 0)
      {
        v42 = v54;
        OUTLINED_FUNCTION_71_8(v54);
        OUTLINED_FUNCTION_82_6(v41, v42 + *(int *)(v10 + 36));
        v70 = v64;
        v71 = v66;
        v43 = v53;
        v72 = v53;
        v44 = v55;
        sub_1A594BE2C();
        v45 = v44;
        OUTLINED_FUNCTION_42_0(v44, 1, v10);
        if (!v37)
        {
          v46 = v61;
          OUTLINED_FUNCTION_82_6(v61, v45);
          v60((char *)v45, v10);
          OUTLINED_FUNCTION_60_17();
          v47 = v41;
          v48 = v63;
          v49 = sub_1A594B28C();
          OUTLINED_FUNCTION_80_8(v46);
          OUTLINED_FUNCTION_80_8(v47);
          v50 = OUTLINED_FUNCTION_10_46(v42);
          if ((v49 & 1) != 0)
          {
            v51 = v64;
            v74 = v64;
            v52 = v66;
            v75 = v66;
            v76 = v43;
            MEMORY[0x1E0C80A78](v50);
            *(&v53 - 4) = v5;
            *(&v53 - 3) = v48;
            *(&v53 - 2) = v65;
            sub_1A54E4334(v51, v52, v43);
            sub_1A57819AC((uint64_t (*)(char *))sub_1A57864F4, (uint64_t)(&v53 - 6), v58, v59, (char *)&v77);
            sub_1A54E3458(v74, v75, v76);
            v67 = v51;
            v68 = v52;
            v69 = v43;
            v73 = v77;
            __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9220);
            OUTLINED_FUNCTION_27_26();
          }
        }
LABEL_13:
        __break(1u);
        JUMPOUT(0x1A5785620);
      }
LABEL_10:
      __break(1u);
      goto LABEL_13;
    }
  }
  __break(1u);
  goto LABEL_10;
}

uint64_t sub_1A578562C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;

  OUTLINED_FUNCTION_75_8();
  v10 = sub_1A594BFE8();
  return a5(a1 + *(int *)(v10 + 36), a2, a3, a4) & 1;
}

uint64_t sub_1A5785694()
{
  sub_1A594BFE8();
  return sub_1A594B274() & 1;
}

uint64_t sub_1A5785700(uint64_t a1, uint64_t a2)
{
  return static RangeSet.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(_QWORD *)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32));
}

uint64_t RangeSet<>.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_12_47();
  v3 = HIDWORD(v2);
  sub_1A54E4334(v4, v0, SBYTE4(v2));
  OUTLINED_FUNCTION_67_12();
  OUTLINED_FUNCTION_30_22();
  sub_1A5787378(v5, v6, v7, v8, v9, v10);
  return sub_1A54E3458(v1, v0, v3);
}

uint64_t RangeSet<>.hashValue.getter()
{
  sub_1A594CE64();
  OUTLINED_FUNCTION_30_22();
  RangeSet<>.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A5785800()
{
  return RangeSet<>.hashValue.getter();
}

uint64_t sub_1A5785820()
{
  return RangeSet<>.hash(into:)();
}

uint64_t sub_1A5785840()
{
  sub_1A594CE64();
  RangeSet<>.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A57858A0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A578562C(a1, v1[4], v1[2], v1[3], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA3B8]) & 1;
}

uint64_t type metadata accessor for RangeSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RangeSet);
}

uint64_t sub_1A57858D4()
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for RangeSet<A>.Ranges);
  return sub_1A594BD30();
}

uint64_t sub_1A5785924(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5785C54(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEB508]);
}

uint64_t sub_1A5785930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for RangeSet<A>.Ranges, a3);
  return sub_1A594BD3C();
}

uint64_t sub_1A5785994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for RangeSet<A>.Ranges, a4);
  return sub_1A594BD18();
}

uint64_t sub_1A57859F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for RangeSet<A>.Ranges, a3);
  return sub_1A594BD54();
}

uint64_t sub_1A5785A4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A5785A64(a1, (uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))RangeSet.Ranges.startIndex.getter, a2);
}

uint64_t sub_1A5785A58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A5785A64(a1, (uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))RangeSet.Ranges.endIndex.getter, a2);
}

uint64_t sub_1A5785A64@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD, unint64_t, _QWORD, _QWORD)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = a2(*(_QWORD *)v3, *(unsigned int *)(v3 + 8) | ((unint64_t)*(unsigned __int8 *)(v3 + 12) << 32), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  *a3 = result;
  return result;
}

void (*sub_1A5785AA4(uint64_t **a1, uint64_t *a2))(_QWORD *a1)
{
  uint64_t v2;
  uint64_t *v5;

  v5 = (uint64_t *)malloc(0x28uLL);
  *a1 = v5;
  v5[4] = (uint64_t)sub_1A5785B10(v5, *a2, *(_QWORD *)v2, *(unsigned int *)(v2 + 8) | ((unint64_t)*(unsigned __int8 *)(v2 + 12) << 32));
  return sub_1A5673EB0;
}

void (*sub_1A5785B10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4))(_QWORD *a1)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v7 = sub_1A594BFE8();
  *a1 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  a1[1] = v8;
  v9 = malloc(*(_QWORD *)(v8 + 64));
  a1[2] = (uint64_t)v9;
  RangeSet.Ranges.subscript.getter(a3, a4 & 0xFFFFFFFFFFLL, (uint64_t)v9);
  return sub_1A5673F48;
}

uint64_t sub_1A5785BAC(uint64_t a1)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for RangeSet<A>.Ranges, a1);
  return sub_1A594BD48();
}

uint64_t sub_1A5785BF8()
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for RangeSet<A>.Ranges);
  return sub_1A594BD24();
}

uint64_t sub_1A5785C48(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5785C54(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEB500]);
}

uint64_t sub_1A5785C54(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  MEMORY[0x1A85B1874](&protocol conformance descriptor for RangeSet<A>.Ranges);
  v6 = OUTLINED_FUNCTION_98_2();
  result = a4(v6);
  *a1 = v8;
  return result;
}

uint64_t sub_1A5785CB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t result;

  v3 = *v1;
  v4 = *((_DWORD *)v1 + 2);
  v5 = *((_BYTE *)v1 + 12);
  result = RangeSet.Ranges.startIndex.getter();
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 12) = v5;
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A5785D04(uint64_t a1)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for RangeSet<A>.Ranges, a1);
  return sub_1A594BDE4();
}

uint64_t sub_1A5785D38(uint64_t a1)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for RangeSet<A>.Ranges, a1);
  return sub_1A594BE14();
}

void RangeSet.init<A, B>(_:within:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t AssociatedConformanceWitness;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_16_4();
  v3 = v2;
  v33 = v5;
  v34 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v36 = *(_QWORD *)(v10 - 8);
  v37 = v12;
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_11_4();
  v16 = v15 - v14;
  sub_1A594C354();
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_68_6();
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_70_10();
  OUTLINED_FUNCTION_35_19();
  v31 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v30 - v21;
  v35 = v3;
  v23 = v7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v25 = OUTLINED_FUNCTION_72_3();
  OUTLINED_FUNCTION_91_6(v25, v26);
  v32 = v18;
  OUTLINED_FUNCTION_83_6(v0, v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
  sub_1A594B730();
  v33 = v9;
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_67_12();
  sub_1A594C3C0();
  OUTLINED_FUNCTION_42_0(v1, 1, v11);
  if (!v27)
  {
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
    do
    {
      v28(v16, v1, v11);
      type metadata accessor for RangeSet(0, v11, AssociatedConformanceWitness, v29);
      RangeSet.insert<A>(_:within:)();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v16, v11);
      sub_1A594C3C0();
      OUTLINED_FUNCTION_42_0(v1, 1, v11);
    }
    while (!v27);
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v37, v23);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  OUTLINED_FUNCTION_48_12((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
  OUTLINED_FUNCTION_66_12();
  OUTLINED_FUNCTION_1_3();
}

void RangeSet.insert<A>(_:within:)()
{
  sub_1A5785FD0();
}

void RangeSet.remove<A>(_:within:)()
{
  sub_1A5785FD0();
}

void sub_1A5785FD0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_16_4();
  v33 = v2;
  v35 = v0;
  v39 = v3;
  v5 = v4;
  v7 = v6;
  v8 = *(_QWORD *)(v4 + 16);
  v32 = OUTLINED_FUNCTION_13_31();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_46_8();
  OUTLINED_FUNCTION_29_23();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  v13 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_11_4();
  v17 = v16 - v15;
  v38 = v5;
  v18 = sub_1A594BFE8();
  v36 = *(_QWORD *)(v18 - 8);
  v37 = v18;
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_28_2();
  v34 = v20;
  OUTLINED_FUNCTION_9_50();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_65_10();
  sub_1A594BD84();
  if ((sub_1A594B298() & 1) != 0)
  {
    v39 = v5;
    v22 = v32;
    v23 = (uint64_t)&v12[*(int *)(v32 + 48)];
    OUTLINED_FUNCTION_95_3((uint64_t)v12, v7);
    OUTLINED_FUNCTION_44_14(v23, v17);
    v24 = v1 + *(int *)(v22 + 48);
    OUTLINED_FUNCTION_95_3(v1, (uint64_t)v12);
    OUTLINED_FUNCTION_95_3(v24, v23);
    v25 = v34;
    OUTLINED_FUNCTION_44_14(v34, v1);
    v26 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v26(v24, v8);
    v27 = v1 + *(int *)(v22 + 48);
    OUTLINED_FUNCTION_44_14(v1, (uint64_t)v12);
    OUTLINED_FUNCTION_44_14(v27, v23);
    v28 = v37;
    OUTLINED_FUNCTION_44_14(v25 + *(int *)(v37 + 36), v27);
    v29 = OUTLINED_FUNCTION_67_12();
    ((void (*)(uint64_t))v26)(v29);
    v30 = v36;
    v31 = v39;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v39, v25, v28);
    v33(v31, v38);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v28);
    OUTLINED_FUNCTION_1_3();
  }
  else
  {
    __break(1u);
  }
}

void RangeSet.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1A54E4334(a1, a2, SBYTE4(a2));
  OUTLINED_FUNCTION_62_13();
  type metadata accessor for _RangeSetStorage(v2, v3, v4, v5);
  OUTLINED_FUNCTION_16_6();
}

uint64_t sub_1A5786248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v9 = sub_1A5781C48((void (*)(char *, char *))sub_1A57863FC, (uint64_t)&v11, v8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], a1, MEMORY[0x1E0DEDD18], a8);
  sub_1A54E3458(v12, v13, SBYTE4(v13));
  v12 = v9;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A40);
  sub_1A54E2E30((unint64_t *)&qword_1EE795F88, &qword_1EE799A40, MEMORY[0x1E0DEAF20]);
  sub_1A594B268();
  swift_bridgeObjectRelease();
  v12 = 0x74655365676E6152;
  v13 = 0xE900000000000028;
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  return v12;
}

uint64_t sub_1A5786348@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  sub_1A594CCCC();
  sub_1A594B5F8();
  sub_1A594BFE8();
  result = sub_1A594CCCC();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

void sub_1A57863E0()
{
  uint64_t v0;

  RangeSet.description.getter(*(_QWORD *)v0, *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32));
}

uint64_t sub_1A57863FC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A5786348(a1);
}

void sub_1A5786418()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A5786428()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A5786438(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85B1874](&protocol conformance descriptor for RangeSet<A>.Ranges);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE40], a1, &v3);
}

void sub_1A5786480()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A5786490(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85B1874](&protocol conformance descriptor for RangeSet<A>.Ranges);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE28], a1, &v3);
}

void sub_1A57864D8()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t type metadata accessor for RangeSet.Ranges(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RangeSet.Ranges);
}

uint64_t sub_1A57864F4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A578562C(a1, v1[4], v1[2], v1[3], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA3C8]) & 1;
}

uint64_t sub_1A578651C()
{
  return sub_1A5785694() & 1;
}

uint64_t OUTLINED_FUNCTION_7_49(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_8_54(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_10_46(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_11_34(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_14_40()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t OUTLINED_FUNCTION_16_37(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1A54E3458(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_17_41(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_18_34()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v1 - 248))(*(_QWORD *)(v1 - 344), *(_QWORD *)(v1 - 168), v0);
}

uint64_t OUTLINED_FUNCTION_20_35(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void OUTLINED_FUNCTION_21_37()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A5786E94(*(_QWORD *)(v1 - 184), *(_QWORD *)(v1 - 176), v0, *(_QWORD *)(v1 - 304));
}

uint64_t OUTLINED_FUNCTION_23_32@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1A5786A60(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_24_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_1A5786B4C(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_25_30@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1A5786A60(a1, a2, a3);
}

void OUTLINED_FUNCTION_27_26()
{
  JUMPOUT(0x1A85B1874);
}

void OUTLINED_FUNCTION_28_24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  int v3;

  v1 = *(uint64_t **)(v0 - 128);
  v2 = *v1;
  v3 = *((_DWORD *)v1 + 2);
  LOBYTE(v1) = *((_BYTE *)v1 + 12);
  *(_QWORD *)(v0 - 104) = v2;
  *(_DWORD *)(v0 - 96) = v3;
  *(_BYTE *)(v0 - 92) = (_BYTE)v1;
}

uint64_t OUTLINED_FUNCTION_34_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_35_19()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_36_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 - 144);
  *(_QWORD *)(v2 - 272) = a2;
  return sub_1A5786B4C(v3, a2, *(_QWORD *)(v2 - 152), *(_QWORD *)(v2 - 136));
}

uint64_t OUTLINED_FUNCTION_37_23()
{
  return sub_1A594C3C0();
}

uint64_t OUTLINED_FUNCTION_38_16@<X0>(uint64_t a1@<X3>, char a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 92) = a2;
  return type metadata accessor for _RangeSetStorage(0, v2, v3, a1);
}

uint64_t OUTLINED_FUNCTION_39_23()
{
  return sub_1A594BFE8();
}

uint64_t OUTLINED_FUNCTION_40_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1A5786B4C(v0, v2, v1, v3);
}

uint64_t OUTLINED_FUNCTION_41_15()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 272))();
}

uint64_t OUTLINED_FUNCTION_42_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 256) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_44_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_47_14(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_48_12@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_50_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return RangeSet.intersection(_:)(a1, a2, v5, v4, v3, v2);
}

uint64_t OUTLINED_FUNCTION_51_13()
{
  uint64_t v0;

  return v0 - 88;
}

uint64_t OUTLINED_FUNCTION_52_15(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_53_16()
{
  return sub_1A594B298();
}

uint64_t OUTLINED_FUNCTION_55_15()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 200);
}

uint64_t OUTLINED_FUNCTION_56_15(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 336))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_57_17(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_59_15()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  return sub_1A54E3458(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_60_17()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_66_12()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_71_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v2 - 232))(a1, *(_QWORD *)(v2 - 208), v1);
}

uint64_t OUTLINED_FUNCTION_72_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_73_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_75_8()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_77_11()
{
  return sub_1A594B298();
}

uint64_t OUTLINED_FUNCTION_78_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return sub_1A54E4334(v5, v4, SBYTE4(a4));
}

void OUTLINED_FUNCTION_79_9()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t OUTLINED_FUNCTION_80_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_81_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_82_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_83_6@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_84_4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  return sub_1A54E3458(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_85_6()
{
  return sub_1A594BFE8();
}

uint64_t OUTLINED_FUNCTION_86_5@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1A5786A60(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_88_7()
{
  uint64_t v0;
  uint64_t v1;

  return RangeSet.ranges.getter(v1, v0);
}

uint64_t OUTLINED_FUNCTION_89_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 168))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_91_6(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = result;
  *(_DWORD *)(v2 - 88) = a2;
  *(_BYTE *)(v2 - 84) = BYTE4(a2);
  return result;
}

uint64_t OUTLINED_FUNCTION_92_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_93_4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_94_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_95_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_96_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 176))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_98_5()
{
  return OUTLINED_FUNCTION_6_1();
}

void OUTLINED_FUNCTION_99_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 256) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_101_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 160))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_102_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 152))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_103_5()
{
  return sub_1A594CDC8();
}

uint64_t OUTLINED_FUNCTION_104_3()
{
  return sub_1A594C354();
}

uint64_t OUTLINED_FUNCTION_107_4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_108_5@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_109_6(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_112_4()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t type metadata accessor for _RangeSetStorage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _RangeSetStorage);
}

uint64_t sub_1A5786A60@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t result;

  if (!BYTE4(a2))
    return sub_1A57872E4(a2, a1, a3);
  if (BYTE4(a2) == 1)
  {
    sub_1A594BFE8();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594BB2C();
    return sub_1A54E3458(a1, a2, 1);
  }
  else
  {
    result = OUTLINED_FUNCTION_4_47();
    __break(1u);
  }
  return result;
}

void sub_1A5786B50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1A594BFE8();
  v3 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_19_38((uint64_t)&v7 - v5);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A91C8);
  if ((swift_dynamicCast() & 1) == 0 || v7 != (int)v7)
  {
    sub_1A594CCA8();
    OUTLINED_FUNCTION_0_110();
    OUTLINED_FUNCTION_21_38();
    OUTLINED_FUNCTION_19_38(v6);
    OUTLINED_FUNCTION_23_33();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  OUTLINED_FUNCTION_17_1();
}

void sub_1A5786C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (BYTE4(a2))
  {
    if (BYTE4(a2) == 1)
    {
      v4 = sub_1A594BFE8();
      v5 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      MEMORY[0x1A85ADEB4](v5, v4);
      OUTLINED_FUNCTION_20_36(a1, a2);
      OUTLINED_FUNCTION_8_1();
    }
  }
}

uint64_t sub_1A5786CBC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14[2];

  v3 = v2;
  v6 = sub_1A594BFE8();
  v7 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v8);
  if (*(_BYTE *)(v2 + 12))
  {
    if (*(_BYTE *)(v2 + 12) == 1)
    {
      v14[0] = *(_QWORD *)v2;
      *(_QWORD *)v2 = 0;
      *(_DWORD *)(v2 + 8) = 0;
      *(_BYTE *)(v2 + 12) = 2;
      OUTLINED_FUNCTION_24_30();
      sub_1A594B9E8();
      sub_1A5788648(a2, v14[0]);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 24))(v14[0]+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * a2, a1, v6);
      OUTLINED_FUNCTION_4_63();
      result = OUTLINED_FUNCTION_22_37();
      *(_BYTE *)(v2 + 12) = 1;
    }
    else
    {
      result = OUTLINED_FUNCTION_4_47();
      __break(1u);
    }
  }
  else
  {
    OUTLINED_FUNCTION_17_42((uint64_t)v14 - v9);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A91C8);
    swift_dynamicCast();
    v10 = v14[0];
    if (v10 == (int)v10)
    {
      v13 = v14[1];
      OUTLINED_FUNCTION_4_63();
      result = sub_1A54E3458(*(_QWORD *)v3, *(unsigned int *)(v3 + 8), *(_BYTE *)(v3 + 12));
      *(_QWORD *)v3 = v13;
      *(_DWORD *)(v3 + 8) = v10;
      *(_BYTE *)(v3 + 12) = 0;
    }
    else
    {
      sub_1A594CCA8();
      OUTLINED_FUNCTION_0_110();
      OUTLINED_FUNCTION_21_38();
      OUTLINED_FUNCTION_17_42(v11);
      OUTLINED_FUNCTION_24_30();
      OUTLINED_FUNCTION_4_63();
      result = OUTLINED_FUNCTION_22_37();
      *(_BYTE *)(v3 + 12) = 1;
    }
  }
  return result;
}

void sub_1A5786E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v16[5];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = v4;
  v17 = a2;
  v18 = a1;
  v7 = *(_QWORD *)(a4 + 16);
  v6 = *(_QWORD *)(a4 + 24);
  v16[4] = sub_1A594BFE8();
  OUTLINED_FUNCTION_5_6();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v16 - v10;
  MEMORY[0x1E0C80A78](v9);
  if (*(_BYTE *)(v5 + 12))
  {
    if (*(_BYTE *)(v5 + 12) == 1)
    {
      v19 = *(_QWORD *)v5;
      OUTLINED_FUNCTION_8_55();
      sub_1A594BAF0();
      sub_1A594B9AC();
LABEL_4:
      *(_QWORD *)v5 = v19;
LABEL_14:
      *(_DWORD *)(v5 + 8) = 0;
      v15 = 1;
      goto LABEL_15;
    }
    if ((OUTLINED_FUNCTION_16_38() & 1) != 0)
      goto LABEL_16;
LABEL_13:
    OUTLINED_FUNCTION_8_55();
    *(_QWORD *)v5 = sub_1A594BB08();
    goto LABEL_14;
  }
  v16[1] = *(_QWORD *)v5;
  v16[2] = v7;
  v16[3] = v6;
  v12 = OUTLINED_FUNCTION_16_38();
  if (v18 != v17)
  {
    if ((v12 & 1) != 0)
    {
      *(_QWORD *)v5 = 0;
      *(_DWORD *)(v5 + 8) = 0;
      v15 = 2;
LABEL_15:
      *(_BYTE *)(v5 + 12) = v15;
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  if ((v12 & 1) == 0)
  {
    if (v18)
    {
      sub_1A594CCA8();
      OUTLINED_FUNCTION_0_110();
      v13 = OUTLINED_FUNCTION_21_38();
      OUTLINED_FUNCTION_13_40(v14);
      sub_1A594BAF0();
      v19 = v13;
      OUTLINED_FUNCTION_9_51();
      sub_1A594BA78();
    }
    else
    {
      OUTLINED_FUNCTION_9_51();
      v19 = sub_1A594BB08();
      OUTLINED_FUNCTION_13_40((uint64_t)v11);
      OUTLINED_FUNCTION_23_33();
      sub_1A594BA84();
    }
    goto LABEL_4;
  }
LABEL_16:
  OUTLINED_FUNCTION_1_3();
}

uint64_t sub_1A578709C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  v8 = HIDWORD(a4);
  v9 = OUTLINED_FUNCTION_5_65();
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v10);
  if (!BYTE4(a2))
  {
    if (!(_BYTE)v8)
    {
      v16 = (_DWORD)a2 == (_DWORD)a4 && a1 == a3;
      goto LABEL_22;
    }
    if (v8 == 1)
    {
      v13 = a3;
      goto LABEL_14;
    }
LABEL_12:
    OUTLINED_FUNCTION_3_69();
LABEL_27:
    v15 = 0;
    return v15 & 1;
  }
  if (BYTE4(a2) != 1)
  {
    if ((_BYTE)v8)
    {
      if (v8 != 1)
      {
        v15 = 1;
        return v15 & 1;
      }
LABEL_11:
      OUTLINED_FUNCTION_3_69();
      sub_1A54E4334(a1, a2, SBYTE4(a2));
      v14 = sub_1A594BAF0();
      MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v14);
      v15 = sub_1A594BE5C();
      swift_bridgeObjectRelease();
      return v15 & 1;
    }
    goto LABEL_12;
  }
  if ((_BYTE)v8)
  {
    if (v8 == 1)
    {
      sub_1A54E4334(a3, a4, 1);
      sub_1A54E4334(a1, a2, 1);
      MEMORY[0x1A85B1874](MEMORY[0x1E0DEB898], v9);
      v11 = sub_1A594BAFC();
      OUTLINED_FUNCTION_20_36(a3, a4);
      OUTLINED_FUNCTION_20_36(a1, a2);
      return v11 & 1;
    }
    goto LABEL_11;
  }
  v13 = a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1 = a3;
  LODWORD(a2) = a4;
LABEL_14:
  OUTLINED_FUNCTION_3_69();
  if (MEMORY[0x1A85ADEB4](v13, v9) != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  sub_1A594BB2C();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A91C8);
  result = swift_dynamicCast();
  if (a1 >= (int)a2)
  {
    v16 = v17 == (int)a2 && v18 == a1;
LABEL_22:
    v15 = v16;
    return v15 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A57872E4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  _QWORD v5[2];

  if ((int)result > a2)
  {
    __break(1u);
  }
  else
  {
    v5[0] = (int)result;
    v5[1] = a2;
    result = OUTLINED_FUNCTION_5_65();
    v4 = *(_QWORD *)(result - 8);
    if (*(_QWORD *)(v4 + 64) == 16)
      return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t))(v4 + 16))(a3, v5, result);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5787348(uint64_t a1, uint64_t a2)
{
  return sub_1A578709C(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(_QWORD *)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32));
}

void sub_1A5787378(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;
  uint64_t v35;

  v27 = a1;
  v28 = a6;
  v10 = HIDWORD(a3);
  v11 = sub_1A594BFE8();
  v12 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v24 - v14;
  v35 = 0;
  v16 = a3;
  v29 = v10;
  sub_1A54E4334(a2, a3, v10);
  v30 = a3 & 0xFFFFFFFFFFLL;
  OUTLINED_FUNCTION_18_35(a2, a3 & 0xFFFFFFFFFFLL);
  if (v17)
  {
    v24[1] = v15;
    v25 = a2;
    v26 = v12;
    v18 = v27;
    do
    {
      sub_1A5786A60(a2, v30, (uint64_t)v15);
      v32 = a2;
      v33 = v16;
      v34 = v29;
      v20 = type metadata accessor for _RangeSetStorage(0, a4, a5, v19);
      MEMORY[0x1A85B1874](&unk_1A59B82CC, v20);
      v21 = v28;
      a2 = v25;
      sub_1A594BD24();
      v35 = v31;
      MEMORY[0x1A85AE46C](v18, v11, v21);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      v22 = v35;
      OUTLINED_FUNCTION_18_35(a2, v30);
    }
    while (v22 != v23);
    sub_1A54E3458(a2, v16, v29);
    OUTLINED_FUNCTION_1_3();
  }
  else
  {
    sub_1A54E3458(a2, a3, v29);
  }
}

uint64_t sub_1A5787530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BYTE v11[72];

  sub_1A594CE64();
  sub_1A5787378((uint64_t)v11, a1, a2 & 0xFFFFFFFFFFLL, a3, a4, a5);
  return sub_1A594CED0();
}

uint64_t sub_1A57875A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5787530(*(_QWORD *)v2, *(unsigned int *)(v2 + 8) | ((unint64_t)*(unsigned __int8 *)(v2 + 12) << 32), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a2 - 8));
}

void sub_1A57875C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A5787378(a1, *(_QWORD *)v3, *(unsigned int *)(v3 + 8) | ((unint64_t)*(unsigned __int8 *)(v3 + 12) << 32), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8));
}

uint64_t sub_1A57875E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  _BYTE v7[72];

  v5 = *(_QWORD *)(a3 - 8);
  sub_1A594CE64();
  sub_1A5787378((uint64_t)v7, *(_QWORD *)v3, *(unsigned int *)(v3 + 8) | ((unint64_t)*(unsigned __int8 *)(v3 + 12) << 32), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v5);
  return sub_1A594CED0();
}

uint64_t sub_1A5787644(uint64_t a1, unint64_t *a2)
{
  return sub_1A5786CBC(a1, *a2);
}

void (*sub_1A578764C(_QWORD *a1, uint64_t *a2, uint64_t a3))(uint64_t a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;
  uint64_t v12;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  *v7 = v3;
  v7[1] = a3;
  v8 = sub_1A594BFE8();
  v7[2] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[3] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[4] = malloc(v10);
  v11 = malloc(v10);
  v12 = *a2;
  v7[5] = v11;
  v7[6] = v12;
  sub_1A5786A60(*(_QWORD *)v3, *(unsigned int *)(v3 + 8) | ((unint64_t)*(unsigned __int8 *)(v3 + 12) << 32), (uint64_t)v11);
  return sub_1A5787704;
}

void sub_1A5787704(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v5 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v6 = v2[2];
    v7 = v2[3];
    (*(void (**)(_QWORD, void *, uint64_t))(v7 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 32), v3, v6);
    sub_1A5786CBC((uint64_t)v5, v4);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v3, v6);
  }
  else
  {
    sub_1A5786CBC(*(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  }
  free(v3);
  free(v5);
  free(v2);
}

uint64_t sub_1A57877A8(uint64_t a1, __int128 *a2)
{
  __int128 v3;

  v3 = *a2;
  return sub_1A57877D0(a1, (uint64_t)&v3);
}

uint64_t sub_1A57877D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1A594CE58();
  MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE48], v4);
  sub_1A594CC90();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v5 = sub_1A594BFE8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void (*sub_1A57878D4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(_QWORD *)
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = sub_1A5787938(v8, a2, a3, a4);
  return sub_1A570A0AC;
}

void (*sub_1A5787938(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v9 = malloc(0x50uLL);
  *a1 = v9;
  v9[1] = a4;
  v9[2] = v4;
  *v9 = a3;
  v10 = sub_1A594CE58();
  v9[3] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v9[4] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[5] = malloc(v12);
  v13 = (char *)malloc(v12);
  v9[6] = v13;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v14 = sub_1A594BFE8();
  v9[7] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v9[8] = v15;
  v9[9] = malloc(*(_QWORD *)(v15 + 64));
  (*(void (**)(void))(v15 + 16))();
  sub_1A5787ED8(a2, a3, a4, v13);
  return sub_1A5787A78;
}

void sub_1A5787A78(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 72);
  v4 = *(void **)(*(_QWORD *)a1 + 48);
  v26 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v5 = *(void **)(*(_QWORD *)a1 + 40);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, _QWORD))(v6 + 16))(v2[5], v4, v2[3]);
    MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE48], v7);
    OUTLINED_FUNCTION_15_45();
    v8 = *(uint64_t (**)(void *, uint64_t))(v6 + 8);
    v9 = v8(v5, v7);
    OUTLINED_FUNCTION_14_41(v9, v10, v11, v12, v13, v14, v15, v16, v25, v26);
  }
  else
  {
    MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE48], v2[3]);
    v17 = OUTLINED_FUNCTION_15_45();
    OUTLINED_FUNCTION_14_41(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
    v8 = *(uint64_t (**)(void *, uint64_t))(v6 + 8);
  }
  v8(v4, v7);
  free(v3);
  free(v4);
  free(v5);
  free(v2);
}

uint64_t sub_1A5787B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85B1874](&unk_1A59B83D4, a3);
  return sub_1A594B310();
}

uint64_t sub_1A5787BEC()
{
  MEMORY[0x1A85B1874](&unk_1A59B82CC);
  return sub_1A594BD30();
}

_QWORD *sub_1A5787C3C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5788334(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB508]);
}

uint64_t sub_1A5787C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85B1874](&unk_1A59B82CC, a3);
  return sub_1A594BD3C();
}

uint64_t sub_1A5787CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1A85B1874](&unk_1A59B82CC, a4);
  return sub_1A594BD18();
}

uint64_t sub_1A5787D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85B1874](&unk_1A59B82CC, a3);
  return sub_1A594BD54();
}

void sub_1A5787D64(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1A5786C44(*(_QWORD *)v1, *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32));
  *a1 = v3;
}

void sub_1A5787DA0(uint64_t **a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v5;

  v5 = (uint64_t *)malloc(0x28uLL);
  *a1 = v5;
  v5[4] = (uint64_t)sub_1A5787E00(v5, *a2, *(_QWORD *)v2, *(unsigned int *)(v2 + 8) | ((unint64_t)*(unsigned __int8 *)(v2 + 12) << 32));
  OUTLINED_FUNCTION_17_1();
}

void (*sub_1A5787E00(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4))(_QWORD *a1)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v7 = OUTLINED_FUNCTION_5_65();
  *a1 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  a1[1] = v8;
  v9 = malloc(*(_QWORD *)(v8 + 64));
  a1[2] = (uint64_t)v9;
  sub_1A5786A60(a3, a4 & 0xFFFFFFFFFFLL, (uint64_t)v9);
  return sub_1A5673F48;
}

uint64_t sub_1A5787E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;

  v6 = MEMORY[0x1A85B1874](&unk_1A59B81E8);
  return sub_1A5787ED8(a1, a2, v6, a3);
}

uint64_t sub_1A5787ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t TupleTypeMetadata2;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;

  v48 = a1;
  v49 = a4;
  v6 = *(_QWORD *)(a3 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v40 - v11;
  v41 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v40 - v17;
  swift_getAssociatedConformanceWitness();
  v45 = sub_1A594BFE8();
  v43 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v40 = (char *)&v40 - v22;
  sub_1A594BD60();
  v46 = a2;
  v47 = v4;
  v44 = v6;
  sub_1A594BDB4();
  result = sub_1A594B298();
  if ((result & 1) != 0)
  {
    v25 = v41;
    v24 = TupleTypeMetadata2;
    v26 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
    v27 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
    v27(v12, v18, AssociatedTypeWitness);
    v27(v26, v15, AssociatedTypeWitness);
    v28 = &v9[*(int *)(v24 + 48)];
    v29 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    v29(v9, v12, AssociatedTypeWitness);
    v29(v28, v26, AssociatedTypeWitness);
    v27(v20, v9, AssociatedTypeWitness);
    v30 = *(void (**)(char *, uint64_t))(v25 + 8);
    v30(v28, AssociatedTypeWitness);
    v31 = &v9[*(int *)(v24 + 48)];
    v27(v9, v12, AssociatedTypeWitness);
    v27(v31, v26, AssociatedTypeWitness);
    v32 = v45;
    v27(&v20[*(int *)(v45 + 36)], v31, AssociatedTypeWitness);
    v30(v9, AssociatedTypeWitness);
    v33 = v43;
    v34 = v40;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v20, v32);
    v36 = v47;
    v35 = v48;
    v37 = v46;
    sub_1A594BD6C();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
    v38 = sub_1A594CE58();
    v39 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(&v49[*(int *)(v38 + 40)], v36, v37);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v34, v35, v32);
    v27(v39, v34, AssociatedTypeWitness);
    return ((uint64_t (*)(char *, char *, uint64_t))v27)(&v39[*(int *)(v38 + 36)], &v34[*(int *)(v32 + 36)], AssociatedTypeWitness);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5788260(uint64_t a1)
{
  MEMORY[0x1A85B1874](&unk_1A59B82CC, a1);
  return sub_1A594BD48();
}

void sub_1A57882AC()
{
  uint64_t v0;

  sub_1A5786C44(*(_QWORD *)v0, *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32));
}

uint64_t sub_1A57882D8()
{
  MEMORY[0x1A85B1874](&unk_1A59B82CC);
  return sub_1A594BD24();
}

_QWORD *sub_1A5788328(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5788334(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB500]);
}

_QWORD *sub_1A5788334(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  v7 = MEMORY[0x1A85B1874](&unk_1A59B82CC);
  result = a4(&v9, a1, a2, v7, MEMORY[0x1E0DEB458]);
  *a1 = v9;
  return result;
}

uint64_t sub_1A5788398(uint64_t a1)
{
  MEMORY[0x1A85B1874](&unk_1A59B8434, a1);
  return sub_1A594BDE4();
}

uint64_t sub_1A57883CC(uint64_t a1)
{
  MEMORY[0x1A85B1874](&unk_1A59B8434, a1);
  return sub_1A594BE14();
}

void sub_1A5788400()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A5788410(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85B1874](&unk_1A59B81E8);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE30], a1, &v3);
}

void sub_1A5788458()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A5788468()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A5788478(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85B1874](&unk_1A59B82CC);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE40], a1, &v3);
}

uint64_t sub_1A57884C0(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85B1874](&unk_1A59B831C);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE50], a1, &v3);
}

uint64_t sub_1A5788508(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A5786E94(*a1, a1[1], a2, a5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
}

uint64_t sub_1A5788588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85B1874](&unk_1A59B81E8, a3);
  return sub_1A594BFC4();
}

uint64_t sub_1A57885F0(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85B1874](&unk_1A59B83D4);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE28], a1, &v3);
}

void sub_1A5788638()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A5788648(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

uint64_t sub_1A5788698(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 12) <= 1u)
    return *(unsigned __int8 *)(a1 + 12);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A57886B0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_DWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 12) = a2;
  return result;
}

uint64_t type metadata accessor for _RangeSetStorage._Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _RangeSetStorage._Storage);
}

uint64_t OUTLINED_FUNCTION_0_110()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3_69()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  return sub_1A54E4334(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_4_63()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_5_65()
{
  return sub_1A594BFE8();
}

uint64_t OUTLINED_FUNCTION_8_55()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v3, v0);
}

uint64_t OUTLINED_FUNCTION_9_51()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v0, v1);
}

uint64_t OUTLINED_FUNCTION_13_40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1A57872E4(v1, *(_QWORD *)(v2 - 136), a1);
}

uint64_t OUTLINED_FUNCTION_14_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, a10);
}

uint64_t OUTLINED_FUNCTION_15_45()
{
  return sub_1A594CC90();
}

uint64_t OUTLINED_FUNCTION_16_38()
{
  return sub_1A594BD9C();
}

uint64_t OUTLINED_FUNCTION_17_42(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

void OUTLINED_FUNCTION_18_35(uint64_t a1, uint64_t a2)
{
  sub_1A5786C44(a1, a2);
}

uint64_t OUTLINED_FUNCTION_19_38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_20_36(uint64_t a1, uint64_t a2)
{
  return sub_1A54E3458(a1, a2, 1);
}

uint64_t OUTLINED_FUNCTION_21_38()
{
  return sub_1A594B994();
}

uint64_t OUTLINED_FUNCTION_22_37()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = sub_1A54E3458(*(_QWORD *)v0, *(unsigned int *)(v0 + 8), *(_BYTE *)(v0 + 12));
  *(_QWORD *)v0 = v1;
  *(_DWORD *)(v0 + 8) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_23_33()
{
  return sub_1A594BAF0();
}

uint64_t OUTLINED_FUNCTION_24_30()
{
  return sub_1A594BAF0();
}

uint64_t sub_1A5788800(uint64_t result, uint64_t a2, uint64_t *a3)
{
  char *v4;
  unint64_t v5;
  int v6;
  unsigned __int8 *v7;
  int v8;
  unsigned __int8 *v9;
  int v10;
  unsigned int v11;
  int v12;
  double (*v13)(_QWORD);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unsigned __int8 v22;

  v4 = (char *)result;
  LODWORD(v5) = 0;
  v6 = 0;
  if (result)
    v7 = (unsigned __int8 *)(result + a2);
  else
    v7 = 0;
  while (1)
  {
    v21 = v5;
    v22 = v6;
    if (!(_BYTE)v6)
      break;
    if ((v5 & 0x80) == 0)
    {
      sub_1A567FEE8();
      v13 = sub_1A570358C();
      sub_1A5788B14(0);
      ((void (*)(uint64_t *, _QWORD))v13)(&v19, 0);
      goto LABEL_34;
    }
    if (!v4)
    {
LABEL_19:
      v11 = v5;
      goto LABEL_20;
    }
    v9 = (unsigned __int8 *)v4;
LABEL_9:
    if (v9 == v7)
      goto LABEL_19;
    v4 = (char *)(v9 + 1);
    v11 = v5;
    while (1)
    {
      v12 = *v9++;
      v11 = ((-255 << v6) - 1) & v11 | (v12 << v6);
      v6 += 8;
      if (v6 >= 0x20u)
        break;
      ++v4;
      if (v9 == v7)
      {
        v4 = (char *)v7;
        if ((_BYTE)v6)
          break;
        return result;
      }
    }
LABEL_20:
    if ((v11 & 0xC0E0) == 0x80C0)
    {
      if ((v11 & 0x1E) == 0)
        goto LABEL_32;
      v14 = 16;
    }
    else if ((v11 & 0xC0C0F0) == 0x8080E0)
    {
      if ((v11 & 0x200F) == 0 || (v11 & 0x200F) == 0x200D)
        goto LABEL_32;
      v14 = 24;
    }
    else
    {
      if ((v11 & 0xC0C0C0F8) != 0x808080F0 || (v11 & 0x3007) == 0 || __rev16(v11 & 0x3007) > 0x400)
      {
LABEL_32:
        result = sub_1A594CF48();
        v15 = 0;
        v14 = 8 * result;
        goto LABEL_33;
      }
      v14 = 32;
    }
    v15 = 1;
LABEL_33:
    v5 = (unint64_t)v11 >> (v14 & 0x38);
    v21 = v5;
    v6 -= v14;
    v22 = v6;
    if (v15)
    {
LABEL_34:
      LODWORD(v5) = v21;
      v6 = v22;
      v16 = a3[1];
      v19 = *a3;
      v20 = v16;
      *a3 = 0;
      a3[1] = 0xE000000000000000;
      sub_1A594B52C();
      v18 = v19;
      v17 = v20;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *a3 = v18;
      a3[1] = v17;
      result = swift_bridgeObjectRelease();
    }
  }
  if (v4 && v4 != (char *)v7)
  {
    v8 = *v4++;
    v9 = (unsigned __int8 *)v4;
    v10 = v8;
    if ((v8 & 0x80000000) == 0)
      goto LABEL_34;
    LODWORD(v5) = v5 & 0xFFFFFF00 | v10;
    v6 = 8;
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1A5788B14(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  int v4;

  v2 = *(_BYTE *)(v1 + 4);
  if (v2)
  {
    if (result <= 0xF7u)
    {
      v3 = (*(_DWORD *)v1 >> result);
      v4 = ((result + 8) - result) / -8;
      *(_DWORD *)v1 = (*(_DWORD *)v1 >> (((result + 8) >> 1) & 0x1C) >> (((result + 8) >> 1) & 0x1C) << ((result + 8 + 8 * v4) & 0x18)) | *(_DWORD *)v1 & ((1 << ((result >> 1) & 0x1C) << ((result >> 1) & 0x1C)) - 1);
      *(_BYTE *)(v1 + 4) = v2 + 8 * v4;
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t AtomicFlag.Storage.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AtomicFlag.Storage.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t AtomicFlag.storage.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

double (*AtomicFlag.storage.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AtomicFlag.init()()
{
  uint64_t result;

  type metadata accessor for AtomicFlag.Storage();
  result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t type metadata accessor for AtomicFlag.Storage()
{
  uint64_t result;

  result = qword_1EE795B88;
  if (!qword_1EE795B88)
    return swift_getSingletonMetadata();
  return result;
}

Swift::Bool __swiftcall AtomicFlag.testAndSet()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0;
  if (qword_1EE796720 != -1)
    swift_once();
  return atomicFlag_testAndSet(v1 + 16);
}

_UNKNOWN **atomicFlag_testAndSet.unsafeMutableAddressor()
{
  if (qword_1EE796720 != -1)
    swift_once();
  return &atomicFlag_testAndSet;
}

Swift::Void __swiftcall AtomicFlag.clear()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0;
  if (qword_1EE7AA1B8 != -1)
    swift_once();
  atomicFlag_clear(v1 + 16);
}

uint64_t (**atomicFlag_clear.unsafeMutableAddressor())(_QWORD)
{
  if (qword_1EE7AA1B8 != -1)
    swift_once();
  return &atomicFlag_clear;
}

void *sub_1A5788D78(uint64_t a1)
{
  return sub_1A5788DA0(a1, "atomic_flag_test_and_set", &atomicFlag_testAndSet);
}

void *sub_1A5788D8C(uint64_t a1)
{
  return sub_1A5788DA0(a1, "atomic_flag_clear", &atomicFlag_clear);
}

void *sub_1A5788DA0(uint64_t a1, const char *a2, _QWORD *a3)
{
  void *result;

  result = dlsym((void *)0xFFFFFFFFFFFFFFFELL, a2);
  if (result)
    *a3 = result;
  else
    __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for AtomicFlag()
{
  return &type metadata for AtomicFlag;
}

uint64_t sub_1A5788DE0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1A5788E1C()
{
  return type metadata accessor for AtomicFlag.Storage();
}

void type metadata accessor for SecTrustResultType(uint64_t a1)
{
  sub_1A5658218(a1, &qword_1EE7AA1C8);
}

void type metadata accessor for SecTrust(uint64_t a1)
{
  sub_1A5658218(a1, (unint64_t *)&unk_1EE7A0F70);
}

uint64_t RandomAccessCollection.binarySearch(for:using:)@<X0>(char *a1@<X0>, uint64_t (*a2)(uint64_t, char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v23)(char *, uint64_t);
  uint64_t AssociatedConformanceWitness;
  char *v25;
  char v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  char v36;
  uint64_t v37;
  void (*v38)(char *);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t (*v43)(uint64_t, char *);
  void (*v44)(char *, uint64_t);
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t AssociatedTypeWitness;
  uint64_t (*v61)(uint64_t, char *);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  _BYTE v70[40];

  v67 = a3;
  v61 = a2;
  v52[0] = a6;
  v54 = *(_QWORD *)(a5 + 8);
  v9 = *(_QWORD *)(v54 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v62 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v59 = (char *)v52 - v10;
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v69 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v52 - v15;
  MEMORY[0x1E0C80A78](v17);
  v63 = (char *)v52 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v52 - v20;
  v68 = a4;
  if ((sub_1A594BD9C() & 1) != 0)
    return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v12 + 56))(v52[0], 1, 1, v11);
  sub_1A594BD60();
  sub_1A594BDB4();
  sub_1A594B1FC();
  v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v58 = v16;
  v65 = v12;
  v66 = v23;
  v23(v16, v11);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v25 = v63;
  v57 = AssociatedConformanceWitness;
  v26 = sub_1A594B298();
  v27 = v62;
  v28 = v25;
  if ((v26 & 1) != 0)
  {
    v64 = a1;
    v56 = a5;
    v52[1] = v9;
    v53 = v21;
    do
    {
      sub_1A594BD0C();
      sub_1A594BD00();
      v37 = sub_1A594BED4();
      v38 = *(void (**)(char *))(v27 + 16);
      v39 = v59;
      v40 = v27;
      v41 = AssociatedTypeWitness;
      v38(v59);
      ((void (*)(_BYTE *, _QWORD))v37)(v70, 0);
      v42 = a1;
      v43 = v61;
      LOBYTE(v37) = v61((uint64_t)v39, v42);
      v44 = *(void (**)(char *, uint64_t))(v40 + 8);
      v44(v39, v41);
      if ((v37 & 1) != 0)
      {
        v29 = v58;
        v30 = v69;
        sub_1A594BD84();
        v31 = v21;
        v32 = v63;
        v33 = v65;
      }
      else
      {
        v45 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
        v55 = v44;
        v29 = v58;
        v45(v58, v69, v11);
        v46 = sub_1A594BED4();
        v38(v39);
        ((void (*)(_BYTE *, _QWORD))v46)(v70, 0);
        v47 = v11;
        v66(v29, v11);
        LOBYTE(v46) = v43((uint64_t)v64, v39);
        v55(v39, v41);
        if ((v46 & 1) == 0)
        {
          v49 = v66;
          v66(v63, v11);
          v49(v53, v11);
          v50 = v65;
          v51 = v52[0];
          (*(void (**)(_QWORD, char *, uint64_t))(v65 + 32))(v52[0], v69, v47);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v47);
        }
        v30 = v69;
        sub_1A594B1FC();
        v32 = v63;
        v31 = v63;
        v33 = v65;
        v21 = v53;
      }
      v34 = v30;
      v35 = v66;
      v66(v34, v11);
      v35(v31, v11);
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v31, v29, v11);
      v36 = sub_1A594B298();
      a1 = v64;
      v27 = v62;
      v28 = v32;
    }
    while ((v36 & 1) != 0);
  }
  v48 = v66;
  v66(v28, v11);
  v48(v21, v11);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v65 + 56))(v52[0], 1, 1, v11);
}

uint64_t RandomAccessCollection.binarySearch<A>(forKey:using:_:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, char *)@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(char *, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, char *);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t AssociatedConformanceWitness;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t);
  uint64_t v61;
  void (*v62)(char *);
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  _BYTE v66[40];

  v60 = a4;
  v61 = a5;
  v47 = a3;
  v46 = a2;
  v59 = a1;
  v45 = a7;
  v48 = *(_QWORD *)(a6 + 8);
  v8 = *(_QWORD *)(v48 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v57 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v58 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v56 = (char *)&v45 - v10;
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v49 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v45 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v45 - v18;
  MEMORY[0x1E0C80A78](v20);
  v50 = (char *)&v45 - v21;
  if ((sub_1A594BD9C() & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v45, 1, 1, v11);
  sub_1A594BD60();
  sub_1A594BDB4();
  sub_1A594B1FC();
  v65 = *(void (**)(char *, uint64_t))(v12 + 8);
  v65(v16, v11);
  v55 = v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v23 = sub_1A594B298();
  v25 = v49;
  v24 = v50;
  if ((v23 & 1) != 0)
  {
    v51 = a6;
    v52 = v19;
    v63 = v11;
    v64 = v12;
    v53 = v16;
    do
    {
      sub_1A594BD0C();
      sub_1A594BD00();
      v30 = sub_1A594BED4();
      v31 = v56;
      v32 = v57;
      v33 = v24;
      v34 = v58;
      v62 = *(void (**)(char *))(v57 + 16);
      v62(v56);
      ((void (*)(_BYTE *, _QWORD))v30)(v66, 0);
      v35 = v59;
      LOBYTE(v30) = v60(v31, v59);
      v36 = *(void (**)(char *, uint64_t))(v32 + 8);
      v36(v31, v34);
      if ((v30 & 1) != 0)
      {
        v26 = v53;
        sub_1A594BD84();
        v27 = v33;
        v24 = v33;
        v28 = v26;
        v19 = v52;
      }
      else
      {
        v28 = v53;
        v37 = v25;
        v38 = v63;
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v53, v37, v63);
        v39 = sub_1A594BED4();
        v62(v31);
        ((void (*)(_BYTE *, _QWORD))v39)(v66, 0);
        v65(v28, v38);
        LOBYTE(v39) = v46(v35, v31);
        v36(v31, v34);
        if ((v39 & 1) == 0)
        {
          v41 = v63;
          v42 = v65;
          v65(v52, v63);
          v42(v50, v41);
          v43 = v64;
          v44 = v45;
          (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v45, v49, v41);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v44, 0, 1, v41);
        }
        v25 = v49;
        sub_1A594B1FC();
        v19 = v52;
        v27 = v52;
        v24 = v50;
      }
      v11 = v63;
      v29 = v65;
      v65(v25, v63);
      v29(v27, v11);
      v12 = v64;
      (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v27, v28, v11);
    }
    while ((sub_1A594B298() & 1) != 0);
  }
  v40 = v65;
  v65(v19, v11);
  v40(v24, v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v45, 1, 1, v11);
}

uint64_t CertUITrustManager.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  CertUITrustManager.init()();
  return v0;
}

void CertUITrustManager.init()()
{
  _QWORD *v0;
  NSString *v1;
  objc_class *v2;
  const char *v3;
  objc_method *ClassMethod;
  IMP Implementation;
  uint64_t v6;
  id v7;
  const char *v8;
  objc_method *InstanceMethod;
  IMP v10;
  uint64_t v11;
  objc_method *v12;
  objc_method *v13;
  IMP v14;

  v1 = (NSString *)sub_1A594B3F4();
  v2 = NSClassFromString(v1);

  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = (const char *)sub_1A594A2CC();
  ClassMethod = class_getClassMethod(v2, v3);
  if (!ClassMethod)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  Implementation = method_getImplementation(ClassMethod);
  v6 = sub_1A594A2CC();
  v7 = (id)((uint64_t (*)(objc_class *, uint64_t))Implementation)(v2, v6);
  v8 = (const char *)sub_1A594A2CC();
  InstanceMethod = class_getInstanceMethod(v2, v8);
  if (!InstanceMethod)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = method_getImplementation(InstanceMethod);
  v11 = sub_1A594A2CC();
  v0[2] = (id)((uint64_t (*)(id, uint64_t))v10)(v7, v11);
  v12 = class_getInstanceMethod(v2, sel_rawTrustResultForSSLTrust_hostname_service_);
  if (!v12)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v0[3] = method_getImplementation(v12);
  v13 = class_getInstanceMethod(v2, sel_allowTrust_forHost_service_);
  if (v13)
  {
    v14 = method_getImplementation(v13);
    swift_unknownObjectRelease();
    v0[4] = v14;
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t CertUITrustManager.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t CertUITrustManager.__deallocating_deinit()
{
  return sub_1A578A080();
}

uint64_t CertUITrustManager.rawTrustResult(forSSLTrust:hostname:service:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  void *v6;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, char *, uint64_t, void *, void *);
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v6 = a5;
  v10 = v5 + 16;
  v8 = *(_QWORD *)(v5 + 16);
  v9 = *(uint64_t (**)(uint64_t, char *, uint64_t, void *, void *))(v10 + 8);
  if (!a3)
  {
    v11 = 0;
    if (!a5)
      goto LABEL_4;
    goto LABEL_3;
  }
  v11 = (void *)sub_1A594B3F4();
  if (v6)
LABEL_3:
    v6 = (void *)sub_1A594B3F4();
LABEL_4:
  v12 = v9(v8, sel_rawTrustResultForSSLTrust_hostname_service_, a1, v11, v6);

  return v12;
}

Swift::Void __swiftcall CertUITrustManager.allow(_:forHost:service:)(SecTrustRef_optional _, Swift::String_optional forHost, Swift::String_optional service)
{
  uint64_t v3;
  void *object;
  void (*v6)(uint64_t, char *, SecTrustRef, void *);
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;

  object = service.value._object;
  v6 = *(void (**)(uint64_t, char *, SecTrustRef, void *))(v3 + 32);
  v7 = *(_QWORD *)(v3 + 16);
  if (!forHost.value._object)
  {
    v8 = 0;
    if (service.value._object)
      goto LABEL_3;
LABEL_5:
    v9 = 0;
    goto LABEL_6;
  }
  v8 = (void *)sub_1A594B3F4();
  if (!object)
    goto LABEL_5;
LABEL_3:
  v9 = sub_1A594B3F4();
LABEL_6:
  v10 = (id)v9;
  v6(v7, sel_allowTrust_forHost_service_, _.value, v8);

}

uint64_t CertUITrustManager.showPrompt(hostname:service:trust:options:_:)(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t inited;
  void (*v14)(uint64_t, char *, void *);
  uint64_t v15;
  void (*v16)(uint64_t, char *, void *);
  uint64_t v17;

  type metadata accessor for CertUIPrompt();
  inited = swift_initStackObject();
  sub_1A5789EC0();
  v14 = *(void (**)(uint64_t, char *, void *))(inited + 32);
  v15 = *(_QWORD *)(inited + 16);
  if (a2)
    a2 = (void *)sub_1A594B3F4();
  v14(v15, sel_setHost_, a2);

  v16 = *(void (**)(uint64_t, char *, void *))(inited + 40);
  v17 = *(_QWORD *)(inited + 16);
  if (a4)
    a4 = (void *)sub_1A594B3F4();
  v16(v17, sel_setService_, a4);

  (*(void (**)(_QWORD, char *, uint64_t))(inited + 24))(*(_QWORD *)(inited + 16), sel_setTrust_, a5);
  sub_1A5789DD0(a6, a7, a8);
  return swift_release();
}

uint64_t type metadata accessor for CertUIPrompt()
{
  return objc_opt_self();
}

void sub_1A5789DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void (*v6)(uint64_t, char *, void *, void *);
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD v10[6];

  v6 = *(void (**)(uint64_t, char *, void *, void *))(v3 + 48);
  v7 = *(_QWORD *)(v3 + 16);
  if (a1)
    v8 = (void *)sub_1A594AFBC();
  else
    v8 = 0;
  v10[4] = a2;
  v10[5] = a3;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1A578A230;
  v10[3] = &block_descriptor_25;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  v6(v7, sel_showPromptWithOptions_responseBlock_, v8, v9);
  _Block_release(v9);

}

void sub_1A5789EC0()
{
  _QWORD *v0;
  NSString *v1;
  objc_class *v2;
  const char *v3;
  objc_method *ClassMethod;
  IMP Implementation;
  uint64_t v6;
  id v7;
  const char *v8;
  objc_method *InstanceMethod;
  IMP v10;
  uint64_t v11;
  objc_method *v12;
  objc_method *v13;
  objc_method *v14;
  objc_method *v15;
  IMP v16;

  v1 = (NSString *)sub_1A594B3F4();
  v2 = NSClassFromString(v1);

  if (!v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  v3 = (const char *)sub_1A594A2CC();
  ClassMethod = class_getClassMethod(v2, v3);
  if (!ClassMethod)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  Implementation = method_getImplementation(ClassMethod);
  v6 = sub_1A594A2CC();
  v7 = (id)((uint64_t (*)(objc_class *, uint64_t))Implementation)(v2, v6);
  v8 = (const char *)sub_1A594A2CC();
  InstanceMethod = class_getInstanceMethod(v2, v8);
  if (!InstanceMethod)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v10 = method_getImplementation(InstanceMethod);
  v11 = sub_1A594A2CC();
  v0[2] = (id)((uint64_t (*)(id, uint64_t))v10)(v7, v11);
  v12 = class_getInstanceMethod(v2, sel_setTrust_);
  if (!v12)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v0[3] = method_getImplementation(v12);
  v13 = class_getInstanceMethod(v2, sel_setHost_);
  if (!v13)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v0[4] = method_getImplementation(v13);
  v14 = class_getInstanceMethod(v2, sel_setService_);
  if (!v14)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v0[5] = method_getImplementation(v14);
  v15 = class_getInstanceMethod(v2, sel_showPromptWithOptions_responseBlock_);
  if (v15)
  {
    v16 = method_getImplementation(v15);
    swift_unknownObjectRelease();
    v0[6] = v16;
    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t type metadata accessor for CertUITrustManager()
{
  return objc_opt_self();
}

uint64_t sub_1A578A078()
{
  return sub_1A578A080();
}

uint64_t sub_1A578A080()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A578A230(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1A578A318()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A578A33C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t Array.findAppendOnlyDiff<A>(from:id:added:removed:update:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6, void (*a7)(char *, char *), uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t (*v34)(char *, uint64_t);
  uint64_t result;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(void);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *);
  uint64_t v77;
  char *v78;
  void (*v79)(char *, char *);
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v80 = a8;
  v79 = a7;
  v77 = a6;
  v76 = a5;
  v75 = a4;
  v74 = a3;
  v11 = a9;
  v88 = a2;
  v84 = *(_QWORD *)(*(_QWORD *)(*a2 + *MEMORY[0x1E0DEE2A8]) - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v78 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v72 - v15;
  v18 = *(_QWORD *)(v17 + 8);
  v83 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x1E0C80A78](v14);
  v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v72 - v22;
  v91 = v24;
  v25 = MEMORY[0x1A85ADF2C](a9);
  v87 = a1;
  v89 = a10;
  if (v25 >= 1 && MEMORY[0x1A85ADF2C](a1, v91) >= 1)
  {
    v90 = 0;
    v26 = 0;
    v85 = a9;
    v86 = 0;
    v27 = v21;
    v82 = v21;
    v81 = v23;
    v73 = v18;
    while (1)
    {
      v28 = v91;
      sub_1A594BB2C();
      swift_getAtKeyPath();
      v29 = *(void (**)(char *, uint64_t))(v84 + 8);
      v29(v16, v28);
      sub_1A594BB2C();
      swift_getAtKeyPath();
      v29(v16, v28);
      if ((sub_1A594B37C() & 1) != 0)
      {
        v31 = v90;
        v30 = v91;
        sub_1A594BB2C();
        v32 = v27;
        v33 = v78;
        sub_1A594BB2C();
        v79(v16, v33);
        v29(v33, v30);
        v29(v16, v30);
        v34 = *(uint64_t (**)(char *, uint64_t))(v83 + 8);
        result = v34(v32, v18);
        if (__OFADD__(v26++, 1))
        {
          __break(1u);
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
        v90 = v31 + 1;
        v23 = v81;
        v37 = v18;
        v34(v81, v18);
        v11 = v85;
        v38 = v82;
        v39 = v87;
      }
      else
      {
        result = MEMORY[0x1A85ADF2C](v11, v91);
        if (result < v26)
          goto LABEL_21;
        v98 = sub_1A594BB14();
        v99 = v40;
        v100 = v41;
        v101 = v42;
        MEMORY[0x1E0C80A78](v98);
        v43 = v88;
        *(&v72 - 4) = v89;
        *(&v72 - 3) = (uint64_t)v43;
        *(&v72 - 2) = (uint64_t)v23;
        v44 = sub_1A594C540();
        MEMORY[0x1A85B1874](MEMORY[0x1E0DEBF88], v44);
        v45 = v86;
        sub_1A594BDD8();
        result = swift_unknownObjectRelease();
        if ((v97 & 1) != 0)
        {
          v86 = v45;
          v47 = v90;
          v46 = v91;
          v39 = v87;
          sub_1A594BB2C();
          v76(v16);
          v29(v16, v46);
          v48 = *(void (**)(void))(v83 + 8);
          v38 = v82;
          v49 = v73;
          v48();
          v90 = v47 + 1;
          v37 = v49;
          ((void (*)(char *, uint64_t))v48)(v23, v49);
          v11 = v85;
        }
        else
        {
          v50 = v96;
          v51 = v82;
          if (v96 < v26)
            goto LABEL_22;
          v52 = v91;
          v92 = sub_1A594BB14();
          v93 = v53;
          v94 = v54;
          v95 = v55;
          MEMORY[0x1E0C80A78](v92);
          v37 = v73;
          *(&v72 - 6) = v52;
          *(&v72 - 5) = v37;
          v56 = v74;
          *(&v72 - 4) = v89;
          *(&v72 - 3) = v56;
          *(&v72 - 2) = v75;
          MEMORY[0x1A85B1874](MEMORY[0x1E0DEBF78], v44);
          sub_1A594B7FC();
          v86 = v45;
          swift_unknownObjectRelease();
          v57 = *(void (**)(char *, uint64_t))(v83 + 8);
          v38 = v51;
          v57(v51, v37);
          v23 = v81;
          v57(v81, v37);
          v11 = v85;
          v26 = v50;
          v39 = v87;
        }
      }
      if (v26 >= MEMORY[0x1A85ADF2C](v11, v91))
      {
        v18 = v37;
        goto LABEL_17;
      }
      v58 = MEMORY[0x1A85ADF2C](v39, v91);
      v18 = v37;
      v27 = v38;
      if (v90 >= v58)
        goto LABEL_17;
    }
  }
  v90 = 0;
  v26 = 0;
  v86 = 0;
LABEL_17:
  result = MEMORY[0x1A85ADF2C](v11, v91);
  if (result < v26)
    goto LABEL_23;
  v59 = v91;
  v98 = sub_1A594BB14();
  v99 = v60;
  v100 = v61;
  v101 = v62;
  MEMORY[0x1E0C80A78](v98);
  *(&v72 - 6) = v59;
  *(&v72 - 5) = v18;
  v63 = v89;
  v64 = v74;
  *(&v72 - 4) = v89;
  *(&v72 - 3) = v64;
  *(&v72 - 2) = v75;
  v65 = sub_1A594C540();
  MEMORY[0x1A85B1874](MEMORY[0x1E0DEBF78], v65);
  v66 = v87;
  sub_1A594B7FC();
  swift_unknownObjectRelease();
  result = MEMORY[0x1A85ADF2C](v66, v59);
  if (result < v90)
  {
LABEL_24:
    __break(1u);
  }
  else
  {
    v67 = v91;
    v98 = sub_1A594BB14();
    v99 = v68;
    v100 = v69;
    v101 = v70;
    MEMORY[0x1E0C80A78](v98);
    *(&v72 - 6) = v67;
    *(&v72 - 5) = v18;
    v71 = v76;
    *(&v72 - 4) = v63;
    *(&v72 - 3) = (uint64_t)v71;
    *(&v72 - 2) = v77;
    sub_1A594B7FC();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A578AA28(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v8;

  v2 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a2 + 8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v8 - v4;
  swift_getAtKeyPath();
  v6 = sub_1A594B37C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t sub_1A578AADC()
{
  return sub_1A578AB10();
}

uint64_t sub_1A578AAF0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A578AA28(a1, *(_QWORD **)(v1 + 24)) & 1;
}

uint64_t sub_1A578AB10()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t static DispatchData.makeMappedRead(fileDescriptor:count:)(int a1, size_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_1A594ADB8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = mmap(0, a2, 1, 1, a1, 0);
  if (!v8 || (v9 = v8, (v10 = sub_1A594A824()) != 0) && v9 == (void *)v10)
  {
    sub_1A578AC4C();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF5C8], v4);
    return sub_1A594ADC4();
  }
}

unint64_t sub_1A578AC4C()
{
  unint64_t result;

  result = qword_1EE7AA290;
  if (!qword_1EE7AA290)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B8684, &_s19MemoryMappingFailedVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AA290);
  }
  return result;
}

uint64_t static URL.makeTemporaryFile(baseDirectory:pathExtension:)(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v10;

  v3 = sub_1A5949EF4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5949E40();
  sub_1A5949E4C();
  v7 = *(void (**)(char *, uint64_t))(v4 + 8);
  v7(v6, v3);
  v8 = sub_1A578AEB4((uint64_t)sub_1A578AD90, 0);
  if (v1)
    v7(a1, v3);
  return v8;
}

uint64_t sub_1A578AD90@<X0>(char *a1@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  int v13;

  v6 = sub_1A5949A44();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = mkstemps(a1, a2);
  if ((int)result <= 0)
  {
    MEMORY[0x1A85ACCC0]();
    v11 = sub_1A594A830();
    if ((v11 & 0x100000000) != 0)
    {
      sub_1A578B580();
      swift_allocError();
    }
    else
    {
      v13 = v11;
      sub_1A578B5C4(MEMORY[0x1E0DEE9D8]);
      sub_1A578B6EC();
      sub_1A5949D8C();
      sub_1A5949A38();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return swift_willThrow();
  }
  else
  {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1A578AEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  BOOL v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = v2;
  v23 = a2;
  v22 = a1;
  v5 = sub_1A5949EF4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A12F8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5949DF8();
  v12 = sub_1A594B5A4();
  result = swift_bridgeObjectRelease();
  if (v12 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v12 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v14 = __OFADD__((_DWORD)v12, 1);
  v15 = v12 + 1;
  if (v14)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v4, v5);
  MEMORY[0x1E0C80A78](v16);
  v17 = v23;
  *(&v21 - 4) = v22;
  *(&v21 - 3) = v17;
  *((_DWORD *)&v21 - 4) = v15;
  MEMORY[0x1E0C80A78](v18);
  *(&v21 - 2) = (uint64_t)sub_1A578B4C8;
  *(&v21 - 1) = v19;
  sub_1A5949E88();
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v20 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v20(v4, v5);
    v20((uint64_t)v8, v5);
    v8 = (char *)*(unsigned int *)v11;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v4, &v11[*(int *)(v9 + 48)], v5);
  }
  return (uint64_t)v8;
}

ValueMetadata *_s19MemoryMappingFailedVMa()
{
  return &_s19MemoryMappingFailedVN;
}

uint64_t sub_1A578B0C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(int *__return_ptr, char *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _DWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t isStackAllocationSafe;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _DWORD *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(int *__return_ptr, char *, uint64_t);
  char *v48;
  int v49;
  uint64_t v50;

  v47 = a3;
  v46 = a4;
  v50 = *MEMORY[0x1E0C80C00];
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A12F8);
  MEMORY[0x1E0C80A78](v10);
  v43 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v41 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1988);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1A5949EF4();
  v45 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v44 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    v41 = v18;
    v42 = a6;
    v21 = v10;
LABEL_7:
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v23 = (char *)&v41 - v22;
    sub_1A594C3CC();
    v24 = v48;
    v47(&v49, v23, a5);
    if (v24)
      return swift_willThrow();
    v48 = &v14[*(int *)(v21 + 48)];
    v26 = v45;
    v27 = v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v17, 1, 1, v41);
    v28 = v44;
    sub_1A5949E94();
    sub_1A578B540((uint64_t)v17);
    v29 = &v43[*(int *)(v21 + 48)];
    v30 = v49;
    v31 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v31(v29, v28, v27);
    v32 = v48;
    v31(v48, v29, v27);
    v33 = (char *)v42 + *(int *)(v21 + 48);
    *v42 = v30;
    return ((uint64_t (*)(char *, char *, uint64_t))v31)(v33, v32, v27);
  }
  if (a2 - a1 < 0)
    __break(1u);
  if (a2 - a1 < 1025
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v41 = v18;
    v42 = a6;
    v21 = v10;
    goto LABEL_7;
  }
  v34 = swift_slowAlloc();
  sub_1A594C3CC();
  v35 = v48;
  v47(&v49, (char *)v34, a5);
  if (v35)
  {
    v36 = v34;
  }
  else
  {
    v37 = v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v17, 1, 1, v18);
    v38 = v34;
    v39 = v44;
    sub_1A5949E94();
    sub_1A578B540((uint64_t)v17);
    v40 = (char *)a6 + *(int *)(v10 + 48);
    *a6 = v49;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v40, v39, v18);
    v36 = v38;
  }
  return MEMORY[0x1A85B1964](v36, -1, -1);
}

size_t sub_1A578B430(const char *a1, uint64_t (*a2)(const char *, const char *))
{
  size_t result;

  if (a1)
  {
    result = strlen(a1);
    if (__OFADD__(result, 1))
      __break(1u);
    else
      return a2(a1, &a1[result + 1]);
  }
  else
  {
    sub_1A578B4FC();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A578B4C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1A578B0C0(a1, a2, *(void (**)(int *__return_ptr, char *, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(unsigned int *)(v3 + 32), a3);
}

size_t sub_1A578B4E4(const char *a1)
{
  uint64_t v1;

  return sub_1A578B430(a1, *(uint64_t (**)(const char *, const char *))(v1 + 16));
}

unint64_t sub_1A578B4FC()
{
  unint64_t result;

  result = qword_1EE7AA2A0;
  if (!qword_1EE7AA2A0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B8750, &type metadata for InvalidTemporaryFileTemplate);
    atomic_store(result, (unint64_t *)&qword_1EE7AA2A0);
  }
  return result;
}

uint64_t sub_1A578B540(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1988);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A578B580()
{
  unint64_t result;

  result = qword_1EE7AA2B0;
  if (!qword_1EE7AA2B0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B8710, &_s25UnableToMakeTemporaryFileVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AA2B0);
  }
  return result;
}

unint64_t sub_1A578B5C4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(qword_1EE7AA2C0);
  v2 = sub_1A594CA5C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A578B798(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_1A578B734(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1A578B7E0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A578B6EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7AA2B8;
  if (!qword_1EE7AA2B8)
  {
    v1 = sub_1A5949A44();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CADE88], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7AA2B8);
  }
  return result;
}

unint64_t sub_1A578B734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A594CE64();
  sub_1A594B1D8();
  v4 = sub_1A594CED0();
  return sub_1A578B7F0(a1, a2, v4);
}

uint64_t sub_1A578B798(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7993F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_1A578B7E0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_1A578B7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1A594CD38() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1A594CD38() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_1A594CD38() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

ValueMetadata *_s25UnableToMakeTemporaryFileVMa()
{
  return &_s25UnableToMakeTemporaryFileVN;
}

ValueMetadata *type metadata accessor for InvalidTemporaryFileTemplate()
{
  return &type metadata for InvalidTemporaryFileTemplate;
}

uint64_t KeyedSequence.readKey.getter(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t KeyedSequence.sorted.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t KeyedSequence.sorted.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

double (*KeyedSequence.sorted.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KeyedSequence.unsorted.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t KeyedSequence.unsorted.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

double (*KeyedSequence.unsorted.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KeyedSequence.init(element:key:)(uint64_t a1, uint64_t a2)
{
  swift_retain();
  sub_1A594B9F4();
  sub_1A594B9F4();
  swift_release();
  return a2;
}

uint64_t Array.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for KeyedSequence(0, a6, a5, a7);
  KeyedSequence.consolidate()();
  swift_release();
  swift_bridgeObjectRelease();
  return a3;
}

Swift::Void __swiftcall KeyedSequence.consolidate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  int v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  void (*v50)(char *);
  char *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  void (**v55)(char *);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t TupleTypeMetadata2;
  void (**v75)(char *);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;

  v2 = v1;
  v3 = v0;
  v4 = *(_QWORD *)(v0 + 16);
  v62 = *(_QWORD *)(v4 - 8);
  ((void (*)())MEMORY[0x1E0C80A78])();
  v61 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v60 = (char *)&v56 - v7;
  v9 = *(_QWORD *)(v8 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v8);
  v80 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v79 = (char *)&v56 - v13;
  v14 = sub_1A594C354();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v81 = (char *)&v56 - v15;
  v77 = v14;
  v76 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v16);
  v58 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v57 = (char *)&v56 - v19;
  MEMORY[0x1E0C80A78](v20);
  v73 = (char *)&v56 - v21;
  MEMORY[0x1E0C80A78](v22);
  v72 = (char *)&v56 - v23;
  v63 = v4;
  v82 = v4;
  v83 = v9;
  v59 = *(_QWORD *)(v3 + 32);
  v84 = v59;
  v85 = v2;
  v24 = sub_1A594BAF0();
  MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF28], v24);
  MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF48], v24);
  sub_1A594B31C();
  v98 = sub_1A594B9F4();
  v25 = *(char **)(v2 + 16);
  v26 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v27 = MEMORY[0x1A85ADEB4](v26, v9);
  swift_bridgeObjectRelease();
  v75 = (void (**)(char *))v2;
  v28 = *(char **)(v2 + 24);
  v29 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v30 = MEMORY[0x1A85ADEB4](v29, v9);
  swift_bridgeObjectRelease();
  if (__OFADD__(v27, v30))
  {
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    v56 = v2 + 24;
    sub_1A594B9B8();
    v90 = v25;
    sub_1A594B304();
    v86 = v28;
    v71 = v24;
    sub_1A594B304();
    v31 = sub_1A594C540();
    v69 = v10;
    v70 = v9;
    v68 = v31;
    while (1)
    {
      v67 = v94;
      v86 = v94;
      v87 = v95;
      v66 = v95;
      v65 = v96;
      v88 = v96;
      v89 = v97;
      v64 = v97;
      v34 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEBF88], v31);
      v35 = v72;
      sub_1A594BE2C();
      v37 = v90;
      v36 = v91;
      v38 = v92;
      v39 = v93;
      v86 = v90;
      v87 = v91;
      v88 = v92;
      v89 = v93;
      v40 = v73;
      v78 = v34;
      sub_1A594BE2C();
      v41 = v81;
      v31 = (uint64_t)&v81[*(int *)(TupleTypeMetadata2 + 48)];
      v42 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
      v43 = v77;
      v42(v81, v35, v77);
      v42((char *)v31, v40, v43);
      v44 = v69;
      v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48);
      v46 = v70;
      LODWORD(v43) = v45(v41, 1, v70);
      v47 = v45((char *)v31, 1, v46);
      if ((_DWORD)v43 == 1)
        break;
      if (v47 == 1)
      {
        v86 = v67;
        v87 = v66;
        v88 = v65;
        v89 = v64;
        swift_unknownObjectRetain();
        MEMORY[0x1A85B1874](MEMORY[0x1E0DEBF78], v68);
        sub_1A594BA78();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v81, v46);
        goto LABEL_13;
      }
      v48 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
      v37 = v79;
      v36 = v46;
      v48(v79, v81, v46);
      v49 = v80;
      v48(v80, (char *)v31, v46);
      v50 = *v75;
      swift_retain();
      v39 = v60;
      v50(v37);
      swift_release();
      swift_retain();
      v51 = v61;
      v50(v49);
      swift_release();
      v38 = v63;
      LOBYTE(v48) = sub_1A594B280();
      v52 = *(void (**)(char *, uint64_t))(v62 + 8);
      v52(v51, v38);
      v52(v39, v38);
      if ((v48 & 1) != 0)
      {
        v53 = v57;
        v31 = v68;
        sub_1A594BDCC();
        v47 = v45(v53, 1, v46);
        if (v47 == 1)
        {
          __break(1u);
          break;
        }
      }
      else
      {
        v32 = v58;
        v31 = v68;
        sub_1A594BDCC();
        if (v45(v32, 1, v46) == 1)
          goto LABEL_15;
      }
      sub_1A594BA84();
      v33 = *(void (**)(char *, uint64_t))(v44 + 8);
      v33(v80, v46);
      v33(v79, v46);
    }
    if (v47 != 1)
    {
      v86 = v37;
      v87 = v36;
      v88 = v38;
      v89 = v39;
      swift_unknownObjectRetain();
      MEMORY[0x1A85B1874](MEMORY[0x1E0DEBF78], v68);
      sub_1A594BA78();
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v31, v77);
    }
LABEL_13:
    sub_1A594BAD8();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v54 = v98;
    v55 = v75;
    swift_bridgeObjectRelease();
    v55[2] = (void (*)(char *))v54;
  }
}

uint64_t KeyedSequence.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v11;
  uint64_t v12;

  KeyedSequence.index(for:)(a1, a2, a3, a4, a5, a6, a7, a8);
  if (v11 == -1)
  {
    v12 = 1;
  }
  else
  {
    sub_1A594BB2C();
    v12 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 56))(a9, v12, 1, a7);
}

uint64_t KeyedSequence.index(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v31 = a4;
  v24 = a6;
  v25 = a7;
  v26 = a8;
  v27 = a2;
  v28 = a3;
  v29 = a4;
  v30 = a5;
  v16 = a6;
  v17 = a7;
  v18 = a8;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  v10 = sub_1A594BAF0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF48], v10);
  RandomAccessCollection.binarySearch<A>(forKey:using:_:)(a1, (uint64_t (*)(uint64_t, char *))sub_1A578D3E0, (uint64_t)v23, (uint64_t (*)(char *, uint64_t))sub_1A578D3EC, (uint64_t)v15, v11, (uint64_t)&v32);
  v12 = swift_bridgeObjectRelease();
  if ((v33 & 1) == 0)
    return v32;
  v14[1] = v14;
  v31 = a5;
  MEMORY[0x1E0C80A78](v12);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v10);
  sub_1A594BDD8();
  swift_bridgeObjectRelease();
  if ((v33 & 1) != 0)
    return 0;
  else
    return v32;
}

uint64_t KeyedSequence.subscript.getter()
{
  return sub_1A594BB2C();
}

BOOL KeyedSequence.contains(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8;

  KeyedSequence.index(for:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v8 != -1;
}

void KeyedSequence.insert(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char isClassOrObjCExistentialType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v37 = a1;
  v5 = *(_QWORD *)(a2 + 24);
  v34 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v32 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v7 + 16);
  v36 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(uint64_t))v2;
  v12 = *(_QWORD *)(v2 + 8);
  v14 = *(_QWORD *)(v3 + 16);
  v31 = (uint64_t *)(v3 + 16);
  v15 = *(_QWORD *)(v3 + 24);
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v13(v37);
  v16 = *(_QWORD *)(a2 + 32);
  v35 = v5;
  v33 = KeyedSequence.index(for:)((uint64_t)v11, (uint64_t)v13, v12, v14, v15, v8, v5, v16);
  v18 = v17;
  LODWORD(v5) = ~v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
  if ((_DWORD)v5)
  {
    v19 = (uint64_t *)(v3 + 24);
    v21 = v34;
    v20 = v35;
    v22 = v37;
    sub_1A594BAF0();
    if ((v18 & 1) == 0)
      v19 = v31;
    sub_1A594B9E8();
    v23 = *v19;
    v24 = v33;
    sub_1A5788648(v33, v23);
    isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
    v26 = v23 & 0xFFFFFFFFFFFFFF8;
    if ((isClassOrObjCExistentialType & 1) == 0)
      v26 = v23;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 24))(v26+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72) * v24, v22, v20);
  }
  else
  {
    v27 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v32, v37, v35);
    sub_1A594BAF0();
    sub_1A594BA84();
    v28 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v29 = MEMORY[0x1A85ADEB4](v28, v27);
    swift_bridgeObjectRelease();
    if (v29 >= 11)
      KeyedSequence.consolidate()();
  }
}

uint64_t KeyedSequence.insert<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedTypeWitness;
  double v16;
  uint64_t v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a2;
  v22 = a1;
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594C354();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v23 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v18 = (char *)&v22 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, v22, a3, v16);
  sub_1A594B730();
  swift_getAssociatedConformanceWitness();
  sub_1A594C3C0();
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v19(v10, 1, v4) != 1)
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    do
    {
      v20(v7, v10, v4);
      KeyedSequence.insert(_:)((uint64_t)v7, v24);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      sub_1A594C3C0();
    }
    while (v19(v10, 1, v4) != 1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v18, AssociatedTypeWitness);
}

BOOL KeyedSequence.update(key:_:)(uint64_t a1, void (*a2)(unint64_t), uint64_t a3, _QWORD *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char isClassOrObjCExistentialType;
  uint64_t v20;

  v6 = v4 + 2;
  v7 = v4[2];
  v8 = *v4;
  v9 = v4[1];
  v11 = v4[3];
  v10 = v4 + 3;
  v13 = a4[2];
  v12 = a4[3];
  v14 = a4[4];
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v15 = KeyedSequence.index(for:)(a1, v8, v9, v7, v11, v13, v12, v14);
  v17 = v16;
  LODWORD(v14) = ~v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if ((_DWORD)v14)
  {
    sub_1A594BAF0();
    if ((v17 & 1) == 0)
      v10 = v6;
    sub_1A594B9E8();
    v18 = *v10;
    sub_1A5788648(v15, *v10);
    isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
    v20 = v18 & 0xFFFFFFFFFFFFFF8;
    if ((isClassOrObjCExistentialType & 1) == 0)
      v20 = v18;
    a2(v20+ ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v15);
  }
  return ~v17 != 0;
}

uint64_t KeyedSequence.removeElement(forKey:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v5 = a2[3];
  KeyedSequence.index(for:)(a1, *v3, v3[1], v3[2], v3[3], a2[2], v5, a2[4]);
  if (v6 == -1)
  {
    v7 = 1;
  }
  else
  {
    sub_1A594BAF0();
    sub_1A594BAA8();
    v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a3, v7, 1, v5);
}

uint64_t sub_1A578CAC0(uint64_t a1, uint64_t a2, void (**a3)(uint64_t), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (**v14)(uint64_t);
  void (*v15)(uint64_t);
  void (*v16)(uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v8 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - v12;
  v15 = *v14;
  swift_retain();
  v15(a1);
  swift_release();
  v16 = *a3;
  swift_retain();
  v16(a2);
  swift_release();
  v17 = sub_1A594B280();
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v10, a4);
  v18(v13, a4);
  return v17 & 1;
}

uint64_t KeyedSequence.isEmpty.getter()
{
  uint64_t v0;
  char v1;

  v0 = sub_1A594BAF0();
  MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v0);
  if ((sub_1A594BE5C() & 1) != 0)
    v1 = sub_1A594BE5C();
  else
    v1 = 0;
  return v1 & 1;
}

uint64_t KeyedSequence.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t result;

  v8 = MEMORY[0x1A85ADEB4](a3, a6);
  v9 = MEMORY[0x1A85ADEB4](a4, a6);
  v10 = __OFADD__(v8, v9);
  result = v8 + v9;
  if (v10)
    __break(1u);
  return result;
}

uint64_t KeyedSequence.reduce<A>(into:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  void (*v22)(char *, double);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a4;
  v24 = a5;
  MEMORY[0x1E0C80A78](a1);
  v23 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - v15;
  v30 = v17;
  v27 = v18;
  v22 = *(void (**)(char *, double))(v18 + 16);
  v22(v12, v14);
  v19 = sub_1A594BAF0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v19);
  v25 = a2;
  v26 = a3;
  v20 = v29;
  sub_1A594B7CC();
  result = swift_bridgeObjectRelease();
  if (!v20)
  {
    v30 = v28;
    ((void (*)(char *, char *, uint64_t))v22)(v23, v16, a7);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B7CC();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v16, a7);
  }
  return result;
}

uint64_t KeyedSequence.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = 0;
  a5[1] = 0;
  a5[2] = a1;
  a5[3] = a2;
  a5[4] = a3;
  a5[5] = a4;
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t KeyedSequence.Iterator.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = 0;
  a5[1] = 0;
  a5[2] = result;
  a5[3] = a2;
  a5[4] = a3;
  a5[5] = a4;
  return result;
}

uint64_t KeyedSequence.underestimatedCount.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t result;

  v8 = MEMORY[0x1A85ADEB4](a3, a6);
  v9 = MEMORY[0x1A85ADEB4](a4, a6);
  v10 = __OFADD__(v8, v9);
  result = v8 + v9;
  if (v10)
    __break(1u);
  return result;
}

uint64_t KeyedSequence.Iterator.sortedIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t KeyedSequence.Iterator.sortedIndex.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*KeyedSequence.Iterator.sortedIndex.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KeyedSequence.Iterator.unsortedIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t KeyedSequence.Iterator.unsortedIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*KeyedSequence.Iterator.unsortedIndex.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KeyedSequence.Iterator.array.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t KeyedSequence.Iterator.array.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t result;

  swift_release();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return result;
}

double (*KeyedSequence.Iterator.array.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KeyedSequence.Iterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  v4 = *v2;
  v5 = *(_QWORD *)(a1 + 24);
  if (v4 >= MEMORY[0x1A85ADF2C](v2[4], v5))
  {
    v7 = v2[1];
    if (v7 >= MEMORY[0x1A85ADF2C](v2[5], v5))
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 1, 1, v5);
    sub_1A594BB2C();
    result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 0, 1, v5);
    v8 = v2[1];
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (!v9)
    {
      v2[1] = v10;
      return result;
    }
  }
  else
  {
    sub_1A594BB2C();
    result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 0, 1, v5);
    if (!__OFADD__(*v2, 1))
    {
      ++*v2;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A578D120@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  KeyedSequence.makeIterator()(*v1, v1[1], v1[2], v1[3], a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1A578D16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return KeyedSequence.underestimatedCount.getter(a1, a2, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), a5, *(_QWORD *)(a1 + 24));
}

uint64_t sub_1A578D178()
{
  uint64_t v0;

  v0 = sub_1A578D7E8();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A578D1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(uint64_t, double);
  char v14;
  uint64_t v16;

  v8 = *(_QWORD *)(a7 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13(v12, v9);
  v14 = sub_1A594B280();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a7);
  return v14 & 1;
}

uint64_t sub_1A578D264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void (*v12)(double);
  char v13;
  uint64_t v15;

  v8 = *(_QWORD *)(a7 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12(v9);
  v13 = sub_1A594B280();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a7);
  return v13 & 1;
}

uint64_t sub_1A578D304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void (*v12)(double);
  char v13;
  uint64_t v15;

  v8 = *(_QWORD *)(a7 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12(v9);
  v13 = sub_1A594B37C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a7);
  return v13 & 1;
}

uint64_t type metadata accessor for KeyedSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KeyedSequence);
}

uint64_t sub_1A578D3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A578CAC0(a1, a2, *(void (***)(uint64_t))(v2 + 40), *(_QWORD *)(v2 + 16)) & 1;
}

uint64_t sub_1A578D3E0(uint64_t a1, uint64_t a2)
{
  return sub_1A578D3F8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A578D1C0);
}

uint64_t sub_1A578D3EC(uint64_t a1, uint64_t a2)
{
  return sub_1A578D3F8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A578D264);
}

uint64_t sub_1A578D3F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[5], v3[6], v3[7], v3[8], v3[2], v3[3], v3[4]) & 1;
}

uint64_t sub_1A578D430(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A578D304(a1, v1[5], v1[6], v1[7], v1[8], v1[9], v1[2]) & 1;
}

void sub_1A578D464()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A578D474()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1A578D4A4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *sub_1A578D4F0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8_2(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *sub_1A578D570(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A578D5BC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A578D5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *sub_1A578D640(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8_2(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *sub_1A578D6D8(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A578D724(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1A578D76C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for KeyedSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KeyedSequence.Iterator);
}

uint64_t __swift_memcpy9_8_2(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t type metadata accessor for KeyedSequence.Index(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KeyedSequence.Index);
}

void *MonotonicTime.bootTime.unsafeMutableAddressor()
{
  return &static MonotonicTime.bootTime;
}

uint64_t static MonotonicTime.bootTime.getter()
{
  return 0;
}

__uint64_t static MonotonicTime.now()()
{
  return clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW_APPROX);
}

unint64_t MonotonicTime.init(seconds:since:)(unint64_t result, double a2)
{
  double v2;

  v2 = round(a2 * 1000000000.0);
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 < 9.22337204e18)
    return _s12IMAP2Helpers13MonotonicTimeV11nanoSeconds5sinceACs5Int64V_ACtcfC_0((uint64_t)v2, result);
LABEL_7:
  __break(1u);
  return result;
}

double static MonotonicTime.nanoSecondsPerSecond.getter()
{
  return 1000000000.0;
}

__uint64_t MonotonicTime.init(secondsSinceNow:)(double a1)
{
  __uint64_t result;
  double v3;

  result = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW_APPROX);
  v3 = round(a1 * 1000000000.0);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 9.22337204e18)
    return _s12IMAP2Helpers13MonotonicTimeV11nanoSeconds5sinceACs5Int64V_ACtcfC_0((uint64_t)v3, result);
LABEL_7:
  __break(1u);
  return result;
}

uint64_t MonotonicTime.hash(into:)()
{
  return sub_1A594CEB8();
}

BOOL static MonotonicTime.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t MonotonicTime.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CEB8();
  return sub_1A594CED0();
}

uint64_t sub_1A578D970()
{
  sub_1A594CE64();
  sub_1A594CEB8();
  return sub_1A594CED0();
}

uint64_t sub_1A578D9B4()
{
  return sub_1A594CEB8();
}

__uint64_t DispatchTime.init(_:)(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_1A594AD10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1A594AE84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW_APPROX);
  if (result <= a1)
  {
    v11 = a1 - result;
    if (v11 >= 0)
      goto LABEL_5;
  }
  else
  {
    if ((uint64_t)(result - a1) >= 0)
    {
      v11 = a1 - result;
LABEL_5:
      sub_1A594AE6C();
      *v5 = v11;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF480], v2);
      sub_1A594AE78();
      (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t MonotonicTime.nanoSeconds(since:)(unint64_t a1, unint64_t a2)
{
  BOOL v3;
  uint64_t result;
  uint64_t v5;

  v3 = a2 >= a1;
  result = a2 - a1;
  if (!v3)
  {
    v5 = a1 - a2;
    if (v5 >= 0)
      return -v5;
    __break(1u);
    goto LABEL_7;
  }
  if (result < 0)
LABEL_7:
    __break(1u);
  return result;
}

unint64_t Date.init(_:now:now:)(unint64_t result, unint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (result >= a2)
  {
    if ((uint64_t)(result - a2) >= 0)
    {
LABEL_5:
      sub_1A594A068();
      v4 = sub_1A594A0EC();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a3, v4);
    }
  }
  else
  {
    if ((uint64_t)(a2 - result) >= 0)
      goto LABEL_5;
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t MonotonicTime.seconds(since:)(unint64_t result, unint64_t a2)
{
  if (a2 < result)
  {
    if ((uint64_t)(result - a2) >= 0)
      return result;
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if ((uint64_t)(a2 - result) < 0)
    goto LABEL_7;
  return result;
}

__uint64_t static MonotonicTime.secondsSince(_:)(__uint64_t a1)
{
  __uint64_t result;

  result = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW_APPROX);
  if (result < a1)
  {
    if ((uint64_t)(a1 - result) >= 0)
      return result;
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if ((uint64_t)(result - a1) < 0)
    goto LABEL_7;
  return result;
}

BOOL static MonotonicTime.< infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a1 < a2;
}

BOOL static MonotonicTime.<= infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a2 >= a1;
}

BOOL static MonotonicTime.> infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a2 < a1;
}

BOOL static MonotonicTime.>= infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a1 >= a2;
}

BOOL sub_1A578DC70(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

BOOL sub_1A578DC84(_QWORD *a1, _QWORD *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1A578DC98(_QWORD *a1, _QWORD *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1A578DCAC(_QWORD *a1, _QWORD *a2)
{
  return *a2 < *a1;
}

uint64_t _s12IMAP2Helpers13MonotonicTimeV11nanoSeconds5sinceACs5Int64V_ACtcfC_0(uint64_t result, unint64_t a2)
{
  BOOL v2;
  unint64_t v3;

  if (result >= 1)
  {
    v2 = __CFADD__(a2, result);
    result += a2;
    if (!v2)
      return result;
    __break(1u);
  }
  v3 = -result;
  if (__OFSUB__(0, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
LABEL_11:
    result = sub_1A594C9B4();
    __break(1u);
    return result;
  }
  result += a2;
  if (a2 < v3)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

unint64_t sub_1A578DD4C()
{
  unint64_t result;

  result = qword_1EE7AA350;
  if (!qword_1EE7AA350)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MonotonicTime, &type metadata for MonotonicTime);
    atomic_store(result, (unint64_t *)&qword_1EE7AA350);
  }
  return result;
}

ValueMetadata *type metadata accessor for MonotonicTime()
{
  return &type metadata for MonotonicTime;
}

uint64_t MutableCollection.modifyEach(_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  char *v23;
  void (*v24)(_QWORD, _QWORD);
  uint64_t v25;
  void (*v26)(_QWORD, _QWORD);
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  void (*v38)(_BYTE *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char *v45;
  void (*v46)(_QWORD, _QWORD);
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[32];
  char *v59;

  v4 = v3;
  v49 = a1;
  v50 = a2;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v9;
  v10 = *(_QWORD *)(v9 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v48 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v53 = (char *)&v44 - v15;
  MEMORY[0x1E0C80A78](v16);
  v52 = (char *)&v44 - v17;
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v44 - v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
  v22(v8, v4, a3, v19);
  v59 = v21;
  v23 = v8;
  v56 = v10;
  sub_1A594BD60();
  v24 = *(void (**)(_QWORD, _QWORD))(v6 + 8);
  v25 = v4;
  v26 = v24;
  v57 = a3;
  v24(v8, a3);
  v54 = v12;
  v27 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v28 = (void (*)(char *, uint64_t, uint64_t))v22;
  v46 = v26;
  v47 = (void (*)(char *, uint64_t, uint64_t))v22;
  v45 = v8;
  while (1)
  {
    v29 = v52;
    v27(v52, v59, AssociatedTypeWitness);
    v30 = AssociatedTypeWitness;
    v31 = v57;
    v28(v23, v25, v57);
    v32 = v53;
    sub_1A594BDB4();
    v26(v23, v31);
    AssociatedTypeWitness = v30;
    swift_getAssociatedConformanceWitness();
    v33 = sub_1A594B37C();
    v34 = *(void (**)(char *, uint64_t))(v54 + 8);
    v34(v32, v30);
    v34(v29, v30);
    if ((v33 & 1) != 0)
      return ((uint64_t (*)(char *, uint64_t))v34)(v59, v30);
    v35 = v48;
    v36 = v27;
    v27(v48, v59, v30);
    v37 = v25;
    v38 = (void (*)(_BYTE *, uint64_t))sub_1A594B328();
    v39 = v55;
    v49(v40);
    if (v39)
      break;
    v55 = 0;
    v38(v58, 0);
    v34(v35, v30);
    v23 = v45;
    v25 = v37;
    v41 = v57;
    v28 = v47;
    v47(v45, v37, v57);
    sub_1A594BDC0();
    v42 = v41;
    v26 = v46;
    v46(v23, v42);
    v27 = v36;
  }
  v38(v58, 1);
  v34(v35, v30);
  return ((uint64_t (*)(char *, uint64_t))v34)(v59, v30);
}

uint64_t RestartableTimer.__allocating_init(queue:repeating:leeway:closure:)(void *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v8;

  swift_allocObject();
  v8 = sub_1A578E4A4(a1, a2, a3, a4);
  _Block_release(a4);
  return v8;
}

uint64_t RestartableTimer.init(queue:repeating:leeway:closure:)(void *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v5;

  v5 = sub_1A578E4A4(a1, a2, a3, a4);
  _Block_release(a4);
  return v5;
}

uint64_t RestartableTimer.deinit()
{
  uint64_t v0;

  swift_getObjectType();
  sub_1A594C114();
  if (*(_BYTE *)(v0 + 24) == 1)
    sub_1A594C120();
  swift_unknownObjectRelease();

  return v0;
}

uint64_t RestartableTimer.__deallocating_deinit()
{
  uint64_t v0;

  swift_getObjectType();
  sub_1A594C114();
  if (*(_BYTE *)(v0 + 24) == 1)
    sub_1A594C120();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

Swift::Void __swiftcall RestartableTimer.start()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;

  v1 = v0;
  v2 = sub_1A594AED8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + 32);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v7 = v6;
  LOBYTE(v6) = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if (*(_BYTE *)(v1 + 24) == 1)
    {
      swift_getObjectType();
      sub_1A594C120();
      *(_BYTE *)(v1 + 24) = 0;
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall RestartableTimer.stop()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;

  v1 = v0;
  v2 = sub_1A594AED8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + 32);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v7 = v6;
  LOBYTE(v6) = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if ((*(_BYTE *)(v1 + 24) & 1) == 0)
    {
      swift_getObjectType();
      sub_1A594C12C();
      *(_BYTE *)(v1 + 24) = 1;
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t RestartableTimer.isRunning.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;

  v1 = sub_1A594AED8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + 32);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x1E0DEF740], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) != 0)
    return (*(_BYTE *)(v0 + 24) & 1) == 0;
  __break(1u);
  return result;
}

uint64_t sub_1A578E4A4(void *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t ObjectType;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a3;
  v34 = a2;
  v30 = a1;
  v5 = sub_1A594AE84();
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v31 = (char *)&v28 - v9;
  v10 = sub_1A594C0CC();
  v29 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A594AD34();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  MEMORY[0x1E0C80A78](v13);
  v15 = sub_1A594AD70();
  MEMORY[0x1E0C80A78](v15);
  _Block_copy(a4);
  sub_1A594AD64();
  v37 = MEMORY[0x1E0DEE9D8];
  sub_1A55E1698(&qword_1EE7A19C8, v14, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1A00);
  sub_1A5524F80(&qword_1EE7A40C8, &qword_1EE7A1A00);
  sub_1A594C5C4();
  sub_1A594AECC();
  swift_allocObject();
  sub_1A594AEA8();
  sub_1A578E960();
  v37 = MEMORY[0x1E0DEE9D8];
  sub_1A55E1698(&qword_1EE79A128, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938], MEMORY[0x1E0DEF948]);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795FE0);
  sub_1A5524F80(&qword_1EE799B78, &qword_1EE795FE0);
  sub_1A594C5C4();
  v16 = v30;
  v17 = sub_1A594C0D8();

  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v10);
  ObjectType = swift_getObjectType();
  sub_1A594C0F0();
  sub_1A594AE6C();
  v19 = v31;
  v20 = v34;
  sub_1A594AE78();
  v21 = *(void (**)(char *, uint64_t))(v32 + 8);
  v22 = v7;
  v23 = v33;
  v21(v22, v33);
  v24 = v35;
  MEMORY[0x1A85AE700](v19, v20, v35, ObjectType);
  swift_release();
  v25 = sub_1A594AD10();
  v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
  v26(v24, v25);
  v26(v20, v25);
  v21(v19, v23);
  result = v36;
  *(_QWORD *)(v36 + 32) = v16;
  *(_QWORD *)(result + 16) = v17;
  *(_BYTE *)(result + 24) = 1;
  return result;
}

uint64_t type metadata accessor for RestartableTimer()
{
  return objc_opt_self();
}

_BYTE *__swift_memcpy1_1_2(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for RestartableTimer.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A578E898 + 4 * byte_1A59B89B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A578E8CC + 4 * asc_1A59B89B0[v4]))();
}

uint64_t sub_1A578E8CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A578E8D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A578E8DCLL);
  return result;
}

uint64_t sub_1A578E8E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A578E8F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A578E8F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A578E8FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RestartableTimer.State()
{
  return &type metadata for RestartableTimer.State;
}

unint64_t sub_1A578E91C()
{
  unint64_t result;

  result = qword_1EE7AA3C0;
  if (!qword_1EE7AA3C0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B8A48, &type metadata for RestartableTimer.State);
    atomic_store(result, (unint64_t *)&qword_1EE7AA3C0);
  }
  return result;
}

unint64_t sub_1A578E960()
{
  unint64_t result;

  result = qword_1EE7A4140;
  if (!qword_1EE7A4140)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE7A4140);
  }
  return result;
}

uint64_t static PCG32Random.random.getter()
{
  uint64_t v0;
  uint64_t v2;

  v2 = 0;
  MEMORY[0x1A85B197C](&v2, 8);
  v0 = v2;
  v2 = 0;
  MEMORY[0x1A85B197C](&v2, 8);
  return v0;
}

Swift::Void __swiftcall PCG32Random.seed(state:sequence:)(Swift::UInt64 state, Swift::UInt64 sequence)
{
  _QWORD *v2;
  Swift::UInt64 v3;

  v3 = (2 * sequence) | 1;
  *v2 = v3 + 0x5851F42D4C957F2DLL * (v3 + state);
  v2[1] = v3;
}

uint64_t sub_1A578EA14()
{
  unint64_t *v0;
  unint64_t v1;

  v1 = *v0;
  *v0 = v0[1] + 0x5851F42D4C957F2DLL * *v0;
  return __ROR4__((v1 >> 45) ^ (v1 >> 27), v1 >> 59);
}

Swift::UInt64 __swiftcall PCG32Random.next()()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  unsigned int v3;

  v1 = v0[1];
  v2 = v1 + 0x5851F42D4C957F2DLL * *v0;
  v3 = __ROR4__((*v0 >> 45) ^ (*v0 >> 27), *v0 >> 59);
  *v0 = v1 + 0x5851F42D4C957F2DLL * v2;
  return __ROR4__((v2 >> 45) ^ (v2 >> 27), v2 >> 59) | ((unint64_t)v3 << 32);
}

BOOL static PCG32Random.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

unint64_t sub_1A578EAA8()
{
  uint64_t v0;

  v0 = sub_1A578EA14();
  return sub_1A578EA14() | (unint64_t)(v0 << 32);
}

BOOL sub_1A578EAD4(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

Swift::UInt32 __swiftcall PCG32Random.next()()
{
  unint64_t *v0;
  unint64_t v1;

  v1 = *v0;
  *v0 = v0[1] + 0x5851F42D4C957F2DLL * *v0;
  return __ROR4__((v1 >> 45) ^ (v1 >> 27), v1 >> 59);
}

__n128 __swift_memcpy16_8_2(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for PCG32Random()
{
  return &type metadata for PCG32Random;
}

BOOL static MailboxName.stableOrder(_:_:)(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4)
{
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v8 = MailboxName.inbox.unsafeMutableAddressor();
  v9 = *v8;
  v10 = *((unsigned int *)v8 + 2) | ((unint64_t)*((unsigned int *)v8 + 2) << 32);
  v11 = a2 | ((unint64_t)a2 << 32);
  if (v10 == v11 && sub_1A578ECF4(*v8, a1) && v10 == (a4 | ((unint64_t)a4 << 32)) && sub_1A578ECF4(v9, a3)
    || v10 == (a4 | ((unint64_t)a4 << 32)) && sub_1A578ECF4(v9, a3))
  {
    return 0;
  }
  if (v10 == v11 && sub_1A578ECF4(v9, a1))
    return 1;
  sub_1A578EC4C((void *)(a3 + 32), (void *)(a1 + 32), a3 + 32 + *(_QWORD *)(a3 + 16), a1 + 32 + *(_QWORD *)(a1 + 16), &v13);
  return v13 == -1;
}

uint64_t static MailboxName.stableOrderCompare(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A578ED78(a1, a3);
}

uint64_t sub_1A578EC4C@<X0>(void *__s2@<X0>, void *__s1@<X2>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  size_t v11;
  uint64_t result;
  uint64_t v13;

  if (__s1)
    v8 = a4 - (_QWORD)__s1;
  else
    v8 = 0;
  v9 = a3 - (_QWORD)__s2;
  if (a3 - (uint64_t)__s2 >= v8)
    v10 = v8;
  else
    v10 = a3 - (_QWORD)__s2;
  if (__s2)
    v11 = v10;
  else
    v11 = v8 & (v8 >> 63);
  result = memcmp(__s1, __s2, v11);
  if ((result & 0x80000000) != 0)
    goto LABEL_11;
  if ((_DWORD)result)
  {
LABEL_13:
    v13 = 1;
    goto LABEL_14;
  }
  if (__s2)
  {
    if (v8 >= v9)
    {
      if (v8 != v9)
        goto LABEL_13;
LABEL_21:
      v13 = 0;
      goto LABEL_14;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (v8)
      goto LABEL_13;
    goto LABEL_21;
  }
LABEL_11:
  v13 = -1;
LABEL_14:
  *a5 = v13;
  return result;
}

BOOL sub_1A578ECF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  if (*(unsigned __int8 *)(a1 + 33) != *(unsigned __int8 *)(a2 + 33))
    return 0;
  v4 = (unsigned __int8 *)(a1 + 34);
  v5 = (unsigned __int8 *)(a2 + 34);
  v6 = v2 - 2;
  do
  {
    result = v6 == 0;
    if (!v6)
      break;
    v8 = *v4++;
    v7 = v8;
    v9 = *v5++;
    --v6;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1A578ED78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1A578EC4C((void *)(a2 + 32), (void *)(a1 + 32), a2 + 32 + *(_QWORD *)(a2 + 16), a1 + 32 + *(_QWORD *)(a1 + 16), &v3);
  return v3;
}

uint64_t sub_1A578EDC0()
{
  uint64_t v0;

  v0 = sub_1A594A764();
  __swift_allocate_value_buffer_0(v0, qword_1EE796730);
  __swift_project_value_buffer_0(v0, (uint64_t)qword_1EE796730);
  return sub_1A594A758();
}

uint64_t sub_1A578EE44()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return swift_deallocClassInstance();
}

uint64_t sub_1A578EE7C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t (*v12)(void *, void *);
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v21 = a2;
  v22 = a3;
  v5 = sub_1A594C078();
  v18 = *(_QWORD *)(v5 - 8);
  v19 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594C048();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1A594AD70();
  MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)(v3 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName_0(qword_1EE7965D8);
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = 0;
  v23 = v3;
  *(_QWORD *)(v3 + 32) = v10;
  sub_1A578FA24();
  v20 = a1;
  swift_retain();
  sub_1A594AD4C();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A578FA60();
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A4800);
  sub_1A578FAA8();
  sub_1A594C5C4();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v7, *MEMORY[0x1E0DEF8D0], v19);
  v11 = (void *)sub_1A594C0A8();
  if (qword_1EE796548 != -1)
    swift_once();
  v12 = (uint64_t (*)(void *, void *))off_1EE795B98;
  v13 = (_QWORD *)swift_allocObject();
  v14 = v21;
  v13[2] = v10;
  v13[3] = v14;
  v13[4] = v22;
  aBlock[4] = sub_1A578FB20;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A578F5CC;
  aBlock[3] = &block_descriptor_26;
  v15 = _Block_copy(aBlock);
  swift_retain();
  v16 = v12(v11, v15);

  swift_release();
  _Block_release(v15);
  swift_release();
  result = v23;
  *(_QWORD *)(v23 + 16) = v16;
  return result;
}

uint64_t sub_1A578F134(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    return 0;
  v3 = a3();
  if (!v4)
    return 0;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  sub_1A578F1A8(v3, v4, v5, v6);
  v12 = v11;
  sub_1A578FB44(v7, v8, v9, v10);
  return v12;
}

void sub_1A578F1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

void sub_1A578F208()
{
  uint64_t v1;
  uint64_t v2;

  if (!__OFADD__(BYTE6(v1), 200))
  {
    v2 = swift_slowAlloc();
    *(_OWORD *)v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
    *(_OWORD *)(v2 + 80) = 0u;
    *(_OWORD *)(v2 + 96) = 0u;
    *(_OWORD *)(v2 + 112) = 0u;
    *(_OWORD *)(v2 + 128) = 0u;
    *(_OWORD *)(v2 + 144) = 0u;
    *(_OWORD *)(v2 + 160) = 0u;
    *(_OWORD *)(v2 + 176) = 0u;
    *(_QWORD *)(v2 + 192) = 0;
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1A578F57CLL);
}

uint64_t sub_1A578F5CC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  v4 = v3(a2);
  swift_release();
  return v4;
}

Swift::Void __swiftcall StateCapture.tearDown()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_1A594AED8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (void *)v0[3];
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x1E0DEF740], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_4;
  }
  v8 = v0[4];
  if ((*(_BYTE *)(v8 + 16) & 1) != 0)
    return;
  *(_BYTE *)(v8 + 16) = 1;
  if (qword_1EE796710 != -1)
    goto LABEL_7;
LABEL_4:
  off_1EE795BA0(v0[2]);
}

uint64_t StateCapture.deinit()
{
  uint64_t v0;
  uint64_t result;
  void *v2;

  result = *(_QWORD *)(v0 + 32);
  if (*(_BYTE *)(result + 16) == 1)
  {
    v2 = *(void **)(v0 + 24);
    swift_release();

    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t StateCapture.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(*(_QWORD *)(v0 + 32) + 16) == 1)
  {

    swift_release();
    return swift_deallocClassInstance();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t StateCapture.__allocating_init(title:queue:capture:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  uint64_t v11;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a4;
  v10[3] = a5;
  v10[4] = a1;
  v10[5] = a2;
  v11 = swift_allocObject();
  sub_1A578EE7C(a3, (uint64_t)sub_1A578F9EC, (uint64_t)v10);
  return v11;
}

uint64_t sub_1A578F81C(void (*a1)(__int128 *__return_ptr), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  _BYTE v11[40];

  a1(&v9);
  if (v10)
  {
    sub_1A54FBF38(&v9, (uint64_t)v11);
    sub_1A54FBF7C((uint64_t)v11, (uint64_t)&v9);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A579025C(a3, a4, &v9);
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    sub_1A579021C((uint64_t)&v9);
    return 0;
  }
  return v7;
}

char *sub_1A578F8D4(uint64_t a1, uint64_t a2, char *__dst, size_t __n)
{
  const char *v6;
  char __src[8];
  uint64_t v9;

  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
    return (char *)sub_1A594C6FC();
  if ((a2 & 0x2000000000000000) != 0)
  {
    *(_QWORD *)__src = a1;
    v9 = a2 & 0xFFFFFFFFFFFFFFLL;
    v6 = __src;
  }
  else if ((a1 & 0x1000000000000000) != 0)
  {
    v6 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v6 = (const char *)sub_1A594C7D4();
  }
  return strncpy(__dst, v6, __n);
}

void *sub_1A578F998(uint64_t a1)
{
  return sub_1A5788DA0(a1, "os_state_add_handler", &off_1EE795B98);
}

void *sub_1A578F9AC(uint64_t a1)
{
  return sub_1A5788DA0(a1, "os_state_remove_handler", &off_1EE795BA0);
}

uint64_t sub_1A578F9C0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A578F9EC()
{
  uint64_t v0;

  return sub_1A578F81C(*(void (**)(__int128 *__return_ptr))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t type metadata accessor for StateCapture()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StateCapture.Reference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateCapture.Reference);
}

unint64_t sub_1A578FA24()
{
  unint64_t result;

  result = qword_1EE7A4760;
  if (!qword_1EE7A4760)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE7A4760);
  }
  return result;
}

unint64_t sub_1A578FA60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A4878;
  if (!qword_1EE7A4878)
  {
    v1 = sub_1A594C048();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7A4878);
  }
  return result;
}

unint64_t sub_1A578FAA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A4848;
  if (!qword_1EE7A4848)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0((uint64_t *)&unk_1EE7A4800);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7A4848);
  }
  return result;
}

uint64_t sub_1A578FAF4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A578FB20(uint64_t a1)
{
  uint64_t v1;

  return sub_1A578F134(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t sub_1A578FB44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return sub_1A54E46E8(a3, a4);
  }
  return result;
}

unint64_t sub_1A578FB7C()
{
  unint64_t result;

  result = qword_1EE7990D0;
  if (!qword_1EE7990D0)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CB1AA0], MEMORY[0x1E0DEAC20]);
    atomic_store(result, (unint64_t *)&qword_1EE7990D0);
  }
  return result;
}

char *sub_1A578FBC0(char *__src)
{
  uint64_t v1;

  return strncpy(*(char **)(v1 + 16), __src, *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A578FBDC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1A578FCAC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1A558CC98((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1A558CC98((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1A578FCAC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A594C420();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1A578FE64(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1A594C7D4();
  if (!v8)
  {
    sub_1A594C9B4();
    __break(1u);
LABEL_17:
    result = sub_1A594CA68();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1A578FE64(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1A578FEF8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A57900D0(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1A57900D0(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A578FEF8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1A579006C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1A594C72C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1A594C9B4();
      __break(1u);
LABEL_10:
      v2 = sub_1A594B640();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1A594CA68();
    __break(1u);
LABEL_14:
    result = sub_1A594C9B4();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1A579006C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B350);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size_0(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A57900D0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B350);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A579021C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE799318);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A579025C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  sub_1A5949D50();
  swift_allocObject();
  sub_1A5949D44();
  sub_1A5949D20();
  __swift_project_boxed_opaque_existential_1_0(a3, a3[3]);
  sub_1A5949D2C();
  __asm { BR              X9 }
}

void *EngineTracingID.invalid.unsafeMutableAddressor()
{
  return &static EngineTracingID.invalid;
}

uint64_t static EngineTracingID.invalid.getter()
{
  return 31;
}

void *EngineTracingID.test.unsafeMutableAddressor()
{
  return &static EngineTracingID.test;
}

uint64_t static EngineTracingID.test.getter()
{
  return 31;
}

uint64_t EngineTracingID.hash(into:)()
{
  return sub_1A594CE94();
}

BOOL static EngineTracingID.__derived_struct_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t EngineTracingID.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE94();
  return sub_1A594CED0();
}

uint64_t sub_1A5790998()
{
  sub_1A594CE64();
  sub_1A594CE94();
  return sub_1A594CED0();
}

uint64_t sub_1A57909DC()
{
  return sub_1A594CE94();
}

uint64_t EngineTracingIDOwner.tracingID.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t EngineTracingIDOwner.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  char v4;

  v0 = swift_allocObject();
  if (qword_1EE796768 != -1)
    swift_once();
  v1 = qword_1EE796760 + 16;
  v2 = (os_unfair_lock_s *)(qword_1EE796760 + 28);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1A5790E04(v1, &v4);
  os_unfair_lock_unlock(v2);
  LOBYTE(v1) = v4;
  swift_release();
  *(_BYTE *)(v0 + 16) = v1;
  return v0;
}

uint64_t EngineTracingIDOwner.init()()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  char v4;

  if (qword_1EE796768 != -1)
    swift_once();
  v1 = qword_1EE796760 + 16;
  v2 = (os_unfair_lock_s *)(qword_1EE796760 + 28);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1A5790E04(v1, &v4);
  os_unfair_lock_unlock(v2);
  LOBYTE(v1) = v4;
  swift_release();
  *(_BYTE *)(v0 + 16) = v1;
  return v0;
}

uint64_t EngineTracingIDOwner.deinit()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  if (qword_1EE796768 != -1)
    swift_once();
  v1 = qword_1EE796760;
  v2 = *(_BYTE *)(v0 + 16);
  swift_retain();
  sub_1A5790BCC(v2, v1);
  swift_release();
  return v0;
}

void sub_1A5790BCC(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v2;
  os_unfair_lock_s *v5;
  char **v6;
  char *v7;
  uint64_t v8;
  int64_t v9;
  int v10;
  unint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  char v18;
  uint64_t v20;
  uint64_t v21;

  v5 = (os_unfair_lock_s *)(a2 + 28);
  os_unfair_lock_lock((os_unfair_lock_t)(a2 + 28));
  v8 = *(_QWORD *)(a2 + 16);
  v6 = (char **)(a2 + 16);
  v7 = (char *)v8;
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = a1;
    if (v7[32] == a1)
    {
      v11 = 0;
    }
    else
    {
      if (v9 == 1)
      {
        v11 = 1;
        goto LABEL_22;
      }
      v20 = 33;
      while (1)
      {
        v11 = v20 - 32;
        if (v7[v20] == v10)
          break;
        v21 = v20 - 31;
        if (__OFADD__(v11, 1))
        {
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
        ++v20;
        if (v21 == v9)
        {
          v11 = v9;
          goto LABEL_22;
        }
      }
    }
    v2 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_34;
    if (v2 == v9)
      goto LABEL_21;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v6 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_35;
    while (1)
    {
      v13 = v7 + 32;
      v14 = v11 + 33;
      do
      {
        if ((v2 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
        v16 = *((_QWORD *)v7 + 2);
        if (v14 - 32 >= v16)
          goto LABEL_29;
        v17 = v7[v14];
        if (v17 != v10)
        {
          if (v14 - 32 != v11)
          {
            if (v11 >= v16)
              goto LABEL_32;
            v18 = v13[v11];
            v13[v11] = v17;
            v7[v14] = v18;
          }
          if (__OFADD__(v11++, 1))
            goto LABEL_30;
          v16 = *((_QWORD *)v7 + 2);
        }
        v15 = v14 - 31;
        ++v14;
      }
      while (v15 != v16);
      *v6 = v7;
      v9 = *((_QWORD *)v7 + 2);
LABEL_21:
      if (v9 >= (uint64_t)v11)
        break;
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      v7 = sub_1A57910A4((uint64_t)v7);
    }
  }
  else
  {
    v11 = 0;
  }
LABEL_22:
  sub_1A57910B8(v11, v9);
  os_unfair_lock_unlock(v5);
}

uint64_t EngineTracingIDOwner.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  if (qword_1EE796768 != -1)
    swift_once();
  v1 = qword_1EE796760;
  v2 = *(_BYTE *)(v0 + 16);
  swift_retain();
  sub_1A5790BCC(v2, v1);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A5790DBC()
{
  uint64_t result;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B7D0);
  result = swift_allocObject();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_DWORD *)(result + 28) = 0;
  *(_QWORD *)(result + 16) = v1;
  *(_BYTE *)(result + 24) = 1;
  qword_1EE796760 = result;
  return result;
}

uint64_t sub_1A5790E04@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *v2;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v2 = (_QWORD *)result;
  v4 = *(unsigned __int8 *)(result + 8);
  v5 = *(_QWORD *)result;
  v6 = *(_QWORD *)(*(_QWORD *)result + 16);
  v7 = v4;
  while (1)
  {
    v8 = v7;
    if (v7 < 0x1E)
      ++v7;
    else
      v7 = 1;
    if (!v6)
      break;
    if (*(unsigned __int8 *)(v5 + 32) != v8)
    {
      if (v6 == 1)
        goto LABEL_15;
      if (*(unsigned __int8 *)(v5 + 33) != v8)
      {
        if (v6 != 2)
        {
          v9 = 34;
          while (1)
          {
            v10 = v9 - 31;
            if (__OFADD__(v9 - 32, 1))
              break;
            if (*(unsigned __int8 *)(v5 + v9) == v8)
              goto LABEL_2;
            ++v9;
            if (v10 == v6)
              goto LABEL_15;
          }
          __break(1u);
          goto LABEL_23;
        }
LABEL_15:
        LOBYTE(v4) = v8;
        break;
      }
    }
LABEL_2:
    if (v7 == v4)
    {
      LOBYTE(v4) = 31;
      goto LABEL_20;
    }
  }
  *(_BYTE *)(result + 8) = v7;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
    goto LABEL_17;
LABEL_23:
  result = (uint64_t)sub_1A5790FBC(0, v6 + 1, 1, (char *)v5);
  v5 = result;
LABEL_17:
  v12 = *(_QWORD *)(v5 + 16);
  v11 = *(_QWORD *)(v5 + 24);
  if (v12 >= v11 >> 1)
  {
    result = (uint64_t)sub_1A5790FBC((char *)(v11 > 1), v12 + 1, 1, (char *)v5);
    v5 = result;
  }
  *(_QWORD *)(v5 + 16) = v12 + 1;
  *(_BYTE *)(v5 + v12 + 32) = v4;
  *v2 = v5;
LABEL_20:
  *a2 = v4;
  return result;
}

unint64_t sub_1A5790F48()
{
  unint64_t result;

  result = qword_1EE7AA3C8;
  if (!qword_1EE7AA3C8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EngineTracingID, &type metadata for EngineTracingID);
    atomic_store(result, (unint64_t *)&qword_1EE7AA3C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for EngineTracingID()
{
  return &type metadata for EngineTracingID;
}

uint64_t type metadata accessor for EngineTracingIDOwner()
{
  return objc_opt_self();
}

char *sub_1A5790FBC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ADB8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A57910A4(uint64_t a1)
{
  return sub_1A5790FBC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_1A57910B8(unint64_t result, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  size_t v12;
  const void *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v9 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (!v8)
      goto LABEL_20;
  }
  else
  {
    if (v5 <= v9)
      v10 = v5 + v8;
    else
      v10 = v5;
    result = (unint64_t)sub_1A5790FBC((char *)result, v10, 1, (char *)v4);
    v4 = result;
    if (!v8)
      goto LABEL_20;
  }
  v11 = *(_QWORD *)(v4 + 16);
  v12 = v11 - a2;
  if (__OFSUB__(v11, a2))
    goto LABEL_26;
  result = v4 + 32 + v6;
  v13 = (const void *)(v4 + 32 + a2);
  if (v6 != a2 || result >= (unint64_t)v13 + v12)
    result = (unint64_t)memmove((void *)result, v13, v12);
  v14 = *(_QWORD *)(v4 + 16);
  v15 = __OFADD__(v14, v8);
  v16 = v14 + v8;
  if (!v15)
  {
    *(_QWORD *)(v4 + 16) = v16;
LABEL_20:
    *v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

void _s3__C16os_unfair_lock_sVMa_0()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_1EE7960C0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE7960C0);
  }
}

ValueMetadata *type metadata accessor for ActiveIdentifiers()
{
  return &type metadata for ActiveIdentifiers;
}

uint64_t initializeBufferWithCopyOfBuffer for ActiveIdentifiers.State(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for ActiveIdentifiers.State(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy9_8_3(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for ActiveIdentifiers.State(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActiveIdentifiers.State(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActiveIdentifiers.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActiveIdentifiers.State()
{
  return &type metadata for ActiveIdentifiers.State;
}

uint64_t sub_1A5791554()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5791A1C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = (*(uint64_t (**)(void))(v0 + 16))();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A5791A4C()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(void))(v0 + 16))();
  return v1;
}

uint64_t sub_1A5792180()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[5];
  int v4;
  uint64_t v5;
  int v6;

  (*(void (**)(_QWORD *__return_ptr))(v0 + 16))(v3);
  v1 = v3[1];
  v5 = v3[4];
  v6 = v4;
  sub_1A54F81BC((uint64_t)&v5);
  return v1;
}

uint64_t DefaultStringInterpolation.appendInterpolation(_:)()
{
  sub_1A579255C();
  sub_1A594B6DC();
  if (sub_1A594B5A4() <= 1)
    sub_1A594B5F8();
  sub_1A594B5F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A57924D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v3);
  v1 = v5;
  v6 = v4;
  sub_1A5503278((uint64_t)&v6);
  return v1;
}

uint64_t sub_1A579251C()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  return sub_1A594B4A8();
}

unint64_t sub_1A579255C()
{
  unint64_t result;

  result = qword_1EE79B460;
  if (!qword_1EE79B460)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEDEA0], MEMORY[0x1E0DEDE70]);
    atomic_store(result, (unint64_t *)&qword_1EE79B460);
  }
  return result;
}

uint64_t TaskName.rawValue.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t TaskName.rawValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*TaskName.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

_QWORD *sub_1A5792654@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t TaskLoggerID.name.getter(uint64_t a1, uint64_t a2)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a2;
}

uint64_t MailboxTaskLoggerID.id.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t MailboxTaskLoggerID.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t MailboxTaskLoggerID.counter.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 24);
}

uint64_t MailboxTaskLoggerID.mailbox.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MailboxTaskLoggerID.init(id:name:counter:mailbox:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int16 a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  *(_BYTE *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_WORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_DWORD *)(a7 + 40) = a6;
  return result;
}

uint64_t EngineLoggerID.id.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

double (*EngineLoggerID.id.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 __swift_memcpy16_8_3(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TaskName(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for TaskName()
{
  return &type metadata for TaskName;
}

uint64_t sub_1A579279C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for TaskLoggerID(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8_2(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TaskLoggerID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TaskLoggerID()
{
  return &type metadata for TaskLoggerID;
}

uint64_t destroy for MailboxTaskLoggerID()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MailboxTaskLoggerID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MailboxTaskLoggerID(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy44_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 28) = *(_OWORD *)(a2 + 28);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MailboxTaskLoggerID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxTaskLoggerID(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 44))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxTaskLoggerID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 44) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 44) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxTaskLoggerID()
{
  return &type metadata for MailboxTaskLoggerID;
}

ValueMetadata *type metadata accessor for EngineLoggerID()
{
  return &type metadata for EngineLoggerID;
}

uint64_t sub_1A5792A90()
{
  uint64_t result;

  sub_1A5792E7C();
  result = sub_1A594C324();
  tracingLog = result;
  return result;
}

uint64_t *tracingLog.unsafeMutableAddressor()
{
  if (qword_1EE796758 != -1)
    swift_once();
  return &tracingLog;
}

uint64_t sub_1A5792B2C()
{
  uint64_t v0;
  id v1;

  v0 = sub_1A594A65C();
  __swift_allocate_value_buffer_0(v0, tracingSignposter);
  __swift_project_value_buffer_0(v0, (uint64_t)tracingSignposter);
  if (qword_1EE796758 != -1)
    swift_once();
  v1 = (id)tracingLog;
  return sub_1A594A644();
}

uint64_t tracingSignposter.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1EE796770 != -1)
    swift_once();
  v0 = sub_1A594A65C();
  return __swift_project_value_buffer_0(v0, (uint64_t)tracingSignposter);
}

uint64_t OSSignpostID.init(engine:kind:idA:idB:)()
{
  return sub_1A594A638();
}

uint64_t OSSignpostID.TraceKind.rawValue.getter(int a1)
{
  return (a1 + 1);
}

uint64_t OSSignpostID.init(engine:kind:connectionID:)()
{
  return sub_1A594A638();
}

uint64_t sub_1A5792C40()
{
  sub_1A594CE64();
  sub_1A594CE94();
  return sub_1A594CED0();
}

uint64_t sub_1A5792C84()
{
  return sub_1A594CE94();
}

uint64_t sub_1A5792CB0()
{
  sub_1A594CE64();
  sub_1A594CE94();
  return sub_1A594CED0();
}

uint64_t sub_1A5792CF0@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s2os12OSSignpostIDV12IMAP2TracingE9TraceKindO8rawValueAFSgs5UInt8V_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1A5792D18(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1 + 1;
}

uint64_t _s2os12OSSignpostIDV12IMAP2TracingE9TraceKindO8rawValueAFSgs5UInt8V_tcfC_0(unsigned __int8 a1)
{
  if (a1 <= 6u)
    return (0x5040302010006uLL >> (8 * a1));
  else
    return 6;
}

unint64_t sub_1A5792D5C()
{
  unint64_t result;

  result = qword_1EE7AA3D0;
  if (!qword_1EE7AA3D0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for OSSignpostID.TraceKind, &type metadata for OSSignpostID.TraceKind);
    atomic_store(result, (unint64_t *)&qword_1EE7AA3D0);
  }
  return result;
}

_BYTE *__swift_memcpy1_1_3(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s9TraceKindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A5792DFC + 4 * byte_1A59B8CE9[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A5792E30 + 4 * asc_1A59B8CE4[v4]))();
}

uint64_t sub_1A5792E30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5792E38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5792E40);
  return result;
}

uint64_t sub_1A5792E4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5792E54);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A5792E58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5792E60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OSSignpostID.TraceKind()
{
  return &type metadata for OSSignpostID.TraceKind;
}

unint64_t sub_1A5792E7C()
{
  unint64_t result;

  result = qword_1EE79A640;
  if (!qword_1EE79A640)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE79A640);
  }
  return result;
}

void ClientCommand.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = sub_1A594A0EC();
  MEMORY[0x1E0C80A78](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v4);
  sub_1A55034B8(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)sub_1A5792FE0 + 4 * word_1A59B8DB0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A5792FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  sub_1A594CE88();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease_n();
  if (!v2)
    return sub_1A594CE94();
  sub_1A594CE94();
  InitialResponse.hash(into:)(v0, v2, v3);
  return swift_release();
}

uint64_t sub_1A5793830(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  uint64_t i;
  int v13;
  int v14;
  int v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    while (1)
    {
      v4 = a1 + 32 + 16 * v3;
      v5 = a2 + 32 + 16 * v3;
      if ((*(unsigned int *)(v4 + 8) | ((unint64_t)*(unsigned int *)(v4 + 8) << 32)) != (*(unsigned int *)(v5 + 8) | ((unint64_t)*(unsigned int *)(v5 + 8) << 32)))
        break;
      v6 = *(_QWORD *)v4;
      v7 = *(_QWORD *)v5;
      v8 = *(_QWORD *)(v6 + 16);
      if (v8 != *(_QWORD *)(v7 + 16))
        break;
      if (v8)
        v9 = v6 == v7;
      else
        v9 = 1;
      if (!v9)
      {
        if (*(unsigned __int8 *)(v6 + 32) != *(unsigned __int8 *)(v7 + 32))
          return 0;
        if (v8 != 1)
        {
          if (*(unsigned __int8 *)(v6 + 33) != *(unsigned __int8 *)(v7 + 33))
            return 0;
          if (v8 != 2)
          {
            if (*(unsigned __int8 *)(v6 + 34) != *(unsigned __int8 *)(v7 + 34))
              return 0;
            v10 = (unsigned __int8 *)(v6 + 35);
            v11 = (unsigned __int8 *)(v7 + 35);
            for (i = v8 - 3; i; --i)
            {
              v14 = *v10++;
              v13 = v14;
              v15 = *v11++;
              if (v13 != v15)
                return 0;
            }
          }
        }
      }
      if (++v3 == v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1A5793924(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  BOOL v9;
  char v10;
  uint64_t result;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *i;
  BOOL v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_BYTE *)(a1 + 56);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
  if (v9 || (v10 = sub_1A594CD38(), result = 0, (v10 & 1) != 0))
  {
    v12 = (_BYTE *)(a1 + 88);
    v13 = v2 - 1;
    for (i = (_BYTE *)(a2 + 88); ; i += 32)
    {
      if ((v6 & 1) != 0)
      {
        if ((v8 & 1) == 0)
          return 0;
      }
      else if (v8 & 1 | (((v7 ^ v5) & 0xFFFFFFFFFFFFC000) != 0))
      {
        return 0;
      }
      if (!v13)
        break;
      v5 = *((_QWORD *)v12 - 1);
      v6 = *v12;
      v7 = *((_QWORD *)i - 1);
      v8 = *i;
      v15 = *((_QWORD *)v12 - 3) == *((_QWORD *)i - 3) && *((_QWORD *)v12 - 2) == *((_QWORD *)i - 2);
      if (!v15 && (sub_1A594CD38() & 1) == 0)
        return 0;
      v12 += 32;
      --v13;
    }
    return 1;
  }
  return result;
}

uint64_t sub_1A5793A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v10;
  char v11;
  char v12;
  _BYTE v14[40];
  _BYTE v15[40];
  _BYTE v16[40];
  _BYTE v17[40];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  sub_1A5666B28(a1 + 32, (uint64_t)v16);
  sub_1A5666B28(a2 + 32, (uint64_t)v17);
  sub_1A5666BBC((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666B64);
  sub_1A5666BBC((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666B64);
  static FetchAttribute.__derived_enum_equals(_:_:)((uint64_t)v16);
  v6 = v5;
  sub_1A5666BBC((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666BFC);
  sub_1A5666BBC((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666BFC);
  if ((v6 & 1) == 0)
    return 0;
  v7 = a2 + 72;
  v8 = a1 + 72;
  do
  {
    v9 = --v2 == 0;
    if (!v2)
      break;
    v10 = v8 + 40;
    sub_1A5666B28(v8, (uint64_t)v14);
    sub_1A5666B28(v7, (uint64_t)v15);
    sub_1A5666BBC((uint64_t)v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666B64);
    sub_1A5666BBC((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666B64);
    static FetchAttribute.__derived_enum_equals(_:_:)((uint64_t)v14);
    v12 = v11;
    sub_1A5666BBC((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666BFC);
    sub_1A5666BBC((uint64_t)v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666BFC);
    v8 = v10;
    v7 += 40;
  }
  while ((v12 & 1) != 0);
  return v9;
}

uint64_t sub_1A5793B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = type metadata accessor for MessageData.BodyData();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  MEMORY[0x1E0C80A78](v4);
  v42 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D50);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA420);
  MEMORY[0x1E0C80A78](v44);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for MessageData.BodySection();
  MEMORY[0x1E0C80A78](v43);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v36 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v17 && a1 != a2)
  {
    v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v19 = *(_QWORD *)(v14 + 72);
    v38 = v8;
    v39 = v19;
    v40 = a1;
    v41 = a2;
    v37 = v10;
    while (1)
    {
      sub_1A55034B8(a1 + v18, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      sub_1A55034B8(a2 + v18, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      static SectionSpecifier.__derived_struct_equals(_:_:)(*(_QWORD **)v16, *((_QWORD *)v16 + 1), v16[16], *(_QWORD **)v12, *((_QWORD *)v12 + 1), v12[16]);
      if ((v21 & 1) == 0)
      {
LABEL_28:
        sub_1A55034FC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
        sub_1A55034FC((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
        return 0;
      }
      v22 = v12[24];
      if ((v16[24] & 1) != 0)
      {
        if (!v12[24])
          goto LABEL_28;
      }
      else
      {
        if (*((_DWORD *)v16 + 5) != *((_DWORD *)v12 + 5))
          v22 = 1;
        if ((v22 & 1) != 0)
          goto LABEL_28;
      }
      v23 = *(int *)(v43 + 24);
      v24 = (uint64_t)&v12[v23];
      v25 = (uint64_t)&v10[*(int *)(v44 + 48)];
      sub_1A54E330C((uint64_t)&v16[v23], (uint64_t)v10, &qword_1EE797D50);
      sub_1A54E330C(v24, v25, &qword_1EE797D50);
      v26 = v46;
      v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
      if (v27(v10, 1, v46) == 1)
        break;
      v28 = (uint64_t)v10;
      v29 = (uint64_t)v38;
      sub_1A54E330C(v28, (uint64_t)v38, &qword_1EE797D50);
      if (v27((char *)v25, 1, v26) == 1)
      {
        v35 = &qword_1EE7AA420;
        goto LABEL_26;
      }
      sub_1A54E3394(v25, v42, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodyData);
      v30 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      if (v30 != _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0())
      {
        sub_1A55034FC(v42, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodyData);
        v35 = &qword_1EE797D50;
LABEL_26:
        sub_1A55034FC((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodyData);
        v10 = v37;
LABEL_27:
        sub_1A5510284((uint64_t)v10, v35);
        goto LABEL_28;
      }
      sub_1A594AE60();
      sub_1A55E1698((unint64_t *)&qword_1EE798F28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF648], MEMORY[0x1E0DEF670]);
      sub_1A594BD60();
      v31 = sub_1A594BDB4();
      if (v48 == v47)
      {
        sub_1A55034FC(v42, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodyData);
        sub_1A55034FC(v29, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodyData);
        a1 = v40;
        a2 = v41;
        v10 = v37;
LABEL_6:
        sub_1A5510284((uint64_t)v10, &qword_1EE797D50);
        goto LABEL_7;
      }
      MEMORY[0x1E0C80A78](v31);
      v32 = v42;
      *(&v36 - 2) = v42;
      *(&v36 - 1) = v29;
      sub_1A594ADE8();
      v33 = v48;
      sub_1A55034FC(v32, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodyData);
      sub_1A55034FC(v29, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodyData);
      v10 = v37;
      sub_1A5510284((uint64_t)v37, &qword_1EE797D50);
      a1 = v40;
      a2 = v41;
      if ((v33 & 1) == 0)
        goto LABEL_28;
LABEL_7:
      sub_1A55034FC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      sub_1A55034FC((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      v18 += v39;
      if (!--v17)
        return 1;
    }
    v20 = v27((char *)v25, 1, v26);
    a1 = v40;
    a2 = v41;
    if (v20 != 1)
    {
      v35 = &qword_1EE7AA420;
      goto LABEL_27;
    }
    goto LABEL_6;
  }
  return 1;
}

uint64_t sub_1A5794050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v8;
  __int128 v10[4];
  __int128 v11[4];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v6 = 1;
    }
    else
    {
      v3 = a1 + 32;
      v4 = a2 + 32;
      v5 = v2 - 1;
      do
      {
        sub_1A57971BC(v3, (uint64_t)v10);
        sub_1A57971BC(v4, (uint64_t)v11);
        sub_1A56F8C3C(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5666914);
        sub_1A56F8C3C(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5666914);
        v6 = static ReturnOption.__derived_enum_equals(_:_:)(v10, v11);
        sub_1A56F8C3C(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56668BC);
        sub_1A56F8C3C(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56668BC);
        v8 = v5-- != 0;
        if ((v6 & 1) == 0)
          break;
        v3 += 64;
        v4 += 64;
      }
      while (v8);
    }
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1A579413C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t sub_1A57943A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    goto LABEL_7;
  if (!v2 || a1 == a2)
    goto LABEL_6;
  v5 = *(unsigned __int8 *)(a1 + 62);
  v6 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
  v28 = *(_QWORD *)(a1 + 40);
  v29 = *(_QWORD *)(a1 + 48);
  v31 = *(_BYTE *)(a1 + 62);
  v33 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int16 *)(a2 + 60) << 32);
  v11 = *(unsigned __int8 *)(a2 + 62);
  v30 = v6;
  sub_1A5666CC4(v33, v28, v29, v6, v31);
  sub_1A5666CC4(v7, v8, v9, v10, v11);
  v26 = static SearchReturnOption.__derived_enum_equals(_:_:)(v33, v28, v29, v6 | (v5 << 48), v7, v8, v9, v10 | (v11 << 48));
  sub_1A5666D04(v7, v8, v9, v10, v11);
  sub_1A5666D04(v33, v28, v29, v6, v31);
  if ((v26 & 1) == 0)
  {
LABEL_7:
    v12 = 0;
    return v12 & 1;
  }
  if (v2 == 1)
  {
LABEL_6:
    v12 = 1;
    return v12 & 1;
  }
  v14 = v2 - 2;
  v15 = (unsigned __int8 *)(a1 + 94);
  v16 = (unsigned __int8 *)(a2 + 94);
  do
  {
    v32 = v14;
    v34 = *v15;
    v17 = *(unsigned int *)(v15 - 6) | ((unint64_t)*((unsigned __int16 *)v15 - 1) << 32);
    v27 = *(_QWORD *)(v15 - 14);
    v18 = *(_QWORD *)(v15 - 22);
    v19 = *(_QWORD *)(v15 - 30);
    v20 = *(_QWORD *)(v16 - 30);
    v21 = *(_QWORD *)(v16 - 22);
    v22 = *(_QWORD *)(v16 - 14);
    v23 = *(unsigned int *)(v16 - 6) | ((unint64_t)*((unsigned __int16 *)v16 - 1) << 32);
    v24 = *v16;
    sub_1A5666CC4(v19, v18, v27, v17, v34);
    v25 = v24;
    sub_1A5666CC4(v20, v21, v22, v23, v24);
    v29 = v29 & 0xFF00000000000000 | v17 | (v34 << 48);
    v30 = v30 & 0xFF00000000000000 | v23 | (v24 << 48);
    v12 = static SearchReturnOption.__derived_enum_equals(_:_:)(v19, v18, v27, v29, v20, v21, v22, v30);
    sub_1A5666D04(v20, v21, v22, v23, v25);
    sub_1A5666D04(v19, v18, v27, v17, v34);
    v14 = v32 - 1;
    if ((v12 & 1) == 0)
      break;
    v15 += 32;
    v16 += 32;
  }
  while (v32);
  return v12 & 1;
}

uint64_t static ClientCommand.FetchData.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  result = sub_1A5793A2C(a1, a4);
  if ((result & 1) == 0)
    return 0;
  if ((a3 & 1) != 0)
    return (a6 & 1) != 0;
  if ((a6 & 1) != 0)
    return 0;
  if (((a5 | a2) & 0x8000000000000000) == 0)
    return a5 == a2;
  __break(1u);
  return result;
}

uint64_t ClientCommand.hashValue.getter()
{
  sub_1A594CE64();
  ClientCommand.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A5794694()
{
  sub_1A594CE64();
  ClientCommand.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A57946D4()
{
  sub_1A594CE64();
  ClientCommand.hash(into:)();
  return sub_1A594CED0();
}

uint64_t ClientCommand.FetchData.items.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

double (*ClientCommand.FetchData.items.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t variable initialization expression of ClientCommand.FetchData.changedSince()
{
  return 0;
}

uint64_t ClientCommand.FetchData.changedSince.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ClientCommand.FetchData.changedSince.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_BYTE *)(v2 + 16) = a2 & 1;
  return result;
}

double (*ClientCommand.FetchData.changedSince.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ClientCommand.FetchData.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[40];

  v6 = *(_QWORD *)(a2 + 16);
  sub_1A594CE88();
  if (v6)
  {
    v7 = a2 + 32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    do
    {
      sub_1A5666B28(v7, (uint64_t)v9);
      sub_1A5666BBC((uint64_t)v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666B64);
      FetchAttribute.hash(into:)();
      sub_1A5666BBC((uint64_t)v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666BFC);
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  if ((a4 & 1) != 0)
    return sub_1A594CE94();
  sub_1A594CE94();
  return sub_1A594CEB8();
}

uint64_t ClientCommand.FetchData.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[40];

  sub_1A594CE64();
  v5 = *(_QWORD *)(a1 + 16);
  sub_1A594CE88();
  if (v5)
  {
    v6 = a1 + 32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    do
    {
      sub_1A5666B28(v6, (uint64_t)v8);
      sub_1A5666BBC((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666B64);
      FetchAttribute.hash(into:)();
      sub_1A5666BBC((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666BFC);
      v6 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  sub_1A594CE94();
  if ((a3 & 1) == 0)
    sub_1A594CEB8();
  return sub_1A594CED0();
}

uint64_t sub_1A579496C()
{
  uint64_t v0;

  return ClientCommand.FetchData.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_1A5794978(uint64_t a1)
{
  uint64_t v1;

  return ClientCommand.FetchData.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

uint64_t type metadata accessor for ClientCommand(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE797DB0);
}

uint64_t sub_1A5794998()
{
  uint64_t *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[40];

  v1 = *v0;
  v2 = *((unsigned __int8 *)v0 + 16);
  sub_1A594CE64();
  v3 = *(_QWORD *)(v1 + 16);
  sub_1A594CE88();
  if (v3)
  {
    v4 = v1 + 32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    do
    {
      sub_1A5666B28(v4, (uint64_t)v6);
      sub_1A5666BBC((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666B64);
      FetchAttribute.hash(into:)();
      sub_1A5666BBC((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666BFC);
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  sub_1A594CE94();
  if (!v2)
    sub_1A594CEB8();
  return sub_1A594CED0();
}

uint64_t sub_1A5794A84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  result = sub_1A5793A2C(*(_QWORD *)a1, *(_QWORD *)a2);
  if ((result & 1) == 0)
    return 0;
  if ((v3 & 1) != 0)
    return (v5 & 1) != 0;
  if ((v5 & 1) != 0)
    return 0;
  if (((v4 | v2) & 0x8000000000000000) == 0)
    return v4 == v2;
  __break(1u);
  return result;
}

uint64_t static ClientCommand.uidFetch(messages:items:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v6;

  *(_QWORD *)a4 = a1;
  *(_DWORD *)(a4 + 8) = a2;
  v6 = HIDWORD(a2);
  *(_BYTE *)(a4 + 12) = BYTE4(a2);
  *(_QWORD *)(a4 + 16) = a3;
  *(_QWORD *)(a4 + 24) = 0;
  *(_BYTE *)(a4 + 32) = 1;
  type metadata accessor for ClientCommand(0);
  swift_storeEnumTagMultiPayload();
  sub_1A54E4334(a1, a2, v6);
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ClientCommand.SelectOption.hash(into:)()
{
  return sub_1A594CE88();
}

uint64_t static ClientCommand.SelectOption.__derived_enum_equals(_:_:)()
{
  return 1;
}

uint64_t ClientCommand.SelectOption.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

void ClientCommand.kind.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1A55034B8(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1A5794C6C + 4 * byte_1A59B8DF6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A5794C6C()
{
  uint64_t v0;

  sub_1A55034FC(v0, type metadata accessor for ClientCommand);
  return 3;
}

BOOL static ClientCommand.Kind.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t ClientCommand.Kind.hash(into:)()
{
  return sub_1A594CE88();
}

uint64_t ClientCommand.Kind.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

void ClientCommand.logIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1A55034B8(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1A5794FE0 + 4 * byte_1A59B8E12[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A5794FE0()
{
  uint64_t v0;

  sub_1A55034FC(v0, type metadata accessor for ClientCommand);
  return 0x49544E4548545541;
}

unint64_t LoggableCommand.tag.getter()
{
  unsigned __int8 *v0;

  return *v0 | ((unint64_t)*((unsigned int *)v0 + 1) << 32);
}

uint64_t LoggableCommand.tag.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)v1 = result;
  *(_DWORD *)(v1 + 4) = HIDWORD(result);
  return result;
}

double (*LoggableCommand.tag.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t LoggableCommand.command.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for LoggableCommand(0);
  return sub_1A55034B8(v1 + *(int *)(v3 + 20), a1, type metadata accessor for ClientCommand);
}

uint64_t LoggableCommand.command.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for LoggableCommand(0) + 20);
  return sub_1A5798F60(a1, v3);
}

double (*LoggableCommand.command.modify())(_QWORD)
{
  type metadata accessor for LoggableCommand(0);
  return nullsub_1;
}

uint64_t LoggableCommand.init(tag:command:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  *(_BYTE *)a3 = a1;
  *(_DWORD *)(a3 + 4) = HIDWORD(a1);
  v5 = type metadata accessor for LoggableCommand(0);
  return sub_1A54E3394(a2, a3 + *(int *)(v5 + 20), type metadata accessor for ClientCommand);
}

Swift::String __swiftcall LoggableCommand.makeDescriptionWithoutPII()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD);
  char *v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(unint64_t, void (*)(_QWORD), uint64_t);
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  Swift::String result;
  uint64_t v35;
  void (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  int v42;
  char *v43;
  uint64_t v44;

  v1 = sub_1A594AE60();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v40 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v35 - v5;
  v7 = type metadata accessor for ClientCommand.Encoded();
  MEMORY[0x1E0C80A78](v7);
  v9 = (void (*)(_QWORD))((char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = &v0[*(int *)(type metadata accessor for LoggableCommand(0) + 20)];
  v11 = *((_DWORD *)v0 + 1);
  v41 = *v0;
  v42 = v11;
  v43 = v10;
  sub_1A57A4EF0((void (*)(_QWORD))sub_1A5798FA4, 0x10000u, v9);
  if (*(_QWORD *)(*(_QWORD *)((char *)v9 + *(int *)(v7 + 20)) + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B238);
    v12 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v39 = *(_QWORD *)(v2 + 72);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1A59ABD10;
    v14 = *(void (**)(unint64_t, void (*)(_QWORD), uint64_t))(v2 + 16);
    v37 = v1;
    v14(v13 + v12, v9, v1);
    v44 = v13;
    v15 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5795E80(v15);
    v16 = v44;
    v17 = *(_QWORD *)(v44 + 16);
    if (v17)
    {
      v38 = v2;
      v36 = v9;
      v44 = MEMORY[0x1E0DEE9D8];
      sub_1A5796284(0, v17, 0);
      v35 = v16;
      v18 = v16 + v12;
      v19 = v37;
      do
      {
        v14((unint64_t)v6, (void (*)(_QWORD))v18, v19);
        v20 = (uint64_t)v40;
        v14((unint64_t)v40, (void (*)(_QWORD))v6, v19);
        v21 = sub_1A5798FB8(v20);
        v23 = v22;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v19);
        v24 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A5796284(0, *(_QWORD *)(v24 + 16) + 1, 1);
          v19 = v37;
          v24 = v44;
        }
        v26 = *(_QWORD *)(v24 + 16);
        v25 = *(_QWORD *)(v24 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1A5796284(v25 > 1, v26 + 1, 1);
          v19 = v37;
          v24 = v44;
        }
        *(_QWORD *)(v24 + 16) = v26 + 1;
        v27 = v24 + 16 * v26;
        *(_QWORD *)(v27 + 32) = v21;
        *(_QWORD *)(v27 + 40) = v23;
        v18 += v39;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      v9 = v36;
    }
    else
    {
      swift_bridgeObjectRelease();
      v24 = MEMORY[0x1E0DEE9D8];
    }
    v44 = v24;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A48);
    sub_1A5799394();
    v28 = sub_1A594B268();
    v30 = v31;
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, void (*)(_QWORD), uint64_t))(v2 + 16))(v6, v9, v1);
    v28 = sub_1A5798FB8((uint64_t)v6);
    v30 = v29;
  }
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ClientCommand.Encoded);
  v32 = v28;
  v33 = v30;
  result._object = v33;
  result._countAndFlagsBits = v32;
  return result;
}

uint64_t variable initialization expression of ClientCommand.EncodingOptions.literal()
{
  return 0;
}

uint64_t variable initialization expression of ClientCommand.EncodingOptions.messageBodyEncoding()
{
  return 0;
}

uint64_t variable initialization expression of ClientCommand.EncodingOptions.mode()
{
  return 0;
}

uint64_t variable initialization expression of MessageData.bodyStructure@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[184];

  sub_1A55D935C((uint64_t)v3);
  return sub_1A55032A0((uint64_t)v3, a1, &qword_1EE7A03D8);
}

double variable initialization expression of MessageData.envelope@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 112) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t variable initialization expression of MessageData.flags()
{
  return 0;
}

uint64_t variable initialization expression of MessageData.gmailLabels()
{
  return 0;
}

uint64_t variable initialization expression of MessageData.internalDate()
{
  return 0;
}

uint64_t variable initialization expression of MessageData.modificationSequence()
{
  return 0;
}

uint64_t variable initialization expression of MessageData.preview()
{
  return 0;
}

uint64_t variable initialization expression of MessageData.BodySection.origin()
{
  return 0x100000000;
}

uint64_t variable initialization expression of MessageData.BodySection.data@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for MessageData.BodyData();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1A57958FC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t variable initialization expression of ServerID.name()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.version()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.os()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.osVersion()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.vendor()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.supportURL()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.address()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.date()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.command()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.arguments()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.environment()
{
  return 0;
}

uint64_t variable initialization expression of ServerResponseTranscoder.outputBuffer()
{
  sub_1A594A458();
  return swift_retain();
}

uint64_t variable initialization expression of ServerResponseFramingParser.byteCountNeededToCompleteFrame()
{
  return 0;
}

void sub_1A57959F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5795A54(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1A5795C38);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_1A5795C5C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5795CB8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_1A57959F4((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_1A54E46E8(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1A5795E80(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_1A57B244C(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_1A594AE60();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5795FE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1A57B2558(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[23 * v8 + 4];
  if (a1 + 32 < v9 + 184 * v2 && v9 < a1 + 32 + 184 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5796140(uint64_t a1)
{
  char **v1;
  int64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1A57B2460(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v11 = *((_QWORD *)v3 + 2);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *((_QWORD *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5796284(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A5796348(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A57962A0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A57964B0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A57962BC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A579660C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A57962D8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A5796790(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A57962F4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A57968F4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A5796310(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A5796A74(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A579632C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A5796D40(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A5796348(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796298);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A57964B0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B398);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A579660C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA410);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  v15 = 2 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v10 + 4, a4 + 4, v15 * 8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA418);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5796790(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AEA0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = v8 << 6;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A57968F4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AEE8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 136);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[136 * v8])
      memmove(v12, v13, 136 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[136 * v8] || v12 >= &v13[136 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5796A74(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA408);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5796BD8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF58);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5796D40(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7962C8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7993B8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5796EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1A594CE88();
  if (v3)
    __asm { BR              X9 }
  return result;
}

uint64_t sub_1A5796FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a4 + 16);
  result = sub_1A594CE88();
  if (v6)
  {
    v8 = *(_QWORD *)(a3 + 16);
    swift_retain();
    swift_retain();
    result = swift_retain();
    v9 = 0;
    while (v8)
    {
      v10 = *(_QWORD *)(a4 + v9 + 40);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594B1D8();
      sub_1A594CE94();
      if (v10)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A594B1D8();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease_n();
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
      --v8;
      v9 += 16;
      if (!--v6)
      {
        swift_release();
        swift_release();
        return swift_release();
      }
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_1A579713C()
{
  unint64_t result;

  result = qword_1EE797030;
  if (!qword_1EE797030)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UID, &type metadata for UID);
    atomic_store(result, (unint64_t *)&qword_1EE797030);
  }
  return result;
}

unint64_t sub_1A5797180(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A57971BC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy64_8_1(a2, a1);
  return a2;
}

uint64_t sub_1A57971F8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v14;

  result = sub_1A594CED0();
  v4 = 0;
  v5 = 0;
  v8 = *(_QWORD *)(a2 + 56);
  v7 = a2 + 56;
  v6 = v8;
  v9 = 1 << *(_BYTE *)(v7 - 24);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v6;
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (!v11)
    {
      if (__OFADD__(v5++, 1))
        goto LABEL_18;
      if (v5 >= v12)
        return sub_1A594CE88();
      v11 = *(_QWORD *)(v7 + 8 * v5);
      if (!v11)
        break;
    }
LABEL_5:
    v11 &= v11 - 1;
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v4 ^= result;
  }
  v14 = v5 + 1;
  if (v5 + 1 >= v12)
    return sub_1A594CE88();
  v11 = *(_QWORD *)(v7 + 8 * v14);
  if (v11)
  {
    ++v5;
    goto LABEL_5;
  }
  while (1)
  {
    v5 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v5 >= v12)
      return sub_1A594CE88();
    v11 = *(_QWORD *)(v7 + 8 * v5);
    ++v14;
    if (v11)
      goto LABEL_5;
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1A5797328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1A5949BE8();
  v11 = result;
  if (result)
  {
    result = sub_1A5949C0C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1A5949C00();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1A57959F4(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1A57973DC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1A5797420()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1A5797454 + dword_1A5797514[v0 >> 62]))();
}

uint64_t sub_1A5797464@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 == BYTE6(v1))
  {
    if (a1 < 1)
    {
      v5 = 1;
    }
    else
    {
      sub_1A54E42B4(v2, v1);
      sub_1A5795C5C(v4, v3);
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

void _s13IMAP2Protocol13ClientCommandO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;

  v69 = a1;
  v70 = (char *)a2;
  v52 = sub_1A594A0EC();
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v48[1] = (char *)v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7964C8);
  MEMORY[0x1E0C80A78](v49);
  v51 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
  MEMORY[0x1E0C80A78](v4);
  v48[2] = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v53 = (char *)v48 - v7;
  MEMORY[0x1E0C80A78](v8);
  v54 = (char *)v48 - v9;
  v68 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v68);
  v67 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v66 = (char *)v48 - v12;
  MEMORY[0x1E0C80A78](v13);
  v65 = (char *)v48 - v14;
  MEMORY[0x1E0C80A78](v15);
  v64 = (char *)v48 - v16;
  MEMORY[0x1E0C80A78](v17);
  v63 = (char *)v48 - v18;
  MEMORY[0x1E0C80A78](v19);
  v62 = (char *)v48 - v20;
  MEMORY[0x1E0C80A78](v21);
  v61 = (char *)v48 - v22;
  MEMORY[0x1E0C80A78](v23);
  v59 = (char *)v48 - v24;
  MEMORY[0x1E0C80A78](v25);
  v58 = (char *)v48 - v26;
  MEMORY[0x1E0C80A78](v27);
  v57 = (char *)v48 - v28;
  MEMORY[0x1E0C80A78](v29);
  v60 = (char *)v48 - v30;
  MEMORY[0x1E0C80A78](v31);
  v56 = (char *)v48 - v32;
  MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v34);
  v55 = (char *)v48 - v35;
  MEMORY[0x1E0C80A78](v36);
  MEMORY[0x1E0C80A78](v37);
  MEMORY[0x1E0C80A78](v38);
  MEMORY[0x1E0C80A78](v39);
  MEMORY[0x1E0C80A78](v40);
  MEMORY[0x1E0C80A78](v41);
  v42 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA428);
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)v48 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = (uint64_t)&v44[*(int *)(v45 + 48)];
  sub_1A55034B8(v69, (uint64_t)v44, type metadata accessor for ClientCommand);
  v69 = v46;
  sub_1A55034B8((uint64_t)v70, v46, type metadata accessor for ClientCommand);
  v70 = v44;
  v47 = (char *)&loc_1A579795C + dword_1A5798EDC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A579796C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  char v19;

  sub_1A55034B8(*(_QWORD *)(v1 - 96), v0, type metadata accessor for ClientCommand);
  v3 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(unsigned __int8 *)(v0 + 38);
  v7 = *(unsigned __int16 *)(v0 + 36);
  v8 = *(unsigned int *)(v0 + 32);
  v9 = *(uint64_t **)(v1 - 104);
  if (!swift_getEnumCaseMultiPayload())
  {
    v12 = *v9;
    v13 = v9[1];
    v14 = v9[2];
    *(_QWORD *)(v1 - 112) = v9[3];
    *(_DWORD *)(v1 - 120) = *((unsigned __int8 *)v9 + 38);
    *(_DWORD *)(v1 - 128) = *((unsigned __int16 *)v9 + 18);
    v15 = *((unsigned int *)v9 + 8);
    if (v3 == v12 && v2 == v13)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v16 = sub_1A594CD38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
        goto LABEL_16;
    }
    if (v4)
    {
      if (v14)
      {
        v17 = (v15 | ((unint64_t)(*(_DWORD *)(v1 - 128) | (*(_DWORD *)(v1 - 120) << 16)) << 32)) & 0xFFFFFFFFFFFFFFLL;
        swift_retain();
        v18 = swift_retain();
        v19 = static ByteBuffer.== infix(_:_:)(v18, v5, (v8 | ((unint64_t)(v7 | (v6 << 16)) << 32)) & 0xFFFFFFFFFFFFFFLL, v14, *(_QWORD *)(v1 - 112), v17);
        swift_release_n();
        swift_release_n();
        if ((v19 & 1) != 0)
          goto LABEL_15;
LABEL_17:
        sub_1A55034FC(*(_QWORD *)(v1 - 96), type metadata accessor for ClientCommand);
        goto LABEL_3;
      }
    }
    else if (!v14)
    {
LABEL_15:
      sub_1A55034FC(*(_QWORD *)(v1 - 96), type metadata accessor for ClientCommand);
      v10 = 1;
      return v10 & 1;
    }
LABEL_16:
    swift_release();
    swift_release();
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_1A5510284(*(_QWORD *)(v1 - 96), &qword_1EE7AA428);
LABEL_3:
  v10 = 0;
  return v10 & 1;
}

uint64_t type metadata accessor for LoggableCommand(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE797DE0);
}

uint64_t sub_1A5798F60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClientCommand(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5798FA4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A57A4E2C(a1, *(unsigned __int8 *)(v1 + 16) | ((unint64_t)*(unsigned int *)(v1 + 20) << 32), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A5798FB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t i;
  unsigned int v11;
  unsigned __int8 v12;
  char v13;
  unsigned int v15;
  BOOL v16;
  double (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unsigned int v25;
  unsigned __int8 v26;
  uint64_t v27;
  unint64_t v28;

  v2 = sub_1A594AD04();
  v21 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A594ADD0();
  v27 = 0;
  v28 = 0xE000000000000000;
  v22 = a1;
  v5 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  MEMORY[0x1A85AD968](v5);
  v6 = 0;
  v7 = 0;
  v8 = MEMORY[0x1E0DEF478];
  v9 = v27;
  for (i = v28; ; i = v24)
  {
    v25 = v6;
    v26 = v7;
    if (!v7)
      break;
    if ((v6 & 0x80) == 0)
    {
      sub_1A579C740();
      v17 = sub_1A570358C();
      sub_1A579E094(0);
      ((void (*)(uint64_t *, _QWORD))v17)(&v23, 0);
      goto LABEL_16;
    }
LABEL_6:
    sub_1A55E1698((unint64_t *)&unk_1EE798EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF468], v8);
    while (1)
    {
      sub_1A594C3C0();
      if ((v23 & 0x100) != 0)
        break;
      v11 = ((-255 << v26) - 1) & v25 | (v23 << v26);
      v25 = v11;
      v12 = v26 + 8;
      v26 += 8;
      if (v26 >= 0x20u)
        goto LABEL_12;
    }
    v12 = v26;
    if (!v26)
      goto LABEL_32;
    v11 = v25;
LABEL_12:
    if ((v11 & 0xC0E0) == 0x80C0)
    {
      if ((v11 & 0x1E) == 0)
        goto LABEL_31;
      v13 = 16;
    }
    else if ((v11 & 0xC0C0F0) == 0x8080E0)
    {
      if ((v11 & 0x200F) == 0 || (v11 & 0x200F) == 8205)
        goto LABEL_31;
      v13 = 24;
    }
    else
    {
      v15 = v11 & 0x3007;
      v16 = (v11 & 0xC0C0C0F8) != 0x808080F0 || v15 == 0;
      if (v16 || __rev16(v15) > 0x400)
      {
LABEL_31:
        sub_1A594CF48();
        v27 = v9;
        v28 = i;
        sub_1A594B5F8();
        goto LABEL_33;
      }
      v13 = 32;
    }
    v25 = (unint64_t)v11 >> v13;
    v26 = v12 - v13;
LABEL_16:
    v6 = v25;
    v7 = v26;
    v23 = v9;
    v24 = i;
    sub_1A594B52C();
    v9 = v23;
  }
  sub_1A55E1698((unint64_t *)&unk_1EE798EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF468], v8);
  sub_1A594C3C0();
  if ((v23 & 0x100) == 0)
  {
    if ((v23 & 0x80) == 0)
      goto LABEL_16;
    v25 = ((-255 << v26) - 1) & v25 | (v23 << v26);
    v26 += 8;
    goto LABEL_6;
  }
LABEL_32:
  v27 = v9;
  v28 = i;
LABEL_33:
  v18 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v22, v18);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return v27;
}

unint64_t sub_1A5799394()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE795F90;
  if (!qword_1EE795F90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE799A48);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EE795F90);
  }
  return result;
}

uint64_t sub_1A57993E0()
{
  return sub_1A55E1698(&qword_1EE7AA3F0, type metadata accessor for ClientCommand, (uint64_t)&protocol conformance descriptor for ClientCommand);
}

unint64_t sub_1A5799410()
{
  unint64_t result;

  result = qword_1EE7AA3F8;
  if (!qword_1EE7AA3F8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ClientCommand.FetchData, &type metadata for ClientCommand.FetchData);
    atomic_store(result, (unint64_t *)&qword_1EE7AA3F8);
  }
  return result;
}

unint64_t sub_1A5799458()
{
  unint64_t result;

  result = qword_1EE797D98;
  if (!qword_1EE797D98)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ClientCommand.SelectOption, &type metadata for ClientCommand.SelectOption);
    atomic_store(result, (unint64_t *)&qword_1EE797D98);
  }
  return result;
}

unint64_t sub_1A57994A0()
{
  unint64_t result;

  result = qword_1EE7AA400;
  if (!qword_1EE7AA400)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ClientCommand.Kind, &type metadata for ClientCommand.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7AA400);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ClientCommand(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  char v29;
  unint64_t v30;
  unsigned int v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v7;
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
        *((_DWORD *)a1 + 8) = *(_DWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v10 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v10;
        v11 = *(_QWORD *)(a2 + 16);
        v12 = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 2) = v11;
        *((_QWORD *)a1 + 3) = v12;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796828);
        v14 = *(int *)(v13 + 64);
        v15 = &a1[v14];
        v16 = (const void *)(a2 + v14);
        v17 = sub_1A594A0EC();
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        v37 = *(int *)(v13 + 80);
        v38 = (uint64_t *)&a1[v37];
        v39 = (uint64_t *)(a2 + v37);
        v40 = *v39;
        v41 = v39[1];
        sub_1A54E42B4(*v39, v41);
        *v38 = v40;
        v38[1] = v41;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
      case 0xCu:
        v20 = *(_QWORD *)a2;
        sub_1A5799ADC(v20);
        *(_QWORD *)a1 = v20;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
      case 0xDu:
        v21 = *(_QWORD *)a2;
        sub_1A5799ADC(*(_QWORD *)a2);
        v22 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = v21;
        *((_QWORD *)a1 + 1) = v22;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        v23 = *(_QWORD *)a2;
        v24 = *(_DWORD *)(a2 + 8);
        v25 = *(_BYTE *)(a2 + 12);
        sub_1A54E4334(*(_QWORD *)a2, v24, v25);
        *(_QWORD *)a1 = v23;
        *((_DWORD *)a1 + 2) = v24;
        a1[12] = v25;
        v26 = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_QWORD *)a1 + 3) = v26;
        a1[32] = *(_BYTE *)(a2 + 32);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        v27 = *(_QWORD *)a2;
        v28 = *(_DWORD *)(a2 + 8);
        v29 = *(_BYTE *)(a2 + 12);
        sub_1A54E4334(*(_QWORD *)a2, v28, v29);
        *(_QWORD *)a1 = v27;
        *((_DWORD *)a1 + 2) = v28;
        a1[12] = v29;
        *((_WORD *)a1 + 8) = *(_WORD *)(a2 + 16);
        *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
      case 0x11u:
        v30 = *(_QWORD *)a2;
        v31 = *(_DWORD *)(a2 + 8);
        v32 = *(_BYTE *)(a2 + 12);
        sub_1A54E4334(*(_QWORD *)a2, v31, v32);
        *(_QWORD *)a1 = v30;
        *((_DWORD *)a1 + 2) = v31;
        a1[12] = v32;
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x12u:
        v33 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v33;
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v34 = *(_QWORD *)(a2 + 16);
        *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = v34;
        v35 = *(_QWORD *)(a2 + 32);
        *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 4) = v35;
        v36 = *(_QWORD *)(a2 + 48);
        *((_QWORD *)a1 + 5) = *(_QWORD *)(a2 + 40);
        *((_QWORD *)a1 + 6) = v36;
        *((_QWORD *)a1 + 7) = *(_QWORD *)(a2 + 56);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

unint64_t sub_1A5799ADC(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t destroy for ClientCommand(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      return swift_release();
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 2:
    case 6:
    case 8:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 3:
    case 4:
    case 5:
      goto LABEL_17;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796828);
      v4 = a1 + *(int *)(v3 + 64);
      v5 = sub_1A594A0EC();
      v6 = *(_QWORD *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      return sub_1A54E46E8(*(_QWORD *)(a1 + *(int *)(v3 + 80)), *(_QWORD *)(a1 + *(int *)(v3 + 80) + 8));
    case 10:
    case 12:
      return sub_1A5797180(*(_QWORD *)a1);
    case 11:
    case 13:
      sub_1A5797180(*(_QWORD *)a1);
      goto LABEL_17;
    case 14:
    case 16:
    case 17:
      sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
      goto LABEL_17;
    case 15:
      sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
      goto LABEL_17;
    case 18:
      swift_release();
      swift_release();
      return swift_release();
    case 19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_17:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for ClientCommand(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unsigned int v25;
  char v26;
  unint64_t v27;
  unsigned int v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v6;
      *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
      *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
      *((_DWORD *)a1 + 8) = *(_DWORD *)(a2 + 32);
      *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      goto LABEL_20;
    case 1u:
      v7 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v7;
      v8 = *(_QWORD *)(a2 + 16);
      v9 = *(_QWORD *)(a2 + 24);
      *((_QWORD *)a1 + 2) = v8;
      *((_QWORD *)a1 + 3) = v9;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 2u:
    case 8u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 3u:
    case 4u:
    case 5u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 6u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
      *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 7u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
      *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
      *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 9u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796828);
      v11 = *(int *)(v10 + 64);
      v12 = &a1[v11];
      v13 = (const void *)(a2 + v11);
      v14 = sub_1A594A0EC();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      v34 = *(int *)(v10 + 80);
      v35 = (uint64_t *)&a1[v34];
      v36 = (uint64_t *)(a2 + v34);
      v37 = *v36;
      v38 = v36[1];
      sub_1A54E42B4(*v36, v38);
      *v35 = v37;
      v35[1] = v38;
      goto LABEL_20;
    case 0xAu:
    case 0xCu:
      v17 = *(_QWORD *)a2;
      sub_1A5799ADC(v17);
      *(_QWORD *)a1 = v17;
      goto LABEL_20;
    case 0xBu:
    case 0xDu:
      v18 = *(_QWORD *)a2;
      sub_1A5799ADC(*(_QWORD *)a2);
      v19 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = v18;
      *((_QWORD *)a1 + 1) = v19;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0xEu:
      v20 = *(_QWORD *)a2;
      v21 = *(_DWORD *)(a2 + 8);
      v22 = *(_BYTE *)(a2 + 12);
      sub_1A54E4334(*(_QWORD *)a2, v21, v22);
      *(_QWORD *)a1 = v20;
      *((_DWORD *)a1 + 2) = v21;
      a1[12] = v22;
      v23 = *(_QWORD *)(a2 + 24);
      *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
      *((_QWORD *)a1 + 3) = v23;
      a1[32] = *(_BYTE *)(a2 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0xFu:
      v24 = *(_QWORD *)a2;
      v25 = *(_DWORD *)(a2 + 8);
      v26 = *(_BYTE *)(a2 + 12);
      sub_1A54E4334(*(_QWORD *)a2, v25, v26);
      *(_QWORD *)a1 = v24;
      *((_DWORD *)a1 + 2) = v25;
      a1[12] = v26;
      *((_WORD *)a1 + 8) = *(_WORD *)(a2 + 16);
      *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0x10u:
    case 0x11u:
      v27 = *(_QWORD *)a2;
      v28 = *(_DWORD *)(a2 + 8);
      v29 = *(_BYTE *)(a2 + 12);
      sub_1A54E4334(*(_QWORD *)a2, v28, v29);
      *(_QWORD *)a1 = v27;
      *((_DWORD *)a1 + 2) = v28;
      a1[12] = v29;
      *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
      *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0x12u:
      v30 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v30;
      *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_20;
    case 0x13u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v31 = *(_QWORD *)(a2 + 16);
      *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
      *((_QWORD *)a1 + 2) = v31;
      v32 = *(_QWORD *)(a2 + 32);
      *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
      *((_QWORD *)a1 + 4) = v32;
      v33 = *(_QWORD *)(a2 + 48);
      *((_QWORD *)a1 + 5) = *(_QWORD *)(a2 + 40);
      *((_QWORD *)a1 + 6) = v33;
      *((_QWORD *)a1 + 7) = *(_QWORD *)(a2 + 56);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_20:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for ClientCommand(char *a1, uint64_t a2, uint64_t a3)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unsigned int v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned int v24;
  char v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;

  if (a1 != (char *)a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for ClientCommand);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        *((_DWORD *)a1 + 7) = *(_DWORD *)(a2 + 28);
        v6 = *(_DWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
        *((_DWORD *)a1 + 8) = v6;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        goto LABEL_21;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 2u:
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 3u:
      case 4u:
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 7u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 9u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796828);
        v8 = *(int *)(v7 + 64);
        v9 = &a1[v8];
        v10 = (const void *)(a2 + v8);
        v11 = sub_1A594A0EC();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        v26 = *(int *)(v7 + 80);
        v27 = (uint64_t *)&a1[v26];
        v28 = (uint64_t *)(a2 + v26);
        v29 = *v28;
        v30 = v28[1];
        sub_1A54E42B4(*v28, v30);
        *v27 = v29;
        v27[1] = v30;
        goto LABEL_21;
      case 0xAu:
      case 0xCu:
        v14 = *(_QWORD *)a2;
        sub_1A5799ADC(v14);
        *(_QWORD *)a1 = v14;
        goto LABEL_21;
      case 0xBu:
      case 0xDu:
        v15 = *(_QWORD *)a2;
        sub_1A5799ADC(*(_QWORD *)a2);
        *(_QWORD *)a1 = v15;
        *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0xEu:
        v16 = *(_QWORD *)a2;
        v17 = *(_DWORD *)(a2 + 8);
        v18 = *(_BYTE *)(a2 + 12);
        sub_1A54E4334(*(_QWORD *)a2, v17, v18);
        *(_QWORD *)a1 = v16;
        *((_DWORD *)a1 + 2) = v17;
        a1[12] = v18;
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        v19 = *(_QWORD *)(a2 + 24);
        a1[32] = *(_BYTE *)(a2 + 32);
        *((_QWORD *)a1 + 3) = v19;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0xFu:
        v20 = *(_QWORD *)a2;
        v21 = *(_DWORD *)(a2 + 8);
        v22 = *(_BYTE *)(a2 + 12);
        sub_1A54E4334(*(_QWORD *)a2, v21, v22);
        *(_QWORD *)a1 = v20;
        *((_DWORD *)a1 + 2) = v21;
        a1[12] = v22;
        a1[16] = *(_BYTE *)(a2 + 16);
        a1[17] = *(_BYTE *)(a2 + 17);
        *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0x10u:
      case 0x11u:
        v23 = *(_QWORD *)a2;
        v24 = *(_DWORD *)(a2 + 8);
        v25 = *(_BYTE *)(a2 + 12);
        sub_1A54E4334(*(_QWORD *)a2, v24, v25);
        *(_QWORD *)a1 = v23;
        *((_DWORD *)a1 + 2) = v24;
        a1[12] = v25;
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0x12u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_21;
      case 0x13u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
        *((_QWORD *)a1 + 5) = *(_QWORD *)(a2 + 40);
        *((_QWORD *)a1 + 6) = *(_QWORD *)(a2 + 48);
        *((_QWORD *)a1 + 7) = *(_QWORD *)(a2 + 56);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_DWORD *initializeWithTake for ClientCommand(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload() == 9)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1[2] = a2[2];
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796828);
    v7 = *(int *)(v6 + 64);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1A594A0EC();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(_OWORD *)((char *)a1 + *(int *)(v6 + 80)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 80));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_DWORD *assignWithTake for ClientCommand(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for ClientCommand);
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[2] = a2[2];
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796828);
      v7 = *(int *)(v6 + 64);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1A594A0EC();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      *(_OWORD *)((char *)a1 + *(int *)(v6 + 80)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 80));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1A579AADC()
{
  unint64_t v0;
  char v1;
  const char *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  char *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  v2 = "'";
  v3 = &unk_1A59B9178;
  v4 = &unk_1A59B9190;
  v5 = &unk_1A59B91A8;
  v6 = &unk_1A59B91A8;
  v7 = &unk_1A59B91A8;
  v8 = &unk_1A59B91C0;
  v9 = &unk_1A59B91D8;
  v10 = &unk_1A59B9190;
  sub_1A579ABFC();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    v11 = &v1;
    v12 = &unk_1A59B9208;
    v13 = &unk_1A59B9220;
    v14 = &unk_1A59B9208;
    v15 = &unk_1A59B9220;
    v16 = &unk_1A59B9238;
    v17 = &unk_1A59B9178;
    v18 = &unk_1A59B91C0;
    v19 = &unk_1A59B91C0;
    v20 = &unk_1A59B9190;
    v21 = &unk_1A59B9250;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_1A579ABFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE7964B0)
  {
    sub_1A594A0EC();
    v0 = sub_1A594C354();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE7964B0);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SearchRequest.RangesToExclude(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for SearchRequest.RangesToExclude(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  return a1;
}

__n128 __swift_memcpy17_8_2(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SearchRequest.RangesToExclude(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchRequest.RangesToExclude(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for ClientCommand.FetchData()
{
  return &type metadata for ClientCommand.FetchData;
}

uint64_t storeEnumTagSinglePayload for ClientCommand.SelectOption(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A579ADD0 + 4 * byte_1A59B8EFC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A579ADF0 + 4 * byte_1A59B8F01[v4]))();
}

_BYTE *sub_1A579ADD0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A579ADF0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A579ADF8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A579AE00(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A579AE08(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A579AE10(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.SelectOption()
{
  return &type metadata for ClientCommand.SelectOption;
}

_BYTE *__swift_memcpy1_1_4(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ClientCommand.Kind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE5)
    goto LABEL_17;
  if (a2 + 27 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 27) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 27;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 27;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 27;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1C;
  v8 = v6 - 28;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientCommand.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 27 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 27) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE4)
    return ((uint64_t (*)(void))((char *)&loc_1A579AF14 + 4 * byte_1A59B8F0B[v4]))();
  *a1 = a2 + 27;
  return ((uint64_t (*)(void))((char *)sub_1A579AF48 + 4 * byte_1A59B8F06[v4]))();
}

uint64_t sub_1A579AF48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A579AF50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A579AF58);
  return result;
}

uint64_t sub_1A579AF64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A579AF6CLL);
  *(_BYTE *)result = a2 + 27;
  return result;
}

uint64_t sub_1A579AF70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A579AF78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.Kind()
{
  return &type metadata for ClientCommand.Kind;
}

uint64_t *initializeBufferWithCopyOfBuffer for LoggableCommand(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int v30;
  char v31;
  unint64_t v32;
  unsigned int v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v9 = *((_QWORD *)v7 + 1);
        *(_QWORD *)v6 = *(_QWORD *)v7;
        *((_QWORD *)v6 + 1) = v9;
        *((_QWORD *)v6 + 2) = *((_QWORD *)v7 + 2);
        *((_QWORD *)v6 + 3) = *((_QWORD *)v7 + 3);
        *((_DWORD *)v6 + 8) = *((_DWORD *)v7 + 8);
        *(_DWORD *)(v6 + 35) = *(_DWORD *)(v7 + 35);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v12 = *((_QWORD *)v7 + 1);
        *(_QWORD *)v6 = *(_QWORD *)v7;
        *((_QWORD *)v6 + 1) = v12;
        v13 = *((_QWORD *)v7 + 2);
        v14 = *((_QWORD *)v7 + 3);
        *((_QWORD *)v6 + 2) = v13;
        *((_QWORD *)v6 + 3) = v14;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 8u:
        *(_QWORD *)v6 = *(_QWORD *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((_QWORD *)v6 + 2) = *((_QWORD *)v7 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
      case 5u:
        *(_QWORD *)v6 = *(_QWORD *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(_QWORD *)v6 = *(_QWORD *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((_QWORD *)v6 + 2) = *((_QWORD *)v7 + 2);
        *((_DWORD *)v6 + 6) = *((_DWORD *)v7 + 6);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(_QWORD *)v6 = *(_QWORD *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((_QWORD *)v6 + 2) = *((_QWORD *)v7 + 2);
        *((_DWORD *)v6 + 6) = *((_DWORD *)v7 + 6);
        *((_QWORD *)v6 + 4) = *((_QWORD *)v7 + 4);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(_QWORD *)v6 = *(_QWORD *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((_QWORD *)v6 + 2) = *((_QWORD *)v7 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796828);
        v16 = *(int *)(v15 + 64);
        v17 = &v6[v16];
        v18 = &v7[v16];
        v19 = sub_1A594A0EC();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        v39 = *(int *)(v15 + 80);
        v40 = (uint64_t *)&v6[v39];
        v41 = (uint64_t *)&v7[v39];
        v42 = *v41;
        v43 = v41[1];
        sub_1A54E42B4(*v41, v43);
        *v40 = v42;
        v40[1] = v43;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
      case 0xCu:
        v22 = *(_QWORD *)v7;
        sub_1A5799ADC(v22);
        *(_QWORD *)v6 = v22;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
      case 0xDu:
        v23 = *(_QWORD *)v7;
        sub_1A5799ADC(*(_QWORD *)v7);
        v24 = *((_QWORD *)v7 + 1);
        *(_QWORD *)v6 = v23;
        *((_QWORD *)v6 + 1) = v24;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        v25 = *(_QWORD *)v7;
        v26 = *((_DWORD *)v7 + 2);
        v27 = v7[12];
        sub_1A54E4334(*(_QWORD *)v7, v26, v27);
        *(_QWORD *)v6 = v25;
        *((_DWORD *)v6 + 2) = v26;
        v6[12] = v27;
        v28 = *((_QWORD *)v7 + 3);
        *((_QWORD *)v6 + 2) = *((_QWORD *)v7 + 2);
        *((_QWORD *)v6 + 3) = v28;
        v6[32] = v7[32];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        v29 = *(_QWORD *)v7;
        v30 = *((_DWORD *)v7 + 2);
        v31 = v7[12];
        sub_1A54E4334(*(_QWORD *)v7, v30, v31);
        *(_QWORD *)v6 = v29;
        *((_DWORD *)v6 + 2) = v30;
        v6[12] = v31;
        *((_WORD *)v6 + 8) = *((_WORD *)v7 + 8);
        *((_QWORD *)v6 + 3) = *((_QWORD *)v7 + 3);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
      case 0x11u:
        v32 = *(_QWORD *)v7;
        v33 = *((_DWORD *)v7 + 2);
        v34 = v7[12];
        sub_1A54E4334(*(_QWORD *)v7, v33, v34);
        *(_QWORD *)v6 = v32;
        *((_DWORD *)v6 + 2) = v33;
        v6[12] = v34;
        *((_QWORD *)v6 + 2) = *((_QWORD *)v7 + 2);
        *((_DWORD *)v6 + 6) = *((_DWORD *)v7 + 6);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x12u:
        v35 = *((_QWORD *)v7 + 1);
        *(_QWORD *)v6 = *(_QWORD *)v7;
        *((_QWORD *)v6 + 1) = v35;
        *((_QWORD *)v6 + 2) = *((_QWORD *)v7 + 2);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
        *(_DWORD *)v6 = *(_DWORD *)v7;
        v36 = *((_QWORD *)v7 + 2);
        *((_QWORD *)v6 + 1) = *((_QWORD *)v7 + 1);
        *((_QWORD *)v6 + 2) = v36;
        v37 = *((_QWORD *)v7 + 4);
        *((_QWORD *)v6 + 3) = *((_QWORD *)v7 + 3);
        *((_QWORD *)v6 + 4) = v37;
        v38 = *((_QWORD *)v7 + 6);
        *((_QWORD *)v6 + 5) = *((_QWORD *)v7 + 5);
        *((_QWORD *)v6 + 6) = v38;
        *((_QWORD *)v6 + 7) = *((_QWORD *)v7 + 7);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        break;
    }
  }
  return v3;
}

unint64_t destroy for LoggableCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1 + *(int *)(a2 + 20);
  type metadata accessor for ClientCommand(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      return swift_release();
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 2:
    case 6:
    case 8:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 3:
    case 4:
    case 5:
      goto LABEL_17;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796828);
      v5 = v2 + *(int *)(v4 + 64);
      v6 = sub_1A594A0EC();
      v7 = *(_QWORD *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      return sub_1A54E46E8(*(_QWORD *)(v2 + *(int *)(v4 + 80)), *(_QWORD *)(v2 + *(int *)(v4 + 80) + 8));
    case 10:
    case 12:
      return sub_1A5797180(*(_QWORD *)v2);
    case 11:
    case 13:
      sub_1A5797180(*(_QWORD *)v2);
      goto LABEL_17;
    case 14:
    case 16:
    case 17:
      sub_1A54E3458(*(_QWORD *)v2, *(unsigned int *)(v2 + 8), *(_BYTE *)(v2 + 12));
      goto LABEL_17;
    case 15:
      sub_1A54E3458(*(_QWORD *)v2, *(unsigned int *)(v2 + 8), *(_BYTE *)(v2 + 12));
      goto LABEL_17;
    case 18:
      swift_release();
      swift_release();
      return swift_release();
    case 19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_17:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for LoggableCommand(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unsigned int v27;
  char v28;
  unint64_t v29;
  unsigned int v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for ClientCommand(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v8 = *((_QWORD *)v6 + 1);
      *(_QWORD *)v5 = *(_QWORD *)v6;
      *((_QWORD *)v5 + 1) = v8;
      *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
      *((_QWORD *)v5 + 3) = *((_QWORD *)v6 + 3);
      *((_DWORD *)v5 + 8) = *((_DWORD *)v6 + 8);
      *(_DWORD *)(v5 + 35) = *(_DWORD *)(v6 + 35);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      goto LABEL_20;
    case 1u:
      v9 = *((_QWORD *)v6 + 1);
      *(_QWORD *)v5 = *(_QWORD *)v6;
      *((_QWORD *)v5 + 1) = v9;
      v10 = *((_QWORD *)v6 + 2);
      v11 = *((_QWORD *)v6 + 3);
      *((_QWORD *)v5 + 2) = v10;
      *((_QWORD *)v5 + 3) = v11;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 2u:
    case 8u:
      *(_QWORD *)v5 = *(_QWORD *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 3u:
    case 4u:
    case 5u:
      *(_QWORD *)v5 = *(_QWORD *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 6u:
      *(_QWORD *)v5 = *(_QWORD *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
      *((_DWORD *)v5 + 6) = *((_DWORD *)v6 + 6);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 7u:
      *(_QWORD *)v5 = *(_QWORD *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
      *((_DWORD *)v5 + 6) = *((_DWORD *)v6 + 6);
      *((_QWORD *)v5 + 4) = *((_QWORD *)v6 + 4);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 9u:
      *(_QWORD *)v5 = *(_QWORD *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796828);
      v13 = *(int *)(v12 + 64);
      v14 = &v5[v13];
      v15 = &v6[v13];
      v16 = sub_1A594A0EC();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      v36 = *(int *)(v12 + 80);
      v37 = (uint64_t *)&v5[v36];
      v38 = (uint64_t *)&v6[v36];
      v39 = *v38;
      v40 = v38[1];
      sub_1A54E42B4(*v38, v40);
      *v37 = v39;
      v37[1] = v40;
      goto LABEL_20;
    case 0xAu:
    case 0xCu:
      v19 = *(_QWORD *)v6;
      sub_1A5799ADC(v19);
      *(_QWORD *)v5 = v19;
      goto LABEL_20;
    case 0xBu:
    case 0xDu:
      v20 = *(_QWORD *)v6;
      sub_1A5799ADC(*(_QWORD *)v6);
      v21 = *((_QWORD *)v6 + 1);
      *(_QWORD *)v5 = v20;
      *((_QWORD *)v5 + 1) = v21;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0xEu:
      v22 = *(_QWORD *)v6;
      v23 = *((_DWORD *)v6 + 2);
      v24 = v6[12];
      sub_1A54E4334(*(_QWORD *)v6, v23, v24);
      *(_QWORD *)v5 = v22;
      *((_DWORD *)v5 + 2) = v23;
      v5[12] = v24;
      v25 = *((_QWORD *)v6 + 3);
      *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
      *((_QWORD *)v5 + 3) = v25;
      v5[32] = v6[32];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0xFu:
      v26 = *(_QWORD *)v6;
      v27 = *((_DWORD *)v6 + 2);
      v28 = v6[12];
      sub_1A54E4334(*(_QWORD *)v6, v27, v28);
      *(_QWORD *)v5 = v26;
      *((_DWORD *)v5 + 2) = v27;
      v5[12] = v28;
      *((_WORD *)v5 + 8) = *((_WORD *)v6 + 8);
      *((_QWORD *)v5 + 3) = *((_QWORD *)v6 + 3);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0x10u:
    case 0x11u:
      v29 = *(_QWORD *)v6;
      v30 = *((_DWORD *)v6 + 2);
      v31 = v6[12];
      sub_1A54E4334(*(_QWORD *)v6, v30, v31);
      *(_QWORD *)v5 = v29;
      *((_DWORD *)v5 + 2) = v30;
      v5[12] = v31;
      *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
      *((_DWORD *)v5 + 6) = *((_DWORD *)v6 + 6);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0x12u:
      v32 = *((_QWORD *)v6 + 1);
      *(_QWORD *)v5 = *(_QWORD *)v6;
      *((_QWORD *)v5 + 1) = v32;
      *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_20;
    case 0x13u:
      *(_DWORD *)v5 = *(_DWORD *)v6;
      v33 = *((_QWORD *)v6 + 2);
      *((_QWORD *)v5 + 1) = *((_QWORD *)v6 + 1);
      *((_QWORD *)v5 + 2) = v33;
      v34 = *((_QWORD *)v6 + 4);
      *((_QWORD *)v5 + 3) = *((_QWORD *)v6 + 3);
      *((_QWORD *)v5 + 4) = v34;
      v35 = *((_QWORD *)v6 + 6);
      *((_QWORD *)v5 + 5) = *((_QWORD *)v6 + 5);
      *((_QWORD *)v5 + 6) = v35;
      *((_QWORD *)v5 + 7) = *((_QWORD *)v6 + 7);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_20:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t assignWithCopy for LoggableCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  char v24;
  unint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 20);
    v5 = (char *)(a1 + v4);
    v6 = a2 + v4;
    sub_1A55034FC(a1 + v4, type metadata accessor for ClientCommand);
    v7 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_QWORD *)v5 + 1) = *(_QWORD *)(v6 + 8);
        *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
        *((_DWORD *)v5 + 6) = *(_DWORD *)(v6 + 24);
        *((_DWORD *)v5 + 7) = *(_DWORD *)(v6 + 28);
        v8 = *(_DWORD *)(v6 + 32);
        *(_DWORD *)(v5 + 35) = *(_DWORD *)(v6 + 35);
        *((_DWORD *)v5 + 8) = v8;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        goto LABEL_21;
      case 1u:
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_QWORD *)v5 + 1) = *(_QWORD *)(v6 + 8);
        *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
        *((_QWORD *)v5 + 3) = *(_QWORD *)(v6 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 2u:
      case 8u:
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 3u:
      case 4u:
      case 5u:
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 6u:
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
        *((_DWORD *)v5 + 6) = *(_DWORD *)(v6 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 7u:
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
        *((_DWORD *)v5 + 6) = *(_DWORD *)(v6 + 24);
        *((_QWORD *)v5 + 4) = *(_QWORD *)(v6 + 32);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 9u:
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796828);
        v10 = *(int *)(v9 + 64);
        v11 = &v5[v10];
        v12 = (const void *)(v6 + v10);
        v13 = sub_1A594A0EC();
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
        v28 = *(int *)(v9 + 80);
        v29 = (uint64_t *)&v5[v28];
        v30 = (uint64_t *)(v6 + v28);
        v31 = *v30;
        v32 = v30[1];
        sub_1A54E42B4(*v30, v32);
        *v29 = v31;
        v29[1] = v32;
        goto LABEL_21;
      case 0xAu:
      case 0xCu:
        v16 = *(_QWORD *)v6;
        sub_1A5799ADC(v16);
        *(_QWORD *)v5 = v16;
        goto LABEL_21;
      case 0xBu:
      case 0xDu:
        v17 = *(_QWORD *)v6;
        sub_1A5799ADC(*(_QWORD *)v6);
        *(_QWORD *)v5 = v17;
        *((_QWORD *)v5 + 1) = *(_QWORD *)(v6 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0xEu:
        v18 = *(_QWORD *)v6;
        v19 = *(_DWORD *)(v6 + 8);
        v20 = *(_BYTE *)(v6 + 12);
        sub_1A54E4334(*(_QWORD *)v6, v19, v20);
        *(_QWORD *)v5 = v18;
        *((_DWORD *)v5 + 2) = v19;
        v5[12] = v20;
        *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
        v21 = *(_QWORD *)(v6 + 24);
        v5[32] = *(_BYTE *)(v6 + 32);
        *((_QWORD *)v5 + 3) = v21;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0xFu:
        v22 = *(_QWORD *)v6;
        v23 = *(_DWORD *)(v6 + 8);
        v24 = *(_BYTE *)(v6 + 12);
        sub_1A54E4334(*(_QWORD *)v6, v23, v24);
        *(_QWORD *)v5 = v22;
        *((_DWORD *)v5 + 2) = v23;
        v5[12] = v24;
        v5[16] = *(_BYTE *)(v6 + 16);
        v5[17] = *(_BYTE *)(v6 + 17);
        *((_QWORD *)v5 + 3) = *(_QWORD *)(v6 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0x10u:
      case 0x11u:
        v25 = *(_QWORD *)v6;
        v26 = *(_DWORD *)(v6 + 8);
        v27 = *(_BYTE *)(v6 + 12);
        sub_1A54E4334(*(_QWORD *)v6, v26, v27);
        *(_QWORD *)v5 = v25;
        *((_DWORD *)v5 + 2) = v26;
        v5[12] = v27;
        *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
        *((_DWORD *)v5 + 6) = *(_DWORD *)(v6 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0x12u:
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_QWORD *)v5 + 1) = *(_QWORD *)(v6 + 8);
        *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_21;
      case 0x13u:
        *(_DWORD *)v5 = *(_DWORD *)v6;
        *((_QWORD *)v5 + 1) = *(_QWORD *)(v6 + 8);
        *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
        *((_QWORD *)v5 + 3) = *(_QWORD *)(v6 + 24);
        *((_QWORD *)v5 + 4) = *(_QWORD *)(v6 + 32);
        *((_QWORD *)v5 + 5) = *(_QWORD *)(v6 + 40);
        *((_QWORD *)v5 + 6) = *(_QWORD *)(v6 + 48);
        *((_QWORD *)v5 + 7) = *(_QWORD *)(v6 + 56);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, (const void *)v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
  }
  return a1;
}

_QWORD *initializeWithTake for LoggableCommand(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for ClientCommand(0);
  if (swift_getEnumCaseMultiPayload() == 9)
  {
    *(_QWORD *)v5 = *(_QWORD *)v6;
    *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
    *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
    v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796828);
    v9 = *(int *)(v8 + 64);
    v10 = &v5[v9];
    v11 = &v6[v9];
    v12 = sub_1A594A0EC();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(_OWORD *)&v5[*(int *)(v8 + 80)] = *(_OWORD *)&v6[*(int *)(v8 + 80)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for LoggableCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 20);
    v5 = (_DWORD *)(a1 + v4);
    v6 = (_DWORD *)(a2 + v4);
    sub_1A55034FC(a1 + v4, type metadata accessor for ClientCommand);
    v7 = type metadata accessor for ClientCommand(0);
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      *(_QWORD *)v5 = *(_QWORD *)v6;
      v5[2] = v6[2];
      *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
      v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796828);
      v9 = *(int *)(v8 + 64);
      v10 = (char *)v5 + v9;
      v11 = (char *)v6 + v9;
      v12 = sub_1A594A0EC();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(_OWORD *)((char *)v5 + *(int *)(v8 + 80)) = *(_OWORD *)((char *)v6 + *(int *)(v8 + 80));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LoggableCommand()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A579C624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = type metadata accessor for ClientCommand(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for LoggableCommand()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A579C670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = type metadata accessor for ClientCommand(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_1A579C6B4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ClientCommand(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A579C728()
{
  return sub_1A57A48AC();
}

unint64_t sub_1A579C740()
{
  unint64_t result;

  result = qword_1EE796328;
  if (!qword_1EE796328)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEE460], MEMORY[0x1E0DEE458]);
    atomic_store(result, (unint64_t *)&qword_1EE796328);
  }
  return result;
}

void *ClientCommand.EncodingOptions.logging.unsafeMutableAddressor()
{
  return &static ClientCommand.EncodingOptions.logging;
}

uint64_t ClientCommand.encode(tag:options:)@<X0>(int a1@<W1>, void (*a2)(_QWORD)@<X8>)
{
  return sub_1A57A4EF0((void (*)(_QWORD))sub_1A5798FA4, a1 & 0x101FF, a2);
}

uint64_t ClientCommand.Encoded.command.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ClientCommand.Encoded.command.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

double (*ClientCommand.Encoded.command.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ClientCommand.Encoded.continuations.getter()
{
  type metadata accessor for ClientCommand.Encoded();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ClientCommand.Encoded.continuations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for ClientCommand.Encoded() + 20);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

double (*ClientCommand.Encoded.continuations.modify())(_QWORD)
{
  type metadata accessor for ClientCommand.Encoded();
  return nullsub_1;
}

uint64_t ClientCommand.Encoded.init(command:continuations:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for ClientCommand.Encoded();
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t static ClientCommand.Encoded.idle(tag:options:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, unint64_t a3@<X8>)
{
  return ClientCommandEncoder.idle(tag:)(a1 & 0xFFFFFFFF000000FFLL, a2 & 0x101FF, a3);
}

uint64_t ClientCommand.EncodingOptions.Literal.hash(into:)()
{
  return sub_1A594CE88();
}

BOOL static ClientCommand.EncodingOptions.Literal.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t ClientCommand.EncodingOptions.Literal.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t ClientCommand.EncodingOptions.MessageBodyEncoding.hash(into:)()
{
  return sub_1A594CE88();
}

BOOL static ClientCommand.EncodingOptions.MessageBodyEncoding.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t ClientCommand.EncodingOptions.literal.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

double (*ClientCommand.EncodingOptions.literal.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ClientCommand.EncodingOptions.messageBodyEncoding.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t ClientCommand.EncodingOptions.messageBodyEncoding.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result & 1;
  return result;
}

double (*ClientCommand.EncodingOptions.messageBodyEncoding.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ClientCommand.EncodingOptions.mode.getter(unsigned int a1)
{
  return HIWORD(a1) & 1;
}

uint64_t ClientCommand.EncodingOptions.mode.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result & 1;
  return result;
}

double (*ClientCommand.EncodingOptions.mode.modify())(_QWORD)
{
  return nullsub_1;
}

void *ClientCommand.EncodingOptions.rfc3501.unsafeMutableAddressor()
{
  return &static ClientCommand.EncodingOptions.rfc3501;
}

uint64_t static ClientCommand.EncodingOptions.rfc3501.getter()
{
  return 0;
}

uint64_t static ClientCommand.EncodingOptions.logging.getter()
{
  return 0x10000;
}

uint64_t static ClientCommand.EncodingOptions.__derived_struct_equals(_:_:)(unsigned int a1, int a2)
{
  unsigned int v2;

  v2 = ((a2 ^ a1) >> 8) & 1;
  if (a2 != a1)
    v2 = 1;
  return (v2 | (((a2 ^ a1) & 0x10000) >> 16)) ^ 1;
}

BOOL sub_1A579CAA8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 != *a2) | ((a1[1] ^ a2[1]) | (a2[2] ^ a1[2])) & 1) == 0;
}

uint64_t ClientCommand.EncodingOptions.debugDescription.getter(__int16 a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  if ((_BYTE)a1)
  {
    v1 = 0x2B6C61726574694CLL;
    if ((a1 & 0x100) != 0)
      v1 = 0xD000000000000010;
    v2 = 0x2D6C61726574694CLL;
    if ((a1 & 0x100) != 0)
      v2 = 0xD000000000000010;
    if (a1 == 1)
      return v1;
    else
      return v2;
  }
  else
  {
    v3 = 0x7972616E6942;
    if ((a1 & 0x100) == 0)
      return 0x647261646E617453;
  }
  return v3;
}

uint64_t sub_1A579CB90()
{
  unsigned __int8 *v0;
  __int16 v1;

  if (v0[1])
    v1 = 256;
  else
    v1 = 0;
  return ClientCommand.EncodingOptions.debugDescription.getter(v1 | *v0);
}

uint64_t CommandEncodingOptions.init(_:)(__int16 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = 8 * (char)a1;
  v2 = *(_QWORD *)((char *)&unk_1A59B94B0 + v1);
  v3 = *(_QWORD *)((char *)&unk_1A59B94C8 + v1);
  v4 = *(_QWORD *)((char *)&unk_1A59B94E0 + v1);
  v5 = 0x100000001;
  if ((a1 & 0x100) == 0)
    v5 = 1;
  return v5 | v2 | v3 | v4;
}

uint64_t ClientCommand.EncodingOptions.init(_:)(uint64_t a1)
{
  void *v2;
  int v3;
  void *v4;
  void *v5;
  char v6;
  int v7;

  v2 = Capability.literalPlus.unsafeMutableAddressor();
  if ((sub_1A579CCB0(*(_QWORD *)v2, *((_QWORD *)v2 + 1), *((_QWORD *)v2 + 2), *((_BYTE *)v2 + 24), a1) & 1) != 0)
  {
    v3 = 1;
  }
  else
  {
    v4 = Capability.literalMinus.unsafeMutableAddressor();
    if ((sub_1A579CCB0(*(_QWORD *)v4, *((_QWORD *)v4 + 1), *((_QWORD *)v4 + 2), *((_BYTE *)v4 + 24), a1) & 1) != 0)
      v3 = 2;
    else
      v3 = 0;
  }
  v5 = Capability.binary.unsafeMutableAddressor();
  v6 = sub_1A579CCB0(*(_QWORD *)v5, *((_QWORD *)v5 + 1), *((_QWORD *)v5 + 2), *((_BYTE *)v5 + 24), a1);
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    v7 = 256;
  else
    v7 = 0;
  return v7 | v3;
}

uint64_t sub_1A579CCB0(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  _BYTE *v10;
  uint64_t v11;
  char v12;
  BOOL v13;

  v5 = *(_QWORD *)(a5 + 16);
  if (v5)
  {
    v10 = (_BYTE *)(a5 + 56);
    do
    {
      v11 = *((_QWORD *)v10 - 1);
      v12 = *v10;
      v13 = *((_QWORD *)v10 - 3) == a1 && *((_QWORD *)v10 - 2) == a2;
      if (v13 || (sub_1A594CD38() & 1) != 0)
      {
        if ((v12 & 1) != 0)
        {
          if ((a4 & 1) != 0)
            return 1;
        }
        else if ((a4 & 1) == 0 && (v11 ^ a3) < 0x4000)
        {
          return 1;
        }
      }
      v10 += 32;
      --v5;
    }
    while (v5);
  }
  return 0;
}

uint64_t type metadata accessor for ClientCommand.Encoded()
{
  uint64_t result;

  result = qword_1EE797DA0;
  if (!qword_1EE797DA0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1A579CD9C()
{
  unint64_t result;

  result = qword_1EE7AA430;
  if (!qword_1EE7AA430)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ClientCommand.EncodingOptions.Literal, &type metadata for ClientCommand.EncodingOptions.Literal);
    atomic_store(result, (unint64_t *)&qword_1EE7AA430);
  }
  return result;
}

unint64_t sub_1A579CDE4()
{
  unint64_t result;

  result = qword_1EE7AA438;
  if (!qword_1EE7AA438)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ClientCommand.EncodingOptions.MessageBodyEncoding, &type metadata for ClientCommand.EncodingOptions.MessageBodyEncoding);
    atomic_store(result, (unint64_t *)&qword_1EE7AA438);
  }
  return result;
}

unint64_t sub_1A579CE2C()
{
  unint64_t result;

  result = qword_1EE7AA440;
  if (!qword_1EE7AA440)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ClientCommand.EncodingOptions.Mode, &type metadata for ClientCommand.EncodingOptions.Mode);
    atomic_store(result, (unint64_t *)&qword_1EE7AA440);
  }
  return result;
}

uint64_t *_s7EncodedVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594AE60();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

uint64_t _s7EncodedVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t _s7EncodedVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s7EncodedVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7EncodedVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s7EncodedVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7EncodedVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A579D0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1A594AE60();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s7EncodedVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A579D160(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A594AE60();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1A579D1D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594AE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t _s15EncodingOptionsVwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = a1[3];
      if (a1[3])
        return (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)(a1 + 3);
      if (*(_WORD *)(a1 + 3))
        return (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = a1[1];
  v5 = v4 >= 2;
  v6 = v4 - 2;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t _s15EncodingOptionsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)(result + 1) = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.EncodingOptions()
{
  return &type metadata for ClientCommand.EncodingOptions;
}

uint64_t _s15EncodingOptionsV7LiteralOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A579D3B8 + 4 * byte_1A59B92C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A579D3EC + 4 * byte_1A59B92C0[v4]))();
}

uint64_t sub_1A579D3EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A579D3F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A579D3FCLL);
  return result;
}

uint64_t sub_1A579D408(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A579D410);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A579D414(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A579D41C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.EncodingOptions.Literal()
{
  return &type metadata for ClientCommand.EncodingOptions.Literal;
}

ValueMetadata *type metadata accessor for ClientCommand.EncodingOptions.MessageBodyEncoding()
{
  return &type metadata for ClientCommand.EncodingOptions.MessageBodyEncoding;
}

uint64_t _s15EncodingOptionsV19MessageBodyEncodingOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A579D498 + 4 * byte_1A59B92CF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A579D4CC + 4 * byte_1A59B92CA[v4]))();
}

uint64_t sub_1A579D4CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A579D4D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A579D4DCLL);
  return result;
}

uint64_t sub_1A579D4E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A579D4F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A579D4F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A579D4FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.EncodingOptions.Mode()
{
  return &type metadata for ClientCommand.EncodingOptions.Mode;
}

uint64_t ConnectionID.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*ConnectionID.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL static ConnectionID.< infix(_:_:)(unsigned int a1, unsigned int a2)
{
  return a1 < a2;
}

uint64_t ConnectionID.next.getter(int a1)
{
  return (a1 + 1);
}

void *ConnectionID.invalid.unsafeMutableAddressor()
{
  return &static ConnectionID.invalid;
}

uint64_t static ConnectionID.invalid.getter()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_1A579D570(unsigned __int8 a1)
{
  __int16 v2;
  unsigned int v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v6 = 0;
  v7 = 0xE000000000000000;
  MEMORY[0x1A85AD968](10);
  v2 = a1 + 1;
  do
  {
    v3 = (unsigned __int16)(v2 - 1);
    v2 = (unsigned __int16)(v2 - 1) / 0x1Au;
    v5 = (unsigned __int16)((unsigned __int16)v3 % 0x1Au + 65);
    MEMORY[0x1A85AD9BC](&v5, 1);
    sub_1A594B604();
    swift_bridgeObjectRelease();
  }
  while (v3 > 0x19);
  return v6;
}

unint64_t sub_1A579D61C()
{
  unint64_t result;

  result = qword_1EE797D78;
  if (!qword_1EE797D78)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ConnectionID, &type metadata for ConnectionID);
    atomic_store(result, (unint64_t *)&qword_1EE797D78);
  }
  return result;
}

uint64_t sub_1A579D660()
{
  _DWORD *v0;

  return sub_1A579D570(*v0);
}

ValueMetadata *type metadata accessor for ConnectionID()
{
  return &type metadata for ConnectionID;
}

uint64_t EncodedString.rawValue.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

double (*EncodedString.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EncodedString.init()()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t EncodedString.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1A594CE88();
  if (v3)
  {
    v5 = a2 + 32;
    do
    {
      ++v5;
      result = sub_1A594CE94();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1A579D710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A579D7A4()
{
  sub_1A579D910();
  return sub_1A594CFB4();
}

uint64_t sub_1A579D7CC()
{
  sub_1A579D910();
  return sub_1A594CFC0();
}

uint64_t EncodedString.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA448);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A579D910();
  sub_1A594CF3C();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796028);
  sub_1A579E4D0(&qword_1EE7A0EC0, MEMORY[0x1E0DEDE78], MEMORY[0x1E0DEAF10]);
  sub_1A594CC3C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A579D910()
{
  unint64_t result;

  result = qword_1EE7AA450;
  if (!qword_1EE7AA450)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B981C, &type metadata for EncodedString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AA450);
  }
  return result;
}

uint64_t EncodedString.hashValue.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1A594CE64();
  v2 = *(_QWORD *)(a1 + 16);
  sub_1A594CE88();
  if (v2)
  {
    v3 = a1 + 32;
    do
    {
      ++v3;
      sub_1A594CE94();
      --v2;
    }
    while (v2);
  }
  return sub_1A594CED0();
}

_QWORD *EncodedString.init(from:)(_QWORD *a1)
{
  return sub_1A579E1C0(a1);
}

uint64_t sub_1A579D9D4()
{
  uint64_t *v0;

  return EncodedString.hashValue.getter(*v0);
}

uint64_t sub_1A579D9DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  result = sub_1A594CE88();
  if (v2)
  {
    v4 = v1 + 32;
    do
    {
      ++v4;
      result = sub_1A594CE94();
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1A579DA2C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  sub_1A594CE64();
  v2 = *(_QWORD *)(v1 + 16);
  sub_1A594CE88();
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      ++v3;
      sub_1A594CE94();
      --v2;
    }
    while (v2);
  }
  return sub_1A594CED0();
}

_QWORD *sub_1A579DA94@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1A579E1C0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A579DABC(_QWORD *a1)
{
  uint64_t *v1;

  return EncodedString.encode(to:)(a1, *v1);
}

BOOL sub_1A579DAD4(uint64_t *a1, uint64_t *a2)
{
  return _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1A579DAE8(uint64_t *a1, uint64_t *a2)
{
  return _s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(*a1, *a2);
}

BOOL sub_1A579DAF4(uint64_t *a1, uint64_t *a2)
{
  return (_s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(*a2, *a1) & 1) == 0;
}

BOOL sub_1A579DB1C(uint64_t *a1, uint64_t *a2)
{
  return (_s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(*a1, *a2) & 1) == 0;
}

uint64_t sub_1A579DB40(uint64_t *a1, uint64_t *a2)
{
  return _s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(*a2, *a1);
}

void (*String.init(_:)(uint64_t a1))(uint64_t *, _QWORD)
{
  void (*result)(uint64_t *, _QWORD);
  unsigned int v3;
  unsigned __int8 v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  int v11;
  int v12;
  BOOL v13;
  unsigned __int8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;
  unsigned __int8 v22;
  uint64_t v23;
  unint64_t v24;

  v23 = 0;
  v24 = 0xE000000000000000;
  result = (void (*)(uint64_t *, _QWORD))MEMORY[0x1A85AD968](*(_QWORD *)(a1 + 16));
  v3 = 0;
  v4 = 0;
  v5 = 0;
  v7 = 0;
  v6 = 0xE000000000000000;
  v8 = a1 + 32;
  while (1)
  {
    v21 = v3;
    v22 = v4;
    if (v4)
    {
      if ((v3 & 0x80) == 0)
      {
        sub_1A579C740();
        result = (void (*)(uint64_t *, _QWORD))sub_1A570358C();
        v16 = *(_BYTE *)(v15 + 4);
        if (!v16)
          goto LABEL_46;
        *(_DWORD *)v15 >>= 8;
        *(_BYTE *)(v15 + 4) = v16 - 8;
        result(&v19, 0);
        goto LABEL_10;
      }
      v10 = *(_QWORD *)(a1 + 16);
      v13 = v5 >= v10;
      if (v5 == v10)
        goto LABEL_12;
      goto LABEL_17;
    }
    v10 = *(_QWORD *)(a1 + 16);
    if (v5 == v10)
      goto LABEL_42;
    if (v5 >= v10)
      break;
    v11 = *(char *)(v8 + v5);
    v12 = *(unsigned __int8 *)(v8 + v5++);
    if (v11 < 0)
    {
      v3 = v3 & 0xFFFFFF00 | v12;
      v4 = 8;
      v13 = v5 >= v10;
      if (v5 == v10)
      {
LABEL_12:
        v14 = v4;
        goto LABEL_31;
      }
LABEL_17:
      if (v13)
        goto LABEL_45;
      v17 = v5 + 1;
      v3 = (*(unsigned __int8 *)(v8 + v5) << v4) | ((-255 << v4) - 1) & v3;
      v14 = v4 + 8;
      if ((v4 + 8) <= 0x1Fu)
      {
        if (v17 == v10)
          goto LABEL_27;
        v18 = v5 + 2;
        v3 = (*(unsigned __int8 *)(v8 + v17) << v14) | ((-255 << v14) - 1) & v3;
        v14 = v4 + 16;
        if ((v4 + 16) > 0x1Fu)
          goto LABEL_30;
        if (v18 == v10)
        {
LABEL_27:
          if (!v14)
          {
LABEL_42:
            swift_bridgeObjectRelease();
            return (void (*)(uint64_t *, _QWORD))v7;
          }
LABEL_31:
          if ((v3 & 0xC0E0) == 0x80C0)
          {
            if ((v3 & 0x1E) == 0)
              goto LABEL_41;
            v9 = 16;
            goto LABEL_4;
          }
          if ((v3 & 0xC0C0F0) == 0x8080E0)
          {
            if ((v3 & 0x200F) == 0 || (v3 & 0x200F) == 0x200D)
              goto LABEL_41;
            v9 = 24;
            goto LABEL_4;
          }
          if ((v3 & 0xC0C0C0F8) == 0x808080F0 && (v3 & 0x3007) != 0 && __rev16(v3 & 0x3007) <= 0x400)
          {
            v9 = 32;
LABEL_4:
            v21 = (unint64_t)v3 >> v9;
            v22 = v14 - v9;
            goto LABEL_5;
          }
LABEL_41:
          sub_1A594CF48();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
        v17 = v5 + 3;
        v3 = (*(unsigned __int8 *)(v8 + v18) << v14) | ((-255 << v14) - 1) & v3;
        v14 = v4 + 24;
        if ((v4 + 24) <= 0x1Fu)
        {
          if (v17 != v10)
          {
            v18 = v5 + 4;
            v3 = (*(unsigned __int8 *)(v8 + v17) << v14) | ((-255 << v14) - 1) & v3;
            v14 = v4 + 32;
            if (v4 >= 0xE0u)
            {
              if (v18 != v10)
              {
                v3 = (*(unsigned __int8 *)(v8 + v18) << v4) | ((-255 << v4) - 1) & v3;
                v14 = v4 + 40;
                if ((v4 + 40) >= 0x20u)
                {
                  v10 = v5 + 5;
                  goto LABEL_31;
                }
              }
              goto LABEL_27;
            }
LABEL_30:
            v10 = v18;
            goto LABEL_31;
          }
          goto LABEL_27;
        }
      }
      v10 = v17;
      goto LABEL_31;
    }
LABEL_10:
    v10 = v5;
LABEL_5:
    v3 = v21;
    v4 = v22;
    v19 = v7;
    v20 = v6;
    result = (void (*)(uint64_t *, _QWORD))sub_1A594B52C();
    v7 = v19;
    v6 = v20;
    v5 = v10;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t EncodedString.init(_:)(uint64_t a1)
{
  size_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  v3 = sub_1A579DFDC(0, v2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (uint64_t)sub_1A579E124(v3);
  sub_1A594AE48();
  v4 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return v3;
}

uint64_t sub_1A579DFDC(int a1, size_t a2)
{
  uint64_t v4;
  uint64_t result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_1A594C9B4();
    __break(1u);
  }
  else
  {
    if (!a2)
      return MEMORY[0x1E0DEE9D8];
    v4 = sub_1A594BA18();
    *(_QWORD *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return v4;
  }
  return result;
}

uint64_t sub_1A579E094(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(v1 + 4);
  if (v2)
  {
    if (result <= 0xF7u)
    {
      v3 = (*(_DWORD *)v1 >> result);
      *(_DWORD *)v1 = (*(_DWORD *)v1 >> (((result + 8) >> 1) & 0x1C) >> (((result + 8) >> 1) & 0x1C) << ((result + 8 - ((((((result + 8) - result) & 0xE000u) >> 13) + 8) & 0x18)) & 0x18)) | *(_DWORD *)v1 & ((1 << ((result >> 1) & 0x1C) << ((result >> 1) & 0x1C)) - 1);
      *(_BYTE *)(v1 + 4) = v2
                         - ((((((result + 8) - result) & 0xE000u) >> 13) + 8) & 0xF8);
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

char *sub_1A579E124(uint64_t a1)
{
  return sub_1A57B2460(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_1A579E138(_QWORD *a1)
{
  return sub_1A57B268C(0, a1[2], 0, a1);
}

uint64_t _s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t result;
  unsigned int v8;
  unint64_t v9;
  unsigned int v10;

  v2 = 0;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = a1 + 32;
  v6 = (unsigned __int8 *)(a2 + 32);
  result = 1;
  while (v2 == v3)
  {
    v8 = 0;
    v9 = v3;
    if (!v4)
      return 0;
LABEL_7:
    if (v2 == v3)
      return result;
    v10 = *v6;
    if (v8 < v10)
      return result;
    ++v6;
    --v4;
    v2 = v9;
    if (v10 < v8)
      return 0;
  }
  if (v2 < v3)
  {
    v8 = *(unsigned __int8 *)(v5 + v2);
    v9 = v2 + 1;
    if (!v4)
      return 0;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A579E1C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA478);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A579D910();
  sub_1A594CF18();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796028);
    sub_1A579E4D0(&qword_1EE7AA480, MEMORY[0x1E0DEDE98], MEMORY[0x1E0DEAF40]);
    sub_1A594CB88();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1A579E308()
{
  unint64_t result;

  result = qword_1EE7AA458;
  if (!qword_1EE7AA458)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EncodedString, &type metadata for EncodedString);
    atomic_store(result, (unint64_t *)&qword_1EE7AA458);
  }
  return result;
}

ValueMetadata *type metadata accessor for EncodedString()
{
  return &type metadata for EncodedString;
}

uint64_t storeEnumTagSinglePayload for EncodedString.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A579E39C + 4 * asc_1A59B962C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A579E3BC + 4 * byte_1A59B9631[v4]))();
}

_BYTE *sub_1A579E39C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A579E3BC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A579E3C4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A579E3CC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A579E3D4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A579E3DC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EncodedString.CodingKeys()
{
  return &type metadata for EncodedString.CodingKeys;
}

unint64_t sub_1A579E3FC()
{
  unint64_t result;

  result = qword_1EE7AA460;
  if (!qword_1EE7AA460)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B97F4, &type metadata for EncodedString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AA460);
  }
  return result;
}

unint64_t sub_1A579E444()
{
  unint64_t result;

  result = qword_1EE7AA468;
  if (!qword_1EE7AA468)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B9764, &type metadata for EncodedString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AA468);
  }
  return result;
}

unint64_t sub_1A579E48C()
{
  unint64_t result;

  result = qword_1EE7AA470;
  if (!qword_1EE7AA470)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B978C, &type metadata for EncodedString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AA470);
  }
  return result;
}

uint64_t sub_1A579E4D0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0((uint64_t *)&unk_1EE796028);
    v8 = a2;
    result = MEMORY[0x1A85B1874](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A579E544()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A579E568()
{
  uint64_t v0;
  uint64_t countAndFlagsBits;

  (*(void (**)(void))(v0 + 16))();
  countAndFlagsBits = ServerResponseTranscoder.makeParsingErrorDescription()()._countAndFlagsBits;
  swift_release();
  return countAndFlagsBits;
}

uint64_t sub_1A579E5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1A594A5F0();
  sub_1A548779C();
  sub_1A594A680();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  return swift_release();
}

uint64_t sub_1A579E6F8()
{
  uint64_t v0;
  __int16 v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = (*(uint64_t (**)(void))(v0 + 16))();
  if ((_BYTE)v1)
  {
    v2 = 0x2B6C61726574694CLL;
    if ((v1 & 0x100) != 0)
      v2 = 0xD000000000000010;
    v3 = 0x2D6C61726574694CLL;
    if ((v1 & 0x100) != 0)
      v3 = 0xD000000000000010;
    if (v1 == 1)
      return v2;
    else
      return v3;
  }
  else
  {
    v4 = 0x7972616E6942;
    if ((v1 & 0x100) == 0)
      return 0x647261646E617453;
  }
  return v4;
}

uint64_t sub_1A579ED2C(void (*a1)(double))
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t countAndFlagsBits;
  uint64_t v8;

  v2 = type metadata accessor for LoggableCommand(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v3);
  countAndFlagsBits = LoggableCommand.makeDescriptionWithoutPII()()._countAndFlagsBits;
  sub_1A55034FC((uint64_t)v5, type metadata accessor for LoggableCommand);
  return countAndFlagsBits;
}

uint64_t sub_1A579EDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1A594A5F0();
  sub_1A548779C();
  sub_1A594A680();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  return swift_release();
}

unint64_t sub_1A579F224@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  unint64_t v10;
  unint64_t result;

  if (a4)
  {
    if (a4 == 1)
      v9 = 20302;
    else
      v9 = 4473154;
    if (a4 == 1)
      v10 = 0xE200000000000000;
    else
      v10 = 0xE300000000000000;
  }
  else
  {
    v10 = 0xE200000000000000;
    v9 = 19279;
  }
  result = sub_1A579FAC4(a1, a2, a3, a4);
  *a5 = v9;
  a5[1] = v10;
  a5[2] = a1;
  a5[3] = a2;
  a5[4] = a3;
  return result;
}

uint64_t sub_1A579F614(uint64_t (*a1)(double))
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = sub_1A594B478();
  v3 = MEMORY[0x1E0C80A78](v2);
  v4 = a1(v3);
  sub_1A57BE3B4(v4 & 0xFFFFFFFF000000FFLL);
  sub_1A594B460();
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796028);
  sub_1A579FA78();
  v5 = sub_1A594B430();
  v7 = v6;
  result = swift_bridgeObjectRelease();
  if (v7)
    return v5;
  __break(1u);
  return result;
}

unint64_t sub_1A579F6DC()
{
  uint64_t v0;

  return (unint64_t)(*(uint64_t (**)(void))(v0 + 16))() >> 32;
}

uint64_t sub_1A579F700()
{
  uint64_t v0;
  unsigned __int8 v1;

  v1 = (*(uint64_t (**)(void))(v0 + 16))();
  return sub_1A579D570(v1);
}

uint64_t sub_1A579F720()
{
  uint64_t v0;

  return sub_1A579ED2C(*(void (**)(double))(v0 + 16));
}

uint64_t sub_1A579F728()
{
  uint64_t v0;
  uint64_t countAndFlagsBits;
  _QWORD v3[73];

  (*(void (**)(_QWORD *__return_ptr))(v0 + 16))(v3);
  countAndFlagsBits = UntaggedResponse.makeDescriptionWithoutPII()()._countAndFlagsBits;
  sub_1A579FAF8((uint64_t)v3);
  return countAndFlagsBits;
}

unint64_t sub_1A579F77C(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_1A579F7B0(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A579F7B0(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1A579F7C4(result);
  return result;
}

unint64_t sub_1A579F7C4(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A579F800(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1A579F814(result);
  return result;
}

unint64_t sub_1A579F814(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A579F854()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t objectdestroy_30Tm()
{
  uint64_t v0;
  unint64_t v1;

  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 32);
  if ((~v1 & 0xF000000000000007) != 0)
    sub_1A579F7C4(v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1A579F8C4()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1A579F800(v1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t sub_1A579F908(uint64_t (*a1)(void))
{
  unint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = a1();
  ResponseText.debugDescription.getter(v1, v2, v3);
  v5 = v4;
  sub_1A579F7B0(v1);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A579F95C()
{
  uint64_t v0;

  return sub_1A579F908(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A579F968()
{
  uint64_t v0;

  v0 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return MailboxName.init(_:)(v0);
}

uint64_t sub_1A579F980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  void (*v8)(double);
  uint64_t v9;
  uint64_t v11;

  v4 = *(_QWORD *)(a3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8(v5);
  v9 = sub_1A594CC9C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v9;
}

uint64_t objectdestroy_39Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A579FA4C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = *(_QWORD *)(v1 + 24);
  a1[1] = v2;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A579FA58()
{
  uint64_t v0;

  return sub_1A579F980(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), MEMORY[0x1E0DEA2D0]);
}

uint64_t sub_1A579FA70()
{
  uint64_t v0;

  return sub_1A579F614(*(uint64_t (**)(double))(v0 + 16));
}

unint64_t sub_1A579FA78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE799DC8;
  if (!qword_1EE799DC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0((uint64_t *)&unk_1EE796028);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EE799DC8);
  }
  return result;
}

unint64_t sub_1A579FAC4(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_1A579F800(result);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A579FAF8(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v19 = *(_OWORD *)(a1 + 480);
  v17 = *(_OWORD *)(a1 + 448);
  v18 = *(_OWORD *)(a1 + 464);
  v15 = *(_OWORD *)(a1 + 416);
  v16 = *(_OWORD *)(a1 + 432);
  v13 = *(_OWORD *)(a1 + 384);
  v14 = *(_OWORD *)(a1 + 400);
  v11 = *(_OWORD *)(a1 + 352);
  v12 = *(_OWORD *)(a1 + 368);
  v9 = *(_OWORD *)(a1 + 320);
  v10 = *(_OWORD *)(a1 + 336);
  v7 = *(_OWORD *)(a1 + 288);
  v8 = *(_OWORD *)(a1 + 304);
  v5 = *(_OWORD *)(a1 + 256);
  v6 = *(_OWORD *)(a1 + 272);
  v3 = *(_OWORD *)(a1 + 224);
  v4 = *(_OWORD *)(a1 + 240);
  sub_1A579FBE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_OWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    *(_QWORD *)(a1 + 496));
  return a1;
}

uint64_t sub_1A579FBE0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned __int8 a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a65;

  switch(a65 >> 59)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      sub_1A579F7B0(result);
      goto LABEL_3;
    case 5uLL:
    case 6uLL:
    case 9uLL:
    case 0xBuLL:
    case 0xDuLL:
      goto LABEL_3;
    case 7uLL:
    case 8uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_10;
    case 0xAuLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 0xCuLL:
      sub_1A55240D4(result, a2);
      goto LABEL_3;
    case 0x11uLL:
    case 0x12uLL:
      return sub_1A54E3458(result, a2, SBYTE4(a2));
    case 0x13uLL:
      sub_1A5524104(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21,
        a22,
        a23,
        a24,
        a25);
      swift_bridgeObjectRelease();
      sub_1A5524104(a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45,
        a46,
        a47,
        a48,
        a49);
      sub_1A55245C0(a50, a51, a52, a53, a54, a55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_3:
      result = swift_bridgeObjectRelease();
      break;
    case 0x14uLL:
      swift_release();
      swift_release();
LABEL_10:
      result = swift_release();
      break;
    case 0x15uLL:
      result = sub_1A552466C();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t ConnectionLoggerID.engine.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

double (*ConnectionLoggerID.engine.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t ConnectionLoggerID.connection.getter(unint64_t a1)
{
  return HIDWORD(a1);
}

uint64_t ConnectionLoggerID.connection.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

double (*ConnectionLoggerID.connection.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t ConnectionLoggerID.init(engine:connection:)(unsigned __int8 a1, uint64_t a2)
{
  return a1 | (unint64_t)(a2 << 32);
}

char *sub_1A57A0058()
{
  char *result;

  result = (char *)EngineTracingID.invalid.unsafeMutableAddressor();
  static ConnectionLoggerID.invalid = *result;
  dword_1EE7F9FBC = -1;
  return result;
}

char *ConnectionLoggerID.invalid.unsafeMutableAddressor()
{
  if (qword_1EE7AA3D8 != -1)
    swift_once();
  return &static ConnectionLoggerID.invalid;
}

unint64_t static ConnectionLoggerID.invalid.getter()
{
  if (qword_1EE7AA3D8 != -1)
    swift_once();
  return static ConnectionLoggerID.invalid | ((unint64_t)dword_1EE7F9FBC << 32);
}

uint64_t UnderlyingConnectionID.identifier.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*UnderlyingConnectionID.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

_QWORD *__swift_memcpy8_4_2(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionLoggerID()
{
  return &type metadata for ConnectionLoggerID;
}

ValueMetadata *type metadata accessor for UnderlyingConnectionID()
{
  return &type metadata for UnderlyingConnectionID;
}

unint64_t MessageData.sequenceNumber.getter()
{
  unsigned int *v0;

  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t MessageData.sequenceNumber.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)v1 = result;
  *(_BYTE *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

double (*MessageData.sequenceNumber.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t MessageData.uid.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t MessageData.uid.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  *(_BYTE *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

double (*MessageData.uid.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageData.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A54E330C(v1 + 16, a1, &qword_1EE7A03D8);
}

uint64_t MessageData.body.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A57A0648(a1, v1 + 16, &qword_1EE7A03D8);
}

double (*MessageData.body.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageData.bodySections.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MessageData.bodySections.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 200) = a1;
  return result;
}

double (*MessageData.bodySections.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageData.bodyStructure.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A54E330C(v1 + 208, a1, &qword_1EE7A03D8);
}

uint64_t MessageData.bodyStructure.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A57A0648(a1, v1 + 208, &qword_1EE7A03D8);
}

double (*MessageData.bodyStructure.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageData.envelope.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A54E330C(v1 + 392, a1, qword_1EE797130);
}

uint64_t MessageData.envelope.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A57A0648(a1, v1 + 392, qword_1EE797130);
}

double (*MessageData.envelope.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageData.flags.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MessageData.flags.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 512) = a1;
  return result;
}

double (*MessageData.flags.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageData.gmailLabels.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MessageData.gmailLabels.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 520) = a1;
  return result;
}

double (*MessageData.gmailLabels.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageData.internalDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 528);
}

uint64_t MessageData.internalDate.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 528) = result;
  *(_BYTE *)(v2 + 536) = a2 & 1;
  return result;
}

double (*MessageData.internalDate.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t MessageData.messageSize.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 540) | ((unint64_t)*(unsigned __int8 *)(v0 + 544) << 32);
}

uint64_t MessageData.messageSize.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 540) = result;
  *(_BYTE *)(v1 + 544) = BYTE4(result) & 1;
  return result;
}

double (*MessageData.messageSize.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageData.modificationSequence.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 552);
}

uint64_t MessageData.modificationSequence.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 552) = result;
  *(_BYTE *)(v2 + 560) = a2 & 1;
  return result;
}

double (*MessageData.modificationSequence.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageData.preview.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 568);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t MessageData.preview.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 568) = a1;
  *(_QWORD *)(v2 + 576) = a2;
  return result;
}

double (*MessageData.preview.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageData.BodySection.section.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;

  v1 = *v0;
  v2 = v0[1];
  v3 = *((_BYTE *)v0 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55DC724(v2, v3);
  return v1;
}

uint64_t MessageData.BodySection.section.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;

  swift_bridgeObjectRelease();
  result = sub_1A55DC738(*(_QWORD *)(v3 + 8), *(_BYTE *)(v3 + 16));
  *(_QWORD *)v3 = a1;
  *(_QWORD *)(v3 + 8) = a2;
  *(_BYTE *)(v3 + 16) = a3;
  return result;
}

double (*MessageData.BodySection.section.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t MessageData.BodySection.origin.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 20) | ((unint64_t)*(unsigned __int8 *)(v0 + 24) << 32);
}

uint64_t MessageData.BodySection.origin.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = result;
  *(_BYTE *)(v1 + 24) = BYTE4(result) & 1;
  return result;
}

double (*MessageData.BodySection.origin.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageData.BodySection.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MessageData.BodySection();
  return sub_1A54E330C(v1 + *(int *)(v3 + 24), a1, &qword_1EE797D50);
}

uint64_t type metadata accessor for MessageData.BodySection()
{
  uint64_t result;

  result = qword_1EE797D60;
  if (!qword_1EE797D60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MessageData.BodySection.data.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MessageData.BodySection();
  return sub_1A57A0648(a1, v1 + *(int *)(v3 + 24), &qword_1EE797D50);
}

uint64_t sub_1A57A0648(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName_0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

double (*MessageData.BodySection.data.modify())(_QWORD)
{
  type metadata accessor for MessageData.BodySection();
  return nullsub_1;
}

uint64_t MessageData.BodySection.init(section:origin:data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;

  v12 = a6 + *(int *)(type metadata accessor for MessageData.BodySection() + 24);
  v13 = type metadata accessor for MessageData.BodyData();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = a3;
  *(_DWORD *)(a6 + 20) = a4;
  *(_BYTE *)(a6 + 24) = BYTE4(a4) & 1;
  return sub_1A57A0648(a5, v12, &qword_1EE797D50);
}

void *MessageData.init(sequenceNumber:uid:body:bodySections:bodyStructure:envelope:flags:gmailLabels:internalDate:messageSize:modificationSequence:preview:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, char a11, int a12, int a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18)
{
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v35[113];
  _BYTE v36[9];
  _OWORD v37[7];
  uint64_t v38;
  _BYTE v39[184];
  _BYTE v40[184];
  _QWORD __src[74];

  sub_1A55032A0(a6, (uint64_t)v37, qword_1EE797130);
  v30 = v37[1];
  v31 = v37[0];
  v28 = v37[3];
  v29 = v37[2];
  v26 = v37[5];
  v27 = v37[4];
  v25 = v37[6];
  v23 = v38;
  sub_1A55032A0(a5, (uint64_t)v36, &qword_1EE7A03D8);
  sub_1A55032A0((uint64_t)v36, (uint64_t)v39, &qword_1EE7A03D8);
  sub_1A55032A0(a3, (uint64_t)v35, &qword_1EE7A03D8);
  sub_1A55032A0((uint64_t)v35, (uint64_t)v40, &qword_1EE7A03D8);
  LODWORD(__src[0]) = a1;
  BYTE4(__src[0]) = BYTE4(a1) & 1;
  LODWORD(__src[1]) = a2;
  BYTE4(__src[1]) = BYTE4(a2) & 1;
  sub_1A55032A0((uint64_t)v40, (uint64_t)&__src[2], &qword_1EE7A03D8);
  __src[25] = a4;
  sub_1A55032A0((uint64_t)v39, (uint64_t)&__src[26], &qword_1EE7A03D8);
  *(_OWORD *)&__src[49] = v31;
  *(_OWORD *)&__src[51] = v30;
  *(_OWORD *)&__src[53] = v29;
  *(_OWORD *)&__src[55] = v28;
  *(_OWORD *)&__src[57] = v27;
  *(_OWORD *)&__src[59] = v26;
  *(_OWORD *)&__src[61] = v25;
  __src[63] = v23;
  __src[64] = a7;
  __src[65] = a8;
  __src[66] = a10;
  LOBYTE(__src[67]) = a11 & 1;
  HIDWORD(__src[67]) = a13;
  LOBYTE(__src[68]) = a14 & 1;
  __src[69] = a15;
  LOBYTE(__src[70]) = a16 & 1;
  __src[71] = a17;
  __src[72] = a18;
  return memcpy(a9, __src, 0x248uLL);
}

uint64_t sub_1A57A0964(void *__src, const void *a2)
{
  _BYTE v4[584];
  _BYTE __dst[584];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return _s13IMAP2Protocol11MessageDataV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v4, (uint64_t)__dst) & 1;
}

uint64_t sub_1A57A09B8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796530);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A594A17C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A1C4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer_0(v11, qword_1EE796BA0);
  v12 = __swift_project_value_buffer_0(v7, (uint64_t)qword_1EE796BA0);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CB0EF8], v3);
  sub_1A594A188();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1A594A278();
  v13 = sub_1A594A2A8();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v2, 1, v13);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1A594A1AC();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12, v10, v7);
  }
  return result;
}

uint64_t ServerMessageDate.date.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47[24];
  char v48[32];
  char v49[40];

  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796530);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v39 = (char *)&v32 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796508);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A5949C90();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A594A1C4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
  MEMORY[0x1E0C80A78](v19);
  v41 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE796BB8 != -1)
    swift_once();
  v21 = __swift_project_value_buffer_0(v15, (uint64_t)qword_1EE796BA0);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v38 = v18;
  v22(v18, v21, v15);
  v40 = v16;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v10, 1, 1, v15);
  ServerMessageDate.components.getter(a1, (uint64_t)&v42);
  result = 60 * v43;
  if ((unsigned __int128)(v43 * (__int128)60) >> 64 != (60 * v43) >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  v33 = v14;
  v34 = v10;
  v35 = v12;
  v36 = v11;
  sub_1A594A290();
  v24 = sub_1A594A2A8();
  v25 = *(_QWORD *)(v24 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v5, 1, v24);
  if ((_DWORD)result == 1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v26 = v39;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v39, v5, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v24);
  ServerMessageDate.components.getter(a1, (uint64_t)&v44);
  ServerMessageDate.components.getter(a1, (uint64_t)&v45);
  ServerMessageDate.components.getter(a1, (uint64_t)&v46);
  ServerMessageDate.components.getter(a1, (uint64_t)v47);
  ServerMessageDate.components.getter(a1, (uint64_t)v48);
  ServerMessageDate.components.getter(a1, (uint64_t)v49);
  v27 = v33;
  sub_1A5949C78();
  v28 = v41;
  v29 = v38;
  sub_1A594A1A0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v27, v36);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v29, v15);
  v30 = sub_1A594A0EC();
  v31 = *(_QWORD *)(v30 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v28, 1, v30);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v37, v28, v30);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t ServerMessageDate.init(_:)(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, _QWORD, uint64_t);
  uint64_t result;
  char v18;
  Swift::Int v19;
  char *v20;
  char v21;
  Swift::Int v22;
  char v23;
  Swift::Int v24;
  char v25;
  Swift::Int v26;
  char v27;
  Swift::Int v28;
  char v29;
  Swift::Int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  unint64_t v38;
  Swift::Int v39;
  Swift::Int v40;
  Swift::Int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  NIOIMAPCore2::ServerMessageDate::Components_optional v49;
  _OWORD v50[3];
  uint64_t v51;
  char v52;
  _OWORD v53[3];
  uint64_t v54;

  v48 = a1;
  v46 = sub_1A594A0EC();
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v44 = (char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796530);
  MEMORY[0x1E0C80A78](v2);
  v47 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A594A1C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1A5949C90();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE796BB8 != -1)
    swift_once();
  v10 = __swift_project_value_buffer_0(v4, (uint64_t)qword_1EE796BA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ADA8);
  v11 = sub_1A594A1B8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1A59ABDC0;
  v16 = *(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 104);
  v16(v15 + v14, *MEMORY[0x1E0CB1158], v11);
  v16(v15 + v14 + v13, *MEMORY[0x1E0CB1160], v11);
  v16(v15 + v14 + 2 * v13, *MEMORY[0x1E0CB1130], v11);
  v16(v15 + v14 + 3 * v13, *MEMORY[0x1E0CB1140], v11);
  v16(v15 + v14 + 4 * v13, *MEMORY[0x1E0CB1178], v11);
  v16(v15 + v14 + 5 * v13, *MEMORY[0x1E0CB1188], v11);
  v16(v15 + v14 + 6 * v13, *MEMORY[0x1E0CB11A8], v11);
  sub_1A57A2094(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1A594A194();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = sub_1A5949C3C();
  if ((v18 & 1) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  v19 = result;
  result = sub_1A5949C48();
  v20 = v47;
  if ((v21 & 1) != 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v22 = result;
  result = sub_1A5949C24();
  if ((v23 & 1) != 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v24 = result;
  result = sub_1A5949C30();
  if ((v25 & 1) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v26 = result;
  result = sub_1A5949C54();
  if ((v27 & 1) != 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v28 = result;
  result = sub_1A5949C60();
  if ((v29 & 1) != 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v39 = result;
  v40 = v28;
  v41 = v26;
  v30 = v19;
  sub_1A5949C84();
  v31 = sub_1A594A2A8();
  v32 = *(_QWORD *)(v31 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v20, 1, v31);
  if ((_DWORD)result == 1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v33 = v44;
  sub_1A594A0E0();
  v34 = sub_1A594A284();
  v35 = *(void (**)(char *, uint64_t))(v45 + 8);
  v36 = v33;
  v37 = v46;
  v35(v36, v46);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v31);
  ServerMessageDate.Components.init(year:month:day:hour:minute:second:timeZoneMinutes:)(&v49, v30, v22, v24, v41, v40, v39, v34 / 60);
  result = sub_1A55032A0((uint64_t)&v49, (uint64_t)v50, &qword_1EE796B98);
  if ((v52 & 1) == 0)
  {
    v53[0] = v50[0];
    v53[1] = v50[1];
    v53[2] = v50[2];
    v54 = v51;
    v38 = ServerMessageDate.init(_:)((unint64_t *)v53);
    v35(v48, v37);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v43);
    return v38;
  }
LABEL_19:
  __break(1u);
  return result;
}

BOOL _s13IMAP2Protocol11MessageDataV11BodySectionV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32[3];
  uint64_t v33;

  v4 = type metadata accessor for MessageData.BodyData();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA420);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D50);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v32 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v32 - v18;
  static SectionSpecifier.__derived_struct_equals(_:_:)(*(_QWORD **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD **)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
  if ((v20 & 1) == 0)
    return 0;
  v21 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (*(_DWORD *)(a1 + 20) != *(_DWORD *)(a2 + 20))
      v21 = 1;
    if ((v21 & 1) != 0)
      return 0;
  }
  v32[0] = (uint64_t)v7;
  v22 = type metadata accessor for MessageData.BodySection();
  sub_1A54E330C(a1 + *(int *)(v22 + 24), (uint64_t)v19, &qword_1EE797D50);
  sub_1A54E330C(a2 + *(int *)(v22 + 24), (uint64_t)v16, &qword_1EE797D50);
  v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1A54E330C((uint64_t)v19, (uint64_t)v10, &qword_1EE797D50);
  sub_1A54E330C((uint64_t)v16, v23, &qword_1EE797D50);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v10, 1, v4) == 1)
  {
    sub_1A5510284((uint64_t)v16, &qword_1EE797D50);
    sub_1A5510284((uint64_t)v19, &qword_1EE797D50);
    if (v24(v23, 1, v4) == 1)
    {
      v25 = (uint64_t)v10;
      goto LABEL_17;
    }
    v26 = &qword_1EE7AA420;
  }
  else
  {
    sub_1A54E330C((uint64_t)v10, (uint64_t)v13, &qword_1EE797D50);
    if (v24(v23, 1, v4) == 1)
    {
      v26 = &qword_1EE7AA420;
    }
    else
    {
      v27 = v32[0];
      sub_1A57A427C(v23, v32[0]);
      v28 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      if (v28 == _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0())
      {
        sub_1A594AE60();
        sub_1A55E1698((unint64_t *)&qword_1EE798F28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF648], MEMORY[0x1E0DEF670]);
        sub_1A594BD60();
        v29 = sub_1A594BDB4();
        if (v33 != v32[2])
        {
          MEMORY[0x1E0C80A78](v29);
          v32[-2] = v27;
          v32[-1] = (uint64_t)v13;
          sub_1A594ADE8();
          v31 = v33;
          sub_1A57A3C28(v27);
          sub_1A5510284((uint64_t)v16, &qword_1EE797D50);
          sub_1A5510284((uint64_t)v19, &qword_1EE797D50);
          sub_1A57A3C28((uint64_t)v13);
          sub_1A5510284((uint64_t)v10, &qword_1EE797D50);
          return (v31 & 1) != 0;
        }
        sub_1A57A3C28(v27);
        sub_1A5510284((uint64_t)v16, &qword_1EE797D50);
        sub_1A5510284((uint64_t)v19, &qword_1EE797D50);
        sub_1A57A3C28((uint64_t)v13);
        v25 = (uint64_t)v10;
LABEL_17:
        sub_1A5510284(v25, &qword_1EE797D50);
        return 1;
      }
      sub_1A57A3C28(v27);
      v26 = &qword_1EE797D50;
    }
    sub_1A5510284((uint64_t)v16, &qword_1EE797D50);
    sub_1A5510284((uint64_t)v19, &qword_1EE797D50);
    sub_1A57A3C28((uint64_t)v13);
  }
  sub_1A5510284((uint64_t)v10, v26);
  return 0;
}

uint64_t _s13IMAP2Protocol11MessageDataV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  _BYTE *v6;
  char v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[184];
  _QWORD v63[4];
  int v64;
  __int16 v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE v77[184];
  _BYTE v78[184];
  _BYTE v79[184];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[23];
  _BYTE v104[184];
  _BYTE v105[184];
  _BYTE v106[184];
  _QWORD v107[23];
  _QWORD v108[23];
  _QWORD v109[23];
  _QWORD v110[24];

  v4 = *(_BYTE *)(a2 + 4);
  if ((*(_BYTE *)(a1 + 4) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 4))
      return 0;
  }
  else
  {
    if (*(_DWORD *)a2 != *(_DWORD *)a1)
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  v5 = *(_BYTE *)(a2 + 12);
  if ((*(_BYTE *)(a1 + 12) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 12))
      return 0;
  }
  else
  {
    if (*(_DWORD *)(a2 + 8) != *(_DWORD *)(a1 + 8))
      v5 = 1;
    if ((v5 & 1) != 0)
      return 0;
  }
  sub_1A55032A0(a1 + 16, (uint64_t)v104, &qword_1EE7A03D8);
  sub_1A55032A0(a2 + 16, (uint64_t)v105, &qword_1EE7A03D8);
  sub_1A55032A0((uint64_t)v104, (uint64_t)v106, &qword_1EE7A03D8);
  if (sub_1A5529F68((uint64_t)v106) == 1)
  {
    sub_1A55032A0((uint64_t)v105, (uint64_t)&v80, &qword_1EE7A03D8);
    if (sub_1A5529F68((uint64_t)&v80) == 1)
      goto LABEL_20;
LABEL_17:
    sub_1A55032A0((uint64_t)v104, (uint64_t)&v80, &qword_1EE7A03D8);
    sub_1A55032A0((uint64_t)v105, (uint64_t)v103, &qword_1EE7A03D8);
    sub_1A55DC438((uint64_t)v104, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523620);
    v6 = v105;
LABEL_18:
    sub_1A55DC438((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523620);
    sub_1A57A4078((uint64_t)&v80);
    return 0;
  }
  sub_1A55032A0((uint64_t)v105, (uint64_t)&v80, &qword_1EE7A03D8);
  if (sub_1A5529F68((uint64_t)&v80) == 1)
    goto LABEL_17;
  sub_1A55032A0((uint64_t)v104, (uint64_t)v107, &qword_1EE7A03D8);
  sub_1A55DBFD8(v107, v109);
  sub_1A55032A0((uint64_t)v105, (uint64_t)v108, &qword_1EE7A03D8);
  sub_1A55DBFD8(v108, v110);
  sub_1A55DC438((uint64_t)v104, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523620);
  sub_1A55DC438((uint64_t)v105, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523620);
  v7 = static MessageAttribute.BodyStructure.__derived_enum_equals(_:_:)(v109, v110);
  sub_1A55DC438((uint64_t)v105, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524104);
  sub_1A55DC438((uint64_t)v104, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524104);
  if ((v7 & 1) == 0)
    return 0;
LABEL_20:
  if ((sub_1A5793B98(*(_QWORD *)(a1 + 200), *(_QWORD *)(a2 + 200)) & 1) == 0)
    return 0;
  sub_1A55032A0(a1 + 208, (uint64_t)v77, &qword_1EE7A03D8);
  sub_1A55032A0(a2 + 208, (uint64_t)v78, &qword_1EE7A03D8);
  sub_1A55032A0((uint64_t)v77, (uint64_t)v79, &qword_1EE7A03D8);
  if (sub_1A5529F68((uint64_t)v79) == 1)
  {
    sub_1A55032A0((uint64_t)v78, (uint64_t)&v80, &qword_1EE7A03D8);
    if (sub_1A5529F68((uint64_t)&v80) == 1)
      goto LABEL_27;
    goto LABEL_25;
  }
  sub_1A55032A0((uint64_t)v78, (uint64_t)&v80, &qword_1EE7A03D8);
  if (sub_1A5529F68((uint64_t)&v80) == 1)
  {
LABEL_25:
    sub_1A55032A0((uint64_t)v77, (uint64_t)&v80, &qword_1EE7A03D8);
    sub_1A55032A0((uint64_t)v78, (uint64_t)v103, &qword_1EE7A03D8);
    sub_1A55DC438((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523620);
    v6 = v78;
    goto LABEL_18;
  }
  sub_1A55032A0((uint64_t)v77, (uint64_t)v62, &qword_1EE7A03D8);
  sub_1A55DBFD8(v62, v107);
  sub_1A55032A0((uint64_t)v78, (uint64_t)v63, &qword_1EE7A03D8);
  sub_1A55DBFD8(v63, v108);
  sub_1A55DC438((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523620);
  sub_1A55DC438((uint64_t)v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523620);
  v8 = static MessageAttribute.BodyStructure.__derived_enum_equals(_:_:)(v107, v108);
  sub_1A55DC438((uint64_t)v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524104);
  sub_1A55DC438((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524104);
  if ((v8 & 1) == 0)
    return 0;
LABEL_27:
  result = *(_QWORD *)(a1 + 392);
  v10 = *(_QWORD *)(a1 + 400);
  v11 = *(_QWORD *)(a1 + 408);
  v12 = *(_QWORD *)(a1 + 416);
  v13 = *(_QWORD *)(a1 + 424);
  v14 = *(_QWORD *)(a1 + 432);
  v15 = *(_QWORD *)(a1 + 440);
  v16 = *(_QWORD *)(a1 + 448);
  v17 = *(_QWORD *)(a1 + 456);
  v18 = *(_QWORD *)(a1 + 464);
  v19 = *(_QWORD *)(a1 + 472);
  v20 = *(_QWORD *)(a1 + 480);
  v22 = *(_QWORD *)(a1 + 488);
  v21 = *(_QWORD *)(a1 + 496);
  v23 = *(_QWORD *)(a1 + 504);
  v24 = *(_QWORD *)(a2 + 392);
  v25 = *(_QWORD *)(a2 + 400);
  v26 = *(_QWORD *)(a2 + 408);
  v27 = *(_QWORD *)(a2 + 416);
  v29 = *(_QWORD *)(a2 + 424);
  v28 = *(_QWORD *)(a2 + 432);
  v30 = *(_QWORD *)(a2 + 440);
  v31 = *(_QWORD *)(a2 + 448);
  v32 = *(_QWORD *)(a2 + 456);
  v57 = *(_QWORD *)(a2 + 464);
  v58 = *(_QWORD *)(a2 + 472);
  v33 = *(_QWORD *)(a2 + 480);
  v60 = *(_QWORD *)(a2 + 496);
  v61 = *(_QWORD *)(a2 + 488);
  v59 = *(_QWORD *)(a2 + 504);
  if (!v14)
  {
    if (!v28)
      goto LABEL_34;
LABEL_32:
    v80 = *(_QWORD *)(a1 + 392);
    v81 = v10;
    v82 = v11;
    v83 = v12;
    v84 = v13;
    v85 = v14;
    v86 = v15;
    v87 = v16;
    v88 = v17;
    v89 = v18;
    v90 = v19;
    v91 = v20;
    v92 = v22;
    v93 = v21;
    v94 = v23;
    v95 = v24;
    v96 = v25;
    v97 = v26;
    v98 = v27;
    v99 = v29;
    v100 = v28;
    v101 = v30;
    v102 = v31;
    v103[0] = v32;
    v103[1] = v57;
    v103[2] = v58;
    v103[3] = v33;
    v103[4] = v61;
    v103[5] = v60;
    v103[6] = v59;
    v35 = v26;
    sub_1A5523AD8(result, v10, v11, v12, v13, v14);
    sub_1A5523AD8(v24, v25, v35, v27, v29, v28);
    sub_1A57A41A0(&v80);
    return 0;
  }
  if (!v28)
    goto LABEL_32;
  v63[0] = *(_QWORD *)(a1 + 392);
  v63[1] = v10;
  v63[2] = v11;
  v63[3] = v12;
  v64 = v13;
  v66 = BYTE6(v13);
  v65 = WORD2(v13);
  v55 = v14;
  v67 = v14;
  v68 = v15;
  v69 = v16;
  v70 = v17;
  v71 = v18;
  v72 = v19;
  v73 = v20;
  v74 = v22;
  v75 = v21;
  v76 = v23;
  v56 = v24;
  v80 = v24;
  v81 = v25;
  v34 = v26;
  v82 = v26;
  v83 = v27;
  LODWORD(v84) = v29;
  BYTE6(v84) = BYTE6(v29);
  WORD2(v84) = WORD2(v29);
  v85 = v28;
  v86 = v30;
  v87 = v31;
  v88 = v32;
  v89 = v57;
  v90 = v58;
  v91 = v33;
  v92 = v61;
  v93 = v60;
  v94 = v59;
  v51 = result;
  v52 = v10;
  v53 = v11;
  v54 = v12;
  v50 = v13;
  v48 = v26;
  sub_1A5523AD8(result, v10, v11, v12, v13, v14);
  sub_1A5523AD8(v56, v25, v34, v27, v29, v28);
  v49 = static Envelope.__derived_struct_equals(_:_:)((uint64_t)v63, (uint64_t)&v80);
  sub_1A55245C0(v56, v25, v48, v27, v29, v28);
  result = sub_1A55245C0(v51, v52, v53, v54, v50, v55);
  if ((v49 & 1) == 0)
    return 0;
LABEL_34:
  v36 = *(_QWORD *)(a2 + 512);
  if (*(_QWORD *)(a1 + 512))
  {
    if (!v36)
      return 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v37 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v38 = sub_1A54ED500(v37, v36);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
      return 0;
  }
  else if (v36)
  {
    return 0;
  }
  v39 = *(_QWORD *)(a2 + 520);
  if (*(_QWORD *)(a1 + 520))
  {
    if (!v39)
      return 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v40 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v41 = sub_1A54ED14C(v40, v39);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v41 & 1) == 0)
      return 0;
  }
  else if (v39)
  {
    return 0;
  }
  v42 = *(_BYTE *)(a2 + 536);
  if ((*(_BYTE *)(a1 + 536) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 536))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 528) != *(_QWORD *)(a2 + 528))
      v42 = 1;
    if ((v42 & 1) != 0)
      return 0;
  }
  v43 = *(_BYTE *)(a2 + 544);
  if ((*(_BYTE *)(a1 + 544) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 544))
      return 0;
  }
  else
  {
    if (*(_DWORD *)(a1 + 540) != *(_DWORD *)(a2 + 540))
      v43 = 1;
    if ((v43 & 1) != 0)
      return 0;
  }
  if ((*(_BYTE *)(a1 + 560) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 560) & 1) == 0)
      return 0;
    goto LABEL_62;
  }
  if ((*(_BYTE *)(a2 + 560) & 1) != 0)
    return 0;
  v44 = *(_QWORD *)(a1 + 552);
  v45 = *(_QWORD *)(a2 + 552);
  if (((v45 | v44) & 0x8000000000000000) == 0)
  {
    if (v45 != v44)
      return 0;
LABEL_62:
    v46 = *(_QWORD *)(a1 + 576);
    v47 = *(_QWORD *)(a2 + 576);
    if (v46)
      return v47 && (*(_QWORD *)(a1 + 568) == *(_QWORD *)(a2 + 568) && v46 == v47 || (sub_1A594CD38() & 1) != 0);
    return !v47;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A57A2094(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1A594A1B8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A678);
    v10 = sub_1A594C6E4();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1A55E1698(&qword_1EE7964E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      v14 = sub_1A594B148();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v5, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1A55E1698(&qword_1EE7964F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          v20 = sub_1A594B37C();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t initializeWithCopy for MessageData(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(unsigned __int8 *)(a2 + 192);
  if (v4 == 254 || v4 == 255)
  {
    v5 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v5;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    v6 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v6;
    v7 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v7;
    v8 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v8;
    v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
  }
  else
  {
    v75 = v4 & 1;
    v10 = *(_QWORD *)(a2 + 48);
    v11 = *(_QWORD *)(a2 + 56);
    v12 = *(_QWORD *)(a2 + 64);
    v47 = *(_QWORD *)(a2 + 80);
    v49 = *(_QWORD *)(a2 + 88);
    v51 = *(_QWORD *)(a2 + 96);
    v53 = *(_QWORD *)(a2 + 104);
    v55 = *(_QWORD *)(a2 + 112);
    v57 = *(_QWORD *)(a2 + 120);
    v59 = *(_QWORD *)(a2 + 128);
    v61 = *(_QWORD *)(a2 + 136);
    v63 = *(_QWORD *)(a2 + 144);
    v65 = *(_QWORD *)(a2 + 152);
    v67 = *(_QWORD *)(a2 + 160);
    v69 = *(_QWORD *)(a2 + 168);
    v71 = *(_QWORD *)(a2 + 176);
    v73 = *(_QWORD *)(a2 + 184);
    v13 = *(_QWORD *)(a2 + 16);
    v14 = *(_QWORD *)(a2 + 24);
    v15 = *(_QWORD *)(a2 + 32);
    v16 = *(_QWORD *)(a2 + 40);
    v17 = *(_QWORD *)(a2 + 72);
    sub_1A552370C(v13, v14, v15, v16, v10, v11, v12, v17, v47, v49, v51, v53, v55, v57, v59, v61, v63, v65, v67,
      v69,
      v71,
      v73,
      v4 & 1);
    *(_QWORD *)(a1 + 16) = v13;
    *(_QWORD *)(a1 + 24) = v14;
    *(_QWORD *)(a1 + 32) = v15;
    *(_QWORD *)(a1 + 40) = v16;
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    *(_QWORD *)(a1 + 72) = v17;
    *(_QWORD *)(a1 + 80) = v47;
    *(_QWORD *)(a1 + 88) = v49;
    *(_QWORD *)(a1 + 96) = v51;
    *(_QWORD *)(a1 + 104) = v53;
    *(_QWORD *)(a1 + 112) = v55;
    *(_QWORD *)(a1 + 120) = v57;
    *(_QWORD *)(a1 + 128) = v59;
    *(_QWORD *)(a1 + 136) = v61;
    *(_QWORD *)(a1 + 144) = v63;
    *(_QWORD *)(a1 + 152) = v65;
    *(_QWORD *)(a1 + 160) = v67;
    *(_QWORD *)(a1 + 168) = v69;
    *(_QWORD *)(a1 + 176) = v71;
    *(_QWORD *)(a1 + 184) = v73;
    *(_BYTE *)(a1 + 192) = v75;
  }
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v18 = *(unsigned __int8 *)(a2 + 384);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v18 == 254 || v18 == 255)
  {
    v19 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v19;
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
    v20 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v20;
    v21 = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = v21;
    v22 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v22;
    v23 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v23;
  }
  else
  {
    v76 = v18 & 1;
    v24 = *(_QWORD *)(a2 + 240);
    v25 = *(_QWORD *)(a2 + 248);
    v26 = *(_QWORD *)(a2 + 256);
    v48 = *(_QWORD *)(a2 + 272);
    v50 = *(_QWORD *)(a2 + 280);
    v52 = *(_QWORD *)(a2 + 288);
    v54 = *(_QWORD *)(a2 + 296);
    v56 = *(_QWORD *)(a2 + 304);
    v58 = *(_QWORD *)(a2 + 312);
    v60 = *(_QWORD *)(a2 + 320);
    v62 = *(_QWORD *)(a2 + 328);
    v64 = *(_QWORD *)(a2 + 336);
    v66 = *(_QWORD *)(a2 + 344);
    v68 = *(_QWORD *)(a2 + 352);
    v70 = *(_QWORD *)(a2 + 360);
    v72 = *(_QWORD *)(a2 + 368);
    v74 = *(_QWORD *)(a2 + 376);
    v46 = v18 & 1;
    v27 = *(_QWORD *)(a2 + 208);
    v28 = *(_QWORD *)(a2 + 216);
    v29 = *(_QWORD *)(a2 + 224);
    v30 = *(_QWORD *)(a2 + 232);
    v31 = *(_QWORD *)(a2 + 264);
    sub_1A552370C(v27, v28, v29, v30, v24, v25, v26, v31, v48, v50, v52, v54, v56, v58, v60, v62, v64, v66, v68,
      v70,
      v72,
      v74,
      v46);
    *(_QWORD *)(a1 + 208) = v27;
    *(_QWORD *)(a1 + 216) = v28;
    *(_QWORD *)(a1 + 224) = v29;
    *(_QWORD *)(a1 + 232) = v30;
    *(_QWORD *)(a1 + 240) = v24;
    *(_QWORD *)(a1 + 248) = v25;
    *(_QWORD *)(a1 + 256) = v26;
    *(_QWORD *)(a1 + 264) = v31;
    *(_QWORD *)(a1 + 272) = v48;
    *(_QWORD *)(a1 + 280) = v50;
    *(_QWORD *)(a1 + 288) = v52;
    *(_QWORD *)(a1 + 296) = v54;
    *(_QWORD *)(a1 + 304) = v56;
    *(_QWORD *)(a1 + 312) = v58;
    *(_QWORD *)(a1 + 320) = v60;
    *(_QWORD *)(a1 + 328) = v62;
    *(_QWORD *)(a1 + 336) = v64;
    *(_QWORD *)(a1 + 344) = v66;
    *(_QWORD *)(a1 + 352) = v68;
    *(_QWORD *)(a1 + 360) = v70;
    *(_QWORD *)(a1 + 368) = v72;
    *(_QWORD *)(a1 + 376) = v74;
    *(_BYTE *)(a1 + 384) = v76;
  }
  v32 = *(_QWORD *)(a2 + 432);
  if (v32)
  {
    v33 = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 400) = v33;
    *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
    *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
    *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
    v34 = *(_QWORD *)(a2 + 440);
    v35 = *(_QWORD *)(a2 + 448);
    *(_QWORD *)(a1 + 432) = v32;
    *(_QWORD *)(a1 + 440) = v34;
    v36 = *(_QWORD *)(a2 + 456);
    v37 = *(_QWORD *)(a2 + 464);
    *(_QWORD *)(a1 + 448) = v35;
    *(_QWORD *)(a1 + 456) = v36;
    v39 = *(_QWORD *)(a2 + 472);
    v38 = *(_QWORD *)(a2 + 480);
    *(_QWORD *)(a1 + 464) = v37;
    *(_QWORD *)(a1 + 472) = v39;
    v41 = *(_QWORD *)(a2 + 488);
    v40 = *(_QWORD *)(a2 + 496);
    *(_QWORD *)(a1 + 480) = v38;
    *(_QWORD *)(a1 + 488) = v41;
    v77 = *(_QWORD *)(a2 + 504);
    *(_QWORD *)(a1 + 496) = v40;
    *(_QWORD *)(a1 + 504) = v77;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v42 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v42;
    *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
    *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
    v43 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v43;
    v44 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v44;
  }
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  *(_DWORD *)(a1 + 540) = *(_DWORD *)(a2 + 540);
  *(_BYTE *)(a1 + 544) = *(_BYTE *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_BYTE *)(a1 + 560) = *(_BYTE *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MessageData(uint64_t a1, int *a2)
{
  int v4;
  uint64_t v5;
  __int128 *v6;
  int v7;
  int v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  __int128 *v36;
  int v37;
  int v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _OWORD *v65;
  __int128 *v66;
  uint64_t v67;
  int v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  char v190;
  char v191;
  char v192;
  uint64_t v193;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  LOBYTE(v4) = *((_BYTE *)a2 + 12);
  *(_DWORD *)(a1 + 8) = a2[2];
  *(_BYTE *)(a1 + 12) = v4;
  v5 = a1 + 16;
  v6 = (__int128 *)(a2 + 4);
  v7 = *(unsigned __int8 *)(a1 + 192);
  v8 = *((unsigned __int8 *)a2 + 192);
  if (v7 == 254)
  {
    if (v8 == 254)
      goto LABEL_8;
    goto LABEL_7;
  }
  if (v8 == 254)
  {
    sub_1A55D9BF0(a1 + 16);
    goto LABEL_12;
  }
  if (v7 != 255)
  {
    if (v8 != 255)
    {
      v192 = v8 & 1;
      v84 = *((_QWORD *)a2 + 6);
      v85 = *((_QWORD *)a2 + 7);
      v86 = *((_QWORD *)a2 + 8);
      v137 = *((_QWORD *)a2 + 10);
      v141 = *((_QWORD *)a2 + 11);
      v145 = *((_QWORD *)a2 + 12);
      v149 = *((_QWORD *)a2 + 13);
      v153 = *((_QWORD *)a2 + 14);
      v157 = *((_QWORD *)a2 + 15);
      v161 = *((_QWORD *)a2 + 16);
      v165 = *((_QWORD *)a2 + 17);
      v169 = *((_QWORD *)a2 + 18);
      v173 = *((_QWORD *)a2 + 19);
      v177 = *((_QWORD *)a2 + 20);
      v181 = *((_QWORD *)a2 + 21);
      v185 = *((_QWORD *)a2 + 22);
      v189 = *((_QWORD *)a2 + 23);
      v87 = *((_QWORD *)a2 + 2);
      v88 = *((_QWORD *)a2 + 3);
      v89 = *((_QWORD *)a2 + 4);
      v90 = *((_QWORD *)a2 + 5);
      v91 = *((_QWORD *)a2 + 9);
      sub_1A552370C(v87, v88, v89, v90, v84, v85, v86, v91, v137, v141, v145, v149, v153, v157, v161, v165, v169, v173, v177,
        v181,
        v185,
        v189,
        v8 & 1);
      v92 = *(_QWORD *)(a1 + 16);
      v93 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v87;
      *(_QWORD *)(a1 + 24) = v88;
      v94 = *(_QWORD *)(a1 + 32);
      v95 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v89;
      *(_QWORD *)(a1 + 40) = v90;
      v96 = *(_QWORD *)(a1 + 48);
      v97 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 48) = v84;
      *(_QWORD *)(a1 + 56) = v85;
      v98 = *(_QWORD *)(a1 + 64);
      v99 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 64) = v86;
      *(_QWORD *)(a1 + 72) = v91;
      v100 = *(_OWORD *)(a1 + 80);
      v101 = *(_OWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 80) = v137;
      *(_QWORD *)(a1 + 88) = v141;
      *(_QWORD *)(a1 + 96) = v145;
      *(_QWORD *)(a1 + 104) = v149;
      v102 = *(_OWORD *)(a1 + 112);
      v103 = *(_OWORD *)(a1 + 128);
      *(_QWORD *)(a1 + 112) = v153;
      *(_QWORD *)(a1 + 120) = v157;
      *(_QWORD *)(a1 + 128) = v161;
      *(_QWORD *)(a1 + 136) = v165;
      v104 = *(_OWORD *)(a1 + 144);
      v105 = *(_OWORD *)(a1 + 160);
      *(_QWORD *)(a1 + 144) = v169;
      *(_QWORD *)(a1 + 152) = v173;
      *(_QWORD *)(a1 + 160) = v177;
      *(_QWORD *)(a1 + 168) = v181;
      v106 = *(_QWORD *)(a1 + 176);
      v107 = *(_QWORD *)(a1 + 184);
      *(_QWORD *)(a1 + 176) = v185;
      *(_QWORD *)(a1 + 184) = v189;
      v108 = *(_BYTE *)(a1 + 192);
      *(_BYTE *)(a1 + 192) = v192;
      sub_1A55241F0(v92, v93, v94, v95, v96, v97, v98, v99, v100, *((uint64_t *)&v100 + 1), v101, *((uint64_t *)&v101 + 1), v102, *((uint64_t *)&v102 + 1), v103, *((uint64_t *)&v103 + 1), v104, *((uint64_t *)&v104 + 1), v105,
        *((uint64_t *)&v105 + 1),
        v106,
        v107,
        v108);
      goto LABEL_13;
    }
    sub_1A55D9BBC(a1 + 16);
LABEL_12:
    v26 = v6[3];
    v28 = *v6;
    v27 = v6[1];
    *(_OWORD *)(v5 + 32) = v6[2];
    *(_OWORD *)(v5 + 48) = v26;
    *(_OWORD *)v5 = v28;
    *(_OWORD *)(v5 + 16) = v27;
    v29 = v6[7];
    v31 = v6[4];
    v30 = v6[5];
    *(_OWORD *)(v5 + 96) = v6[6];
    *(_OWORD *)(v5 + 112) = v29;
    *(_OWORD *)(v5 + 64) = v31;
    *(_OWORD *)(v5 + 80) = v30;
    v33 = v6[9];
    v32 = v6[10];
    v34 = v6[8];
    *(_BYTE *)(v5 + 176) = *((_BYTE *)v6 + 176);
    *(_OWORD *)(v5 + 144) = v33;
    *(_OWORD *)(v5 + 160) = v32;
    *(_OWORD *)(v5 + 128) = v34;
    goto LABEL_13;
  }
LABEL_7:
  if (v8 == 255)
  {
LABEL_8:
    v9 = *v6;
    v10 = *((_OWORD *)a2 + 2);
    v11 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v11;
    *(_OWORD *)v5 = v9;
    *(_OWORD *)(a1 + 32) = v10;
    v12 = *((_OWORD *)a2 + 5);
    v13 = *((_OWORD *)a2 + 6);
    v14 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 128) = v14;
    *(_OWORD *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 96) = v13;
    v15 = *((_OWORD *)a2 + 9);
    v16 = *((_OWORD *)a2 + 10);
    v17 = *((_OWORD *)a2 + 11);
    *(_BYTE *)(a1 + 192) = *((_BYTE *)a2 + 192);
    *(_OWORD *)(a1 + 160) = v16;
    *(_OWORD *)(a1 + 176) = v17;
    *(_OWORD *)(a1 + 144) = v15;
    goto LABEL_13;
  }
  v191 = v8 & 1;
  v18 = *((_QWORD *)a2 + 6);
  v19 = *((_QWORD *)a2 + 7);
  v20 = *((_QWORD *)a2 + 8);
  v135 = *((_QWORD *)a2 + 10);
  v139 = *((_QWORD *)a2 + 11);
  v143 = *((_QWORD *)a2 + 12);
  v147 = *((_QWORD *)a2 + 13);
  v151 = *((_QWORD *)a2 + 14);
  v155 = *((_QWORD *)a2 + 15);
  v159 = *((_QWORD *)a2 + 16);
  v163 = *((_QWORD *)a2 + 17);
  v167 = *((_QWORD *)a2 + 18);
  v171 = *((_QWORD *)a2 + 19);
  v175 = *((_QWORD *)a2 + 20);
  v179 = *((_QWORD *)a2 + 21);
  v183 = *((_QWORD *)a2 + 22);
  v187 = *((_QWORD *)a2 + 23);
  v21 = *((_QWORD *)a2 + 2);
  v22 = *((_QWORD *)a2 + 3);
  v23 = *((_QWORD *)a2 + 4);
  v24 = *((_QWORD *)a2 + 5);
  v25 = *((_QWORD *)a2 + 9);
  sub_1A552370C(v21, v22, v23, v24, v18, v19, v20, v25, v135, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175,
    v179,
    v183,
    v187,
    v8 & 1);
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v22;
  *(_QWORD *)(a1 + 32) = v23;
  *(_QWORD *)(a1 + 40) = v24;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v19;
  *(_QWORD *)(a1 + 64) = v20;
  *(_QWORD *)(a1 + 72) = v25;
  *(_QWORD *)(a1 + 80) = v135;
  *(_QWORD *)(a1 + 88) = v139;
  *(_QWORD *)(a1 + 96) = v143;
  *(_QWORD *)(a1 + 104) = v147;
  *(_QWORD *)(a1 + 112) = v151;
  *(_QWORD *)(a1 + 120) = v155;
  *(_QWORD *)(a1 + 128) = v159;
  *(_QWORD *)(a1 + 136) = v163;
  *(_QWORD *)(a1 + 144) = v167;
  *(_QWORD *)(a1 + 152) = v171;
  *(_QWORD *)(a1 + 160) = v175;
  *(_QWORD *)(a1 + 168) = v179;
  *(_QWORD *)(a1 + 176) = v183;
  *(_QWORD *)(a1 + 184) = v187;
  *(_BYTE *)(a1 + 192) = v191;
LABEL_13:
  *(_QWORD *)(a1 + 200) = *((_QWORD *)a2 + 25);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v35 = (_OWORD *)(a1 + 208);
  v36 = (__int128 *)(a2 + 52);
  v37 = *(unsigned __int8 *)(a1 + 384);
  v38 = *((unsigned __int8 *)a2 + 384);
  if (v37 == 254)
  {
    if (v38 == 254)
      goto LABEL_20;
    goto LABEL_19;
  }
  if (v38 == 254)
  {
    sub_1A55D9BF0(a1 + 208);
    goto LABEL_24;
  }
  if (v37 != 255)
  {
    if (v38 != 255)
    {
      v190 = v38 & 1;
      v109 = *((_QWORD *)a2 + 31);
      v110 = *((_QWORD *)a2 + 32);
      v134 = *((_QWORD *)a2 + 33);
      v138 = *((_QWORD *)a2 + 34);
      v142 = *((_QWORD *)a2 + 35);
      v146 = *((_QWORD *)a2 + 36);
      v150 = *((_QWORD *)a2 + 37);
      v154 = *((_QWORD *)a2 + 38);
      v158 = *((_QWORD *)a2 + 39);
      v162 = *((_QWORD *)a2 + 40);
      v166 = *((_QWORD *)a2 + 41);
      v170 = *((_QWORD *)a2 + 42);
      v174 = *((_QWORD *)a2 + 43);
      v178 = *((_QWORD *)a2 + 44);
      v182 = *((_QWORD *)a2 + 45);
      v186 = *((_QWORD *)a2 + 46);
      v193 = *((_QWORD *)a2 + 47);
      v111 = *((_QWORD *)a2 + 26);
      v112 = *((_QWORD *)a2 + 27);
      v113 = *((_QWORD *)a2 + 28);
      v114 = *((_QWORD *)a2 + 29);
      v115 = *((_QWORD *)a2 + 30);
      sub_1A552370C(v111, v112, v113, v114, v115, v109, v110, v134, v138, v142, v146, v150, v154, v158, v162, v166, v170, v174, v178,
        v182,
        v186,
        v193,
        v38 & 1);
      v116 = *(_QWORD *)(a1 + 208);
      v117 = *(_QWORD *)(a1 + 216);
      *(_QWORD *)(a1 + 208) = v111;
      *(_QWORD *)(a1 + 216) = v112;
      v118 = *(_QWORD *)(a1 + 224);
      v119 = *(_QWORD *)(a1 + 232);
      *(_QWORD *)(a1 + 224) = v113;
      *(_QWORD *)(a1 + 232) = v114;
      v120 = *(_QWORD *)(a1 + 240);
      v121 = *(_QWORD *)(a1 + 248);
      *(_QWORD *)(a1 + 240) = v115;
      *(_QWORD *)(a1 + 248) = v109;
      v122 = *(_QWORD *)(a1 + 256);
      v123 = *(_QWORD *)(a1 + 264);
      *(_QWORD *)(a1 + 256) = v110;
      *(_QWORD *)(a1 + 264) = v134;
      v124 = *(_OWORD *)(a1 + 272);
      v125 = *(_OWORD *)(a1 + 288);
      *(_QWORD *)(a1 + 272) = v138;
      *(_QWORD *)(a1 + 280) = v142;
      *(_QWORD *)(a1 + 288) = v146;
      *(_QWORD *)(a1 + 296) = v150;
      v126 = *(_OWORD *)(a1 + 304);
      v127 = *(_OWORD *)(a1 + 320);
      *(_QWORD *)(a1 + 304) = v154;
      *(_QWORD *)(a1 + 312) = v158;
      *(_QWORD *)(a1 + 320) = v162;
      *(_QWORD *)(a1 + 328) = v166;
      v128 = *(_OWORD *)(a1 + 336);
      v129 = *(_OWORD *)(a1 + 352);
      *(_QWORD *)(a1 + 336) = v170;
      *(_QWORD *)(a1 + 344) = v174;
      *(_QWORD *)(a1 + 352) = v178;
      *(_QWORD *)(a1 + 360) = v182;
      v130 = *(_BYTE *)(a1 + 384);
      *(_BYTE *)(a1 + 384) = v190;
      v131 = *(_QWORD *)(a1 + 368);
      v132 = *(_QWORD *)(a1 + 376);
      *(_QWORD *)(a1 + 368) = v186;
      *(_QWORD *)(a1 + 376) = v193;
      sub_1A55241F0(v116, v117, v118, v119, v120, v121, v122, v123, v124, *((uint64_t *)&v124 + 1), v125, *((uint64_t *)&v125 + 1), v126, *((uint64_t *)&v126 + 1), v127, *((uint64_t *)&v127 + 1), v128, *((uint64_t *)&v128 + 1), v129,
        *((uint64_t *)&v129 + 1),
        v131,
        v132,
        v130);
      goto LABEL_25;
    }
    sub_1A55D9BBC(a1 + 208);
LABEL_24:
    v56 = *((_OWORD *)a2 + 16);
    v58 = *v36;
    v57 = *((_OWORD *)a2 + 14);
    *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
    *(_OWORD *)(a1 + 256) = v56;
    *v35 = v58;
    *(_OWORD *)(a1 + 224) = v57;
    v59 = *((_OWORD *)a2 + 20);
    v61 = *((_OWORD *)a2 + 17);
    v60 = *((_OWORD *)a2 + 18);
    *(_OWORD *)(a1 + 304) = *((_OWORD *)a2 + 19);
    *(_OWORD *)(a1 + 320) = v59;
    *(_OWORD *)(a1 + 272) = v61;
    *(_OWORD *)(a1 + 288) = v60;
    v63 = *((_OWORD *)a2 + 22);
    v62 = *((_OWORD *)a2 + 23);
    v64 = *((_OWORD *)a2 + 21);
    *(_BYTE *)(a1 + 384) = *((_BYTE *)a2 + 384);
    *(_OWORD *)(a1 + 352) = v63;
    *(_OWORD *)(a1 + 368) = v62;
    *(_OWORD *)(a1 + 336) = v64;
    goto LABEL_25;
  }
LABEL_19:
  if (v38 == 255)
  {
LABEL_20:
    v39 = *v36;
    v40 = *((_OWORD *)a2 + 14);
    v41 = *((_OWORD *)a2 + 16);
    *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
    *(_OWORD *)(a1 + 256) = v41;
    *v35 = v39;
    *(_OWORD *)(a1 + 224) = v40;
    v42 = *((_OWORD *)a2 + 17);
    v43 = *((_OWORD *)a2 + 18);
    v44 = *((_OWORD *)a2 + 20);
    *(_OWORD *)(a1 + 304) = *((_OWORD *)a2 + 19);
    *(_OWORD *)(a1 + 320) = v44;
    *(_OWORD *)(a1 + 272) = v42;
    *(_OWORD *)(a1 + 288) = v43;
    v45 = *((_OWORD *)a2 + 21);
    v46 = *((_OWORD *)a2 + 22);
    v47 = *((_OWORD *)a2 + 23);
    *(_BYTE *)(a1 + 384) = *((_BYTE *)a2 + 384);
    *(_OWORD *)(a1 + 352) = v46;
    *(_OWORD *)(a1 + 368) = v47;
    *(_OWORD *)(a1 + 336) = v45;
    goto LABEL_25;
  }
  v188 = v38 & 1;
  v48 = *((_QWORD *)a2 + 31);
  v49 = *((_QWORD *)a2 + 32);
  v133 = *((_QWORD *)a2 + 34);
  v136 = *((_QWORD *)a2 + 35);
  v140 = *((_QWORD *)a2 + 36);
  v144 = *((_QWORD *)a2 + 37);
  v148 = *((_QWORD *)a2 + 38);
  v152 = *((_QWORD *)a2 + 39);
  v156 = *((_QWORD *)a2 + 40);
  v160 = *((_QWORD *)a2 + 41);
  v164 = *((_QWORD *)a2 + 42);
  v168 = *((_QWORD *)a2 + 43);
  v172 = *((_QWORD *)a2 + 44);
  v176 = *((_QWORD *)a2 + 45);
  v180 = *((_QWORD *)a2 + 46);
  v184 = *((_QWORD *)a2 + 47);
  v50 = *((_QWORD *)a2 + 26);
  v51 = *((_QWORD *)a2 + 27);
  v52 = *((_QWORD *)a2 + 28);
  v53 = *((_QWORD *)a2 + 29);
  v54 = *((_QWORD *)a2 + 30);
  v55 = *((_QWORD *)a2 + 33);
  sub_1A552370C(v50, v51, v52, v53, v54, v48, v49, v55, v133, v136, v140, v144, v148, v152, v156, v160, v164, v168, v172,
    v176,
    v180,
    v184,
    v38 & 1);
  *(_QWORD *)(a1 + 208) = v50;
  *(_QWORD *)(a1 + 216) = v51;
  *(_QWORD *)(a1 + 224) = v52;
  *(_QWORD *)(a1 + 232) = v53;
  *(_QWORD *)(a1 + 240) = v54;
  *(_QWORD *)(a1 + 248) = v48;
  *(_QWORD *)(a1 + 256) = v49;
  *(_QWORD *)(a1 + 264) = v55;
  *(_QWORD *)(a1 + 272) = v133;
  *(_QWORD *)(a1 + 280) = v136;
  *(_QWORD *)(a1 + 288) = v140;
  *(_QWORD *)(a1 + 296) = v144;
  *(_QWORD *)(a1 + 304) = v148;
  *(_QWORD *)(a1 + 312) = v152;
  *(_QWORD *)(a1 + 320) = v156;
  *(_QWORD *)(a1 + 328) = v160;
  *(_QWORD *)(a1 + 336) = v164;
  *(_QWORD *)(a1 + 344) = v168;
  *(_QWORD *)(a1 + 352) = v172;
  *(_QWORD *)(a1 + 360) = v176;
  *(_QWORD *)(a1 + 368) = v180;
  *(_QWORD *)(a1 + 376) = v184;
  *(_BYTE *)(a1 + 384) = v188;
LABEL_25:
  v65 = (_OWORD *)(a1 + 392);
  v66 = (__int128 *)(a2 + 98);
  v67 = *((_QWORD *)a2 + 54);
  if (*(_QWORD *)(a1 + 432))
  {
    if (v67)
    {
      *(_QWORD *)(a1 + 392) = *((_QWORD *)a2 + 49);
      *(_QWORD *)(a1 + 400) = *((_QWORD *)a2 + 50);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 408) = *((_QWORD *)a2 + 51);
      swift_retain();
      swift_release();
      *(_DWORD *)(a1 + 416) = a2[104];
      *(_DWORD *)(a1 + 420) = a2[105];
      *(_DWORD *)(a1 + 424) = a2[106];
      *(_WORD *)(a1 + 428) = *((_WORD *)a2 + 214);
      *(_BYTE *)(a1 + 430) = *((_BYTE *)a2 + 430);
      *(_QWORD *)(a1 + 432) = *((_QWORD *)a2 + 54);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 440) = *((_QWORD *)a2 + 55);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 448) = *((_QWORD *)a2 + 56);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 456) = *((_QWORD *)a2 + 57);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 464) = *((_QWORD *)a2 + 58);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 472) = *((_QWORD *)a2 + 59);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 480) = *((_QWORD *)a2 + 60);
      *(_QWORD *)(a1 + 488) = *((_QWORD *)a2 + 61);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 496) = *((_QWORD *)a2 + 62);
      *(_QWORD *)(a1 + 504) = *((_QWORD *)a2 + 63);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A57A32CC(a1 + 392);
      v69 = *(_OWORD *)(a2 + 110);
      v71 = *v66;
      v70 = *(_OWORD *)(a2 + 102);
      *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 106);
      *(_OWORD *)(a1 + 440) = v69;
      *v65 = v71;
      *(_OWORD *)(a1 + 408) = v70;
      v73 = *(_OWORD *)(a2 + 118);
      v72 = *(_OWORD *)(a2 + 122);
      v74 = *(_OWORD *)(a2 + 114);
      *(_QWORD *)(a1 + 504) = *((_QWORD *)a2 + 63);
      *(_OWORD *)(a1 + 472) = v73;
      *(_OWORD *)(a1 + 488) = v72;
      *(_OWORD *)(a1 + 456) = v74;
    }
  }
  else if (v67)
  {
    *(_QWORD *)(a1 + 392) = *((_QWORD *)a2 + 49);
    *(_QWORD *)(a1 + 400) = *((_QWORD *)a2 + 50);
    *(_QWORD *)(a1 + 408) = *((_QWORD *)a2 + 51);
    *(_DWORD *)(a1 + 416) = a2[104];
    *(_DWORD *)(a1 + 420) = a2[105];
    v68 = a2[106];
    *(_DWORD *)(a1 + 427) = *(int *)((char *)a2 + 427);
    *(_DWORD *)(a1 + 424) = v68;
    *(_QWORD *)(a1 + 432) = *((_QWORD *)a2 + 54);
    *(_QWORD *)(a1 + 440) = *((_QWORD *)a2 + 55);
    *(_QWORD *)(a1 + 448) = *((_QWORD *)a2 + 56);
    *(_QWORD *)(a1 + 456) = *((_QWORD *)a2 + 57);
    *(_QWORD *)(a1 + 464) = *((_QWORD *)a2 + 58);
    *(_QWORD *)(a1 + 472) = *((_QWORD *)a2 + 59);
    *(_QWORD *)(a1 + 480) = *((_QWORD *)a2 + 60);
    *(_QWORD *)(a1 + 488) = *((_QWORD *)a2 + 61);
    *(_QWORD *)(a1 + 496) = *((_QWORD *)a2 + 62);
    *(_QWORD *)(a1 + 504) = *((_QWORD *)a2 + 63);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v75 = *v66;
    v76 = *(_OWORD *)(a2 + 102);
    v77 = *(_OWORD *)(a2 + 110);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 106);
    *(_OWORD *)(a1 + 440) = v77;
    *v65 = v75;
    *(_OWORD *)(a1 + 408) = v76;
    v78 = *(_OWORD *)(a2 + 114);
    v79 = *(_OWORD *)(a2 + 118);
    v80 = *(_OWORD *)(a2 + 122);
    *(_QWORD *)(a1 + 504) = *((_QWORD *)a2 + 63);
    *(_OWORD *)(a1 + 472) = v79;
    *(_OWORD *)(a1 + 488) = v80;
    *(_OWORD *)(a1 + 456) = v78;
  }
  *(_QWORD *)(a1 + 512) = *((_QWORD *)a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 520) = *((_QWORD *)a2 + 65);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v81 = *((_QWORD *)a2 + 66);
  *(_BYTE *)(a1 + 536) = *((_BYTE *)a2 + 536);
  *(_QWORD *)(a1 + 528) = v81;
  LODWORD(v81) = a2[135];
  *(_BYTE *)(a1 + 544) = *((_BYTE *)a2 + 544);
  *(_DWORD *)(a1 + 540) = v81;
  v82 = *((_QWORD *)a2 + 69);
  *(_BYTE *)(a1 + 560) = *((_BYTE *)a2 + 560);
  *(_QWORD *)(a1 + 552) = v82;
  *(_QWORD *)(a1 + 568) = *((_QWORD *)a2 + 71);
  *(_QWORD *)(a1 + 576) = *((_QWORD *)a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A57A32CC(uint64_t a1)
{
  destroy for Envelope();
  return a1;
}

void *__swift_memcpy584_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x248uLL);
}

uint64_t assignWithTake for MessageData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  int v13;
  int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = a1 + 16;
  v5 = a2 + 16;
  v6 = *(unsigned __int8 *)(a1 + 192);
  v7 = *(unsigned __int8 *)(a2 + 192);
  if (v6 == 254)
    goto LABEL_7;
  if (v7 == 254)
  {
    sub_1A55D9BF0(a1 + 16);
LABEL_7:
    v8 = *(_OWORD *)(v5 + 144);
    *(_OWORD *)(v4 + 128) = *(_OWORD *)(v5 + 128);
    *(_OWORD *)(v4 + 144) = v8;
    *(_OWORD *)(v4 + 160) = *(_OWORD *)(v5 + 160);
    *(_BYTE *)(v4 + 176) = *(_BYTE *)(v5 + 176);
    v9 = *(_OWORD *)(v5 + 80);
    *(_OWORD *)(v4 + 64) = *(_OWORD *)(v5 + 64);
    *(_OWORD *)(v4 + 80) = v9;
    v10 = *(_OWORD *)(v5 + 112);
    *(_OWORD *)(v4 + 96) = *(_OWORD *)(v5 + 96);
    *(_OWORD *)(v4 + 112) = v10;
    v11 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)v4 = *(_OWORD *)v5;
    *(_OWORD *)(v4 + 16) = v11;
    v12 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(v4 + 48) = v12;
    goto LABEL_8;
  }
  if (v6 == 255)
    goto LABEL_7;
  if (v7 == 255)
  {
    sub_1A55D9BBC(a1 + 16);
    goto LABEL_7;
  }
  v27 = *(_QWORD *)(a1 + 16);
  v28 = *(_QWORD *)(a1 + 24);
  v29 = *(_QWORD *)(a1 + 32);
  v30 = *(_QWORD *)(a1 + 40);
  v31 = *(_QWORD *)(a1 + 48);
  v32 = *(_QWORD *)(a1 + 56);
  v33 = *(_QWORD *)(a1 + 64);
  v34 = *(_QWORD *)(a1 + 72);
  v35 = *(_OWORD *)(a1 + 80);
  v36 = *(_OWORD *)(a1 + 96);
  v37 = *(_OWORD *)(a1 + 112);
  v38 = *(_OWORD *)(a1 + 128);
  v39 = *(_OWORD *)(a1 + 144);
  v40 = *(_OWORD *)(a1 + 160);
  v41 = *(_QWORD *)(a1 + 176);
  v42 = *(_QWORD *)(a1 + 184);
  v43 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v43;
  v44 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v44;
  v45 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v45;
  v46 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v46;
  v47 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v47;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = v7 & 1;
  sub_1A55241F0(v27, v28, v29, v30, v31, v32, v33, v34, v35, *((uint64_t *)&v35 + 1), v36, *((uint64_t *)&v36 + 1), v37, *((uint64_t *)&v37 + 1), v38, *((uint64_t *)&v38 + 1), v39, *((uint64_t *)&v39 + 1), v40,
    *((uint64_t *)&v40 + 1),
    v41,
    v42,
    v6 & 1);
LABEL_8:
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRelease();
  v13 = *(unsigned __int8 *)(a1 + 384);
  v14 = *(unsigned __int8 *)(a2 + 384);
  if (v13 == 254)
  {
LABEL_14:
    v15 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v15;
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
    v16 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v16;
    v17 = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = v17;
    v18 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v18;
    v19 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v19;
    goto LABEL_15;
  }
  if (v14 == 254)
  {
    sub_1A55D9BF0(a1 + 208);
    goto LABEL_14;
  }
  if (v13 == 255)
    goto LABEL_14;
  if (v14 == 255)
  {
    sub_1A55D9BBC(a1 + 208);
    goto LABEL_14;
  }
  v48 = *(_QWORD *)(a1 + 208);
  v49 = *(_QWORD *)(a1 + 216);
  v50 = *(_QWORD *)(a1 + 224);
  v51 = *(_QWORD *)(a1 + 232);
  v52 = *(_QWORD *)(a1 + 240);
  v53 = *(_QWORD *)(a1 + 248);
  v54 = *(_QWORD *)(a1 + 256);
  v55 = *(_QWORD *)(a1 + 264);
  v56 = *(_OWORD *)(a1 + 272);
  v57 = *(_OWORD *)(a1 + 288);
  v58 = *(_OWORD *)(a1 + 304);
  v59 = *(_OWORD *)(a1 + 320);
  v60 = *(_OWORD *)(a1 + 336);
  v61 = *(_OWORD *)(a1 + 352);
  v62 = *(_QWORD *)(a1 + 368);
  v63 = *(_QWORD *)(a1 + 376);
  v64 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v64;
  v65 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v65;
  v66 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v66;
  v67 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v67;
  v68 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v68;
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_BYTE *)(a1 + 384) = v14 & 1;
  sub_1A55241F0(v48, v49, v50, v51, v52, v53, v54, v55, v56, *((uint64_t *)&v56 + 1), v57, *((uint64_t *)&v57 + 1), v58, *((uint64_t *)&v58 + 1), v59, *((uint64_t *)&v59 + 1), v60, *((uint64_t *)&v60 + 1), v61,
    *((uint64_t *)&v61 + 1),
    v62,
    v63,
    v13 & 1);
LABEL_15:
  if (!*(_QWORD *)(a1 + 432))
  {
LABEL_19:
    v23 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v23;
    *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
    *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
    v24 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v24;
    v25 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v25;
    goto LABEL_20;
  }
  if (!*(_QWORD *)(a2 + 432))
  {
    sub_1A57A32CC(a1 + 392);
    goto LABEL_19;
  }
  v20 = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  swift_release();
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
  *(_WORD *)(a1 + 428) = *(_WORD *)(a2 + 428);
  *(_BYTE *)(a1 + 430) = *(_BYTE *)(a2 + 430);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = v22;
  swift_bridgeObjectRelease();
LABEL_20:
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  *(_DWORD *)(a1 + 540) = *(_DWORD *)(a2 + 540);
  *(_BYTE *)(a1 + 544) = *(_BYTE *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_BYTE *)(a1 + 560) = *(_BYTE *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 584))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 200);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 584) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 200) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 584) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MessageData.BodySection(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    v9 = *((_BYTE *)a2 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55DC724(v8, v9);
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v10 = *(int *)(a3 + 24);
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for MessageData.BodyData();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D50);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = sub_1A594AE60();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, v12, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  return a1;
}

uint64_t destroy for MessageData.BodySection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  swift_bridgeObjectRelease();
  sub_1A55DC738(*(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for MessageData.BodyData();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = sub_1A594AE60();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
  }
  return result;
}

uint64_t initializeWithCopy for MessageData.BodySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55DC724(v6, v7);
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v8 = *(int *)(a3 + 24);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for MessageData.BodyData();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D50);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = sub_1A594AE60();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for MessageData.BodySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  unsigned __int8 v9;
  int v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  sub_1A55DC724(v6, v7);
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v7;
  sub_1A55DC738(v8, v9);
  v10 = *(_DWORD *)(a2 + 20);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 20) = v10;
  v11 = *(int *)(a3 + 24);
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = type metadata accessor for MessageData.BodyData();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      v22 = sub_1A594AE60();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v12, v13, v22);
      return a1;
    }
    sub_1A57A3C28((uint64_t)v12);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D50);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  v19 = sub_1A594AE60();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v12, v13, v19);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1A57A3C28(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MessageData.BodyData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for MessageData.BodySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = type metadata accessor for MessageData.BodyData();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D50);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = sub_1A594AE60();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for MessageData.BodySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_1A55DC738(v7, v8);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v9 = *(int *)(a3 + 24);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = type metadata accessor for MessageData.BodyData();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v20 = sub_1A594AE60();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v10, v11, v20);
      return a1;
    }
    sub_1A57A3C28((uint64_t)v10);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D50);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  v17 = sub_1A594AE60();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageData.BodySection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A57A3EA4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D50);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MessageData.BodySection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1A57A3F30(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D50);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_1A57A3FA8()
{
  unint64_t v0;

  sub_1A57A4024();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1A57A4024()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE797D58)
  {
    type metadata accessor for MessageData.BodyData();
    v0 = sub_1A594C354();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE797D58);
  }
}

uint64_t sub_1A57A4078(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 200);
  v18 = *(_QWORD *)(a1 + 192);
  v19 = *(_QWORD *)(a1 + 184);
  v3 = *(_QWORD *)(a1 + 208);
  v4 = *(_QWORD *)(a1 + 216);
  v5 = *(_QWORD *)(a1 + 224);
  v6 = *(_QWORD *)(a1 + 232);
  v7 = *(_QWORD *)(a1 + 240);
  v16 = *(_OWORD *)(a1 + 264);
  v17 = *(_OWORD *)(a1 + 248);
  v15 = *(_OWORD *)(a1 + 280);
  v13 = *(_OWORD *)(a1 + 312);
  v14 = *(_OWORD *)(a1 + 296);
  v12 = *(_OWORD *)(a1 + 328);
  v9 = *(_QWORD *)(a1 + 344);
  v8 = *(_QWORD *)(a1 + 352);
  v10 = *(_BYTE *)(a1 + 360);
  sub_1A5524104(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_BYTE *)(a1 + 176));
  sub_1A5524104(v19, v18, v2, v3, v4, v5, v6, v7, v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12,
    *((uint64_t *)&v12 + 1),
    v9,
    v8,
    v10);
  return a1;
}

uint64_t *sub_1A57A41A0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[15];
  v3 = a1[16];
  v4 = a1[17];
  v5 = a1[18];
  v6 = a1[19];
  v7 = a1[20];
  sub_1A55245C0(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  sub_1A55245C0(v2, v3, v4, v5, v6, v7);
  return a1;
}

uint64_t sub_1A57A427C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MessageData.BodyData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t MessageData.BodyData.underlying.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MessageData.BodyData.underlying.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

double (*MessageData.BodyData.underlying.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageData.BodyData.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_1A57A4384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v0 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  if (v0 != _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0())
    return 0;
  sub_1A594AE60();
  sub_1A57A4864();
  sub_1A594BD60();
  v1 = sub_1A594BDB4();
  if (v4 == v3)
    return 1;
  MEMORY[0x1E0C80A78](v1);
  sub_1A594ADE8();
  return v4;
}

uint64_t type metadata accessor for MessageData.BodyData()
{
  uint64_t result;

  result = qword_1EE797D38;
  if (!qword_1EE797D38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MessageData.BodyData.init(_:)(uint64_t a1, unint64_t a2)
{
  unsigned int v2;
  unint64_t v3;
  uint64_t result;

  v2 = a2;
  v3 = HIDWORD(a2);
  result = swift_beginAccess();
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    sub_1A594AE0C();
    return swift_release();
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MessageHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for MessageHeader(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for MessageHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MessageHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MessageHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MessageHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s14descr1E4F053B1C8BodyDataVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A57A4774(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s14descr1E4F053B1C8BodyDataVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A57A47BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1A57A47FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594AE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1A57A4864()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE798F28;
  if (!qword_1EE798F28)
  {
    v1 = sub_1A594AE60();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEF670], v1);
    atomic_store(result, (unint64_t *)&qword_1EE798F28);
  }
  return result;
}

uint64_t sub_1A57A48AC()
{
  return sub_1A594ADE8();
}

uint64_t sub_1A57A48F4()
{
  return sub_1A594ADE8();
}

uint64_t sub_1A57A4940@<X0>(const void *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;
  const void *v5;
  size_t v6;
  uint64_t result;

  v5 = *(const void **)(v2 + 16);
  v6 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  result = memcmp(v5, a1, v6);
  *a2 = (_DWORD)result == 0;
  return result;
}

uint64_t ClientCommandEncoder.encode(tag:command:)@<X0>(int a1@<W2>, void (*a2)(_QWORD)@<X8>)
{
  return sub_1A57A4EF0((void (*)(_QWORD))sub_1A5798FA4, a1 & 0x101FF, a2);
}

uint64_t ClientCommandEncoder.idle(tag:)@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unint64_t a3@<X8>)
{
  char v3;
  char v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t result;
  unint64_t v25;
  unsigned int v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t, char *, uint64_t);
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  _BYTE v51[136];
  uint64_t v52;
  Swift::String v53;
  _BYTE v54[120];
  uint64_t v55;
  _BYTE v56[136];
  Swift::String v57[8];
  uint64_t v58;

  v3 = a2;
  v48 = a3;
  v5 = a2;
  v6 = a2 & 0x100;
  v7 = HIWORD(a2) & 1;
  v8 = sub_1A594B478();
  MEMORY[0x1E0C80A78](v8);
  v45 = sub_1A594AE60();
  v9 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v46 = (char *)&v44 - v12;
  MEMORY[0x1E0C80A78](v13);
  v50 = (char *)&v44 - v14;
  v15 = ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor();
  v16 = v15[1];
  v17 = qword_1A59B9A68[v5];
  v18 = *((unsigned int *)v15 + 4) | ((unint64_t)*((unsigned __int16 *)v15 + 10) << 32) | ((unint64_t)*((unsigned __int8 *)v15 + 22) << 48);
  v49 = (unint64_t)v6 << 24;
  v19 = v49 | v17 | 1;
  v20 = swift_retain();
  CommandEncodeBuffer.init(buffer:options:encodedAtLeastOneCatenateElement:loggingMode:)(v20, v16, v18, v19, 0, v7, (uint64_t)&v55);
  v57[0]._countAndFlagsBits = sub_1A57BE3B4(a1 & 0xFFFFFFFF000000FFLL);
  sub_1A594B460();
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796028);
  sub_1A579FA78();
  v21 = sub_1A594B430();
  v23 = v22;
  result = swift_bridgeObjectRelease();
  if (v23)
  {
    v53._countAndFlagsBits = v21;
    v53._object = v23;
    *(_QWORD *)v54 = 8;
    memset(&v54[8], 0, 96);
    *(_OWORD *)&v54[104] = xmmword_1A59AC040;
    v57[2] = *(Swift::String *)&v54[16];
    v57[3] = *(Swift::String *)&v54[32];
    v57[4] = *(Swift::String *)&v54[48];
    v57[5] = *(Swift::String *)&v54[64];
    v57[6] = *(Swift::String *)&v54[80];
    v57[7] = *(Swift::String *)&v54[96];
    v58 = 0;
    v57[0] = v53;
    v57[1] = *(Swift::String *)v54;
    CommandEncodeBuffer.writeCommand(_:)(v57);
    sub_1A57A6118((uint64_t)&v53);
    EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
    v26 = v25;
    v27 = HIDWORD(v25);
    result = swift_beginAccess();
    if (v27 < v26)
    {
      __break(1u);
    }
    else
    {
      v28 = v50;
      sub_1A594AE0C();
      swift_release();
      swift_release();
      swift_release();
      v29 = v15[1];
      v30 = *((unsigned int *)v15 + 4) | ((unint64_t)*((unsigned __int16 *)v15 + 10) << 32) | ((unint64_t)*((unsigned __int8 *)v15 + 22) << 48);
      v31 = v49 | qword_1A59B9A68[v3] | 1;
      v32 = swift_retain();
      CommandEncodeBuffer.init(buffer:options:encodedAtLeastOneCatenateElement:loggingMode:)(v32, v29, v30, v31, 0, v7, (uint64_t)&v52);
      sub_1A5718750((uint64_t)v51);
      sub_1A567FF24(v51, v56);
      CommandEncodeBuffer.writeCommandStream(_:)(v56);
      EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
      LODWORD(v30) = v33;
      v34 = HIDWORD(v33);
      result = swift_beginAccess();
      if (v34 >= v30)
      {
        v35 = v46;
        sub_1A594AE0C();
        swift_release();
        swift_release();
        swift_release();
        v36 = v28;
        v37 = v47;
        v38 = v45;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v47, v36, v45);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B238);
        v39 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
        v40 = swift_allocObject();
        *(_OWORD *)(v40 + 16) = xmmword_1A59ABD10;
        v41 = v40 + v39;
        v42 = *(void (**)(unint64_t, char *, uint64_t))(v9 + 32);
        v42(v41, v35, v38);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v36, v38);
        v43 = v48;
        v42(v48, v37, v38);
        result = type metadata accessor for ClientCommand.Encoded();
        *(_QWORD *)(v43 + *(int *)(result + 20)) = v40;
        return result;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A57A4E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[17];

  v3 = sub_1A57A7B6C(a2 & 0xFFFFFFFF000000FFLL, a3);
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
    return swift_bridgeObjectRelease();
  v5 = (char *)(v3 + 32);
  do
  {
    sub_1A567FF24(v5, v7);
    sub_1A57A8CEC(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A57A8894);
    CommandEncodeBuffer.writeCommandStream(_:)(v7);
    sub_1A57A8CEC(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A57A8D48);
    v5 += 136;
    --v4;
  }
  while (v4);
  return swift_bridgeObjectRelease();
}

uint64_t static Command.convert(tag:command:)(uint64_t a1, uint64_t a2)
{
  return sub_1A57A7B6C(a1 & 0xFFFFFFFF000000FFLL, a2);
}

uint64_t sub_1A57A4EF0@<X0>(void (*a1)(_QWORD)@<X0>, unsigned int a2@<W2>, void (*a3)(_QWORD)@<X8>)
{
  __int16 v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t result;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD);
  _BYTE v38[8];

  v3 = a2;
  v37 = a1;
  v5 = HIWORD(a2) & 1;
  v6 = sub_1A594AE60();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor();
  v11 = v10[1];
  v12 = 8 * (char)v3;
  v13 = *(_QWORD *)((char *)&unk_1A59B9A80 + v12);
  v14 = *(_QWORD *)((char *)&unk_1A59B9A98 + v12);
  v15 = *(_QWORD *)((char *)&unk_1A59B9AB0 + v12);
  v16 = *((unsigned int *)v10 + 4) | ((unint64_t)*((unsigned __int16 *)v10 + 10) << 32) | ((unint64_t)*((unsigned __int8 *)v10 + 22) << 48);
  v17 = 0x100000001;
  if ((v3 & 0x100) == 0)
    v17 = 1;
  v18 = v17 | v13 | v14 | v15;
  v19 = swift_retain();
  CommandEncodeBuffer.init(buffer:options:encodedAtLeastOneCatenateElement:loggingMode:)(v19, v11, v16, v18, 0, v5, (uint64_t)v38);
  v37(v38);
  EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
  v21 = v20;
  LODWORD(v18) = v22;
  v24 = v23;
  v25 = HIDWORD(v22);
  result = swift_beginAccess();
  if (v25 >= v18)
  {
    sub_1A594AE0C();
    v27 = *(int *)(type metadata accessor for ClientCommand.Encoded() + 20);
    *(_QWORD *)((char *)a3 + v27) = MEMORY[0x1E0DEE9D8];
    if ((v24 & 0x100000000000000) == 0)
    {
LABEL_13:
      swift_release();
      swift_release();
      return swift_release();
    }
    v36 = v21;
    v37 = a3;
    v28 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
      v30 = v29;
      v32 = v31;
      v33 = HIDWORD(v29);
      result = swift_beginAccess();
      if (v33 < v30)
        break;
      sub_1A594AE0C();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_1A57B244C(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
      v35 = *(_QWORD *)(v28 + 16);
      v34 = *(_QWORD *)(v28 + 24);
      if (v35 >= v34 >> 1)
        v28 = sub_1A57B244C(v34 > 1, v35 + 1, 1, v28);
      *(_QWORD *)(v28 + 16) = v35 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v28+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v35, v9, v6);
      swift_release();
      if ((v32 & 0x100000000000000) == 0)
      {
        *(_QWORD *)((char *)v37 + v27) = v28;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1A57A51C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  Capability.init(_:)(0xD000000000000011, 0x80000001A5A0F590);
  static Capability.applePushService = v0;
  *(_QWORD *)algn_1EE7F91A8 = v1;
  qword_1EE7F91B0 = v2;
  byte_1EE7F91B8 = v3 & 1;
}

uint64_t *Capability.applePushService.unsafeMutableAddressor()
{
  if (qword_1EE796798 != -1)
    swift_once();
  return &static Capability.applePushService;
}

uint64_t static Capability.applePushService.getter()
{
  uint64_t v0;

  if (qword_1EE796798 != -1)
    swift_once();
  v0 = static Capability.applePushService;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v0;
}

void sub_1A57A52BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1A57A8674(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)&loc_1A57A5350 + dword_1A57A5B1C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1A57A537C(__n128 a1, double a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(_QWORD *)(v6 + 16);
  v9 = *(_QWORD *)(v6 + 24);
  a1.n128_u64[0] = *(unsigned int *)(v6 + 32) | ((unint64_t)(*(unsigned __int16 *)(v6 + 36) | (*(unsigned __int8 *)(v6 + 38) << 16)) << 32);
  *(_QWORD *)v5 = *(_QWORD *)v6;
  *(_QWORD *)(v5 + 8) = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *(_QWORD *)(v5 + 24) = v9;
  *(__n128 *)(v5 + 32) = a1;
  *(__n128 *)(v5 + 48) = a3;
  *(__n128 *)(v5 + 64) = a4;
  *(__n128 *)(v5 + 80) = a5;
  *(_OWORD *)(v5 + 96) = xmmword_1A59BA3D0;
  *(_QWORD *)(v5 + 112) = 0;
}

_QWORD *sub_1A57A5B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *(__cdecl *v14)(size_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  __int16 v31;
  unsigned __int8 v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *(__cdecl *v52)(size_t);
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  __int16 v57;
  unsigned __int8 v58;
  uint64_t v59;

  v1 = v0;
  sub_1A594C720();
  sub_1A594B5F8();
  LODWORD(v59) = *(_DWORD *)v0;
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A57A5FBC(*(_QWORD *)(v0 + 8));
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A57A5FBC(*(_QWORD *)(v0 + 24));
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A57A5FBC(*(_QWORD *)(v0 + 40));
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  ByteBuffer.init(string:)(0, 0xE000000000000000);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_1A57B256C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v10 = v8[2];
  v9 = v8[3];
  v11 = v10 + 1;
  if (v10 >= v9 >> 1)
    goto LABEL_17;
  while (1)
  {
    v8[2] = v11;
    v53 = v8;
    v12 = &v8[3 * v10];
    v12[4] = v3 | 0x8000000000000000;
    v12[5] = v5;
    *((_BYTE *)v12 + 54) = BYTE6(v7);
    *((_WORD *)v12 + 26) = WORD2(v7);
    *((_DWORD *)v12 + 12) = v7;
    v13 = *(_QWORD *)(v1 + 56);
    v59 = v13;
    v1 = *(_QWORD *)(v13 + 16);
    if (!v1)
      break;
    v14 = ByteBufferAllocator.init()();
    v51 = v15;
    v52 = v14;
    v49 = v17;
    v50 = v16;
    v48 = v13 + 32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v3 = 0;
    while (1)
    {
      v18 = *(_QWORD *)(v48 + v3);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v3)
      {
        ByteBuffer.init(string:)(32, 0xE100000000000000);
        v20 = v19;
        v22 = v21;
        v24 = v23;
        v25 = v53;
        v10 = v53[2];
        v26 = v53[3];
        if (v10 >= v26 >> 1)
          v25 = sub_1A57B256C((_QWORD *)(v26 > 1), v10 + 1, 1, v53);
        v25[2] = v10 + 1;
        v53 = v25;
        v27 = &v25[3 * v10];
        v27[4] = v20 | 0x8000000000000000;
        v27[5] = v22;
        *((_BYTE *)v27 + 54) = BYTE6(v24);
        *((_WORD *)v27 + 26) = WORD2(v24);
        *((_DWORD *)v27 + 12) = v24;
      }
      ByteBufferAllocator.buffer(capacity:)(*(_QWORD *)(v18 + 16), (uint64_t (*)(_QWORD))v52, v51, v50, v49);
      v54 = v28;
      v55 = v29;
      v56 = v30;
      v57 = v31;
      v58 = v32;
      ByteBuffer._setBytes(_:at:)(v18 + 32, v18 + 32 + *(_QWORD *)(v18 + 16), HIDWORD(v29));
      v7 = v33;
      swift_bridgeObjectRelease();
      v9 = HIDWORD(v55);
      if (__CFADD__(HIDWORD(v55), (_DWORD)v7))
        break;
      v34 = v53;
      v5 = v55;
      v11 = v58;
      v10 = v53[2];
      v35 = v53[3];
      if (v10 >= v35 >> 1)
        v34 = sub_1A57B256C((_QWORD *)(v35 > 1), v10 + 1, 1, v53);
      v34[2] = v10 + 1;
      v53 = v34;
      v36 = &v34[3 * v10];
      v36[4] = v54;
      v36[5] = v55 | ((unint64_t)(HIDWORD(v55) + v7) << 32);
      *((_BYTE *)v36 + 54) = v58;
      *((_WORD *)v36 + 26) = v57;
      *((_DWORD *)v36 + 12) = v56;
      v3 += 16;
      if (!--v1)
      {
        sub_1A54F81BC((uint64_t)&v59);
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_17:
    v8 = sub_1A57B256C((_QWORD *)(v9 > 1), v11, 1, v8);
  }
LABEL_13:
  ByteBuffer.init(string:)(41, 0xE100000000000000);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v43 = v53;
  v45 = v53[2];
  v44 = v53[3];
  if (v45 >= v44 >> 1)
    v43 = sub_1A57B256C((_QWORD *)(v44 > 1), v45 + 1, 1, v53);
  v43[2] = v45 + 1;
  v46 = &v43[3 * v45];
  v46[4] = v38 | 0x8000000000000000;
  v46[5] = v40;
  *((_DWORD *)v46 + 12) = v42;
  *((_BYTE *)v46 + 54) = BYTE6(v42);
  *((_WORD *)v46 + 26) = WORD2(v42);
  return v43;
}

uint64_t sub_1A57A5FBC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  int v7;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  while (1)
  {
    v2 = sub_1A594B634();
    if (!v3)
    {
      swift_bridgeObjectRelease();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return a1;
    }
    v4 = v2;
    v5 = v3;
    if (v2 == 2573 && v3 == 0xE200000000000000 || (sub_1A594CD38() & 1) != 0 || (sub_1A594B1B4() & 1) == 0)
      goto LABEL_15;
    result = sub_1A57A76A0(v4, v5);
    if ((result & 0x100000000) != 0)
      goto LABEL_20;
    if ((result & 0xFFFFFF80) != 0)
    {
LABEL_15:
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
      return 120;
    }
    result = sub_1A57A76A0(v4, v5);
    if ((result & 0x100000000) != 0)
      goto LABEL_21;
    v7 = result;
    result = swift_bridgeObjectRelease();
    if ((v7 & 0xFFFFFF00) != 0)
      break;
    if (v7 - 47 <= 0xFFFFFFFD
      && v7 - 58 <= 0xFFFFFFF5
      && (v7 & 0xDFu) - 91 < 0xFFFFFFE6)
    {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1A57A6118(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v12 = *(_OWORD *)(a1 + 96);
  v13 = *(_OWORD *)(a1 + 80);
  v11 = *(_OWORD *)(a1 + 112);
  swift_bridgeObjectRelease();
  sub_1A57A61CC(v2, v3, v4, v5, v6, v7, v8, v9, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((unint64_t *)&v11 + 1));
  return a1;
}

uint64_t sub_1A57A61CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  switch(a14 >> 58)
  {
    case 0uLL:
    case 2uLL:
    case 7uLL:
    case 8uLL:
    case 0xCuLL:
    case 0x20uLL:
    case 0x24uLL:
      goto LABEL_17;
    case 1uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xDuLL:
    case 0x1BuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
      goto LABEL_18;
    case 3uLL:
      sub_1A567FE0C(result, a2, a3, a4, a5, a6, a7, a8, a9);
      swift_bridgeObjectRelease();
      sub_1A56667E0(a12, a13, a14, HIBYTE(a14) & 1);
      goto LABEL_18;
    case 4uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A56667E0(a4, a5, a6, HIBYTE(a6) & 1);
      goto LABEL_18;
    case 5uLL:
    case 0xBuLL:
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 6uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_15;
    case 0xEuLL:
    case 0x12uLL:
    case 0x14uLL:
    case 0x15uLL:
      sub_1A5503B8C(result, a2);
      goto LABEL_18;
    case 0xFuLL:
    case 0x16uLL:
      sub_1A5503B8C(result, a2);
      goto LABEL_17;
    case 0x10uLL:
    case 0x18uLL:
      sub_1A5503B8C(result, a2);
      swift_bridgeObjectRelease();
      return sub_1A567FE60();
    case 0x11uLL:
    case 0x17uLL:
      sub_1A5797180(result);
      goto LABEL_17;
    case 0x13uLL:
      swift_release();
      swift_release();
      goto LABEL_15;
    case 0x19uLL:
      return sub_1A5503B8C(result, a2);
    case 0x1AuLL:
      goto LABEL_15;
    case 0x1CuLL:
      swift_release();
      goto LABEL_18;
    case 0x1DuLL:
      swift_bridgeObjectRelease();
LABEL_17:
      swift_bridgeObjectRelease();
LABEL_18:
      result = swift_bridgeObjectRelease();
      break;
    case 0x1EuLL:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
LABEL_15:
      result = swift_release();
      break;
    case 0x1FuLL:
      sub_1A5797180(result);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_1A567FEA4(a5, a6, a7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A57A64D0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A57A7AA0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A57A6B48(v5);
  *a1 = v2;
  return result;
}

void sub_1A57A6538(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

void sub_1A57A658C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  __int16 v13;
  char v14;

  ByteBufferAllocator.buffer(capacity:)(BYTE6(v6), a3, a4, a5, a6);
  *(_QWORD *)(v8 - 96) = v9;
  *(_DWORD *)(v8 - 88) = v10;
  *(_DWORD *)(v8 - 84) = v11;
  *(_DWORD *)(v8 - 80) = v12;
  *(_WORD *)(v8 - 76) = v13;
  *(_BYTE *)(v8 - 74) = v14;
  MEMORY[0x1E0C80A78](v9);
  __asm { BR              X10 }
}

uint64_t sub_1A57A6630()
{
  uint64_t v0;
  uint64_t v1;
  Swift::UInt32 v2;
  uint64_t v3;
  int v4;

  *(_QWORD *)(v3 - 120) = v1;
  *(_WORD *)(v3 - 112) = v0;
  *(_BYTE *)(v3 - 110) = BYTE2(v0);
  *(_BYTE *)(v3 - 109) = BYTE3(v0);
  *(_BYTE *)(v3 - 108) = BYTE4(v0);
  *(_BYTE *)(v3 - 107) = BYTE5(v0);
  ByteBuffer._setBytes(_:at:)(v3 - 120, v3 - 120 + BYTE6(v0), v2);
  if (__CFADD__(*(_DWORD *)(v3 - 84), v4))
  {
    __break(1u);
    JUMPOUT(0x1A57A6808);
  }
  return *(_QWORD *)(v3 - 96);
}

void sub_1A57A6848(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD v4[3];
  uint64_t v5;

  v5 = sub_1A5949FFC();
  MEMORY[0x1E0C80A78](v5);
  v4[2] = (char *)v4 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796A10) != MEMORY[0x1E0CB0338])
    __asm { BR              X10 }
  __break(1u);
  JUMPOUT(0x1A57A6ABCLL);
}

unint64_t sub_1A57A6ACC(unint64_t result, uint64_t *a2, Swift::UInt32 at)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (!HIDWORD(result))
  {
    ByteBuffer._ensureAvailableCapacity(_:at:)(result, at);
    v5 = *a2;
    v6 = *((unsigned __int16 *)a2 + 10);
    v7 = *((unsigned __int8 *)a2 + 22);
    swift_beginAccess();
    return *(_QWORD *)(v5 + 24) + (v7 | (v6 << 8)) + at;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A57A6B48(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1A594CC78();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1A57A7230(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1A57A72FC((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1A57A768C((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1A594BA18();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1A594CD38();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1A594CD38()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A57A7594(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1A57A7594((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1A57A72FC((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1A594CD38() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t sub_1A57A7230(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1A594CD38(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A57A72FC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1A594CD38() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1A594CD38() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1A5589E44((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

char *sub_1A57A7594(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B308);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A57A768C(uint64_t a1)
{
  return sub_1A57A7594(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_1A57A76A0(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unsigned int v5;

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_1A57A777C(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v5 = sub_1A594C714();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
        sub_1A594C7D4();
      v5 = sub_1A594C7E0();
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_1A57A777C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_1A57A7818(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_1A57A7884(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_1A57A7818(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_1A55796A4(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_1A57A7884(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v7 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL))
          goto LABEL_14;
      }
      else
      {
        v12 = result >> 16;
        v6 = sub_1A594C7D4();
        v5 = v12;
        if (v12 == v10)
          goto LABEL_14;
      }
      if ((*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          v7 = v5 - 1;
          v8 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      v7 = v5;
      return v7 << 16;
    }
    v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v9 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v9)
      return sub_1A594C708();
  }
  return result;
}

_QWORD *sub_1A57A7994(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;

  if (a1)
  {
    result = a3(&v5, a1, a2 - a1);
    if (!v3)
      return (_QWORD *)v5;
  }
  else
  {
    result = a3((uint64_t *)((char *)&v5 + 4), 0, 0);
    if (!v3)
      return (_QWORD *)HIDWORD(v5);
  }
  return result;
}

uint64_t sub_1A57A79E8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;

  result = sub_1A5949BE8();
  v9 = result;
  if (result)
  {
    result = sub_1A5949C0C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_1A5949C00();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  v16 = sub_1A57A7994(v9, v15, a4);
  if (!v4)
    return v16;
  return v17;
}

uint64_t sub_1A57A7AA0(uint64_t a1)
{
  return sub_1A5796BD8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1A57A7AB4(uint64_t a1)
{
  void *(__cdecl *v2)(size_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt32 v7;
  int v8;
  Swift::UInt32 v9;

  v2 = ByteBufferAllocator.init()();
  v3 = *(_QWORD *)(a1 + 16);
  ByteBufferAllocator.buffer(capacity:)(v3, (uint64_t (*)(_QWORD))v2, v4, v5, v6);
  v9 = v7;
  ByteBuffer._setBytes(_:at:)(a1 + 32, a1 + 32 + v3, v7);
  if (__CFADD__(v9, v8))
    __break(1u);
}

uint64_t sub_1A57A7B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56[19];
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[10];
  unint64_t v60;
  uint64_t v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;

  v55 = a1;
  v3 = sub_1A594A0EC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v51 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v44 - v7;
  v9 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v53 = (uint64_t)&v44 - v16;
  v17 = sub_1A594B478();
  MEMORY[0x1E0C80A78](v17);
  v54 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A57A52BC(a2);
  sub_1A55032A0((uint64_t)&v57, (uint64_t)v59, &qword_1EE797120);
  v19 = v60;
  v20 = v63;
  if (v60 >= 0xFFFFFFFF00000000 && !(v63 >> 57))
  {
    sub_1A57A8674(a2, (uint64_t)v11);
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      v49 = *(_QWORD *)v11;
      v21 = *((unsigned int *)v11 + 2);
      v22 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796828);
      v23 = (uint64_t)&v11[*(int *)(v22 + 64)];
      v24 = (uint64_t *)&v11[*(int *)(v22 + 80)];
      v25 = v24[1];
      v52 = *v24;
      v26 = v53;
      sub_1A55032A0(v23, v53, &qword_1EE796468);
      v27 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v28 = sub_1A57AA1DC(v27);
      swift_bridgeObjectRelease();
      v56[0] = (uint64_t)v28;
      sub_1A57A64D0(v56);
      swift_bridgeObjectRelease();
      v29 = v56[0];
      sub_1A57A86B8(v26, (uint64_t)v14);
      v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v14, 1, v3);
      v50 = v21;
      if (v30 == 1)
      {
        v31 = 0;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v8, v14, v3);
        v39 = v51;
        (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v51, v8, v3);
        v31 = ServerMessageDate.init(_:)(v39);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
      }
      v40 = sub_1A57B388C(MEMORY[0x1E0DEE9D8]);
      AppendOptions.init(flagList:internalDate:extensions:)(v29, v31, v30 == 1, v40, v41, v42, (uint64_t)&v58);
      __asm { BR              X10 }
    }
    sub_1A55A90F4((uint64_t)v11);
    sub_1A594C9C0();
    __break(1u);
    swift_release();
    __break(1u);
    JUMPOUT(0x1A57A8654);
  }
  v32 = v59[0];
  v33 = v59[1];
  v34 = v59[2];
  v49 = v59[4];
  v50 = v59[3];
  v47 = v59[6];
  v48 = v59[5];
  v45 = v59[8];
  v46 = v59[7];
  v44 = v59[9];
  v51 = v62;
  v52 = v61;
  v53 = v64;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AEE8);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1A59ABD10;
  v56[0] = sub_1A57BE3B4(v55 & 0xFFFFFFFF000000FFLL);
  sub_1A594B460();
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796028);
  sub_1A579FA78();
  v36 = sub_1A594B430();
  v38 = v37;
  swift_bridgeObjectRelease();
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1A57A85F8);
  }
  v56[0] = v36;
  v56[1] = v38;
  v56[2] = v32;
  v56[3] = v33;
  v56[4] = v34;
  v56[5] = v50;
  v56[6] = v49;
  v56[7] = v48;
  v56[8] = v47;
  v56[9] = v46;
  v56[10] = v45;
  v56[11] = v44;
  v56[12] = v19;
  v56[13] = v52;
  v56[14] = (uint64_t)v51;
  v56[15] = v20;
  v56[16] = v53;
  sub_1A57187F4((uint64_t)v56);
  sub_1A567FF24(v56, (void *)(v35 + 32));
  return v35;
}

ValueMetadata *type metadata accessor for ClientCommandEncoder()
{
  return &type metadata for ClientCommandEncoder;
}

uint64_t sub_1A57A8674(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClientCommand(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A57A86B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A57A8700(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  switch(a8 >> 5)
  {
    case 0:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_5;
    case 1:
    case 3:
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_5:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 2:
    case 4:
      result = swift_retain();
      break;
    case 5:
      result = sub_1A5680328(result, a2, a3, SHIBYTE(a3));
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A57A87C0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796468);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A57A8800(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  int v6;

  if (a1)
    v5 = a1 + a2;
  else
    v5 = 0;
  ByteBuffer._setBytes(_:at:)(a1, v5, *(_DWORD *)(v3 + 24));
  *a3 = v6;
}

unint64_t sub_1A57A884C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7963E0;
  if (!qword_1EE7963E0)
  {
    v1 = sub_1A5949FFC();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CB02D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7963E0);
  }
  return result;
}

uint64_t sub_1A57A8894(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  int v16;

  v16 = HIBYTE(a16) & 2 | (a13 >> 63);
  switch(v16)
  {
    case 2:
      return swift_retain();
    case 1:
      return sub_1A57A8700(result, a2, a3, a4, a5, a6, a7, a8);
    case 0:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return sub_1A57A8A00(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
  }
  return result;
}

uint64_t sub_1A57A8A00(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  switch(a14 >> 58)
  {
    case 0uLL:
    case 2uLL:
    case 7uLL:
    case 8uLL:
    case 0x20uLL:
    case 0x24uLL:
      goto LABEL_10;
    case 1uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xDuLL:
    case 0x1BuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
      goto LABEL_19;
    case 3uLL:
      sub_1A56806D8(result, a2, a3, a4, a5, a6, a7, a8, a9);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A56667D4(a12, a13, a14, HIBYTE(a14) & 1);
      goto LABEL_19;
    case 4uLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A56667D4(a4, a5, a6, HIBYTE(a6) & 1);
      goto LABEL_19;
    case 5uLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return swift_retain();
    case 6uLL:
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_10:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_19;
    case 0xBuLL:
    case 0x1CuLL:
      swift_retain();
      goto LABEL_19;
    case 0xCuLL:
      goto LABEL_18;
    case 0xEuLL:
    case 0x12uLL:
    case 0x14uLL:
    case 0x15uLL:
      sub_1A5503BA0(result, a2);
      goto LABEL_19;
    case 0xFuLL:
    case 0x16uLL:
      sub_1A5503BA0(result, a2);
      goto LABEL_18;
    case 0x10uLL:
    case 0x18uLL:
      sub_1A5503BA0(result, a2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return OUTLINED_FUNCTION_266_0();
    case 0x11uLL:
    case 0x17uLL:
      sub_1A5799ADC(result);
      goto LABEL_18;
    case 0x13uLL:
      swift_retain();
      swift_retain();
      return swift_retain();
    case 0x19uLL:
      return sub_1A5503BA0(result, a2);
    case 0x1AuLL:
      return swift_retain();
    case 0x1DuLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_18:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_19;
    case 0x1EuLL:
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_19:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 0x1FuLL:
      sub_1A5799ADC(result);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      result = sub_1A56807D8(a5, a6, a7);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_1A57A8CEC(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16]);
  return a1;
}

uint64_t sub_1A57A8D48(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  int v16;

  v16 = HIBYTE(a16) & 2 | (a13 >> 63);
  switch(v16)
  {
    case 2:
      return swift_release();
    case 1:
      return sub_1A57A8EB4(result, a2, a3, a4, a5, a6, a7, a8);
    case 0:
      swift_bridgeObjectRelease();
      return sub_1A57A61CC(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
  }
  return result;
}

uint64_t sub_1A57A8EB4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  switch(a8 >> 5)
  {
    case 0:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_3;
    case 2:
    case 4:
LABEL_3:
      result = swift_release();
      break;
    case 5:
      result = sub_1A56801FC(result, a2, a3, SHIBYTE(a3));
      break;
    default:
      return result;
  }
  return result;
}

uint64_t Namespace.prefix.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

double (*Namespace.prefix.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t Namespace.separator.getter(uint64_t a1, uint64_t a2)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a2;
}

uint64_t Namespace.separator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

double (*Namespace.separator.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t Namespace.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  sub_1A594CE88();
  if (v3)
  {
    v4 = a2 + 32;
    do
    {
      ++v4;
      sub_1A594CE94();
      --v3;
    }
    while (v3);
  }
  return sub_1A594B1D8();
}

uint64_t static Namespace.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(a1, a4))
    return 0;
  if (a2 == a5 && a3 == a6)
    return 1;
  return sub_1A594CD38();
}

uint64_t Namespace.hashValue.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1A594CE64();
  v2 = *(_QWORD *)(a1 + 16);
  sub_1A594CE88();
  if (v2)
  {
    v3 = a1 + 32;
    do
    {
      ++v3;
      sub_1A594CE94();
      --v2;
    }
    while (v2);
  }
  sub_1A594B1D8();
  return sub_1A594CED0();
}

uint64_t sub_1A57A9188()
{
  uint64_t *v0;

  return Namespace.hashValue.getter(*v0);
}

uint64_t sub_1A57A9194()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  sub_1A594CE88();
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      ++v3;
      sub_1A594CE94();
      --v2;
    }
    while (v2);
  }
  return sub_1A594B1D8();
}

uint64_t sub_1A57A91FC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  sub_1A594CE64();
  v2 = *(_QWORD *)(v1 + 16);
  sub_1A594CE88();
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      ++v3;
      sub_1A594CE94();
      --v2;
    }
    while (v2);
  }
  sub_1A594B1D8();
  return sub_1A594CED0();
}

uint64_t sub_1A57A9280(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a2[1];
  v5 = a2[2];
  if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*a1, *a2))
    return 0;
  if (v2 == v4 && v3 == v5)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t Namespace.init(_:)(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[16];
  _QWORD v10[2];

  sub_1A57A93BC(a1 + 24, (uint64_t)v9);
  sub_1A57A93BC((uint64_t)v9, (uint64_t)v10);
  if (v10[1])
  {
    v2 = *(_QWORD *)(a1 + 8);
    v3 = *(unsigned int *)(a1 + 16);
    v4 = *(unsigned __int16 *)(a1 + 20);
    v5 = *(unsigned __int8 *)(a1 + 22);
    sub_1A5524B84((uint64_t)v9);
    v6 = swift_retain();
    v7 = MailboxName.init(_:)(v6, v2, v3 | (v4 << 32) | (v5 << 48));
    sub_1A5666480(a1);
  }
  else
  {
    sub_1A5666480(a1);
    return 0;
  }
  return v7;
}

uint64_t sub_1A57A93BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL Namespace.hasPrefix.getter(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) != 0;
}

BOOL Namespace.contains(_:)(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t *v6;

  if ((sub_1A57A9480(a3, a1) & 1) != 0)
    return 1;
  v6 = MailboxName.inbox.unsafeMutableAddressor();
  return (a2 | ((unint64_t)a2 << 32)) == (*((unsigned int *)v6 + 2) | ((unint64_t)*((unsigned int *)v6 + 2) << 32))
      && sub_1A578ECF4(a1, *v6);
}

uint64_t sub_1A57A9480(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  int v8;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(result + 16);
    if (!v3)
      return 1;
    if (*(unsigned __int8 *)(a2 + 32) != *(unsigned __int8 *)(result + 32))
      return 0;
    v4 = 0;
    v5 = result + 33;
    v6 = v3 - 1;
    while (v2 - 1 != v4)
    {
      result = v6 == v4;
      if (v6 != v4)
      {
        v7 = *(unsigned __int8 *)(a2 + 33 + v4);
        v8 = *(unsigned __int8 *)(v5 + v4++);
        if (v7 == v8)
          continue;
      }
      return result;
    }
  }
  else
  {
    v3 = *(_QWORD *)(result + 16);
  }
  if (v2 == v3)
    return 1;
  if (v2 < v3)
    return 0;
  __break(1u);
  return result;
}

uint64_t Namespace.addPrefix(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5796140(v3);
  return MailboxName.init(_:)(a3);
}

uint64_t Namespace.addPrefix(to:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;

  v9 = HIDWORD(a2);
  v10 = sub_1A5566034(BYTE4(a2));
  if (!v11)
    goto LABEL_9;
  if (v10 == a4 && v11 == a5)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v12 = sub_1A594CD38();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_9:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return a1;
  }
LABEL_6:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v13 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5796140(v13);
  a1 = MailboxName.init(_:)(a3);
  sub_1A5566034(v9);
  if (!v14)
    return a1;
  if ((sub_1A594B19C() & 0x100) == 0)
  {
    sub_1A594B19C();
    swift_bridgeObjectRelease();
    return a1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A57AA63C();
  swift_allocError();
  *v16 = 0xD000000000000029;
  v16[1] = 0x80000001A5A0F4D0;
  swift_willThrow();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t Namespace.removePrefix(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  if ((sub_1A57A9480(a3, a1) & 1) != 0)
  {
    v5 = sub_1A55360CC(*(_QWORD *)(a3 + 16), v4);
    v7 = v6;
    v9 = v8;
    v11 = v10;
    if ((v10 & 1) != 0)
    {
      sub_1A594CD68();
      swift_unknownObjectRetain_n();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v13 = swift_dynamicCastClass();
      if (!v13)
      {
        swift_unknownObjectRelease();
        v13 = MEMORY[0x1E0DEE9D8];
      }
      v14 = *(_QWORD *)(v13 + 16);
      swift_release();
      if (__OFSUB__(v11 >> 1, v9))
      {
        __break(1u);
      }
      else if (v14 == (v11 >> 1) - v9)
      {
        v12 = swift_dynamicCastClass();
        if (!v12)
        {
          swift_unknownObjectRelease();
          v12 = MEMORY[0x1E0DEE9D8];
        }
        goto LABEL_12;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    v12 = sub_1A57AA2C0(v5, v7, v9, v11);
LABEL_12:
    swift_unknownObjectRelease();
    return MailboxName.init(_:)(v12);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v4;
}

uint64_t Namespace.removePrefix(_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD *v25;

  v9 = HIDWORD(a2);
  v10 = sub_1A5566034(BYTE4(a2));
  if (!v11)
    goto LABEL_10;
  if (v10 == a4 && v11 == a5)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v12 = sub_1A594CD38();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_10:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return a1;
  }
LABEL_6:
  if ((sub_1A57A9480(a3, a1) & 1) == 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_19;
  }
  v13 = sub_1A55360CC(*(_QWORD *)(a3 + 16), a1);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  if ((v18 & 1) != 0)
  {
    sub_1A594CD68();
    swift_unknownObjectRetain_n();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v21 = swift_dynamicCastClass();
    if (!v21)
    {
      swift_unknownObjectRelease();
      v21 = MEMORY[0x1E0DEE9D8];
    }
    v22 = *(_QWORD *)(v21 + 16);
    swift_release();
    if (__OFSUB__(v19 >> 1, v17))
    {
      __break(1u);
    }
    else if (v22 == (v19 >> 1) - v17)
    {
      v20 = swift_dynamicCastClass();
      if (!v20)
      {
        swift_unknownObjectRelease();
        v20 = MEMORY[0x1E0DEE9D8];
      }
      goto LABEL_18;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v20 = sub_1A57AA2C0(v13, v15, v17, v19);
LABEL_18:
  swift_unknownObjectRelease();
  a1 = MailboxName.init(_:)(v20);
LABEL_19:
  sub_1A5566034(v9);
  if (!v23)
    return a1;
  if ((sub_1A594B19C() & 0x100) == 0)
  {
    sub_1A594B19C();
    swift_bridgeObjectRelease();
    return a1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A57AA63C();
  swift_allocError();
  *v25 = 0xD000000000000029;
  v25[1] = 0x80000001A5A0F4D0;
  swift_willThrow();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t Namespace.isNotes(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;

  v4 = a1;
  if ((sub_1A57A9480(a3, a1) & 1) == 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_13;
  }
  v5 = sub_1A55360CC(*(_QWORD *)(a3 + 16), v4);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  if ((v10 & 1) != 0)
  {
    sub_1A594CD68();
    swift_unknownObjectRetain_n();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v13 = swift_dynamicCastClass();
    if (!v13)
    {
      swift_unknownObjectRelease();
      v13 = MEMORY[0x1E0DEE9D8];
    }
    v14 = *(_QWORD *)(v13 + 16);
    swift_release();
    if (__OFSUB__(v11 >> 1, v9))
    {
      __break(1u);
    }
    else if (v14 == (v11 >> 1) - v9)
    {
      v12 = swift_dynamicCastClass();
      if (!v12)
      {
        swift_unknownObjectRelease();
        v12 = MEMORY[0x1E0DEE9D8];
      }
      goto LABEL_12;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v12 = sub_1A57AA2C0(v5, v7, v9, v11);
LABEL_12:
  swift_unknownObjectRelease();
  v4 = MailboxName.init(_:)(v12);
LABEL_13:
  if ((sub_1A57A9E74(0x7365746F4EuLL, 0xE500000000000000, v4) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    sub_1A594B5F8();
    sub_1A57AA0A4(5, v4);
    v19 = sub_1A57AA680(0x7365746F4EuLL, 0xE500000000000000, v16, v17, v18);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v19 & 1;
  }
}

uint64_t sub_1A57A9CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a4 + 16);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = a4 + 32;
  swift_retain();
  swift_retain();
  swift_retain();
  result = swift_retain();
  v9 = 0;
  v10 = (uint64_t *)(a2 + 40);
  while (v9 == v5)
  {
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v9 = v5;
    if (!v6)
      goto LABEL_19;
LABEL_10:
    v16 = *(v10 - 1);
    v14 = *v10;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v12)
      goto LABEL_19;
    if (!v14)
      goto LABEL_16;
    if (v13 == v16 && v12 == v14)
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v11 = sub_1A594CD38();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return 0;
      }
    }
    --v6;
    v10 += 2;
  }
  if (v9 >= v5)
  {
    __break(1u);
    return result;
  }
  v15 = (uint64_t *)(v7 + 16 * v9);
  v13 = *v15;
  v12 = v15[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v6)
  {
    ++v9;
    goto LABEL_10;
  }
  if (v12)
  {
LABEL_16:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_20;
  }
  v14 = 0;
LABEL_19:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (v14)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

unint64_t sub_1A57A9E74(unint64_t result, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  _BOOL8 v15;
  unsigned __int8 v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v26[2];

  v4 = result;
  v5 = 0;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v7 = result & 0xFFFFFFFFFFFFLL;
  v23 = a3 + 32;
  v24 = result;
  v25 = v7;
  v8 = 4 * v7;
  v9 = (result >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0)
    LOBYTE(v9) = 1;
  v10 = 4 << v9;
  v19 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v20 = a2 & 0xFFFFFFFFFFFFFFLL;
  v11 = 15;
  v21 = 4 << v9;
  v22 = v8;
  while (1)
  {
    if (v5 == v6)
    {
      v12 = 0;
      v13 = v6;
      goto LABEL_10;
    }
    if (v5 >= v6)
      break;
    v12 = *(unsigned __int8 *)(v23 + v5);
    v13 = v5 + 1;
LABEL_10:
    v14 = v11 >> 14;
    v15 = v11 >> 14 == v8;
    if (v11 >> 14 == v8)
    {
      v16 = 0;
      if (v5 == v6)
        return v15;
      goto LABEL_30;
    }
    v17 = v11 & 0xC;
    result = v11;
    if (v17 == v10)
    {
      result = sub_1A55796A4(v11, v24, a2);
      v10 = v21;
      v4 = v24;
    }
    v18 = result >> 16;
    if (result >> 16 >= v25)
      goto LABEL_34;
    if ((a2 & 0x1000000000000000) != 0)
    {
      result = sub_1A594B670();
      v10 = v21;
      v4 = v24;
      v16 = result;
      if (v17 == v21)
        goto LABEL_27;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v26[0] = v4;
      v26[1] = v20;
      v16 = *((_BYTE *)v26 + v18);
      if (v17 == v10)
        goto LABEL_27;
    }
    else
    {
      result = v19;
      if ((v4 & 0x1000000000000000) == 0)
      {
        result = sub_1A594C7D4();
        v10 = v21;
        v4 = v24;
      }
      v16 = *(_BYTE *)(result + v18);
      if (v17 == v10)
      {
LABEL_27:
        result = sub_1A55796A4(v11, v24, a2);
        v10 = v21;
        v4 = v24;
        v11 = result;
        v8 = v22;
        if ((a2 & 0x1000000000000000) == 0)
        {
LABEL_24:
          v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
          if (v5 == v6)
            return v15;
          goto LABEL_30;
        }
        goto LABEL_28;
      }
    }
    v8 = v22;
    if ((a2 & 0x1000000000000000) == 0)
      goto LABEL_24;
LABEL_28:
    if (v25 <= v11 >> 16)
      goto LABEL_35;
    result = sub_1A594B64C();
    v10 = v21;
    v4 = v24;
    v11 = result;
    if (v5 == v6)
      return v15;
LABEL_30:
    v15 = 0;
    if (v14 != v8)
    {
      v5 = v13;
      if (v12 == v16)
        continue;
    }
    return v15;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

int64_t sub_1A57AA0A4(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (!result)
      v3 = 0;
    if (v2 >= v3)
      return a2;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A57AA0E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA498);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size_0(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  v5 = sub_1A57AA418((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550F72C();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1A57AA1DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF58);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size_0(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1A550D8B0((uint64_t)&v8, v3 + 4, v1, a1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550F72C();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1A57AA2C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  int64_t v5;
  _QWORD *v8;
  size_t v9;
  void *v10;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0)
          goto LABEL_17;
        v10 = v8 + 4;
        if (a2 + a3 < (unint64_t)v8 + v5 + 32 && (unint64_t)v10 < a2 + a3 + v5)
          goto LABEL_17;
        memcpy(v10, (const void *)(a2 + a3), v5);
        return (uint64_t)v8;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B358);
      v8 = (_QWORD *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size_0(v8);
      v8[2] = v5;
      v8[3] = 2 * v9 - 64;
      if (v4 != a3)
        goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A57AA418(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  int v21;
  __int16 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v25 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 24 * v16;
    v21 = *(_DWORD *)(v20 + 16);
    v22 = *(_WORD *)(v20 + 20);
    v23 = *(_BYTE *)(v20 + 22);
    v24 = *(_QWORD *)(v20 + 8);
    *(_QWORD *)v11 = *(_QWORD *)v20;
    *(_QWORD *)(v11 + 8) = v24;
    *(_DWORD *)(v11 + 16) = v21;
    *(_WORD *)(v11 + 20) = v22;
    *(_BYTE *)(v11 + 22) = v23;
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    v11 += 24;
    result = swift_retain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v25;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

unint64_t sub_1A57AA63C()
{
  unint64_t result;

  result = qword_1EE7AA488;
  if (!qword_1EE7AA488)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for InvalidPathSeparatorError, &type metadata for InvalidPathSeparatorError);
    atomic_store(result, (unint64_t *)&qword_1EE7AA488);
  }
  return result;
}

unint64_t sub_1A57AA680(unint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  _BOOL8 v17;
  unsigned __int8 v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v27;
  unint64_t v28;
  _QWORD v29[2];

  v5 = a4;
  v7 = result;
  v8 = a5 >> 1;
  v9 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v9 = result & 0xFFFFFFFFFFFFLL;
  v27 = result;
  v28 = v9;
  v10 = 4 * v9;
  v11 = (result >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0)
    LOBYTE(v11) = 1;
  v12 = 4 << v11;
  v21 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a2 & 0xFFFFFFFFFFFFFFLL;
  v13 = 15;
  v23 = 4 << v11;
  v24 = v10;
  while (1)
  {
    if (v5 == v8)
    {
      v14 = 0;
      v15 = v8;
      goto LABEL_11;
    }
    if (v5 < a4 || v5 >= v8)
      break;
    v14 = *(unsigned __int8 *)(a3 + v5);
    v15 = v5 + 1;
LABEL_11:
    v16 = v13 >> 14;
    v17 = v13 >> 14 == v10;
    if (v13 >> 14 == v10)
    {
      v18 = 0;
      if (v5 == v8)
        return v17;
      goto LABEL_31;
    }
    v19 = v13 & 0xC;
    result = v13;
    if (v19 == v12)
    {
      result = sub_1A55796A4(v13, v27, a2);
      v12 = v23;
      v7 = v27;
    }
    v20 = result >> 16;
    if (result >> 16 >= v28)
      goto LABEL_35;
    if ((a2 & 0x1000000000000000) != 0)
    {
      result = sub_1A594B670();
      v12 = v23;
      v7 = v27;
      v18 = result;
      if (v19 == v23)
        goto LABEL_28;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v29[0] = v7;
      v29[1] = v22;
      v18 = *((_BYTE *)v29 + v20);
      if (v19 == v12)
        goto LABEL_28;
    }
    else
    {
      result = v21;
      if ((v7 & 0x1000000000000000) == 0)
      {
        result = sub_1A594C7D4();
        v12 = v23;
        v7 = v27;
      }
      v18 = *(_BYTE *)(result + v20);
      if (v19 == v12)
      {
LABEL_28:
        result = sub_1A55796A4(v13, v27, a2);
        v12 = v23;
        v7 = v27;
        v13 = result;
        v10 = v24;
        if ((a2 & 0x1000000000000000) == 0)
        {
LABEL_25:
          v13 = (v13 & 0xFFFFFFFFFFFF0000) + 65540;
          if (v5 == v8)
            return v17;
          goto LABEL_31;
        }
        goto LABEL_29;
      }
    }
    v10 = v24;
    if ((a2 & 0x1000000000000000) == 0)
      goto LABEL_25;
LABEL_29:
    if (v28 <= v13 >> 16)
      goto LABEL_36;
    result = sub_1A594B64C();
    v12 = v23;
    v7 = v27;
    v13 = result;
    if (v5 == v8)
      return v17;
LABEL_31:
    v17 = 0;
    if (v16 != v10)
    {
      v5 = v15;
      if (v14 == v18)
        continue;
    }
    return v17;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_1A57AA8C4()
{
  unint64_t result;

  result = qword_1EE7AA490;
  if (!qword_1EE7AA490)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Namespace, &type metadata for Namespace);
    atomic_store(result, (unint64_t *)&qword_1EE7AA490);
  }
  return result;
}

_QWORD *sub_1A57AA90C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for Namespace(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8_3(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for Namespace(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Namespace()
{
  return &type metadata for Namespace;
}

uint64_t sub_1A57AAA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *i;
  BOOL v10;

  swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 32);
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
    return 0;
  for (i = (_QWORD *)(v7 + 48); ; i += 3)
  {
    if (*i && *(i - 2) == a1)
    {
      v10 = *(i - 1) == a2 && *i == a3;
      if (v10 || (sub_1A594CD38() & 1) != 0)
        break;
    }
    if (!--v8)
      return 0;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A57AAAF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::UInt64 v3;
  uint64_t *v7;
  Swift::UInt64 v8;
  _QWORD *v9;
  uint64_t result;
  _QWORD *v11;

  v7 = (uint64_t *)(v3 + 32);
  swift_beginAccess();
  v8 = *(_QWORD *)(*(_QWORD *)(v3 + 32) + 16);
  v9 = (_QWORD *)(v3 + 16);
  swift_beginAccess();
  if (v8)
  {
    v3 = sub_1A57AAD64(v8);
    swift_endAccess();
    swift_beginAccess();
    v9 = (_QWORD *)*v7;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v7 = (uint64_t)v9;
    if ((result & 1) != 0)
    {
      if ((v3 & 0x8000000000000000) == 0)
        goto LABEL_4;
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  result = (uint64_t)sub_1A579E138(v9);
  v9 = (_QWORD *)result;
  *v7 = result;
  if ((v3 & 0x8000000000000000) != 0)
    goto LABEL_8;
LABEL_4:
  if (v3 < v9[2])
  {
    v11 = &v9[3 * v3];
    v11[4] = a1;
    v11[5] = a2;
    v11[6] = a3;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1A57AAC14()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ParsedStringCache()
{
  return objc_opt_self();
}

uint64_t initializeBufferWithCopyOfBuffer for ParsedStringCache.Element(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for ParsedStringCache.Element(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ParsedStringCache.Element(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ParsedStringCache.Element()
{
  return &type metadata for ParsedStringCache.Element;
}

uint64_t sub_1A57AAD1C(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != *a2)
    return 0;
  if (a1[1] == a2[1] && a1[2] == a2[2])
    return 1;
  else
    return sub_1A594CD38();
}

Swift::UInt64 sub_1A57AAD64(Swift::UInt64 result)
{
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;

  if (result)
  {
    v1 = result;
    v2 = PCG32Random.next()();
    v3 = v2 * v1;
    result = (v2 * (unsigned __int128)v1) >> 64;
    if (v3 < v1)
    {
      v4 = -(uint64_t)v1 % v1;
      if (v4 > v3)
      {
        do
          v5 = PCG32Random.next()();
        while (v4 > v5 * v1);
        return (v5 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PushRegistrationInfo.init(apsVersion:accountID:deviceToken:subtopic:mailboxes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(_DWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  return result;
}

uint64_t PushRegistrationInfo.apsVersion.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t PushRegistrationInfo.apsVersion.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*PushRegistrationInfo.apsVersion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t PushRegistrationInfo.accountID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t PushRegistrationInfo.accountID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

double (*PushRegistrationInfo.accountID.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t PushRegistrationInfo.deviceToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t PushRegistrationInfo.deviceToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

double (*PushRegistrationInfo.deviceToken.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t PushRegistrationInfo.subtopic.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t PushRegistrationInfo.subtopic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

double (*PushRegistrationInfo.subtopic.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t PushRegistrationInfo.mailboxes.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t PushRegistrationInfo.mailboxes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

double (*PushRegistrationInfo.mailboxes.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t PushRegistrationInfo.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1A594CEAC();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 + 16);
  result = sub_1A594CE88();
  if (v2)
  {
    v4 = v1 + 40;
    do
    {
      v4 += 16;
      result = sub_1A594CE88();
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t PushRegistrationInfo.hashValue.getter()
{
  sub_1A594CE64();
  PushRegistrationInfo.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A57AB0A0()
{
  sub_1A594CE64();
  PushRegistrationInfo.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A57AB0E0()
{
  sub_1A594CE64();
  PushRegistrationInfo.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A57AB118(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return _s13IMAP2Protocol20PushRegistrationInfoV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t PushRegistrationResponse.apsVersion.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*PushRegistrationResponse.apsVersion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t PushRegistrationResponse.topic.getter(uint64_t a1, uint64_t a2)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a2;
}

uint64_t PushRegistrationResponse.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

double (*PushRegistrationResponse.topic.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t PushRegistrationResponse.mailboxes.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t PushRegistrationResponse.mailboxes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

double (*PushRegistrationResponse.mailboxes.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static PushRegistrationResponse.__derived_struct_equals(_:_:)(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == a5 && (a2 == a6 && a3 == a7 || (sub_1A594CD38() & 1) != 0))
    return sub_1A5793830(a4, a8);
  else
    return 0;
}

uint64_t sub_1A57AB2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && ((v2 = *(_QWORD *)(a1 + 24), v3 = *(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
      ? (v4 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
      : (v4 = 0),
        v4 || (sub_1A594CD38() & 1) != 0))
  {
    return sub_1A5793830(v2, v3);
  }
  else
  {
    return 0;
  }
}

uint64_t _s13IMAP2Protocol20PushRegistrationInfoV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  BOOL v5;

  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) ? (v4 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)) : (v4 = 0),
        (v4 || (sub_1A594CD38() & 1) != 0)
     && (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) ? (v5 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32)) : (v5 = 0),
         (v5 || (sub_1A594CD38() & 1) != 0)
      && (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48)
       || (sub_1A594CD38() & 1) != 0))))
  {
    return sub_1A5793830(*(_QWORD *)(a1 + 56), *(_QWORD *)(a2 + 56));
  }
  else
  {
    return 0;
  }
}

unint64_t sub_1A57AB3C4()
{
  unint64_t result;

  result = qword_1EE7AA4A0;
  if (!qword_1EE7AA4A0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for PushRegistrationInfo, &type metadata for PushRegistrationInfo);
    atomic_store(result, (unint64_t *)&qword_1EE7AA4A0);
  }
  return result;
}

uint64_t destroy for PushRegistrationInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PushRegistrationInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for PushRegistrationInfo(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8_2(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PushRegistrationInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PushRegistrationInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushRegistrationInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PushRegistrationInfo()
{
  return &type metadata for PushRegistrationInfo;
}

uint64_t destroy for PushRegistrationResponse()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PushRegistrationResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for PushRegistrationResponse(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8_3(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for PushRegistrationResponse(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PushRegistrationResponse()
{
  return &type metadata for PushRegistrationResponse;
}

uint64_t sub_1A57AB7C0(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (!v7)
    {
      v10 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v10 >= v8)
        return 1;
      v7 = *(_QWORD *)(v4 + 8 * v10);
      ++v3;
      if (!v7)
      {
        v3 = v10 + 1;
        if (v10 + 1 >= v8)
          return 1;
        v7 = *(_QWORD *)(v4 + 8 * v3);
        if (!v7)
        {
          v3 = v10 + 2;
          if (v10 + 2 >= v8)
            return 1;
          v7 = *(_QWORD *)(v4 + 8 * v3);
          if (!v7)
          {
            v3 = v10 + 3;
            if (v10 + 3 >= v8)
              return 1;
            v7 = *(_QWORD *)(v4 + 8 * v3);
            if (!v7)
              break;
          }
        }
      }
    }
LABEL_8:
    v7 &= v7 - 1;
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v9 = result & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      return 0;
  }
  v11 = v10 + 4;
  if (v11 >= v8)
    return 1;
  v7 = *(_QWORD *)(v4 + 8 * v11);
  if (v7)
  {
    v3 = v11;
    goto LABEL_8;
  }
  while (1)
  {
    v3 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v3 >= v8)
      return 1;
    v7 = *(_QWORD *)(v4 + 8 * v3);
    ++v11;
    if (v7)
      goto LABEL_8;
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_1A57AB940(unint64_t a1, unint64_t a2)
{
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  _BOOL4 v14;
  unsigned int v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = a1;
  v4 = sub_1A57AE2D4(a1, a2);
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return v5;
  v6 = v4;
  v29 = MEMORY[0x1E0DEE9D8];
  result = sub_1A57962A0(0, v4 & ~(v4 >> 63), 0);
  if (v6 < 0)
    goto LABEL_61;
  v8 = (v3 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((a2 & 0x2000000000000000) != 0)
    v10 = HIBYTE(a2) & 0xF;
  else
    v10 = v3 & 0xFFFFFFFFFFFFLL;
  v11 = 15;
  v25 = 4 << v8;
  v26 = v3;
  v24 = v10;
  while (1)
  {
    v12 = v11 & 0xC;
    v13 = (v11 & 1) == 0 || v12 == v9;
    v14 = v13;
    if (v13)
      break;
    result = v11;
    if (v11 >> 16 >= v10)
      goto LABEL_58;
LABEL_24:
    if ((a2 & 0x1000000000000000) != 0)
    {
      v15 = sub_1A594C714();
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        v27 = v3;
        v28 = a2 & 0xFFFFFFFFFFFFFFLL;
      }
      else if ((v3 & 0x1000000000000000) == 0)
      {
        sub_1A594C7D4();
      }
      v15 = sub_1A594C7E0();
    }
    if (v15 >= 0x20)
      v16 = v15;
    else
      v16 = v15 + 9216;
    v5 = v29;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1A57962A0(0, *(_QWORD *)(v5 + 16) + 1, 1);
      v5 = v29;
    }
    v18 = *(_QWORD *)(v5 + 16);
    v17 = *(_QWORD *)(v5 + 24);
    if (v18 >= v17 >> 1)
    {
      result = sub_1A57962A0(v17 > 1, v18 + 1, 1);
      v5 = v29;
    }
    *(_QWORD *)(v5 + 16) = v18 + 1;
    *(_DWORD *)(v5 + 4 * v18 + 32) = v16;
    if (v14)
    {
      v9 = v25;
      v3 = v26;
      v10 = v24;
      if (v12 == v25)
      {
        result = sub_1A55796A4(v11, v26, a2);
        v11 = result;
        if (v24 <= result >> 16)
          goto LABEL_60;
      }
      else if (v24 <= v11 >> 16)
      {
        goto LABEL_60;
      }
      if ((v11 & 1) == 0)
        v11 = v11 & 0xC | sub_1A57A7884(v11, v26, a2) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
    else
    {
      v10 = v24;
      v9 = v25;
      v3 = v26;
      if (v24 <= v11 >> 16)
        goto LABEL_59;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      v11 = sub_1A594B4FC();
      if (!--v6)
        return v5;
    }
    else
    {
      v19 = v11 >> 16;
      if ((a2 & 0x2000000000000000) != 0)
      {
        v27 = v3;
        v28 = a2 & 0xFFFFFFFFFFFFFFLL;
        v21 = *((unsigned __int8 *)&v27 + v19);
      }
      else
      {
        v20 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((v3 & 0x1000000000000000) == 0)
          v20 = sub_1A594C7D4();
        v21 = *(unsigned __int8 *)(v20 + v19);
      }
      v22 = (char)v21;
      v23 = __clz(v21 ^ 0xFF) - 24;
      if (v22 >= 0)
        LOBYTE(v23) = 1;
      v11 = ((v19 + v23) << 16) | 5;
      if (!--v6)
        return v5;
    }
  }
  result = v11;
  if (v12 == v9)
    result = sub_1A55796A4(v11, v3, a2);
  if (result >> 16 < v10)
  {
    if ((result & 1) == 0)
      sub_1A57A7884(result, v3, a2);
    goto LABEL_24;
  }
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

Swift::String __swiftcall UntaggedResponse.makeDescriptionWithoutPII()()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  Swift::String result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1A57ABD78();
  __swift_project_boxed_opaque_existential_1_0(&v10, v12);
  static Response.descriptionWithoutPII<A>(_:)();
  v1 = v0;
  v3 = v2;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  v4 = sub_1A594B5A4();
  v10 = 0;
  v11 = 0xE000000000000000;
  MEMORY[0x1A85AD98C](v4);
  v5 = v10;
  v6 = v11;
  sub_1A57AB940(v1, v3);
  swift_bridgeObjectRelease();
  v10 = v5;
  v11 = v6;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799DF0);
  sub_1A54E2E30((unint64_t *)&unk_1EE799E00, &qword_1EE799DF0, MEMORY[0x1E0DEAF38]);
  sub_1A594B520();
  swift_bridgeObjectRelease();
  v7 = v10;
  v8 = (void *)v11;
  result._object = v8;
  result._countAndFlagsBits = v7;
  return result;
}

uint64_t sub_1A57ABD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A57AE1E4(a1, a2, a3, a4, (void (*)(uint64_t, _BYTE *))sub_1A57AF02C, (uint64_t (*)(_BYTE *, _BYTE *))_s13IMAP2Protocol16UntaggedResponseO21__derived_enum_equalsySbAC_ACtFZ_0);
}

void sub_1A57ABD78()
{
  void *v0;
  char *v1;
  _BYTE __dst[584];
  _BYTE v3[584];
  _BYTE v4[584];

  sub_1A57AF02C(v0, __dst);
  sub_1A57AF02C(__dst, v4);
  sub_1A57AF02C(v0, v3);
  v1 = (char *)sub_1A57ABDF0 + 4 * word_1A59B9CA0[sub_1A5523B90((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_1A57ABDF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _OWORD v17[80];

  v3 = sub_1A5524678((uint64_t)&v16);
  v4 = *(_QWORD *)(v3 + 16);
  v13 = *(_OWORD *)v3;
  v12 = v13;
  v14 = v4;
  v15 = 0;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  sub_1A5773890((uint64_t)&v13);
  v0[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA4C0);
  v0[4] = sub_1A54E2E30(&qword_1EE7AA4C8, &qword_1EE7AA4C0, MEMORY[0x1E0DEC648]);
  v5 = swift_allocObject();
  *v0 = v5;
  sub_1A5715EC4(&v13, v17);
  v6 = v17[9];
  *(_OWORD *)(v5 + 144) = v17[8];
  *(_OWORD *)(v5 + 160) = v6;
  *(_OWORD *)(v5 + 176) = v17[10];
  *(_DWORD *)(v5 + 191) = *(_DWORD *)(v2 + 175);
  v7 = v17[5];
  *(_OWORD *)(v5 + 80) = v17[4];
  *(_OWORD *)(v5 + 96) = v7;
  v8 = v17[7];
  *(_OWORD *)(v5 + 112) = v17[6];
  *(_OWORD *)(v5 + 128) = v8;
  v9 = v17[1];
  *(_OWORD *)(v5 + 16) = v17[0];
  *(_OWORD *)(v5 + 32) = v9;
  v10 = v17[3];
  *(_OWORD *)(v5 + 48) = v17[2];
  *(_OWORD *)(v5 + 64) = v10;
  sub_1A579F800(v12);
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

_QWORD *sub_1A57ACCB8(int a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  int v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  _QWORD *v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  _QWORD v104[2];
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  _QWORD *v131;
  _BYTE v132[184];
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int16 v144;
  _QWORD v145[2];
  int v146;
  __int16 v147;
  char v148;
  _BYTE v149[184];
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int16 v161;
  _BYTE v162[184];
  _BYTE v163[184];
  _BYTE v164[184];
  _BYTE v165[184];
  _BYTE v166[184];
  uint64_t v167;
  _BYTE v168[16];
  char v169[8];
  char v170[8];
  _BYTE v171[16];
  uint64_t v172;
  char v173;
  unsigned int v174;
  char v175;
  int v176;
  char v177;
  uint64_t v178;
  char v179;

  v2 = v1;
  v4 = sub_1A594AE60();
  v121 = *(_QWORD *)(v4 - 8);
  v122 = v4;
  MEMORY[0x1E0C80A78](v4);
  v120 = (char *)v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D50);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MessageData.BodyData();
  v126 = *(_QWORD *)(v9 - 8);
  v127 = v9;
  MEMORY[0x1E0C80A78](v9);
  v119 = (uint64_t)v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v130 = (uint64_t)v104 - v12;
  v125 = type metadata accessor for MessageData.BodySection();
  v13 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v128 = (uint64_t)v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = v8;
  v15 = v1[54];
  v118 = v1;
  if (!v15)
  {
    v35 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!v1[64])
      goto LABEL_12;
    goto LABEL_7;
  }
  v111 = a1;
  v112 = v13;
  v16 = v15;
  v17 = v1[50];
  v124 = v1[49];
  v19 = v1[51];
  v18 = v1[52];
  v114 = v17;
  v115 = v18;
  v110 = v1[53];
  v21 = v1[55];
  v20 = v1[56];
  v22 = v1[57];
  v23 = v2[58];
  v25 = v2[59];
  v24 = v2[60];
  v26 = v2[61];
  v106 = v2[62];
  v107 = v24;
  v27 = v2[63];
  swift_bridgeObjectRetain_n();
  v113 = v19;
  swift_retain_n();
  v117 = v16;
  swift_bridgeObjectRetain_n();
  v28 = v21;
  swift_bridgeObjectRetain_n();
  v123 = v20;
  swift_bridgeObjectRetain_n();
  v116 = v22;
  swift_bridgeObjectRetain_n();
  v109 = v23;
  swift_bridgeObjectRetain_n();
  v108 = v25;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v29 = sub_1A57B2558(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v31 = v29[2];
  v30 = v29[3];
  v131 = v29;
  v105 = v31 + 1;
  if (v31 >= v30 >> 1)
    v131 = sub_1A57B2558((_QWORD *)(v30 > 1), v31 + 1, 1, v131);
  *(_QWORD *)&v133 = v124;
  *((_QWORD *)&v133 + 1) = v114;
  *(_QWORD *)&v134 = v113;
  *((_QWORD *)&v134 + 1) = v115;
  v32 = v110;
  BYTE6(v135) = BYTE6(v110);
  WORD2(v135) = WORD2(v110);
  LODWORD(v135) = v110;
  *((_QWORD *)&v135 + 1) = v117;
  *(_QWORD *)&v136 = v28;
  v104[1] = v28;
  *((_QWORD *)&v136 + 1) = v123;
  *(_QWORD *)&v137 = v116;
  *((_QWORD *)&v137 + 1) = v109;
  *(_QWORD *)&v138 = v108;
  *((_QWORD *)&v138 + 1) = v107;
  *(_QWORD *)&v139 = v26;
  *((_QWORD *)&v139 + 1) = v106;
  *(_QWORD *)&v140 = v27;
  sub_1A5732714((uint64_t)&v133);
  sub_1A57B18C8(&v133, v149);
  sub_1A572B494((uint64_t)v149);
  sub_1A57B1194(v149, v166);
  sub_1A5773950((uint64_t)v166);
  v33 = v131;
  v131[2] = v105;
  v34 = &v33[23 * v31];
  v35 = v33;
  sub_1A5715EC4(v166, v34 + 4);
  sub_1A55245C0(v124, v114, v113, v115, v32, v117);
  v2 = v118;
  v8 = v129;
  v13 = v112;
  LOBYTE(a1) = v111;
  if (v118[64])
  {
LABEL_7:
    v36 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v37 = sub_1A57AA1DC(v36);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_1A57B2558(0, v35[2] + 1, 1, v35);
    v39 = v35[2];
    v38 = v35[3];
    if (v39 >= v38 >> 1)
      v35 = sub_1A57B2558((_QWORD *)(v38 > 1), v39 + 1, 1, v35);
    *(_QWORD *)&v133 = v37;
    sub_1A5732728((uint64_t)&v133);
    sub_1A57B18C8(&v133, v149);
    sub_1A572B494((uint64_t)v149);
    sub_1A57B1194(v149, v166);
    sub_1A5773950((uint64_t)v166);
    v35[2] = v39 + 1;
    sub_1A5715EC4(v166, &v35[23 * v39 + 4]);
  }
LABEL_12:
  if (v2[65])
  {
    v40 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v41 = sub_1A57AA0E8(v40);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_1A57B2558(0, v35[2] + 1, 1, v35);
    v43 = v35[2];
    v42 = v35[3];
    if (v43 >= v42 >> 1)
      v35 = sub_1A57B2558((_QWORD *)(v42 > 1), v43 + 1, 1, v35);
    *(_QWORD *)&v133 = v41;
    sub_1A5732628((uint64_t)&v133);
    sub_1A57B18C8(&v133, v149);
    sub_1A572B494((uint64_t)v149);
    sub_1A57B1194(v149, v166);
    sub_1A5773950((uint64_t)v166);
    v35[2] = v43 + 1;
    sub_1A5715EC4(v166, &v35[23 * v43 + 4]);
  }
  sub_1A55032A0((uint64_t)(v2 + 66), (uint64_t)v171, &qword_1EE796BC8);
  sub_1A55032A0((uint64_t)v171, (uint64_t)&v172, &qword_1EE796BC8);
  if ((v173 & 1) == 0)
  {
    v44 = v172;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_1A57B2558(0, v35[2] + 1, 1, v35);
    v46 = v35[2];
    v45 = v35[3];
    if (v46 >= v45 >> 1)
      v35 = sub_1A57B2558((_QWORD *)(v45 > 1), v46 + 1, 1, v35);
    *(_QWORD *)&v133 = v44;
    sub_1A5732700((uint64_t)&v133);
    sub_1A57B18C8(&v133, v149);
    sub_1A572B494((uint64_t)v149);
    sub_1A57B1194(v149, v166);
    sub_1A5773950((uint64_t)v166);
    v35[2] = v46 + 1;
    sub_1A5715EC4(v166, &v35[23 * v46 + 4]);
  }
  sub_1A55032A0((uint64_t)v2 + 540, (uint64_t)v170, &qword_1EE796318);
  sub_1A55032A0((uint64_t)v170, (uint64_t)&v174, &qword_1EE796318);
  if ((v175 & 1) == 0)
  {
    v47 = v174;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_1A57B2558(0, v35[2] + 1, 1, v35);
    v49 = v35[2];
    v48 = v35[3];
    if (v49 >= v48 >> 1)
      v35 = sub_1A57B2558((_QWORD *)(v48 > 1), v49 + 1, 1, v35);
    *(_QWORD *)&v133 = v47;
    sub_1A57326EC((uint64_t)&v133);
    sub_1A57B18C8(&v133, v149);
    sub_1A572B494((uint64_t)v149);
    sub_1A57B1194(v149, v166);
    sub_1A5773950((uint64_t)v166);
    v35[2] = v49 + 1;
    sub_1A5715EC4(v166, &v35[23 * v49 + 4]);
  }
  sub_1A55032A0((uint64_t)(v2 + 1), (uint64_t)v169, &qword_1EE795BF0);
  sub_1A55032A0((uint64_t)v169, (uint64_t)&v176, &qword_1EE795BF0);
  if ((v177 & 1) == 0 && (a1 & 1) != 0)
  {
    v50 = v176;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_1A57B2558(0, v35[2] + 1, 1, v35);
    v52 = v35[2];
    v51 = v35[3];
    if (v52 >= v51 >> 1)
      v35 = sub_1A57B2558((_QWORD *)(v51 > 1), v52 + 1, 1, v35);
    LODWORD(v133) = v50;
    sub_1A5732690((uint64_t)&v133);
    sub_1A57B18C8(&v133, v149);
    sub_1A572B494((uint64_t)v149);
    sub_1A57B1194(v149, v166);
    sub_1A5773950((uint64_t)v166);
    v35[2] = v52 + 1;
    sub_1A5715EC4(v166, &v35[23 * v52 + 4]);
  }
  sub_1A55032A0((uint64_t)(v2 + 69), (uint64_t)v168, qword_1EE796EE8);
  sub_1A55032A0((uint64_t)v168, (uint64_t)&v178, qword_1EE796EE8);
  if ((v179 & 1) == 0)
  {
    v53 = v178;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_1A57B2558(0, v35[2] + 1, 1, v35);
    v55 = v35[2];
    v54 = v35[3];
    if (v55 >= v54 >> 1)
      v35 = sub_1A57B2558((_QWORD *)(v54 > 1), v55 + 1, 1, v35);
    *(_QWORD *)&v133 = v53;
    sub_1A5732614((uint64_t)&v133);
    sub_1A57B18C8(&v133, v149);
    sub_1A572B494((uint64_t)v149);
    sub_1A57B1194(v149, v166);
    sub_1A5773950((uint64_t)v166);
    v35[2] = v55 + 1;
    sub_1A5715EC4(v166, &v35[23 * v55 + 4]);
  }
  v56 = v2[25];
  v167 = v56;
  v57 = *(_QWORD **)(v56 + 16);
  if (v57)
  {
    v58 = v56 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v124 = *(_QWORD *)(v13 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v59 = v128;
    do
    {
      sub_1A55034B8(v58, v59, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      sub_1A57B1840(v59 + *(int *)(v125 + 24), (uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v8, 1, v127) == 1)
      {
        sub_1A57B1888((uint64_t)v8);
        v60 = *(_QWORD *)v59;
        v61 = *(_QWORD *)(v59 + 8);
        v62 = *(_BYTE *)(v59 + 16);
        v63 = *(unsigned int *)(v59 + 20);
        v64 = *(unsigned __int8 *)(v59 + 24);
        if (v64)
          v65 = 0;
        else
          v65 = v63;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A55DC724(v61, v62);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v35 = sub_1A57B2558(0, v35[2] + 1, 1, v35);
        v131 = v57;
        v66 = v35;
        v67 = v35[2];
        v68 = v66;
        v69 = v66[3];
        if (v67 >= v69 >> 1)
          v68 = sub_1A57B2558((_QWORD *)(v69 > 1), v67 + 1, 1, v68);
        *(_QWORD *)&v133 = v60;
        *((_QWORD *)&v133 + 1) = v61;
        *(_QWORD *)&v134 = v62;
        *((_QWORD *)&v134 + 1) = v65;
        LOBYTE(v135) = v64 | 0x40;
        sub_1A5732600((uint64_t)&v133);
        sub_1A57B18C8(&v133, v149);
        sub_1A572B494((uint64_t)v149);
        sub_1A57B1194(v149, v166);
        sub_1A5773950((uint64_t)v166);
        v68[2] = v67 + 1;
        v70 = &v68[23 * v67];
        v35 = v68;
        sub_1A5715EC4(v166, v70 + 4);
        v59 = v128;
        sub_1A55034FC(v128, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
        v8 = v129;
        v57 = v131;
      }
      else
      {
        sub_1A57A427C((uint64_t)v8, v130);
        v72 = *(_QWORD *)v59;
        v71 = *(_QWORD *)(v59 + 8);
        v73 = *(_BYTE *)(v59 + 16);
        v74 = *(_BYTE *)(v59 + 24);
        if (v74)
          v75 = 0;
        else
          v75 = *(unsigned int *)(v59 + 20);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A55DC724(v71, v73);
        v123 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        v76 = v75;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v35 = sub_1A57B2558(0, v35[2] + 1, 1, v35);
        v78 = v35[2];
        v77 = v35[3];
        v131 = v35;
        if (v78 >= v77 >> 1)
          v131 = sub_1A57B2558((_QWORD *)(v77 > 1), v78 + 1, 1, v131);
        *(_QWORD *)&v150 = v72;
        *((_QWORD *)&v150 + 1) = v71;
        *(_QWORD *)&v151 = v73;
        *((_QWORD *)&v151 + 1) = v76;
        LOBYTE(v152) = v74 | 0x40;
        *((_QWORD *)&v152 + 1) = v123;
        sub_1A572B514((uint64_t)&v150);
        sub_1A57B1194(&v150, v166);
        sub_1A5773950((uint64_t)v166);
        v79 = v131;
        v131[2] = v78 + 1;
        sub_1A5715EC4(v166, &v79[23 * v78 + 4]);
        v80 = v119;
        sub_1A55034B8(v130, v119, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodyData);
        v81 = (uint64_t)v120;
        (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v120, v80, v122);
        ByteBuffer.init(dispatchData:)(v81);
        v83 = v82;
        v85 = v84;
        v87 = v86;
        sub_1A55034FC(v80, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodyData);
        v89 = v79[2];
        v88 = v79[3];
        if (v89 >= v88 >> 1)
          v131 = sub_1A57B2558((_QWORD *)(v88 > 1), v89 + 1, 1, v131);
        v59 = v128;
        v145[0] = v83;
        v145[1] = v85;
        v146 = v87;
        v147 = WORD2(v87);
        v148 = BYTE6(v87);
        sub_1A572B4A8((uint64_t)v145);
        sub_1A57B1194(v145, v149);
        sub_1A5773950((uint64_t)v149);
        v35 = v131;
        v131[2] = v89 + 1;
        sub_1A5715EC4(v149, &v35[23 * v89 + 4]);
        v91 = v35[2];
        v90 = v35[3];
        if (v91 >= v90 >> 1)
          v35 = sub_1A57B2558((_QWORD *)(v90 > 1), v91 + 1, 1, v35);
        v8 = v129;
        sub_1A57B1948((uint64_t)v132);
        sub_1A57B1194(v132, &v133);
        sub_1A5773950((uint64_t)&v133);
        v35[2] = v91 + 1;
        sub_1A5715EC4(&v133, &v35[23 * v91 + 4]);
        sub_1A55034FC(v130, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodyData);
        sub_1A55034FC(v59, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      }
      v58 += v124;
      v57 = (_QWORD *)((char *)v57 - 1);
    }
    while (v57);
    sub_1A54F81BC((uint64_t)&v167);
  }
  v92 = v118;
  sub_1A55032A0((uint64_t)(v118 + 2), (uint64_t)v132, &qword_1EE7A03D8);
  sub_1A55032A0((uint64_t)v132, (uint64_t)v145, &qword_1EE7A03D8);
  if (sub_1A5529F68((uint64_t)v145) != 1)
  {
    sub_1A55032A0((uint64_t)v132, (uint64_t)v164, &qword_1EE7A03D8);
    sub_1A55032A0((uint64_t)v132, (uint64_t)v165, &qword_1EE7A03D8);
    sub_1A55DC438((uint64_t)v165, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
    sub_1A55DC438((uint64_t)v164, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_1A57B2558(0, v35[2] + 1, 1, v35);
    v94 = v35[2];
    v93 = v35[3];
    if (v94 >= v93 >> 1)
      v35 = sub_1A57B2558((_QWORD *)(v93 > 1), v94 + 1, 1, v35);
    sub_1A55DBFD8(v145, &v150);
    HIBYTE(v161) = 0;
    v141 = v158;
    v142 = v159;
    v143 = v160;
    v137 = v154;
    v138 = v155;
    v139 = v156;
    v140 = v157;
    v133 = v150;
    v134 = v151;
    v135 = v152;
    v136 = v153;
    v144 = v161;
    sub_1A57326A4((uint64_t)&v133);
    sub_1A57B18C8(&v133, v149);
    sub_1A572B494((uint64_t)v149);
    sub_1A57B1194(v149, v166);
    sub_1A5773950((uint64_t)v166);
    v35[2] = v94 + 1;
    sub_1A5715EC4(v166, &v35[23 * v94 + 4]);
    sub_1A55DC438((uint64_t)v132, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524104);
  }
  sub_1A55032A0((uint64_t)(v92 + 26), (uint64_t)v164, &qword_1EE7A03D8);
  sub_1A55032A0((uint64_t)v164, (uint64_t)v165, &qword_1EE7A03D8);
  if (sub_1A5529F68((uint64_t)v165) != 1)
  {
    sub_1A55032A0((uint64_t)v164, (uint64_t)v162, &qword_1EE7A03D8);
    sub_1A55032A0((uint64_t)v164, (uint64_t)v163, &qword_1EE7A03D8);
    sub_1A55DC438((uint64_t)v163, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
    sub_1A55DC438((uint64_t)v162, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_1A57B2558(0, v35[2] + 1, 1, v35);
    v96 = v35[2];
    v95 = v35[3];
    if (v96 >= v95 >> 1)
      v35 = sub_1A57B2558((_QWORD *)(v95 > 1), v96 + 1, 1, v35);
    sub_1A55DBFD8(v165, &v150);
    HIBYTE(v161) = 1;
    v141 = v158;
    v142 = v159;
    v143 = v160;
    v137 = v154;
    v138 = v155;
    v139 = v156;
    v140 = v157;
    v133 = v150;
    v134 = v151;
    v135 = v152;
    v136 = v153;
    v144 = v161;
    sub_1A57326A4((uint64_t)&v133);
    sub_1A57B18C8(&v133, v149);
    sub_1A572B494((uint64_t)v149);
    sub_1A57B1194(v149, v166);
    sub_1A5773950((uint64_t)v166);
    v35[2] = v96 + 1;
    sub_1A5715EC4(v166, &v35[23 * v96 + 4]);
    sub_1A55DC438((uint64_t)v164, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524104);
  }
  v97 = v92[72];
  if (v97)
  {
    v98 = v92[71];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_1A57B2558(0, v35[2] + 1, 1, v35);
    v100 = v35[2];
    v99 = v35[3];
    if (v100 >= v99 >> 1)
      v35 = sub_1A57B2558((_QWORD *)(v99 > 1), v100 + 1, 1, v35);
    *(_QWORD *)&v133 = v98;
    *((_QWORD *)&v133 + 1) = v97;
    sub_1A57325EC((uint64_t)&v133);
    sub_1A57B18C8(&v133, v149);
    sub_1A572B494((uint64_t)v149);
    sub_1A57B1194(v149, v166);
    sub_1A5773950((uint64_t)v166);
    v35[2] = v100 + 1;
    sub_1A5715EC4(v166, &v35[23 * v100 + 4]);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v35 = sub_1A57B2558(0, v35[2] + 1, 1, v35);
  v102 = v35[2];
  v101 = v35[3];
  if (v102 >= v101 >> 1)
    v35 = sub_1A57B2558((_QWORD *)(v101 > 1), v102 + 1, 1, v35);
  sub_1A57B1904((uint64_t)v149);
  sub_1A57B1194(v149, v166);
  sub_1A5773950((uint64_t)v166);
  v35[2] = v102 + 1;
  sub_1A5715EC4(v166, &v35[23 * v102 + 4]);
  return v35;
}

uint64_t UntaggedResponse.logIdentifier.getter()
{
  void *v0;
  _BYTE __dst[584];
  uint64_t v3;
  unint64_t v4;

  v3 = 0;
  v4 = 0xE000000000000000;
  sub_1A57AF02C(v0, __dst);
  sub_1A594C924();
  return v3;
}

void UntaggedResponse.name.getter()
{
  void *v0;
  char *v1;
  _BYTE v2[624];

  sub_1A57AF02C(v0, v2);
  v1 = (char *)sub_1A57ADEE4 + 4 * byte_1A59B9CCC[sub_1A5523B90((uint64_t)v2)];
  __asm { BR              X10 }
}

uint64_t sub_1A57ADEE4()
{
  uint64_t v1;

  sub_1A5524678((uint64_t)&v1);
  return 19279;
}

BOOL sub_1A57AE16C(uint64_t a1, uint64_t a2)
{
  return _s13IMAP2Protocol25CommandCompletionResponseO21__derived_enum_equalsySbAC_ACtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

unint64_t CommandCompletionResponse.responseText.getter(unint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  sub_1A579FAC4(a1, a2, a3, a4);
  return a1;
}

uint64_t sub_1A57AE1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A57AE1E4(a1, a2, a3, a4, (void (*)(uint64_t, _BYTE *))sub_1A57AF02C, (uint64_t (*)(_BYTE *, _BYTE *))_s13IMAP2Protocol8ResponseO21__derived_enum_equalsySbAC_ACtFZ_0);
}

uint64_t sub_1A57AE1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _BYTE *), uint64_t (*a6)(_BYTE *, _BYTE *))
{
  _BYTE v10[584];
  _BYTE v11[584];

  a5(a1, v10);
  a5(a2, v11);
  return a6(v10, v11) & 1;
}

uint64_t sub_1A57AE23C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a1 + 40);
    v4 = (uint64_t *)(a2 + 40);
    do
    {
      v5 = *v4;
      if (*v3)
      {
        if (!v5)
          return 0;
        v6 = *(v3 - 1) == *(v4 - 1) && *v3 == v5;
        if (!v6 && (sub_1A594CD38() & 1) == 0)
          return 0;
      }
      else if (v5)
      {
        return 0;
      }
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return 1;
}

unint64_t sub_1A57AE2D4(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t result;
  unint64_t v9;
  uint64_t i;
  uint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  uint64_t v23;

  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v4 = a1;
  v5 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v5 = 11;
  v6 = v5 | (v4 << 16);
  v7 = sub_1A57AE510(0xFuLL, a1, a2);
  result = sub_1A57AE510(v6, a1, a2);
  v9 = result >> 14;
  if (v7 >> 14 < result >> 14)
  {
    for (i = 0; ; ++i)
    {
      v11 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if ((a2 & 0x1000000000000000) != 0)
      {
        result = sub_1A594B4FC();
        v7 = result;
      }
      else
      {
        v12 = v7 >> 16;
        if ((a2 & 0x2000000000000000) != 0)
        {
          v22 = a1;
          v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          v13 = *((unsigned __int8 *)&v22 + v12);
        }
        else
        {
          result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0)
            result = sub_1A594C7D4();
          v13 = *(unsigned __int8 *)(result + v12);
        }
        v14 = (char)v13;
        v15 = __clz(v13 ^ 0xFF) - 24;
        if (v14 >= 0)
          LOBYTE(v15) = 1;
        v7 = ((v12 + v15) << 16) | 5;
      }
      if (v9 <= v7 >> 14)
        return v11;
    }
    __break(1u);
LABEL_40:
    __break(1u);
    return result;
  }
  if (v9 < v7 >> 14)
  {
    v11 = 0;
    while (!__OFSUB__(v11--, 1))
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        result = sub_1A594B508();
        v7 = result;
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          v22 = a1;
          v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          if ((*((_BYTE *)&v22 + (v7 >> 16) - 1) & 0xC0) == 0x80)
          {
            v20 = 0;
            do
              v21 = *((_BYTE *)&v22 + (v7 >> 16) + v20-- - 2) & 0xC0;
            while (v21 == 128);
            v19 = 1 - v20;
          }
          else
          {
            v19 = 1;
          }
        }
        else
        {
          result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0)
            result = sub_1A594C7D4();
          v17 = 0;
          do
            v18 = *(_BYTE *)(result + (v7 >> 16) - 1 + v17--) & 0xC0;
          while (v18 == 128);
          v19 = -v17;
        }
        v7 = (v7 - (v19 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v9 >= v7 >> 14)
        return v11;
    }
    goto LABEL_40;
  }
  return 0;
}

unint64_t sub_1A57AE510(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_1A57AE5AC(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_1A57A7884(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_1A57AE5AC(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_1A55796A4(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < result >> 16)
    __break(1u);
  return result;
}

void _s13IMAP2Protocol16UntaggedResponseO21__derived_enum_equalsySbAC_ACtFZ_0(void *a1)
{
  char *v1;
  _BYTE __dst[1192];

  sub_1A57AF02C(a1, __dst);
  v1 = (char *)sub_1A57AE66C + 4 * word_1A59B9CE2[sub_1A5523B90((uint64_t)__dst)];
  __asm { BR              X10 }
}

uint64_t sub_1A57AE66C()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  char v8;
  __int128 v10;
  _OWORD v11[37];
  _OWORD v12[36];
  uint64_t v13;
  __int128 v14;
  _BYTE v15[688];

  v1 = sub_1A5524678((uint64_t)&v13);
  v2 = *(_QWORD *)v1;
  v14 = *(_OWORD *)(v1 + 8);
  sub_1A57AF02C(v0, v15);
  if (sub_1A5523B90((uint64_t)v15))
    goto LABEL_12;
  v3 = sub_1A5524678((uint64_t)v15);
  v4 = *(_QWORD *)v3;
  v10 = *(_OWORD *)(v3 + 8);
  v11[0] = v14;
  v12[0] = v10;
  v5 = v4 & 0xF000000000000007;
  if ((~v2 & 0xF000000000000007) != 0)
  {
    if (v5 == 0xF000000000000007)
      goto LABEL_12;
    sub_1A5524B84((uint64_t)v11);
    sub_1A579F800(v4);
    sub_1A5524B84((uint64_t)v12);
    sub_1A579F800(v2);
    static ResponseTextCode.__derived_enum_equals(_:_:)(v2);
    if ((v6 & 1) == 0)
    {
      sub_1A579F7B0(v4);
      sub_1A5503278((uint64_t)v12);
      sub_1A579F7B0(v2);
      sub_1A5503278((uint64_t)v11);
      v7 = 0;
      return v7 & 1;
    }
  }
  else
  {
    if (v5 != 0xF000000000000007)
      goto LABEL_12;
    sub_1A5524B84((uint64_t)v11);
    sub_1A5524B84((uint64_t)v12);
  }
  if (*(_QWORD *)&v11[0] != *(_QWORD *)&v12[0] || *((_QWORD *)&v11[0] + 1) != *((_QWORD *)&v12[0] + 1))
  {
    v8 = sub_1A594CD38();
    sub_1A579F7B0(v4);
    sub_1A5503278((uint64_t)v12);
    sub_1A579F7B0(v2);
    sub_1A5503278((uint64_t)v11);
    if ((v8 & 1) != 0)
    {
      v7 = 1;
      return v7 & 1;
    }
LABEL_12:
    v7 = 0;
    return v7 & 1;
  }
  sub_1A579F7B0(v4);
  sub_1A5503278((uint64_t)v12);
  sub_1A579F7B0(v2);
  sub_1A5503278((uint64_t)v11);
  v7 = 1;
  return v7 & 1;
}

void *sub_1A57AF02C(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x248uLL);
}

BOOL _s13IMAP2Protocol25CommandCompletionResponseO21__derived_enum_equalsySbAC_ACtFZ_0(unint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  unint64_t v14;
  char v15;
  char v17;

  if (a4)
  {
    if (a4 == 1)
    {
      if (a8 != 1)
        return 0;
    }
    else if (a8 != 2)
    {
      return 0;
    }
  }
  else if (a8)
  {
    return 0;
  }
  v14 = a5 & 0xF000000000000007;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    if (v14 == 0xF000000000000007)
      return 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A579F800(a5);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A579F800(a1);
    static ResponseTextCode.__derived_enum_equals(_:_:)(a1);
    if ((v15 & 1) == 0)
    {
      sub_1A579F7B0(a5);
      swift_bridgeObjectRelease();
      sub_1A579F7B0(a1);
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    if (v14 != 0xF000000000000007)
      return 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  if (a2 == a6 && a3 == a7)
  {
    sub_1A579F7B0(a5);
    swift_bridgeObjectRelease();
    sub_1A579F7B0(a1);
    swift_bridgeObjectRelease();
    return 1;
  }
  v17 = sub_1A594CD38();
  sub_1A579F7B0(a5);
  swift_bridgeObjectRelease();
  sub_1A579F7B0(a1);
  swift_bridgeObjectRelease();
  return (v17 & 1) != 0;
}

BOOL _s13IMAP2Protocol8ResponseO21__derived_enum_equalsySbAC_ACtFZ_0(void *a1, void *a2)
{
  int v4;
  unsigned __int8 *v5;
  int v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned __int8 *v13;
  uint64_t v15;
  unint64_t v16;
  char v17;
  BOOL v18;
  int v19;
  void *v20;
  BOOL v21;
  uint64_t v23;
  _BYTE v24[584];
  _BYTE v25[584];
  _BYTE __dst[584];
  _BYTE v27[592];

  sub_1A57AF02C(a1, __dst);
  v4 = sub_1A57B1128((uint64_t)__dst);
  v5 = (unsigned __int8 *)sub_1A57B1134((uint64_t)__dst);
  if (v4 != 1)
  {
    sub_1A57AF02C(v5, v27);
    sub_1A57AF02C(a2, v24);
    v19 = sub_1A57B1128((uint64_t)v24);
    v20 = (void *)sub_1A57B1134((uint64_t)v24);
    if (v19 != 1)
    {
      sub_1A57AF02C(v20, v25);
      sub_1A5523B9C(a1, sub_1A57AF950);
      sub_1A5523B9C(a2, sub_1A57AF950);
      _s13IMAP2Protocol16UntaggedResponseO21__derived_enum_equalsySbAC_ACtFZ_0(v27);
      goto LABEL_11;
    }
    return 0;
  }
  v6 = *v5;
  v7 = *((_DWORD *)v5 + 1);
  v8 = *((_QWORD *)v5 + 1);
  v9 = *((_QWORD *)v5 + 2);
  v10 = *((_QWORD *)v5 + 3);
  v11 = v5[32];
  sub_1A57AF02C(a2, v25);
  v12 = sub_1A57B1128((uint64_t)v25);
  v13 = (unsigned __int8 *)sub_1A57B1134((uint64_t)v25);
  if (v12 != 1)
  {
    sub_1A57AF02C(v13, v27);
    return 0;
  }
  if (v6 != *v13 || v7 != *((_DWORD *)v13 + 1))
    return 0;
  v15 = *((_QWORD *)v13 + 2);
  v23 = *((_QWORD *)v13 + 3);
  v16 = *((_QWORD *)v13 + 1);
  v17 = v13[32];
  sub_1A5523B9C(a1, sub_1A57AF950);
  sub_1A5523B9C(a2, sub_1A57AF950);
  v18 = _s13IMAP2Protocol25CommandCompletionResponseO21__derived_enum_equalsySbAC_ACtFZ_0(v8, v9, v10, v11, v16, v15, v23, v17);
LABEL_11:
  v21 = v18;
  sub_1A5523B9C(a2, sub_1A57AFE08);
  sub_1A5523B9C(a1, sub_1A57AFE08);
  return v21;
}

uint64_t sub_1A57AF370(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned __int8 a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a65;

  switch(a65 >> 59)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      sub_1A579F800(result);
      goto LABEL_9;
    case 5uLL:
    case 6uLL:
    case 9uLL:
    case 0xBuLL:
    case 0xDuLL:
      goto LABEL_9;
    case 7uLL:
    case 8uLL:
      swift_retain();
      swift_retain();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_9;
    case 0xAuLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_9;
    case 0xCuLL:
      sub_1A55235F0(result, a2);
      goto LABEL_9;
    case 0x11uLL:
    case 0x12uLL:
      return sub_1A54E4334(result, a2, SBYTE4(a2));
    case 0x13uLL:
      sub_1A5523620(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21,
        a22,
        a23,
        a24,
        a25);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5523620(a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45,
        a46,
        a47,
        a48,
        a49);
      sub_1A5523AD8(a50, a51, a52, a53, a54, a55);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_9:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 0x14uLL:
      swift_retain();
      swift_retain();
      result = swift_retain();
      break;
    case 0x15uLL:
      result = sub_1A5523B84();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for UntaggedResponse(uint64_t a1, uint64_t a2)
{
  return sub_1A57AFD20(a1, a2, sub_1A579FBE0);
}

uint64_t initializeWithCopy for UntaggedResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57B017C(a1, a2, a3, sub_1A57AF370);
}

uint64_t assignWithCopy for UntaggedResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57B0788(a1, a2, a3, sub_1A57AF370, sub_1A579FBE0);
}

uint64_t assignWithTake for UntaggedResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57B0E10(a1, a2, a3, sub_1A579FBE0);
}

int8x16_t sub_1A57AF7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int8x16_t result;

  v2 = *(unsigned __int8 *)(a1 + 384);
  v3 = *(_QWORD *)(a1 + 560) & 1 | (a2 << 59);
  *(_QWORD *)(a1 + 192) = *(unsigned __int8 *)(a1 + 192);
  *(_QWORD *)(a1 + 384) = v2;
  result = vandq_s8(*(int8x16_t *)(a1 + 536), (int8x16_t)xmmword_1A59AC060);
  *(int8x16_t *)(a1 + 536) = result;
  *(_QWORD *)(a1 + 560) = v3;
  return result;
}

ValueMetadata *type metadata accessor for UntaggedResponse()
{
  return &type metadata for UntaggedResponse;
}

unint64_t destroy for CommandCompletionResponse(uint64_t a1)
{
  return sub_1A579F77C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for CommandCompletionResponse(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A579FAC4(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for CommandCompletionResponse(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A579FAC4(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1A579F77C(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CommandCompletionResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1A579F77C(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for CommandCompletionResponse()
{
  return &type metadata for CommandCompletionResponse;
}

unint64_t sub_1A57AF950(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned __int8 a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;

  if ((a65 & 0x400000000000000) != 0)
    return sub_1A579FAC4(a2, a3, a4, a5);
  STACK[0x3D0] = STACK[0x3D0];
  return sub_1A57AF370(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t destroy for Response(uint64_t a1, uint64_t a2)
{
  return sub_1A57AFD20(a1, a2, sub_1A57AFE08);
}

#error "1A57AFDE4: call analysis failed (funcsize=58)"

unint64_t sub_1A57AFE08(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned __int8 a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;

  if ((a65 & 0x400000000000000) != 0)
    return sub_1A579F77C(a2, a3, a4, a5);
  STACK[0x3D0] = STACK[0x3D0];
  return sub_1A579FBE0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t initializeWithCopy for Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57B017C(a1, a2, a3, sub_1A57AF950);
}

#error "1A57B053C: call analysis failed (funcsize=382)"

uint64_t assignWithCopy for Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57B0788(a1, a2, a3, sub_1A57AF950, sub_1A57AFE08);
}

#error "1A57B0B1C: call analysis failed (funcsize=415)"

uint64_t assignWithTake for Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57B0E10(a1, a2, a3, sub_1A57AFE08);
}

#error "1A57B0F84: call analysis failed (funcsize=103)"

uint64_t _s13IMAP2Protocol16UntaggedResponseOwet_0(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 584))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_DWORD *)(a1 + 193);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t sub_1A57B0FF8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 584) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_OWORD *)(result + 160) = 0u;
      *(_OWORD *)(result + 176) = 0u;
      *(_OWORD *)(result + 128) = 0u;
      *(_OWORD *)(result + 144) = 0u;
      *(_OWORD *)(result + 96) = 0u;
      *(_OWORD *)(result + 112) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 80) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_QWORD *)(result + 192) = (unint64_t)-a2 << 8;
      *(_OWORD *)(result + 216) = 0u;
      *(_OWORD *)(result + 232) = 0u;
      *(_OWORD *)(result + 248) = 0u;
      *(_OWORD *)(result + 200) = 0u;
      result += 200;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 80) = 0u;
      *(_OWORD *)(result + 96) = 0u;
      *(_OWORD *)(result + 112) = 0u;
      *(_OWORD *)(result + 128) = 0u;
      *(_OWORD *)(result + 144) = 0u;
      *(_OWORD *)(result + 160) = 0u;
      *(_OWORD *)(result + 176) = 0u;
      *(_OWORD *)(result + 192) = 0u;
      *(_OWORD *)(result + 208) = 0u;
      *(_OWORD *)(result + 224) = 0u;
      *(_OWORD *)(result + 240) = 0u;
      *(_OWORD *)(result + 256) = 0u;
      *(_OWORD *)(result + 272) = 0u;
      *(_OWORD *)(result + 288) = 0u;
      *(_OWORD *)(result + 304) = 0u;
      *(_OWORD *)(result + 320) = 0u;
      *(_OWORD *)(result + 336) = 0u;
      *(_OWORD *)(result + 352) = 0u;
      *(_OWORD *)(result + 368) = 0u;
      return result;
    }
    *(_BYTE *)(result + 584) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A57B1128(uint64_t a1)
{
  return (*(_QWORD *)(a1 + 560) >> 58) & 1;
}

uint64_t sub_1A57B1134(uint64_t result)
{
  *(_QWORD *)(result + 560) &= ~0x400000000000000uLL;
  return result;
}

int8x16_t sub_1A57B1144(uint64_t a1, char a2)
{
  uint64_t v2;
  unint64_t v3;
  int8x16_t result;

  v2 = *(unsigned __int8 *)(a1 + 384);
  v3 = *(_QWORD *)(a1 + 560) & 0xF800000000000001 | ((unint64_t)(a2 & 1) << 58);
  *(_QWORD *)(a1 + 192) = *(unsigned __int8 *)(a1 + 192);
  *(_QWORD *)(a1 + 384) = v2;
  result = vandq_s8(*(int8x16_t *)(a1 + 536), (int8x16_t)xmmword_1A59AC060);
  *(int8x16_t *)(a1 + 536) = result;
  *(_QWORD *)(a1 + 560) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Response()
{
  return &type metadata for Response;
}

void *sub_1A57B1194(const void *a1, void *a2)
{
  __swift_memcpy178_8(a2, a1);
  return a2;
}

uint64_t sub_1A57B11D0()
{
  uint64_t v0;

  sub_1A57B1238(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160),
    *(_QWORD *)(v0 + 168),
    *(_QWORD *)(v0 + 176),
    *(_QWORD *)(v0 + 184),
    *(_WORD *)(v0 + 192),
    *(_BYTE *)(v0 + 194));
  return swift_deallocObject();
}

void sub_1A57B1238(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23,char a24)
{
  unsigned __int8 v24;

  v24 = a6;
  switch(a24)
  {
    case 0:
      sub_1A57B1378(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
      break;
    case 1:
      sub_1A57B161C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 2:
      swift_bridgeObjectRelease();
      sub_1A579F77C(a3, a4, a5, v24);
      break;
    case 3:
      sub_1A579F7B0(a1);
      swift_bridgeObjectRelease();
      break;
    case 4:
      swift_release();
      break;
    default:
      return;
  }
}

uint64_t sub_1A57B1378(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, char a14)
{
  switch(a14 & 0xE | (a12 >> 63))
  {
    case 0uLL:
      return sub_1A57B14D8(result, a2, a3, a4);
    case 1uLL:
      return sub_1A57B150C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 0x7FFFFFFFFFFFFFFFLL, a13, a14 & 0xF1);
    case 2uLL:
      return sub_1A57B15E4(result, a2);
    case 3uLL:
    case 4uLL:
      goto LABEL_9;
    case 5uLL:
      swift_release();
      swift_release();
      goto LABEL_7;
    case 6uLL:
      swift_bridgeObjectRelease();
LABEL_7:
      result = swift_release();
      break;
    case 7uLL:
      swift_release();
LABEL_9:
      result = swift_bridgeObjectRelease();
      break;
    case 8uLL:
      result = sub_1A56E0EA0(result, a2, a3);
      break;
    case 9uLL:
      result = sub_1A552466C();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A57B14D8(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 4u)
  {
    sub_1A579F7B0(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A57B150C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  switch(a14 >> 4)
  {
    case 0:
    case 3:
    case 5:
    case 9:
      goto LABEL_5;
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      return swift_release();
    case 4:
      sub_1A55240D4(result, a2);
      goto LABEL_5;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A57B15E4(uint64_t result, unint64_t a2)
{
  switch((a2 >> 37) & 7)
  {
    case 1uLL:
    case 2uLL:
      result = sub_1A54E3458(result, a2, BYTE4(a2) & 0x1F);
      break;
    case 3uLL:
    case 4uLL:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1A57B161C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  int v23;

  v23 = (a23 >> 9) & 7;
  switch(v23)
  {
    case 4:
      swift_release();
      break;
    case 3:
      sub_1A5683854(a1, a2, a3, a4, a5);
      break;
    case 2:
      sub_1A57B16C8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23 & 0xF1FF);
      break;
  }
}

void sub_1A57B16C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  switch(a23 >> 12)
  {
    case 0:
    case 6:
    case 0xB:
    case 0xC:
      goto LABEL_4;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    case 5:
      sub_1A5524178(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 7:
      sub_1A5683854(a1, a2, a3, a4, a5);
      break;
    default:
      return;
  }
}

uint64_t sub_1A57B1840(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A57B1888(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1A57B18C8(const void *a1, void *a2)
{
  __swift_memcpy178_8(a2, a1);
  return a2;
}

double sub_1A57B1904(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_QWORD *)(a1 + 168) = 0;
  *(_WORD *)(a1 + 176) = 2560;
  return result;
}

double sub_1A57B1948(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 176) = 2560;
  return result;
}

double sub_1A57B1970()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  double result;
  _OWORD v4[3];
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v0 = sub_1A57B3B08(MEMORY[0x1E0DEE9D8]);
  sub_1A57B3C48(v0, v1, v2, v4);
  xmmword_1EE7F9328 = v10;
  unk_1EE7F9338 = v11;
  xmmword_1EE7F9348 = v12;
  xmmword_1EE7F92E8 = v6;
  unk_1EE7F92F8 = v7;
  xmmword_1EE7F9308 = v8;
  unk_1EE7F9318 = v9;
  static ServerID.empty = v4[0];
  unk_1EE7F92B8 = v4[1];
  result = *(double *)&v5;
  xmmword_1EE7F92C8 = v4[2];
  unk_1EE7F92D8 = v5;
  return result;
}

__n128 ServerID.init(_:)@<Q0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  _OWORD v10[11];

  sub_1A57B3C48(a1, a2, a3, v10);
  v5 = v10[9];
  *(_OWORD *)(a4 + 128) = v10[8];
  *(_OWORD *)(a4 + 144) = v5;
  *(_OWORD *)(a4 + 160) = v10[10];
  v6 = v10[5];
  *(_OWORD *)(a4 + 64) = v10[4];
  *(_OWORD *)(a4 + 80) = v6;
  v7 = v10[7];
  *(_OWORD *)(a4 + 96) = v10[6];
  *(_OWORD *)(a4 + 112) = v7;
  v8 = v10[1];
  *(_OWORD *)a4 = v10[0];
  *(_OWORD *)(a4 + 16) = v8;
  result = (__n128)v10[3];
  *(_OWORD *)(a4 + 32) = v10[2];
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__int128 *ServerID.empty.unsafeMutableAddressor()
{
  if (qword_1EE797E30 != -1)
    swift_once();
  return &static ServerID.empty;
}

_QWORD *static ServerID.empty.getter@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1EE797E30 != -1)
    swift_once();
  return sub_1A57B4214(&static ServerID.empty, a1);
}

uint64_t ServerID.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*ServerID.name.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ServerID.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

double (*ServerID.version.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ServerID.os.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.os.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

double (*ServerID.os.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ServerID.osVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.osVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

double (*ServerID.osVersion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ServerID.vendor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.vendor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

double (*ServerID.vendor.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ServerID.supportURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.supportURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

double (*ServerID.supportURL.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ServerID.address.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.address.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

double (*ServerID.address.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ServerID.date.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.date.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return result;
}

double (*ServerID.date.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ServerID.command.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.command.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = a2;
  return result;
}

double (*ServerID.command.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ServerID.arguments.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.arguments.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 144) = a1;
  *(_QWORD *)(v2 + 152) = a2;
  return result;
}

double (*ServerID.arguments.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ServerID.environment.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.environment.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = a2;
  return result;
}

double (*ServerID.environment.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1A57B1F94(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[11];
  _OWORD v14[11];

  v2 = a1[9];
  v13[8] = a1[8];
  v13[9] = v2;
  v13[10] = a1[10];
  v3 = a1[5];
  v13[4] = a1[4];
  v13[5] = v3;
  v4 = a1[7];
  v13[6] = a1[6];
  v13[7] = v4;
  v5 = a1[1];
  v13[0] = *a1;
  v13[1] = v5;
  v6 = a1[3];
  v13[2] = a1[2];
  v13[3] = v6;
  v7 = a2[9];
  v14[8] = a2[8];
  v14[9] = v7;
  v14[10] = a2[10];
  v8 = a2[5];
  v14[4] = a2[4];
  v14[5] = v8;
  v9 = a2[7];
  v14[6] = a2[6];
  v14[7] = v9;
  v10 = a2[1];
  v14[0] = *a2;
  v14[1] = v10;
  v11 = a2[3];
  v14[2] = a2[2];
  v14[3] = v11;
  return _s13IMAP2Protocol8ServerIDV23__derived_struct_equalsySbAC_ACtFZ_0(v13, v14) & 1;
}

uint64_t ServerID.logDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59BA3E0;
  *(_QWORD *)(inited + 32) = 1701667182;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_QWORD *)(inited + 48) = swift_getKeyPath();
  *(_QWORD *)(inited + 56) = 0x6E6F6973726576;
  *(_QWORD *)(inited + 64) = 0xE700000000000000;
  *(_QWORD *)(inited + 72) = swift_getKeyPath();
  *(_QWORD *)(inited + 80) = 29551;
  *(_QWORD *)(inited + 88) = 0xE200000000000000;
  *(_QWORD *)(inited + 96) = swift_getKeyPath();
  *(_QWORD *)(inited + 104) = 0x6F6973726556736FLL;
  *(_QWORD *)(inited + 112) = 0xE90000000000006ELL;
  *(_QWORD *)(inited + 120) = swift_getKeyPath();
  *(_QWORD *)(inited + 128) = 0x726F646E6576;
  *(_QWORD *)(inited + 136) = 0xE600000000000000;
  *(_QWORD *)(inited + 144) = swift_getKeyPath();
  *(_QWORD *)(inited + 152) = 0x5574726F70707573;
  *(_QWORD *)(inited + 160) = 0xEA00000000004C52;
  *(_QWORD *)(inited + 168) = swift_getKeyPath();
  *(_QWORD *)(inited + 176) = 0x73736572646461;
  *(_QWORD *)(inited + 184) = 0xE700000000000000;
  *(_QWORD *)(inited + 192) = swift_getKeyPath();
  *(_QWORD *)(inited + 200) = 1702125924;
  *(_QWORD *)(inited + 208) = 0xE400000000000000;
  *(_QWORD *)(inited + 216) = swift_getKeyPath();
  *(_QWORD *)(inited + 224) = 0x646E616D6D6F63;
  *(_QWORD *)(inited + 232) = 0xE700000000000000;
  *(_QWORD *)(inited + 240) = swift_getKeyPath();
  *(_QWORD *)(inited + 248) = 0x746E656D75677261;
  *(_QWORD *)(inited + 256) = 0xE900000000000073;
  *(_QWORD *)(inited + 264) = swift_getKeyPath();
  *(_QWORD *)(inited + 272) = 0x6D6E6F7269766E65;
  *(_QWORD *)(inited + 280) = 0xEB00000000746E65;
  *(_QWORD *)(inited + 288) = swift_getKeyPath();
  v3 = *(_QWORD *)(inited + 16);
  if (v3)
  {
    sub_1A55425D8(v0);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v4 = inited + 48;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v6 = *(_QWORD *)(v4 - 16);
      v7 = *(_QWORD *)(v4 - 8);
      sub_1A55425D8(v1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      swift_getAtKeyPath();
      sub_1A55426A4(v1);
      if (v13)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A594B5F8();
        sub_1A594B5F8();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1A57B27B0(0, v5[2] + 1, 1, v5);
        v9 = v5[2];
        v8 = v5[3];
        if (v9 >= v8 >> 1)
          v5 = sub_1A57B27B0((_QWORD *)(v8 > 1), v9 + 1, 1, v5);
        v5[2] = v9 + 1;
        v10 = &v5[2 * v9];
        v10[4] = v6;
        v10[5] = v7;
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      v4 += 24;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    sub_1A55426A4(v1);
  }
  else
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795EF0);
  swift_arrayDestroy();
  if (v5[2])
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A48);
    sub_1A5799394();
    v11 = sub_1A594B268();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v11;
}

uint64_t sub_1A57B244C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A54F11CC(a1, a2, a3, a4, &qword_1EE79B238, (uint64_t (*)(_QWORD))MEMORY[0x1E0DEF648]);
}

char *sub_1A57B2460(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B358);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A54F9DDC(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A57B2558(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A57B28E4(a1, a2, a3, a4, &qword_1EE79AF78);
}

_QWORD *sub_1A57B256C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF68);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A57B3798(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A57B268C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA4D0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A57B39FC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A57B27B0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796298);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A54F75D8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A57B28BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A54F11CC(a1, a2, a3, a4, &qword_1EE79B128, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
}

_QWORD *sub_1A57B28D0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A57B28E4(a1, a2, a3, a4, &qword_1EE79B150);
}

_QWORD *sub_1A57B28E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size_0(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 184);
      v13 = v11 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[23 * v9 + 4])
          memmove(v13, a4 + 4, 184 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A57B4730(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A57B2A18(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v7 = a4[2];
  if (a3)
  {
    v8 = (_QWORD *)(a3 + 16);
    swift_retain();
    v9 = sub_1A57B2FEC(a1, a2, (uint64_t)(a4 + 4), v7, v8);
    swift_release();
  }
  else
  {
    if (!v7)
      return 0;
    v10 = a4[4] == a1 && a4[5] == a2;
    if (v10 || (sub_1A594CD38() & 1) != 0)
      return 0;
    if (v7 == 1)
      return 0;
    if (a4[6] == a1 && a4[7] == a2 || (sub_1A594CD38() & 1) != 0)
      return 1;
    if (v7 == 2)
      return 0;
    if (a4[8] == a1 && a4[9] == a2 || (sub_1A594CD38() & 1) != 0)
      return 2;
    if (v7 == 3)
      return 0;
    if (a4[10] == a1 && a4[11] == a2 || (sub_1A594CD38() & 1) != 0)
    {
      return 3;
    }
    else
    {
      v12 = a4 + 13;
      v13 = 3;
      v14 = 4;
      while (1)
      {
        if (v7 == v14)
          return 0;
        ++v13;
        if (*(v12 - 1) == a1 && *v12 == a2)
          break;
        v9 = v14++;
        v12 += 2;
        if ((sub_1A594CD38() & 1) != 0)
          return v9;
      }
      return v13;
    }
  }
  return v9;
}

uint64_t sub_1A57B2C38(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v8 = v2[1];
  v6 = v2 + 1;
  v7 = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v8;
  if ((result & 1) == 0)
  {
    result = sub_1A5796284(0, *(_QWORD *)(v7 + 16) + 1, 1);
    v7 = *v6;
  }
  v11 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v7 + 24);
  if (v11 >= v10 >> 1)
  {
    result = sub_1A5796284(v10 > 1, v11 + 1, 1);
    v7 = *v6;
  }
  *(_QWORD *)(v7 + 16) = v11 + 1;
  v12 = v7 + 16 * v11;
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  v3[1] = v7;
  v13 = *(_QWORD *)(v7 + 16);
  v14 = *v3;
  if (*v3)
  {
    swift_beginAccess();
    if (MEMORY[0x1A85AC894](*(_QWORD *)(v14 + 16) & 0x3FLL) >= v13)
    {
      result = swift_isUniquelyReferenced_native();
      v15 = *v3;
      if (!(_DWORD)result)
      {
        if (!v15)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        v15 = sub_1A594A434();
        result = swift_release();
        *v3 = v15;
      }
      if (v15)
        return sub_1A594A3EC();
      __break(1u);
      goto LABEL_16;
    }
  }
  else if ((unint64_t)v13 < 0x10)
  {
    return result;
  }
  return sub_1A57B2DB0();
}

uint64_t sub_1A57B2DB0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v1 = *v0;
  v2 = v0[1];
  if (*v0)
  {
    swift_beginAccess();
    v3 = *(_QWORD *)(v1 + 24) & 0x3FLL;
    v4 = *(_QWORD *)(v2 + 16);
    if (v3)
      goto LABEL_7;
  }
  else
  {
    v3 = 0;
    v4 = *(_QWORD *)(v2 + 16);
  }
  if (v4 < 0x10)
  {
    v5 = 0;
    goto LABEL_11;
  }
LABEL_7:
  v6 = MEMORY[0x1A85AC8B8](v4);
  if (v3 <= v6)
    v7 = v6;
  else
    v7 = v3;
  v5 = sub_1A57B2E50(v2, v7, 0, v3);
LABEL_11:
  result = swift_release();
  *v0 = v5;
  return result;
}

uint64_t sub_1A57B2E50(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = MEMORY[0x1A85AC8B8](*(_QWORD *)(a1 + 16));
  v9 = 0;
  if ((a3 & 1) != 0)
    v10 = 0;
  else
    v10 = a2;
  if (v10 <= v8)
    v10 = v8;
  if (v10 <= a4)
    v11 = a4;
  else
    v11 = v10;
  if (v11 >= 5)
  {
    v9 = MEMORY[0x1A85AC8C4]();
    sub_1A57B2ED4(a1, (_QWORD *)(v9 + 16));
  }
  return v9;
}

uint64_t sub_1A57B2ED4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    while (1)
    {
      sub_1A594CE64();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594B1D8();
      result = sub_1A594CED0();
      if (__OFSUB__(1 << *a2, 1))
        break;
      v5 = sub_1A594A3D4();
      swift_bridgeObjectRelease();
      if (v5)
      {
        while (1)
          sub_1A594A410();
      }
      result = sub_1A594A404();
      if (++v4 == v2)
        return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A57B2FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;

  sub_1A594CE64();
  sub_1A594B1D8();
  result = sub_1A594CED0();
  if (__OFSUB__(1 << *a5, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1A594A3D4();
    v10 = sub_1A594A3F8();
    v11 = v10;
    if ((v12 & 1) == 0)
    {
      v13 = (_QWORD *)(a3 + 16 * v10);
      if (*v13 != a1 || v13[1] != a2)
      {
        do
        {
          if ((sub_1A594CD38() & 1) != 0)
            break;
          sub_1A594A410();
          v14 = sub_1A594A3F8();
          v11 = v14;
          if ((v15 & 1) != 0)
            break;
          v16 = (_QWORD *)(a3 + 16 * v14);
        }
        while (*v16 != a1 || v16[1] != a2);
      }
    }
    return v11;
  }
  return result;
}

uint64_t sub_1A57B3154(uint64_t result, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (result < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v3 = v2;
  v5 = result;
  v8 = v2[1];
  v6 = v2 + 1;
  v7 = v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v8;
  if (isUniquelyReferenced_nonNull_native && (unint64_t)v5 <= *(_QWORD *)(v7 + 24) >> 1)
  {
    v10 = *v3;
    if (*v3)
      goto LABEL_5;
  }
  else
  {
    if (*(_QWORD *)(v7 + 16) <= v5)
      v15 = v5;
    else
      v15 = *(_QWORD *)(v7 + 16);
    sub_1A5796284(isUniquelyReferenced_nonNull_native, v15, 0);
    v7 = *v6;
    v10 = *v3;
    if (*v3)
    {
LABEL_5:
      swift_beginAccess();
      v11 = *(_QWORD *)(v10 + 16) & 0x3FLL;
      v12 = MEMORY[0x1A85AC8B8](v5);
      v13 = v12;
      if ((a2 & 1) != 0)
      {
        v14 = v12;
        if (v11 >= v12)
          goto LABEL_20;
      }
      else
      {
        swift_beginAccess();
        v14 = *(_QWORD *)(v10 + 24) & 0x3FLL;
        if (v11 >= v13)
          goto LABEL_20;
      }
LABEL_16:
      if (v14 <= v13)
        v17 = v13;
      else
        v17 = v14;
      goto LABEL_30;
    }
  }
  v16 = MEMORY[0x1A85AC8B8](v5);
  v13 = v16;
  v11 = 0;
  if ((a2 & 1) != 0)
    v14 = v16;
  else
    v14 = 0;
  if (v16 > 0)
    goto LABEL_16;
LABEL_20:
  if (v14 <= v13)
    v18 = v13;
  else
    v18 = v14;
  result = MEMORY[0x1A85AC8B8](*(_QWORD *)(v7 + 16));
  if (result <= v18)
    v19 = v18;
  else
    v19 = result;
  if (v19 < v11)
  {
    if (v14 <= v19)
      v17 = v19;
    else
      v17 = v14;
LABEL_30:
    v20 = sub_1A57B2E50(v7, v17, 0, v14);
    result = swift_release();
    *v3 = v20;
    return result;
  }
  if (!v10 || (result = swift_isUniquelyReferenced_native(), (_DWORD)result))
  {
    v21 = *v3;
    if (*v3)
      goto LABEL_35;
LABEL_39:
    if (!v14)
      return result;
    __break(1u);
    goto LABEL_41;
  }
  result = *v3;
  if (!*v3)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  v21 = sub_1A594A434();
  result = swift_release();
  *v3 = v21;
  if (!v21)
    goto LABEL_39;
LABEL_35:
  result = swift_beginAccess();
  if ((*(_QWORD *)(v21 + 24) & 0x3FLL) != v14)
    *(_QWORD *)(v21 + 24) = *(_QWORD *)(v21 + 24) & 0xFFFFFFFFFFFFFFC0 | v14 & 0x3F;
  return result;
}

uint64_t _s13IMAP2Protocol8ServerIDV23__derived_struct_equalsySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;

  v4 = a1[1];
  v5 = a2[1];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (v7 = sub_1A594CD38(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    v9 = a1[3];
    v10 = a2[3];
    if (v9)
    {
      if (!v10)
        return 0;
      if (a1[2] != a2[2] || v9 != v10)
      {
        v11 = sub_1A594CD38();
        result = 0;
        if ((v11 & 1) == 0)
          return result;
      }
    }
    else if (v10)
    {
      return 0;
    }
    v12 = a1[5];
    v13 = a2[5];
    if (v12)
    {
      if (!v13)
        return 0;
      if (a1[4] != a2[4] || v12 != v13)
      {
        v14 = sub_1A594CD38();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v13)
    {
      return 0;
    }
    v15 = a1[7];
    v16 = a2[7];
    if (v15)
    {
      if (!v16)
        return 0;
      if (a1[6] != a2[6] || v15 != v16)
      {
        v17 = sub_1A594CD38();
        result = 0;
        if ((v17 & 1) == 0)
          return result;
      }
    }
    else if (v16)
    {
      return 0;
    }
    v18 = a1[9];
    v19 = a2[9];
    if (v18)
    {
      if (!v19)
        return 0;
      if (a1[8] != a2[8] || v18 != v19)
      {
        v20 = sub_1A594CD38();
        result = 0;
        if ((v20 & 1) == 0)
          return result;
      }
    }
    else if (v19)
    {
      return 0;
    }
    v21 = a1[11];
    v22 = a2[11];
    if (v21)
    {
      if (!v22)
        return 0;
      if (a1[10] != a2[10] || v21 != v22)
      {
        v23 = sub_1A594CD38();
        result = 0;
        if ((v23 & 1) == 0)
          return result;
      }
    }
    else if (v22)
    {
      return 0;
    }
    v24 = a1[13];
    v25 = a2[13];
    if (v24)
    {
      if (!v25)
        return 0;
      if (a1[12] != a2[12] || v24 != v25)
      {
        v26 = sub_1A594CD38();
        result = 0;
        if ((v26 & 1) == 0)
          return result;
      }
    }
    else if (v25)
    {
      return 0;
    }
    v27 = a1[15];
    v28 = a2[15];
    if (v27)
    {
      if (!v28)
        return 0;
      if (a1[14] != a2[14] || v27 != v28)
      {
        v29 = sub_1A594CD38();
        result = 0;
        if ((v29 & 1) == 0)
          return result;
      }
    }
    else if (v28)
    {
      return 0;
    }
    v30 = a1[17];
    v31 = a2[17];
    if (v30)
    {
      if (!v31)
        return 0;
      if (a1[16] != a2[16] || v30 != v31)
      {
        v32 = sub_1A594CD38();
        result = 0;
        if ((v32 & 1) == 0)
          return result;
      }
    }
    else if (v31)
    {
      return 0;
    }
    v33 = a1[19];
    v34 = a2[19];
    if (v33)
    {
      if (!v34)
        return 0;
      if (a1[18] != a2[18] || v33 != v34)
      {
        v35 = sub_1A594CD38();
        result = 0;
        if ((v35 & 1) == 0)
          return result;
      }
    }
    else if (v34)
    {
      return 0;
    }
    v36 = a1[21];
    v37 = a2[21];
    if (v36)
    {
      if (v37 && (a1[20] == a2[20] && v36 == v37 || (sub_1A594CD38() & 1) != 0))
        return 1;
    }
    else if (!v37)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A57B363C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v2 = MEMORY[0x1E0DEE9D8];
  v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  sub_1A57B3154(v3, 0);
  sub_1A57962BC(0, v3, 0);
  if (!v3)
    return 0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  for (i = (unsigned int *)(a1 + 56); ; i += 8)
  {
    v6 = *((_QWORD *)i - 3);
    v5 = *((_QWORD *)i - 2);
    v7 = *((_QWORD *)i - 1);
    v8 = *i | ((unint64_t)*((unsigned __int16 *)i + 2) << 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A566676C(v7, v8);
    result = sub_1A57B2A18(v6, v5, 0, v14);
    if ((v10 & 1) == 0)
      break;
    sub_1A57B2C38(v6, v5);
    v12 = *(_QWORD *)(v2 + 16);
    v11 = *(_QWORD *)(v2 + 24);
    if (v12 >= v11 >> 1)
      sub_1A57962BC(v11 > 1, v12 + 1, 1);
    *(_QWORD *)(v2 + 16) = v12 + 1;
    v13 = v2 + 16 * v12;
    *(_QWORD *)(v13 + 32) = v7;
    *(_DWORD *)(v13 + 40) = v8;
    *(_WORD *)(v13 + 44) = WORD2(v8);
    swift_bridgeObjectRelease();
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A57B3798(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A57B388C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t result;
  char v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v2 = MEMORY[0x1E0DEE9D8];
  v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  sub_1A57B3154(v3, 0);
  sub_1A5796310(0, v3, 0);
  v4 = v2;
  if (!v3)
    return 0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  for (i = (char *)(a1 + 61); ; i += 32)
  {
    v6 = *(_QWORD *)(i - 29);
    v7 = *(_QWORD *)(i - 21);
    v8 = *(_QWORD *)(i - 13);
    v9 = *i;
    v10 = *(unsigned int *)(i - 5) | ((unint64_t)*(i - 1) << 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A566658C(v8, v10, v9);
    result = sub_1A57B2A18(v6, v7, 0, v16);
    if ((v12 & 1) == 0)
      break;
    sub_1A57B2C38(v6, v7);
    v14 = *(_QWORD *)(v4 + 16);
    v13 = *(_QWORD *)(v4 + 24);
    if (v14 >= v13 >> 1)
      sub_1A5796310(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v4 + 16) = v14 + 1;
    v15 = v4 + 16 * v14;
    *(_QWORD *)(v15 + 32) = v8;
    *(_DWORD *)(v15 + 40) = v10;
    *(_BYTE *)(v15 + 44) = BYTE4(v10);
    *(_BYTE *)(v15 + 45) = v9;
    swift_bridgeObjectRelease();
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A57B39FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DF0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A57B3B08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v2 = MEMORY[0x1E0DEE9D8];
  v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  sub_1A57B3154(v3, 0);
  sub_1A579632C(0, v3, 0);
  if (!v3)
    return 0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v6 = *(v4 - 3);
    v5 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A57B2A18(v6, v5, 0, v14);
    if ((v10 & 1) == 0)
      break;
    sub_1A57B2C38(v6, v5);
    v12 = *(_QWORD *)(v2 + 16);
    v11 = *(_QWORD *)(v2 + 24);
    if (v12 >= v11 >> 1)
      sub_1A579632C(v11 > 1, v12 + 1, 1);
    v4 += 4;
    *(_QWORD *)(v2 + 16) = v12 + 1;
    v13 = v2 + 16 * v12;
    *(_QWORD *)(v13 + 32) = v8;
    *(_QWORD *)(v13 + 40) = v7;
    swift_bridgeObjectRelease();
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1A57B3C48@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;

  result = sub_1A57B2A18(1701667182, 0xE400000000000000, a1, a2);
  if ((v9 & 1) == 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(_QWORD *)(a3 + 16))
    {
      v10 = a3 + 16 * result;
      v12 = *(_QWORD *)(v10 + 32);
      v11 = *(_QWORD *)(v10 + 40);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_59;
  }
  v12 = 0;
  v11 = 0;
LABEL_6:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A57B2A18(0x6E6F6973726576, 0xE700000000000000, a1, a2);
  if ((v13 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(_QWORD *)(a3 + 16))
      {
        v14 = a3 + 16 * result;
        v16 = *(_QWORD *)(v14 + 32);
        v15 = *(_QWORD *)(v14 + 40);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_11;
      }
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v16 = 0;
  v15 = 0;
LABEL_11:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A57B2A18(29551, 0xE200000000000000, a1, a2);
  if ((v17 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(_QWORD *)(a3 + 16))
      {
        v18 = a3 + 16 * result;
        v19 = *(_QWORD *)(v18 + 32);
        v20 = *(_QWORD *)(v18 + 40);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_16;
      }
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v19 = 0;
  v20 = 0;
LABEL_16:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A57B2A18(0x69737265762D736FLL, 0xEA00000000006E6FLL, a1, a2);
  if ((v21 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(_QWORD *)(a3 + 16))
      {
        *(_QWORD *)&v61 = *(_QWORD *)(a3 + 16 * result + 32);
        v22 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      }
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  *(_QWORD *)&v61 = 0;
  v22 = 0;
LABEL_21:
  *((_QWORD *)&v61 + 1) = v22;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A57B2A18(0x726F646E6576, 0xE600000000000000, a1, a2);
  if ((v23 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(_QWORD *)(a3 + 16))
      {
        *(_QWORD *)&v60 = *(_QWORD *)(a3 + 16 * result + 32);
        v24 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_26;
      }
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  *(_QWORD *)&v60 = 0;
  v24 = 0;
LABEL_26:
  *((_QWORD *)&v60 + 1) = v24;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A57B2A18(0x2D74726F70707573, 0xEB000000006C7275, a1, a2);
  if ((v25 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(_QWORD *)(a3 + 16))
      {
        *(_QWORD *)&v59 = *(_QWORD *)(a3 + 16 * result + 32);
        v26 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_31;
      }
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  *(_QWORD *)&v59 = 0;
  v26 = 0;
LABEL_31:
  *((_QWORD *)&v59 + 1) = v26;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A57B2A18(0x73736572646461, 0xE700000000000000, a1, a2);
  if ((v27 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(_QWORD *)(a3 + 16))
      {
        *(_QWORD *)&v58 = *(_QWORD *)(a3 + 16 * result + 32);
        v28 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_36;
      }
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  *(_QWORD *)&v58 = 0;
  v28 = 0;
LABEL_36:
  *((_QWORD *)&v58 + 1) = v28;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A57B2A18(1702125924, 0xE400000000000000, a1, a2);
  if ((v29 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(_QWORD *)(a3 + 16))
      {
        *(_QWORD *)&v57 = *(_QWORD *)(a3 + 16 * result + 32);
        v30 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_41;
      }
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  *(_QWORD *)&v57 = 0;
  v30 = 0;
LABEL_41:
  *((_QWORD *)&v57 + 1) = v30;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A57B2A18(0x646E616D6D6F63, 0xE700000000000000, a1, a2);
  if ((v31 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(_QWORD *)(a3 + 16))
      {
        *(_QWORD *)&v55 = *(_QWORD *)(a3 + 16 * result + 32);
        v32 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_46;
      }
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  *(_QWORD *)&v55 = 0;
  v32 = 0;
LABEL_46:
  *((_QWORD *)&v55 + 1) = v32;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A57B2A18(0x746E656D75677261, 0xE900000000000073, a1, a2);
  v56 = v19;
  if ((v33 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(_QWORD *)(a3 + 16))
      {
        v34 = a3 + 16 * result;
        v35 = *(_QWORD *)(v34 + 40);
        v54 = *(_QWORD *)(v34 + 32);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_51;
      }
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v54 = 0;
  v35 = 0;
LABEL_51:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A57B2A18(0x6D6E6F7269766E65, 0xEB00000000746E65, a1, a2);
  if ((v36 & 1) != 0)
  {
    v45 = v16;
    v38 = v35;
    v46 = v12;
    v40 = v20;
    v41 = v45;
    v42 = v15;
    v43 = v46;
    swift_release();
    v52 = 0;
    v53 = 0;
    goto LABEL_56;
  }
  if ((result & 0x8000000000000000) != 0)
    goto LABEL_77;
  if (result < *(_QWORD *)(a3 + 16))
  {
    v37 = v16;
    v38 = v35;
    v39 = v12;
    v40 = v20;
    v41 = v37;
    v42 = v15;
    v43 = v39;
    v44 = a3 + 16 * result;
    v52 = *(_QWORD *)(v44 + 40);
    v53 = *(_QWORD *)(v44 + 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_release();
LABEL_56:
    swift_release();
    swift_release();
    *(_QWORD *)&v62 = v43;
    *((_QWORD *)&v62 + 1) = v11;
    *(_QWORD *)&v63 = v41;
    *((_QWORD *)&v63 + 1) = v42;
    *(_QWORD *)&v64 = v56;
    *((_QWORD *)&v64 + 1) = v40;
    v65 = v61;
    v66 = v60;
    v67 = v59;
    v68 = v58;
    v69 = v57;
    v70 = v55;
    *(_QWORD *)&v71 = v54;
    *((_QWORD *)&v71 + 1) = v38;
    *(_QWORD *)&v72 = v53;
    *((_QWORD *)&v72 + 1) = v52;
    sub_1A55425D8((uint64_t)&v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1A55426A4((uint64_t)&v62);
    v47 = v71;
    a4[8] = v70;
    a4[9] = v47;
    a4[10] = v72;
    v48 = v67;
    a4[4] = v66;
    a4[5] = v48;
    v49 = v69;
    a4[6] = v68;
    a4[7] = v49;
    v50 = v63;
    *a4 = v62;
    a4[1] = v50;
    v51 = v65;
    a4[2] = v64;
    a4[3] = v51;
    return result;
  }
LABEL_78:
  __break(1u);
  return result;
}

_QWORD *sub_1A57B4214(_QWORD *a1, _QWORD *a2)
{
  initializeWithCopy for ServerID(a2, a1);
  return a2;
}

uint64_t destroy for ServerID()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ServerID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for ServerID(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy176_8_1(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

_QWORD *assignWithTake for ServerID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerID(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 176))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 176) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerID()
{
  return &type metadata for ServerID;
}

uint64_t sub_1A57B4730(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 184 * a1 + 32;
    v6 = a3 + 184 * v4;
    if (v5 >= v6 || v5 + 184 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

Swift::String __swiftcall ServerResponseTranscoder.makeParsingErrorDescription()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String result;
  _BYTE v18[184];
  _QWORD v19[25];
  uint64_t v20;

  v1 = v0[3];
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v3 = v0;
    v20 = MEMORY[0x1E0DEE9D8];
    swift_retain();
    v4 = sub_1A5796284(0, v1 & ~(v1 >> 63), 0);
    if ((v1 & 0x8000000000000000) == 0)
    {
      if ((uint64_t)v3[3] >= 1)
      {
        v6 = 0;
        v2 = v20;
        while (1)
        {
          v7 = v3[4];
          v8 = v6 + v7 >= v3[2] ? v3[2] : 0;
          sub_1A5715EC4(&v3[23 * v6 + 5 + 23 * (v7 - v8)], v19);
          sub_1A5715EC4(v19, v18);
          sub_1A57B6A6C(v18);
          v10 = v19[23];
          v9 = v19[24];
          v20 = v2;
          v12 = *(_QWORD *)(v2 + 16);
          v11 = *(_QWORD *)(v2 + 24);
          if (v12 >= v11 >> 1)
          {
            v4 = sub_1A5796284(v11 > 1, v12 + 1, 1);
            v2 = v20;
          }
          *(_QWORD *)(v2 + 16) = v12 + 1;
          v13 = v2 + 16 * v12;
          *(_QWORD *)(v13 + 32) = v10;
          *(_QWORD *)(v13 + 40) = v9;
          if (v1 - 1 == v6)
            break;
          if (++v6 >= v3[3])
            goto LABEL_15;
        }
        swift_release();
        goto LABEL_14;
      }
LABEL_15:
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_14:
  v19[0] = v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A48);
  sub_1A5799394();
  v14 = sub_1A594B268();
  v16 = v15;
  swift_bridgeObjectRelease();
  v4 = v14;
  v5 = v16;
LABEL_17:
  result._object = v5;
  result._countAndFlagsBits = v4;
  return result;
}

uint64_t sub_1A57B49B8()
{
  uint64_t v0;

  v0 = sub_1A594A764();
  __swift_allocate_value_buffer_0(v0, qword_1EE7F9FC0);
  __swift_project_value_buffer_0(v0, (uint64_t)qword_1EE7F9FC0);
  return sub_1A594A758();
}

uint64_t ServerResponseTranscoder.init()()
{
  sub_1A594A458();
  return swift_retain();
}

_QWORD *ServerResponseTranscoder.append(_:)(const void *a1)
{
  uint64_t *v1;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;

  result = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 24);
  v5 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v7 = *v1;
    if (*(_QWORD *)(*v1 + 16) < v5 || (isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A57B6E94(v5);
      v7 = *v1;
    }
    return sub_1A57B7094((_QWORD *)(v7 + 16), v7 + 40, a1);
  }
  return result;
}

void ServerResponseTranscoder.parseNext()(uint64_t a1@<X8>)
{
  uint64_t *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  id *v16;
  _BYTE v17[184];
  id v18[73];
  _BYTE v19[184];
  _BYTE __dst[584];
  _BYTE __src[584];
  _BYTE v22[584];
  _BYTE v23[184];
  _BYTE v24[584];

  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 24);
  if (!v5)
  {
    sub_1A57B7CE4((uint64_t)__dst);
    v16 = (id *)__dst;
LABEL_21:
    sub_1A55032A0((uint64_t)v16, (uint64_t)v24, (uint64_t *)&unk_1EE797E18);
    sub_1A55032A0((uint64_t)v24, a1, (uint64_t *)&unk_1EE797E18);
    return;
  }
  if (v5 < 1)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v6 = v1;
  v7 = *(_QWORD *)(v4 + 32);
  v8 = *(_QWORD *)(v4 + 16);
  if (v7 < v8)
    v8 = 0;
  sub_1A5715EC4((const void *)(v4 + 184 * (v7 - v8) + 40), v23);
  v9 = sub_1A57B773C((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A57B7138);
  sub_1A57B4D90(v9);
  if (v2)
  {
    v18[0] = v2;
    v10 = v2;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3E0);
    if (!swift_dynamicCast() || v19[0] != 1)
    {

      swift_willThrow();
      sub_1A57B773C((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A57B1238);
      return;
    }

    sub_1A57B512C((uint64_t)v22);
    sub_1A55032A0((uint64_t)v22, (uint64_t)__dst, (uint64_t *)&unk_1EE797E18);
    sub_1A57B773C((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A57B1238);

    v16 = (id *)__dst;
    goto LABEL_21;
  }
  sub_1A57AF02C(__src, __dst);
  if (*(uint64_t *)(*v1 + 24) < 1)
  {
    sub_1A57B773C((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A57B1238);
    sub_1A57B77B0((uint64_t)v18);
    v15 = v18;
    goto LABEL_20;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_1A57B7C4C();
  v11 = (_QWORD *)*v1;
  v12 = *(_QWORD *)(*v6 + 32);
  sub_1A5715EC4(&v11[23 * v12 + 5], v18);
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
    goto LABEL_23;
  v14 = v11[3];
  if (v13 >= v11[2])
    v13 = 0;
  v11[4] = v13;
  if (!__OFSUB__(v14, 1))
  {
    v11[3] = v14 - 1;
    sub_1A57B773C((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A57B1238);
    sub_1A5715EC4(v18, v17);
    nullsub_1(v17);
    v15 = (id *)v17;
LABEL_20:
    sub_1A55032A0((uint64_t)v15, (uint64_t)v19, &qword_1EE7971C8);
    sub_1A57BC84C((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A57B77DC);
    sub_1A57AF02C(__dst, v18);
    nullsub_1(v18);
    v16 = v18;
    goto LABEL_21;
  }
LABEL_24:
  __break(1u);
}

void sub_1A57B4D90(uint64_t a1)
{
  const void *v1;
  char *v2;
  _BYTE v3[184];
  _BYTE v4[1296];
  _BYTE v5[184];

  MEMORY[0x1E0C80A78](a1);
  sub_1A5715EC4(v1, v3);
  sub_1A5715EC4(v3, v5);
  sub_1A5715EC4(v1, v4);
  v2 = (char *)sub_1A57B4E14 + 4 * byte_1A59B9FC0[sub_1A56EFC28((uint64_t)v4)];
  __asm { BR              X10 }
}

void *sub_1A57B4E14()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  const void *v4;
  uint64_t v5;
  _BYTE v7[592];
  _BYTE v8[584];
  _BYTE v9[184];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[848];

  nullsub_1(&v11);
  sub_1A56EFC74(v4, &v12);
  sub_1A5715EC4((const void *)(v3 - 248), v9);
  nullsub_1(v9);
  sub_1A57B7288(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 96), *(_BYTE *)(v5 + 104));
  sub_1A57B61A8();
  if (v0)
    return (void *)sub_1A57B773C(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A57B1238);
  sub_1A57AF02C(&v10, v7);
  sub_1A57B773C(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A57B1238);
  sub_1A57AF02C(v7, v8);
  sub_1A57BCA08((uint64_t)v8);
  sub_1A57AF02C(v8, v13);
  return sub_1A57AF02C(v13, v1);
}

uint64_t sub_1A57B512C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  id v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  _BYTE v11[584];
  _BYTE __dst[592];
  id v13;
  _BYTE __src[584];
  _BYTE v15[584];
  uint64_t v16;

  v16 = MEMORY[0x1E0DEE9D8];
  sub_1A57B9AC8(v1);
  if (!v2)
  {
    sub_1A57AF02C(__src, v11);
    swift_bridgeObjectRelease();
    sub_1A57AF02C(v11, __dst);
    nullsub_1(__dst);
LABEL_11:
    sub_1A55032A0((uint64_t)__dst, (uint64_t)v15, (uint64_t *)&unk_1EE797E18);
    return sub_1A55032A0((uint64_t)v15, a1, (uint64_t *)&unk_1EE797E18);
  }
  v13 = v2;
  v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3E0);
  if ((swift_dynamicCast() & 1) == 0 || __dst[591])
  {

    return swift_bridgeObjectRelease();
  }

  result = swift_beginAccess();
  v6 = *(_QWORD *)(v16 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  v8 = v7 + v6;
  if (!__OFADD__(v7, v6))
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *(_QWORD *)v1;
    if (*(_QWORD *)(*(_QWORD *)v1 + 16) < v8 || (isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A57B6E94(v8);
      v10 = *(_QWORD *)v1;
    }
    sub_1A57B7DBC((_QWORD *)(v10 + 16), v10 + 40, v16 + 32, v6);
    swift_bridgeObjectRelease();
    sub_1A57B7CE4((uint64_t)__dst);

    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A57B52D8@<X0>(uint64_t a1@<X0>, _QWORD **a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  _BYTE v15[184];
  _BYTE v16[184];
  _BYTE v17[184];

  if (*(uint64_t *)(*(_QWORD *)a1 + 24) < 1)
  {
    sub_1A57B77B0((uint64_t)v16);
    v13 = v16;
    goto LABEL_13;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_1A57B7C4C();
  v6 = *(_QWORD **)a1;
  v7 = v6[4];
  sub_1A5715EC4(&v6[23 * v7 + 5], v16);
  v8 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = v6[3];
  if (v8 >= v6[2])
    v8 = 0;
  v6[4] = v8;
  if (__OFSUB__(v9, 1))
    goto LABEL_15;
  v6[3] = v9 - 1;
  swift_beginAccess();
  v6 = *a2;
  sub_1A57B773C((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A57B7138);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_16:
    v6 = sub_1A57B2558(0, v6[2] + 1, 1, v6);
    *a2 = v6;
  }
  v12 = v6[2];
  v11 = v6[3];
  if (v12 >= v11 >> 1)
  {
    v6 = sub_1A57B2558((_QWORD *)(v11 > 1), v12 + 1, 1, v6);
    *a2 = v6;
  }
  sub_1A5715EC4(v16, v15);
  nullsub_1(v15);
  v6[2] = v12 + 1;
  sub_1A5715EC4(v16, &v6[23 * v12 + 4]);
  swift_endAccess();
  v13 = v15;
LABEL_13:
  sub_1A55032A0((uint64_t)v13, (uint64_t)v17, &qword_1EE7971C8);
  return sub_1A55032A0((uint64_t)v17, a3, &qword_1EE7971C8);
}

BOOL ServerResponseTranscoder.isEmpty.getter(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24) == 0;
}

uint64_t ServerResponseFramingParser.framingParser.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A57B7D44(v1, a1);
}

uint64_t ServerResponseFramingParser.framingParser.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A57B7D80(a1, v1);
}

double (*ServerResponseFramingParser.framingParser.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ServerResponseFramingParser.byteCountNeededToCompleteFrame.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 168);
}

double ServerResponseFramingParser.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  int v3;
  __int16 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int16 v9;
  int v10;
  double result;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[2];
  uint64_t v21;
  double v22;
  int v23;
  __int16 v24;
  char v25;
  uint64_t v26;
  _OWORD v27[4];
  uint64_t v28;
  char v29;
  __int128 v30;
  int v31;
  __int16 v32;
  char v33;
  char v34;

  FramingParser.init(bufferSizeLimit:)(6000000, (uint64_t)v20);
  v18 = v20[1];
  v19 = v20[0];
  v2 = v21;
  v3 = v23;
  v4 = v24;
  v5 = v25;
  v6 = v26;
  sub_1A57BB5D8((uint64_t)v27);
  v7 = v28;
  v8 = v29;
  v9 = v32;
  v10 = v31;
  v34 = 1;
  result = v22;
  v12 = v33;
  v13 = v27[0];
  v14 = v27[1];
  v15 = v27[2];
  v16 = v27[3];
  v17 = v30;
  *(_OWORD *)a1 = v19;
  *(_OWORD *)(a1 + 16) = v18;
  *(_QWORD *)(a1 + 32) = v2;
  *(double *)(a1 + 40) = result;
  *(_DWORD *)(a1 + 48) = v3;
  *(_WORD *)(a1 + 52) = v4;
  *(_BYTE *)(a1 + 54) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 64) = v13;
  *(_OWORD *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 96) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(_QWORD *)(a1 + 128) = v7;
  *(_BYTE *)(a1 + 136) = v8;
  *(_OWORD *)(a1 + 144) = v17;
  *(_BYTE *)(a1 + 166) = v12;
  *(_WORD *)(a1 + 164) = v9;
  *(_DWORD *)(a1 + 160) = v10;
  *(_QWORD *)(a1 + 168) = 0;
  *(_BYTE *)(a1 + 176) = v34;
  *(_QWORD *)(a1 + 184) = MEMORY[0x1E0DEE9D8];
  return result;
}

BOOL ServerResponseFramingParser.isEmpty.getter()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;
  _BOOL8 result;

  v1 = *(_DWORD *)(v0 + 40);
  v2 = *(_DWORD *)(v0 + 44);
  if (v2 < v1)
    __break(1u);
  else
    return v2 == v1 && *(_QWORD *)(*(_QWORD *)(v0 + 184) + 16) == 0;
  return result;
}

uint64_t ServerResponseFramingParser.count.getter()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t result;

  v1 = *(_DWORD *)(v0 + 40);
  v2 = *(_DWORD *)(v0 + 44);
  result = v2 - v1;
  if (v2 < v1)
    __break(1u);
  return result;
}

uint64_t sub_1A57B5604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v6 = sub_1A594B6C4();
  result = sub_1A57AAA14(v6, a1, a2);
  if (v9)
  {
    v10 = v8;
    result = swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(a3 + 40);
    v12 = __CFADD__(v11, 1);
    v13 = v11 + 1;
    if (!v12)
    {
      *(_QWORD *)(a3 + 40) = v13;
      return v10;
    }
    __break(1u);
  }
  else
  {
    v14 = *(_QWORD *)(a3 + 48);
    v12 = __CFADD__(v14, 1);
    v15 = v14 + 1;
    if (!v12)
    {
      *(_QWORD *)(a3 + 48) = v15;
      sub_1A57AAAF8(v6, a1, a2);
      return a1;
    }
  }
  __break(1u);
  return result;
}

uint64_t ServerResponseFramingParser.append(_:)()
{
  return sub_1A594ADDC();
}

uint64_t sub_1A57B56F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a1)
    v2 = a1 + a2;
  else
    v2 = 0;
  FramingParser.appendAndFrameBytes(_:)(a1, v2);
  sub_1A57B5810(v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A57B5810(uint64_t result)
{
  char *v1;

  if (*(_QWORD *)(result + 16))
  {
    v1 = (char *)&loc_1A57B58AC
       + *((int *)qword_1A57B5AB0
         + (*(_QWORD *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 48) >> 62));
    __asm { BR              X9 }
  }
  return result;
}

uint64_t ServerResponseFramingParser.append(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  FramingParser.appendAndFrameBytes(_:)(a1, a2);
  sub_1A57B5810(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A57B5BC0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  unsigned __int16 v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25[11];
  uint64_t v26;
  __int128 v27[11];
  uint64_t v28;
  unint64_t v29;
  int v30;
  __int16 v31;
  char v32;
  _BYTE v33[184];
  uint64_t v34;
  unint64_t v35;
  unsigned int v36;
  unsigned __int16 v37;
  unsigned __int8 v38;

  v2 = v1;
  v3 = *a1;
  v4 = *((unsigned int *)a1 + 4);
  v5 = *((unsigned __int16 *)a1 + 10);
  v6 = *((unsigned __int8 *)a1 + 22);
  v7 = *(_QWORD *)(v1 + 144);
  if (v7)
  {
    v8 = *(_BYTE *)(v1 + 166);
    v9 = *(_WORD *)(v1 + 164);
    v10 = *(_DWORD *)(v1 + 160);
    v11 = *(_QWORD *)(v1 + 152);
    v34 = *(_QWORD *)(v1 + 144);
    v35 = v11;
    v36 = v10;
    v37 = v9;
    v38 = v8;
    swift_retain();
    ByteBuffer.writeImmutableBuffer(_:)();
    result = swift_release();
    v4 = v36;
    v5 = v37;
    v6 = v38;
    v3 = v7;
    v13 = v35;
    v14 = v36 | ((unint64_t)v37 << 32) | ((unint64_t)v38 << 48);
  }
  else
  {
    v13 = *((unsigned int *)a1 + 2) | ((unint64_t)*((unsigned int *)a1 + 3) << 32);
    v14 = v4 | (v5 << 32) | (v6 << 48);
    result = swift_retain();
  }
  *(_QWORD *)(v2 + 144) = v3;
  *(_QWORD *)(v2 + 152) = v13;
  *(_DWORD *)(v2 + 160) = v14;
  *(_BYTE *)(v2 + 166) = BYTE6(v14);
  *(_WORD *)(v2 + 164) = WORD2(v14);
  if (v3)
  {
    v24 = v2;
    while (1)
    {
      v28 = v3;
      v29 = v13;
      v30 = v4;
      v31 = v5;
      v32 = v6;
      swift_retain_n();
      ResponseParser.parseResponseStream(buffer:)((uint64_t)&v28, (uint64_t)v33, v15);
      sub_1A55032A0((uint64_t)v33, (uint64_t)&v34, &qword_1EE796F78);
      if (sub_1A57BC8C0((uint64_t)&v34) == 1)
        break;
      sub_1A57BC8E8(&v34, &v26);
      result = swift_release_n();
      if (v29 > HIDWORD(v13))
      {
        __break(1u);
        goto LABEL_24;
      }
      if ((_DWORD)v29 == HIDWORD(v13))
      {
        swift_release();
        v3 = 0;
        v13 = 0;
        v16 = 0;
      }
      else
      {
        v13 = v13 & 0xFFFFFFFF00000000 | v29;
        v16 = v4 | (v5 << 32) | (v6 << 48);
      }
      sub_1A57BC8E8(&v26, v25);
      sub_1A57BC924((uint64_t)v25);
      *(_QWORD *)(v2 + 144) = v3;
      *(_QWORD *)(v2 + 152) = v13;
      *(_BYTE *)(v2 + 166) = BYTE6(v16);
      *(_WORD *)(v2 + 164) = WORD2(v16);
      *(_DWORD *)(v2 + 160) = v16;
      sub_1A57BB6D8(v25, (uint64_t)v27);
      v17 = v16;
      v6 = BYTE6(v16);
      v18 = *(_QWORD **)(v2 + 184);
      sub_1A57BC84C((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A57BBBC0);
      v19 = WORD2(v16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v18 = sub_1A57B28D0(0, v18[2] + 1, 1, v18);
      v21 = v18[2];
      v20 = v18[3];
      if (v21 >= v20 >> 1)
        v18 = sub_1A57B28D0((_QWORD *)(v20 > 1), v21 + 1, 1, v18);
      v18[2] = v21 + 1;
      sub_1A57BB6D8(v27, (uint64_t)&v18[23 * v21 + 4]);
      result = sub_1A57BC84C((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A57BBD20);
      v2 = v24;
      *(_QWORD *)(v24 + 184) = v18;
      v4 = v17;
      v5 = v19;
      if (!v3)
        return result;
    }
    result = swift_release_n();
    if (v29 > HIDWORD(v13))
    {
LABEL_24:
      __break(1u);
      return result;
    }
    if ((_DWORD)v29 == HIDWORD(v13))
    {
      result = swift_release();
      v3 = 0;
      v22 = 0;
      v23 = 0;
    }
    else
    {
      v22 = v13 & 0xFFFFFFFF00000000 | v29;
      v23 = v4 | (v5 << 32) | (v6 << 48);
    }
    *(_QWORD *)(v2 + 144) = v3;
    *(_QWORD *)(v2 + 152) = v22;
    *(_DWORD *)(v2 + 160) = v23;
    *(_BYTE *)(v2 + 166) = BYTE6(v23);
    *(_WORD *)(v2 + 164) = WORD2(v23);
  }
  return result;
}

uint64_t sub_1A57B5F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _DWORD *v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v4 = sub_1A594A764();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE7AA3E0 != -1)
    swift_once();
  v8 = __swift_project_value_buffer_0(v4, (uint64_t)qword_1EE7F9FC0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_1A594A74C();
  v10 = sub_1A594C024();
  if (!os_log_type_enabled(v9, v10))
    goto LABEL_10;
  v11 = (_DWORD *)swift_slowAlloc();
  *v11 = 68157955;
  v12 = a2 - a1;
  if (!a1)
    v12 = 0;
  if (v12 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_12:
    __break(1u);
  }
  if (v12 > 0x7FFFFFFF)
    goto LABEL_12;
  v13 = v11;
  LODWORD(v15[0]) = v12;
  sub_1A594C3CC();
  *((_WORD *)v13 + 4) = 2101;
  if (a1)
  {
    v15[0] = a1;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v9, v10, "Received invalid data frame from server: %{sensitive}.*P", (uint8_t *)v13, 0x12u);
    MEMORY[0x1A85B1964](v13, -1, -1);
LABEL_10:

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t ServerResponseFramingParser.popAllFrames()()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 184) = MEMORY[0x1E0DEE9D8];
  return result;
}

void sub_1A57B61A8()
{
  const void *v0;
  uint64_t v1;
  _BYTE v2[88];

  sub_1A56EFC74(v0, &v1);
  sub_1A56EFC74(v0, v2);
  __asm { BR              X12 }
}

uint64_t sub_1A57B6258@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  STACK[0x398] = v1 & 0x7FFFFFFFFFFFFFFFLL;
  LOBYTE(STACK[0x3A8]) = a1 & 0xF1;
  sub_1A57BD068((uint64_t)&STACK[0x340], (uint64_t)&STACK[0x3B8]);
  v2 = sub_1A57BD068((uint64_t)&STACK[0x3B8], (uint64_t)&STACK[0x500]);
  return ((uint64_t (*)(uint64_t))((char *)sub_1A57B62A4 + 4 * byte_1A59B9FF8[LOBYTE(STACK[0x518])]))(v2);
}

void *sub_1A57B62A4()
{
  void *v0;
  unint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  _BYTE v7[688];

  v2 = v5;
  v3 = v5;
  v4 = v6;
  sub_1A57BD158((uint64_t)&v3);
  sub_1A579F800(v2);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A57AF02C(&v3, v7);
  return sub_1A57AF02C(v7, v0);
}

void sub_1A57B6790(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  LOBYTE(STACK[0x4F8]) = a1 & 0xF;
  if (HIDWORD(STACK[0x490]))
    JUMPOUT(0x1A57B67A4);
  a18 = STACK[0x490];
  sub_1A57BCF00((uint64_t)&a18);
  JUMPOUT(0x1A57B674CLL);
}

void sub_1A57B67DC(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, unint64_t a19, unint64_t a20)
{
  unint64_t v20;
  unint64_t v21;

  LOBYTE(STACK[0x4F8]) = a1 & 0xF;
  v20 = STACK[0x498];
  v21 = STACK[0x4A0];
  a18 = STACK[0x490];
  a19 = v20;
  a20 = v21;
  sub_1A57BCE4C((uint64_t)&a18);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  JUMPOUT(0x1A57B6378);
}

void sub_1A57B6824(char a1@<W8>)
{
  uint64_t v1;

  STACK[0x398] = v1 & 0x7FFFFFFFFFFFFFFFLL;
  LOBYTE(STACK[0x3A8]) = a1 & 0xF1;
  sub_1A594C9C0();
  __break(1u);
}

void sub_1A57B6894(uint64_t a1@<X8>)
{
  LODWORD(STACK[0x488]) = a1;
  LOBYTE(STACK[0x48C]) = BYTE4(a1) & 0x1F;
  JUMPOUT(0x1A57B6854);
}

void sub_1A57B68A4(char a1@<W8>)
{
  LOBYTE(STACK[0x4F8]) = a1 & 0xF;
  JUMPOUT(0x1A57B6854);
}

void *sub_1A57B68B0@<X0>(void *a1@<X8>)
{
  uint64_t *v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v20;
  _BYTE v21[4];
  int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _BYTE v27[32];
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE __dst[584];

  sub_1A56F12F8((uint64_t)(v1 + 2), (uint64_t)v27);
  sub_1A56F12F8((uint64_t)v27, (uint64_t)&v28);
  if (v31)
  {
    if (v31 == 1)
    {
      v3 = v28;
      v4 = v29;
      v5 = v30;
      v7 = *v1;
      v6 = v1[1];
      sub_1A57BD190((uint64_t)v27);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v8 = sub_1A57BED14(v7, v6);
      if ((v9 & 1) == 0)
      {
        v21[0] = (_BYTE)v8;
        v22 = HIDWORD(v8);
        v23 = v3;
        v24 = v4;
        v25 = v5;
        v10 = 1;
LABEL_9:
        v26 = v10;
        goto LABEL_10;
      }
    }
    else
    {
      v3 = v28;
      v15 = v29;
      v16 = v30;
      v7 = *v1;
      v6 = v1[1];
      sub_1A57BD190((uint64_t)v27);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v17 = sub_1A57BED14(v7, v6);
      if ((v18 & 1) == 0)
      {
        v21[0] = (_BYTE)v17;
        v22 = HIDWORD(v17);
        v23 = v3;
        v24 = v15;
        v25 = v16;
        v10 = 2;
        goto LABEL_9;
      }
    }
  }
  else
  {
    v3 = v28;
    v11 = v29;
    v12 = v30;
    v7 = *v1;
    v6 = v1[1];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A57BD190((uint64_t)v27);
    v13 = sub_1A57BED14(v7, v6);
    if ((v14 & 1) == 0)
    {
      v21[0] = (_BYTE)v13;
      v22 = HIDWORD(v13);
      v23 = v3;
      v24 = v11;
      v25 = v12;
      v26 = 0;
LABEL_10:
      sub_1A57BD1C0((uint64_t)v21);
      sub_1A57AF02C(v21, __dst);
      return sub_1A57AF02C(__dst, a1);
    }
  }
  sub_1A57BC7E4();
  swift_allocError();
  *(_QWORD *)v20 = v7;
  *(_QWORD *)(v20 + 8) = v6;
  *(_BYTE *)(v20 + 16) = 0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_willThrow();
  sub_1A579F7B0(v3);
  return (void *)swift_bridgeObjectRelease();
}

void sub_1A57B6A6C(const void *a1)
{
  char *v1;
  _BYTE v2[184];
  _BYTE v3[184];

  sub_1A5715EC4(a1, v2);
  sub_1A5715EC4(v2, v3);
  v1 = (char *)sub_1A57B6AC8 + 4 * byte_1A59B9FFD[sub_1A56EFC28((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_1A57B6AC8()
{
  uint64_t v0;
  double v1;
  uint64_t v2;

  v1 = nullsub_1(v0 - 248);
  return ((uint64_t (*)(double))((char *)sub_1A57B6AFC
                                         + 4 * byte_1A59BA00A[*(_BYTE *)(v2 + 104) & 0xE | (*(_QWORD *)(v2 + 88) >> 63)]))(v1);
}

void sub_1A57B6AFC()
{
  _QWORD *v0;

  *v0 = 0xD00000000000001ALL;
  v0[1] = 0x80000001A5A10700;
}

void sub_1A57B6D1C(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  sub_1A56EFCCC((uint64_t)va);
  JUMPOUT(0x1A57B6C20);
}

void sub_1A57B6D3C(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  sub_1A56EFCCC((uint64_t)va);
  JUMPOUT(0x1A57B6C20);
}

void sub_1A57B6D58(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  sub_1A56EFCCC((uint64_t)va);
  JUMPOUT(0x1A57B6C20);
}

void sub_1A57B6D74()
{
  JUMPOUT(0x1A57B6C20);
}

void sub_1A57B6D8C()
{
  JUMPOUT(0x1A57B6CF8);
}

void sub_1A57B6DB0()
{
  JUMPOUT(0x1A57B6C20);
}

void sub_1A57B6DC4()
{
  JUMPOUT(0x1A57B6C20);
}

void sub_1A57B6DD8()
{
  JUMPOUT(0x1A57B6C20);
}

void sub_1A57B6DF0()
{
  JUMPOUT(0x1A57B6C20);
}

void sub_1A57B6E08()
{
  JUMPOUT(0x1A57B6CF8);
}

void sub_1A57B6E28()
{
  JUMPOUT(0x1A57B6C20);
}

void sub_1A57B6E40()
{
  JUMPOUT(0x1A57B6CF8);
}

void sub_1A57B6E64()
{
  JUMPOUT(0x1A57B6C20);
}

void sub_1A57B6E7C()
{
  JUMPOUT(0x1A57B6C20);
}

uint64_t sub_1A57B6E94(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  size_t v10;
  uint64_t v11;
  uint64_t result;

  v2 = *v1;
  v3 = (uint64_t *)(*v1 + 16);
  v4 = *v3;
  if (*v3 >= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7986C0);
    v8 = swift_allocObject();
    v9 = *(_OWORD *)(v2 + 24);
    *(_QWORD *)(v8 + 16) = v4;
    *(_OWORD *)(v8 + 24) = v9;
    if ((uint64_t)v9 >= 1)
      sub_1A57B7AEC(v8 + 16, v8 + 40, v3, v2 + 40);
  }
  else
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v1;
    sub_1A594A464();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v7 = *(_QWORD *)(v6 + 24);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7986C0);
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = (uint64_t)(_swift_stdlib_malloc_size_0((const void *)v8) - 40) / 184;
      *(_QWORD *)(v8 + 24) = v7;
      *(_QWORD *)(v8 + 32) = 0;
      if (v7 >= 1)
      {
        swift_retain();
        sub_1A57B785C(v8 + 16, (char *)(v8 + 40), (_QWORD *)(v6 + 16), (char *)(v6 + 40));
        *(_QWORD *)(v6 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7986C0);
      v8 = swift_allocObject();
      v10 = _swift_stdlib_malloc_size_0((const void *)v8);
      v11 = *(_QWORD *)(v6 + 24);
      *(_QWORD *)(v8 + 16) = (uint64_t)(v10 - 40) / 184;
      *(_QWORD *)(v8 + 24) = v11;
      *(_QWORD *)(v8 + 32) = 0;
      if (v11 >= 1)
        sub_1A57B7980(v8 + 16, v8 + 40, (_QWORD *)(v6 + 16), v6 + 40);
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

_QWORD *sub_1A57B7094(_QWORD *result, uint64_t a2, const void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;

  v4 = result[1];
  v3 = result[2];
  v8 = __OFADD__(v3, v4);
  v5 = v3 + v4;
  if (!v8)
  {
    v7 = result;
    if ((v4 & 0x8000000000000000) == 0)
    {
      v8 = __OFSUB__(v5, *result);
      if (v5 < *result || (v5 -= *result, !v8))
      {
LABEL_9:
        result = sub_1A5715EC4(a3, (void *)(a2 + 184 * v5));
        v9 = v7[1];
        v8 = __OFADD__(v9, 1);
        v10 = v9 + 1;
        if (!v8)
        {
          v7[1] = v10;
          return (_QWORD *)sub_1A57B773C((uint64_t)a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A57B7138);
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v5 < 0)
    {
      v8 = __OFADD__(v5, *result);
      v5 += *result;
      if (v8)
        goto LABEL_13;
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void sub_1A57B7138(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23,char a24)
{
  unsigned __int8 v24;

  v24 = a6;
  switch(a24)
  {
    case 0:
      sub_1A57B7288(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
      break;
    case 1:
      sub_1A57B7510(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 2:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A579FAC4(a3, a4, a5, v24);
      break;
    case 3:
      sub_1A579F800(a1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 4:
      swift_retain();
      break;
    default:
      return;
  }
}

uint64_t sub_1A57B7288(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, char a14)
{
  switch(a14 & 0xE | (a12 >> 63))
  {
    case 0uLL:
      return sub_1A57B73D0(result, a2, a3, a4);
    case 1uLL:
      return sub_1A57B7404(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 0x7FFFFFFFFFFFFFFFLL, a13, a14 & 0xF1);
    case 2uLL:
      return sub_1A57B74D8(result, a2);
    case 3uLL:
    case 4uLL:
      goto LABEL_9;
    case 5uLL:
      swift_retain();
      swift_retain();
      goto LABEL_7;
    case 6uLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_7:
      result = swift_retain();
      break;
    case 7uLL:
      swift_retain();
LABEL_9:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 8uLL:
      result = sub_1A56E0E38(result, a2, a3);
      break;
    case 9uLL:
      result = sub_1A5523B84();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A57B73D0(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 4u)
  {
    sub_1A579F800(result);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A57B7404(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  switch(a14 >> 4)
  {
    case 0:
    case 3:
    case 5:
    case 9:
      goto LABEL_5;
    case 1:
    case 2:
      swift_retain();
      swift_retain();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_5;
    case 4:
      sub_1A55235F0(result, a2);
      goto LABEL_5;
    case 8:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_5:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A57B74D8(uint64_t result, unint64_t a2)
{
  switch((a2 >> 37) & 7)
  {
    case 1uLL:
    case 2uLL:
      result = sub_1A54E4334(result, a2, BYTE4(a2) & 0x1F);
      break;
    case 3uLL:
    case 4uLL:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1A57B7510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  int v23;

  v23 = (a23 >> 9) & 7;
  switch(v23)
  {
    case 4:
      swift_retain();
      break;
    case 3:
      sub_1A56DDDA4(a1, a2, a3, a4, a5);
      break;
    case 2:
      sub_1A57B75BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23 & 0xF1FF);
      break;
  }
}

void sub_1A57B75BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  switch(a23 >> 12)
  {
    case 0:
    case 6:
    case 0xB:
    case 0xC:
      goto LABEL_4;
    case 1:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_4:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 5:
      sub_1A5523694(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 7:
      sub_1A56DDDA4(a1, a2, a3, a4, a5);
      break;
    default:
      return;
  }
}

uint64_t sub_1A57B773C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))
{
  int v4;

  BYTE2(v4) = *(_BYTE *)(a1 + 178);
  LOWORD(v4) = *(_WORD *)(a1 + 176);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    v4);
  return a1;
}

double sub_1A57B77B0(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 178) = -1;
  *(_WORD *)(a1 + 176) = 0;
  return result;
}

void sub_1A57B77DC(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23,unsigned __int8 a24)
{
  if (a24 != 255)
    sub_1A57B1238(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24);
}

void sub_1A57B785C(int a1, char *__dst, _QWORD *a3, char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BOOL4 v11;
  _BOOL4 v12;
  BOOL v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v18;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_30;
  }
  v7 = a3[1];
  if (v5 < v7)
  {
    v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      v9 = *a3 - v4;
      v10 = a4;
      goto LABEL_6;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v10 = 0;
  v8 = 0;
  v9 = a3[1];
LABEL_6:
  v11 = v5 < v7;
  v12 = v8 != 0;
  v13 = v11 && v12;
  if (v11 && v12)
    v14 = v10;
  else
    v14 = 0;
  if (v11 && v12)
    v15 = v8;
  else
    v15 = 0;
  if (v9 < 1)
  {
    v9 = 0;
    goto LABEL_20;
  }
  if (!a4)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v16 = &a4[184 * v4];
  if (v16 != __dst || &v16[184 * v9] <= __dst)
    memmove(__dst, v16, 184 * v9);
LABEL_20:
  if (!v13 || v15 <= 0)
    return;
  if (!v14)
  {
LABEL_32:
    __break(1u);
    return;
  }
  v18 = &__dst[184 * v9];
  if (v18 != v14 || v18 >= &v14[184 * v15])
    memmove(v18, v14, 184 * v15);
}

void sub_1A57B7980(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v14;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  v7 = a3[1];
  if (v5 >= v7)
  {
    v10 = 0;
    v8 = 0;
    v9 = a3[1];
    if (v7 < 1)
      goto LABEL_5;
    goto LABEL_7;
  }
  v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v9 = *a3 - v4;
  v10 = a4;
  if (v5 < 1)
  {
LABEL_5:
    v9 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v11 = a4 + 184 * v4;
  if (v11 < a2 + 184 * v9 && v11 + 184 * v9 > a2)
    goto LABEL_29;
  swift_arrayInitWithCopy();
LABEL_13:
  if (v5 >= v7 || v8 < 1)
    return;
  if (!v10)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    sub_1A594CA68();
    __break(1u);
    return;
  }
  v14 = a2 + 184 * v9;
  if (v14 + 184 * v8 > v10 && v14 < v10 + 184 * v8)
    goto LABEL_29;
  swift_arrayInitWithCopy();
}

void sub_1A57B7AEC(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  v7 = a3[1];
  if (v5 >= v7)
  {
    v10 = 0;
    v8 = 0;
    v9 = a3[1];
    if (v7 < 1)
      goto LABEL_14;
    goto LABEL_7;
  }
  v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v9 = *a3 - v4;
  v10 = a4;
  if (v5 < 1)
    goto LABEL_14;
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v11 = 184 * v4;
  v12 = a4 + v11;
  v13 = a2 + v11;
  v14 = a2 + v11 + 184 * v9;
  v15 = a4 + v11 + 184 * v9;
  if (v12 < v14 && v13 < v15)
    goto LABEL_29;
  swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      if (a2 + 184 * v8 <= v10 || v10 + 184 * v8 <= a2)
      {
        swift_arrayInitWithCopy();
        return;
      }
LABEL_29:
      sub_1A594CA68();
      __break(1u);
      return;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
}

uint64_t sub_1A57B7C4C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t result;

  v1 = *v0;
  v2 = (uint64_t *)(*v0 + 16);
  v3 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7986C0);
  v4 = swift_allocObject();
  v5 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  if ((uint64_t)v5 >= 1)
    sub_1A57B7AEC(v4 + 16, v4 + 40, v2, v1 + 40);
  result = swift_release();
  *v0 = v4;
  return result;
}

_OWORD *sub_1A57B7CE4(uint64_t a1)
{
  _OWORD *result;

  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 192) = 0xFFFFFFFF00;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  result = (_OWORD *)(a1 + 200);
  result[4] = 0u;
  result[5] = 0u;
  result[6] = 0u;
  result[7] = 0u;
  result[8] = 0u;
  result[9] = 0u;
  result[10] = 0u;
  result[11] = 0u;
  result[12] = 0u;
  result[13] = 0u;
  result[14] = 0u;
  result[15] = 0u;
  result[16] = 0u;
  result[17] = 0u;
  result[18] = 0u;
  result[19] = 0u;
  result[20] = 0u;
  result[21] = 0u;
  result[22] = 0u;
  result[23] = 0u;
  return result;
}

uint64_t sub_1A57B7D44(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FramingParser(a2, a1);
  return a2;
}

uint64_t sub_1A57B7D80(uint64_t a1, uint64_t a2)
{
  assignWithTake for FramingParser(a2, a1);
  return a2;
}

_QWORD *sub_1A57B7DBC(_QWORD *result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;

  if (a4 >= 1)
  {
    v4 = result[2];
    v5 = v4 - a4;
    if (__OFADD__(v4, -a4))
    {
      __break(1u);
    }
    else
    {
      if (v5 < 0)
      {
        v6 = __OFADD__(v5, *result);
        v5 += *result;
        if (v6)
          goto LABEL_16;
      }
      result[2] = v5;
      v7 = result[1];
      v6 = __OFADD__(v7, a4);
      v8 = v7 + a4;
      if (!v6)
      {
        result[1] = v8;
        if (v5 >= v4)
        {
          if (!__OFSUB__(*result, v5))
            return (_QWORD *)sub_1A57B7E90(a3, a4);
          goto LABEL_15;
        }
        if (!__OFSUB__(v4, v5))
          return (_QWORD *)sub_1A57B7E90(a3, a4);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        return result;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1A57B7E90(unint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  _BYTE v11[8];
  _BYTE v12[24];
  __int128 v13;
  char v14;
  __int128 v15;
  unint64_t v16;
  _BYTE v17[8];
  unint64_t v18;

  sub_1A55032A0((uint64_t)(v2 + 1), (uint64_t)v12, &qword_1EE79A648);
  result = sub_1A55032A0((uint64_t)v12, (uint64_t)&v13, &qword_1EE79A648);
  if ((v14 & 1) == 0)
  {
    v15 = v13;
    v10 = *v2;
    v6 = *((_QWORD *)&v10 + 1);
    if ((*((_QWORD *)&v10 + 1) & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      if (a1)
      {
        if (*((_QWORD *)&v10 + 1))
        {
          sub_1A55032A0((uint64_t)&v10, (uint64_t)v11, &qword_1EE796130);
          sub_1A55032A0((uint64_t)v11, (uint64_t)&v16, &qword_1EE796130);
          result = v16;
          if (v16)
          {
            if (v16 + 184 * v6 > a1 && a1 + 184 * v6 > v16)
              goto LABEL_34;
            result = swift_arrayInitWithCopy();
          }
        }
      }
      if (!__OFADD__(v6, a2 - v6))
      {
        if (a2 >= v6)
        {
          if (a1)
          {
            v8 = a2 - v6;
            if (a2 != v6)
            {
              if (*((uint64_t *)&v15 + 1) >= v8)
              {
                sub_1A55032A0((uint64_t)&v15, (uint64_t)v17, &qword_1EE796130);
                sub_1A55032A0((uint64_t)v17, (uint64_t)&v18, &qword_1EE796130);
                result = v18;
                if (!v18)
                  return result;
                v9 = a1 + 184 * v6;
                if (v9 >= v18 + 184 * v8 || v9 + 184 * v8 <= v18)
                  return swift_arrayInitWithCopy();
                goto LABEL_34;
              }
LABEL_33:
              __break(1u);
              goto LABEL_34;
            }
          }
          return result;
        }
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
    __break(1u);
    goto LABEL_31;
  }
  if (a1 && a2)
  {
    v15 = *v2;
    if (*((uint64_t *)&v15 + 1) >= a2)
    {
      sub_1A55032A0((uint64_t)&v15, (uint64_t)&v18, &qword_1EE796130);
      sub_1A55032A0((uint64_t)&v18, (uint64_t)&v10, &qword_1EE796130);
      result = v10;
      if (!(_QWORD)v10)
        return result;
      if ((a2 & 0x8000000000000000) == 0 && ((uint64_t)v10 + 184 * a2 <= a1 || a1 + 184 * a2 <= (unint64_t)v10))
        return swift_arrayInitWithCopy();
LABEL_34:
      result = sub_1A594CA68();
      __break(1u);
      return result;
    }
    goto LABEL_32;
  }
  return result;
}

uint64_t sub_1A57B8124(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v29;

  v4 = v3;
  v7 = *v3;
  sub_1A594CE64();
  sub_1A594B4B4();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  v8 = sub_1A594CED0();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v29 = *v4;
    *v4 = 0x8000000000000000;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A57B8C44(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *v4 = v29;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  v11 = sub_1A594B4B4();
  v13 = v12;
  if (v11 == sub_1A594B4B4() && v13 == v14)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v16 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      v17 = ~v9;
      do
      {
        v10 = (v10 + 1) & v17;
        if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
          goto LABEL_15;
        v18 = sub_1A594B4B4();
        v20 = v19;
        if (v18 == sub_1A594B4B4() && v20 == v21)
          goto LABEL_16;
        v23 = sub_1A594CD38();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v23 & 1) == 0);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = (uint64_t *)(*(_QWORD *)(*v4 + 48) + 16 * v10);
  v27 = v26[1];
  *a1 = *v26;
  a1[1] = v27;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return 0;
}

uint64_t sub_1A57B8374(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  int v30;
  __int16 v31;
  char v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[9];

  v5 = v4;
  v10 = *v4;
  sub_1A594CE64();
  v36 = a4;
  v11 = a4 & 0xFFFFFFFFFFFFFFLL;
  GmailLabel.hash(into:)((uint64_t)v38, a2, a3);
  v12 = sub_1A594CED0() & ~(-1 << *(_BYTE *)(v10 + 32));
  v13 = v10 + 56;
  v37 = a4 & 0xFFFFFFFFFFFFFFLL;
  if (((*(_QWORD *)(v10 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    goto LABEL_7;
  v33 = -1 << *(_BYTE *)(v10 + 32);
  v34 = v4;
  v14 = 24 * v12;
  v15 = *(_QWORD *)(v10 + 48) + 24 * v12;
  v35 = a1;
  v16 = *(_QWORD *)v15;
  v17 = *(_QWORD *)(v15 + 8);
  v18 = *(unsigned int *)(v15 + 16) | ((unint64_t)*(unsigned __int16 *)(v15 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v15 + 22) << 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v19 = swift_retain();
  v20 = v17;
  v21 = v35;
  LOBYTE(v18) = static ByteBuffer.== infix(_:_:)(v19, v20, v18, a2, a3, v11);
  swift_release();
  if ((v18 & 1) == 0)
  {
    v12 = (v12 + 1) & ~v33;
    if (((*(_QWORD *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
    {
      while (1)
      {
        v14 = 24 * v12;
        v22 = *(_QWORD *)(v10 + 48) + 24 * v12;
        v23 = *(_QWORD *)(v22 + 8);
        v16 = v16 & 0xFF00000000000000 | *(unsigned int *)(v22 + 16) | ((unint64_t)*(unsigned __int16 *)(v22 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v22 + 22) << 48);
        v24 = swift_retain();
        LOBYTE(v23) = static ByteBuffer.== infix(_:_:)(v24, v23, v16, a2, a3, v37);
        swift_release();
        if ((v23 & 1) != 0)
          break;
        v12 = (v12 + 1) & ~v33;
        if (((*(_QWORD *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          goto LABEL_6;
      }
      v21 = v35;
      goto LABEL_9;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    v5 = v34;
    a1 = v35;
LABEL_7:
    v25 = v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38[0] = *v25;
    *v25 = 0x8000000000000000;
    v27 = swift_retain();
    sub_1A57B8E84(v27, a3, v37, v12, isUniquelyReferenced_nonNull_native);
    *v25 = v38[0];
    swift_bridgeObjectRelease();
    *(_QWORD *)a1 = a2;
    *(_QWORD *)(a1 + 8) = a3;
    *(_DWORD *)(a1 + 16) = v36;
    *(_WORD *)(a1 + 20) = WORD2(v36);
    result = 1;
    *(_BYTE *)(a1 + 22) = BYTE6(v36);
    return result;
  }
LABEL_9:
  swift_release();
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(*v34 + 48) + v14;
  v30 = *(_DWORD *)(v29 + 16);
  v31 = *(_WORD *)(v29 + 20);
  v32 = *(_BYTE *)(v29 + 22);
  *(_QWORD *)v21 = *(_QWORD *)v29;
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v29 + 8);
  *(_DWORD *)(v21 + 16) = v30;
  *(_WORD *)(v21 + 20) = v31;
  *(_BYTE *)(v21 + 22) = v32;
  swift_retain();
  return 0;
}

uint64_t sub_1A57B8618()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A698);
  v3 = sub_1A594C6CC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1A594CE64();
      sub_1A594B4B4();
      sub_1A594B1D8();
      swift_bridgeObjectRelease();
      result = sub_1A594CED0();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A57B8910()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  char v38[72];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA4F8);
  result = sub_1A594C6CC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v34 = (_QWORD *)(v2 + 56);
    v35 = v2;
    v6 = 1 << *(_BYTE *)(v2 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v33 = (unint64_t)(v6 + 63) >> 6;
    v9 = result + 56;
    while (1)
    {
      if (v8)
      {
        v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v36 = v5;
        v13 = v12 | (v5 << 6);
      }
      else
      {
        v14 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v33)
          goto LABEL_33;
        v15 = v34[v14];
        v16 = v5 + 1;
        if (!v15)
        {
          v16 = v14 + 1;
          if (v14 + 1 >= v33)
            goto LABEL_33;
          v15 = v34[v16];
          if (!v15)
          {
            v16 = v14 + 2;
            if (v14 + 2 >= v33)
              goto LABEL_33;
            v15 = v34[v16];
            if (!v15)
            {
              v17 = v14 + 3;
              if (v17 >= v33)
              {
LABEL_33:
                v32 = 1 << *(_BYTE *)(v2 + 32);
                if (v32 > 63)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v34[v17];
              if (!v15)
              {
                while (1)
                {
                  v16 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v16 >= v33)
                    goto LABEL_33;
                  v15 = v34[v16];
                  ++v17;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v16 = v17;
            }
          }
        }
LABEL_23:
        v8 = (v15 - 1) & v15;
        v36 = v16;
        v13 = __clz(__rbit64(v15)) + (v16 << 6);
      }
      v18 = *(_QWORD *)(v2 + 48) + 24 * v13;
      v19 = *(_QWORD *)v18;
      v21 = *(unsigned int *)(v18 + 8);
      v20 = *(unsigned int *)(v18 + 12);
      v22 = *(unsigned int *)(v18 + 16);
      v23 = *(unsigned __int16 *)(v18 + 20);
      v24 = *(unsigned __int8 *)(v18 + 22);
      sub_1A594CE64();
      v37 = v37 & 0xFF00000000000000 | v22 | (v23 << 32) | (v24 << 48);
      GmailLabel.hash(into:)((uint64_t)v38, v19, v21 | (v20 << 32));
      result = sub_1A594CED0();
      v25 = -1 << *(_BYTE *)(v4 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v9 + 8 * (v26 >> 6))) != 0)
      {
        v10 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v9 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v9 + 8 * v27);
        }
        while (v31 == -1);
        v10 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      v11 = *(_QWORD *)(v4 + 48) + 24 * v10;
      *(_QWORD *)v11 = v19;
      *(_DWORD *)(v11 + 8) = v21;
      *(_DWORD *)(v11 + 12) = v20;
      *(_DWORD *)(v11 + 16) = v22;
      *(_WORD *)(v11 + 20) = v23;
      *(_BYTE *)(v11 + 22) = v24;
      ++*(_QWORD *)(v4 + 16);
      v2 = v35;
      v5 = v36;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A57B8C44(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1A57B8618();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1A57B90C8();
LABEL_22:
      v26 = *v5;
      *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
      v27 = (uint64_t *)(*(_QWORD *)(v26 + 48) + 16 * a3);
      *v27 = v8;
      v27[1] = a2;
      v28 = *(_QWORD *)(v26 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (!v29)
      {
        *(_QWORD *)(v26 + 16) = v30;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1A57B944C();
  }
  v11 = *v4;
  sub_1A594CE64();
  sub_1A594B4B4();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  result = sub_1A594CED0();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
    goto LABEL_22;
  v13 = sub_1A594B4B4();
  v15 = v14;
  if (v13 == sub_1A594B4B4() && v15 == v16)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v18 = sub_1A594CD38();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
    v19 = ~v12;
    do
    {
      a3 = (a3 + 1) & v19;
      if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
        goto LABEL_22;
      v20 = sub_1A594B4B4();
      v22 = v21;
      if (v20 == sub_1A594B4B4() && v22 == v23)
        goto LABEL_25;
      v25 = sub_1A594CD38();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v25 & 1) == 0);
  }
LABEL_26:
  result = sub_1A594CDEC();
  __break(1u);
  return result;
}

uint64_t sub_1A57B8E84(uint64_t result, unint64_t a2, uint64_t a3, unint64_t i, char a5)
{
  uint64_t *v5;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  _BYTE v32[72];

  v9 = result;
  v10 = *(_QWORD *)(*v5 + 16);
  v11 = *(_QWORD *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0)
    goto LABEL_13;
  if ((a5 & 1) != 0)
  {
    sub_1A57B8910();
  }
  else
  {
    if (v11 > v10)
    {
      result = (uint64_t)sub_1A57B9278();
      goto LABEL_13;
    }
    sub_1A57B972C();
  }
  v12 = *v5;
  sub_1A594CE64();
  v13 = a3 & 0xFFFFFFFFFFFFFFLL;
  GmailLabel.hash(into:)((uint64_t)v32, v9, a2);
  result = sub_1A594CED0();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  i = result & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48) + 24 * i;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(unsigned int *)(v16 + 16) | ((unint64_t)*(unsigned __int16 *)(v16 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v16 + 22) << 48);
    v20 = swift_retain();
    LOBYTE(v18) = static ByteBuffer.== infix(_:_:)(v20, v18, v19, v9, a2, v13);
    result = swift_release();
    if ((v18 & 1) != 0)
      goto LABEL_16;
    v21 = ~v14;
    for (i = (i + 1) & v21; ((*(_QWORD *)(v15 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v21)
    {
      v22 = *(_QWORD *)(v12 + 48) + 24 * i;
      v23 = *(_QWORD *)(v22 + 8);
      v17 = v17 & 0xFF00000000000000 | *(unsigned int *)(v22 + 16) | ((unint64_t)*(unsigned __int16 *)(v22 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v22 + 22) << 48);
      v24 = swift_retain();
      LOBYTE(v23) = static ByteBuffer.== infix(_:_:)(v24, v23, v17, v9, a2, v13);
      result = swift_release();
      if ((v23 & 1) != 0)
        goto LABEL_16;
    }
  }
LABEL_13:
  v25 = *v30;
  *(_QWORD *)(*v30 + 8 * (i >> 6) + 56) |= 1 << i;
  v26 = *(_QWORD *)(v25 + 48) + 24 * i;
  *(_QWORD *)v26 = v9;
  *(_QWORD *)(v26 + 8) = a2;
  *(_DWORD *)(v26 + 16) = a3;
  *(_WORD *)(v26 + 20) = WORD2(a3);
  *(_BYTE *)(v26 + 22) = BYTE6(a3);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_16:
  result = sub_1A594CDEC();
  __break(1u);
  return result;
}

void *sub_1A57B90C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A698);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A57B9278()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  __int16 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA4F8);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v13)
      goto LABEL_28;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_28;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
      {
        v9 = v23 + 2;
        if (v23 + 2 >= v13)
          goto LABEL_28;
        v24 = *(_QWORD *)(v6 + 8 * v9);
        if (!v24)
          break;
      }
    }
LABEL_27:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_DWORD *)(v17 + 16);
    v19 = *(_WORD *)(v17 + 20);
    v20 = *(_BYTE *)(v17 + 22);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    v22 = *(_QWORD *)(v17 + 8);
    *(_QWORD *)v21 = *(_QWORD *)v17;
    *(_QWORD *)(v21 + 8) = v22;
    *(_DWORD *)(v21 + 16) = v18;
    *(_WORD *)(v21 + 20) = v19;
    *(_BYTE *)(v21 + 22) = v20;
    result = (void *)swift_retain();
  }
  v25 = v23 + 3;
  if (v25 >= v13)
    goto LABEL_28;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A57B944C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A698);
  v3 = sub_1A594C6CC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v29)
      goto LABEL_33;
    v16 = *(_QWORD *)(v28 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v29)
        goto LABEL_33;
      v16 = *(_QWORD *)(v28 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v29)
          goto LABEL_33;
        v16 = *(_QWORD *)(v28 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
    v19 = *v18;
    v20 = v18[1];
    sub_1A594CE64();
    sub_1A594B4B4();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    swift_bridgeObjectRelease();
    result = sub_1A594CED0();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v8 + 8 * v23);
      }
      while (v27 == -1);
      v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v11);
    *v12 = v19;
    v12[1] = v20;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v28 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v29)
      goto LABEL_33;
    v16 = *(_QWORD *)(v28 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A57B972C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  int64_t v35;
  unint64_t v36;
  char v37[72];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA4F8);
  result = sub_1A594C6CC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v32 = v2 + 56;
  v6 = 1 << *(_BYTE *)(v2 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v33 = (unint64_t)(v6 + 63) >> 6;
  v34 = v2;
  v9 = result + 56;
  while (1)
  {
    if (v8)
    {
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v35 = v5;
      v13 = v12 | (v5 << 6);
      goto LABEL_23;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v14 >= v33)
      goto LABEL_32;
    v15 = *(_QWORD *)(v32 + 8 * v14);
    v16 = v5 + 1;
    if (!v15)
    {
      v16 = v5 + 2;
      if (v5 + 2 >= v33)
        goto LABEL_32;
      v15 = *(_QWORD *)(v32 + 8 * v16);
      if (!v15)
      {
        v16 = v5 + 3;
        if (v5 + 3 >= v33)
          goto LABEL_32;
        v15 = *(_QWORD *)(v32 + 8 * v16);
        if (!v15)
        {
          v17 = v5 + 4;
          if (v5 + 4 >= v33)
          {
LABEL_32:
            result = swift_release();
            v1 = v0;
            goto LABEL_34;
          }
          v15 = *(_QWORD *)(v32 + 8 * v17);
          v16 = v5 + 4;
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v15 - 1) & v15;
    v35 = v16;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_23:
    v18 = *(_QWORD *)(v2 + 48) + 24 * v13;
    v19 = *(_QWORD *)v18;
    v21 = *(unsigned int *)(v18 + 8);
    v20 = *(unsigned int *)(v18 + 12);
    v22 = *(unsigned int *)(v18 + 16);
    v23 = *(unsigned __int16 *)(v18 + 20);
    v24 = *(unsigned __int8 *)(v18 + 22);
    sub_1A594CE64();
    v36 = v36 & 0xFF00000000000000 | v22 | (v23 << 32) | (v24 << 48);
    GmailLabel.hash(into:)((uint64_t)v37, v19, v21 | (v20 << 32));
    result = sub_1A594CED0();
    v25 = -1 << *(_BYTE *)(v4 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v9 + 8 * (v26 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v9 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_35;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v9 + 8 * v27);
      }
      while (v31 == -1);
      v10 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    v11 = *(_QWORD *)(v4 + 48) + 24 * v10;
    *(_QWORD *)v11 = v19;
    *(_DWORD *)(v11 + 8) = v21;
    *(_DWORD *)(v11 + 12) = v20;
    *(_DWORD *)(v11 + 16) = v22;
    *(_WORD *)(v11 + 20) = v23;
    *(_BYTE *)(v11 + 22) = v24;
    ++*(_QWORD *)(v4 + 16);
    result = swift_retain();
    v2 = v34;
    v5 = v35;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v33)
      goto LABEL_32;
    v15 = *(_QWORD *)(v32 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_22;
  }
LABEL_36:
  __break(1u);
  return result;
}

