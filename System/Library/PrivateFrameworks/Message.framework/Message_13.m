uint64_t MessageSectionData.Segment.init(data:isFinal:initial:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = type metadata accessor for MessageSectionData.Segment(0);
  v9 = a4 + *(int *)(v8 + 24);
  v10 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a4, a1, v10);
  *(_BYTE *)(a4 + *(int *)(v8 + 20)) = a2;
  return sub_1A55032A0(a3, v9, &qword_1EE798598);
}

uint64_t == infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8);
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v12[184];
  _BYTE v13[184];
  _BYTE v14[184];
  _BYTE v15[184];
  _BYTE v16[184];
  _BYTE v17[184];
  _BYTE v18[192];
  _BYTE v19[184];
  _BYTE v20[184];
  _BYTE v21[184];
  _BYTE v22[184];
  _BYTE v23[184];
  _BYTE v24[184];

  v4 = type metadata accessor for MessageSectionData.Segment(0);
  if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 20)))
    goto LABEL_17;
  v5 = v4;
  sub_1A55032A0(a1 + *(int *)(v4 + 24), (uint64_t)v21, &qword_1EE798598);
  sub_1A55032A0(a2 + *(int *)(v5 + 24), (uint64_t)v22, &qword_1EE798598);
  sub_1A55032A0((uint64_t)v21, (uint64_t)v23, &qword_1EE798598);
  if (sub_1A5529F68((uint64_t)v23) != 1)
  {
    sub_1A55032A0((uint64_t)v22, (uint64_t)v18, &qword_1EE798598);
    if (sub_1A5529F68((uint64_t)v18) != 1)
    {
      sub_1A55032A0((uint64_t)v21, (uint64_t)v15, &qword_1EE798598);
      sub_1A55032A0((uint64_t)v22, (uint64_t)v16, &qword_1EE798598);
      sub_1A55032A0((uint64_t)v15, (uint64_t)v17, &qword_1EE796958);
      if (sub_1A55DC41C((uint64_t)v17) == 1)
      {
        sub_1A55032A0((uint64_t)v16, (uint64_t)v19, &qword_1EE796958);
        if (sub_1A55DC41C((uint64_t)v19) == 1)
        {
          sub_1A55DC438((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
          goto LABEL_14;
        }
      }
      else
      {
        sub_1A55032A0((uint64_t)v16, (uint64_t)v14, &qword_1EE796958);
        if (sub_1A55DC41C((uint64_t)v14) != 1)
        {
          sub_1A55032A0((uint64_t)v15, (uint64_t)v12, &qword_1EE796958);
          sub_1A55DC3E0(v12, v24);
          sub_1A55032A0((uint64_t)v16, (uint64_t)v13, &qword_1EE796958);
          sub_1A55DC3E0(v13, v19);
          sub_1A55DC438((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523620);
          sub_1A55DC438((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523620);
          v7 = static BodyStructure.__derived_enum_equals(_:_:)();
          sub_1A55DC438((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524104);
          sub_1A55DC438((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524104);
          if ((v7 & 1) != 0)
            goto LABEL_14;
LABEL_17:
          v10 = 0;
          return v10 & 1;
        }
      }
      sub_1A55032A0((uint64_t)v15, (uint64_t)v19, &qword_1EE796958);
      sub_1A55032A0((uint64_t)v16, (uint64_t)v20, &qword_1EE796958);
      sub_1A55DC438((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523620);
      sub_1A55DC438((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523620);
      v6 = sub_1A5524178;
LABEL_12:
      sub_1A5834E00((uint64_t)v19, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))v6);
      goto LABEL_17;
    }
LABEL_6:
    sub_1A55032A0((uint64_t)v21, (uint64_t)v19, &qword_1EE798598);
    sub_1A55032A0((uint64_t)v22, (uint64_t)v20, &qword_1EE798598);
    sub_1A55DC438((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523620);
    sub_1A55DC438((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523620);
    v6 = sub_1A5524104;
    goto LABEL_12;
  }
  sub_1A55032A0((uint64_t)v22, (uint64_t)v19, &qword_1EE798598);
  if (sub_1A5529F68((uint64_t)v19) != 1)
    goto LABEL_6;
LABEL_14:
  v8 = sub_1A594ADAC();
  v9 = sub_1A594ADAC();
  if (*(_QWORD *)(v8 + 16) != *(_QWORD *)(v9 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v10 = sub_1A5829A38(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_1A58349E8()
{
  return sub_1A594AD88();
}

uint64_t sub_1A5834A28@<X0>(uint64_t __s2@<X0>, void *__s1@<X2>, uint64_t a3@<X3>, BOOL *a4@<X8>)
{
  if (__s1)
  {
    if (__s2)
    {
      __s2 = memcmp(__s1, (const void *)__s2, a3 - (_QWORD)__s1);
      *a4 = (_DWORD)__s2 == 0;
      return __s2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return __s2;
}

uint64_t _s16IMAP2Persistence18MessageSectionDataV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((*(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned int *)(a1 + 8) << 32)) != (*(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned int *)(a2 + 8) << 32))
    || !sub_1A578ECF4(*(_QWORD *)a1, *(_QWORD *)a2)
    || *(_DWORD *)(a2 + 12) != *(_DWORD *)(a1 + 12)
    || (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*(_QWORD *)(a1 + 16)) & 1) == 0)
  {
    return 0;
  }
  v4 = *(int *)(type metadata accessor for MessageSectionData(0) + 28);
  return == infix(_:_:)(a1 + v4, a2 + v4);
}

uint64_t type metadata accessor for MessageSectionData(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7985B8);
}

uint64_t sub_1A5834B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MessageSectionData.Segment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MessageSectionData.Segment(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7985A0);
}

uint64_t sub_1A5834B74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MessageSectionData.Segment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5834BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MessageSectionData.Segment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5834BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _s16IMAP2Persistence18MessageSectionDataV7SegmentV7InitialV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  _BYTE v6[184];
  _BYTE v7[184];
  _BYTE v8[184];
  _BYTE v9[184];
  uint64_t v10;
  _BYTE v11[184];
  _BYTE v12[184];
  _BYTE v13[184];
  _BYTE v14[184];

  sub_1A55032A0(a1, (uint64_t)v12, &qword_1EE796958);
  sub_1A55032A0(a2, (uint64_t)v13, &qword_1EE796958);
  sub_1A55032A0((uint64_t)v12, (uint64_t)v14, &qword_1EE796958);
  if (sub_1A55DC41C((uint64_t)v14) != 1)
  {
    sub_1A55032A0((uint64_t)v13, (uint64_t)v8, &qword_1EE796958);
    if (sub_1A55DC41C((uint64_t)v8) != 1)
    {
      sub_1A55032A0((uint64_t)v12, (uint64_t)v6, &qword_1EE796958);
      sub_1A55DC3E0(v6, v11);
      sub_1A55032A0((uint64_t)v13, (uint64_t)v7, &qword_1EE796958);
      sub_1A55DC3E0(v7, v9);
      sub_1A55DC438(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
      sub_1A55DC438(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
      v4 = static BodyStructure.__derived_enum_equals(_:_:)();
      sub_1A55DC438(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
      sub_1A55DC438(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
      return v4 & 1;
    }
    goto LABEL_5;
  }
  sub_1A55032A0((uint64_t)v13, (uint64_t)v9, &qword_1EE796958);
  if (sub_1A55DC41C((uint64_t)v9) != 1)
  {
LABEL_5:
    sub_1A55032A0((uint64_t)v12, (uint64_t)v9, &qword_1EE796958);
    sub_1A55032A0((uint64_t)v13, (uint64_t)&v10, &qword_1EE796958);
    sub_1A55DC438(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
    sub_1A55DC438(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
    sub_1A5834E00((uint64_t)v9, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1A5524178);
    v4 = 0;
    return v4 & 1;
  }
  sub_1A55DC438(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
  v4 = 1;
  return v4 & 1;
}

uint64_t sub_1A5834E00(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v13;
  int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = *(_QWORD *)(a1 + 192);
  v23 = *(_QWORD *)(a1 + 184);
  v4 = *(_QWORD *)(a1 + 208);
  v21 = *(_QWORD *)(a1 + 200);
  v5 = *(_QWORD *)(a1 + 216);
  v6 = *(_QWORD *)(a1 + 224);
  v7 = *(_QWORD *)(a1 + 232);
  v8 = *(_QWORD *)(a1 + 240);
  v19 = *(_OWORD *)(a1 + 264);
  v20 = *(_OWORD *)(a1 + 248);
  v18 = *(_OWORD *)(a1 + 280);
  v16 = *(_OWORD *)(a1 + 312);
  v17 = *(_OWORD *)(a1 + 296);
  v15 = *(_OWORD *)(a1 + 328);
  v9 = *(_QWORD *)(a1 + 344);
  v10 = *(_QWORD *)(a1 + 352);
  v11 = *(_BYTE *)(a1 + 360);
  v13 = *(_BYTE *)(a1 + 176);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    v13);
  LOBYTE(v14) = v11;
  a2(v23, v22, v21, v4, v5, v6, v7, v8, v20, *((_QWORD *)&v20 + 1), v19, *((_QWORD *)&v19 + 1), v18, *((_QWORD *)&v18 + 1), v17, *((_QWORD *)&v17 + 1), v16, *((_QWORD *)&v16 + 1), v15,
    *((_QWORD *)&v15 + 1),
    v9,
    v10,
    v14);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for MessageSectionData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    a1[1] = a2[1];
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 28);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1A594AE60();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v10(v7, v8, v9);
    v11 = type metadata accessor for MessageSectionData.Segment(0);
    v7[*(int *)(v11 + 20)] = v8[*(int *)(v11 + 20)];
    v12 = *(int *)(v11 + 24);
    v13 = &v7[v12];
    v14 = &v8[v12];
    v15 = v14[176];
    if (v15 == 254 || v15 == 255)
    {
      v16 = *((_OWORD *)v14 + 9);
      *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
      *((_OWORD *)v13 + 9) = v16;
      *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
      v13[176] = v14[176];
      v17 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v17;
      v18 = *((_OWORD *)v14 + 7);
      *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
      *((_OWORD *)v13 + 7) = v18;
      v19 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v19;
      v20 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v20;
    }
    else
    {
      v44 = v15 & 1;
      v21 = *((_QWORD *)v14 + 4);
      v22 = *((_QWORD *)v14 + 5);
      v23 = *((_QWORD *)v14 + 6);
      v30 = *((_QWORD *)v14 + 8);
      v31 = *((_QWORD *)v14 + 9);
      v32 = *((_QWORD *)v14 + 10);
      v33 = *((_QWORD *)v14 + 11);
      v34 = *((_QWORD *)v14 + 12);
      v35 = *((_QWORD *)v14 + 13);
      v36 = *((_QWORD *)v14 + 14);
      v37 = *((_QWORD *)v14 + 15);
      v38 = *((_QWORD *)v14 + 16);
      v39 = *((_QWORD *)v14 + 17);
      v40 = *((_QWORD *)v14 + 18);
      v41 = *((_QWORD *)v14 + 19);
      v42 = *((_QWORD *)v14 + 20);
      v43 = *((_QWORD *)v14 + 21);
      v24 = *(_QWORD *)v14;
      v25 = *((_QWORD *)v14 + 1);
      v26 = *((_QWORD *)v14 + 2);
      v27 = *((_QWORD *)v14 + 3);
      v28 = *((_QWORD *)v14 + 7);
      sub_1A552370C(*(_QWORD *)v14, v25, v26, v27, v21, v22, v23, v28, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
        v41,
        v42,
        v43,
        v15 & 1);
      *(_QWORD *)v13 = v24;
      *((_QWORD *)v13 + 1) = v25;
      *((_QWORD *)v13 + 2) = v26;
      *((_QWORD *)v13 + 3) = v27;
      *((_QWORD *)v13 + 4) = v21;
      *((_QWORD *)v13 + 5) = v22;
      *((_QWORD *)v13 + 6) = v23;
      *((_QWORD *)v13 + 7) = v28;
      *((_QWORD *)v13 + 8) = v30;
      *((_QWORD *)v13 + 9) = v31;
      *((_QWORD *)v13 + 10) = v32;
      *((_QWORD *)v13 + 11) = v33;
      *((_QWORD *)v13 + 12) = v34;
      *((_QWORD *)v13 + 13) = v35;
      *((_QWORD *)v13 + 14) = v36;
      *((_QWORD *)v13 + 15) = v37;
      *((_QWORD *)v13 + 16) = v38;
      *((_QWORD *)v13 + 17) = v39;
      *((_QWORD *)v13 + 18) = v40;
      *((_QWORD *)v13 + 19) = v41;
      *((_QWORD *)v13 + 20) = v42;
      *((_QWORD *)v13 + 21) = v43;
      v13[176] = v44;
    }
  }
  return v5;
}

void destroy for MessageSectionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v4 + *(int *)(type metadata accessor for MessageSectionData.Segment(0) + 24);
  v7 = *(unsigned __int8 *)(v6 + 176);
  if (v7 <= 0xFD)
    sub_1A55241F0(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_QWORD *)(v6 + 72), *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), *(_QWORD *)(v6 + 96), *(_QWORD *)(v6 + 104), *(_QWORD *)(v6 + 112), *(_QWORD *)(v6 + 120), *(_QWORD *)(v6 + 128), *(_QWORD *)(v6 + 136), *(_QWORD *)(v6 + 144),
      *(_QWORD *)(v6 + 152),
      *(_QWORD *)(v6 + 160),
      *(_QWORD *)(v6 + 168),
      v7 & 1);
}

_QWORD *initializeWithCopy for MessageSectionData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = *(int *)(a3 + 28);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A594AE60();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(v5, v6, v7);
  v9 = type metadata accessor for MessageSectionData.Segment(0);
  v5[*(int *)(v9 + 20)] = v6[*(int *)(v9 + 20)];
  v10 = *(int *)(v9 + 24);
  v11 = &v5[v10];
  v12 = &v6[v10];
  v13 = v12[176];
  if (v13 == 254 || v13 == 255)
  {
    v14 = *((_OWORD *)v12 + 9);
    *((_OWORD *)v11 + 8) = *((_OWORD *)v12 + 8);
    *((_OWORD *)v11 + 9) = v14;
    *((_OWORD *)v11 + 10) = *((_OWORD *)v12 + 10);
    v11[176] = v12[176];
    v15 = *((_OWORD *)v12 + 5);
    *((_OWORD *)v11 + 4) = *((_OWORD *)v12 + 4);
    *((_OWORD *)v11 + 5) = v15;
    v16 = *((_OWORD *)v12 + 7);
    *((_OWORD *)v11 + 6) = *((_OWORD *)v12 + 6);
    *((_OWORD *)v11 + 7) = v16;
    v17 = *((_OWORD *)v12 + 1);
    *(_OWORD *)v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v17;
    v18 = *((_OWORD *)v12 + 3);
    *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
    *((_OWORD *)v11 + 3) = v18;
  }
  else
  {
    v42 = v13 & 1;
    v19 = *((_QWORD *)v12 + 4);
    v20 = *((_QWORD *)v12 + 5);
    v21 = *((_QWORD *)v12 + 6);
    v28 = *((_QWORD *)v12 + 8);
    v29 = *((_QWORD *)v12 + 9);
    v30 = *((_QWORD *)v12 + 10);
    v31 = *((_QWORD *)v12 + 11);
    v32 = *((_QWORD *)v12 + 12);
    v33 = *((_QWORD *)v12 + 13);
    v34 = *((_QWORD *)v12 + 14);
    v35 = *((_QWORD *)v12 + 15);
    v36 = *((_QWORD *)v12 + 16);
    v37 = *((_QWORD *)v12 + 17);
    v38 = *((_QWORD *)v12 + 18);
    v39 = *((_QWORD *)v12 + 19);
    v40 = *((_QWORD *)v12 + 20);
    v41 = *((_QWORD *)v12 + 21);
    v22 = *(_QWORD *)v12;
    v23 = *((_QWORD *)v12 + 1);
    v24 = *((_QWORD *)v12 + 2);
    v25 = *((_QWORD *)v12 + 3);
    v26 = *((_QWORD *)v12 + 7);
    sub_1A552370C(*(_QWORD *)v12, v23, v24, v25, v19, v20, v21, v26, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38,
      v39,
      v40,
      v41,
      v13 & 1);
    *(_QWORD *)v11 = v22;
    *((_QWORD *)v11 + 1) = v23;
    *((_QWORD *)v11 + 2) = v24;
    *((_QWORD *)v11 + 3) = v25;
    *((_QWORD *)v11 + 4) = v19;
    *((_QWORD *)v11 + 5) = v20;
    *((_QWORD *)v11 + 6) = v21;
    *((_QWORD *)v11 + 7) = v26;
    *((_QWORD *)v11 + 8) = v28;
    *((_QWORD *)v11 + 9) = v29;
    *((_QWORD *)v11 + 10) = v30;
    *((_QWORD *)v11 + 11) = v31;
    *((_QWORD *)v11 + 12) = v32;
    *((_QWORD *)v11 + 13) = v33;
    *((_QWORD *)v11 + 14) = v34;
    *((_QWORD *)v11 + 15) = v35;
    *((_QWORD *)v11 + 16) = v36;
    *((_QWORD *)v11 + 17) = v37;
    *((_QWORD *)v11 + 18) = v38;
    *((_QWORD *)v11 + 19) = v39;
    *((_QWORD *)v11 + 20) = v40;
    *((_QWORD *)v11 + 21) = v41;
    v11[176] = v42;
  }
  return a1;
}

uint64_t assignWithCopy for MessageSectionData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  int v14;
  int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = type metadata accessor for MessageSectionData.Segment(0);
  *(_BYTE *)(v7 + *(int *)(v10 + 20)) = *(_BYTE *)(v8 + *(int *)(v10 + 20));
  v11 = *(int *)(v10 + 24);
  v12 = v7 + v11;
  v13 = (__int128 *)(v8 + v11);
  v14 = *(unsigned __int8 *)(v12 + 176);
  v15 = *((unsigned __int8 *)v13 + 176);
  if (v14 == 254)
  {
    if (v15 == 254)
      goto LABEL_8;
    goto LABEL_7;
  }
  if (v15 == 254)
  {
    sub_1A5835844(v12);
LABEL_12:
    v37 = v13[3];
    v39 = *v13;
    v38 = v13[1];
    *(_OWORD *)(v12 + 32) = v13[2];
    *(_OWORD *)(v12 + 48) = v37;
    *(_OWORD *)v12 = v39;
    *(_OWORD *)(v12 + 16) = v38;
    v40 = v13[7];
    v42 = v13[4];
    v41 = v13[5];
    *(_OWORD *)(v12 + 96) = v13[6];
    *(_OWORD *)(v12 + 112) = v40;
    *(_OWORD *)(v12 + 64) = v42;
    *(_OWORD *)(v12 + 80) = v41;
    v44 = v13[9];
    v43 = v13[10];
    v45 = v13[8];
    *(_BYTE *)(v12 + 176) = *((_BYTE *)v13 + 176);
    *(_OWORD *)(v12 + 144) = v44;
    *(_OWORD *)(v12 + 160) = v43;
    *(_OWORD *)(v12 + 128) = v45;
    return a1;
  }
  if (v14 != 255)
  {
    if (v15 != 255)
    {
      v105 = v15 & 1;
      v47 = *((_QWORD *)v13 + 1);
      v48 = *((_QWORD *)v13 + 2);
      v49 = *((_QWORD *)v13 + 3);
      v50 = *((_QWORD *)v13 + 4);
      v51 = *((_QWORD *)v13 + 5);
      v53 = *((_QWORD *)v13 + 6);
      v52 = *((_QWORD *)v13 + 7);
      v77 = *((_QWORD *)v13 + 8);
      v79 = *((_QWORD *)v13 + 9);
      v81 = *((_QWORD *)v13 + 10);
      v83 = *((_QWORD *)v13 + 11);
      v85 = *((_QWORD *)v13 + 12);
      v87 = *((_QWORD *)v13 + 13);
      v89 = *((_QWORD *)v13 + 14);
      v91 = *((_QWORD *)v13 + 15);
      v93 = *((_QWORD *)v13 + 16);
      v95 = *((_QWORD *)v13 + 17);
      v97 = *((_QWORD *)v13 + 18);
      v99 = *((_QWORD *)v13 + 19);
      v101 = *((_QWORD *)v13 + 20);
      v103 = *((_QWORD *)v13 + 21);
      v54 = *(_QWORD *)v13;
      v55 = v47;
      v56 = v48;
      v57 = v49;
      v58 = v52;
      sub_1A552370C(v54, v47, v48, v49, v50, v51, v53, v52, v77, v79, v81, v83, v85, v87, v89, v91, v93, v95, v97,
        v99,
        v101,
        v103,
        v15 & 1);
      v59 = *(_QWORD *)v12;
      v60 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)v12 = v54;
      *(_QWORD *)(v12 + 8) = v55;
      v61 = *(_QWORD *)(v12 + 16);
      v62 = *(_QWORD *)(v12 + 24);
      *(_QWORD *)(v12 + 16) = v56;
      *(_QWORD *)(v12 + 24) = v57;
      v63 = *(_QWORD *)(v12 + 32);
      v64 = *(_QWORD *)(v12 + 40);
      *(_QWORD *)(v12 + 32) = v50;
      *(_QWORD *)(v12 + 40) = v51;
      v65 = *(_QWORD *)(v12 + 48);
      v66 = *(_QWORD *)(v12 + 56);
      *(_QWORD *)(v12 + 48) = v53;
      *(_QWORD *)(v12 + 56) = v58;
      v67 = *(_OWORD *)(v12 + 64);
      v68 = *(_OWORD *)(v12 + 80);
      *(_QWORD *)(v12 + 64) = v77;
      *(_QWORD *)(v12 + 72) = v79;
      *(_QWORD *)(v12 + 80) = v81;
      *(_QWORD *)(v12 + 88) = v83;
      v69 = *(_OWORD *)(v12 + 96);
      v70 = *(_OWORD *)(v12 + 112);
      *(_QWORD *)(v12 + 96) = v85;
      *(_QWORD *)(v12 + 104) = v87;
      *(_QWORD *)(v12 + 112) = v89;
      *(_QWORD *)(v12 + 120) = v91;
      v71 = *(_OWORD *)(v12 + 128);
      v72 = *(_OWORD *)(v12 + 144);
      *(_QWORD *)(v12 + 128) = v93;
      *(_QWORD *)(v12 + 136) = v95;
      *(_QWORD *)(v12 + 144) = v97;
      *(_QWORD *)(v12 + 152) = v99;
      v73 = *(_QWORD *)(v12 + 160);
      v74 = *(_QWORD *)(v12 + 168);
      *(_QWORD *)(v12 + 160) = v101;
      *(_QWORD *)(v12 + 168) = v103;
      v75 = *(_BYTE *)(v12 + 176);
      *(_BYTE *)(v12 + 176) = v105;
      sub_1A55241F0(v59, v60, v61, v62, v63, v64, v65, v66, v67, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v69, *((uint64_t *)&v69 + 1), v70, *((uint64_t *)&v70 + 1), v71, *((uint64_t *)&v71 + 1), v72,
        *((uint64_t *)&v72 + 1),
        v73,
        v74,
        v75);
      return a1;
    }
    sub_1A55D9BBC(v12);
    goto LABEL_12;
  }
LABEL_7:
  if (v15 != 255)
  {
    v104 = v15 & 1;
    v25 = *((_QWORD *)v13 + 1);
    v26 = *((_QWORD *)v13 + 2);
    v27 = *((_QWORD *)v13 + 3);
    v28 = *((_QWORD *)v13 + 4);
    v29 = *((_QWORD *)v13 + 5);
    v31 = *((_QWORD *)v13 + 6);
    v30 = *((_QWORD *)v13 + 7);
    v76 = *((_QWORD *)v13 + 8);
    v78 = *((_QWORD *)v13 + 9);
    v80 = *((_QWORD *)v13 + 10);
    v82 = *((_QWORD *)v13 + 11);
    v84 = *((_QWORD *)v13 + 12);
    v86 = *((_QWORD *)v13 + 13);
    v88 = *((_QWORD *)v13 + 14);
    v90 = *((_QWORD *)v13 + 15);
    v92 = *((_QWORD *)v13 + 16);
    v94 = *((_QWORD *)v13 + 17);
    v96 = *((_QWORD *)v13 + 18);
    v98 = *((_QWORD *)v13 + 19);
    v100 = *((_QWORD *)v13 + 20);
    v102 = *((_QWORD *)v13 + 21);
    v32 = *(_QWORD *)v13;
    v33 = v25;
    v34 = v26;
    v35 = v27;
    v36 = v30;
    sub_1A552370C(v32, v25, v26, v27, v28, v29, v31, v30, v76, v78, v80, v82, v84, v86, v88, v90, v92, v94, v96,
      v98,
      v100,
      v102,
      v15 & 1);
    *(_QWORD *)v12 = v32;
    *(_QWORD *)(v12 + 8) = v33;
    *(_QWORD *)(v12 + 16) = v34;
    *(_QWORD *)(v12 + 24) = v35;
    *(_QWORD *)(v12 + 32) = v28;
    *(_QWORD *)(v12 + 40) = v29;
    *(_QWORD *)(v12 + 48) = v31;
    *(_QWORD *)(v12 + 56) = v36;
    *(_QWORD *)(v12 + 64) = v76;
    *(_QWORD *)(v12 + 72) = v78;
    *(_QWORD *)(v12 + 80) = v80;
    *(_QWORD *)(v12 + 88) = v82;
    *(_QWORD *)(v12 + 96) = v84;
    *(_QWORD *)(v12 + 104) = v86;
    *(_QWORD *)(v12 + 112) = v88;
    *(_QWORD *)(v12 + 120) = v90;
    *(_QWORD *)(v12 + 128) = v92;
    *(_QWORD *)(v12 + 136) = v94;
    *(_QWORD *)(v12 + 144) = v96;
    *(_QWORD *)(v12 + 152) = v98;
    *(_QWORD *)(v12 + 160) = v100;
    *(_QWORD *)(v12 + 168) = v102;
    *(_BYTE *)(v12 + 176) = v104;
    return a1;
  }
LABEL_8:
  v16 = *v13;
  v17 = v13[1];
  v18 = v13[3];
  *(_OWORD *)(v12 + 32) = v13[2];
  *(_OWORD *)(v12 + 48) = v18;
  *(_OWORD *)v12 = v16;
  *(_OWORD *)(v12 + 16) = v17;
  v19 = v13[4];
  v20 = v13[5];
  v21 = v13[7];
  *(_OWORD *)(v12 + 96) = v13[6];
  *(_OWORD *)(v12 + 112) = v21;
  *(_OWORD *)(v12 + 64) = v19;
  *(_OWORD *)(v12 + 80) = v20;
  v22 = v13[8];
  v23 = v13[9];
  v24 = v13[10];
  *(_BYTE *)(v12 + 176) = *((_BYTE *)v13 + 176);
  *(_OWORD *)(v12 + 144) = v23;
  *(_OWORD *)(v12 + 160) = v24;
  *(_OWORD *)(v12 + 128) = v22;
  return a1;
}

uint64_t sub_1A5835844(uint64_t a1)
{
  destroy for MessageSectionData.Segment.Initial(a1);
  return a1;
}

uint64_t initializeWithTake for MessageSectionData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  v9 = type metadata accessor for MessageSectionData.Segment(0);
  *(_BYTE *)(v6 + *(int *)(v9 + 20)) = *(_BYTE *)(v7 + *(int *)(v9 + 20));
  v10 = *(int *)(v9 + 24);
  v11 = v6 + v10;
  v12 = v7 + v10;
  v13 = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v11 + 48) = v13;
  v14 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v14;
  v15 = *(_OWORD *)(v12 + 112);
  *(_OWORD *)(v11 + 96) = *(_OWORD *)(v12 + 96);
  *(_OWORD *)(v11 + 112) = v15;
  v16 = *(_OWORD *)(v12 + 80);
  *(_OWORD *)(v11 + 64) = *(_OWORD *)(v12 + 64);
  *(_OWORD *)(v11 + 80) = v16;
  *(_BYTE *)(v11 + 176) = *(_BYTE *)(v12 + 176);
  v17 = *(_OWORD *)(v12 + 160);
  v18 = *(_OWORD *)(v12 + 128);
  *(_OWORD *)(v11 + 144) = *(_OWORD *)(v12 + 144);
  *(_OWORD *)(v11 + 160) = v17;
  *(_OWORD *)(v11 + 128) = v18;
  return a1;
}

_QWORD *assignWithTake for MessageSectionData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A594AE60();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = type metadata accessor for MessageSectionData.Segment(0);
  v7[*(int *)(v10 + 20)] = v8[*(int *)(v10 + 20)];
  v11 = *(int *)(v10 + 24);
  v12 = (uint64_t)&v7[v11];
  v13 = &v8[v11];
  v14 = *(unsigned __int8 *)(v12 + 176);
  if (v14 != 254)
  {
    v15 = v13[176];
    if (v15 == 254)
    {
      sub_1A5835844(v12);
    }
    else if (v14 != 255)
    {
      if (v15 != 255)
      {
        v22 = *(_QWORD *)v12;
        v23 = *(_QWORD *)(v12 + 8);
        v24 = *(_QWORD *)(v12 + 16);
        v25 = *(_QWORD *)(v12 + 24);
        v26 = *(_QWORD *)(v12 + 32);
        v27 = *(_QWORD *)(v12 + 40);
        v28 = *(_QWORD *)(v12 + 48);
        v29 = *(_QWORD *)(v12 + 56);
        v30 = *(_OWORD *)(v12 + 64);
        v31 = *(_OWORD *)(v12 + 80);
        v32 = *(_OWORD *)(v12 + 96);
        v33 = *(_OWORD *)(v12 + 112);
        v34 = *(_OWORD *)(v12 + 128);
        v35 = *(_OWORD *)(v12 + 144);
        v36 = *(_QWORD *)(v12 + 160);
        v37 = *(_QWORD *)(v12 + 168);
        v38 = *((_OWORD *)v13 + 1);
        *(_OWORD *)v12 = *(_OWORD *)v13;
        *(_OWORD *)(v12 + 16) = v38;
        v39 = *((_OWORD *)v13 + 3);
        *(_OWORD *)(v12 + 32) = *((_OWORD *)v13 + 2);
        *(_OWORD *)(v12 + 48) = v39;
        v40 = *((_OWORD *)v13 + 5);
        *(_OWORD *)(v12 + 64) = *((_OWORD *)v13 + 4);
        *(_OWORD *)(v12 + 80) = v40;
        v41 = *((_OWORD *)v13 + 7);
        *(_OWORD *)(v12 + 96) = *((_OWORD *)v13 + 6);
        *(_OWORD *)(v12 + 112) = v41;
        v42 = *((_OWORD *)v13 + 9);
        *(_OWORD *)(v12 + 128) = *((_OWORD *)v13 + 8);
        *(_OWORD *)(v12 + 144) = v42;
        *(_OWORD *)(v12 + 160) = *((_OWORD *)v13 + 10);
        *(_BYTE *)(v12 + 176) = v15 & 1;
        sub_1A55241F0(v22, v23, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v34, *((uint64_t *)&v34 + 1), v35,
          *((uint64_t *)&v35 + 1),
          v36,
          v37,
          v14 & 1);
        return a1;
      }
      sub_1A55D9BBC(v12);
    }
  }
  v16 = *((_OWORD *)v13 + 9);
  *(_OWORD *)(v12 + 128) = *((_OWORD *)v13 + 8);
  *(_OWORD *)(v12 + 144) = v16;
  *(_OWORD *)(v12 + 160) = *((_OWORD *)v13 + 10);
  *(_BYTE *)(v12 + 176) = v13[176];
  v17 = *((_OWORD *)v13 + 5);
  *(_OWORD *)(v12 + 64) = *((_OWORD *)v13 + 4);
  *(_OWORD *)(v12 + 80) = v17;
  v18 = *((_OWORD *)v13 + 7);
  *(_OWORD *)(v12 + 96) = *((_OWORD *)v13 + 6);
  *(_OWORD *)(v12 + 112) = v18;
  v19 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v19;
  v20 = *((_OWORD *)v13 + 3);
  *(_OWORD *)(v12 + 32) = *((_OWORD *)v13 + 2);
  *(_OWORD *)(v12 + 48) = v20;
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageSectionData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5835AD8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for MessageSectionData.Segment(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MessageSectionData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1A5835B60(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for MessageSectionData.Segment(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A5835BD4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MessageSectionData.Segment(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for MessageSectionData.Segment(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594AE60();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((unsigned __int8 *)a2 + v8 + 176);
    if (v11 == 254 || v11 == 255)
    {
      v12 = *((_OWORD *)v10 + 9);
      *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
      *((_OWORD *)v9 + 9) = v12;
      *((_OWORD *)v9 + 10) = *((_OWORD *)v10 + 10);
      v9[176] = v10[176];
      v13 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v13;
      v14 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v14;
      v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
      v16 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v16;
    }
    else
    {
      v41 = v11 & 1;
      v18 = *((_QWORD *)v10 + 4);
      v19 = *((_QWORD *)v10 + 5);
      v20 = *((_QWORD *)v10 + 6);
      v27 = *((_QWORD *)v10 + 8);
      v28 = *((_QWORD *)v10 + 9);
      v29 = *((_QWORD *)v10 + 10);
      v30 = *((_QWORD *)v10 + 11);
      v31 = *((_QWORD *)v10 + 12);
      v32 = *((_QWORD *)v10 + 13);
      v33 = *((_QWORD *)v10 + 14);
      v34 = *((_QWORD *)v10 + 15);
      v35 = *((_QWORD *)v10 + 16);
      v36 = *((_QWORD *)v10 + 17);
      v37 = *((_QWORD *)v10 + 18);
      v38 = *((_QWORD *)v10 + 19);
      v39 = *((_QWORD *)v10 + 20);
      v40 = *((_QWORD *)v10 + 21);
      v21 = *(_QWORD *)v10;
      v22 = *((_QWORD *)v10 + 1);
      v23 = *((_QWORD *)v10 + 2);
      v24 = *((_QWORD *)v10 + 3);
      v25 = *((_QWORD *)v10 + 7);
      sub_1A552370C(*(_QWORD *)v10, v22, v23, v24, v18, v19, v20, v25, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37,
        v38,
        v39,
        v40,
        v11 & 1);
      *(_QWORD *)v9 = v21;
      *((_QWORD *)v9 + 1) = v22;
      *((_QWORD *)v9 + 2) = v23;
      *((_QWORD *)v9 + 3) = v24;
      *((_QWORD *)v9 + 4) = v18;
      *((_QWORD *)v9 + 5) = v19;
      *((_QWORD *)v9 + 6) = v20;
      *((_QWORD *)v9 + 7) = v25;
      *((_QWORD *)v9 + 8) = v27;
      *((_QWORD *)v9 + 9) = v28;
      *((_QWORD *)v9 + 10) = v29;
      *((_QWORD *)v9 + 11) = v30;
      *((_QWORD *)v9 + 12) = v31;
      *((_QWORD *)v9 + 13) = v32;
      *((_QWORD *)v9 + 14) = v33;
      *((_QWORD *)v9 + 15) = v34;
      *((_QWORD *)v9 + 16) = v35;
      *((_QWORD *)v9 + 17) = v36;
      *((_QWORD *)v9 + 18) = v37;
      *((_QWORD *)v9 + 19) = v38;
      *((_QWORD *)v9 + 20) = v39;
      *((_QWORD *)v9 + 21) = v40;
      v9[176] = v41;
    }
  }
  return a1;
}

void destroy for MessageSectionData.Segment(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v4 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = *(unsigned __int8 *)(v5 + 176);
  if (v6 <= 0xFD)
    sub_1A55241F0(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 96), *(_QWORD *)(v5 + 104), *(_QWORD *)(v5 + 112), *(_QWORD *)(v5 + 120), *(_QWORD *)(v5 + 128), *(_QWORD *)(v5 + 136), *(_QWORD *)(v5 + 144),
      *(_QWORD *)(v5 + 152),
      *(_QWORD *)(v5 + 160),
      *(_QWORD *)(v5 + 168),
      v6 & 1);
}

uint64_t initializeWithCopy for MessageSectionData.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  int v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(unsigned __int8 *)(a2 + v7 + 176);
  if (v10 == 254 || v10 == 255)
  {
    v11 = *((_OWORD *)v9 + 9);
    *(_OWORD *)(v8 + 128) = *((_OWORD *)v9 + 8);
    *(_OWORD *)(v8 + 144) = v11;
    *(_OWORD *)(v8 + 160) = *((_OWORD *)v9 + 10);
    *(_BYTE *)(v8 + 176) = *((_BYTE *)v9 + 176);
    v12 = *((_OWORD *)v9 + 5);
    *(_OWORD *)(v8 + 64) = *((_OWORD *)v9 + 4);
    *(_OWORD *)(v8 + 80) = v12;
    v13 = *((_OWORD *)v9 + 7);
    *(_OWORD *)(v8 + 96) = *((_OWORD *)v9 + 6);
    *(_OWORD *)(v8 + 112) = v13;
    v14 = *((_OWORD *)v9 + 1);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v14;
    v15 = *((_OWORD *)v9 + 3);
    *(_OWORD *)(v8 + 32) = *((_OWORD *)v9 + 2);
    *(_OWORD *)(v8 + 48) = v15;
  }
  else
  {
    v39 = v10 & 1;
    v16 = v9[4];
    v17 = v9[5];
    v18 = v9[6];
    v25 = v9[8];
    v26 = v9[9];
    v27 = v9[10];
    v28 = v9[11];
    v29 = v9[12];
    v30 = v9[13];
    v31 = v9[14];
    v32 = v9[15];
    v33 = v9[16];
    v34 = v9[17];
    v35 = v9[18];
    v36 = v9[19];
    v37 = v9[20];
    v38 = v9[21];
    v19 = *v9;
    v20 = v9[1];
    v21 = v9[2];
    v22 = v9[3];
    v23 = v9[7];
    sub_1A552370C(*v9, v20, v21, v22, v16, v17, v18, v23, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v10 & 1);
    *(_QWORD *)v8 = v19;
    *(_QWORD *)(v8 + 8) = v20;
    *(_QWORD *)(v8 + 16) = v21;
    *(_QWORD *)(v8 + 24) = v22;
    *(_QWORD *)(v8 + 32) = v16;
    *(_QWORD *)(v8 + 40) = v17;
    *(_QWORD *)(v8 + 48) = v18;
    *(_QWORD *)(v8 + 56) = v23;
    *(_QWORD *)(v8 + 64) = v25;
    *(_QWORD *)(v8 + 72) = v26;
    *(_QWORD *)(v8 + 80) = v27;
    *(_QWORD *)(v8 + 88) = v28;
    *(_QWORD *)(v8 + 96) = v29;
    *(_QWORD *)(v8 + 104) = v30;
    *(_QWORD *)(v8 + 112) = v31;
    *(_QWORD *)(v8 + 120) = v32;
    *(_QWORD *)(v8 + 128) = v33;
    *(_QWORD *)(v8 + 136) = v34;
    *(_QWORD *)(v8 + 144) = v35;
    *(_QWORD *)(v8 + 152) = v36;
    *(_QWORD *)(v8 + 160) = v37;
    *(_QWORD *)(v8 + 168) = v38;
    *(_BYTE *)(v8 + 176) = v39;
  }
  return a1;
}

uint64_t assignWithCopy for MessageSectionData.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  int v10;
  int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(unsigned __int8 *)(a1 + v7 + 176);
  v11 = *((unsigned __int8 *)v9 + 176);
  if (v10 == 254)
  {
    if (v11 == 254)
      goto LABEL_8;
    goto LABEL_7;
  }
  if (v11 == 254)
  {
    sub_1A5835844(v8);
LABEL_12:
    v33 = v9[3];
    v35 = *v9;
    v34 = v9[1];
    *(_OWORD *)(v8 + 32) = v9[2];
    *(_OWORD *)(v8 + 48) = v33;
    *(_OWORD *)v8 = v35;
    *(_OWORD *)(v8 + 16) = v34;
    v36 = v9[7];
    v38 = v9[4];
    v37 = v9[5];
    *(_OWORD *)(v8 + 96) = v9[6];
    *(_OWORD *)(v8 + 112) = v36;
    *(_OWORD *)(v8 + 64) = v38;
    *(_OWORD *)(v8 + 80) = v37;
    v40 = v9[9];
    v39 = v9[10];
    v41 = v9[8];
    *(_BYTE *)(v8 + 176) = *((_BYTE *)v9 + 176);
    *(_OWORD *)(v8 + 144) = v40;
    *(_OWORD *)(v8 + 160) = v39;
    *(_OWORD *)(v8 + 128) = v41;
    return a1;
  }
  if (v10 != 255)
  {
    if (v11 != 255)
    {
      v101 = v11 & 1;
      v43 = *((_QWORD *)v9 + 1);
      v44 = *((_QWORD *)v9 + 2);
      v45 = *((_QWORD *)v9 + 3);
      v46 = *((_QWORD *)v9 + 4);
      v47 = *((_QWORD *)v9 + 5);
      v49 = *((_QWORD *)v9 + 6);
      v48 = *((_QWORD *)v9 + 7);
      v73 = *((_QWORD *)v9 + 8);
      v75 = *((_QWORD *)v9 + 9);
      v77 = *((_QWORD *)v9 + 10);
      v79 = *((_QWORD *)v9 + 11);
      v81 = *((_QWORD *)v9 + 12);
      v83 = *((_QWORD *)v9 + 13);
      v85 = *((_QWORD *)v9 + 14);
      v87 = *((_QWORD *)v9 + 15);
      v89 = *((_QWORD *)v9 + 16);
      v91 = *((_QWORD *)v9 + 17);
      v93 = *((_QWORD *)v9 + 18);
      v95 = *((_QWORD *)v9 + 19);
      v97 = *((_QWORD *)v9 + 20);
      v99 = *((_QWORD *)v9 + 21);
      v50 = *(_QWORD *)v9;
      v51 = v43;
      v52 = v44;
      v53 = v45;
      v54 = v48;
      sub_1A552370C(v50, v43, v44, v45, v46, v47, v49, v48, v73, v75, v77, v79, v81, v83, v85, v87, v89, v91, v93,
        v95,
        v97,
        v99,
        v11 & 1);
      v55 = *(_QWORD *)v8;
      v56 = *(_QWORD *)(v8 + 8);
      *(_QWORD *)v8 = v50;
      *(_QWORD *)(v8 + 8) = v51;
      v57 = *(_QWORD *)(v8 + 16);
      v58 = *(_QWORD *)(v8 + 24);
      *(_QWORD *)(v8 + 16) = v52;
      *(_QWORD *)(v8 + 24) = v53;
      v59 = *(_QWORD *)(v8 + 32);
      v60 = *(_QWORD *)(v8 + 40);
      *(_QWORD *)(v8 + 32) = v46;
      *(_QWORD *)(v8 + 40) = v47;
      v61 = *(_QWORD *)(v8 + 48);
      v62 = *(_QWORD *)(v8 + 56);
      *(_QWORD *)(v8 + 48) = v49;
      *(_QWORD *)(v8 + 56) = v54;
      v63 = *(_OWORD *)(v8 + 64);
      v64 = *(_OWORD *)(v8 + 80);
      *(_QWORD *)(v8 + 64) = v73;
      *(_QWORD *)(v8 + 72) = v75;
      *(_QWORD *)(v8 + 80) = v77;
      *(_QWORD *)(v8 + 88) = v79;
      v65 = *(_OWORD *)(v8 + 96);
      v66 = *(_OWORD *)(v8 + 112);
      *(_QWORD *)(v8 + 96) = v81;
      *(_QWORD *)(v8 + 104) = v83;
      *(_QWORD *)(v8 + 112) = v85;
      *(_QWORD *)(v8 + 120) = v87;
      v67 = *(_OWORD *)(v8 + 128);
      v68 = *(_OWORD *)(v8 + 144);
      *(_QWORD *)(v8 + 128) = v89;
      *(_QWORD *)(v8 + 136) = v91;
      *(_QWORD *)(v8 + 144) = v93;
      *(_QWORD *)(v8 + 152) = v95;
      v69 = *(_QWORD *)(v8 + 160);
      v70 = *(_QWORD *)(v8 + 168);
      *(_QWORD *)(v8 + 160) = v97;
      *(_QWORD *)(v8 + 168) = v99;
      v71 = *(_BYTE *)(v8 + 176);
      *(_BYTE *)(v8 + 176) = v101;
      sub_1A55241F0(v55, v56, v57, v58, v59, v60, v61, v62, v63, *((uint64_t *)&v63 + 1), v64, *((uint64_t *)&v64 + 1), v65, *((uint64_t *)&v65 + 1), v66, *((uint64_t *)&v66 + 1), v67, *((uint64_t *)&v67 + 1), v68,
        *((uint64_t *)&v68 + 1),
        v69,
        v70,
        v71);
      return a1;
    }
    sub_1A55D9BBC(v8);
    goto LABEL_12;
  }
LABEL_7:
  if (v11 != 255)
  {
    v100 = v11 & 1;
    v21 = *((_QWORD *)v9 + 1);
    v22 = *((_QWORD *)v9 + 2);
    v23 = *((_QWORD *)v9 + 3);
    v24 = *((_QWORD *)v9 + 4);
    v25 = *((_QWORD *)v9 + 5);
    v27 = *((_QWORD *)v9 + 6);
    v26 = *((_QWORD *)v9 + 7);
    v72 = *((_QWORD *)v9 + 8);
    v74 = *((_QWORD *)v9 + 9);
    v76 = *((_QWORD *)v9 + 10);
    v78 = *((_QWORD *)v9 + 11);
    v80 = *((_QWORD *)v9 + 12);
    v82 = *((_QWORD *)v9 + 13);
    v84 = *((_QWORD *)v9 + 14);
    v86 = *((_QWORD *)v9 + 15);
    v88 = *((_QWORD *)v9 + 16);
    v90 = *((_QWORD *)v9 + 17);
    v92 = *((_QWORD *)v9 + 18);
    v94 = *((_QWORD *)v9 + 19);
    v96 = *((_QWORD *)v9 + 20);
    v98 = *((_QWORD *)v9 + 21);
    v28 = *(_QWORD *)v9;
    v29 = v21;
    v30 = v22;
    v31 = v23;
    v32 = v26;
    sub_1A552370C(v28, v21, v22, v23, v24, v25, v27, v26, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92,
      v94,
      v96,
      v98,
      v11 & 1);
    *(_QWORD *)v8 = v28;
    *(_QWORD *)(v8 + 8) = v29;
    *(_QWORD *)(v8 + 16) = v30;
    *(_QWORD *)(v8 + 24) = v31;
    *(_QWORD *)(v8 + 32) = v24;
    *(_QWORD *)(v8 + 40) = v25;
    *(_QWORD *)(v8 + 48) = v27;
    *(_QWORD *)(v8 + 56) = v32;
    *(_QWORD *)(v8 + 64) = v72;
    *(_QWORD *)(v8 + 72) = v74;
    *(_QWORD *)(v8 + 80) = v76;
    *(_QWORD *)(v8 + 88) = v78;
    *(_QWORD *)(v8 + 96) = v80;
    *(_QWORD *)(v8 + 104) = v82;
    *(_QWORD *)(v8 + 112) = v84;
    *(_QWORD *)(v8 + 120) = v86;
    *(_QWORD *)(v8 + 128) = v88;
    *(_QWORD *)(v8 + 136) = v90;
    *(_QWORD *)(v8 + 144) = v92;
    *(_QWORD *)(v8 + 152) = v94;
    *(_QWORD *)(v8 + 160) = v96;
    *(_QWORD *)(v8 + 168) = v98;
    *(_BYTE *)(v8 + 176) = v100;
    return a1;
  }
LABEL_8:
  v12 = *v9;
  v13 = v9[1];
  v14 = v9[3];
  *(_OWORD *)(v8 + 32) = v9[2];
  *(_OWORD *)(v8 + 48) = v14;
  *(_OWORD *)v8 = v12;
  *(_OWORD *)(v8 + 16) = v13;
  v15 = v9[4];
  v16 = v9[5];
  v17 = v9[7];
  *(_OWORD *)(v8 + 96) = v9[6];
  *(_OWORD *)(v8 + 112) = v17;
  *(_OWORD *)(v8 + 64) = v15;
  *(_OWORD *)(v8 + 80) = v16;
  v18 = v9[8];
  v19 = v9[9];
  v20 = v9[10];
  *(_BYTE *)(v8 + 176) = *((_BYTE *)v9 + 176);
  *(_OWORD *)(v8 + 144) = v19;
  *(_OWORD *)(v8 + 160) = v20;
  *(_OWORD *)(v8 + 128) = v18;
  return a1;
}

uint64_t initializeWithTake for MessageSectionData.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v8 + 144) = v10;
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(_BYTE *)(v8 + 176) = *(_BYTE *)(v9 + 176);
  v11 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v11;
  v12 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v12;
  v13 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v13;
  v14 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v14;
  return a1;
}

uint64_t assignWithTake for MessageSectionData.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(unsigned __int8 *)(a1 + v7 + 176);
  if (v10 != 254)
  {
    v11 = *(unsigned __int8 *)(v9 + 176);
    if (v11 == 254)
    {
      sub_1A5835844(v8);
    }
    else if (v10 != 255)
    {
      if (v11 != 255)
      {
        v18 = *(_QWORD *)v8;
        v19 = *(_QWORD *)(v8 + 8);
        v20 = *(_QWORD *)(v8 + 16);
        v21 = *(_QWORD *)(v8 + 24);
        v22 = *(_QWORD *)(v8 + 32);
        v23 = *(_QWORD *)(v8 + 40);
        v24 = *(_QWORD *)(v8 + 48);
        v25 = *(_QWORD *)(v8 + 56);
        v26 = *(_OWORD *)(v8 + 64);
        v27 = *(_OWORD *)(v8 + 80);
        v28 = *(_OWORD *)(v8 + 96);
        v29 = *(_OWORD *)(v8 + 112);
        v30 = *(_OWORD *)(v8 + 128);
        v31 = *(_OWORD *)(v8 + 144);
        v32 = *(_QWORD *)(v8 + 160);
        v33 = *(_QWORD *)(v8 + 168);
        v34 = *(_OWORD *)(v9 + 16);
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *(_OWORD *)(v8 + 16) = v34;
        v35 = *(_OWORD *)(v9 + 48);
        *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
        *(_OWORD *)(v8 + 48) = v35;
        v36 = *(_OWORD *)(v9 + 80);
        *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
        *(_OWORD *)(v8 + 80) = v36;
        v37 = *(_OWORD *)(v9 + 112);
        *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
        *(_OWORD *)(v8 + 112) = v37;
        v38 = *(_OWORD *)(v9 + 144);
        *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
        *(_OWORD *)(v8 + 144) = v38;
        *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
        *(_BYTE *)(v8 + 176) = v11 & 1;
        sub_1A55241F0(v18, v19, v20, v21, v22, v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31,
          *((uint64_t *)&v31 + 1),
          v32,
          v33,
          v10 & 1);
        return a1;
      }
      sub_1A55D9BBC(v8);
    }
  }
  v12 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v8 + 144) = v12;
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(_BYTE *)(v8 + 176) = *(_BYTE *)(v9 + 176);
  v13 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v13;
  v14 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v14;
  v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
  v16 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v16;
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageSectionData.Segment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5836690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1A594AE60();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MessageSectionData.Segment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5836728(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A594AE60();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1A58367A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594AE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void destroy for MessageSectionData.Segment.Initial(uint64_t a1)
{
  int v1;

  v1 = *(unsigned __int8 *)(a1 + 176);
  if (v1 != 255)
    sub_1A55241F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
      *(_QWORD *)(a1 + 152),
      *(_QWORD *)(a1 + 160),
      *(_QWORD *)(a1 + 168),
      v1 & 1);
}

uint64_t initializeWithCopy for MessageSectionData.Segment.Initial(uint64_t a1, uint64_t *a2)
{
  int v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v3 = *((unsigned __int8 *)a2 + 176);
  if (v3 == 255)
  {
    v4 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 144) = v4;
    *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
    v5 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v5;
    v6 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v6;
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    v8 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v8;
  }
  else
  {
    v32 = v3 & 1;
    v9 = a2[4];
    v10 = a2[5];
    v11 = a2[6];
    v12 = a2[7];
    v19 = a2[9];
    v20 = a2[10];
    v21 = a2[11];
    v22 = a2[12];
    v23 = a2[13];
    v24 = a2[14];
    v25 = a2[15];
    v26 = a2[16];
    v27 = a2[17];
    v28 = a2[18];
    v29 = a2[19];
    v30 = a2[20];
    v31 = a2[21];
    v13 = a2[8];
    v14 = *a2;
    v15 = a2[1];
    v16 = a2[2];
    v17 = a2[3];
    sub_1A552370C(*a2, v15, v16, v17, v9, v10, v11, v12, v13, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
      v29,
      v30,
      v31,
      v3 & 1);
    *(_QWORD *)a1 = v14;
    *(_QWORD *)(a1 + 8) = v15;
    *(_QWORD *)(a1 + 16) = v16;
    *(_QWORD *)(a1 + 24) = v17;
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v12;
    *(_QWORD *)(a1 + 64) = v13;
    *(_QWORD *)(a1 + 72) = v19;
    *(_QWORD *)(a1 + 80) = v20;
    *(_QWORD *)(a1 + 88) = v21;
    *(_QWORD *)(a1 + 96) = v22;
    *(_QWORD *)(a1 + 104) = v23;
    *(_QWORD *)(a1 + 112) = v24;
    *(_QWORD *)(a1 + 120) = v25;
    *(_QWORD *)(a1 + 128) = v26;
    *(_QWORD *)(a1 + 136) = v27;
    *(_QWORD *)(a1 + 144) = v28;
    *(_QWORD *)(a1 + 152) = v29;
    *(_QWORD *)(a1 + 160) = v30;
    *(_QWORD *)(a1 + 168) = v31;
    *(_BYTE *)(a1 + 176) = v32;
  }
  return a1;
}

uint64_t assignWithCopy for MessageSectionData.Segment.Initial(uint64_t a1, __int128 *a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;

  v4 = *((unsigned __int8 *)a2 + 176);
  if (*(unsigned __int8 *)(a1 + 176) == 255)
  {
    if (v4 == 255)
    {
      v14 = *a2;
      v15 = a2[1];
      v16 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v16;
      *(_OWORD *)a1 = v14;
      *(_OWORD *)(a1 + 16) = v15;
      v17 = a2[4];
      v18 = a2[5];
      v19 = a2[7];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v19;
      *(_OWORD *)(a1 + 64) = v17;
      *(_OWORD *)(a1 + 80) = v18;
      v20 = a2[8];
      v21 = a2[9];
      v22 = a2[10];
      *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
      *(_OWORD *)(a1 + 144) = v21;
      *(_OWORD *)(a1 + 160) = v22;
      *(_OWORD *)(a1 + 128) = v20;
    }
    else
    {
      v86 = v4 & 1;
      v49 = *((_QWORD *)a2 + 3);
      v50 = *((_QWORD *)a2 + 4);
      v51 = *((_QWORD *)a2 + 5);
      v52 = *((_QWORD *)a2 + 6);
      v60 = *((_QWORD *)a2 + 9);
      v62 = *((_QWORD *)a2 + 10);
      v64 = *((_QWORD *)a2 + 11);
      v66 = *((_QWORD *)a2 + 12);
      v68 = *((_QWORD *)a2 + 13);
      v70 = *((_QWORD *)a2 + 14);
      v72 = *((_QWORD *)a2 + 15);
      v74 = *((_QWORD *)a2 + 16);
      v76 = *((_QWORD *)a2 + 17);
      v78 = *((_QWORD *)a2 + 18);
      v80 = *((_QWORD *)a2 + 19);
      v82 = *((_QWORD *)a2 + 20);
      v84 = *((_QWORD *)a2 + 21);
      v53 = *((_QWORD *)a2 + 8);
      v54 = *(_QWORD *)a2;
      v55 = *((_QWORD *)a2 + 1);
      v56 = *((_QWORD *)a2 + 2);
      v57 = *((_QWORD *)a2 + 7);
      sub_1A552370C(*(_QWORD *)a2, v55, v56, v49, v50, v51, v52, v57, v53, v60, v62, v64, v66, v68, v70, v72, v74, v76, v78,
        v80,
        v82,
        v84,
        v4 & 1);
      *(_QWORD *)a1 = v54;
      *(_QWORD *)(a1 + 8) = v55;
      *(_QWORD *)(a1 + 16) = v56;
      *(_QWORD *)(a1 + 24) = v49;
      *(_QWORD *)(a1 + 32) = v50;
      *(_QWORD *)(a1 + 40) = v51;
      *(_QWORD *)(a1 + 48) = v52;
      *(_QWORD *)(a1 + 56) = v57;
      *(_QWORD *)(a1 + 64) = v53;
      *(_QWORD *)(a1 + 72) = v60;
      *(_QWORD *)(a1 + 80) = v62;
      *(_QWORD *)(a1 + 88) = v64;
      *(_QWORD *)(a1 + 96) = v66;
      *(_QWORD *)(a1 + 104) = v68;
      *(_QWORD *)(a1 + 112) = v70;
      *(_QWORD *)(a1 + 120) = v72;
      *(_QWORD *)(a1 + 128) = v74;
      *(_QWORD *)(a1 + 136) = v76;
      *(_QWORD *)(a1 + 144) = v78;
      *(_QWORD *)(a1 + 152) = v80;
      *(_QWORD *)(a1 + 160) = v82;
      *(_QWORD *)(a1 + 168) = v84;
      *(_BYTE *)(a1 + 176) = v86;
    }
  }
  else if (v4 == 255)
  {
    sub_1A55D9BBC(a1);
    v5 = a2[3];
    v7 = *a2;
    v6 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v5;
    *(_OWORD *)a1 = v7;
    *(_OWORD *)(a1 + 16) = v6;
    v8 = a2[7];
    v10 = a2[4];
    v9 = a2[5];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v8;
    *(_OWORD *)(a1 + 64) = v10;
    *(_OWORD *)(a1 + 80) = v9;
    v12 = a2[9];
    v11 = a2[10];
    v13 = a2[8];
    *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
    *(_OWORD *)(a1 + 144) = v12;
    *(_OWORD *)(a1 + 160) = v11;
    *(_OWORD *)(a1 + 128) = v13;
  }
  else
  {
    v85 = v4 & 1;
    v23 = *(_QWORD *)a2;
    v24 = *((_QWORD *)a2 + 1);
    v25 = *((_QWORD *)a2 + 2);
    v26 = *((_QWORD *)a2 + 3);
    v27 = *((_QWORD *)a2 + 4);
    v28 = *((_QWORD *)a2 + 5);
    v29 = *((_QWORD *)a2 + 6);
    v30 = *((_QWORD *)a2 + 7);
    v59 = *((_QWORD *)a2 + 9);
    v61 = *((_QWORD *)a2 + 10);
    v63 = *((_QWORD *)a2 + 11);
    v65 = *((_QWORD *)a2 + 12);
    v67 = *((_QWORD *)a2 + 13);
    v69 = *((_QWORD *)a2 + 14);
    v71 = *((_QWORD *)a2 + 15);
    v73 = *((_QWORD *)a2 + 16);
    v75 = *((_QWORD *)a2 + 17);
    v77 = *((_QWORD *)a2 + 18);
    v79 = *((_QWORD *)a2 + 19);
    v81 = *((_QWORD *)a2 + 20);
    v83 = *((_QWORD *)a2 + 21);
    v31 = *((_QWORD *)a2 + 8);
    sub_1A552370C(*(_QWORD *)a2, v24, v25, v26, v27, v28, v29, v30, v31, v59, v61, v63, v65, v67, v69, v71, v73, v75, v77,
      v79,
      v81,
      v83,
      v4 & 1);
    v32 = *(_QWORD *)a1;
    v33 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)a1 = v23;
    *(_QWORD *)(a1 + 8) = v24;
    v34 = *(_QWORD *)(a1 + 16);
    v35 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v25;
    *(_QWORD *)(a1 + 24) = v26;
    v36 = *(_QWORD *)(a1 + 32);
    v37 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 32) = v27;
    *(_QWORD *)(a1 + 40) = v28;
    v38 = *(_QWORD *)(a1 + 48);
    v39 = *(_QWORD *)(a1 + 56);
    *(_QWORD *)(a1 + 48) = v29;
    *(_QWORD *)(a1 + 56) = v30;
    v40 = *(_OWORD *)(a1 + 64);
    v41 = *(_OWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 64) = v31;
    *(_QWORD *)(a1 + 72) = v59;
    *(_QWORD *)(a1 + 80) = v61;
    *(_QWORD *)(a1 + 88) = v63;
    v42 = *(_OWORD *)(a1 + 96);
    v43 = *(_OWORD *)(a1 + 112);
    *(_QWORD *)(a1 + 96) = v65;
    *(_QWORD *)(a1 + 104) = v67;
    *(_QWORD *)(a1 + 112) = v69;
    *(_QWORD *)(a1 + 120) = v71;
    v44 = *(_OWORD *)(a1 + 128);
    v45 = *(_OWORD *)(a1 + 144);
    *(_QWORD *)(a1 + 128) = v73;
    *(_QWORD *)(a1 + 136) = v75;
    *(_QWORD *)(a1 + 144) = v77;
    *(_QWORD *)(a1 + 152) = v79;
    v46 = *(_QWORD *)(a1 + 160);
    v47 = *(_QWORD *)(a1 + 168);
    *(_QWORD *)(a1 + 160) = v81;
    *(_QWORD *)(a1 + 168) = v83;
    v48 = *(_BYTE *)(a1 + 176);
    *(_BYTE *)(a1 + 176) = v85;
    sub_1A55241F0(v32, v33, v34, v35, v36, v37, v38, v39, v40, *((uint64_t *)&v40 + 1), v41, *((uint64_t *)&v41 + 1), v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v44, *((uint64_t *)&v44 + 1), v45,
      *((uint64_t *)&v45 + 1),
      v46,
      v47,
      v48);
  }
  return a1;
}

__n128 __swift_memcpy177_8_1(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for MessageSectionData.Segment.Initial(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  v4 = *(unsigned __int8 *)(a1 + 176);
  if (v4 != 255)
  {
    v5 = *(unsigned __int8 *)(a2 + 176);
    if (v5 != 255)
    {
      v11 = *(_QWORD *)a1;
      v12 = *(_QWORD *)(a1 + 8);
      v13 = *(_QWORD *)(a1 + 16);
      v14 = *(_QWORD *)(a1 + 24);
      v15 = *(_QWORD *)(a1 + 32);
      v16 = *(_QWORD *)(a1 + 40);
      v17 = *(_QWORD *)(a1 + 48);
      v18 = *(_QWORD *)(a1 + 56);
      v19 = *(_OWORD *)(a1 + 64);
      v20 = *(_OWORD *)(a1 + 80);
      v21 = *(_OWORD *)(a1 + 96);
      v22 = *(_OWORD *)(a1 + 112);
      v23 = *(_OWORD *)(a1 + 128);
      v24 = *(_OWORD *)(a1 + 144);
      v25 = *(_QWORD *)(a1 + 160);
      v26 = *(_QWORD *)(a1 + 168);
      v27 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v27;
      v28 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v28;
      v29 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v29;
      v30 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v30;
      v31 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v31;
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_BYTE *)(a1 + 176) = v5 & 1;
      sub_1A55241F0(v11, v12, v13, v14, v15, v16, v17, v18, v19, *((uint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24,
        *((uint64_t *)&v24 + 1),
        v25,
        v26,
        v4 & 1);
      return a1;
    }
    sub_1A55D9BBC(a1);
  }
  v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageSectionData.Segment.Initial(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 177))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 176);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = (v3 ^ 0xFF) - 1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageSectionData.Segment.Initial(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 176) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 177) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 177) = 0;
    if (a2)
      *(_BYTE *)(result + 176) = ~(_BYTE)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageSectionData.Segment.Initial()
{
  return &type metadata for MessageSectionData.Segment.Initial;
}

uint64_t sub_1A5836F48@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;

  return sub_1A5834A28(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t MessageSectionData.Concatenator.init(expectedMessageSize:inMemoryThreshold:baseDirectory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
  v6 = sub_1A5949EF4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
  _s12ConcatenatorV5StateOMa(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t _s12ConcatenatorV5StateO6NoDataVMa(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7A0598);
}

uint64_t _s12ConcatenatorV5StateOMa(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7A05B8);
}

uint64_t MessageSectionData.Concatenator.appendData(_:)(uint64_t a1)
{
  return sub_1A583700C(a1);
}

uint64_t sub_1A583700C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  BOOL *v62;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE v123[184];
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  char v135;
  _BYTE v136[184];
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  char v148;
  _BYTE v149[200];
  uint64_t v150;

  v2 = v1;
  v4 = sub_1A594AE60();
  v110 = *(_QWORD *)(v4 - 8);
  v111 = v4;
  MEMORY[0x1E0C80A78](v4);
  v102 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = _s12ConcatenatorV5StateO9ReceivingVMa(0);
  MEMORY[0x1E0C80A78](v103);
  v118 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v117 = (char *)&v100 - v8;
  v9 = sub_1A5949EF4();
  v105 = *(_QWORD *)(v9 - 8);
  v106 = v9;
  MEMORY[0x1E0C80A78](v9);
  v107 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = _s13TemporaryDataOMa();
  MEMORY[0x1E0C80A78](v112);
  v101 = (uint64_t)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v116 = (char *)&v100 - v13;
  MEMORY[0x1E0C80A78](v14);
  v115 = (char *)&v100 - v15;
  MEMORY[0x1E0C80A78](v16);
  v100 = (uint64_t)&v100 - v17;
  MEMORY[0x1E0C80A78](v18);
  v109 = (uint64_t)&v100 - v19;
  v104 = _s12ConcatenatorV5StateO6NoDataVMa(0);
  MEMORY[0x1E0C80A78](v104);
  v108 = (uint64_t *)((char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = _s12ConcatenatorV5StateOMa(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v100 - v25;
  MEMORY[0x1E0C80A78](v27);
  v119 = (char *)&v100 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A05C8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for MessageSectionData.Segment(0);
  v120 = a1 + *(int *)(v32 + 24);
  sub_1A583BF54(v120, (uint64_t)v149);
  v33 = *(int *)(v32 + 20);
  v150 = a1;
  v34 = *(_BYTE *)(a1 + v33);
  v35 = &v31[*(int *)(v29 + 48)];
  v36 = *(int *)(v29 + 64);
  v121 = v2;
  v37 = v2;
  v38 = (uint64_t)v35;
  sub_1A55034B8(v37, (uint64_t)v31, _s12ConcatenatorV5StateOMa);
  v114 = v38;
  sub_1A583BF54((uint64_t)v149, v38);
  v31[v36] = v34;
  v122 = v21;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v44 = (uint64_t)v115;
    v43 = (uint64_t)v116;
    v119 = v23;
    v45 = (uint64_t)v117;
    v46 = (uint64_t)v118;
    sub_1A55034B8((uint64_t)v31, (uint64_t)v26, _s12ConcatenatorV5StateOMa);
    sub_1A583BF54((uint64_t)v149, (uint64_t)&v137);
    if (sub_1A5529F68((uint64_t)&v137) != 1)
    {
      sub_1A583BF54((uint64_t)v149, (uint64_t)v136);
      sub_1A55DC438((uint64_t)v136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
      sub_1A55034FC(v121, _s12ConcatenatorV5StateOMa);
      v41 = _s12ConcatenatorV5StateO9ReceivingVMa;
      v42 = (uint64_t)v26;
      goto LABEL_13;
    }
    if ((v34 & 1) != 0)
    {
      v47 = v46;
      sub_1A54E3394((uint64_t)v26, v46, _s12ConcatenatorV5StateO9ReceivingVMa);
      sub_1A55034B8(v46, v43, (uint64_t (*)(_QWORD))_s13TemporaryDataOMa);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A55034FC(v46, (uint64_t (*)(_QWORD))_s13TemporaryDataOMa);
        v49 = v110;
        v48 = v111;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 32))(v47, v43, v111);
        sub_1A594AE30();
        swift_storeEnumTagMultiPayload();
        v50 = v113;
        v51 = v102;
LABEL_25:
        v76 = v101;
        sub_1A55034B8(v47, v101, (uint64_t (*)(_QWORD))_s13TemporaryDataOMa);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v51, v76, v48);
LABEL_34:
          v78 = v48;
          v79 = v121;
          sub_1A55034FC(v121, _s12ConcatenatorV5StateOMa);
          v80 = v47 + *(int *)(v103 + 20);
          v81 = *(_OWORD *)(v80 + 144);
          v132 = *(_OWORD *)(v80 + 128);
          v133 = v81;
          v134 = *(_OWORD *)(v80 + 160);
          v135 = *(_BYTE *)(v80 + 176);
          v82 = *(_OWORD *)(v80 + 80);
          v128 = *(_OWORD *)(v80 + 64);
          v129 = v82;
          v83 = *(_OWORD *)(v80 + 112);
          v130 = *(_OWORD *)(v80 + 96);
          v131 = v83;
          v84 = *(_OWORD *)(v80 + 48);
          v126 = *(_OWORD *)(v80 + 32);
          v127 = v84;
          v85 = *(_OWORD *)(v80 + 16);
          v124 = *(_OWORD *)v80;
          v125 = v85;
          sub_1A55DC438((uint64_t)&v124, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
          sub_1A55034FC(v47, _s12ConcatenatorV5StateO9ReceivingVMa);
          v86 = (uint64_t)v119;
          (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v119, v51, v78);
          v87 = v86 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
          v88 = v133;
          *(_OWORD *)(v87 + 128) = v132;
          *(_OWORD *)(v87 + 144) = v88;
          *(_OWORD *)(v87 + 160) = v134;
          *(_BYTE *)(v87 + 176) = v135;
          v89 = v129;
          *(_OWORD *)(v87 + 64) = v128;
          *(_OWORD *)(v87 + 80) = v89;
          v90 = v131;
          *(_OWORD *)(v87 + 96) = v130;
          *(_OWORD *)(v87 + 112) = v90;
          v91 = v125;
          *(_OWORD *)v87 = v124;
          *(_OWORD *)(v87 + 16) = v91;
          v92 = v127;
          *(_OWORD *)(v87 + 32) = v126;
          *(_OWORD *)(v87 + 48) = v92;
          swift_storeEnumTagMultiPayload();
          sub_1A54E3394(v86, v79, _s12ConcatenatorV5StateOMa);
          goto LABEL_35;
        }
        static DispatchData.makeMappedRead(fileDescriptor:count:)(*(_DWORD *)(*(_QWORD *)v76 + 16), *(_QWORD *)(*(_QWORD *)v76 + 24));
        if (!v50)
        {
          swift_release();
          goto LABEL_34;
        }
        swift_release();
        v73 = v47;
        goto LABEL_29;
      }
      v72 = v113;
      sub_1A583C3C8();
      v50 = v72;
      if (!v72)
      {
        swift_release();
        v49 = v110;
        v51 = v102;
        v47 = v46;
        v48 = v111;
        goto LABEL_25;
      }
      swift_release();
      v73 = v46;
LABEL_29:
      sub_1A55034FC(v73, _s12ConcatenatorV5StateO9ReceivingVMa);
LABEL_35:
      sub_1A583BF54(v114, (uint64_t)v136);
      v71 = v136;
LABEL_36:
      sub_1A55DC438((uint64_t)v71, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524104);
      return sub_1A55034FC((uint64_t)v31, _s12ConcatenatorV5StateOMa);
    }
    v64 = v45;
    sub_1A54E3394((uint64_t)v26, v45, _s12ConcatenatorV5StateO9ReceivingVMa);
    sub_1A55034B8(v45, v44, (uint64_t (*)(_QWORD))_s13TemporaryDataOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A55034FC(v45, (uint64_t (*)(_QWORD))_s13TemporaryDataOMa);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 32))(v45, v44, v111);
      sub_1A594AE30();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v74 = v113;
      sub_1A583C3C8();
      if (v74)
      {
        swift_release();
        v73 = v45;
        goto LABEL_29;
      }
      swift_release();
    }
    v77 = v121;
    sub_1A55034FC(v121, _s12ConcatenatorV5StateOMa);
    sub_1A54E3394(v64, v77, _s12ConcatenatorV5StateO9ReceivingVMa);
    swift_storeEnumTagMultiPayload();
    goto LABEL_35;
  }
  if (EnumCaseMultiPayload)
  {
    sub_1A55DC438((uint64_t)v149, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523620);
    v41 = _s12ConcatenatorV5StateOMa;
    v42 = v121;
    goto LABEL_13;
  }
  v40 = (uint64_t)v119;
  sub_1A55034B8((uint64_t)v31, (uint64_t)v119, _s12ConcatenatorV5StateOMa);
  sub_1A583BF54((uint64_t)v149, (uint64_t)&v137);
  if (sub_1A5529F68((uint64_t)&v137) == 1)
  {
    sub_1A55034FC(v121, _s12ConcatenatorV5StateOMa);
    v41 = _s12ConcatenatorV5StateO6NoDataVMa;
    v42 = v40;
LABEL_13:
    sub_1A55034FC(v42, v41);
    v59 = v150;
    v60 = v120;
    swift_storeEnumTagMultiPayload();
    sub_1A583BF54(v60, (uint64_t)&v137);
    v61 = sub_1A5529F68((uint64_t)&v137) == 0;
    LOBYTE(v60) = *(_BYTE *)(v59 + v33);
    sub_1A583BF9C();
    swift_allocError();
    *v62 = v61;
    v62[1] = v60;
    swift_willThrow();
    return sub_1A583BFE0((uint64_t)v31);
  }
  if ((v34 & 1) == 0)
  {
    v65 = v108;
    sub_1A54E3394(v40, (uint64_t)v108, _s12ConcatenatorV5StateO6NoDataVMa);
    v66 = *v65;
    v67 = v65[1];
    v68 = v107;
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v107, (char *)v65 + *(int *)(v104 + 24), v106);
    sub_1A583BF54((uint64_t)v149, (uint64_t)&v124);
    sub_1A583BF54((uint64_t)v149, (uint64_t)v136);
    sub_1A55DC438((uint64_t)v136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
    sub_1A55DC438((uint64_t)&v124, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
    v69 = v109;
    v70 = v113;
    sub_1A583C19C(v66, v67, v68, v109);
    if (v70)
    {
      sub_1A55034FC((uint64_t)v65, _s12ConcatenatorV5StateO6NoDataVMa);
      sub_1A55DC438((uint64_t)v149, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524104);
      sub_1A583BF54(v114, (uint64_t)v123);
      v71 = v123;
    }
    else
    {
      v75 = v100;
      sub_1A55034B8(v69, v100, (uint64_t (*)(_QWORD))_s13TemporaryDataOMa);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A55034FC(v69, (uint64_t (*)(_QWORD))_s13TemporaryDataOMa);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 32))(v69, v75, v111);
        sub_1A594AE30();
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        sub_1A583C3C8();
        swift_release();
      }
      v93 = v121;
      sub_1A55034FC(v121, _s12ConcatenatorV5StateOMa);
      sub_1A55034FC((uint64_t)v65, _s12ConcatenatorV5StateO6NoDataVMa);
      sub_1A54E3394(v69, v93, (uint64_t (*)(_QWORD))_s13TemporaryDataOMa);
      v94 = v93 + *(int *)(v103 + 20);
      v95 = v146;
      *(_OWORD *)(v94 + 128) = v145;
      *(_OWORD *)(v94 + 144) = v95;
      *(_OWORD *)(v94 + 160) = v147;
      *(_BYTE *)(v94 + 176) = v148;
      v96 = v142;
      *(_OWORD *)(v94 + 64) = v141;
      *(_OWORD *)(v94 + 80) = v96;
      v97 = v144;
      *(_OWORD *)(v94 + 96) = v143;
      *(_OWORD *)(v94 + 112) = v97;
      v98 = v138;
      *(_OWORD *)v94 = v137;
      *(_OWORD *)(v94 + 16) = v98;
      v99 = v140;
      *(_OWORD *)(v94 + 32) = v139;
      *(_OWORD *)(v94 + 48) = v99;
      swift_storeEnumTagMultiPayload();
      sub_1A583BF54(v114, (uint64_t)v123);
      v71 = v123;
    }
    goto LABEL_36;
  }
  sub_1A583BF54((uint64_t)v149, (uint64_t)&v124);
  sub_1A55DC438((uint64_t)&v124, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
  v52 = v121;
  sub_1A55034FC(v121, _s12ConcatenatorV5StateOMa);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 16))(v52, v150, v111);
  v53 = v52 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
  v54 = v146;
  *(_OWORD *)(v53 + 128) = v145;
  *(_OWORD *)(v53 + 144) = v54;
  *(_OWORD *)(v53 + 160) = v147;
  *(_BYTE *)(v53 + 176) = v148;
  v55 = v142;
  *(_OWORD *)(v53 + 64) = v141;
  *(_OWORD *)(v53 + 80) = v55;
  v56 = v144;
  *(_OWORD *)(v53 + 96) = v143;
  *(_OWORD *)(v53 + 112) = v56;
  v57 = v138;
  *(_OWORD *)v53 = v137;
  *(_OWORD *)(v53 + 16) = v57;
  v58 = v140;
  *(_OWORD *)(v53 + 32) = v139;
  *(_OWORD *)(v53 + 48) = v58;
  swift_storeEnumTagMultiPayload();
  sub_1A55DC438((uint64_t)&v124, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
  sub_1A55034FC(v40, _s12ConcatenatorV5StateO6NoDataVMa);
  sub_1A583BF54(v114, (uint64_t)v136);
  sub_1A55DC438((uint64_t)v136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524104);
  return sub_1A55034FC((uint64_t)v31, _s12ConcatenatorV5StateOMa);
}

uint64_t MessageSectionData.Concatenator.completed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = _s12ConcatenatorV5StateOMa(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1A54E3394((uint64_t)v6, a1, type metadata accessor for MessageSectionData.Concatenator.Completed);
    v8 = type metadata accessor for MessageSectionData.Concatenator.Completed(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  else
  {
    sub_1A55034FC((uint64_t)v6, _s12ConcatenatorV5StateOMa);
    v10 = type metadata accessor for MessageSectionData.Concatenator.Completed(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

uint64_t type metadata accessor for MessageSectionData.Concatenator.Completed(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7A05D0);
}

uint64_t MessageSectionData.Concatenator.Completed.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MessageSectionData.Concatenator.Completed.data.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

double (*MessageSectionData.Concatenator.Completed.data.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageSectionData.Concatenator.Completed.initial.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20));
  return sub_1A5837D40(v3, a1);
}

uint64_t sub_1A5837D40(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for MessageSectionData.Segment.Initial(a2, a1);
  return a2;
}

uint64_t MessageSectionData.Concatenator.Completed.initial.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
  return sub_1A5837DAC(a1, v3);
}

uint64_t sub_1A5837DAC(uint64_t a1, uint64_t a2)
{
  assignWithTake for MessageSectionData.Segment.Initial(a2, a1);
  return a2;
}

double (*MessageSectionData.Concatenator.Completed.initial.modify())(_QWORD)
{
  type metadata accessor for MessageSectionData.Concatenator.Completed(0);
  return nullsub_1;
}

__n128 MessageSectionData.Concatenator.Completed.init(data:initial:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __n128 result;
  __int128 v13;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v7 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v7 + 144) = v8;
  *(_OWORD *)(v7 + 160) = *(_OWORD *)(a2 + 160);
  *(_BYTE *)(v7 + 176) = *(_BYTE *)(a2 + 176);
  v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v7 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v7 + 80) = v9;
  v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v7 + 112) = v10;
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v11;
  result = *(__n128 *)(a2 + 32);
  v13 = *(_OWORD *)(a2 + 48);
  *(__n128 *)(v7 + 32) = result;
  *(_OWORD *)(v7 + 48) = v13;
  return result;
}

uint64_t *_s12ConcatenatorVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v4 = *(_QWORD *)(_s12ConcatenatorV5StateOMa(0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v13 = sub_1A594AE60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = v16[176];
      if (v17 == 255)
      {
LABEL_14:
        v19 = *((_OWORD *)v16 + 9);
        *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
        *((_OWORD *)v15 + 9) = v19;
        *((_OWORD *)v15 + 10) = *((_OWORD *)v16 + 10);
        v15[176] = v16[176];
        v20 = *((_OWORD *)v16 + 5);
        *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
        *((_OWORD *)v15 + 5) = v20;
        v21 = *((_OWORD *)v16 + 7);
        *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
        *((_OWORD *)v15 + 7) = v21;
        v22 = *((_OWORD *)v16 + 1);
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v22;
        v23 = *((_OWORD *)v16 + 3);
        *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
        *((_OWORD *)v15 + 3) = v23;
        goto LABEL_16;
      }
LABEL_15:
      v47 = v17 & 1;
      v24 = *((_QWORD *)v16 + 5);
      v25 = *((_QWORD *)v16 + 6);
      v32 = *((_QWORD *)v16 + 7);
      v33 = *((_QWORD *)v16 + 8);
      v34 = *((_QWORD *)v16 + 9);
      v35 = *((_QWORD *)v16 + 10);
      v36 = *((_QWORD *)v16 + 11);
      v37 = *((_QWORD *)v16 + 12);
      v38 = *((_QWORD *)v16 + 13);
      v39 = *((_QWORD *)v16 + 14);
      v40 = *((_QWORD *)v16 + 15);
      v41 = *((_QWORD *)v16 + 16);
      v42 = *((_QWORD *)v16 + 17);
      v43 = *((_QWORD *)v16 + 18);
      v44 = *((_QWORD *)v16 + 19);
      v45 = *((_QWORD *)v16 + 20);
      v46 = *((_QWORD *)v16 + 21);
      v26 = *(_QWORD *)v16;
      v27 = *((_QWORD *)v16 + 1);
      v28 = *((_QWORD *)v16 + 2);
      v29 = *((_QWORD *)v16 + 3);
      v30 = *((_QWORD *)v16 + 4);
      sub_1A552370C(*(_QWORD *)v16, v27, v28, v29, v30, v24, v25, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43,
        v44,
        v45,
        v46,
        v17 & 1);
      *(_QWORD *)v15 = v26;
      *((_QWORD *)v15 + 1) = v27;
      *((_QWORD *)v15 + 2) = v28;
      *((_QWORD *)v15 + 3) = v29;
      *((_QWORD *)v15 + 4) = v30;
      *((_QWORD *)v15 + 5) = v24;
      *((_QWORD *)v15 + 6) = v25;
      *((_QWORD *)v15 + 7) = v32;
      *((_QWORD *)v15 + 8) = v33;
      *((_QWORD *)v15 + 9) = v34;
      *((_QWORD *)v15 + 10) = v35;
      *((_QWORD *)v15 + 11) = v36;
      *((_QWORD *)v15 + 12) = v37;
      *((_QWORD *)v15 + 13) = v38;
      *((_QWORD *)v15 + 14) = v39;
      *((_QWORD *)v15 + 15) = v40;
      *((_QWORD *)v15 + 16) = v41;
      *((_QWORD *)v15 + 17) = v42;
      *((_QWORD *)v15 + 18) = v43;
      *((_QWORD *)v15 + 19) = v44;
      *((_QWORD *)v15 + 20) = v45;
      *((_QWORD *)v15 + 21) = v46;
      v15[176] = v47;
      goto LABEL_16;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v12 = sub_1A594AE60();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      v18 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      v15 = (char *)a1 + v18;
      v16 = (char *)a2 + v18;
      v17 = v16[176];
      if (v17 == 255)
        goto LABEL_14;
      goto LABEL_15;
    case 0:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v7 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1A5949EF4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(v4 + 64));
  return a1;
}

uint64_t _s12ConcatenatorV5StateO9ReceivingVMa(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7A05A8);
}

void _s12ConcatenatorVwxx(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  _s12ConcatenatorV5StateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v5 = sub_1A594AE60();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = type metadata accessor for MessageSectionData.Concatenator.Completed(0);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (!EnumCaseMultiPayload)
      {
        v3 = a1 + *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
        v4 = sub_1A5949EF4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
      }
      return;
    }
    _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1A594AE60();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
    }
    else
    {
      swift_release();
    }
    v6 = _s12ConcatenatorV5StateO9ReceivingVMa(0);
  }
  v8 = a1 + *(int *)(v6 + 20);
  v9 = *(unsigned __int8 *)(v8 + 176);
  if (v9 != 255)
    sub_1A55241F0(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 56), *(_QWORD *)(v8 + 64), *(_QWORD *)(v8 + 72), *(_QWORD *)(v8 + 80), *(_QWORD *)(v8 + 88), *(_QWORD *)(v8 + 96), *(_QWORD *)(v8 + 104), *(_QWORD *)(v8 + 112), *(_QWORD *)(v8 + 120), *(_QWORD *)(v8 + 128), *(_QWORD *)(v8 + 136), *(_QWORD *)(v8 + 144),
      *(_QWORD *)(v8 + 152),
      *(_QWORD *)(v8 + 160),
      *(_QWORD *)(v8 + 168),
      v9 & 1);
}

_QWORD *_s12ConcatenatorVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v4 = _s12ConcatenatorV5StateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v11 = sub_1A594AE60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = v14[176];
      if (v15 == 255)
      {
LABEL_12:
        v17 = *((_OWORD *)v14 + 9);
        *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
        *((_OWORD *)v13 + 9) = v17;
        *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
        v13[176] = v14[176];
        v18 = *((_OWORD *)v14 + 5);
        *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
        *((_OWORD *)v13 + 5) = v18;
        v19 = *((_OWORD *)v14 + 7);
        *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
        *((_OWORD *)v13 + 7) = v19;
        v20 = *((_OWORD *)v14 + 1);
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *((_OWORD *)v13 + 1) = v20;
        v21 = *((_OWORD *)v14 + 3);
        *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 3) = v21;
        goto LABEL_14;
      }
LABEL_13:
      v45 = v15 & 1;
      v22 = *((_QWORD *)v14 + 5);
      v23 = *((_QWORD *)v14 + 6);
      v30 = *((_QWORD *)v14 + 7);
      v31 = *((_QWORD *)v14 + 8);
      v32 = *((_QWORD *)v14 + 9);
      v33 = *((_QWORD *)v14 + 10);
      v34 = *((_QWORD *)v14 + 11);
      v35 = *((_QWORD *)v14 + 12);
      v36 = *((_QWORD *)v14 + 13);
      v37 = *((_QWORD *)v14 + 14);
      v38 = *((_QWORD *)v14 + 15);
      v39 = *((_QWORD *)v14 + 16);
      v40 = *((_QWORD *)v14 + 17);
      v41 = *((_QWORD *)v14 + 18);
      v42 = *((_QWORD *)v14 + 19);
      v43 = *((_QWORD *)v14 + 20);
      v44 = *((_QWORD *)v14 + 21);
      v24 = *(_QWORD *)v14;
      v25 = *((_QWORD *)v14 + 1);
      v26 = *((_QWORD *)v14 + 2);
      v27 = *((_QWORD *)v14 + 3);
      v28 = *((_QWORD *)v14 + 4);
      sub_1A552370C(*(_QWORD *)v14, v25, v26, v27, v28, v22, v23, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
        v42,
        v43,
        v44,
        v15 & 1);
      *(_QWORD *)v13 = v24;
      *((_QWORD *)v13 + 1) = v25;
      *((_QWORD *)v13 + 2) = v26;
      *((_QWORD *)v13 + 3) = v27;
      *((_QWORD *)v13 + 4) = v28;
      *((_QWORD *)v13 + 5) = v22;
      *((_QWORD *)v13 + 6) = v23;
      *((_QWORD *)v13 + 7) = v30;
      *((_QWORD *)v13 + 8) = v31;
      *((_QWORD *)v13 + 9) = v32;
      *((_QWORD *)v13 + 10) = v33;
      *((_QWORD *)v13 + 11) = v34;
      *((_QWORD *)v13 + 12) = v35;
      *((_QWORD *)v13 + 13) = v36;
      *((_QWORD *)v13 + 14) = v37;
      *((_QWORD *)v13 + 15) = v38;
      *((_QWORD *)v13 + 16) = v39;
      *((_QWORD *)v13 + 17) = v40;
      *((_QWORD *)v13 + 18) = v41;
      *((_QWORD *)v13 + 19) = v42;
      *((_QWORD *)v13 + 20) = v43;
      *((_QWORD *)v13 + 21) = v44;
      v13[176] = v45;
      goto LABEL_14;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v10 = sub_1A594AE60();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      v16 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      v13 = (char *)a1 + v16;
      v14 = (char *)a2 + v16;
      v15 = v14[176];
      if (v15 == 255)
        goto LABEL_12;
      goto LABEL_13;
    case 0:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v6 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1A5949EF4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  return a1;
}

_QWORD *_s12ConcatenatorVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  if (a1 == a2)
    return a1;
  sub_1A55034FC((uint64_t)a1, _s12ConcatenatorV5StateOMa);
  v4 = _s12ConcatenatorV5StateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v11 = sub_1A594AE60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = v14[176];
      if (v15 == 255)
      {
LABEL_13:
        v17 = *(_OWORD *)v14;
        v18 = *((_OWORD *)v14 + 1);
        v19 = *((_OWORD *)v14 + 3);
        *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 3) = v19;
        *(_OWORD *)v13 = v17;
        *((_OWORD *)v13 + 1) = v18;
        v20 = *((_OWORD *)v14 + 4);
        v21 = *((_OWORD *)v14 + 5);
        v22 = *((_OWORD *)v14 + 7);
        *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
        *((_OWORD *)v13 + 7) = v22;
        *((_OWORD *)v13 + 4) = v20;
        *((_OWORD *)v13 + 5) = v21;
        v23 = *((_OWORD *)v14 + 8);
        v24 = *((_OWORD *)v14 + 9);
        v25 = *((_OWORD *)v14 + 10);
        v13[176] = v14[176];
        *((_OWORD *)v13 + 9) = v24;
        *((_OWORD *)v13 + 10) = v25;
        *((_OWORD *)v13 + 8) = v23;
        goto LABEL_15;
      }
LABEL_14:
      v49 = v15 & 1;
      v26 = *((_QWORD *)v14 + 5);
      v27 = *((_QWORD *)v14 + 6);
      v34 = *((_QWORD *)v14 + 7);
      v35 = *((_QWORD *)v14 + 8);
      v36 = *((_QWORD *)v14 + 9);
      v37 = *((_QWORD *)v14 + 10);
      v38 = *((_QWORD *)v14 + 11);
      v39 = *((_QWORD *)v14 + 12);
      v40 = *((_QWORD *)v14 + 13);
      v41 = *((_QWORD *)v14 + 14);
      v42 = *((_QWORD *)v14 + 15);
      v43 = *((_QWORD *)v14 + 16);
      v44 = *((_QWORD *)v14 + 17);
      v45 = *((_QWORD *)v14 + 18);
      v46 = *((_QWORD *)v14 + 19);
      v47 = *((_QWORD *)v14 + 20);
      v48 = *((_QWORD *)v14 + 21);
      v28 = *(_QWORD *)v14;
      v29 = *((_QWORD *)v14 + 1);
      v30 = *((_QWORD *)v14 + 2);
      v31 = *((_QWORD *)v14 + 3);
      v32 = *((_QWORD *)v14 + 4);
      sub_1A552370C(*(_QWORD *)v14, v29, v30, v31, v32, v26, v27, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45,
        v46,
        v47,
        v48,
        v15 & 1);
      *(_QWORD *)v13 = v28;
      *((_QWORD *)v13 + 1) = v29;
      *((_QWORD *)v13 + 2) = v30;
      *((_QWORD *)v13 + 3) = v31;
      *((_QWORD *)v13 + 4) = v32;
      *((_QWORD *)v13 + 5) = v26;
      *((_QWORD *)v13 + 6) = v27;
      *((_QWORD *)v13 + 7) = v34;
      *((_QWORD *)v13 + 8) = v35;
      *((_QWORD *)v13 + 9) = v36;
      *((_QWORD *)v13 + 10) = v37;
      *((_QWORD *)v13 + 11) = v38;
      *((_QWORD *)v13 + 12) = v39;
      *((_QWORD *)v13 + 13) = v40;
      *((_QWORD *)v13 + 14) = v41;
      *((_QWORD *)v13 + 15) = v42;
      *((_QWORD *)v13 + 16) = v43;
      *((_QWORD *)v13 + 17) = v44;
      *((_QWORD *)v13 + 18) = v45;
      *((_QWORD *)v13 + 19) = v46;
      *((_QWORD *)v13 + 20) = v47;
      *((_QWORD *)v13 + 21) = v48;
      v13[176] = v49;
      goto LABEL_15;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v10 = sub_1A594AE60();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      v16 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      v13 = (char *)a1 + v16;
      v14 = (char *)a2 + v16;
      v15 = v14[176];
      if (v15 == 255)
        goto LABEL_13;
      goto LABEL_14;
    case 0:
      *a1 = *a2;
      a1[1] = a2[1];
      v6 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1A5949EF4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  return a1;
}

_OWORD *_s12ConcatenatorVwtk(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v4 = _s12ConcatenatorV5StateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v10 = sub_1A594AE60();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = *((_OWORD *)v13 + 9);
      *((_OWORD *)v12 + 8) = *((_OWORD *)v13 + 8);
      *((_OWORD *)v12 + 9) = v14;
      *((_OWORD *)v12 + 10) = *((_OWORD *)v13 + 10);
      v12[176] = v13[176];
      v15 = *((_OWORD *)v13 + 5);
      *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
      *((_OWORD *)v12 + 5) = v15;
      v16 = *((_OWORD *)v13 + 7);
      *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
      *((_OWORD *)v12 + 7) = v16;
      v17 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v17;
      v18 = *((_OWORD *)v13 + 3);
      *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
      *((_OWORD *)v12 + 3) = v18;
      goto LABEL_11;
    case 1:
      v19 = _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v20 = sub_1A594AE60();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      v21 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = *((_OWORD *)v23 + 9);
      *((_OWORD *)v22 + 8) = *((_OWORD *)v23 + 8);
      *((_OWORD *)v22 + 9) = v24;
      *((_OWORD *)v22 + 10) = *((_OWORD *)v23 + 10);
      v22[176] = v23[176];
      v25 = *((_OWORD *)v23 + 5);
      *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
      *((_OWORD *)v22 + 5) = v25;
      v26 = *((_OWORD *)v23 + 7);
      *((_OWORD *)v22 + 6) = *((_OWORD *)v23 + 6);
      *((_OWORD *)v22 + 7) = v26;
      v27 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v27;
      v28 = *((_OWORD *)v23 + 3);
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
      *((_OWORD *)v22 + 3) = v28;
      goto LABEL_11;
    case 0:
      *a1 = *a2;
      v6 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1A5949EF4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  return a1;
}

_OWORD *_s12ConcatenatorVwta(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, _s12ConcatenatorV5StateOMa);
    v4 = _s12ConcatenatorV5StateOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v10 = sub_1A594AE60();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        v11 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = *((_OWORD *)v13 + 9);
        *((_OWORD *)v12 + 8) = *((_OWORD *)v13 + 8);
        *((_OWORD *)v12 + 9) = v14;
        *((_OWORD *)v12 + 10) = *((_OWORD *)v13 + 10);
        v12[176] = v13[176];
        v15 = *((_OWORD *)v13 + 5);
        *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
        *((_OWORD *)v12 + 5) = v15;
        v16 = *((_OWORD *)v13 + 7);
        *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
        *((_OWORD *)v12 + 7) = v16;
        v17 = *((_OWORD *)v13 + 1);
        *(_OWORD *)v12 = *(_OWORD *)v13;
        *((_OWORD *)v12 + 1) = v17;
        v18 = *((_OWORD *)v13 + 3);
        *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
        *((_OWORD *)v12 + 3) = v18;
        goto LABEL_12;
      case 1:
        v19 = _s13TemporaryDataOMa();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v20 = sub_1A594AE60();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        v21 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = *((_OWORD *)v23 + 9);
        *((_OWORD *)v22 + 8) = *((_OWORD *)v23 + 8);
        *((_OWORD *)v22 + 9) = v24;
        *((_OWORD *)v22 + 10) = *((_OWORD *)v23 + 10);
        v22[176] = v23[176];
        v25 = *((_OWORD *)v23 + 5);
        *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
        *((_OWORD *)v22 + 5) = v25;
        v26 = *((_OWORD *)v23 + 7);
        *((_OWORD *)v22 + 6) = *((_OWORD *)v23 + 6);
        *((_OWORD *)v22 + 7) = v26;
        v27 = *((_OWORD *)v23 + 1);
        *(_OWORD *)v22 = *(_OWORD *)v23;
        *((_OWORD *)v22 + 1) = v27;
        v28 = *((_OWORD *)v23 + 3);
        *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
        *((_OWORD *)v22 + 3) = v28;
        goto LABEL_12;
      case 0:
        *a1 = *a2;
        v6 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_1A5949EF4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

uint64_t _s12ConcatenatorVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A583913C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s12ConcatenatorV5StateOMa(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s12ConcatenatorVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5839184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s12ConcatenatorV5StateOMa(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MessageSectionData.Concatenator(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7A05E8);
}

uint64_t sub_1A58391D8()
{
  uint64_t result;
  unint64_t v1;

  result = _s12ConcatenatorV5StateOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s12ConcatenatorV9CompletedVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594AE60();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = v10[176];
    if (v11 == 255)
    {
      v12 = *((_OWORD *)v10 + 9);
      *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
      *((_OWORD *)v9 + 9) = v12;
      *((_OWORD *)v9 + 10) = *((_OWORD *)v10 + 10);
      v9[176] = v10[176];
      v13 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v13;
      v14 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v14;
      v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
      v16 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v16;
    }
    else
    {
      v41 = v11 & 1;
      v18 = *((_QWORD *)v10 + 4);
      v19 = *((_QWORD *)v10 + 5);
      v20 = *((_QWORD *)v10 + 6);
      v27 = *((_QWORD *)v10 + 8);
      v28 = *((_QWORD *)v10 + 9);
      v29 = *((_QWORD *)v10 + 10);
      v30 = *((_QWORD *)v10 + 11);
      v31 = *((_QWORD *)v10 + 12);
      v32 = *((_QWORD *)v10 + 13);
      v33 = *((_QWORD *)v10 + 14);
      v34 = *((_QWORD *)v10 + 15);
      v35 = *((_QWORD *)v10 + 16);
      v36 = *((_QWORD *)v10 + 17);
      v37 = *((_QWORD *)v10 + 18);
      v38 = *((_QWORD *)v10 + 19);
      v39 = *((_QWORD *)v10 + 20);
      v40 = *((_QWORD *)v10 + 21);
      v21 = *(_QWORD *)v10;
      v22 = *((_QWORD *)v10 + 1);
      v23 = *((_QWORD *)v10 + 2);
      v24 = *((_QWORD *)v10 + 3);
      v25 = *((_QWORD *)v10 + 7);
      sub_1A552370C(*(_QWORD *)v10, v22, v23, v24, v18, v19, v20, v25, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37,
        v38,
        v39,
        v40,
        v11 & 1);
      *(_QWORD *)v9 = v21;
      *((_QWORD *)v9 + 1) = v22;
      *((_QWORD *)v9 + 2) = v23;
      *((_QWORD *)v9 + 3) = v24;
      *((_QWORD *)v9 + 4) = v18;
      *((_QWORD *)v9 + 5) = v19;
      *((_QWORD *)v9 + 6) = v20;
      *((_QWORD *)v9 + 7) = v25;
      *((_QWORD *)v9 + 8) = v27;
      *((_QWORD *)v9 + 9) = v28;
      *((_QWORD *)v9 + 10) = v29;
      *((_QWORD *)v9 + 11) = v30;
      *((_QWORD *)v9 + 12) = v31;
      *((_QWORD *)v9 + 13) = v32;
      *((_QWORD *)v9 + 14) = v33;
      *((_QWORD *)v9 + 15) = v34;
      *((_QWORD *)v9 + 16) = v35;
      *((_QWORD *)v9 + 17) = v36;
      *((_QWORD *)v9 + 18) = v37;
      *((_QWORD *)v9 + 19) = v38;
      *((_QWORD *)v9 + 20) = v39;
      *((_QWORD *)v9 + 21) = v40;
      v9[176] = v41;
    }
  }
  return a1;
}

void _s12ConcatenatorV9CompletedVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;

  v4 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = *(unsigned __int8 *)(v5 + 176);
  if (v6 != 255)
    sub_1A55241F0(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 96), *(_QWORD *)(v5 + 104), *(_QWORD *)(v5 + 112), *(_QWORD *)(v5 + 120), *(_QWORD *)(v5 + 128), *(_QWORD *)(v5 + 136), *(_QWORD *)(v5 + 144),
      *(_QWORD *)(v5 + 152),
      *(_QWORD *)(v5 + 160),
      *(_QWORD *)(v5 + 168),
      v6 & 1);
}

uint64_t _s12ConcatenatorV9CompletedVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  int v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *((unsigned __int8 *)v9 + 176);
  if (v10 == 255)
  {
    v11 = *((_OWORD *)v9 + 9);
    *(_OWORD *)(v8 + 128) = *((_OWORD *)v9 + 8);
    *(_OWORD *)(v8 + 144) = v11;
    *(_OWORD *)(v8 + 160) = *((_OWORD *)v9 + 10);
    *(_BYTE *)(v8 + 176) = *((_BYTE *)v9 + 176);
    v12 = *((_OWORD *)v9 + 5);
    *(_OWORD *)(v8 + 64) = *((_OWORD *)v9 + 4);
    *(_OWORD *)(v8 + 80) = v12;
    v13 = *((_OWORD *)v9 + 7);
    *(_OWORD *)(v8 + 96) = *((_OWORD *)v9 + 6);
    *(_OWORD *)(v8 + 112) = v13;
    v14 = *((_OWORD *)v9 + 1);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v14;
    v15 = *((_OWORD *)v9 + 3);
    *(_OWORD *)(v8 + 32) = *((_OWORD *)v9 + 2);
    *(_OWORD *)(v8 + 48) = v15;
  }
  else
  {
    v39 = v10 & 1;
    v16 = v9[4];
    v17 = v9[5];
    v18 = v9[6];
    v25 = v9[8];
    v26 = v9[9];
    v27 = v9[10];
    v28 = v9[11];
    v29 = v9[12];
    v30 = v9[13];
    v31 = v9[14];
    v32 = v9[15];
    v33 = v9[16];
    v34 = v9[17];
    v35 = v9[18];
    v36 = v9[19];
    v37 = v9[20];
    v38 = v9[21];
    v19 = *v9;
    v20 = v9[1];
    v21 = v9[2];
    v22 = v9[3];
    v23 = v9[7];
    sub_1A552370C(*v9, v20, v21, v22, v16, v17, v18, v23, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v10 & 1);
    *(_QWORD *)v8 = v19;
    *(_QWORD *)(v8 + 8) = v20;
    *(_QWORD *)(v8 + 16) = v21;
    *(_QWORD *)(v8 + 24) = v22;
    *(_QWORD *)(v8 + 32) = v16;
    *(_QWORD *)(v8 + 40) = v17;
    *(_QWORD *)(v8 + 48) = v18;
    *(_QWORD *)(v8 + 56) = v23;
    *(_QWORD *)(v8 + 64) = v25;
    *(_QWORD *)(v8 + 72) = v26;
    *(_QWORD *)(v8 + 80) = v27;
    *(_QWORD *)(v8 + 88) = v28;
    *(_QWORD *)(v8 + 96) = v29;
    *(_QWORD *)(v8 + 104) = v30;
    *(_QWORD *)(v8 + 112) = v31;
    *(_QWORD *)(v8 + 120) = v32;
    *(_QWORD *)(v8 + 128) = v33;
    *(_QWORD *)(v8 + 136) = v34;
    *(_QWORD *)(v8 + 144) = v35;
    *(_QWORD *)(v8 + 152) = v36;
    *(_QWORD *)(v8 + 160) = v37;
    *(_QWORD *)(v8 + 168) = v38;
    *(_BYTE *)(v8 + 176) = v39;
  }
  return a1;
}

uint64_t _s12ConcatenatorV9CompletedVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  int v10;
  int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(unsigned __int8 *)(a1 + v7 + 176);
  v11 = *((unsigned __int8 *)v9 + 176);
  if (v10 == 255)
  {
    if (v11 == 255)
    {
      v21 = *v9;
      v22 = v9[1];
      v23 = v9[3];
      *(_OWORD *)(v8 + 32) = v9[2];
      *(_OWORD *)(v8 + 48) = v23;
      *(_OWORD *)v8 = v21;
      *(_OWORD *)(v8 + 16) = v22;
      v24 = v9[4];
      v25 = v9[5];
      v26 = v9[7];
      *(_OWORD *)(v8 + 96) = v9[6];
      *(_OWORD *)(v8 + 112) = v26;
      *(_OWORD *)(v8 + 64) = v24;
      *(_OWORD *)(v8 + 80) = v25;
      v27 = v9[8];
      v28 = v9[9];
      v29 = v9[10];
      *(_BYTE *)(v8 + 176) = *((_BYTE *)v9 + 176);
      *(_OWORD *)(v8 + 144) = v28;
      *(_OWORD *)(v8 + 160) = v29;
      *(_OWORD *)(v8 + 128) = v27;
    }
    else
    {
      v101 = v11 & 1;
      v59 = *((_QWORD *)v9 + 1);
      v60 = *((_QWORD *)v9 + 2);
      v61 = *((_QWORD *)v9 + 3);
      v62 = *((_QWORD *)v9 + 4);
      v63 = *((_QWORD *)v9 + 5);
      v65 = *((_QWORD *)v9 + 6);
      v64 = *((_QWORD *)v9 + 7);
      v73 = *((_QWORD *)v9 + 8);
      v75 = *((_QWORD *)v9 + 9);
      v77 = *((_QWORD *)v9 + 10);
      v79 = *((_QWORD *)v9 + 11);
      v81 = *((_QWORD *)v9 + 12);
      v83 = *((_QWORD *)v9 + 13);
      v85 = *((_QWORD *)v9 + 14);
      v87 = *((_QWORD *)v9 + 15);
      v89 = *((_QWORD *)v9 + 16);
      v91 = *((_QWORD *)v9 + 17);
      v93 = *((_QWORD *)v9 + 18);
      v95 = *((_QWORD *)v9 + 19);
      v97 = *((_QWORD *)v9 + 20);
      v99 = *((_QWORD *)v9 + 21);
      v66 = *(_QWORD *)v9;
      v67 = v59;
      v68 = v60;
      v69 = v61;
      v70 = v64;
      sub_1A552370C(v66, v59, v60, v61, v62, v63, v65, v64, v73, v75, v77, v79, v81, v83, v85, v87, v89, v91, v93,
        v95,
        v97,
        v99,
        v11 & 1);
      *(_QWORD *)v8 = v66;
      *(_QWORD *)(v8 + 8) = v67;
      *(_QWORD *)(v8 + 16) = v68;
      *(_QWORD *)(v8 + 24) = v69;
      *(_QWORD *)(v8 + 32) = v62;
      *(_QWORD *)(v8 + 40) = v63;
      *(_QWORD *)(v8 + 48) = v65;
      *(_QWORD *)(v8 + 56) = v70;
      *(_QWORD *)(v8 + 64) = v73;
      *(_QWORD *)(v8 + 72) = v75;
      *(_QWORD *)(v8 + 80) = v77;
      *(_QWORD *)(v8 + 88) = v79;
      *(_QWORD *)(v8 + 96) = v81;
      *(_QWORD *)(v8 + 104) = v83;
      *(_QWORD *)(v8 + 112) = v85;
      *(_QWORD *)(v8 + 120) = v87;
      *(_QWORD *)(v8 + 128) = v89;
      *(_QWORD *)(v8 + 136) = v91;
      *(_QWORD *)(v8 + 144) = v93;
      *(_QWORD *)(v8 + 152) = v95;
      *(_QWORD *)(v8 + 160) = v97;
      *(_QWORD *)(v8 + 168) = v99;
      *(_BYTE *)(v8 + 176) = v101;
    }
  }
  else if (v11 == 255)
  {
    sub_1A55D9BBC(v8);
    v12 = v9[3];
    v14 = *v9;
    v13 = v9[1];
    *(_OWORD *)(v8 + 32) = v9[2];
    *(_OWORD *)(v8 + 48) = v12;
    *(_OWORD *)v8 = v14;
    *(_OWORD *)(v8 + 16) = v13;
    v15 = v9[7];
    v17 = v9[4];
    v16 = v9[5];
    *(_OWORD *)(v8 + 96) = v9[6];
    *(_OWORD *)(v8 + 112) = v15;
    *(_OWORD *)(v8 + 64) = v17;
    *(_OWORD *)(v8 + 80) = v16;
    v19 = v9[9];
    v18 = v9[10];
    v20 = v9[8];
    *(_BYTE *)(v8 + 176) = *((_BYTE *)v9 + 176);
    *(_OWORD *)(v8 + 144) = v19;
    *(_OWORD *)(v8 + 160) = v18;
    *(_OWORD *)(v8 + 128) = v20;
  }
  else
  {
    v100 = v11 & 1;
    v30 = *((_QWORD *)v9 + 1);
    v31 = *((_QWORD *)v9 + 2);
    v32 = *((_QWORD *)v9 + 3);
    v33 = *((_QWORD *)v9 + 4);
    v34 = *((_QWORD *)v9 + 5);
    v36 = *((_QWORD *)v9 + 6);
    v35 = *((_QWORD *)v9 + 7);
    v72 = *((_QWORD *)v9 + 8);
    v74 = *((_QWORD *)v9 + 9);
    v76 = *((_QWORD *)v9 + 10);
    v78 = *((_QWORD *)v9 + 11);
    v80 = *((_QWORD *)v9 + 12);
    v82 = *((_QWORD *)v9 + 13);
    v84 = *((_QWORD *)v9 + 14);
    v86 = *((_QWORD *)v9 + 15);
    v88 = *((_QWORD *)v9 + 16);
    v90 = *((_QWORD *)v9 + 17);
    v92 = *((_QWORD *)v9 + 18);
    v94 = *((_QWORD *)v9 + 19);
    v96 = *((_QWORD *)v9 + 20);
    v98 = *((_QWORD *)v9 + 21);
    v37 = *(_QWORD *)v9;
    v38 = v30;
    v39 = v31;
    v40 = v32;
    v41 = v35;
    sub_1A552370C(v37, v30, v31, v32, v33, v34, v36, v35, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92,
      v94,
      v96,
      v98,
      v11 & 1);
    v42 = *(_QWORD *)v8;
    v43 = *(_QWORD *)(v8 + 8);
    *(_QWORD *)v8 = v37;
    *(_QWORD *)(v8 + 8) = v38;
    v44 = *(_QWORD *)(v8 + 16);
    v45 = *(_QWORD *)(v8 + 24);
    *(_QWORD *)(v8 + 16) = v39;
    *(_QWORD *)(v8 + 24) = v40;
    v46 = *(_QWORD *)(v8 + 32);
    v47 = *(_QWORD *)(v8 + 40);
    *(_QWORD *)(v8 + 32) = v33;
    *(_QWORD *)(v8 + 40) = v34;
    v48 = *(_QWORD *)(v8 + 48);
    v49 = *(_QWORD *)(v8 + 56);
    *(_QWORD *)(v8 + 48) = v36;
    *(_QWORD *)(v8 + 56) = v41;
    v50 = *(_OWORD *)(v8 + 64);
    v51 = *(_OWORD *)(v8 + 80);
    *(_QWORD *)(v8 + 64) = v72;
    *(_QWORD *)(v8 + 72) = v74;
    *(_QWORD *)(v8 + 80) = v76;
    *(_QWORD *)(v8 + 88) = v78;
    v52 = *(_OWORD *)(v8 + 96);
    v53 = *(_OWORD *)(v8 + 112);
    *(_QWORD *)(v8 + 96) = v80;
    *(_QWORD *)(v8 + 104) = v82;
    *(_QWORD *)(v8 + 112) = v84;
    *(_QWORD *)(v8 + 120) = v86;
    v54 = *(_OWORD *)(v8 + 128);
    v55 = *(_OWORD *)(v8 + 144);
    *(_QWORD *)(v8 + 128) = v88;
    *(_QWORD *)(v8 + 136) = v90;
    *(_QWORD *)(v8 + 144) = v92;
    *(_QWORD *)(v8 + 152) = v94;
    v56 = *(_QWORD *)(v8 + 160);
    v57 = *(_QWORD *)(v8 + 168);
    *(_QWORD *)(v8 + 160) = v96;
    *(_QWORD *)(v8 + 168) = v98;
    v58 = *(_BYTE *)(v8 + 176);
    *(_BYTE *)(v8 + 176) = v100;
    sub_1A55241F0(v42, v43, v44, v45, v46, v47, v48, v49, v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, *((uint64_t *)&v52 + 1), v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55,
      *((uint64_t *)&v55 + 1),
      v56,
      v57,
      v58);
  }
  return a1;
}

uint64_t _s12ConcatenatorV9CompletedVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v8 + 144) = v10;
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(_BYTE *)(v8 + 176) = *(_BYTE *)(v9 + 176);
  v11 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v11;
  v12 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v12;
  v13 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v13;
  v14 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v14;
  return a1;
}

uint64_t _s12ConcatenatorV9CompletedVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(unsigned __int8 *)(a1 + v7 + 176);
  if (v10 != 255)
  {
    v11 = *(unsigned __int8 *)(v9 + 176);
    if (v11 != 255)
    {
      v17 = *(_QWORD *)v8;
      v18 = *(_QWORD *)(v8 + 8);
      v19 = *(_QWORD *)(v8 + 16);
      v20 = *(_QWORD *)(v8 + 24);
      v21 = *(_QWORD *)(v8 + 32);
      v22 = *(_QWORD *)(v8 + 40);
      v23 = *(_QWORD *)(v8 + 48);
      v24 = *(_QWORD *)(v8 + 56);
      v25 = *(_OWORD *)(v8 + 64);
      v26 = *(_OWORD *)(v8 + 80);
      v27 = *(_OWORD *)(v8 + 96);
      v28 = *(_OWORD *)(v8 + 112);
      v29 = *(_OWORD *)(v8 + 128);
      v30 = *(_OWORD *)(v8 + 144);
      v31 = *(_QWORD *)(v8 + 160);
      v32 = *(_QWORD *)(v8 + 168);
      v33 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v33;
      v34 = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
      *(_OWORD *)(v8 + 48) = v34;
      v35 = *(_OWORD *)(v9 + 80);
      *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
      *(_OWORD *)(v8 + 80) = v35;
      v36 = *(_OWORD *)(v9 + 112);
      *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
      *(_OWORD *)(v8 + 112) = v36;
      v37 = *(_OWORD *)(v9 + 144);
      *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
      *(_OWORD *)(v8 + 144) = v37;
      *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
      *(_BYTE *)(v8 + 176) = v11 & 1;
      sub_1A55241F0(v17, v18, v19, v20, v21, v22, v23, v24, v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30,
        *((uint64_t *)&v30 + 1),
        v31,
        v32,
        v10 & 1);
      return a1;
    }
    sub_1A55D9BBC(v8);
  }
  v12 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v8 + 144) = v12;
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(_BYTE *)(v8 + 176) = *(_BYTE *)(v9 + 176);
  v13 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v13;
  v14 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v14;
  v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
  v16 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v16;
  return a1;
}

uint64_t _s12ConcatenatorV9CompletedVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5839BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_1Tm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0DEF648]);
}

uint64_t _s12ConcatenatorV9CompletedVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5839C04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_2Tm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0DEF648]);
}

uint64_t sub_1A5839C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A583A8BC(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF648]);
}

uint64_t *sub_1A5839C1C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1A594AE60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = v11[176];
    if (v12 == 255)
    {
      v13 = *((_OWORD *)v11 + 9);
      *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
      *((_OWORD *)v10 + 9) = v13;
      *((_OWORD *)v10 + 10) = *((_OWORD *)v11 + 10);
      v10[176] = v11[176];
      v14 = *((_OWORD *)v11 + 5);
      *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
      *((_OWORD *)v10 + 5) = v14;
      v15 = *((_OWORD *)v11 + 7);
      *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
      *((_OWORD *)v10 + 7) = v15;
      v16 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v16;
      v17 = *((_OWORD *)v11 + 3);
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((_OWORD *)v10 + 3) = v17;
    }
    else
    {
      v41 = v12 & 1;
      v18 = *((_QWORD *)v11 + 4);
      v19 = *((_QWORD *)v11 + 5);
      v20 = *((_QWORD *)v11 + 6);
      v27 = *((_QWORD *)v11 + 8);
      v28 = *((_QWORD *)v11 + 9);
      v29 = *((_QWORD *)v11 + 10);
      v30 = *((_QWORD *)v11 + 11);
      v31 = *((_QWORD *)v11 + 12);
      v32 = *((_QWORD *)v11 + 13);
      v33 = *((_QWORD *)v11 + 14);
      v34 = *((_QWORD *)v11 + 15);
      v35 = *((_QWORD *)v11 + 16);
      v36 = *((_QWORD *)v11 + 17);
      v37 = *((_QWORD *)v11 + 18);
      v38 = *((_QWORD *)v11 + 19);
      v39 = *((_QWORD *)v11 + 20);
      v40 = *((_QWORD *)v11 + 21);
      v21 = *(_QWORD *)v11;
      v22 = *((_QWORD *)v11 + 1);
      v23 = *((_QWORD *)v11 + 2);
      v24 = *((_QWORD *)v11 + 3);
      v25 = *((_QWORD *)v11 + 7);
      sub_1A552370C(*(_QWORD *)v11, v22, v23, v24, v18, v19, v20, v25, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37,
        v38,
        v39,
        v40,
        v12 & 1);
      *(_QWORD *)v10 = v21;
      *((_QWORD *)v10 + 1) = v22;
      *((_QWORD *)v10 + 2) = v23;
      *((_QWORD *)v10 + 3) = v24;
      *((_QWORD *)v10 + 4) = v18;
      *((_QWORD *)v10 + 5) = v19;
      *((_QWORD *)v10 + 6) = v20;
      *((_QWORD *)v10 + 7) = v25;
      *((_QWORD *)v10 + 8) = v27;
      *((_QWORD *)v10 + 9) = v28;
      *((_QWORD *)v10 + 10) = v29;
      *((_QWORD *)v10 + 11) = v30;
      *((_QWORD *)v10 + 12) = v31;
      *((_QWORD *)v10 + 13) = v32;
      *((_QWORD *)v10 + 14) = v33;
      *((_QWORD *)v10 + 15) = v34;
      *((_QWORD *)v10 + 16) = v35;
      *((_QWORD *)v10 + 17) = v36;
      *((_QWORD *)v10 + 18) = v37;
      *((_QWORD *)v10 + 19) = v38;
      *((_QWORD *)v10 + 20) = v39;
      *((_QWORD *)v10 + 21) = v40;
      v10[176] = v41;
    }
  }
  return a1;
}

void sub_1A5839E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;

  _s13TemporaryDataOMa();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1A594AE60();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  v6 = *(unsigned __int8 *)(v5 + 176);
  if (v6 != 255)
    sub_1A55241F0(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 96), *(_QWORD *)(v5 + 104), *(_QWORD *)(v5 + 112), *(_QWORD *)(v5 + 120), *(_QWORD *)(v5 + 128), *(_QWORD *)(v5 + 136), *(_QWORD *)(v5 + 144),
      *(_QWORD *)(v5 + 152),
      *(_QWORD *)(v5 + 160),
      *(_QWORD *)(v5 + 168),
      v6 & 1);
}

_QWORD *sub_1A5839F14(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  _s13TemporaryDataOMa();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1A594AE60();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = v9[176];
  if (v10 == 255)
  {
    v11 = *((_OWORD *)v9 + 9);
    *((_OWORD *)v8 + 8) = *((_OWORD *)v9 + 8);
    *((_OWORD *)v8 + 9) = v11;
    *((_OWORD *)v8 + 10) = *((_OWORD *)v9 + 10);
    v8[176] = v9[176];
    v12 = *((_OWORD *)v9 + 5);
    *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
    *((_OWORD *)v8 + 5) = v12;
    v13 = *((_OWORD *)v9 + 7);
    *((_OWORD *)v8 + 6) = *((_OWORD *)v9 + 6);
    *((_OWORD *)v8 + 7) = v13;
    v14 = *((_OWORD *)v9 + 1);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v14;
    v15 = *((_OWORD *)v9 + 3);
    *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
    *((_OWORD *)v8 + 3) = v15;
  }
  else
  {
    v39 = v10 & 1;
    v16 = *((_QWORD *)v9 + 4);
    v17 = *((_QWORD *)v9 + 5);
    v18 = *((_QWORD *)v9 + 6);
    v25 = *((_QWORD *)v9 + 8);
    v26 = *((_QWORD *)v9 + 9);
    v27 = *((_QWORD *)v9 + 10);
    v28 = *((_QWORD *)v9 + 11);
    v29 = *((_QWORD *)v9 + 12);
    v30 = *((_QWORD *)v9 + 13);
    v31 = *((_QWORD *)v9 + 14);
    v32 = *((_QWORD *)v9 + 15);
    v33 = *((_QWORD *)v9 + 16);
    v34 = *((_QWORD *)v9 + 17);
    v35 = *((_QWORD *)v9 + 18);
    v36 = *((_QWORD *)v9 + 19);
    v37 = *((_QWORD *)v9 + 20);
    v38 = *((_QWORD *)v9 + 21);
    v19 = *(_QWORD *)v9;
    v20 = *((_QWORD *)v9 + 1);
    v21 = *((_QWORD *)v9 + 2);
    v22 = *((_QWORD *)v9 + 3);
    v23 = *((_QWORD *)v9 + 7);
    sub_1A552370C(*(_QWORD *)v9, v20, v21, v22, v16, v17, v18, v23, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v10 & 1);
    *(_QWORD *)v8 = v19;
    *((_QWORD *)v8 + 1) = v20;
    *((_QWORD *)v8 + 2) = v21;
    *((_QWORD *)v8 + 3) = v22;
    *((_QWORD *)v8 + 4) = v16;
    *((_QWORD *)v8 + 5) = v17;
    *((_QWORD *)v8 + 6) = v18;
    *((_QWORD *)v8 + 7) = v23;
    *((_QWORD *)v8 + 8) = v25;
    *((_QWORD *)v8 + 9) = v26;
    *((_QWORD *)v8 + 10) = v27;
    *((_QWORD *)v8 + 11) = v28;
    *((_QWORD *)v8 + 12) = v29;
    *((_QWORD *)v8 + 13) = v30;
    *((_QWORD *)v8 + 14) = v31;
    *((_QWORD *)v8 + 15) = v32;
    *((_QWORD *)v8 + 16) = v33;
    *((_QWORD *)v8 + 17) = v34;
    *((_QWORD *)v8 + 18) = v35;
    *((_QWORD *)v8 + 19) = v36;
    *((_QWORD *)v8 + 20) = v37;
    *((_QWORD *)v8 + 21) = v38;
    v8[176] = v39;
  }
  return a1;
}

_QWORD *sub_1A583A124(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, (uint64_t (*)(_QWORD))_s13TemporaryDataOMa);
    _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1A594AE60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *((unsigned __int8 *)a1 + v7 + 176);
  v11 = v9[176];
  if (v10 == 255)
  {
    if (v11 == 255)
    {
      v21 = *(_OWORD *)v9;
      v22 = *((_OWORD *)v9 + 1);
      v23 = *((_OWORD *)v9 + 3);
      *(_OWORD *)(v8 + 32) = *((_OWORD *)v9 + 2);
      *(_OWORD *)(v8 + 48) = v23;
      *(_OWORD *)v8 = v21;
      *(_OWORD *)(v8 + 16) = v22;
      v24 = *((_OWORD *)v9 + 4);
      v25 = *((_OWORD *)v9 + 5);
      v26 = *((_OWORD *)v9 + 7);
      *(_OWORD *)(v8 + 96) = *((_OWORD *)v9 + 6);
      *(_OWORD *)(v8 + 112) = v26;
      *(_OWORD *)(v8 + 64) = v24;
      *(_OWORD *)(v8 + 80) = v25;
      v27 = *((_OWORD *)v9 + 8);
      v28 = *((_OWORD *)v9 + 9);
      v29 = *((_OWORD *)v9 + 10);
      *(_BYTE *)(v8 + 176) = v9[176];
      *(_OWORD *)(v8 + 144) = v28;
      *(_OWORD *)(v8 + 160) = v29;
      *(_OWORD *)(v8 + 128) = v27;
    }
    else
    {
      v101 = v11 & 1;
      v59 = *((_QWORD *)v9 + 1);
      v60 = *((_QWORD *)v9 + 2);
      v61 = *((_QWORD *)v9 + 3);
      v62 = *((_QWORD *)v9 + 4);
      v63 = *((_QWORD *)v9 + 5);
      v65 = *((_QWORD *)v9 + 6);
      v64 = *((_QWORD *)v9 + 7);
      v73 = *((_QWORD *)v9 + 8);
      v75 = *((_QWORD *)v9 + 9);
      v77 = *((_QWORD *)v9 + 10);
      v79 = *((_QWORD *)v9 + 11);
      v81 = *((_QWORD *)v9 + 12);
      v83 = *((_QWORD *)v9 + 13);
      v85 = *((_QWORD *)v9 + 14);
      v87 = *((_QWORD *)v9 + 15);
      v89 = *((_QWORD *)v9 + 16);
      v91 = *((_QWORD *)v9 + 17);
      v93 = *((_QWORD *)v9 + 18);
      v95 = *((_QWORD *)v9 + 19);
      v97 = *((_QWORD *)v9 + 20);
      v99 = *((_QWORD *)v9 + 21);
      v66 = *(_QWORD *)v9;
      v67 = v59;
      v68 = v60;
      v69 = v61;
      v70 = v64;
      sub_1A552370C(v66, v59, v60, v61, v62, v63, v65, v64, v73, v75, v77, v79, v81, v83, v85, v87, v89, v91, v93,
        v95,
        v97,
        v99,
        v11 & 1);
      *(_QWORD *)v8 = v66;
      *(_QWORD *)(v8 + 8) = v67;
      *(_QWORD *)(v8 + 16) = v68;
      *(_QWORD *)(v8 + 24) = v69;
      *(_QWORD *)(v8 + 32) = v62;
      *(_QWORD *)(v8 + 40) = v63;
      *(_QWORD *)(v8 + 48) = v65;
      *(_QWORD *)(v8 + 56) = v70;
      *(_QWORD *)(v8 + 64) = v73;
      *(_QWORD *)(v8 + 72) = v75;
      *(_QWORD *)(v8 + 80) = v77;
      *(_QWORD *)(v8 + 88) = v79;
      *(_QWORD *)(v8 + 96) = v81;
      *(_QWORD *)(v8 + 104) = v83;
      *(_QWORD *)(v8 + 112) = v85;
      *(_QWORD *)(v8 + 120) = v87;
      *(_QWORD *)(v8 + 128) = v89;
      *(_QWORD *)(v8 + 136) = v91;
      *(_QWORD *)(v8 + 144) = v93;
      *(_QWORD *)(v8 + 152) = v95;
      *(_QWORD *)(v8 + 160) = v97;
      *(_QWORD *)(v8 + 168) = v99;
      *(_BYTE *)(v8 + 176) = v101;
    }
  }
  else if (v11 == 255)
  {
    sub_1A55D9BBC(v8);
    v12 = *((_OWORD *)v9 + 3);
    v14 = *(_OWORD *)v9;
    v13 = *((_OWORD *)v9 + 1);
    *(_OWORD *)(v8 + 32) = *((_OWORD *)v9 + 2);
    *(_OWORD *)(v8 + 48) = v12;
    *(_OWORD *)v8 = v14;
    *(_OWORD *)(v8 + 16) = v13;
    v15 = *((_OWORD *)v9 + 7);
    v17 = *((_OWORD *)v9 + 4);
    v16 = *((_OWORD *)v9 + 5);
    *(_OWORD *)(v8 + 96) = *((_OWORD *)v9 + 6);
    *(_OWORD *)(v8 + 112) = v15;
    *(_OWORD *)(v8 + 64) = v17;
    *(_OWORD *)(v8 + 80) = v16;
    v19 = *((_OWORD *)v9 + 9);
    v18 = *((_OWORD *)v9 + 10);
    v20 = *((_OWORD *)v9 + 8);
    *(_BYTE *)(v8 + 176) = v9[176];
    *(_OWORD *)(v8 + 144) = v19;
    *(_OWORD *)(v8 + 160) = v18;
    *(_OWORD *)(v8 + 128) = v20;
  }
  else
  {
    v100 = v11 & 1;
    v30 = *((_QWORD *)v9 + 1);
    v31 = *((_QWORD *)v9 + 2);
    v32 = *((_QWORD *)v9 + 3);
    v33 = *((_QWORD *)v9 + 4);
    v34 = *((_QWORD *)v9 + 5);
    v36 = *((_QWORD *)v9 + 6);
    v35 = *((_QWORD *)v9 + 7);
    v72 = *((_QWORD *)v9 + 8);
    v74 = *((_QWORD *)v9 + 9);
    v76 = *((_QWORD *)v9 + 10);
    v78 = *((_QWORD *)v9 + 11);
    v80 = *((_QWORD *)v9 + 12);
    v82 = *((_QWORD *)v9 + 13);
    v84 = *((_QWORD *)v9 + 14);
    v86 = *((_QWORD *)v9 + 15);
    v88 = *((_QWORD *)v9 + 16);
    v90 = *((_QWORD *)v9 + 17);
    v92 = *((_QWORD *)v9 + 18);
    v94 = *((_QWORD *)v9 + 19);
    v96 = *((_QWORD *)v9 + 20);
    v98 = *((_QWORD *)v9 + 21);
    v37 = *(_QWORD *)v9;
    v38 = v30;
    v39 = v31;
    v40 = v32;
    v41 = v35;
    sub_1A552370C(v37, v30, v31, v32, v33, v34, v36, v35, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92,
      v94,
      v96,
      v98,
      v11 & 1);
    v42 = *(_QWORD *)v8;
    v43 = *(_QWORD *)(v8 + 8);
    *(_QWORD *)v8 = v37;
    *(_QWORD *)(v8 + 8) = v38;
    v44 = *(_QWORD *)(v8 + 16);
    v45 = *(_QWORD *)(v8 + 24);
    *(_QWORD *)(v8 + 16) = v39;
    *(_QWORD *)(v8 + 24) = v40;
    v46 = *(_QWORD *)(v8 + 32);
    v47 = *(_QWORD *)(v8 + 40);
    *(_QWORD *)(v8 + 32) = v33;
    *(_QWORD *)(v8 + 40) = v34;
    v48 = *(_QWORD *)(v8 + 48);
    v49 = *(_QWORD *)(v8 + 56);
    *(_QWORD *)(v8 + 48) = v36;
    *(_QWORD *)(v8 + 56) = v41;
    v50 = *(_OWORD *)(v8 + 64);
    v51 = *(_OWORD *)(v8 + 80);
    *(_QWORD *)(v8 + 64) = v72;
    *(_QWORD *)(v8 + 72) = v74;
    *(_QWORD *)(v8 + 80) = v76;
    *(_QWORD *)(v8 + 88) = v78;
    v52 = *(_OWORD *)(v8 + 96);
    v53 = *(_OWORD *)(v8 + 112);
    *(_QWORD *)(v8 + 96) = v80;
    *(_QWORD *)(v8 + 104) = v82;
    *(_QWORD *)(v8 + 112) = v84;
    *(_QWORD *)(v8 + 120) = v86;
    v54 = *(_OWORD *)(v8 + 128);
    v55 = *(_OWORD *)(v8 + 144);
    *(_QWORD *)(v8 + 128) = v88;
    *(_QWORD *)(v8 + 136) = v90;
    *(_QWORD *)(v8 + 144) = v92;
    *(_QWORD *)(v8 + 152) = v94;
    v56 = *(_QWORD *)(v8 + 160);
    v57 = *(_QWORD *)(v8 + 168);
    *(_QWORD *)(v8 + 160) = v96;
    *(_QWORD *)(v8 + 168) = v98;
    v58 = *(_BYTE *)(v8 + 176);
    *(_BYTE *)(v8 + 176) = v100;
    sub_1A55241F0(v42, v43, v44, v45, v46, v47, v48, v49, v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, *((uint64_t *)&v52 + 1), v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55,
      *((uint64_t *)&v55 + 1),
      v56,
      v57,
      v58);
  }
  return a1;
}

char *sub_1A583A518(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v6 = _s13TemporaryDataOMa();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1A594AE60();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *((_OWORD *)v10 + 9);
  *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
  *((_OWORD *)v9 + 9) = v11;
  *((_OWORD *)v9 + 10) = *((_OWORD *)v10 + 10);
  v9[176] = v10[176];
  v12 = *((_OWORD *)v10 + 5);
  *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
  *((_OWORD *)v9 + 5) = v12;
  v13 = *((_OWORD *)v10 + 7);
  *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
  *((_OWORD *)v9 + 7) = v13;
  v14 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v14;
  v15 = *((_OWORD *)v10 + 3);
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  *((_OWORD *)v9 + 3) = v15;
  return a1;
}

unsigned __int8 *sub_1A583A5F4(unsigned __int8 *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  int v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  if (a1 != (unsigned __int8 *)a2)
  {
    sub_1A55034FC((uint64_t)a1, (uint64_t (*)(_QWORD))_s13TemporaryDataOMa);
    v6 = _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1A594AE60();
      (*(void (**)(unsigned __int8 *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = (uint64_t)&a1[v8];
  v10 = &a2[v8];
  v11 = a1[v8 + 176];
  if (v11 != 255)
  {
    v12 = v10[176];
    if (v12 != 255)
    {
      v18 = *(_QWORD *)v9;
      v19 = *(_QWORD *)(v9 + 8);
      v20 = *(_QWORD *)(v9 + 16);
      v21 = *(_QWORD *)(v9 + 24);
      v22 = *(_QWORD *)(v9 + 32);
      v23 = *(_QWORD *)(v9 + 40);
      v24 = *(_QWORD *)(v9 + 48);
      v25 = *(_QWORD *)(v9 + 56);
      v26 = *(_OWORD *)(v9 + 64);
      v27 = *(_OWORD *)(v9 + 80);
      v28 = *(_OWORD *)(v9 + 96);
      v29 = *(_OWORD *)(v9 + 112);
      v30 = *(_OWORD *)(v9 + 128);
      v31 = *(_OWORD *)(v9 + 144);
      v32 = *(_QWORD *)(v9 + 160);
      v33 = *(_QWORD *)(v9 + 168);
      v34 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *(_OWORD *)(v9 + 16) = v34;
      v35 = *((_OWORD *)v10 + 3);
      *(_OWORD *)(v9 + 32) = *((_OWORD *)v10 + 2);
      *(_OWORD *)(v9 + 48) = v35;
      v36 = *((_OWORD *)v10 + 5);
      *(_OWORD *)(v9 + 64) = *((_OWORD *)v10 + 4);
      *(_OWORD *)(v9 + 80) = v36;
      v37 = *((_OWORD *)v10 + 7);
      *(_OWORD *)(v9 + 96) = *((_OWORD *)v10 + 6);
      *(_OWORD *)(v9 + 112) = v37;
      v38 = *((_OWORD *)v10 + 9);
      *(_OWORD *)(v9 + 128) = *((_OWORD *)v10 + 8);
      *(_OWORD *)(v9 + 144) = v38;
      *(_OWORD *)(v9 + 160) = *((_OWORD *)v10 + 10);
      *(_BYTE *)(v9 + 176) = v12 & 1;
      sub_1A55241F0(v18, v19, v20, v21, v22, v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31,
        *((uint64_t *)&v31 + 1),
        v32,
        v33,
        v11 & 1);
      return a1;
    }
    sub_1A55D9BBC(v9);
  }
  v13 = *((_OWORD *)v10 + 9);
  *(_OWORD *)(v9 + 128) = *((_OWORD *)v10 + 8);
  *(_OWORD *)(v9 + 144) = v13;
  *(_OWORD *)(v9 + 160) = *((_OWORD *)v10 + 10);
  *(_BYTE *)(v9 + 176) = v10[176];
  v14 = *((_OWORD *)v10 + 5);
  *(_OWORD *)(v9 + 64) = *((_OWORD *)v10 + 4);
  *(_OWORD *)(v9 + 80) = v14;
  v15 = *((_OWORD *)v10 + 7);
  *(_OWORD *)(v9 + 96) = *((_OWORD *)v10 + 6);
  *(_OWORD *)(v9 + 112) = v15;
  v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v16;
  v17 = *((_OWORD *)v10 + 3);
  *(_OWORD *)(v9 + 32) = *((_OWORD *)v10 + 2);
  *(_OWORD *)(v9 + 48) = v17;
  return a1;
}

uint64_t sub_1A583A788()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A583A794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_1Tm(a1, a2, a3, (uint64_t (*)(_QWORD))_s13TemporaryDataOMa);
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v10;

  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, v7);
  v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 176);
  if (v10 <= 1)
    return 0;
  else
    return v10 ^ 0xFF;
}

uint64_t sub_1A583A81C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A583A828(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_2Tm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))_s13TemporaryDataOMa);
}

uint64_t __swift_store_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;
  uint64_t v10;

  result = a5(0);
  v10 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 176) = ~(_BYTE)a2;
  return result;
}

uint64_t sub_1A583A8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A583A8BC(a1, a2, a3, (uint64_t (*)(uint64_t))_s13TemporaryDataOMa);
}

uint64_t sub_1A583A8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A583A92C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v14 = sub_1A594AE60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v15 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = v17[176];
      if (v18 == 255)
      {
LABEL_14:
        v20 = *((_OWORD *)v17 + 9);
        *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
        *((_OWORD *)v16 + 9) = v20;
        *((_OWORD *)v16 + 10) = *((_OWORD *)v17 + 10);
        v16[176] = v17[176];
        v21 = *((_OWORD *)v17 + 5);
        *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
        *((_OWORD *)v16 + 5) = v21;
        v22 = *((_OWORD *)v17 + 7);
        *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
        *((_OWORD *)v16 + 7) = v22;
        v23 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v23;
        v24 = *((_OWORD *)v17 + 3);
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        *((_OWORD *)v16 + 3) = v24;
        goto LABEL_16;
      }
LABEL_15:
      v48 = v18 & 1;
      v25 = *((_QWORD *)v17 + 5);
      v26 = *((_QWORD *)v17 + 6);
      v33 = *((_QWORD *)v17 + 7);
      v34 = *((_QWORD *)v17 + 8);
      v35 = *((_QWORD *)v17 + 9);
      v36 = *((_QWORD *)v17 + 10);
      v37 = *((_QWORD *)v17 + 11);
      v38 = *((_QWORD *)v17 + 12);
      v39 = *((_QWORD *)v17 + 13);
      v40 = *((_QWORD *)v17 + 14);
      v41 = *((_QWORD *)v17 + 15);
      v42 = *((_QWORD *)v17 + 16);
      v43 = *((_QWORD *)v17 + 17);
      v44 = *((_QWORD *)v17 + 18);
      v45 = *((_QWORD *)v17 + 19);
      v46 = *((_QWORD *)v17 + 20);
      v47 = *((_QWORD *)v17 + 21);
      v27 = *(_QWORD *)v17;
      v28 = *((_QWORD *)v17 + 1);
      v29 = *((_QWORD *)v17 + 2);
      v30 = *((_QWORD *)v17 + 3);
      v31 = *((_QWORD *)v17 + 4);
      sub_1A552370C(*(_QWORD *)v17, v28, v29, v30, v31, v25, v26, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44,
        v45,
        v46,
        v47,
        v18 & 1);
      *(_QWORD *)v16 = v27;
      *((_QWORD *)v16 + 1) = v28;
      *((_QWORD *)v16 + 2) = v29;
      *((_QWORD *)v16 + 3) = v30;
      *((_QWORD *)v16 + 4) = v31;
      *((_QWORD *)v16 + 5) = v25;
      *((_QWORD *)v16 + 6) = v26;
      *((_QWORD *)v16 + 7) = v33;
      *((_QWORD *)v16 + 8) = v34;
      *((_QWORD *)v16 + 9) = v35;
      *((_QWORD *)v16 + 10) = v36;
      *((_QWORD *)v16 + 11) = v37;
      *((_QWORD *)v16 + 12) = v38;
      *((_QWORD *)v16 + 13) = v39;
      *((_QWORD *)v16 + 14) = v40;
      *((_QWORD *)v16 + 15) = v41;
      *((_QWORD *)v16 + 16) = v42;
      *((_QWORD *)v16 + 17) = v43;
      *((_QWORD *)v16 + 18) = v44;
      *((_QWORD *)v16 + 19) = v45;
      *((_QWORD *)v16 + 20) = v46;
      *((_QWORD *)v16 + 21) = v47;
      v16[176] = v48;
      goto LABEL_16;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v13 = sub_1A594AE60();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      v19 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      v16 = (char *)a1 + v19;
      v17 = (char *)a2 + v19;
      v18 = v17[176];
      if (v18 == 255)
        goto LABEL_14;
      goto LABEL_15;
    case 0:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v8 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1A5949EF4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  return a1;
}

void sub_1A583AD94(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v5 = sub_1A594AE60();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = type metadata accessor for MessageSectionData.Concatenator.Completed(0);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (!EnumCaseMultiPayload)
      {
        v3 = a1 + *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
        v4 = sub_1A5949EF4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
      }
      return;
    }
    _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1A594AE60();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
    }
    else
    {
      swift_release();
    }
    v6 = _s12ConcatenatorV5StateO9ReceivingVMa(0);
  }
  v8 = a1 + *(int *)(v6 + 20);
  v9 = *(unsigned __int8 *)(v8 + 176);
  if (v9 != 255)
    sub_1A55241F0(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 56), *(_QWORD *)(v8 + 64), *(_QWORD *)(v8 + 72), *(_QWORD *)(v8 + 80), *(_QWORD *)(v8 + 88), *(_QWORD *)(v8 + 96), *(_QWORD *)(v8 + 104), *(_QWORD *)(v8 + 112), *(_QWORD *)(v8 + 120), *(_QWORD *)(v8 + 128), *(_QWORD *)(v8 + 136), *(_QWORD *)(v8 + 144),
      *(_QWORD *)(v8 + 152),
      *(_QWORD *)(v8 + 160),
      *(_QWORD *)(v8 + 168),
      v9 & 1);
}

_QWORD *sub_1A583AECC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v12 = sub_1A594AE60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = v15[176];
      if (v16 == 255)
      {
LABEL_12:
        v18 = *((_OWORD *)v15 + 9);
        *((_OWORD *)v14 + 8) = *((_OWORD *)v15 + 8);
        *((_OWORD *)v14 + 9) = v18;
        *((_OWORD *)v14 + 10) = *((_OWORD *)v15 + 10);
        v14[176] = v15[176];
        v19 = *((_OWORD *)v15 + 5);
        *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
        *((_OWORD *)v14 + 5) = v19;
        v20 = *((_OWORD *)v15 + 7);
        *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
        *((_OWORD *)v14 + 7) = v20;
        v21 = *((_OWORD *)v15 + 1);
        *(_OWORD *)v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v21;
        v22 = *((_OWORD *)v15 + 3);
        *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 3) = v22;
        goto LABEL_14;
      }
LABEL_13:
      v46 = v16 & 1;
      v23 = *((_QWORD *)v15 + 5);
      v24 = *((_QWORD *)v15 + 6);
      v31 = *((_QWORD *)v15 + 7);
      v32 = *((_QWORD *)v15 + 8);
      v33 = *((_QWORD *)v15 + 9);
      v34 = *((_QWORD *)v15 + 10);
      v35 = *((_QWORD *)v15 + 11);
      v36 = *((_QWORD *)v15 + 12);
      v37 = *((_QWORD *)v15 + 13);
      v38 = *((_QWORD *)v15 + 14);
      v39 = *((_QWORD *)v15 + 15);
      v40 = *((_QWORD *)v15 + 16);
      v41 = *((_QWORD *)v15 + 17);
      v42 = *((_QWORD *)v15 + 18);
      v43 = *((_QWORD *)v15 + 19);
      v44 = *((_QWORD *)v15 + 20);
      v45 = *((_QWORD *)v15 + 21);
      v25 = *(_QWORD *)v15;
      v26 = *((_QWORD *)v15 + 1);
      v27 = *((_QWORD *)v15 + 2);
      v28 = *((_QWORD *)v15 + 3);
      v29 = *((_QWORD *)v15 + 4);
      sub_1A552370C(*(_QWORD *)v15, v26, v27, v28, v29, v23, v24, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
        v43,
        v44,
        v45,
        v16 & 1);
      *(_QWORD *)v14 = v25;
      *((_QWORD *)v14 + 1) = v26;
      *((_QWORD *)v14 + 2) = v27;
      *((_QWORD *)v14 + 3) = v28;
      *((_QWORD *)v14 + 4) = v29;
      *((_QWORD *)v14 + 5) = v23;
      *((_QWORD *)v14 + 6) = v24;
      *((_QWORD *)v14 + 7) = v31;
      *((_QWORD *)v14 + 8) = v32;
      *((_QWORD *)v14 + 9) = v33;
      *((_QWORD *)v14 + 10) = v34;
      *((_QWORD *)v14 + 11) = v35;
      *((_QWORD *)v14 + 12) = v36;
      *((_QWORD *)v14 + 13) = v37;
      *((_QWORD *)v14 + 14) = v38;
      *((_QWORD *)v14 + 15) = v39;
      *((_QWORD *)v14 + 16) = v40;
      *((_QWORD *)v14 + 17) = v41;
      *((_QWORD *)v14 + 18) = v42;
      *((_QWORD *)v14 + 19) = v43;
      *((_QWORD *)v14 + 20) = v44;
      *((_QWORD *)v14 + 21) = v45;
      v14[176] = v46;
      goto LABEL_14;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v11 = sub_1A594AE60();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      v17 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      v14 = (char *)a1 + v17;
      v15 = (char *)a2 + v17;
      v16 = v15[176];
      if (v16 == 255)
        goto LABEL_12;
      goto LABEL_13;
    case 0:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v7 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1A5949EF4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_1A583B30C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  if (a1 == a2)
    return a1;
  sub_1A55034FC((uint64_t)a1, _s12ConcatenatorV5StateOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v12 = sub_1A594AE60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = v15[176];
      if (v16 == 255)
      {
LABEL_13:
        v18 = *(_OWORD *)v15;
        v19 = *((_OWORD *)v15 + 1);
        v20 = *((_OWORD *)v15 + 3);
        *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 3) = v20;
        *(_OWORD *)v14 = v18;
        *((_OWORD *)v14 + 1) = v19;
        v21 = *((_OWORD *)v15 + 4);
        v22 = *((_OWORD *)v15 + 5);
        v23 = *((_OWORD *)v15 + 7);
        *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
        *((_OWORD *)v14 + 7) = v23;
        *((_OWORD *)v14 + 4) = v21;
        *((_OWORD *)v14 + 5) = v22;
        v24 = *((_OWORD *)v15 + 8);
        v25 = *((_OWORD *)v15 + 9);
        v26 = *((_OWORD *)v15 + 10);
        v14[176] = v15[176];
        *((_OWORD *)v14 + 9) = v25;
        *((_OWORD *)v14 + 10) = v26;
        *((_OWORD *)v14 + 8) = v24;
        goto LABEL_15;
      }
LABEL_14:
      v50 = v16 & 1;
      v27 = *((_QWORD *)v15 + 5);
      v28 = *((_QWORD *)v15 + 6);
      v35 = *((_QWORD *)v15 + 7);
      v36 = *((_QWORD *)v15 + 8);
      v37 = *((_QWORD *)v15 + 9);
      v38 = *((_QWORD *)v15 + 10);
      v39 = *((_QWORD *)v15 + 11);
      v40 = *((_QWORD *)v15 + 12);
      v41 = *((_QWORD *)v15 + 13);
      v42 = *((_QWORD *)v15 + 14);
      v43 = *((_QWORD *)v15 + 15);
      v44 = *((_QWORD *)v15 + 16);
      v45 = *((_QWORD *)v15 + 17);
      v46 = *((_QWORD *)v15 + 18);
      v47 = *((_QWORD *)v15 + 19);
      v48 = *((_QWORD *)v15 + 20);
      v49 = *((_QWORD *)v15 + 21);
      v29 = *(_QWORD *)v15;
      v30 = *((_QWORD *)v15 + 1);
      v31 = *((_QWORD *)v15 + 2);
      v32 = *((_QWORD *)v15 + 3);
      v33 = *((_QWORD *)v15 + 4);
      sub_1A552370C(*(_QWORD *)v15, v30, v31, v32, v33, v27, v28, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46,
        v47,
        v48,
        v49,
        v16 & 1);
      *(_QWORD *)v14 = v29;
      *((_QWORD *)v14 + 1) = v30;
      *((_QWORD *)v14 + 2) = v31;
      *((_QWORD *)v14 + 3) = v32;
      *((_QWORD *)v14 + 4) = v33;
      *((_QWORD *)v14 + 5) = v27;
      *((_QWORD *)v14 + 6) = v28;
      *((_QWORD *)v14 + 7) = v35;
      *((_QWORD *)v14 + 8) = v36;
      *((_QWORD *)v14 + 9) = v37;
      *((_QWORD *)v14 + 10) = v38;
      *((_QWORD *)v14 + 11) = v39;
      *((_QWORD *)v14 + 12) = v40;
      *((_QWORD *)v14 + 13) = v41;
      *((_QWORD *)v14 + 14) = v42;
      *((_QWORD *)v14 + 15) = v43;
      *((_QWORD *)v14 + 16) = v44;
      *((_QWORD *)v14 + 17) = v45;
      *((_QWORD *)v14 + 18) = v46;
      *((_QWORD *)v14 + 19) = v47;
      *((_QWORD *)v14 + 20) = v48;
      *((_QWORD *)v14 + 21) = v49;
      v14[176] = v50;
      goto LABEL_15;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v11 = sub_1A594AE60();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      v17 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      v14 = (char *)a1 + v17;
      v15 = (char *)a2 + v17;
      v16 = v15[176];
      if (v16 == 255)
        goto LABEL_13;
      goto LABEL_14;
    case 0:
      *a1 = *a2;
      a1[1] = a2[1];
      v7 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1A5949EF4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1A583B76C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v11 = sub_1A594AE60();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v12 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = *((_OWORD *)v14 + 9);
      *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
      *((_OWORD *)v13 + 9) = v15;
      *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
      v13[176] = v14[176];
      v16 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v16;
      v17 = *((_OWORD *)v14 + 7);
      *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
      *((_OWORD *)v13 + 7) = v17;
      v18 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v18;
      v19 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v19;
      goto LABEL_11;
    case 1:
      v20 = _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v21 = sub_1A594AE60();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      v22 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = *((_OWORD *)v24 + 9);
      *((_OWORD *)v23 + 8) = *((_OWORD *)v24 + 8);
      *((_OWORD *)v23 + 9) = v25;
      *((_OWORD *)v23 + 10) = *((_OWORD *)v24 + 10);
      v23[176] = v24[176];
      v26 = *((_OWORD *)v24 + 5);
      *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
      *((_OWORD *)v23 + 5) = v26;
      v27 = *((_OWORD *)v24 + 7);
      *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
      *((_OWORD *)v23 + 7) = v27;
      v28 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v28;
      v29 = *((_OWORD *)v24 + 3);
      *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
      *((_OWORD *)v23 + 3) = v29;
      goto LABEL_11;
    case 0:
      *a1 = *a2;
      v7 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1A5949EF4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1A583B960(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, _s12ConcatenatorV5StateOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v11 = sub_1A594AE60();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        v12 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = *((_OWORD *)v14 + 9);
        *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
        *((_OWORD *)v13 + 9) = v15;
        *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
        v13[176] = v14[176];
        v16 = *((_OWORD *)v14 + 5);
        *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
        *((_OWORD *)v13 + 5) = v16;
        v17 = *((_OWORD *)v14 + 7);
        *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
        *((_OWORD *)v13 + 7) = v17;
        v18 = *((_OWORD *)v14 + 1);
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *((_OWORD *)v13 + 1) = v18;
        v19 = *((_OWORD *)v14 + 3);
        *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 3) = v19;
        goto LABEL_12;
      case 1:
        v20 = _s13TemporaryDataOMa();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v21 = sub_1A594AE60();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        v22 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
        v23 = (char *)a1 + v22;
        v24 = (char *)a2 + v22;
        v25 = *((_OWORD *)v24 + 9);
        *((_OWORD *)v23 + 8) = *((_OWORD *)v24 + 8);
        *((_OWORD *)v23 + 9) = v25;
        *((_OWORD *)v23 + 10) = *((_OWORD *)v24 + 10);
        v23[176] = v24[176];
        v26 = *((_OWORD *)v24 + 5);
        *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
        *((_OWORD *)v23 + 5) = v26;
        v27 = *((_OWORD *)v24 + 7);
        *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
        *((_OWORD *)v23 + 7) = v27;
        v28 = *((_OWORD *)v24 + 1);
        *(_OWORD *)v23 = *(_OWORD *)v24;
        *((_OWORD *)v23 + 1) = v28;
        v29 = *((_OWORD *)v24 + 3);
        *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
        *((_OWORD *)v23 + 3) = v29;
        goto LABEL_12;
      case 0:
        *a1 = *a2;
        v7 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_1A5949EF4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1A583BB6C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = _s12ConcatenatorV5StateO6NoDataVMa(319);
  if (v1 <= 0x3F)
  {
    result = _s12ConcatenatorV5StateO9ReceivingVMa(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for MessageSectionData.Concatenator.Completed(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1A583BC08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1A5949EF4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1A583BC90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_1A5949EF4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *sub_1A583BCC8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A5949EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1A583BD24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A5949EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_1A583BD88(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A5949EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_1A583BDE4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A5949EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1A583BE40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A583BE4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = sub_1A5949EF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1A583BE8C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A583BE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = sub_1A5949EF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_1A583BEDC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5949EF4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A583BF54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A583BF9C()
{
  unint64_t result;

  result = qword_1EE7AA8A8;
  if (!qword_1EE7AA8A8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DB05C, &_s12ConcatenatorV5StateO25ReceivedOutOfOrderSegmentVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AA8A8);
  }
  return result;
}

uint64_t sub_1A583BFE0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A05C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_WORD *__swift_memcpy2_1_2(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s12ConcatenatorV5StateO25ReceivedOutOfOrderSegmentVwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12ConcatenatorV5StateO25ReceivedOutOfOrderSegmentVwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A583C11C + 4 * byte_1A59DAFE5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1A583C150 + 4 * asc_1A59DAFE0[v4]))();
}

uint64_t sub_1A583C150(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A583C158(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1A583C160);
  return result;
}

uint64_t sub_1A583C16C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1A583C174);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A583C178(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A583C180(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *_s12ConcatenatorV5StateO25ReceivedOutOfOrderSegmentVMa()
{
  return &_s12ConcatenatorV5StateO25ReceivedOutOfOrderSegmentVN;
}

uint64_t sub_1A583C19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v26[2];
  char *v27;

  v26[0] = a4;
  v27 = a3;
  v6 = sub_1A5949EF4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v26 - v11;
  v13 = _s13TemporaryDataOMa();
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)v26 - v18);
  if (a2 >= a1)
  {
    sub_1A594AE24();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v27, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t, double))(v7 + 16))(v12, v27, v6, v17);
    _s13TemporaryFileCMa();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 24) = 0;
    v21 = v26[1];
    v22 = static URL.makeTemporaryFile(baseDirectory:pathExtension:)(v9);
    if (v21)
    {
      v23 = *(void (**)(char *, uint64_t))(v7 + 8);
      v23(v12, v6);
      swift_deallocPartialClassInstance();
      return ((uint64_t (*)(char *, uint64_t))v23)(v27, v6);
    }
    *(_DWORD *)(v20 + 16) = v22;
    MEMORY[0x1A85ACCCC](v22);
    sub_1A583C5A8();
    v25 = *(void (**)(char *, uint64_t))(v7 + 8);
    v25(v12, v6);
    v25(v9, v6);
    v25(v27, v6);
    *v15 = v20;
    swift_storeEnumTagMultiPayload();
    v19 = v15;
  }
  return sub_1A583CB2C((uint64_t)v19, v26[0]);
}

uint64_t sub_1A583C3C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);

  v1 = sub_1A594ADA0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA870);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594ADAC();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = v8 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v11 = *(_QWORD *)(v2 + 72);
    v14 = v8;
    v15 = v11;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    v16 = MEMORY[0x1E0DEE9C0] + 8;
    while (1)
    {
      v17(v7, v10, v1);
      v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v12(v7, 0, 1, v1);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
      sub_1A594AD88();
      if (v0)
      {
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        return swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      v10 += v15;
      if (!--v9)
        goto LABEL_8;
    }
  }
  else
  {
    v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
LABEL_8:
    v12(v7, 1, 1, v1);
  }
  return swift_bridgeObjectRelease();
}

void sub_1A583C5A8()
{
  id v0;
  void *v1;
  unsigned int v2;
  id v3;
  id v4;
  void *v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_1A5949E34();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    v5 = (void *)sub_1A5949DA4();

    swift_willThrow();
  }
}

uint64_t sub_1A583C6B4()
{
  if ((sub_1A594A86C() & 0x100000000) != 0)
  {
    sub_1A583CAE8();
    swift_willThrowTypedImpl();
  }
  return swift_deallocClassInstance();
}

uint64_t _s13TemporaryFileCMa()
{
  return objc_opt_self();
}

uint64_t *sub_1A583C724(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1A594AE60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A583C7E0(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v2 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *sub_1A583C830(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1A594AE60();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1A583C8C0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1A583C960((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1A594AE60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A583C960(uint64_t a1)
{
  uint64_t v2;

  v2 = _s13TemporaryDataOMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s13TemporaryDataOMa()
{
  uint64_t result;

  result = qword_1EE7A0588;
  if (!qword_1EE7A0588)
    return swift_getSingletonMetadata();
  return result;
}

void *sub_1A583C9D8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A583C960((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1A594AE60();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A583CA74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594AE60();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1A583CAE8()
{
  unint64_t result;

  result = qword_1EE7AA8B0;
  if (!qword_1EE7AA8B0)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DF0070], MEMORY[0x1E0DF0068]);
    atomic_store(result, (unint64_t *)&qword_1EE7AA8B0);
  }
  return result;
}

uint64_t sub_1A583CB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s13TemporaryDataOMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A583CB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  int v5;
  char v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  _DWORD *v10;

  result = sub_1A594A878();
  v5 = result;
  if ((v6 & 1) != 0)
  {
    sub_1A583CAE8();
    swift_willThrowTypedImpl();
    result = swift_allocError();
    *v10 = v5;
  }
  else
  {
    v7 = *(_QWORD *)(a3 + 24);
    v8 = __OFADD__(v7, result);
    v9 = v7 + result;
    if (v8)
      __break(1u);
    else
      *(_QWORD *)(a3 + 24) = v9;
  }
  return result;
}

uint64_t sub_1A583CC28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A583CB70(a1, a2, v2);
}

uint64_t sub_1A583CC40()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A594CE64();
  sub_1A594CE94();
  if (v1 != 1)
    sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A583CCAC()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    return sub_1A594CE94();
  sub_1A594CE94();
  return sub_1A594CE88();
}

uint64_t sub_1A583CCF8()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A594CE64();
  sub_1A594CE94();
  if (v1 != 1)
    sub_1A594CE88();
  return sub_1A594CED0();
}

BOOL sub_1A583CD60(uint64_t a1, uint64_t a2)
{
  return sub_1A55360A8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t MessageSize.init(rawValue:)(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return 0;
  return result;
}

uint64_t *sub_1A583CD88@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  v2 = *result;
  v3 = *((_BYTE *)result + 8);
  if (v3)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

void sub_1A583CDA8(uint64_t a1@<X8>)
{
  uint64_t *v1;
  char v2;
  uint64_t v3;

  v2 = *((_BYTE *)v1 + 8);
  if ((v2 & 1) != 0)
    v3 = 0;
  else
    v3 = *v1;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t MessageSize.init(nilLiteral:)()
{
  return 0;
}

unint64_t sub_1A583CDE0()
{
  unint64_t result;

  result = qword_1EE7AA8B8;
  if (!qword_1EE7AA8B8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageSize, &type metadata for MessageSize);
    atomic_store(result, (unint64_t *)&qword_1EE7AA8B8);
  }
  return result;
}

uint64_t sub_1A583CE24()
{
  return MEMORY[0x1E0DEB488];
}

void sub_1A583CE30(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for MessageSize()
{
  return &type metadata for MessageSize;
}

uint64_t MessageToDownload.message.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*MessageToDownload.message.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageToDownload.size.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t MessageToDownload.size.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_BYTE *)(v2 + 16) = a2 & 1;
  return result;
}

double (*MessageToDownload.size.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageToDownload.bodyStructure.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a3 >> 8) & 1;
}

uint64_t MessageToDownload.bodyStructure.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result & 1;
  return result;
}

double (*MessageToDownload.bodyStructure.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageToDownload.BodyStructure.hash(into:)()
{
  return sub_1A594CE88();
}

BOOL static MessageToDownload.BodyStructure.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t MessageToDownload.BodyStructure.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t static MessageToDownload.__derived_struct_equals(_:_:)(int a1, uint64_t a2, __int16 a3, int a4, uint64_t a5, __int16 a6)
{
  return sub_1A583CFB4(a1, a2, a3 & 0x101, a4, a5, a6 & 0x101);
}

uint64_t sub_1A583CF64(uint64_t a1, uint64_t a2)
{
  __int16 v2;
  __int16 v3;

  if (*(_BYTE *)(a1 + 17))
    v2 = 256;
  else
    v2 = 0;
  if (*(_BYTE *)(a2 + 17))
    v3 = 256;
  else
    v3 = 0;
  return sub_1A583CFB4(*(_DWORD *)a1, *(_QWORD *)(a1 + 8), v2 | *(unsigned __int8 *)(a1 + 16), *(_DWORD *)a2, *(_QWORD *)(a2 + 8), v3 | *(unsigned __int8 *)(a2 + 16));
}

uint64_t sub_1A583CFB4(int a1, uint64_t a2, __int16 a3, int a4, uint64_t a5, __int16 a6)
{
  uint64_t result;
  uint64_t v7;

  if (a4 != a1)
    return 0;
  if ((a3 & 1) != 0)
  {
    if ((a6 & 1) != 0)
      return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
    return 0;
  }
  result = 0;
  if ((a6 & 1) != 0)
    v7 = 0;
  else
    v7 = a5;
  if ((a6 & 1) == 0 && v7 == a2)
    return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
  return result;
}

unint64_t sub_1A583D004()
{
  unint64_t result;

  result = qword_1EE7AA8C0;
  if (!qword_1EE7AA8C0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageToDownload.BodyStructure, &type metadata for MessageToDownload.BodyStructure);
    atomic_store(result, (unint64_t *)&qword_1EE7AA8C0);
  }
  return result;
}

__n128 __swift_memcpy18_8_2(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MessageToDownload(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 18))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageToDownload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_BYTE *)(result + 17) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageToDownload()
{
  return &type metadata for MessageToDownload;
}

uint64_t storeEnumTagSinglePayload for MessageToDownload.BodyStructure(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A583D140 + 4 * byte_1A59DB1F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A583D174 + 4 * asc_1A59DB1F0[v4]))();
}

uint64_t sub_1A583D174(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A583D17C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A583D184);
  return result;
}

uint64_t sub_1A583D190(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A583D198);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A583D19C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A583D1A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MessageToDownload.BodyStructure()
{
  return &type metadata for MessageToDownload.BodyStructure;
}

BOOL static MoveOrCopy.Operation.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t MoveOrCopy.Operation.hash(into:)()
{
  return sub_1A594CE88();
}

uint64_t MoveOrCopy.Operation.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t MoveOrCopy.Result.hash(into:)(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_1A594CE88();
  sub_1A594CE88();
  sub_1A594CEAC();
  return sub_1A594CEAC();
}

uint64_t static MoveOrCopy.Result.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, unsigned __int8 a4)
{
  _BOOL4 v4;
  unsigned int v5;

  v4 = HIDWORD(a1) == HIDWORD(a3);
  if (a3 != a1)
    v4 = 0;
  if ((a4 & 1) != 0)
    v4 = 0;
  v5 = a4 & (a3 == 0);
  if (a1)
    v5 = a4 & (a3 != 0);
  if ((a2 & 1) != 0)
    return v5;
  else
    return v4;
}

uint64_t MoveOrCopy.Result.hashValue.getter(uint64_t a1, char a2)
{
  sub_1A594CE64();
  sub_1A594CE88();
  if ((a2 & 1) == 0)
  {
    sub_1A594CEAC();
    sub_1A594CEAC();
  }
  return sub_1A594CED0();
}

uint64_t sub_1A583D370()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A594CE64();
  sub_1A594CE88();
  if (v1 != 1)
  {
    sub_1A594CEAC();
    sub_1A594CEAC();
  }
  return sub_1A594CED0();
}

uint64_t sub_1A583D400()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    return sub_1A594CE88();
  sub_1A594CE88();
  sub_1A594CEAC();
  return sub_1A594CEAC();
}

uint64_t sub_1A583D46C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A594CE64();
  sub_1A594CE88();
  if (v1 != 1)
  {
    sub_1A594CEAC();
    sub_1A594CEAC();
  }
  return sub_1A594CED0();
}

uint64_t sub_1A583D4F8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  v2 = *a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)a2 + 8);
  if (*((_BYTE *)a1 + 8) == 1)
  {
    v5 = v3 == 0;
    if (v3)
      v6 = 0;
    else
      v6 = *((unsigned __int8 *)a2 + 8);
    if (v5)
      v4 = 0;
    if (v2)
      return v4;
    else
      return v6;
  }
  else if ((v4 & 1) != 0)
  {
    return 0;
  }
  else
  {
    return v3 == v2 && HIDWORD(v2) == HIDWORD(v3);
  }
}

uint64_t MoveOrCopy.operation.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t MoveOrCopy.operation.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result & 1;
  return result;
}

double (*MoveOrCopy.operation.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MoveOrCopy.sourceMessage.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t MoveOrCopy.sourceMessage.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

double (*MoveOrCopy.sourceMessage.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MoveOrCopy.targetMailbox.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MoveOrCopy.targetMailbox.setter(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_DWORD *)(v2 + 16) = a2;
  return result;
}

double (*MoveOrCopy.targetMailbox.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MoveOrCopy.targetMessage.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1A54E42B4(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t MoveOrCopy.targetMessage.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1A54E46E8(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

double (*MoveOrCopy.targetMessage.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MoveOrCopy.init(operation:sourceMessage:targetMailbox:targetMessage:)@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_BYTE *)a7 = result & 1;
  *(_DWORD *)(a7 + 4) = a2;
  *(_QWORD *)(a7 + 8) = a3;
  *(_DWORD *)(a7 + 16) = a4;
  *(_QWORD *)(a7 + 24) = a5;
  *(_QWORD *)(a7 + 32) = a6;
  return result;
}

uint64_t MoveOrCopy.hash(into:)()
{
  uint64_t v0;
  __int128 v2;

  sub_1A594CE88();
  sub_1A594CEAC();
  sub_1A594CE88();
  v2 = *(_OWORD *)(v0 + 24);
  sub_1A54E9938((uint64_t)&v2);
  sub_1A5949F9C();
  return sub_1A54E9964((uint64_t)&v2);
}

uint64_t MoveOrCopy.hashValue.getter()
{
  uint64_t v0;
  __int128 v2;

  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CEAC();
  sub_1A594CE88();
  v2 = *(_OWORD *)(v0 + 24);
  sub_1A54E9938((uint64_t)&v2);
  sub_1A5949F9C();
  sub_1A54E9964((uint64_t)&v2);
  return sub_1A594CED0();
}

uint64_t sub_1A583D7A0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CEAC();
  sub_1A594CE88();
  sub_1A54E42B4(v1, v2);
  sub_1A5949F9C();
  sub_1A54E46E8(v1, v2);
  return sub_1A594CED0();
}

uint64_t sub_1A583D840()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  sub_1A594CE88();
  sub_1A594CEAC();
  sub_1A594CE88();
  sub_1A54E42B4(v1, v2);
  sub_1A5949F9C();
  return sub_1A54E46E8(v1, v2);
}

uint64_t sub_1A583D8B8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CEAC();
  sub_1A594CE88();
  sub_1A54E42B4(v1, v2);
  sub_1A5949F9C();
  sub_1A54E46E8(v1, v2);
  return sub_1A594CED0();
}

uint64_t sub_1A583D954(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return _s16IMAP2Persistence10MoveOrCopyV23__derived_struct_equalsySbAC_ACtFZ_0((unsigned __int8 *)v5, (unsigned __int8 *)v7) & 1;
}

uint64_t _s16IMAP2Persistence10MoveOrCopyV23__derived_struct_equalsySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;

  if (*a1 != *a2
    || *((_DWORD *)a2 + 1) != *((_DWORD *)a1 + 1)
    || (*((unsigned int *)a1 + 4) | ((unint64_t)*((unsigned int *)a1 + 4) << 32)) != (*((unsigned int *)a2 + 4) | ((unint64_t)*((unsigned int *)a2 + 4) << 32))
    || !sub_1A578ECF4(*((_QWORD *)a1 + 1), *((_QWORD *)a2 + 1)))
  {
    return 0;
  }
  v5 = *((_QWORD *)a1 + 3);
  v4 = *((_QWORD *)a1 + 4);
  v7 = *((_QWORD *)a2 + 3);
  v6 = *((_QWORD *)a2 + 4);
  sub_1A54E42B4(v5, v4);
  sub_1A54E42B4(v7, v6);
  v8 = sub_1A58533A4(v5, v4, v7, v6);
  sub_1A54E46E8(v7, v6);
  sub_1A54E46E8(v5, v4);
  return v8 & 1;
}

unint64_t sub_1A583DA74()
{
  unint64_t result;

  result = qword_1EE7AA8C8;
  if (!qword_1EE7AA8C8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MoveOrCopy.Operation, &type metadata for MoveOrCopy.Operation);
    atomic_store(result, (unint64_t *)&qword_1EE7AA8C8);
  }
  return result;
}

unint64_t sub_1A583DABC()
{
  unint64_t result;

  result = qword_1EE7AA8D0;
  if (!qword_1EE7AA8D0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MoveOrCopy.Result, &type metadata for MoveOrCopy.Result);
    atomic_store(result, (unint64_t *)&qword_1EE7AA8D0);
  }
  return result;
}

unint64_t sub_1A583DB04()
{
  unint64_t result;

  result = qword_1EE798328;
  if (!qword_1EE798328)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MoveOrCopy, &type metadata for MoveOrCopy);
    atomic_store(result, (unint64_t *)&qword_1EE798328);
  }
  return result;
}

uint64_t destroy for MoveOrCopy(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1A54E46E8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for MoveOrCopy(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E42B4(v3, v4);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  return a1;
}

uint64_t assignWithCopy for MoveOrCopy(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  sub_1A54E42B4(v5, v4);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  sub_1A54E46E8(v6, v7);
  return a1;
}

__n128 __swift_memcpy40_8_3(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MoveOrCopy(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1A54E46E8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoveOrCopy(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for MoveOrCopy()
{
  return &type metadata for MoveOrCopy;
}

uint64_t storeEnumTagSinglePayload for MoveOrCopy.Operation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A583DD5C + 4 * byte_1A59DB2B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A583DD90 + 4 * asc_1A59DB2B0[v4]))();
}

uint64_t sub_1A583DD90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A583DD98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A583DDA0);
  return result;
}

uint64_t sub_1A583DDAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A583DDB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A583DDB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A583DDC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MoveOrCopy.Operation()
{
  return &type metadata for MoveOrCopy.Operation;
}

ValueMetadata *type metadata accessor for MoveOrCopy.Result()
{
  return &type metadata for MoveOrCopy.Result;
}

BOOL static OpaqueMailboxID.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a2 == a4 && sub_1A578ECF4(a1, a3);
}

uint64_t OpaqueMailboxID.hashValue.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OpaqueMailboxID.init(rawValue:)(uint64_t a1)
{
  sub_1A594CEDC();
  sub_1A594CE70();
  sub_1A594CEC4();
  return a1;
}

uint64_t sub_1A583DE80@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  sub_1A594CEDC();
  sub_1A594CE70();
  result = sub_1A594CEC4();
  *a2 = v3;
  a2[1] = result;
  return result;
}

uint64_t sub_1A583DEF8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OpaqueMailboxID.init(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1A583E10C(a1, a2);
  v5 = v4;
  sub_1A594CEDC();
  sub_1A594CE70();
  sub_1A594CEC4();
  sub_1A54E46E8(a1, a2);
  return v5;
}

uint64_t OpaqueMailboxID.hash(into:)()
{
  return sub_1A594CE88();
}

uint64_t sub_1A583DFBC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_1A583DFC4()
{
  return sub_1A594CE88();
}

uint64_t sub_1A583DFEC()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

BOOL sub_1A583E02C(uint64_t *a1, uint64_t *a2)
{
  return a1[1] == a2[1] && sub_1A578ECF4(*a1, *a2);
}

uint64_t OpaqueMailboxID.description.getter(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(result + 16);
  if (v1 + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = result;
    MEMORY[0x1A85AD968](2 * v1);
    if (v1)
    {
      v3 = v2 + 32;
      sub_1A583E274();
      do
      {
        ++v3;
        sub_1A594B6DC();
        sub_1A594B5F8();
        swift_bridgeObjectRelease();
        --v1;
      }
      while (v1);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A583E104()
{
  uint64_t *v0;

  return OpaqueMailboxID.description.getter(*v0);
}

void sub_1A583E10C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_1A5949FFC();
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

_QWORD *sub_1A583E188()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B368);
    v4 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size_0(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_1A54E42B4(v2, v0);
    v7 = sub_1A5949F30();
    sub_1A54E46E8(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x1A583E25CLL);
    }
  }
  return v4;
}

unint64_t sub_1A583E274()
{
  unint64_t result;

  result = qword_1EE79B468;
  if (!qword_1EE79B468)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEDEA0], MEMORY[0x1E0DEDE70]);
    atomic_store(result, (unint64_t *)&qword_1EE79B468);
  }
  return result;
}

unint64_t sub_1A583E2BC()
{
  unint64_t result;

  result = qword_1EE798460;
  if (!qword_1EE798460)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for OpaqueMailboxID, &type metadata for OpaqueMailboxID);
    atomic_store(result, (unint64_t *)&qword_1EE798460);
  }
  return result;
}

ValueMetadata *type metadata accessor for OpaqueMailboxID()
{
  return &type metadata for OpaqueMailboxID;
}

uint64_t OpaquePersistedMessageIdentifier.rawValue.getter(uint64_t a1, unint64_t a2)
{
  sub_1A54E42B4(a1, a2);
  return a1;
}

uint64_t OpaquePersistedMessageIdentifier.rawValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1A54E46E8(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

double (*OpaquePersistedMessageIdentifier.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 sub_1A583E384@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1A583E390@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1A54E42B4(v2, v3);
}

uint64_t sub_1A583E39C()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  sub_1A594CE64();
  sub_1A54E42B4(v1, v2);
  sub_1A5949F9C();
  sub_1A54E46E8(v1, v2);
  return sub_1A594CED0();
}

uint64_t sub_1A583E3FC()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *v0;
  v1 = v0[1];
  sub_1A54E42B4(v2, v1);
  sub_1A5949F9C();
  return sub_1A54E46E8(v2, v1);
}

uint64_t sub_1A583E448()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  sub_1A594CE64();
  sub_1A54E42B4(v1, v2);
  sub_1A5949F9C();
  sub_1A54E46E8(v1, v2);
  return sub_1A594CED0();
}

uint64_t sub_1A583E4A4(_QWORD *a1, _QWORD *a2)
{
  return sub_1A58533A4(*a1, a1[1], *a2, a2[1]);
}

void OpaquePersistedMessageIdentifier.description.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1A583E50C()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int16 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;

  if (BYTE6(v2) + 0x4000000000000000 < 0)
  {
    __break(1u);
    JUMPOUT(0x1A583E6BCLL);
  }
  MEMORY[0x1A85AD968](2 * BYTE6(v2));
  if (v1)
  {
    if (v1 == 1)
    {
      if (v0 >> 32 < (int)v0)
        __break(1u);
      swift_retain();
      sub_1A583E778((int)v0, v0 >> 32);
      sub_1A54E46E8(v0, v2);
    }
    else
    {
      v3 = *(_QWORD *)(v0 + 16);
      v4 = *(_QWORD *)(v0 + 24);
      swift_retain();
      swift_retain();
      sub_1A583E778(v3, v4);
      swift_release();
      swift_release();
    }
  }
  else
  {
    v6 = v0;
    v7 = v2;
    v8 = BYTE2(v2);
    v9 = BYTE3(v2);
    v10 = BYTE4(v2);
    v11 = BYTE5(v2);
    sub_1A583E6DC((uint64_t)&v6, (uint64_t)&v6 + BYTE6(v2));
  }
  return v12;
}

uint64_t sub_1A583E6DC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (result)
  {
    v2 = result;
    v3 = a2 - result;
    if (a2 != result)
    {
      sub_1A583E274();
      do
      {
        ++v2;
        sub_1A594B6DC();
        sub_1A594B5F8();
        result = swift_bridgeObjectRelease();
        --v3;
      }
      while (v3);
    }
  }
  return result;
}

void sub_1A583E770()
{
  uint64_t *v0;

  OpaquePersistedMessageIdentifier.description.getter(*v0, v0[1]);
}

uint64_t sub_1A583E778(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_1A5949BE8();
  v5 = result;
  if (result)
  {
    result = sub_1A5949C0C();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - result;
  }
  v6 = __OFSUB__(a2, a1);
  v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = sub_1A5949C00();
  if (v8 >= v7)
    v9 = v7;
  else
    v9 = v8;
  v10 = v5 + v9;
  if (v5)
    v11 = v10;
  else
    v11 = 0;
  return sub_1A583E6DC(v5, v11);
}

unint64_t sub_1A583E81C()
{
  unint64_t result;

  result = qword_1EE7985F0;
  if (!qword_1EE7985F0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for OpaquePersistedMessageIdentifier, &type metadata for OpaquePersistedMessageIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EE7985F0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for OpaquePersistedMessageIdentifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_1A54E42B4(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t *assignWithCopy for OpaquePersistedMessageIdentifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_1A54E42B4(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1A54E46E8(v5, v6);
  return a1;
}

uint64_t *assignWithTake for OpaquePersistedMessageIdentifier(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1A54E46E8(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for OpaquePersistedMessageIdentifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for OpaquePersistedMessageIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpaquePersistedMessageIdentifier()
{
  return &type metadata for OpaquePersistedMessageIdentifier;
}

uint64_t MessageAttribute.BodyStructure.partsForHTMLBody()()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v12[184];
  _BYTE v13[184];
  _BYTE v14[184];
  _BYTE v15[184];
  _BYTE v16[184];

  v1 = (uint64_t)v0;
  sub_1A55DBFD8(v0, v13);
  sub_1A55DBFD8(v13, v16);
  sub_1A55DBFD8(v0, v14);
  if (sub_1A55DC41C((uint64_t)v14) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AED8);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1A59ABD10;
    *(_QWORD *)(v2 + 32) = MEMORY[0x1E0DEE9D8];
    return sub_1A583FAA8(v2);
  }
  else
  {
    sub_1A55DC3E0(v14, v15);
    sub_1A55DBFD8(v16, v12);
    sub_1A566B41C((uint64_t)v12);
    v4 = sub_1A583EE7C();
    v6 = v5;
    v8 = v7;
    v11 = MEMORY[0x1E0DEE9E8];
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A5846708(v4, v6, v8, (uint64_t)&v11, v4, v6, v8);
    swift_release();
    swift_release();
    swift_release();
    v3 = sub_1A583F2F0(v11, 65000, 15000, v9, v4, v6, v8);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A5846CB0(v1);
  }
  return v3;
}

uint64_t BodyStructure.partsForHTMLBody()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1A583EE7C();
  v2 = v1;
  v4 = v3;
  v8 = MEMORY[0x1E0DEE9E8];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A5846708(v0, v2, v4, (uint64_t)&v8, v0, v2, v4);
  swift_release();
  swift_release();
  swift_release();
  v6 = sub_1A583F2F0(v8, 65000, 15000, v5, v0, v2, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t MessageAttribute.BodyStructure.partsForWatch()()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[184];
  _BYTE v15[184];
  _BYTE v16[184];
  _BYTE v17[184];
  _BYTE v18[184];

  v1 = (uint64_t)v0;
  sub_1A55DBFD8(v0, v15);
  sub_1A55DBFD8(v15, v18);
  sub_1A55DBFD8(v0, v16);
  if (sub_1A55DC41C((uint64_t)v16) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AED8);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1A59ABD10;
    *(_QWORD *)(v2 + 32) = MEMORY[0x1E0DEE9D8];
    return sub_1A583FAA8(v2);
  }
  else
  {
    sub_1A55DC3E0(v16, v17);
    sub_1A55DBFD8(v18, v14);
    sub_1A566B41C((uint64_t)v14);
    v4 = sub_1A583EE7C();
    v6 = v5;
    v8 = v7;
    v13 = MEMORY[0x1E0DEE9E8];
    sub_1A583FEB0(v4, v5, v7);
    v9 = sub_1A583F514(v4, v6, v8);
    v10 = sub_1A583F640(v9, v13);
    v3 = sub_1A583F2F0(v10, 65000, 15000, v11, v4, v6, v8);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1A5846CB0(v1);
  }
  return v3;
}

uint64_t BodyStructure.partsForWatch()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_1A583EE7C();
  v2 = v1;
  v4 = v3;
  v10 = MEMORY[0x1E0DEE9E8];
  sub_1A583FEB0(v0, v1, v3);
  v5 = sub_1A583F514(v0, v2, v4);
  v6 = sub_1A583F640(v5, v10);
  v8 = sub_1A583F2F0(v6, 65000, 15000, v7, v0, v2, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v8;
}

uint64_t sub_1A583EE7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  v0 = (_QWORD *)swift_allocObject();
  v0[2] = sub_1A5846080(MEMORY[0x1E0DEE9D8]);
  v0[3] = v1;
  v0[4] = v2;
  v9[2] = v0 + 2;
  BodyStructure.enumerateParts(_:)((void (*)(uint64_t, _BYTE *))sub_1A5846FF0, (uint64_t)v9);
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[4];
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = sub_1A5846240(v3, v4, v5, (void (*)(__int128 *__return_ptr, uint64_t, __int128 *))sub_1A5847008);
  swift_release();
  swift_release();
  swift_release();
  v7 = sub_1A5846454(v6);
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t BodyStructure.singlePartsWithSizes.getter()
{
  _QWORD v1[5];
  uint64_t v2;

  v2 = MEMORY[0x1E0DEE9D8];
  v1[2] = &v2;
  BodyStructure.enumerateParts(_:)((void (*)(uint64_t, _BYTE *))sub_1A5846D18, (uint64_t)v1);
  return v2;
}

void sub_1A583EFCC(uint64_t a1, const void *a2, char **a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  _BYTE v14[184];
  _BYTE v15[184];
  _BYTE v16[184];
  _BYTE v17[184];

  sub_1A55DC3E0(a2, v15);
  sub_1A55DC3E0(v15, v17);
  sub_1A55DC3E0(a2, v16);
  if (sub_1A55DC430((uint64_t)v16) == 1)
  {
    nullsub_1(v16);
  }
  else
  {
    nullsub_1(v16);
    sub_1A55DC3E0(v17, v14);
    nullsub_1(v14);
    v7 = *(_QWORD *)(v6 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v8 = BodyStructure.isAttachment.getter();
    v9 = *a3;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1A5826E60(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *a3 = v9;
    }
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    if (v12 >= v11 >> 1)
    {
      v9 = sub_1A5826E60((char *)(v11 > 1), v12 + 1, 1, v9);
      *a3 = v9;
    }
    *((_QWORD *)v9 + 2) = v12 + 1;
    v13 = &v9[24 * v12];
    *((_QWORD *)v13 + 4) = a1;
    *((_QWORD *)v13 + 5) = v7;
    v13[48] = v8 & 1;
  }
}

uint64_t BodyStructure.SinglePartWithSize.part.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

double (*BodyStructure.SinglePartWithSize.part.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.SinglePartWithSize.byteCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t BodyStructure.SinglePartWithSize.byteCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*BodyStructure.SinglePartWithSize.byteCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.SinglePartWithSize.isAttachment.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t BodyStructure.SinglePartWithSize.isAttachment.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

double (*BodyStructure.SinglePartWithSize.isAttachment.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static BodyStructure.SinglePartWithSize.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return static SectionSpecifier.Part.__derived_struct_equals(_:_:)(a1, a4) & (a2 == a5) & (a3 ^ a6 ^ 1);
}

uint64_t sub_1A583F1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  return static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & (v2 == v4) & (v3 ^ v5 ^ 1);
}

uint64_t BodyStructure.BodyPartListLimits.totalSize.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*BodyStructure.BodyPartListLimits.totalSize.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.BodyPartListLimits.additionalPartSize.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t BodyStructure.BodyPartListLimits.additionalPartSize.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*BodyStructure.BodyPartListLimits.additionalPartSize.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.BodyPartListLimits.partCount.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t BodyStructure.BodyPartListLimits.partCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

double (*BodyStructure.BodyPartListLimits.partCount.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL static BodyStructure.BodyPartListLimits.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a1 == a4 && a2 == a5 && a3 == a6;
}

BOOL sub_1A583F2B0(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t static BodyStructure.BodyPartListLimits.default.getter()
{
  return 65000;
}

uint64_t sub_1A583F2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t result;
  _QWORD *v26;

  if ((sub_1A5846DD4(a6, a7) & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AED8);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1A59ABD10;
    *(_QWORD *)(v12 + 32) = MEMORY[0x1E0DEE9D8];
    return sub_1A583FAA8(v12);
  }
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v13 = sub_1A5845A94(0, a1, a5, a6, a7);
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_bridgeObjectRetain_n();
  v14 = sub_1A583F7B4(a1, v13, a5, a6, a7);
  v16 = v15;
  swift_bridgeObjectRelease();
  if (!v14)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    v22 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v23 = sub_1A584C0B8(v22);
    swift_bridgeObjectRelease();
    v26 = v23;
    sub_1A5840160((uint64_t *)&v26, (uint64_t (*)(uint64_t))sub_1A584D414, sub_1A5841BE8);
    swift_bridgeObjectRelease();
    v12 = (uint64_t)v26;
    return sub_1A583FAA8(v12);
  }
  v17 = v13 + a3;
  v18 = __OFADD__(v13, a3);
  while (1)
  {
    if (v16 <= a2)
      goto LABEL_7;
    if (v18)
      break;
    if (v17 < v16)
    {
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    v19 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v20 = sub_1A583F7B4(v19, v16, a5, a6, a7);
    v16 = v21;
    swift_bridgeObjectRelease();
    if (!v20)
      goto LABEL_12;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1A583F514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1A583FC30(a1, a2, a3, 2500000, &v12);
  sub_1A5840160((uint64_t *)&v12, (uint64_t (*)(uint64_t))sub_1A58455EC, sub_1A5842288);
  v3 = v12;
  v11 = MEMORY[0x1E0DEE9E8];
  v4 = v12[2];
  if (v4)
  {
    result = swift_bridgeObjectRetain_n();
    v6 = 0;
    for (i = v3 + 5; ; i += 2)
    {
      v8 = v6 + *i;
      if (__OFADD__(v6, *i))
        break;
      if (v8 <= 3999999)
      {
        v9 = *(i - 1);
        swift_bridgeObjectRetain_n();
        sub_1A5827178(&v10, v9);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v6 = v8;
      }
      if (!--v4)
      {
        swift_bridgeObjectRelease_n();
        return v11;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1A583F640(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = result;
  v3 = 0;
  v16 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v8)
      goto LABEL_23;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    ++v3;
    if (!v13)
    {
      v3 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_23;
      v13 = *(_QWORD *)(v4 + 8 * v3);
      if (!v13)
      {
        v3 = v12 + 2;
        if (v12 + 2 >= v8)
          goto LABEL_23;
        v13 = *(_QWORD *)(v4 + 8 * v3);
        if (!v13)
        {
          v3 = v12 + 3;
          if (v12 + 3 >= v8)
            goto LABEL_23;
          v13 = *(_QWORD *)(v4 + 8 * v3);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_5:
    v11 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5827178(&v15, v11);
    result = swift_bridgeObjectRelease();
  }
  v14 = v12 + 4;
  if (v14 >= v8)
  {
LABEL_23:
    swift_release();
    return v16;
  }
  v13 = *(_QWORD *)(v4 + 8 * v14);
  if (v13)
  {
    v3 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v13 = *(_QWORD *)(v4 + 8 * v3);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A583F7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v36 = MEMORY[0x1E0DEE9E8];
  v9 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v15 = 0;
  while (v12)
  {
    v16 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v17 = v16 | (v15 << 6);
LABEL_24:
    v21 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v17);
    if (*(_QWORD *)(v21 + 16))
    {
      swift_bridgeObjectRetain_n();
      v22 = sub_1A58419C0(1, v21);
      sub_1A5827178(&v35, v22);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
  }
  v18 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  if (v18 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v9 + 8 * v18);
  ++v15;
  if (v19)
    goto LABEL_23;
  v15 = v18 + 1;
  if (v18 + 1 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v9 + 8 * v15);
  if (v19)
    goto LABEL_23;
  v15 = v18 + 2;
  if (v18 + 2 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v9 + 8 * v15);
  if (v19)
    goto LABEL_23;
  v15 = v18 + 3;
  if (v18 + 3 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v9 + 8 * v15);
  if (v19)
    goto LABEL_23;
  v15 = v18 + 4;
  if (v18 + 4 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v9 + 8 * v15);
  if (v19)
  {
LABEL_23:
    v12 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v15 << 6);
    goto LABEL_24;
  }
  v20 = v18 + 5;
  if (v20 < v13)
  {
    v19 = *(_QWORD *)(v9 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        v15 = v20 + 1;
        if (__OFADD__(v20, 1))
          goto LABEL_38;
        if (v15 >= v13)
          goto LABEL_26;
        v19 = *(_QWORD *)(v9 + 8 * v15);
        ++v20;
        if (v19)
          goto LABEL_23;
      }
    }
    v15 = v20;
    goto LABEL_23;
  }
LABEL_26:
  swift_release();
  swift_bridgeObjectRelease();
  v23 = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v24 = (_QWORD *)sub_1A5845E4C(v23, a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v25 = v24[2];
  if (v25)
  {
    v26 = v24[4];
    v27 = v24[5];
    v28 = v25 - 1;
    if (v25 == 1)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v29 = v24 + 7;
      v30 = v26;
      v31 = v24 + 7;
      do
      {
        v33 = *v31;
        v31 += 2;
        v32 = v33;
        if (v33 < v27)
        {
          v30 = *(v29 - 1);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_bridgeObjectRelease();
          v27 = v32;
        }
        v29 = v31;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
      v26 = v30;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v26;
}

uint64_t sub_1A583FAA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = OUTLINED_FUNCTION_6_1();
  v4 = sub_1A5842EA4(&v12, a1, 0, 1, v3);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = v12;
  if (v12 == v5)
    return v4;
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v5 < v12)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    swift_bridgeObjectRelease();
    sub_1A584BFEC(a1, v1, 0, (2 * v6) | 1);
    v9 = v11;
    goto LABEL_9;
  }
  v1 = a1 + 32;
  sub_1A594CD68();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_unknownObjectRetain_n();
  v7 = swift_dynamicCastClass();
  if (!v7)
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  v8 = *(_QWORD *)(v7 + 16);
  swift_release();
  if (v8 != v6)
    goto LABEL_14;
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
  }
LABEL_9:
  result = swift_bridgeObjectRelease();
  v13 = v4;
  v14 = v9;
  if (*(_QWORD *)(a1 + 16) >= v5)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    sub_1A5843128(a1, v1, v6, (2 * v5) | 1);
    swift_bridgeObjectRelease_n();
    swift_release();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A583FC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD **a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v26 = a3 + 32;
    swift_retain();
    swift_retain();
    swift_retain();
    v7 = 0;
    v8 = 0;
    v23 = v5;
    v24 = a4;
    while (1)
    {
      v10 = (uint64_t *)(v26 + 48 * v8);
      v11 = *v10;
      v12 = v10[1];
      v13 = v10[2];
      v14 = *((unsigned __int8 *)v10 + 24);
      v27 = v10[4];
      if (v7)
      {
        v15 = *(_QWORD *)(v7 + 16);
        if (v15 < *(_QWORD *)(v11 + 16))
        {
          if (!v15)
            goto LABEL_5;
          if (*(_QWORD *)(v11 + 32) == *(_QWORD *)(v7 + 32))
          {
            v16 = v15 - 1;
            if (!v16)
              goto LABEL_5;
            v17 = 0;
            while (*(_QWORD *)(v11 + 40 + 8 * v17) == *(_QWORD *)(v7 + 8 * v17 + 40))
            {
              if (v16 == ++v17)
                goto LABEL_5;
            }
          }
        }
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5846DA4(v12, v13, v14);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
        if (v14 != 2)
        {
LABEL_18:
          if (v14 == 5 && !(v13 | v12))
          {
            swift_bridgeObjectRelease();
            v7 = v11;
            goto LABEL_5;
          }
          if (v27 < a4)
          {
            v18 = *a5;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *a5 = v18;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v18 = sub_1A5826D40(0, v18[2] + 1, 1, v18);
              *a5 = v18;
            }
            v21 = v18[2];
            v20 = v18[3];
            if (v21 >= v20 >> 1)
            {
              v18 = sub_1A5826D40((_QWORD *)(v20 > 1), v21 + 1, 1, v18);
              *a5 = v18;
            }
            v18[2] = v21 + 1;
            v9 = &v18[2 * v21];
            v9[4] = v11;
            v9[5] = v27;
            v5 = v23;
            a4 = v24;
          }
        }
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5846DA4(v12, v13, v14);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v14 != 2)
          goto LABEL_18;
      }
      swift_bridgeObjectRelease();
      sub_1A5846DBC(v12, v13, v14);
      swift_bridgeObjectRelease();
      v7 = 0;
LABEL_5:
      if (++v8 == v5)
      {
        swift_release();
        swift_release();
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1A583FEB0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    v21 = a3 + 32;
    swift_retain();
    swift_retain();
    swift_retain();
    v4 = 0;
    v5 = 0;
    while (1)
    {
      v9 = v21 + 48 * v5;
      v10 = *(_QWORD *)v9;
      v11 = *(_QWORD *)(v9 + 8);
      v12 = *(_QWORD *)(v9 + 16);
      v13 = *(unsigned __int8 *)(v9 + 24);
      if (v4)
      {
        v14 = *(_QWORD *)(v4 + 16);
        if (v14 < *(_QWORD *)(v10 + 16))
        {
          if (!v14)
            goto LABEL_5;
          if (*(_QWORD *)(v10 + 32) == *(_QWORD *)(v4 + 32))
          {
            v15 = v14 - 1;
            if (!v15)
              goto LABEL_5;
            v16 = 0;
            while (*(_QWORD *)(v10 + 40 + 8 * v16) == *(_QWORD *)(v4 + 8 * v16 + 40))
            {
              if (v15 == ++v16)
                goto LABEL_5;
            }
          }
        }
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5846DA4(v11, v12, v13);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
        if (v13 != 2)
        {
LABEL_16:
          if (v13 == 5 && !(v12 | v11))
          {
            swift_bridgeObjectRelease();
            v4 = v10;
            goto LABEL_5;
          }
          swift_bridgeObjectRelease();
          v6 = v11;
          v7 = v12;
          v8 = v13;
          goto LABEL_4;
        }
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5846DA4(v11, v12, v13);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v13 != 2)
          goto LABEL_16;
      }
      if (sub_1A594B49C() != v11 || v12 != v17)
      {
        v18 = sub_1A594CD38();
        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          goto LABEL_24;
        if (sub_1A594B49C() != v11 || v12 != v19)
        {
          v20 = sub_1A594CD38();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
            goto LABEL_25;
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease();
LABEL_24:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5827178(&v22, v10);
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
      v6 = v11;
      v7 = v12;
      v8 = 2;
LABEL_4:
      sub_1A5846DBC(v6, v7, v8);
      swift_bridgeObjectRelease();
      v4 = 0;
LABEL_5:
      if (++v5 == v3)
      {
        swift_release();
        swift_release();
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1A5840160(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

unint64_t sub_1A58401D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;

  result = sub_1A58434C0(a1, a2, a3);
  if ((v8 & 1) != 0)
  {
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v16 = 0;
    v14 = 0;
    v13 = 0;
    goto LABEL_6;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(a4 + 16))
  {
    v9 = a4 + 48 * result;
    v10 = *(_QWORD *)(v9 + 32);
    v11 = *(_QWORD *)(v9 + 40);
    v12 = *(_QWORD *)(v9 + 48);
    v14 = *(_QWORD *)(v9 + 64);
    v13 = *(_QWORD *)(v9 + 72);
    v15 = *(_BYTE *)(v9 + 56);
    v16 = v15;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5846DA4(v11, v12, v15);
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_6:
    *a5 = v10;
    a5[1] = v11;
    a5[2] = v12;
    a5[3] = v16;
    a5[4] = v14;
    a5[5] = v13;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5840294(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  return sub_1A58588BC(*a1, *a2) & (v2 == v3);
}

uint64_t sub_1A58402CC(uint64_t a1)
{
  int64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A582828C(0, v1, 0);
    result = sub_1A558A0B8(a1);
    v4 = result;
    v6 = v5;
    v8 = v7 & 1;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v6)
        goto LABEL_14;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594B5F8();
      sub_1A594C924();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(v15 + 16);
      v9 = *(_QWORD *)(v15 + 24);
      if (v10 >= v9 >> 1)
        sub_1A582828C((char *)(v9 > 1), v10 + 1, 1);
      *(_QWORD *)(v15 + 16) = v10 + 1;
      v11 = v15 + 16 * v10;
      *(_QWORD *)(v11 + 32) = 0;
      *(_QWORD *)(v11 + 40) = 0xE000000000000000;
      result = sub_1A558A15C(v4, v6, v8 & 1, a1);
      v4 = result;
      v6 = v12;
      v8 = v13 & 1;
      if (!--v1)
      {
        sub_1A5529B00(result, v12, v13 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE799A50);
    sub_1A582DF58();
    v14 = sub_1A594B268();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    return v14;
  }
  return result;
}

uint64_t sub_1A5840544()
{
  uint64_t *v0;

  return sub_1A58402CC(*v0);
}

uint64_t sub_1A584054C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*(_QWORD *)a1) & 1) != 0
    && (sub_1A5845600(v2, v3, v4) & 1) != 0
    && v6 == v8)
  {
    return sub_1A58588BC(v5, v7);
  }
  else
  {
    return 0;
  }
}

BOOL sub_1A5840604(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[2];
  v3 = a2[2];
  return (sub_1A5844508(*a2, a2[1], *a1, a1[1]) & 1) != 0 && (sub_1A58441B4(v2, v3) & 1) != 0;
}

uint64_t sub_1A5840654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A582828C(0, v3, 0);
    v5 = a3 + 72;
    do
    {
      v6 = *(_QWORD *)(v5 - 32);
      v7 = *(_QWORD *)(v5 - 24);
      v8 = *(_BYTE *)(v5 - 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5846DA4(v6, v7, v8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v9 = sub_1A584081C();
      v11 = v10;
      swift_bridgeObjectRelease();
      sub_1A5846DBC(v6, v7, v8);
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v17 + 16);
      v12 = *(_QWORD *)(v17 + 24);
      if (v13 >= v12 >> 1)
        sub_1A582828C((char *)(v12 > 1), v13 + 1, 1);
      *(_QWORD *)(v17 + 16) = v13 + 1;
      v14 = v17 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      v5 += 48;
      --v3;
    }
    while (v3);
    swift_release();
    swift_release();
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE799A50);
  sub_1A582DF58();
  v15 = sub_1A594B268();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1A5840810()
{
  uint64_t *v0;

  return sub_1A5840654(*v0, v0[1], v0[2]);
}

uint64_t sub_1A584081C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 40) + 16))
  {
    sub_1A594C720();
    swift_bridgeObjectRelease();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B4A8();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    v1 = *(_QWORD *)(v0 + 8);
    v2 = *(_QWORD *)(v0 + 16);
    v3 = *(_BYTE *)(v0 + 24);
    sub_1A5846DA4(v1, v2, v3);
    sub_1A5840F00(v1, v2, v3);
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A5846DBC(v1, v2, v3);
    sub_1A594B5F8();
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A594C720();
    swift_bridgeObjectRelease();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B4A8();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    v4 = *(_QWORD *)(v0 + 8);
    v5 = *(_QWORD *)(v0 + 16);
    v6 = *(_BYTE *)(v0 + 24);
    sub_1A5846DA4(v4, v5, v6);
    sub_1A5840F00(v4, v5, v6);
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A5846DBC(v4, v5, v6);
    sub_1A594B5F8();
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
  }
  return 39;
}

uint64_t sub_1A5840AD8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[6];
  _OWORD v46[3];
  _OWORD v47[2];
  __int128 v48;
  uint64_t v49;
  _BYTE v50[32];
  uint64_t v51;

  if (*(_QWORD *)(result + 16))
  {
    v8 = result;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v9 = sub_1A58419C0(1, v8);
    sub_1A58401D8(v9, a2, a3, a4, v45);
    swift_bridgeObjectRelease();
    result = sub_1A55032A0((uint64_t)v45, (uint64_t)v46, &qword_1EE796910);
    if (*(_QWORD *)&v46[0])
    {
      v47[0] = v46[0];
      v47[1] = v46[1];
      v48 = v46[2];
      v49 = *(_QWORD *)&v46[0];
      sub_1A5846F74((_OWORD *)((char *)v47 + 8), (uint64_t)v50);
      sub_1A5846F8C((uint64_t)v50);
      v51 = *((_QWORD *)&v48 + 1);
      sub_1A54F81BC((uint64_t)&v51);
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      v10 = swift_retain();
      v11 = sub_1A5846620(v10);
      v13 = v12;
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        v14 = *(_QWORD *)(a4 + 16);
        if (v14)
        {
          v15 = v49;
          swift_retain();
          swift_retain();
          swift_retain();
          v40 = v15;
          v41 = 0;
          v16 = 0;
          v38 = (uint64_t *)(v15 + 40);
          v44 = v11;
          v43 = v14;
          while (1)
          {
            if (v11 >= v16)
              goto LABEL_8;
            v17 = a4 + 32 + 48 * v16;
            v18 = *(_QWORD **)v17;
            v19 = *(_QWORD *)(v17 + 8);
            v20 = *(_QWORD *)(v17 + 16);
            v21 = *(unsigned __int8 *)(v17 + 24);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A5846DA4(v19, v20, v21);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v18) & 1) != 0)
              break;
            v22 = *(_QWORD *)(v40 + 16);
            v23 = v18[2];
            if (v22 >= v23)
              goto LABEL_39;
            if (v22)
            {
              if (v18[4] != *(_QWORD *)(v40 + 32))
                goto LABEL_39;
              v24 = v22 - 1;
              if (v24)
              {
                v25 = v18 + 5;
                v26 = v38;
                while (1)
                {
                  v28 = *v26++;
                  v27 = v28;
                  v29 = *v25++;
                  if (v29 != v27)
                    break;
                  if (!--v24)
                    goto LABEL_18;
                }
LABEL_39:
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                sub_1A54F81BC((uint64_t)&v49);
                swift_bridgeObjectRelease();
                sub_1A5846DBC(v19, v20, v21);
                return swift_bridgeObjectRelease();
              }
            }
LABEL_18:
            if (v41)
            {
              v30 = v41[2];
              if (v30 < v23)
              {
                if (!v30)
                  break;
                if (v18[4] == v41[4])
                {
                  v31 = v30 - 1;
                  if (v30 == 1)
                    break;
                  v32 = v41 + 5;
                  v33 = v18 + 5;
                  while (1)
                  {
                    v35 = *v32++;
                    v34 = v35;
                    v36 = *v33++;
                    if (v36 != v34)
                      break;
                    if (!--v31)
                      goto LABEL_6;
                  }
                }
              }
              swift_bridgeObjectRelease();
            }
            if (v21 == 2)
            {
              if (sub_1A594B49C() == v19 && v20 == v37)
              {
                swift_bridgeObjectRelease();
                goto LABEL_36;
              }
              v42 = sub_1A594CD38();
              swift_bridgeObjectRelease();
              if ((v42 & 1) != 0)
LABEL_36:
                *a5 = 1;
              LOBYTE(v21) = 2;
LABEL_38:
              swift_bridgeObjectRelease();
              sub_1A5846DBC(v19, v20, v21);
              swift_bridgeObjectRelease();
              v41 = 0;
              goto LABEL_7;
            }
            if (v21 != 5 || v20 | v19)
              goto LABEL_38;
            swift_bridgeObjectRelease();
            v41 = v18;
LABEL_7:
            v11 = v44;
            v14 = v43;
LABEL_8:
            if (++v16 == v14)
            {
              swift_release();
              swift_release();
              swift_release();
              goto LABEL_42;
            }
          }
LABEL_6:
          swift_bridgeObjectRelease();
          sub_1A5846DBC(v19, v20, v21);
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
LABEL_42:
        swift_bridgeObjectRelease();
      }
      return sub_1A54F81BC((uint64_t)&v49);
    }
  }
  return result;
}

uint64_t sub_1A5840EE4(uint64_t a1)
{
  return sub_1A5845600(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1A5840F00(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5840F38()
{
  sub_1A594B5F8();
  sub_1A594C924();
  return 0;
}

void sub_1A5841018()
{
  JUMPOUT(0x1A5841004);
}

void sub_1A5841050()
{
  uint64_t v0;

  sub_1A5840F00(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_1A584105C(uint64_t a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t **);
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  _QWORD v19[4];
  _BYTE v20[184];
  uint64_t v21[7];
  uint64_t v22;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v4 = sub_1A58411E8();
  v6 = v5;
  v8 = v7;
  sub_1A55DC3E0(a2, v20);
  v9 = sub_1A55DC430((uint64_t)v20);
  nullsub_1(v20);
  if (v9 == 1)
    v11 = 0;
  else
    v11 = *(_QWORD *)(v10 + 80);
  v21[0] = v4;
  v21[1] = v6;
  v21[2] = v8;
  v21[3] = v11;
  v21[4] = v9 == 1;
  v21[5] = MEMORY[0x1E0DEE9E8];
  result = sub_1A5841440(v21, a1);
  if (*(_QWORD *)(a1 + 16))
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v13 = sub_1A58419C0(1, a1);
    v15 = sub_1A5841760(v19, v13);
    if (*(_QWORD *)(v14 + 40))
    {
      v17 = *(_QWORD *)v14;
      v16 = *(_QWORD *)(v14 + 8);
      v18 = *(_BYTE *)(v14 + 16);
      sub_1A5846DA4(*(_QWORD *)v14, v16, v18);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5846DBC(v17, v16, v18);
      swift_bridgeObjectRelease();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5827178(&v22, a1);
      ((void (*)(_QWORD *, _QWORD))v15)(v19, 0);
      swift_bridgeObjectRelease();
    }
    else
    {
      ((void (*)(_QWORD *, _QWORD))v15)(v19, 0);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A58411E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  char v13;
  uint64_t v14;

  v0 = BodyStructure.mediaType.getter();
  v2 = v1;
  swift_bridgeObjectRelease();
  v3 = Media.TopLevelType.text.unsafeMutableAddressor();
  if (*v3 == v0 && v3[1] == v2)
    goto LABEL_6;
  if ((sub_1A594CD38() & 1) != 0)
    goto LABEL_6;
  v8 = Media.TopLevelType.audio.unsafeMutableAddressor();
  if (*v8 == v0 && v8[1] == v2)
    goto LABEL_6;
  if ((sub_1A594CD38() & 1) != 0)
    goto LABEL_6;
  v9 = Media.TopLevelType.image.unsafeMutableAddressor();
  if (*v9 == v0 && v9[1] == v2)
    goto LABEL_6;
  if ((sub_1A594CD38() & 1) != 0)
    goto LABEL_6;
  v10 = Media.TopLevelType.message.unsafeMutableAddressor();
  if (*v10 == v0 && v10[1] == v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v11 = Media.TopLevelType.video.unsafeMutableAddressor(), *v11 == v0) && v11[1] == v2
    || (sub_1A594CD38() & 1) != 0)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    BodyStructure.mediaType.getter();
    v6 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = Media.TopLevelType.multipart.unsafeMutableAddressor();
    if (*v12 == v0 && v12[1] == v2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = sub_1A594CD38();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
        return 1;
    }
    BodyStructure.mediaType.getter();
    v6 = v14;
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1A5841440(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned __int8 v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31[2];
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[40];
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[32];

  sub_1A55032A0((uint64_t)a1, (uint64_t)v33, &qword_1EE796918);
  v5 = v34;
  v29 = v33[0];
  v30 = v33[1];
  v6 = v37;
  v27 = v35;
  v28 = v36;
  v8 = *v2;
  v7 = v2[1];
  swift_retain();
  swift_retain();
  v9 = sub_1A58434C0(a2, v8, v7);
  v11 = v10;
  v13 = v12;
  swift_release();
  swift_release();
  if ((v11 & 1) != 0)
  {
    sub_1A55032A0((uint64_t)a1, (uint64_t)v38, &qword_1EE796918);
    if (v39)
    {
      v15 = v5;
      sub_1A5846DA4(v29, v30, v5);
      v16 = v6;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A58436B0(a2);
      v24 = v2[2];
      v2 += 2;
      v23 = v24;
      sub_1A5846DA4(v29, v30, v5);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v2 = v24;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A58282FC(0, *(_QWORD *)(v23 + 16) + 1, 1);
        v23 = *v2;
      }
      v7 = *(_QWORD *)(v23 + 16);
      v17 = *(_QWORD *)(v23 + 24);
      v9 = v7 + 1;
      if (v7 < v17 >> 1)
        goto LABEL_12;
      goto LABEL_18;
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A55032A0((uint64_t)a1, (uint64_t)v38, &qword_1EE796918);
    if (v39)
    {
      v14 = (char *)v2[2];
      v15 = v5;
      sub_1A5846DA4(v29, v30, v5);
      v16 = v6;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1A584D428((uint64_t)v14);
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v17 = *((_QWORD *)v14 + 2);
        if (v9 < v17)
        {
          v18 = &v14[48 * v9];
          v19 = *((_QWORD *)v18 + 4);
          v20 = *((_QWORD *)v18 + 5);
          v21 = v18[48];
          sub_1A5846DA4(v29, v30, v15);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A5846DBC(v19, v20, v21);
          swift_bridgeObjectRelease();
          *((_QWORD *)v18 + 4) = v29;
          *((_QWORD *)v18 + 5) = v30;
          v18[48] = v15;
          *((_QWORD *)v18 + 7) = v27;
          v18[64] = v28 & 1;
          *((_QWORD *)v18 + 9) = v16;
          swift_bridgeObjectRelease();
          sub_1A58474E4(a1);
          sub_1A5846DBC(v29, v30, v15);
          result = swift_bridgeObjectRelease();
          v2[2] = (uint64_t)v14;
          return result;
        }
      }
      __break(1u);
LABEL_18:
      sub_1A58282FC((char *)(v17 > 1), v9, 1);
      v23 = *v2;
LABEL_12:
      *(_QWORD *)(v23 + 16) = v9;
      v26 = v23 + 48 * v7;
      *(_QWORD *)(v26 + 32) = v29;
      *(_QWORD *)(v26 + 40) = v30;
      *(_BYTE *)(v26 + 48) = v15;
      *(_QWORD *)(v26 + 56) = v27;
      *(_BYTE *)(v26 + 64) = v28 & 1;
      *(_QWORD *)(v26 + 72) = v16;
      swift_bridgeObjectRelease();
      sub_1A58474E4(a1);
      sub_1A5846DBC(v29, v30, v15);
      result = swift_bridgeObjectRelease();
      *v2 = v23;
      return result;
    }
    sub_1A58446AC(v9, v13);
    swift_bridgeObjectRelease();
    sub_1A584481C(v9, (uint64_t)v31);
    swift_bridgeObjectRelease();
    sub_1A5846F74(v31, (uint64_t)v41);
    sub_1A5846F8C((uint64_t)v41);
    v40 = v32;
    return sub_1A54F81BC((uint64_t)&v40);
  }
}

void (*sub_1A5841760(_QWORD *a1, uint64_t a2))(uint64_t **a1)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;
  char v7;
  uint64_t v8;

  v5 = malloc(0x58uLL);
  *a1 = v5;
  v5[6] = a2;
  v5[7] = v2;
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  v6 = sub_1A5844968(a2, v5);
  *((_BYTE *)v5 + 80) = v7;
  v5[8] = v6;
  v5[9] = v8;
  return sub_1A58417C8;
}

void sub_1A58417C8(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_1A5844C5C((*a1)[6], (*a1)[8], (*a1)[10] & 1, (*a1)[9], *a1);
  sub_1A584748C(*v1, v1[1], v1[2], v1[3], v1[4], v1[5]);
  free(v1);
}

unint64_t sub_1A5841810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;

  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_BYTE *)(a2 + 16);
  swift_beginAccess();
  v11 = a3[2];
  v12 = a3[3];
  v13 = a3[4];
  swift_bridgeObjectRetain_n();
  sub_1A5846DA4(v8, v9, v10);
  result = sub_1A58434C0(a1, v11, v12);
  v26 = v10;
  if ((v15 & 1) != 0)
  {
    swift_endAccess();
    v20 = 0;
LABEL_9:
    swift_bridgeObjectRelease();
    v23 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)a4 = a1;
    *(_QWORD *)(a4 + 8) = a1;
    *(_QWORD *)(a4 + 16) = v8;
    *(_QWORD *)(a4 + 24) = v9;
    *(_BYTE *)(a4 + 32) = v26;
    *(_QWORD *)(a4 + 40) = v20;
    *(_QWORD *)(a4 + 48) = v23;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v13 + 16))
  {
    v24 = v9;
    v25 = v8;
    v16 = v13 + 48 * result;
    v18 = *(_QWORD *)(v16 + 32);
    v17 = *(_QWORD *)(v16 + 40);
    v19 = *(_BYTE *)(v16 + 48);
    v20 = *(_QWORD *)(v16 + 56);
    v21 = *(_BYTE *)(v16 + 64);
    v22 = *(_QWORD *)(v16 + 72);
    swift_endAccess();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5846DA4(v18, v17, v19);
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      v20 = sub_1A5847040(0, v22, a3);
      swift_release();
      sub_1A5846DBC(v18, v17, v19);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A5846DBC(v18, v17, v19);
    }
    v9 = v24;
    v8 = v25;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A58419C0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result < 0)
    goto LABEL_30;
  v2 = a2;
  v3 = result;
  if (!result)
    return v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    return v9;
  }
  v5 = 0;
  v6 = 0;
  v7 = a2 + 32;
  v20 = v4 - 1;
  v8 = MEMORY[0x1E0DEE9D8];
  v9 = MEMORY[0x1E0DEE9D8];
  v18 = result;
  v19 = a2 + 32;
  do
  {
    v12 = *(_QWORD *)(v7 + 8 * v5);
    v13 = *(_QWORD *)(v8 + 16);
    if (v13 < v3)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A5828334(0, v13 + 1, 1);
        v7 = v19;
      }
      v11 = *(_QWORD *)(v8 + 16);
      v10 = *(_QWORD *)(v8 + 24);
      if (v11 >= v10 >> 1)
      {
        result = (uint64_t)sub_1A5828334((char *)(v10 > 1), v11 + 1, 1);
        v7 = v19;
      }
      *(_QWORD *)(v8 + 16) = v11 + 1;
      *(_QWORD *)(v8 + 8 * v11 + 32) = v12;
LABEL_8:
      if (v20 == v5)
        goto LABEL_25;
      goto LABEL_9;
    }
    if (v6 >= v13)
      goto LABEL_28;
    v14 = v2;
    v15 = *(_QWORD *)(v8 + 8 * v6 + 32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1A5828334(0, *(_QWORD *)(v9 + 16) + 1, 1);
      v7 = v19;
    }
    v17 = *(_QWORD *)(v9 + 16);
    v16 = *(_QWORD *)(v9 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_1A5828334((char *)(v16 > 1), v17 + 1, 1);
      v7 = v19;
    }
    *(_QWORD *)(v9 + 16) = v17 + 1;
    *(_QWORD *)(v9 + 8 * v17 + 32) = v15;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A584D400(v8);
      v8 = result;
    }
    v2 = v14;
    v3 = v18;
    if (v6 >= *(_QWORD *)(v8 + 16))
      goto LABEL_29;
    *(_QWORD *)(v8 + 8 * v6++ + 32) = v12;
    if ((uint64_t)v6 < v18)
      goto LABEL_8;
    if (v20 == v5)
      goto LABEL_25;
    v6 = 0;
LABEL_9:
    ++v5;
  }
  while (v5 < *(_QWORD *)(v2 + 16));
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A5841BE8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  unint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *__dst;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v2 = v1;
  v4 = a1[1];
  result = sub_1A594CC78();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_134;
    if (v4)
      return sub_1A584290C(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_133;
  v97 = result;
  v93 = a1;
  if (v4 <= 1)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (uint64_t *)(MEMORY[0x1E0DEE9D8] + 32);
    v96 = MEMORY[0x1E0DEE9D8];
    if (v4 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_99:
      result = v8;
      if (v11 >= 2)
      {
        v86 = *v93;
        do
        {
          v87 = v11 - 2;
          if (v11 < 2)
            goto LABEL_128;
          if (!v86)
            goto LABEL_141;
          v88 = result;
          v89 = *(_QWORD *)(result + 32 + 16 * v87);
          v90 = *(_QWORD *)(result + 32 + 16 * (v11 - 1) + 8);
          result = sub_1A58429E4((uint64_t *)(v86 + 8 * v89), (uint64_t *)(v86 + 8 * *(_QWORD *)(result + 32 + 16 * (v11 - 1))), v86 + 8 * v90, __dst);
          if (v2)
            break;
          if (v90 < v89)
            goto LABEL_129;
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1A584D3C4(v88);
            v88 = result;
          }
          if (v87 >= *(_QWORD *)(v88 + 16))
            goto LABEL_130;
          v91 = (_QWORD *)(v88 + 32 + 16 * v87);
          *v91 = v89;
          v91[1] = v90;
          v92 = *(_QWORD *)(v88 + 16);
          if (v11 > v92)
            goto LABEL_131;
          memmove((void *)(v88 + 32 + 16 * (v11 - 1)), (const void *)(v88 + 32 + 16 * v11), 16 * (v92 - v11));
          result = v88;
          *(_QWORD *)(v88 + 16) = v92 - 1;
          v11 = v92 - 1;
        }
        while (v92 > 2);
      }
LABEL_96:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v103 = v1;
  }
  else
  {
    v103 = v1;
    v7 = v6 >> 1;
    result = sub_1A594BA18();
    *(_QWORD *)(result + 16) = v7;
    v96 = result;
    __dst = (uint64_t *)(result + 32);
  }
  v9 = 0;
  v10 = *a1;
  v94 = *a1 - 8;
  v95 = *a1 + 16;
  v8 = MEMORY[0x1E0DEE9D8];
  v98 = v4;
  while (1)
  {
    v12 = v9++;
    v101 = v12;
    if (v9 < v4)
    {
      v13 = *(_QWORD *)(v10 + 8 * v9);
      v14 = *(_QWORD *)(v10 + 8 * v12);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v15 = static SectionSpecifier.Part.< infix(_:_:)(v13, v14);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v9 = v12 + 2;
      if (v12 + 2 < v4)
      {
        v16 = (uint64_t *)(v95 + 8 * v12);
        while (1)
        {
          v18 = *(v16 - 1);
          v17 = *v16;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v19 = static SectionSpecifier.Part.< infix(_:_:)(v17, v18);
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if (((v15 ^ v19) & 1) != 0)
            break;
          ++v9;
          ++v16;
          if (v4 == v9)
          {
            v9 = v4;
            break;
          }
        }
        v12 = v101;
      }
      if (v15)
      {
        if (v9 < v12)
          goto LABEL_135;
        if (v12 < v9)
        {
          v20 = (uint64_t *)(v94 + 8 * v9);
          v21 = v9;
          v22 = v12;
          v23 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v22 != --v21)
            {
              if (!v10)
                goto LABEL_140;
              v24 = *v23;
              *v23 = *v20;
              *v20 = v24;
            }
            ++v22;
            --v20;
            ++v23;
          }
          while (v22 < v21);
        }
      }
    }
    if (v9 >= v4)
      goto LABEL_48;
    if (__OFSUB__(v9, v12))
      goto LABEL_132;
    if (v9 - v12 >= v97)
      goto LABEL_48;
    if (__OFADD__(v12, v97))
      goto LABEL_136;
    v25 = v12 + v97 >= v4 ? v4 : v12 + v97;
    if (v25 < v12)
      break;
    if (v9 != v25)
    {
      v26 = (uint64_t *)(v94 + 8 * v9);
      v99 = v25;
      do
      {
        v27 = *(_QWORD *)(v10 + 8 * v9);
        v28 = v12;
        v29 = v26;
        do
        {
          v30 = *v29;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v31 = static SectionSpecifier.Part.< infix(_:_:)(v27, v30);
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if (!v31)
            break;
          if (!v10)
            goto LABEL_138;
          v32 = *v29;
          v27 = v29[1];
          *v29 = v27;
          v29[1] = v32;
          --v29;
          ++v28;
        }
        while (v9 != v28);
        ++v9;
        ++v26;
        v12 = v101;
      }
      while (v9 != v99);
      v9 = v99;
    }
LABEL_48:
    if (v9 < v12)
      goto LABEL_127;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A584D2CC(0, *(_QWORD *)(v8 + 16) + 1, 1, (char *)v8);
      v8 = result;
    }
    v34 = *(_QWORD *)(v8 + 16);
    v33 = *(_QWORD *)(v8 + 24);
    v11 = v34 + 1;
    if (v34 >= v33 >> 1)
    {
      result = (uint64_t)sub_1A584D2CC((char *)(v33 > 1), v34 + 1, 1, (char *)v8);
      v8 = result;
    }
    *(_QWORD *)(v8 + 16) = v11;
    v102 = v8 + 32;
    v35 = (uint64_t *)(v8 + 32 + 16 * v34);
    *v35 = v12;
    v35[1] = v9;
    if (v34)
    {
      v36 = v8 + 32;
      while (1)
      {
        v37 = v11 - 1;
        if (v11 >= 4)
        {
          v42 = v36 + 16 * v11;
          v43 = *(_QWORD *)(v42 - 64);
          v44 = *(_QWORD *)(v42 - 56);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_116;
          v47 = *(_QWORD *)(v42 - 48);
          v46 = *(_QWORD *)(v42 - 40);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_117;
          v49 = v11 - 2;
          v50 = (uint64_t *)(v36 + 16 * (v11 - 2));
          v52 = *v50;
          v51 = v50[1];
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_118;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_120;
          if (v54 >= v45)
          {
            v72 = (uint64_t *)(v36 + 16 * v37);
            v74 = *v72;
            v73 = v72[1];
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_126;
            v65 = v40 < v75;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v66 = *(_QWORD *)(v8 + 32);
            v67 = *(_QWORD *)(v8 + 40);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_80;
          }
          v39 = *(_QWORD *)(v8 + 32);
          v38 = *(_QWORD *)(v8 + 40);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_119;
        v49 = v11 - 2;
        v55 = (uint64_t *)(v36 + 16 * (v11 - 2));
        v57 = *v55;
        v56 = v55[1];
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_121;
        v61 = (uint64_t *)(v36 + 16 * v37);
        v63 = *v61;
        v62 = v61[1];
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_123;
        if (__OFADD__(v59, v64))
          goto LABEL_125;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_86:
          if (v65)
            v37 = v49;
          goto LABEL_88;
        }
LABEL_80:
        if ((v60 & 1) != 0)
          goto LABEL_122;
        v68 = (uint64_t *)(v36 + 16 * v37);
        v70 = *v68;
        v69 = v68[1];
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_124;
        if (v71 < v59)
          goto LABEL_15;
LABEL_88:
        v76 = v37 - 1;
        if (v37 - 1 >= v11)
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        v77 = v10;
        if (!v10)
          goto LABEL_139;
        v78 = v8;
        v79 = v36;
        v80 = (uint64_t *)(v36 + 16 * v76);
        v81 = *v80;
        v82 = (_QWORD *)(v79 + 16 * v37);
        v83 = v82[1];
        v84 = v77;
        result = sub_1A58429E4((uint64_t *)(v77 + 8 * *v80), (uint64_t *)(v77 + 8 * *v82), v77 + 8 * v83, __dst);
        if (v103)
          goto LABEL_96;
        if (v83 < v81)
          goto LABEL_113;
        if (v37 > *(_QWORD *)(v78 + 16))
          goto LABEL_114;
        *v80 = v81;
        v36 = v102;
        *(_QWORD *)(v102 + 16 * v76 + 8) = v83;
        v85 = *(_QWORD *)(v78 + 16);
        if (v37 >= v85)
          goto LABEL_115;
        v8 = v78;
        v11 = v85 - 1;
        result = (uint64_t)memmove(v82, v82 + 2, 16 * (v85 - 1 - v37));
        *(_QWORD *)(v78 + 16) = v85 - 1;
        v10 = v84;
        if (v85 <= 2)
          goto LABEL_15;
      }
    }
    v11 = 1;
LABEL_15:
    v4 = v98;
    if (v9 >= v98)
    {
      v2 = v103;
      goto LABEL_99;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
  return result;
}

uint64_t sub_1A5842288(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t i;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  unint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;

  v3 = a1[1];
  result = sub_1A594CC78();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v83 = 0;
      v84 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v86 = *(_QWORD *)(v84 + 16 * i + 8);
        v87 = v83;
        do
        {
          v88 = v84 + v87;
          if (v86 >= *(_QWORD *)(v84 + v87 + 8))
            break;
          if (!v84)
            goto LABEL_141;
          v89 = *(_QWORD *)(v88 + 16);
          *(_OWORD *)(v88 + 16) = *(_OWORD *)v88;
          *(_QWORD *)v88 = v89;
          *(_QWORD *)(v88 + 8) = v86;
          v87 -= 16;
        }
        while (v87 != -16);
        v83 += 16;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_136;
    v6 = result;
    v97 = a1;
    if (v3 > 1)
    {
      v7 = v5 >> 1;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA860);
      result = sub_1A594BA18();
      *(_QWORD *)(result + 16) = v7;
      v99 = result;
      v103 = (char *)(result + 32);
LABEL_13:
      v9 = 0;
      v10 = *a1;
      v98 = *a1 + 40;
      v11 = MEMORY[0x1E0DEE9D8];
      v100 = v6;
      v101 = v3;
      v102 = v10;
      while (1)
      {
        v13 = v9++;
        if (v9 < v3)
        {
          v14 = *(_QWORD *)(v10 + 16 * v9 + 8);
          v15 = *(_QWORD *)(v10 + 16 * v13 + 8);
          v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            v16 = (uint64_t *)(v98 + 16 * v13);
            v17 = v14;
            while (1)
            {
              v19 = *v16;
              v16 += 2;
              v18 = v19;
              if (v14 < v15 == v19 >= v17)
                break;
              ++v9;
              v17 = v18;
              if (v3 == v9)
              {
                v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13)
              goto LABEL_138;
            if (v13 < v9)
            {
              v20 = 16 * v9;
              v21 = 16 * v13;
              v22 = v9;
              v23 = v13;
              do
              {
                if (v23 != --v22)
                {
                  if (!v10)
                    goto LABEL_144;
                  v24 = v10 + v20;
                  v25 = *(_QWORD *)(v10 + v21);
                  v26 = *(_QWORD *)(v10 + v21 + 8);
                  *(_OWORD *)(v10 + v21) = *(_OWORD *)(v10 + v20 - 16);
                  *(_QWORD *)(v24 - 16) = v25;
                  *(_QWORD *)(v24 - 8) = v26;
                }
                ++v23;
                v20 -= 16;
                v21 += 16;
              }
              while (v23 < v22);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13))
            goto LABEL_135;
          if (v9 - v13 < v6)
          {
            v27 = v13 + v6;
            if (__OFADD__(v13, v6))
              goto LABEL_139;
            if (v27 >= v3)
              v27 = v3;
            if (v27 < v13)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return result;
            }
            if (v9 != v27)
            {
              v28 = (_QWORD *)(v10 + 16 * v9);
              do
              {
                v29 = *(_QWORD *)(v10 + 16 * v9 + 8);
                v30 = v13;
                v31 = v28;
                do
                {
                  if (v29 >= *(v31 - 1))
                    break;
                  if (!v10)
                    goto LABEL_142;
                  v32 = *v31;
                  *(_OWORD *)v31 = *((_OWORD *)v31 - 1);
                  *(v31 - 1) = v29;
                  *(v31 - 2) = v32;
                  v31 -= 2;
                  ++v30;
                }
                while (v9 != v30);
                ++v9;
                v28 += 2;
              }
              while (v9 != v27);
              v9 = v27;
            }
          }
        }
        if (v9 < v13)
          goto LABEL_130;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1A584D2CC(0, *(_QWORD *)(v11 + 16) + 1, 1, (char *)v11);
          v11 = result;
        }
        v34 = *(_QWORD *)(v11 + 16);
        v33 = *(_QWORD *)(v11 + 24);
        v12 = v34 + 1;
        v10 = v102;
        if (v34 >= v33 >> 1)
        {
          result = (uint64_t)sub_1A584D2CC((char *)(v33 > 1), v34 + 1, 1, (char *)v11);
          v10 = v102;
          v11 = result;
        }
        *(_QWORD *)(v11 + 16) = v12;
        v35 = v11 + 32;
        v36 = (uint64_t *)(v11 + 32 + 16 * v34);
        *v36 = v13;
        v36[1] = v9;
        if (v34)
        {
          while (1)
          {
            v37 = v12 - 1;
            if (v12 >= 4)
            {
              v42 = v35 + 16 * v12;
              v43 = *(_QWORD *)(v42 - 64);
              v44 = *(_QWORD *)(v42 - 56);
              v48 = __OFSUB__(v44, v43);
              v45 = v44 - v43;
              if (v48)
                goto LABEL_119;
              v47 = *(_QWORD *)(v42 - 48);
              v46 = *(_QWORD *)(v42 - 40);
              v48 = __OFSUB__(v46, v47);
              v40 = v46 - v47;
              v41 = v48;
              if (v48)
                goto LABEL_120;
              v49 = v12 - 2;
              v50 = (uint64_t *)(v35 + 16 * (v12 - 2));
              v52 = *v50;
              v51 = v50[1];
              v48 = __OFSUB__(v51, v52);
              v53 = v51 - v52;
              if (v48)
                goto LABEL_121;
              v48 = __OFADD__(v40, v53);
              v54 = v40 + v53;
              if (v48)
                goto LABEL_123;
              if (v54 >= v45)
              {
                v72 = (uint64_t *)(v35 + 16 * v37);
                v74 = *v72;
                v73 = v72[1];
                v48 = __OFSUB__(v73, v74);
                v75 = v73 - v74;
                if (v48)
                  goto LABEL_129;
                v65 = v40 < v75;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                v66 = *(_QWORD *)(v11 + 32);
                v67 = *(_QWORD *)(v11 + 40);
                v48 = __OFSUB__(v67, v66);
                v59 = v67 - v66;
                v60 = v48;
                goto LABEL_77;
              }
              v39 = *(_QWORD *)(v11 + 32);
              v38 = *(_QWORD *)(v11 + 40);
              v48 = __OFSUB__(v38, v39);
              v40 = v38 - v39;
              v41 = v48;
            }
            if ((v41 & 1) != 0)
              goto LABEL_122;
            v49 = v12 - 2;
            v55 = (uint64_t *)(v35 + 16 * (v12 - 2));
            v57 = *v55;
            v56 = v55[1];
            v58 = __OFSUB__(v56, v57);
            v59 = v56 - v57;
            v60 = v58;
            if (v58)
              goto LABEL_124;
            v61 = (uint64_t *)(v35 + 16 * v37);
            v63 = *v61;
            v62 = v61[1];
            v48 = __OFSUB__(v62, v63);
            v64 = v62 - v63;
            if (v48)
              goto LABEL_126;
            if (__OFADD__(v59, v64))
              goto LABEL_128;
            if (v59 + v64 >= v40)
            {
              v65 = v40 < v64;
LABEL_83:
              if (v65)
                v37 = v49;
              goto LABEL_85;
            }
LABEL_77:
            if ((v60 & 1) != 0)
              goto LABEL_125;
            v68 = (uint64_t *)(v35 + 16 * v37);
            v70 = *v68;
            v69 = v68[1];
            v48 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v48)
              goto LABEL_127;
            if (v71 < v59)
              goto LABEL_15;
LABEL_85:
            v76 = v37 - 1;
            if (v37 - 1 >= v12)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v10)
              goto LABEL_143;
            v77 = v11;
            v78 = (uint64_t *)(v35 + 16 * v76);
            v79 = *v78;
            v80 = (_QWORD *)(v35 + 16 * v37);
            v81 = v80[1];
            result = sub_1A5842C80((char *)(v10 + 16 * *v78), (char *)(v10 + 16 * *v80), v10 + 16 * v81, v103);
            if (v1)
              goto LABEL_93;
            if (v81 < v79)
              goto LABEL_116;
            if (v37 > *(_QWORD *)(v77 + 16))
              goto LABEL_117;
            *v78 = v79;
            *(_QWORD *)(v35 + 16 * v76 + 8) = v81;
            v82 = *(_QWORD *)(v77 + 16);
            if (v37 >= v82)
              goto LABEL_118;
            v11 = v77;
            v12 = v82 - 1;
            result = (uint64_t)memmove((void *)(v35 + 16 * v37), v80 + 2, 16 * (v82 - 1 - v37));
            *(_QWORD *)(v77 + 16) = v82 - 1;
            v10 = v102;
            if (v82 <= 2)
              goto LABEL_15;
          }
        }
        v12 = 1;
LABEL_15:
        v6 = v100;
        v3 = v101;
        if (v9 >= v101)
        {
          v8 = v99;
          goto LABEL_102;
        }
      }
    }
    v8 = MEMORY[0x1E0DEE9D8];
    v103 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 == 1)
    {
      v99 = MEMORY[0x1E0DEE9D8];
      goto LABEL_13;
    }
    v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v11 = MEMORY[0x1E0DEE9D8];
LABEL_102:
    result = v11;
    v99 = v8;
    if (v12 >= 2)
    {
      v90 = *v97;
      do
      {
        v91 = v12 - 2;
        if (v12 < 2)
          goto LABEL_131;
        if (!v90)
          goto LABEL_145;
        v92 = result;
        v93 = *(_QWORD *)(result + 32 + 16 * v91);
        v94 = *(_QWORD *)(result + 32 + 16 * (v12 - 1) + 8);
        result = sub_1A5842C80((char *)(v90 + 16 * v93), (char *)(v90 + 16 * *(_QWORD *)(result + 32 + 16 * (v12 - 1))), v90 + 16 * v94, v103);
        if (v1)
          break;
        if (v94 < v93)
          goto LABEL_132;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1A584D3C4(v92);
          v92 = result;
        }
        if (v91 >= *(_QWORD *)(v92 + 16))
          goto LABEL_133;
        v95 = (_QWORD *)(v92 + 32 + 16 * v91);
        *v95 = v93;
        v95[1] = v94;
        v96 = *(_QWORD *)(v92 + 16);
        if (v12 > v96)
          goto LABEL_134;
        memmove((void *)(v92 + 32 + 16 * (v12 - 1)), (const void *)(v92 + 32 + 16 * v12), 16 * (v96 - v12));
        result = v92;
        *(_QWORD *)(v92 + 16) = v96 - 1;
        v12 = v96 - 1;
      }
      while (v96 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v99 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A584290C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;

  v14 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    v8 = *(_QWORD *)(v6 + 8 * v4);
    v9 = v14;
    v10 = (uint64_t *)v7;
    while (1)
    {
      v11 = *v10;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v12 = static SectionSpecifier.Part.< infix(_:_:)(v8, v11);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (!v12)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v6)
        break;
      v13 = *v10;
      v8 = v10[1];
      *v10 = v8;
      v10[1] = v13;
      --v10;
      if (v4 == ++v9)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A58429E4(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t *v18;
  BOOL v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  BOOL v26;
  uint64_t *v28;
  uint64_t *v29;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  if (v10 < v12 >> 3)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    if ((unint64_t)v6 >= a3 || v8 < 8)
    {
      v6 = v7;
      v14 = &v4[v10];
      goto LABEL_44;
    }
    v14 = &v4[v10];
    while (1)
    {
      v15 = *v6;
      v16 = *v4;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v17 = static SectionSpecifier.Part.< infix(_:_:)(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v17)
        break;
      v18 = v6;
      v19 = v7 == v6++;
      if (!v19)
        goto LABEL_17;
LABEL_18:
      ++v7;
      if (v4 >= v14 || (unint64_t)v6 >= a3)
      {
        v6 = v7;
        goto LABEL_44;
      }
    }
    v18 = v4;
    v19 = v7 == v4++;
    if (v19)
      goto LABEL_18;
LABEL_17:
    *v7 = *v18;
    goto LABEL_18;
  }
  if (__dst != a2 || &a2[v13] <= __dst)
    memmove(__dst, a2, 8 * v13);
  v14 = &v4[v13];
  if (v7 < v6 && v11 >= 8)
  {
    v20 = (uint64_t *)(a3 - 8);
    v29 = v4;
    v28 = v7;
    while (1)
    {
      v21 = v20 + 1;
      v22 = *(v14 - 1);
      v23 = v6 - 1;
      v24 = *(v6 - 1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v25 = static SectionSpecifier.Part.< infix(_:_:)(v22, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25)
      {
        if (v21 != v6)
        {
          --v6;
LABEL_38:
          v4 = v29;
LABEL_39:
          *v20 = *v23;
          goto LABEL_40;
        }
        v26 = v20 >= v6--;
        v4 = v29;
        if (v26)
          goto LABEL_39;
      }
      else
      {
        v23 = v14 - 1;
        if (v21 != v14)
        {
          --v14;
          goto LABEL_38;
        }
        v26 = v20 >= v14--;
        v4 = v29;
        if (v26)
          goto LABEL_39;
      }
LABEL_40:
      if (v6 > v28)
      {
        --v20;
        if (v14 > v4)
          continue;
      }
      break;
    }
  }
LABEL_44:
  if (v6 != v4
    || v6 >= (uint64_t *)((char *)v4
                       + (((char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8)))
  {
    memmove(v6, v4, 8 * (v14 - v4));
  }
  return 1;
}

uint64_t sub_1A5842C80(char *__dst, char *__src, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  int64_t v22;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = __src - __dst;
  v9 = __src - __dst + 15;
  if (__src - __dst >= 0)
    v9 = __src - __dst;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 15;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4)
      memmove(a4, __src, 16 * v13);
    v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16)
      goto LABEL_43;
    v18 = (char *)(a3 - 16);
    while (1)
    {
      v19 = v18 + 16;
      if (*((_QWORD *)v14 - 1) >= *((_QWORD *)v6 - 1))
      {
        v20 = v14 - 16;
        if (v19 != v14)
        {
          v14 -= 16;
          goto LABEL_40;
        }
        v21 = v18 >= v14;
        v14 -= 16;
        if (v21)
          goto LABEL_40;
      }
      else
      {
        v20 = v6 - 16;
        if (v19 != v6)
        {
          v6 -= 16;
LABEL_40:
          *(_OWORD *)v18 = *(_OWORD *)v20;
          goto LABEL_41;
        }
        v21 = v18 >= v6;
        v6 -= 16;
        if (v21)
          goto LABEL_40;
      }
LABEL_41:
      if (v6 > v7)
      {
        v18 -= 16;
        if (v14 > v4)
          continue;
      }
      goto LABEL_43;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4)
    memmove(a4, __dst, 16 * v10);
  v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      if (*((_QWORD *)v6 + 1) >= *((_QWORD *)v4 + 1))
      {
        v17 = v4 + 16;
        v16 = v4;
        v15 = v6;
        if (v7 == v4)
        {
          v4 += 16;
          if (v7 < v17)
            goto LABEL_20;
        }
        else
        {
          v4 += 16;
        }
      }
      else
      {
        v15 = v6 + 16;
        v16 = v6;
        if (v7 == v6 && v7 < v15)
          goto LABEL_20;
      }
      *(_OWORD *)v7 = *(_OWORD *)v16;
LABEL_20:
      v7 += 16;
      if (v4 < v14)
      {
        v6 = v15;
        if ((unint64_t)v15 < a3)
          continue;
      }
      break;
    }
  }
  v6 = v7;
LABEL_43:
  v22 = v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0);
  if (v6 != v4 || v6 >= &v4[v22 & 0xFFFFFFFFFFFFFFF0])
    memmove(v6, v4, 16 * (v22 >> 4));
  return 1;
}

uint64_t sub_1A5842EA4(unint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;

  v10 = *(_QWORD *)(a2 + 16);
  v11 = MEMORY[0x1A85AC8B8](v10);
  if ((a4 & 1) != 0)
    v12 = 0;
  else
    v12 = a3;
  if (v12 <= v11)
    v12 = v11;
  if (v12 <= a5)
    v13 = a5;
  else
    v13 = v12;
  if (v13 > 4)
  {
    v14 = MEMORY[0x1A85AC8C4]();
    sub_1A5843BB8(&v32, a2, (_QWORD *)(v14 + 16), v14 + 32);
    *a1 = v32;
    return v14;
  }
  if (v10 < 2)
  {
    v14 = 0;
    *a1 = v10;
    return v14;
  }
  v31 = a1;
  result = (uint64_t)sub_1A5826C40(0, v10, 0, MEMORY[0x1E0DEE9D8]);
  v16 = (char *)result;
  v17 = 0;
  v18 = a2 + 32;
  while (v17 != v10)
  {
    v19 = *(_QWORD *)(v18 + 8 * v17);
    v20 = *((_QWORD *)v16 + 2);
    if (v20)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v21 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v22 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v21, v19);
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
        goto LABEL_32;
      if (v20 != 1)
      {
        v23 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v24 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v23, v19);
        result = swift_bridgeObjectRelease();
        if ((v24 & 1) != 0)
        {
LABEL_32:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v14 = 0;
          *v31 = v17;
          return v14;
        }
        if (v20 != 2)
        {
          v25 = 6;
          while (1)
          {
            v26 = v25 - 3;
            if (__OFADD__(v25 - 4, 1))
              break;
            v27 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v28 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v27, v19);
            result = swift_bridgeObjectRelease();
            if ((v28 & 1) != 0)
              goto LABEL_32;
            ++v25;
            if (v26 == v20)
              goto LABEL_24;
          }
          __break(1u);
          break;
        }
      }
LABEL_24:
      swift_bridgeObjectRelease();
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_1A5826C40(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v30 = *((_QWORD *)v16 + 2);
    v29 = *((_QWORD *)v16 + 3);
    if (v30 >= v29 >> 1)
      v16 = sub_1A5826C40((char *)(v29 > 1), v30 + 1, 1, v16);
    ++v17;
    *((_QWORD *)v16 + 2) = v30 + 1;
    *(_QWORD *)&v16[8 * v30 + 32] = v19;
    result = swift_bridgeObjectRelease();
    if (v17 == v10)
    {
      swift_bridgeObjectRelease();
      v14 = 0;
      *v31 = v10;
      return v14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5843128(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v5 = a4 >> 1;
  if (a4 >> 1 == a3)
    return result;
  v6 = v4;
  v7 = a3;
  v8 = v4 + 1;
  result = swift_unknownObjectRetain();
  v38 = v5;
  while (v7 < v5)
  {
    v12 = *(_QWORD *)(a2 + 8 * v7);
    v14 = *v6;
    v13 = v6[1];
    v15 = *(_QWORD *)(v13 + 16);
    if (*v6)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      sub_1A5843A50(v12, v13 + 32, v15, (_QWORD *)(v14 + 16), v14 + 32);
      v17 = v16;
      swift_release();
      if ((v17 & 1) == 0)
        goto LABEL_7;
    }
    else if (v15)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v18 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v19 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v18, v12);
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
        goto LABEL_7;
      if (v15 != 1)
      {
        v26 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v27 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v26, v12);
        swift_bridgeObjectRelease();
        if ((v27 & 1) != 0)
          goto LABEL_7;
        if (v15 != 2)
        {
          v28 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v29 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v28, v12);
          swift_bridgeObjectRelease();
          if ((v29 & 1) != 0)
            goto LABEL_7;
          if (v15 != 3)
          {
            v30 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v31 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v30, v12);
            swift_bridgeObjectRelease();
            if ((v31 & 1) != 0)
              goto LABEL_7;
            if (v15 != 4)
            {
              v32 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v33 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v32, v12);
              swift_bridgeObjectRelease();
              if ((v33 & 1) != 0)
                goto LABEL_7;
              v34 = v15 - 5;
              v35 = v13 + 72;
              while (v34)
              {
                v35 += 8;
                v36 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                v37 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v36, v12);
                swift_bridgeObjectRelease();
                --v34;
                if ((v37 & 1) != 0)
                  goto LABEL_7;
              }
            }
          }
        }
      }
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v8 = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A58282C4(0, *(_QWORD *)(v13 + 16) + 1, 1);
      v13 = *v8;
    }
    v22 = *(_QWORD *)(v13 + 16);
    v21 = *(_QWORD *)(v13 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_1A58282C4((char *)(v21 > 1), v22 + 1, 1);
      v13 = *v8;
    }
    *(_QWORD *)(v13 + 16) = v22 + 1;
    *(_QWORD *)(v13 + 8 * v22 + 32) = v12;
    v6[1] = v13;
    v23 = *v6;
    if (*v6)
    {
      swift_beginAccess();
      if (MEMORY[0x1A85AC894](*(_QWORD *)(v23 + 16) & 0x3FLL) <= (uint64_t)v22)
      {
        v25 = *(_QWORD *)(v23 + 24) & 0x3FLL;
        if (v22 > 0xE || v25)
          goto LABEL_3;
        swift_release();
        *v6 = 0;
      }
      else
      {
        result = swift_isUniquelyReferenced_native();
        v24 = *v6;
        if ((result & 1) == 0)
        {
          if (!v24)
            goto LABEL_48;
          v24 = sub_1A594A434();
          result = swift_release();
          *v6 = v24;
        }
        if (!v24)
          goto LABEL_47;
        sub_1A594A3EC();
      }
    }
    else if (v22 > 0xE)
    {
      v25 = 0;
LABEL_3:
      v9 = MEMORY[0x1A85AC8B8](v22 + 1);
      if (v25 <= v9)
        v10 = v9;
      else
        v10 = v25;
      v11 = sub_1A58438BC(v13, v10, 0, v25);
      swift_release();
      *v6 = v11;
    }
LABEL_7:
    ++v7;
    result = swift_bridgeObjectRelease();
    v5 = v38;
    if (v7 == v38)
      return swift_unknownObjectRelease();
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1A58434C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v4 = a3 + 32;
  v5 = *(_QWORD *)(a3 + 16);
  if (!a2)
  {
    if (v5)
    {
      v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v10 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v9, a1);
      swift_bridgeObjectRelease();
      if ((v10 & 1) != 0)
        return 0;
      if (v5 == 1)
        return 0;
      v11 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v12 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v11, a1);
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        return 1;
      if (v5 != 2)
      {
        v14 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v15 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v14, a1);
        swift_bridgeObjectRelease();
        if ((v15 & 1) != 0)
          return 2;
        if (v5 != 3)
        {
          v16 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v17 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v16, a1);
          swift_bridgeObjectRelease();
          if ((v17 & 1) != 0)
            return 3;
          v18 = 0;
          while (v5 - 4 != v18)
          {
            v19 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v20 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v19, a1);
            swift_bridgeObjectRelease();
            ++v18;
            if ((v20 & 1) != 0)
              return v18 + 3;
          }
          return 0;
        }
      }
    }
    return 0;
  }
  v6 = (_QWORD *)(a2 + 16);
  v7 = a2 + 32;
  swift_retain();
  v8 = sub_1A5843A50(a1, v4, v5, v6, v7);
  swift_release();
  return v8;
}

uint64_t sub_1A58436B0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v6 = v1[1];
  v4 = v1 + 1;
  v5 = v6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = swift_isUniquelyReferenced_nonNull_native();
  *v4 = v6;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1A58282C4(0, *(_QWORD *)(v5 + 16) + 1, 1);
    v5 = *v4;
  }
  v9 = *(_QWORD *)(v5 + 16);
  v8 = *(_QWORD *)(v5 + 24);
  if (v9 >= v8 >> 1)
  {
    result = (uint64_t)sub_1A58282C4((char *)(v8 > 1), v9 + 1, 1);
    v5 = *v4;
  }
  *(_QWORD *)(v5 + 16) = v9 + 1;
  *(_QWORD *)(v5 + 8 * v9 + 32) = a1;
  v2[1] = v5;
  v10 = *v2;
  if (*v2)
  {
    swift_beginAccess();
    if (MEMORY[0x1A85AC894](*(_QWORD *)(v10 + 16) & 0x3FLL) > (uint64_t)v9)
    {
      result = swift_isUniquelyReferenced_native();
      v11 = *v2;
      if (!(_DWORD)result)
      {
        if (!v11)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        v11 = sub_1A594A434();
        result = swift_release();
        *v2 = v11;
      }
      if (v11)
        return sub_1A594A3EC();
      __break(1u);
      goto LABEL_16;
    }
  }
  else if (v9 < 0xF)
  {
    return result;
  }
  return sub_1A584381C();
}

uint64_t sub_1A584381C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v1 = *v0;
  v2 = v0[1];
  if (*v0)
  {
    swift_beginAccess();
    v3 = *(_QWORD *)(v1 + 24) & 0x3FLL;
    v4 = *(_QWORD *)(v2 + 16);
    if (v3)
      goto LABEL_7;
  }
  else
  {
    v3 = 0;
    v4 = *(_QWORD *)(v2 + 16);
  }
  if (v4 < 0x10)
  {
    v5 = 0;
    goto LABEL_11;
  }
LABEL_7:
  v6 = MEMORY[0x1A85AC8B8](v4);
  if (v3 <= v6)
    v7 = v6;
  else
    v7 = v3;
  v5 = sub_1A58438BC(v2, v7, 0, v3);
LABEL_11:
  result = swift_release();
  *v0 = v5;
  return result;
}

uint64_t sub_1A58438BC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = MEMORY[0x1A85AC8B8](*(_QWORD *)(a1 + 16));
  v9 = 0;
  if ((a3 & 1) != 0)
    v10 = 0;
  else
    v10 = a2;
  if (v10 <= v8)
    v10 = v8;
  if (v10 <= a4)
    v11 = a4;
  else
    v11 = v10;
  if (v11 >= 5)
  {
    v9 = MEMORY[0x1A85AC8C4]();
    sub_1A5843940(a1, (_QWORD *)(v9 + 16), v9 + 32);
  }
  return v9;
}

uint64_t sub_1A5843940(uint64_t result, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = 0;
    v7 = result + 32;
    while (1)
    {
      v8 = *(_QWORD *)(v7 + 8 * v6);
      sub_1A594CE64();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      SectionSpecifier.Part.hash(into:)((uint64_t)v18, v8);
      result = sub_1A594CED0();
      v9 = 1 << *a2;
      v10 = __OFSUB__(v9, 1);
      v11 = v9 - 1;
      if (v10)
        break;
      v12 = v11 & result;
      v13 = sub_1A594A3D4();
      v15 = v14;
      v17 = v16;
      swift_bridgeObjectRelease();
      v18[0] = a2;
      v18[1] = a3;
      v18[2] = v12;
      v19 = v13;
      v20 = v15;
      v21 = v17;
      v22 = 0;
      while (v19)
        sub_1A594A410();
      result = sub_1A594A404();
      if (++v6 == v3)
        return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5843A50(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;

  sub_1A594CE64();
  SectionSpecifier.Part.hash(into:)((uint64_t)&v27, a1);
  result = sub_1A594CED0();
  v9 = 1 << *a4;
  v10 = __OFSUB__(v9, 1);
  v11 = v9 - 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    v12 = v11 & result;
    v13 = sub_1A594A3D4();
    *(_QWORD *)&v27 = a4;
    *((_QWORD *)&v27 + 1) = a5;
    *(_QWORD *)&v28 = v12;
    *((_QWORD *)&v28 + 1) = v13;
    *(_QWORD *)&v29 = v14;
    *((_QWORD *)&v29 + 1) = v15;
    v30 = 0;
    v16 = sub_1A594A3F8();
    v23 = v27;
    v24 = v28;
    v25 = v29;
    v26 = v30;
    if ((v17 & 1) == 0)
    {
      v18 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v19 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v18, a1);
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        do
        {
          sub_1A594A410();
          v31 = v23;
          v32 = v24;
          v33 = v25;
          v34 = v26;
          v16 = sub_1A594A3F8();
          if ((v20 & 1) != 0)
            break;
          v21 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v22 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v21, a1);
          swift_bridgeObjectRelease();
        }
        while ((v22 & 1) == 0);
      }
    }
    return v16;
  }
  return result;
}

unint64_t sub_1A5843BB8(unint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v25[72];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;

  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v7 = 0;
    v8 = a2 + 32;
    while (1)
    {
      v9 = *(_QWORD *)(v8 + 8 * v7);
      sub_1A594CE64();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      SectionSpecifier.Part.hash(into:)((uint64_t)v25, v9);
      result = sub_1A594CED0();
      v11 = 1 << *a3;
      v12 = __OFSUB__(v11, 1);
      v13 = v11 - 1;
      if (v12)
        break;
      v14 = v13 & result;
      v15 = sub_1A594A3D4();
      v17 = v16;
      v19 = v18;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v26 = a3;
      *((_QWORD *)&v26 + 1) = a4;
      *(_QWORD *)&v27 = v14;
      *((_QWORD *)&v27 + 1) = v15;
      *(_QWORD *)&v28 = v17;
      *((_QWORD *)&v28 + 1) = v19;
      v29 = 0;
      v33 = 0;
      v30 = v26;
      v31 = v27;
      v32 = v28;
      while (1)
      {
        result = sub_1A594A3F8();
        if ((v20 & 1) != 0)
          break;
        if (result >= v4)
        {
          __break(1u);
          goto LABEL_14;
        }
        v21 = *(_QWORD *)(v8 + 8 * result);
        v22 = *(_QWORD *)(v8 + 8 * v7);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v23 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v21, v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v23 & 1) != 0)
        {
          result = 0;
          *a1 = v7;
          return result;
        }
        sub_1A594A410();
        v30 = v26;
        v31 = v27;
        v32 = v28;
        v33 = v29;
      }
      sub_1A594A404();
      if (++v7 == v4)
        goto LABEL_11;
    }
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    *a1 = v4;
    return 1;
  }
  return result;
}

uint64_t sub_1A5843D64(uint64_t result, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (result < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v3 = v2;
  v5 = result;
  v8 = v2[1];
  v6 = v2 + 1;
  v7 = v8;
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *v6 = v8;
  if ((_DWORD)isUniquelyReferenced_nonNull_native && (unint64_t)v5 <= *(_QWORD *)(v7 + 24) >> 1)
  {
    v10 = *v3;
    if (*v3)
      goto LABEL_5;
  }
  else
  {
    if (*(_QWORD *)(v7 + 16) <= v5)
      v15 = v5;
    else
      v15 = *(_QWORD *)(v7 + 16);
    sub_1A58282C4(isUniquelyReferenced_nonNull_native, v15, 0);
    v7 = *v6;
    v10 = *v3;
    if (*v3)
    {
LABEL_5:
      swift_beginAccess();
      v11 = *(_QWORD *)(v10 + 16) & 0x3FLL;
      v12 = MEMORY[0x1A85AC8B8](v5);
      v13 = v12;
      if ((a2 & 1) != 0)
      {
        v14 = v12;
        if (v11 >= v12)
          goto LABEL_20;
      }
      else
      {
        swift_beginAccess();
        v14 = *(_QWORD *)(v10 + 24) & 0x3FLL;
        if (v11 >= v13)
          goto LABEL_20;
      }
LABEL_16:
      if (v14 <= v13)
        v17 = v13;
      else
        v17 = v14;
      goto LABEL_30;
    }
  }
  v16 = MEMORY[0x1A85AC8B8](v5);
  v13 = v16;
  v11 = 0;
  if ((a2 & 1) != 0)
    v14 = v16;
  else
    v14 = 0;
  if (v16 > 0)
    goto LABEL_16;
LABEL_20:
  if (v14 <= v13)
    v18 = v13;
  else
    v18 = v14;
  result = MEMORY[0x1A85AC8B8](*(_QWORD *)(v7 + 16));
  if (result <= v18)
    v19 = v18;
  else
    v19 = result;
  if (v19 < v11)
  {
    if (v14 <= v19)
      v17 = v19;
    else
      v17 = v14;
LABEL_30:
    v20 = sub_1A58438BC(v7, v17, 0, v14);
    result = swift_release();
    *v3 = v20;
    return result;
  }
  if (!v10 || (result = swift_isUniquelyReferenced_native(), (_DWORD)result))
  {
    v21 = *v3;
    if (*v3)
      goto LABEL_35;
LABEL_39:
    if (!v14)
      return result;
    __break(1u);
    goto LABEL_41;
  }
  result = *v3;
  if (!*v3)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  v21 = sub_1A594A434();
  result = swift_release();
  *v3 = v21;
  if (!v21)
    goto LABEL_39;
LABEL_35:
  result = swift_beginAccess();
  if ((*(_QWORD *)(v21 + 24) & 0x3FLL) != v14)
    *(_QWORD *)(v21 + 24) = *(_QWORD *)(v21 + 24) & 0xFFFFFFFFFFFFFFC0 | v14 & 0x3F;
  return result;
}

uint64_t sub_1A5843F44(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;
  char v29[72];

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A688);
  result = sub_1A594C6E4();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    sub_1A594CE64();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    SectionSpecifier.Part.hash(into:)((uint64_t)v29, v18);
    result = sub_1A594CED0();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A58441B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
  {
LABEL_8:
    v7 = 0;
    return v7 & 1;
  }
  if (v2 && a1 != a2)
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = *(_QWORD *)(a1 + 40);
    v5 = *(_QWORD *)(a1 + 48);
    v6 = *(unsigned __int8 *)(a1 + 56);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5846DA4(v4, v5, v6);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v3) & 1) != 0)
      __asm { BR              X8 }
    swift_bridgeObjectRelease();
    sub_1A5846DBC(v4, v5, v6);
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v7 = 1;
  return v7 & 1;
}

uint64_t sub_1A5844508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v5 = *(_QWORD *)(a4 + 16);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = a4 + 32;
  swift_retain();
  swift_retain();
  swift_retain();
  result = swift_retain();
  v9 = 0;
  v10 = 0;
  while (v10 == v5)
  {
    v11 = 0;
    v12 = 0;
    v10 = v5;
    if (v6 == v9)
      goto LABEL_16;
LABEL_8:
    if (v6 == v9)
    {
      __break(1u);
LABEL_20:
      __break(1u);
      return result;
    }
    v12 = *(_QWORD *)(a2 + 8 * v9 + 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v11)
      goto LABEL_16;
    if (!v12)
      goto LABEL_14;
    v13 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v11);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    ++v9;
    if ((v13 & 1) == 0)
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return 0;
    }
  }
  if (v10 >= v5)
    goto LABEL_20;
  v11 = *(_QWORD *)(v7 + 8 * v10);
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v6 != v9)
  {
    ++v10;
    goto LABEL_8;
  }
  if (v11)
  {
LABEL_14:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_17;
  }
  v12 = 0;
LABEL_16:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (v12)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

unint64_t sub_1A58446AC(int64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(v2[1] + 16);
  v5 = *v2;
  if (!*v2)
  {
    if (v4)
      return sub_1A58448E8(a1);
    goto LABEL_15;
  }
  swift_beginAccess();
  if ((*(_QWORD *)(v5 + 16) & 0x3FLL) == (*(_QWORD *)(v5 + 24) & 0x3FLL))
  {
    if (!v4)
      goto LABEL_15;
  }
  else if (v4 <= sub_1A594A428())
  {
LABEL_15:
    v10 = sub_1A58448E8(a1);
    sub_1A584381C();
    return v10;
  }
  result = swift_isUniquelyReferenced_native();
  v8 = *v2;
  if (!(_DWORD)result)
  {
    if (!v8)
      goto LABEL_20;
    v8 = sub_1A594A434();
    result = swift_release();
    *v2 = v8;
  }
  if (v8)
  {
    swift_retain();
    result = sub_1A5844F94(a2, (_QWORD *)(v8 + 16), v8 + 32, (uint64_t)v2);
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (a1 + 1 >= a1)
    {
      v9 = v2[1];
      swift_retain();
      sub_1A5845160(a1, a1 + 1, v9, (_QWORD *)(v8 + 16), v8 + 32);
      swift_release();
      swift_release();
      return sub_1A58448E8(a1);
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1A584481C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1A584D428(v5);
    v5 = result;
  }
  v7 = *(_QWORD *)(v5 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    v8 = v7 - 1;
    v9 = v5 + 48 * a1;
    v10 = *(_OWORD *)(v9 + 32);
    v9 += 32;
    v11 = *(_BYTE *)(v9 + 16);
    v12 = *(_QWORD *)(v9 + 24);
    v13 = *(_BYTE *)(v9 + 32);
    v14 = *(_QWORD *)(v9 + 40);
    result = (uint64_t)memmove((void *)v9, (const void *)(v9 + 48), 48 * (v7 - 1 - a1));
    *(_QWORD *)(v5 + 16) = v8;
    *v2 = v5;
    *(_OWORD *)a2 = v10;
    *(_BYTE *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 24) = v12;
    *(_BYTE *)(a2 + 32) = v13;
    *(_QWORD *)(a2 + 40) = v14;
  }
  return result;
}

uint64_t sub_1A58448E8(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1A584D414(v3);
    v3 = result;
  }
  v5 = *(_QWORD *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    v6 = v5 - 1;
    v7 = v3 + 8 * a1;
    v8 = *(_QWORD *)(v7 + 32);
    memmove((void *)(v7 + 32), (const void *)(v7 + 40), 8 * (v5 - 1 - a1));
    *(_QWORD *)(v3 + 16) = v6;
    *v1 = v3;
    return v8;
  }
  return result;
}

unint64_t sub_1A5844968(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  unint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  __int128 v17;

  v4 = sub_1A58434C0(a1, *v2, v2[1]);
  if ((v5 & 1) != 0)
    return v4;
  sub_1A584748C(*a2, a2[1], a2[2], a2[3], a2[4], a2[5]);
  v7 = v2[2];
  v6 = v2 + 2;
  result = sub_1A5844A54(v4, *(_QWORD *)(v7 + 16) - 1);
  v9 = *v6;
  if (*(_QWORD *)(*v6 + 16))
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (unint64_t)sub_1A584D428(v9);
      v9 = result;
    }
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v11 = v10 - 1;
      v12 = v9 + 48 * v11;
      v13 = *(_BYTE *)(v12 + 48);
      v14 = *(_QWORD *)(v12 + 56);
      v15 = *(_BYTE *)(v12 + 64);
      v16 = *(_QWORD *)(v12 + 72);
      v17 = *(_OWORD *)(v12 + 32);
      *(_QWORD *)(v9 + 16) = v11;
      *v6 = v9;
      *(_OWORD *)a2 = v17;
      *((_BYTE *)a2 + 16) = v13;
      a2[3] = v14;
      *((_BYTE *)a2 + 32) = v15;
      a2[5] = v16;
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A5844A54(unint64_t result, unint64_t a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  if (result != a2)
  {
    v3 = result;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v4 = *v2;
      v5 = *(_QWORD *)(*v2 + 16);
      if (v5 > result)
      {
        if (v5 > a2)
        {
          v7 = v4 + 32 + 48 * result;
          v8 = *(_BYTE *)(v7 + 16);
          v28 = *(_QWORD *)(v7 + 24);
          v27 = *(_BYTE *)(v7 + 32);
          v9 = *(_QWORD *)(v7 + 40);
          v10 = v4 + 32 + 48 * a2;
          v11 = *(_QWORD *)v10;
          v12 = *(_QWORD *)(v10 + 8);
          v13 = *(_BYTE *)(v10 + 16);
          v30 = *(_QWORD *)(v10 + 24);
          v29 = *(_BYTE *)(v10 + 32);
          v14 = *(_QWORD *)(v10 + 40);
          v25 = *(_QWORD *)(v7 + 8);
          v26 = *(_QWORD *)v7;
          sub_1A5846DA4(*(_QWORD *)v7, v25, v8);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A5846DA4(v11, v12, v13);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (unint64_t)sub_1A584D428(v4);
            v4 = result;
          }
          if (*(_QWORD *)(v4 + 16) > v3)
          {
            v23 = v8;
            v24 = v2;
            v15 = v4 + 32 + 48 * v3;
            v17 = *(_QWORD *)v15;
            v16 = *(_QWORD *)(v15 + 8);
            *(_QWORD *)v15 = v11;
            *(_QWORD *)(v15 + 8) = v12;
            v18 = *(_BYTE *)(v15 + 16);
            *(_BYTE *)(v15 + 16) = v13;
            *(_QWORD *)(v15 + 24) = v30;
            *(_BYTE *)(v15 + 32) = v29;
            *(_QWORD *)(v15 + 40) = v14;
            swift_retain();
            sub_1A5846DBC(v17, v16, v18);
            swift_release();
            result = swift_bridgeObjectRelease();
            if (*(_QWORD *)(v4 + 16) > a2)
            {
              v19 = v4 + 32 + 48 * a2;
              v20 = *(_QWORD *)v19;
              v21 = *(_QWORD *)(v19 + 8);
              *(_QWORD *)v19 = v26;
              *(_QWORD *)(v19 + 8) = v25;
              v22 = *(_BYTE *)(v19 + 16);
              *(_BYTE *)(v19 + 16) = v23;
              *(_QWORD *)(v19 + 24) = v28;
              *(_BYTE *)(v19 + 32) = v27;
              *(_QWORD *)(v19 + 40) = v9;
              swift_retain();
              sub_1A5846DBC(v20, v21, v22);
              swift_release();
              result = swift_bridgeObjectRelease();
              *v24 = v4;
              return result;
            }
LABEL_15:
            __break(1u);
            return result;
          }
LABEL_14:
          __break(1u);
          goto LABEL_15;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1A5844C5C(uint64_t result, int64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  int64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  unint64_t v37;
  __int128 v38[2];
  __int128 v39;
  uint64_t v40;
  _BYTE v41[24];

  v6 = v5;
  v9 = *a5;
  v8 = a5[1];
  v10 = a5[2];
  v11 = a5[3];
  v13 = a5[4];
  v12 = a5[5];
  if ((a3 & 1) != 0)
  {
    if (v12)
    {
      v20 = result;
      sub_1A5846DA4(*a5, a5[1], a5[2]);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A58436B0(v20);
      v23 = *(_QWORD *)(v6 + 16);
      v21 = (uint64_t *)(v6 + 16);
      v22 = v23;
      sub_1A5846DA4(v9, v8, v10);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v21 = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A58282FC(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v22 = *v21;
      }
      v26 = *(_QWORD *)(v22 + 16);
      v25 = *(_QWORD *)(v22 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1A58282FC((char *)(v25 > 1), v26 + 1, 1);
        v22 = *v21;
      }
      *(_QWORD *)(v22 + 16) = v26 + 1;
      v27 = v22 + 48 * v26;
      *(_QWORD *)(v27 + 32) = v9;
      *(_QWORD *)(v27 + 40) = v8;
      *(_BYTE *)(v27 + 48) = v10;
      *(_QWORD *)(v27 + 56) = v11;
      *(_BYTE *)(v27 + 64) = v13 & 1;
      *(_QWORD *)(v27 + 72) = v12;
      sub_1A5846DBC(v9, v8, v10);
      result = swift_bridgeObjectRelease();
      *v21 = v22;
    }
  }
  else if (v12)
  {
    v37 = a2;
    v14 = (uint64_t *)(v5 + 16);
    v15 = *(_QWORD *)(v5 + 16);
    sub_1A58474B8(v9, v8, v10, v11, v13, v12);
    sub_1A5846DA4(v9, v8, v10);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v16 = swift_isUniquelyReferenced_nonNull_native();
    *v14 = v15;
    if ((v16 & 1) == 0)
    {
      sub_1A58282FC(0, *(_QWORD *)(v15 + 16) + 1, 1);
      v15 = *v14;
    }
    v18 = *(_QWORD *)(v15 + 16);
    v17 = *(_QWORD *)(v15 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_1A58282FC((char *)(v17 > 1), v18 + 1, 1);
      v15 = *v14;
    }
    *(_QWORD *)(v15 + 16) = v18 + 1;
    v19 = v15 + 48 * v18;
    *(_QWORD *)(v19 + 32) = v9;
    *(_QWORD *)(v19 + 40) = v8;
    *(_BYTE *)(v19 + 48) = v10;
    *(_QWORD *)(v19 + 56) = v11;
    *(_BYTE *)(v19 + 64) = v13 & 1;
    *(_QWORD *)(v19 + 72) = v12;
    *v14 = v15;
    sub_1A5844A54(v37, *(_QWORD *)(v15 + 16) - 1);
    sub_1A5846DBC(v9, v8, v10);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v28 = (uint64_t *)(v5 + 16);
    if (*(_QWORD *)(*(_QWORD *)(v6 + 16) + 16) > a2)
    {
      v29 = a2;
      sub_1A584481C(a2, (uint64_t)v38);
      sub_1A5846F74(v38, (uint64_t)v41);
      v40 = *((_QWORD *)&v39 + 1);
      v30 = *v28;
      sub_1A5847010((uint64_t)v41);
      sub_1A54FCA28((uint64_t)&v40);
      v31 = swift_isUniquelyReferenced_nonNull_native();
      *v28 = v30;
      if ((v31 & 1) == 0)
      {
        sub_1A58282FC(0, *(_QWORD *)(v30 + 16) + 1, 1);
        v30 = *v28;
      }
      v33 = *(_QWORD *)(v30 + 16);
      v32 = *(_QWORD *)(v30 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1A58282FC((char *)(v32 > 1), v33 + 1, 1);
        v30 = *v28;
      }
      *(_QWORD *)(v30 + 16) = v33 + 1;
      v34 = (_OWORD *)(v30 + 48 * v33);
      v35 = v38[0];
      v36 = v39;
      v34[3] = v38[1];
      v34[4] = v36;
      v34[2] = v35;
      sub_1A5846F8C((uint64_t)v41);
      sub_1A54F81BC((uint64_t)&v40);
      *v28 = v30;
      a2 = v29;
    }
    sub_1A58446AC(a2, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A5844F94(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24[72];
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v6 = a1;
  *(_QWORD *)&v25 = a2;
  *((_QWORD *)&v25 + 1) = a3;
  v26 = a1;
  v27 = sub_1A594A3D4();
  v28 = v7;
  v29 = v8;
  v30 = 0;
  sub_1A594A410();
  v9 = v27;
  if (!v27)
    return sub_1A594A3EC();
  v10 = v30;
  v11 = v28;
  v12 = v29;
  v13 = v26;
  v14 = sub_1A594A3E0();
  v15 = v25;
  v16 = v14;
  while (1)
  {
    v31 = v15;
    v32 = v13;
    v33 = v9;
    v34 = v11;
    v35 = v12;
    v36 = v10 & 1;
    result = sub_1A594A3F8();
    if ((v18 & 1) != 0)
      break;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      break;
    }
    v19 = *(_QWORD *)(a4 + 8);
    if (result >= *(_QWORD *)(v19 + 16))
      goto LABEL_16;
    v20 = *(_QWORD *)(v19 + 8 * result + 32);
    sub_1A594CE64();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    SectionSpecifier.Part.hash(into:)((uint64_t)v24, v20);
    v21 = sub_1A594CED0();
    result = swift_bridgeObjectRelease();
    v22 = 1 << *a2;
    if (__OFSUB__(v22, 1))
      goto LABEL_17;
    v23 = (v22 - 1) & v21;
    if (v6 >= v16)
    {
      if (v23 < v16)
        goto LABEL_3;
    }
    else if (v23 >= v16)
    {
      goto LABEL_13;
    }
    if (v6 >= v23)
    {
LABEL_13:
      sub_1A594A3F8();
      sub_1A594A3EC();
      v6 = v13;
    }
LABEL_3:
    sub_1A594A410();
    v15 = v25;
    v13 = v26;
    v9 = v27;
    v11 = v28;
    v12 = v29;
    v10 = v30;
    if (!v27)
      return sub_1A594A3EC();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5845160(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  char v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  char v61;

  v6 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (v6 >= 1)
  {
    v10 = result;
    v11 = *(_QWORD *)(a3 + 16);
    v12 = v11 - v6;
    if ((uint64_t)v11 < v6)
      ++v12;
    if (result < v12 >> 1)
    {
      result = MEMORY[0x1A85AC894](*a4 & 0x3FLL);
      if (result / 3 > v10)
      {
        if (v10 < 0)
        {
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        if (v11 < v10)
        {
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        if (v10)
        {
          swift_retain();
          v13 = 0;
          while (1)
          {
            v14 = *(_QWORD *)(a3 + 32 + 8 * v13);
            sub_1A594CE64();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            SectionSpecifier.Part.hash(into:)((uint64_t)&v52, v14);
            result = sub_1A594CED0();
            v15 = 1 << *a4;
            v16 = __OFSUB__(v15, 1);
            v17 = v15 - 1;
            if (v16)
              break;
            v18 = v17 & result;
            v19 = sub_1A594A3D4();
            *(_QWORD *)&v52 = a4;
            *((_QWORD *)&v52 + 1) = a5;
            v53 = v18;
            *(_QWORD *)&v54 = v19;
            *((_QWORD *)&v54 + 1) = v20;
            v55 = v21;
            v56 = 0;
            if (v19)
            {
              v22 = 0;
              v23 = a4;
              v24 = a5;
              do
              {
                *(_QWORD *)&v57 = v23;
                *((_QWORD *)&v57 + 1) = v24;
                v58 = v18;
                *(_QWORD *)&v59 = v19;
                *((_QWORD *)&v59 + 1) = v20;
                v60 = v21;
                v61 = v22 & 1;
                v25 = sub_1A594A3F8();
                if ((v26 & 1) == 0 && v25 == v13)
                  break;
                sub_1A594A410();
                v24 = *((_QWORD *)&v52 + 1);
                v23 = (_QWORD *)v52;
                v18 = v53;
                v20 = *((_QWORD *)&v54 + 1);
                v19 = v54;
                v21 = v55;
                v22 = v56;
              }
              while ((_QWORD)v54);
            }
            result = v13 + v6;
            if (__OFADD__(v13, v6))
              goto LABEL_56;
            ++v13;
            sub_1A594A404();
            swift_bridgeObjectRelease();
            if (v13 == v10)
            {
              result = swift_release();
              goto LABEL_20;
            }
          }
          __break(1u);
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
        goto LABEL_20;
      }
      *(_QWORD *)&v57 = a4;
      *((_QWORD *)&v57 + 1) = a5;
      v58 = 0;
      *(_QWORD *)&v59 = sub_1A594A3D4();
      *((_QWORD *)&v59 + 1) = v32;
      v60 = v33;
      v61 = 0;
      v52 = v57;
      v53 = 0;
      v54 = v59;
      v55 = v60;
      v56 = v61;
      v34 = sub_1A594A3F8();
      if ((v35 & 1) != 0 || v34 >= v10)
      {
LABEL_32:
        result = sub_1A594A410();
LABEL_20:
        v27 = a4[1];
        if (__OFSUB__(v27 >> 6, v6))
        {
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        v28 = 1 << *a4;
        v16 = __OFSUB__(v28, 1);
        v29 = v28 - 1;
        if (v16)
        {
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        v30 = (v29 & (((v27 >> 6) - v6) >> 63)) + (v27 >> 6) - v6;
        if (v30 < v29)
          v29 = 0;
        a4[1] = a4[1] & 0x3FLL | ((v30 - v29) << 6);
        return result;
      }
      if (!__OFADD__(v34, v6))
      {
        sub_1A594A404();
        goto LABEL_32;
      }
      __break(1u);
LABEL_38:
      *(_QWORD *)&v57 = a4;
      *((_QWORD *)&v57 + 1) = a5;
      v58 = 0;
      *(_QWORD *)&v59 = sub_1A594A3D4();
      *((_QWORD *)&v59 + 1) = v36;
      v60 = v37;
      v61 = 0;
      v52 = v57;
      v53 = 0;
      v54 = v59;
      v55 = v60;
      v56 = v61;
      v38 = sub_1A594A3F8();
      if ((v39 & 1) == 0 && v38 >= v5)
      {
        v16 = __OFSUB__(v38, v6);
        result = v38 - v6;
        if (v16)
        {
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        sub_1A594A404();
      }
      return sub_1A594A410();
    }
    v5 = a2;
    v31 = v11 - a2;
    if (__OFSUB__(v11, a2))
    {
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    result = MEMORY[0x1A85AC894](*a4 & 0x3FLL);
    if (v31 >= result / 3)
      goto LABEL_38;
    if ((uint64_t)v11 < v5)
    {
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    if (v5 < 0)
    {
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (v11 != v5)
    {
      if (v11 <= v5)
      {
LABEL_68:
        __break(1u);
        return result;
      }
      swift_retain();
      while (1)
      {
        v40 = *(_QWORD *)(a3 + 32 + 8 * v5);
        sub_1A594CE64();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        SectionSpecifier.Part.hash(into:)((uint64_t)&v52, v40);
        result = sub_1A594CED0();
        v41 = 1 << *a4;
        v16 = __OFSUB__(v41, 1);
        v42 = v41 - 1;
        if (v16)
          goto LABEL_58;
        v43 = v42 & result;
        v44 = sub_1A594A3D4();
        *(_QWORD *)&v52 = a4;
        *((_QWORD *)&v52 + 1) = a5;
        v53 = v43;
        *(_QWORD *)&v54 = v44;
        *((_QWORD *)&v54 + 1) = v45;
        v55 = v46;
        v56 = 0;
        if (v44)
        {
          v47 = 0;
          v48 = a4;
          v49 = a5;
          do
          {
            *(_QWORD *)&v57 = v48;
            *((_QWORD *)&v57 + 1) = v49;
            v58 = v43;
            *(_QWORD *)&v59 = v44;
            *((_QWORD *)&v59 + 1) = v45;
            v60 = v46;
            v61 = v47 & 1;
            v50 = sub_1A594A3F8();
            if ((v51 & 1) == 0 && v50 == v5)
              break;
            sub_1A594A410();
            v49 = *((_QWORD *)&v52 + 1);
            v48 = (_QWORD *)v52;
            v43 = v53;
            v45 = *((_QWORD *)&v54 + 1);
            v44 = v54;
            v46 = v55;
            v47 = v56;
          }
          while ((_QWORD)v54);
        }
        result = v5 - v6;
        if (__OFSUB__(v5, v6))
          goto LABEL_59;
        ++v5;
        sub_1A594A404();
        swift_bridgeObjectRelease();
        if (v5 == v11)
          return swift_release();
      }
    }
  }
  return result;
}

_QWORD *sub_1A58455EC(_QWORD *a1)
{
  return sub_1A5826D40(0, a1[2], 0, a1);
}

uint64_t sub_1A5845600(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(void))((char *)sub_1A584561C + 4 * byte_1A59DB61C[a3]))();
}

uint64_t sub_1A584561C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return sub_1A594CD38();
}

uint64_t sub_1A5845728(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = (unint64_t *)result;
  v7 = 0;
  v8 = 0;
  v9 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a3 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
LABEL_5:
  while (v12)
  {
    v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v16 = v15 | (v8 << 6);
LABEL_21:
    v20 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v16);
    v21 = *(_QWORD *)(a4 + 16);
    if (v21 >= *(_QWORD *)(v20 + 16))
    {
LABEL_4:
      *(unint64_t *)((char *)v6 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v7++, 1))
        goto LABEL_29;
    }
    else if (v21)
    {
      v22 = (uint64_t *)(v20 + 32);
      v23 = (uint64_t *)(a4 + 32);
      while (1)
      {
        v24 = *v23++;
        result = v24;
        v25 = *v22++;
        if (v25 != result)
          goto LABEL_4;
        if (!--v21)
          goto LABEL_5;
      }
    }
  }
  v17 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v17 >= v13)
      goto LABEL_27;
    v18 = *(_QWORD *)(v9 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_27;
      v18 = *(_QWORD *)(v9 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v13)
          goto LABEL_27;
        v18 = *(_QWORD *)(v9 + 8 * v8);
        if (!v18)
        {
          v19 = v17 + 3;
          if (v19 >= v13)
          {
LABEL_27:
            swift_retain();
            return sub_1A5843F44(v6, a2, v7, a3);
          }
          v18 = *(_QWORD *)(v9 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v8 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_30;
              if (v8 >= v13)
                goto LABEL_27;
              v18 = *(_QWORD *)(v9 + 8 * v8);
              ++v19;
              if (v18)
                goto LABEL_20;
            }
          }
          v8 = v19;
        }
      }
    }
LABEL_20:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v8 << 6);
    goto LABEL_21;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A58458D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v10 = sub_1A5845728((uint64_t)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v10 = sub_1A5845728((uint64_t)v11, v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x1A85B1964](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_1A5845A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t i;
  uint64_t v15;
  BOOL v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  int64_t v43;
  uint64_t v44;

  v5 = a5;
  v8 = a2;
  v40 = a2 + 56;
  v10 = 1 << *(_BYTE *)(a2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a2 + 56);
  v43 = (unint64_t)(v10 + 63) >> 6;
  v44 = a4 + 32;
  v41 = a3 + 32;
  v42 = (_QWORD *)(a3 + 16);
  v39 = a5 + 32;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  i = 0;
  v38 = v5;
  do
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (i << 6);
    }
    else
    {
      v19 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_52;
      if (v19 >= v43)
        goto LABEL_49;
      v20 = *(_QWORD *)(v40 + 8 * v19);
      ++i;
      if (!v20)
      {
        i = v19 + 1;
        if (v19 + 1 >= v43)
          goto LABEL_49;
        v20 = *(_QWORD *)(v40 + 8 * i);
        if (!v20)
        {
          i = v19 + 2;
          if (v19 + 2 >= v43)
            goto LABEL_49;
          v20 = *(_QWORD *)(v40 + 8 * i);
          if (!v20)
          {
            i = v19 + 3;
            if (v19 + 3 >= v43)
              goto LABEL_49;
            v20 = *(_QWORD *)(v40 + 8 * i);
            if (!v20)
            {
              v21 = v19 + 4;
              if (v21 >= v43)
                goto LABEL_49;
              v20 = *(_QWORD *)(v40 + 8 * v21);
              for (i = v21; !v20; ++v21)
              {
                i = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_53;
                if (i >= v43)
                  goto LABEL_49;
                v20 = *(_QWORD *)(v40 + 8 * i);
              }
            }
          }
        }
      }
      v12 = (v20 - 1) & v20;
      v18 = __clz(__rbit64(v20)) + (i << 6);
    }
    v22 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v18);
    v15 = *(_QWORD *)(a4 + 16);
    if (a3)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      v23 = sub_1A5843A50(v22, v44, v15, v42, v41);
      v25 = v24;
      result = swift_release();
      if ((v25 & 1) != 0)
      {
        v15 = 0;
        goto LABEL_5;
      }
      if ((v23 & 0x8000000000000000) != 0)
      {
LABEL_48:
        __break(1u);
LABEL_49:
        swift_release();
        return a1;
      }
    }
    else
    {
      if (!v15)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_5;
      }
      v26 = v8;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v27 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v28 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v27, v22);
      result = swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
      {
        v23 = 0;
      }
      else
      {
        if (v15 == 1)
          goto LABEL_38;
        v29 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v30 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v29, v22);
        result = swift_bridgeObjectRelease();
        if ((v30 & 1) != 0)
        {
          v23 = 1;
        }
        else
        {
          if (v15 == 2)
            goto LABEL_38;
          v31 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v32 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v31, v22);
          result = swift_bridgeObjectRelease();
          if ((v32 & 1) != 0)
          {
            v23 = 2;
          }
          else
          {
            if (v15 == 3)
              goto LABEL_38;
            v33 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v34 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v33, v22);
            result = swift_bridgeObjectRelease();
            if ((v34 & 1) == 0)
            {
              v35 = 0;
              while (v15 - 4 != v35)
              {
                v36 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                v37 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v36, v22);
                result = swift_bridgeObjectRelease();
                ++v35;
                if ((v37 & 1) != 0)
                {
                  v23 = v35 + 3;
                  v8 = v26;
                  v5 = v38;
                  if ((v23 & 0x8000000000000000) == 0)
                    goto LABEL_42;
                  goto LABEL_48;
                }
              }
LABEL_38:
              v15 = 0;
              v8 = v26;
              v5 = v38;
              goto LABEL_5;
            }
            v23 = 3;
          }
        }
      }
      v8 = v26;
      v5 = v38;
    }
LABEL_42:
    if (v23 >= *(_QWORD *)(v5 + 16))
      goto LABEL_51;
    v15 = *(_QWORD *)(v39 + 48 * v23 + 32);
LABEL_5:
    result = swift_bridgeObjectRelease();
    v16 = __OFADD__(a1, v15);
    a1 += v15;
  }
  while (!v16);
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_1A5845E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v7 = v6;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (!v8)
    return v9;
  v34 = MEMORY[0x1E0DEE9D8];
  sub_1A5828318(0, v8, 0);
  v9 = v34;
  result = sub_1A558A0B8(a1);
  v13 = result;
  v15 = v14 & 1;
  while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v12)
      goto LABEL_14;
    v29 = v15;
    v30 = v12;
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v13);
    swift_bridgeObjectRetain_n();
    v17 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v18 = v7;
    v31 = v9;
    v19 = sub_1A58458D0(v17, v16);
    swift_bridgeObjectRelease();
    v33 = v19;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5827178(&v32, v16);
    swift_bridgeObjectRelease();
    v20 = v33;
    swift_retain();
    swift_retain();
    swift_retain();
    v21 = sub_1A5845A94(0, v20, a4, a5, a6);
    swift_bridgeObjectRelease();
    swift_release();
    v9 = v31;
    swift_release();
    swift_release();
    v34 = v31;
    v23 = *(_QWORD *)(v31 + 16);
    v22 = *(_QWORD *)(v31 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_1A5828318((char *)(v22 > 1), v23 + 1, 1);
      v9 = v34;
    }
    *(_QWORD *)(v9 + 16) = v23 + 1;
    v24 = v9 + 16 * v23;
    *(_QWORD *)(v24 + 32) = v20;
    *(_QWORD *)(v24 + 40) = v21;
    result = sub_1A558A15C(v13, v30, v29 & 1, a1);
    v13 = result;
    v15 = v25 & 1;
    --v8;
    v7 = v18;
    if (!v8)
    {
      sub_1A5529B00(result, v12, v15);
      return v9;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1A5846080(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t result;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = MEMORY[0x1E0DEE9D8];
  v20 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  sub_1A5843D64(v3, 0);
  sub_1A58282FC(0, v3, 0);
  v4 = v2;
  if (!v3)
    return 0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v5 = (_QWORD *)(a1 + 80);
  while (1)
  {
    v6 = v4;
    v7 = *(v5 - 6);
    v8 = *(v5 - 5);
    v9 = *(v5 - 4);
    v10 = *((_BYTE *)v5 - 24);
    v18 = *(v5 - 2);
    v19 = v3;
    v11 = *v5;
    v17 = *((_BYTE *)v5 - 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5846DA4(v8, v9, v10);
    result = sub_1A58434C0(v7, 0, v20);
    if ((v13 & 1) == 0)
      break;
    sub_1A58436B0(v7);
    sub_1A5846DA4(v8, v9, v10);
    v15 = *(_QWORD *)(v4 + 16);
    v14 = *(_QWORD *)(v4 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v15 >= v14 >> 1)
      sub_1A58282FC((char *)(v14 > 1), v15 + 1, 1);
    *(_QWORD *)(v6 + 16) = v15 + 1;
    v16 = v6 + 48 * v15;
    *(_QWORD *)(v16 + 32) = v8;
    *(_QWORD *)(v16 + 40) = v9;
    *(_BYTE *)(v16 + 48) = v10;
    *(_QWORD *)(v16 + 56) = v18;
    *(_BYTE *)(v16 + 64) = v17;
    *(_QWORD *)(v16 + 72) = v11;
    sub_1A5846DBC(v8, v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 += 7;
    v3 = v19 - 1;
    v4 = v6;
    if (v19 == 1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5846240(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(__int128 *__return_ptr, uint64_t, __int128 *))
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[32];
  uint64_t v43;

  v6 = *(_QWORD *)(a3 + 16);
  v36 = MEMORY[0x1E0DEE9D8];
  sub_1A58282E0(0, v6, 0);
  v7 = v36;
  if (v6)
  {
    v8 = *(_QWORD *)(a2 + 16);
    v9 = (uint64_t *)(a2 + 32);
    swift_retain();
    swift_retain();
    result = swift_retain();
    v11 = (_QWORD *)(a3 + 72);
    while (v8)
    {
      v12 = *v9;
      v29 = v7;
      v14 = *(v11 - 4);
      v15 = *(v11 - 2);
      v16 = *((unsigned __int8 *)v11 - 8);
      v17 = *v11;
      v18 = *((_BYTE *)v11 - 24);
      *(_QWORD *)&v37 = *(v11 - 5);
      v13 = v37;
      *((_QWORD *)&v37 + 1) = v14;
      v38 = v18;
      v39 = v15;
      v40 = v16;
      v41 = v17;
      sub_1A5846F74(&v37, (uint64_t)v42);
      v43 = v41;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5846DA4(v13, v14, v18);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      a4(&v30, v12, &v37);
      v7 = v29;
      v28 = v30;
      v19 = v32;
      v20 = v33;
      v26 = v34;
      v27 = v31;
      v25 = v35;
      swift_bridgeObjectRelease();
      sub_1A5846F8C((uint64_t)v42);
      result = sub_1A54F81BC((uint64_t)&v43);
      v36 = v29;
      v22 = *(_QWORD *)(v29 + 16);
      v21 = *(_QWORD *)(v29 + 24);
      if (v22 >= v21 >> 1)
      {
        result = (uint64_t)sub_1A58282E0((_QWORD *)(v21 > 1), v22 + 1, 1);
        v7 = v36;
      }
      *(_QWORD *)(v7 + 16) = v22 + 1;
      v23 = v7 + 56 * v22;
      *(_OWORD *)(v23 + 32) = v28;
      *(_QWORD *)(v23 + 48) = v27;
      *(_QWORD *)(v23 + 56) = v19;
      *(_BYTE *)(v23 + 64) = v20;
      *(_QWORD *)(v23 + 72) = v26;
      *(_QWORD *)(v23 + 80) = v25;
      --v8;
      v11 += 6;
      ++v9;
      if (!--v6)
        goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_9:
    swift_release();
    swift_release();
    swift_release();
    return v7;
  }
  return result;
}

uint64_t sub_1A5846454(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t result;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;

  v2 = MEMORY[0x1E0DEE9D8];
  v20 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  sub_1A5843D64(v3, 0);
  sub_1A58282A8(0, v3, 0);
  if (!v3)
    return 0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v4 = (_QWORD *)(a1 + 80);
  while (1)
  {
    v5 = v2;
    v18 = v3;
    v6 = *(v4 - 6);
    v7 = *(v4 - 5);
    v8 = *(v4 - 4);
    v9 = *(v4 - 3);
    v10 = *((_BYTE *)v4 - 16);
    v11 = *v4;
    v17 = *(v4 - 1);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5846DA4(v8, v9, v10);
    result = sub_1A58434C0(v6, 0, v20);
    if ((v13 & 1) == 0)
      break;
    sub_1A58436B0(v6);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5846DA4(v8, v9, v10);
    v14 = *(_QWORD *)(v2 + 16);
    v15 = *(_QWORD *)(v5 + 24);
    v19 = v14 + 1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v14 >= v15 >> 1)
      sub_1A58282A8((char *)(v15 > 1), v19, 1);
    v4 += 7;
    *(_QWORD *)(v5 + 16) = v19;
    v16 = v5 + 48 * v14;
    *(_QWORD *)(v16 + 32) = v7;
    *(_QWORD *)(v16 + 40) = v8;
    *(_QWORD *)(v16 + 48) = v9;
    *(_BYTE *)(v16 + 56) = v10;
    *(_QWORD *)(v16 + 64) = v17;
    *(_QWORD *)(v16 + 72) = v11;
    swift_bridgeObjectRelease();
    sub_1A5846DBC(v8, v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = v18 - 1;
    v2 = v5;
    if (v18 == 1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5846620(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = 0;
  for (i = a1 + 40; ; i += 48)
  {
    v4 = *(_QWORD *)(i - 8);
    v5 = *(_QWORD *)i;
    v6 = *(_QWORD *)(i + 8);
    v7 = *(_BYTE *)(i + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5846DA4(v5, v6, v7);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v8 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v4);
    swift_bridgeObjectRelease();
    sub_1A5846DBC(v5, v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      break;
    if (v1 == ++v2)
      return 0;
  }
  return v2;
}

uint64_t sub_1A5846708(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t *v35;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v7 = *(_QWORD *)(a3 + 16);
  if (!v7)
    return result;
  v9 = a3 + 32;
  v53 = a6 + 32;
  v51 = (_QWORD *)(a5 + 16);
  v49 = a7 + 32;
  v50 = a5 + 32;
  swift_retain();
  swift_retain();
  v10 = v9;
  swift_retain();
  v11 = 0;
  v12 = 0;
  v55 = a6;
  v56 = v9;
  while (1)
  {
    v13 = v10 + 48 * v12;
    v14 = *(_QWORD *)v13;
    v15 = *(_QWORD *)(v13 + 8);
    v16 = *(_QWORD *)(v13 + 16);
    v17 = *(unsigned __int8 *)(v13 + 24);
    if (!v11)
      break;
    v18 = *(_QWORD *)(v11 + 16);
    if (v18 >= *(_QWORD *)(v14 + 16))
      goto LABEL_14;
    if (v18)
    {
      if (*(_QWORD *)(v14 + 32) != *(_QWORD *)(v11 + 32))
        goto LABEL_14;
      v19 = v18 - 1;
      if (v19)
      {
        v20 = 0;
        while (*(_QWORD *)(v14 + 40 + 8 * v20) == *(_QWORD *)(v11 + 8 * v20 + 40))
        {
          if (v19 == ++v20)
            goto LABEL_4;
        }
LABEL_14:
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5846DA4(v15, v16, v17);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
        if (v17 != 2)
          goto LABEL_15;
        goto LABEL_19;
      }
    }
LABEL_4:
    if (++v12 == v7)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5846DA4(v15, v16, v17);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v17 != 2)
  {
LABEL_15:
    if (v17 != 5 || v16 | v15)
    {
      swift_bridgeObjectRelease();
      sub_1A5846DBC(v15, v16, v17);
      swift_bridgeObjectRelease();
      v11 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      v11 = v14;
    }
    goto LABEL_4;
  }
LABEL_19:
  if (sub_1A594B49C() == v15 && v16 == v21)
    goto LABEL_21;
  v22 = sub_1A594CD38();
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0 || !*(_QWORD *)(v14 + 16))
    goto LABEL_46;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v23 = sub_1A58419C0(1, v14);
  v24 = *(_QWORD *)(v55 + 16);
  if (a5)
  {
    swift_retain();
    v46 = sub_1A5843A50(v23, v53, v24, v51, v50);
    v26 = v25;
    result = swift_release();
    if ((v26 & 1) != 0)
      goto LABEL_21;
    v27 = v46;
    v28 = a7;
    if (v46 < 0)
      goto LABEL_65;
  }
  else
  {
    if (!v24)
      goto LABEL_21;
    v29 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v30 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v29);
    result = swift_bridgeObjectRelease();
    if ((v30 & 1) != 0)
    {
      v27 = 0;
    }
    else
    {
      if (v24 == 1)
        goto LABEL_21;
      v37 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v38 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v37);
      result = swift_bridgeObjectRelease();
      if ((v38 & 1) != 0)
      {
        v27 = 1;
      }
      else
      {
        if (v24 == 2)
          goto LABEL_21;
        v39 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v40 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v39);
        result = swift_bridgeObjectRelease();
        if ((v40 & 1) != 0)
        {
          v27 = 2;
        }
        else
        {
          if (v24 == 3)
            goto LABEL_21;
          v41 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v42 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v41);
          result = swift_bridgeObjectRelease();
          if ((v42 & 1) == 0)
          {
            v43 = 0;
            v47 = v24 - 4;
            while (v47 != v43)
            {
              v44 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v45 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v44);
              result = swift_bridgeObjectRelease();
              ++v43;
              if ((v45 & 1) != 0)
              {
                v27 = v43 + 3;
                v28 = a7;
                if (((v43 + 3) & 0x8000000000000000) == 0)
                  goto LABEL_32;
                goto LABEL_65;
              }
            }
            goto LABEL_21;
          }
          v27 = 3;
        }
      }
    }
    v28 = a7;
  }
LABEL_32:
  if (v27 < *(_QWORD *)(v28 + 16))
  {
    v31 = v49 + 48 * v27;
    v32 = *(_QWORD *)(v31 + 8);
    v33 = *(_QWORD *)(v31 + 16);
    v34 = *(unsigned __int8 *)(v31 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5846DA4(v32, v33, v34);
    swift_bridgeObjectRelease();
    if (v34 == 4)
    {
      v35 = Media.Subtype.alternative.unsafeMutableAddressor();
      if (*v35 == v32 && v33 == v35[1])
      {
        swift_bridgeObjectRelease();
        sub_1A5846DBC(v32, v33, 4u);
        swift_bridgeObjectRelease();
      }
      else
      {
        v48 = sub_1A594CD38();
        swift_bridgeObjectRelease();
        sub_1A5846DBC(v32, v33, 4u);
        swift_bridgeObjectRelease();
        if ((v48 & 1) == 0)
          goto LABEL_46;
      }
      LOBYTE(v57) = 0;
      sub_1A5840AD8(v14, a5, v55, a7, &v57);
      if ((v57 & 1) != 0)
      {
LABEL_47:
        swift_bridgeObjectRelease();
        sub_1A5846DBC(v15, v16, 2u);
        swift_bridgeObjectRelease();
        v11 = 0;
        v10 = v56;
        goto LABEL_4;
      }
LABEL_46:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5827178(&v57, v14);
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
    swift_bridgeObjectRelease();
    sub_1A5846DBC(v32, v33, v34);
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_1A5846CB0(uint64_t a1)
{
  sub_1A5524178(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_BYTE *)(a1 + 176));
  return a1;
}

void sub_1A5846D18(uint64_t a1, const void *a2)
{
  uint64_t v2;

  sub_1A583EFCC(a1, a2, *(char ***)(v2 + 16));
}

uint64_t _s18SinglePartWithSizeVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for BodyStructure.SinglePartWithSize()
{
  return &type metadata for BodyStructure.SinglePartWithSize;
}

ValueMetadata *type metadata accessor for BodyStructure.BodyPartListLimits()
{
  return &type metadata for BodyStructure.BodyPartListLimits;
}

uint64_t sub_1A5846DA4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 4u)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t sub_1A5846DBC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 4u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A5846DD4(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(result + 16) >= v2)
    v3 = *(_QWORD *)(a2 + 16);
  else
    v3 = *(_QWORD *)(result + 16);
  v4 = (_BYTE *)(a2 + 56);
  while (v3)
  {
    if (*v4 == 4)
    {
      v5 = *((_QWORD *)v4 - 2);
      v6 = *((_QWORD *)v4 - 1);
      v7 = v5 == 0x64656E676973 && v6 == 0xE600000000000000;
      if (v7 || (sub_1A594CD38() & 1) != 0 || v5 == 0x6574707972636E65 && v6 == 0xE900000000000064)
        return 1;
      result = sub_1A594CD38();
      if ((result & 1) != 0)
        return 1;
    }
    --v3;
    v4 += 48;
    if (!--v2)
      return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5846EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int *v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v7;
  uint64_t v8;

  v8 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (unsigned int *)(a1 + 40);
    do
    {
      v4 = *((_QWORD *)v3 - 1);
      v5 = *v3;
      v3 += 4;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5827308((uint64_t)&v7, v4, v5);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v8;
  }
  return a2;
}

uint64_t sub_1A5846F74(__int128 *a1, uint64_t a2)
{
  __int128 v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 16) = *((_BYTE *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_1A5846F8C(uint64_t a1)
{
  sub_1A5846DBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_1A5846FBC()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5846FF0(uint64_t a1, const void *a2)
{
  return sub_1A584105C(a1, a2);
}

unint64_t sub_1A5847008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;

  return sub_1A5841810(a1, a2, v3, a3);
}

uint64_t sub_1A5847010(uint64_t a1)
{
  sub_1A5846DA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_1A5847040(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  uint64_t v9;
  BOOL v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  int64_t v47;

  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v44 = (unint64_t)(v4 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8 = 0;
  do
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v47 = v8;
      v12 = v11 | (v8 << 6);
    }
    else
    {
      v10 = __OFADD__(v8, 1);
      v13 = v8 + 1;
      if (v10)
        goto LABEL_55;
      if (v13 >= v44)
      {
LABEL_51:
        swift_release();
        return a1;
      }
      v14 = *(_QWORD *)(v43 + 8 * v13);
      if (!v14)
      {
        v15 = v13 + 1;
        if (v13 + 1 >= v44)
          goto LABEL_51;
        v14 = *(_QWORD *)(v43 + 8 * v15);
        if (v14)
          goto LABEL_18;
        v15 = v13 + 2;
        if (v13 + 2 >= v44)
          goto LABEL_51;
        v14 = *(_QWORD *)(v43 + 8 * v15);
        if (v14)
          goto LABEL_18;
        v15 = v13 + 3;
        if (v13 + 3 >= v44)
          goto LABEL_51;
        v14 = *(_QWORD *)(v43 + 8 * v15);
        if (v14)
        {
LABEL_18:
          v13 = v15;
        }
        else
        {
          v32 = v13 + 4;
          if (v13 + 4 >= v44)
            goto LABEL_51;
          v14 = *(_QWORD *)(v43 + 8 * v32);
          for (v13 += 4; !v14; ++v32)
          {
            v13 = v32 + 1;
            if (__OFADD__(v32, 1))
              goto LABEL_56;
            if (v13 >= v44)
              goto LABEL_51;
            v14 = *(_QWORD *)(v43 + 8 * v13);
          }
        }
      }
      v6 = (v14 - 1) & v14;
      v47 = v13;
      v12 = __clz(__rbit64(v14)) + (v13 << 6);
    }
    v16 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v12);
    swift_beginAccess();
    v17 = a3[2];
    v18 = a3[3];
    v19 = a3[4];
    v20 = *(_QWORD *)(v18 + 16);
    if (v17)
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      v21 = sub_1A5843A50(v16, v18 + 32, v20, (_QWORD *)(v17 + 16), v17 + 32);
      v23 = v22;
      result = swift_release();
      if ((v23 & 1) != 0)
        goto LABEL_5;
      if ((v21 & 0x8000000000000000) != 0)
        goto LABEL_53;
    }
    else
    {
      if (!v20)
      {
        swift_bridgeObjectRetain_n();
LABEL_5:
        v8 = v47;
        swift_endAccess();
        v9 = 0;
        goto LABEL_6;
      }
      swift_bridgeObjectRetain_n();
      v24 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v25 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v24, v16);
      result = swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
      {
        v21 = 0;
      }
      else
      {
        if (v20 == 1)
          goto LABEL_5;
        v26 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v27 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v26, v16);
        result = swift_bridgeObjectRelease();
        if ((v27 & 1) != 0)
        {
          v21 = 1;
        }
        else
        {
          if (v20 == 2)
            goto LABEL_5;
          v28 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v29 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v28, v16);
          result = swift_bridgeObjectRelease();
          if ((v29 & 1) != 0)
          {
            v21 = 2;
          }
          else
          {
            if (v20 == 3)
              goto LABEL_5;
            v30 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v31 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v30, v16);
            result = swift_bridgeObjectRelease();
            if ((v31 & 1) == 0)
            {
              v33 = 0;
              v34 = v20 - 4;
              while (v34 != v33)
              {
                v35 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                v36 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v35, v16);
                result = swift_bridgeObjectRelease();
                ++v33;
                if ((v36 & 1) != 0)
                {
                  v21 = v33 + 3;
                  if (v33 + 3 < 0)
                    goto LABEL_53;
                  goto LABEL_46;
                }
              }
              goto LABEL_5;
            }
            v21 = 3;
          }
        }
      }
    }
LABEL_46:
    if (v21 >= *(_QWORD *)(v19 + 16))
      goto LABEL_54;
    v37 = v19 + 48 * v21;
    v39 = *(_QWORD *)(v37 + 32);
    v38 = *(_QWORD *)(v37 + 40);
    v40 = *(_BYTE *)(v37 + 48);
    v9 = *(_QWORD *)(v37 + 56);
    v41 = *(_BYTE *)(v37 + 64);
    v42 = *(_QWORD *)(v37 + 72);
    swift_endAccess();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5846DA4(v39, v38, v40);
    swift_bridgeObjectRelease();
    if ((v41 & 1) != 0)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      v9 = sub_1A5847040(0, v42, a3);
      swift_release();
      sub_1A5846DBC(v39, v38, v40);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A5846DBC(v39, v38, v40);
    }
    v8 = v47;
LABEL_6:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v10 = __OFADD__(a1, v9);
    a1 += v9;
  }
  while (!v10);
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
  return result;
}

uint64_t sub_1A584748C(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    sub_1A5846DBC(result, a2, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A58474B8(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    sub_1A5846DA4(result, a2, a3);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t *sub_1A58474E4(uint64_t *a1)
{
  sub_1A584748C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  return a1;
}

uint64_t _s7ElementVwxx(uint64_t a1)
{
  sub_1A5846DBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t _s7ElementVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1A5846DA4(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s7ElementVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1A5846DA4(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_1A5846DBC(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7ElementVwta(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_1A5846DBC(v5, v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s7ElementVMa()
{
  return &_s7ElementVN;
}

ValueMetadata *_s4TreeV14PartCollectionVMa()
{
  return &_s4TreeV14PartCollectionVN;
}

ValueMetadata *_s4TreeVMa()
{
  return &_s4TreeVN;
}

uint64_t _s4TreeV4NodeVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1A5846DBC(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return swift_bridgeObjectRelease();
}

uint64_t _s4TreeV4NodeVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5846DA4(v4, v5, v6);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s4TreeV4NodeVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A5846DA4(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v9 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1A5846DBC(v7, v8, v9);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4TreeV4NodeVwta(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1A5846DBC(v5, v6, v7);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s4TreeV4NodeVMa()
{
  return &_s4TreeV4NodeVN;
}

uint64_t _s4TreeV9MediaKindOwxx(uint64_t a1)
{
  return sub_1A5846DBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s4TreeV9MediaKindOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A5846DA4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s4TreeV9MediaKindOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A5846DA4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A5846DBC(v6, v7, v8);
  return a1;
}

uint64_t _s4TreeV9MediaKindOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A5846DBC(v4, v5, v6);
  return a1;
}

uint64_t _s4TreeV9MediaKindOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s4TreeV9MediaKindOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 251;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A58479FC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 4u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_1A5847A14(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *_s4TreeV9MediaKindOMa()
{
  return &_s4TreeV9MediaKindON;
}

uint64_t RemoteMailbox.path.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t RemoteMailbox.path.setter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  unint64_t v5;
  uint64_t result;

  v3 = a2;
  v5 = HIDWORD(a2);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)v2 = a1;
  *(_DWORD *)(v2 + 8) = v3;
  *(_BYTE *)(v2 + 12) = v5;
  return result;
}

double (*RemoteMailbox.path.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RemoteMailbox.attributes.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 14);
}

uint64_t RemoteMailbox.attributes.setter(uint64_t result)
{
  uint64_t v1;

  *(_WORD *)(v1 + 14) = result;
  return result;
}

double (*RemoteMailbox.attributes.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RemoteMailbox.specialUse.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t RemoteMailbox.specialUse.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

double (*RemoteMailbox.specialUse.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 RemoteMailbox.status.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __n128 result;
  __int128 v6;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_BYTE *)(v1 + 64);
  v4 = *(_BYTE *)(v1 + 65);
  result = *(__n128 *)(v1 + 24);
  v6 = *(_OWORD *)(v1 + 40);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v3;
  *(_BYTE *)(a1 + 41) = v4;
  return result;
}

uint64_t RemoteMailbox.status.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A55032A0(a1, v1 + 24, &qword_1EE7983C8);
}

double (*RemoteMailbox.status.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 RemoteMailbox.init(path:attributes:specialUse:status:)@<Q0>(uint64_t a1@<X0>, unint64_t a2@<X1>, __int16 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v8;
  unint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  __n128 result;
  __int128 v16;
  _OWORD v17[2];
  uint64_t v18;
  char v19;
  char v20;

  v8 = a2;
  v11 = HIDWORD(a2);
  sub_1A55032A0(a5, (uint64_t)v17, &qword_1EE7983C8);
  v12 = v18;
  v13 = v19;
  v14 = v20;
  result = (__n128)v17[0];
  v16 = v17[1];
  *(_QWORD *)a6 = a1;
  *(_DWORD *)(a6 + 8) = v8;
  *(_BYTE *)(a6 + 12) = v11;
  *(_WORD *)(a6 + 14) = a3;
  *(_BYTE *)(a6 + 16) = a4;
  *(__n128 *)(a6 + 24) = result;
  *(_OWORD *)(a6 + 40) = v16;
  *(_QWORD *)(a6 + 56) = v12;
  *(_BYTE *)(a6 + 64) = v13;
  *(_BYTE *)(a6 + 65) = v14;
  return result;
}

uint64_t RemoteMailbox.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A54FCA28((uint64_t)v0);
  return v1;
}

uint64_t sub_1A5847C1C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  __int16 v8;
  _OWORD v9[4];
  __int16 v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v8 = *(_WORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v10 = *(_WORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return _s16IMAP2Persistence13RemoteMailboxV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t RemoteMailbox.Status.messageCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t RemoteMailbox.Status.messageCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*RemoteMailbox.Status.messageCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RemoteMailbox.Status.nextUID.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8);
}

uint64_t RemoteMailbox.Status.nextUID.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  return result;
}

double (*RemoteMailbox.Status.nextUID.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RemoteMailbox.Status.uidValidity.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 12);
}

uint64_t RemoteMailbox.Status.uidValidity.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 12) = result;
  return result;
}

double (*RemoteMailbox.Status.uidValidity.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RemoteMailbox.Status.unreadMessagesCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t RemoteMailbox.Status.unreadMessagesCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

double (*RemoteMailbox.Status.unreadMessagesCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RemoteMailbox.Status.highestModificationSequence.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t RemoteMailbox.Status.highestModificationSequence.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

double (*RemoteMailbox.Status.highestModificationSequence.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RemoteMailbox.Status.init(messageCount:nextUID:uidValidity:unreadMessagesCount:highestModificationSequence:)@<X0>(uint64_t result@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_DWORD *)(a8 + 8) = a2;
  *(_DWORD *)(a8 + 12) = a3;
  *(_QWORD *)(a8 + 16) = a4;
  *(_BYTE *)(a8 + 24) = a5 & 1;
  *(_QWORD *)(a8 + 32) = a6;
  *(_BYTE *)(a8 + 40) = a7 & 1;
  return result;
}

BOOL sub_1A5847D54(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(__int128 *)((char *)a1 + 25);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(__int128 *)((char *)a2 + 25);
  return _s16IMAP2Persistence13RemoteMailboxV6StatusV23__derived_struct_equalsySbAE_AEtFZ_0((_BOOL8)&v5, (uint64_t)&v7);
}

__n128 RemoteMailbox.withStatus(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  int v8;
  char v9;
  __int16 v10;
  char v11;
  __n128 result;
  __n128 v13;
  __int128 v14;
  _OWORD v15[2];
  uint64_t v16;
  char v17;
  char v18;

  sub_1A55032A0(a1, (uint64_t)v15, &qword_1EE7983C8);
  v13 = (__n128)v15[1];
  v14 = v15[0];
  v4 = v16;
  v5 = v17;
  v6 = v18;
  v7 = *(_QWORD *)v2;
  v8 = *(_DWORD *)(v2 + 8);
  v9 = *(_BYTE *)(v2 + 12);
  v10 = *(_WORD *)(v2 + 14);
  v11 = *(_BYTE *)(v2 + 16);
  sub_1A54FCA28(v2);
  *(_QWORD *)a2 = v7;
  *(_DWORD *)(a2 + 8) = v8;
  *(_BYTE *)(a2 + 12) = v9;
  *(_WORD *)(a2 + 14) = v10;
  *(_BYTE *)(a2 + 16) = v11;
  *(_OWORD *)(a2 + 24) = v14;
  result = v13;
  *(__n128 *)(a2 + 40) = v13;
  *(_QWORD *)(a2 + 56) = v4;
  *(_BYTE *)(a2 + 64) = v5;
  *(_BYTE *)(a2 + 65) = v6;
  return result;
}

uint64_t RemoteMailbox.Status.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  _BYTE v14[8];
  _BYTE v15[16];
  uint64_t v16;
  char v17;
  unsigned int v18;
  char v19;
  unsigned int v20;
  char v21;

  sub_1A55032A0(a1, (uint64_t)v15, &qword_1EE799F00);
  result = sub_1A55032A0((uint64_t)v15, (uint64_t)&v16, &qword_1EE799F00);
  if ((v17 & 1) != 0
    || (v5 = v16,
        sub_1A55032A0(a1 + 28, (uint64_t)v14, &qword_1EE795BF8),
        result = sub_1A55032A0((uint64_t)v14, (uint64_t)&v18, &qword_1EE795BF8),
        (v19 & 1) != 0)
    || (v6 = v18,
        sub_1A55032A0(a1 + 36, (uint64_t)&v13, &qword_1EE7968D8),
        result = sub_1A55032A0((uint64_t)&v13, (uint64_t)&v20, &qword_1EE7968D8),
        (v21 & 1) != 0))
  {
    v5 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 1;
  }
  else
  {
    v12 = 0;
    v8 = *(_QWORD *)(a1 + 48);
    v9 = *(unsigned __int8 *)(a1 + 56);
    v10 = *(_QWORD *)(a1 + 80);
    v11 = *(_BYTE *)(a1 + 88);
    v7 = v6 | ((unint64_t)v20 << 32);
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 32) = v10;
  *(_BYTE *)(a2 + 40) = v11;
  *(_BYTE *)(a2 + 41) = v12;
  return result;
}

double RemoteMailbox.init(attributes:path:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char *v7;
  double result;

  if (*(_QWORD *)(a1 + 16))
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v7 = (char *)&loc_1A5847FF8
       + *((int *)qword_1A5848138
         + _s16IMAP2Persistence13RemoteMailboxV9AttributeO3nioAESg12NIOIMAPCore20D4InfoVADV_tcfC_0());
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)a4 = a2;
  *(_DWORD *)(a4 + 8) = a3;
  *(_BYTE *)(a4 + 12) = BYTE4(a3);
  *(_WORD *)(a4 + 14) = 0;
  *(_BYTE *)(a4 + 16) = 7;
  result = 0.0;
  *(_OWORD *)(a4 + 24) = 0u;
  *(_OWORD *)(a4 + 40) = 0u;
  *(_OWORD *)(a4 + 49) = 0u;
  *(_BYTE *)(a4 + 65) = 1;
  return result;
}

BOOL RemoteMailbox.isInbox.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned int *)(v0 + 8);
  v3 = MailboxName.inbox.unsafeMutableAddressor();
  return (*((unsigned int *)v3 + 2) | ((unint64_t)*((unsigned int *)v3 + 2) << 32)) == (v2 | (v2 << 32))
      && sub_1A578ECF4(*v3, v1);
}

BOOL _s16IMAP2Persistence13RemoteMailboxV6StatusV23__derived_struct_equalsySbAE_AEtFZ_0(_BOOL8 result, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)result != *(_QWORD *)a2
    || *(_DWORD *)(a2 + 8) != *(_DWORD *)(result + 8)
    || *(_DWORD *)(result + 12) != *(_DWORD *)(a2 + 12))
  {
    return 0;
  }
  v2 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(result + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  if ((*(_BYTE *)(result + 40) & 1) != 0)
    return (*(_BYTE *)(a2 + 40) & 1) != 0;
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
    return 0;
  v3 = *(_QWORD *)(result + 32);
  v4 = *(_QWORD *)(a2 + 32);
  if (((v4 | v3) & 0x8000000000000000) == 0)
    return v4 == v3;
  __break(1u);
  return result;
}

uint64_t _s16IMAP2Persistence13RemoteMailboxV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD v19[3];
  char v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];
  char v24;
  uint64_t v25;
  char v26;

  if ((static MailboxPath.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(_QWORD *)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32)) & 1) == 0|| *(unsigned __int16 *)(a1 + 14) != *(unsigned __int16 *)(a2 + 14))
  {
    return 0;
  }
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a2 + 16);
  if (v4 != 7)
  {
    if (v5 == 7)
      return 0;
    sub_1A585350C(v4);
    if ((v6 & 1) == 0)
      return 0;
LABEL_8:
    if ((*(_BYTE *)(a1 + 65) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 65) & 1) == 0)
        return 0;
    }
    else
    {
      if ((*(_BYTE *)(a2 + 65) & 1) != 0)
        return 0;
      v7 = *(_QWORD *)(a1 + 32);
      v8 = *(_QWORD *)(a1 + 40);
      v9 = *(_QWORD *)(a1 + 48);
      v10 = *(_QWORD *)(a1 + 56);
      v11 = *(_BYTE *)(a1 + 64);
      v12 = *(_QWORD *)(a2 + 24);
      v13 = *(_QWORD *)(a2 + 32);
      v14 = *(_QWORD *)(a2 + 40);
      v15 = *(_QWORD *)(a2 + 48);
      v16 = *(_QWORD *)(a2 + 56);
      v17 = *(_BYTE *)(a2 + 64);
      v19[0] = *(_QWORD *)(a1 + 24);
      v19[1] = v7;
      v19[2] = v8;
      v20 = v9 & 1;
      v21 = v10;
      v22 = v11 & 1;
      v23[0] = v12;
      v23[1] = v13;
      v23[2] = v14;
      v24 = v15 & 1;
      v25 = v16;
      v26 = v17 & 1;
      if (!_s16IMAP2Persistence13RemoteMailboxV6StatusV23__derived_struct_equalsySbAE_AEtFZ_0((_BOOL8)v19, (uint64_t)v23))return 0;
    }
    return 1;
  }
  if (v5 == 7)
    goto LABEL_8;
  return 0;
}

uint64_t initializeWithCopy for RemoteMailbox(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_WORD *)(a1 + 14) = *(_WORD *)(a2 + 14);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 50) = *(_OWORD *)(a2 + 50);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for RemoteMailbox(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_WORD *)(a1 + 14) = *(_WORD *)(a2 + 14);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 24);
  v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 50) = *(_OWORD *)(a2 + 50);
  *(_OWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 24) = v4;
  return a1;
}

__n128 __swift_memcpy66_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for RemoteMailbox(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_WORD *)(a1 + 14) = *(_WORD *)(a2 + 14);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 50) = *(_OWORD *)(a2 + 50);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteMailbox(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 66))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteMailbox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 66) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 66) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteMailbox()
{
  return &type metadata for RemoteMailbox;
}

__n128 __swift_memcpy41_8_3(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for RemoteMailbox.Status(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RemoteMailbox.Status(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 41) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RemoteMailbox.Status()
{
  return &type metadata for RemoteMailbox.Status;
}

void sub_1A5848610(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5848650()
{
  sub_1A594B1D8();
  return swift_bridgeObjectRelease();
}

uint64_t RemoteMailbox.Attributes.init(_:)(char a1)
{
  return word_1A59DBB94[a1];
}

void *static RemoteMailbox.Attribute.allCases.getter()
{
  return &unk_1E4E774D0;
}

uint64_t RemoteMailbox.Attribute.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A584879C + 4 * byte_1A59DB8A9[a1]))(0x7463656C65536F6ELL, 0xE800000000000000);
}

uint64_t sub_1A584879C()
{
  return 0x64656B72616DLL;
}

uint64_t sub_1A58487B0()
{
  return 0x64656B72616D6E75;
}

uint64_t sub_1A58487C4()
{
  return 0x74736978456E6F6ELL;
}

uint64_t sub_1A58487E4()
{
  return 0x697265666E496F6ELL;
}

uint64_t sub_1A5848804()
{
  return 0x6269726373627573;
}

uint64_t sub_1A5848820()
{
  return 0x65746F6D6572;
}

uint64_t sub_1A5848834()
{
  return 0x646C696843736168;
}

uint64_t sub_1A5848854()
{
  return 0x6968436F4E736168;
}

void sub_1A5848878(char *a1)
{
  sub_1A58536CC(*a1);
}

uint64_t sub_1A5848884@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s16IMAP2Persistence13RemoteMailboxV9AttributeO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1A58488B0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = RemoteMailbox.Attribute.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A58488D8()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  sub_1A5848610((uint64_t)v3, v1);
  return sub_1A594CED0();
}

void sub_1A584891C(uint64_t a1)
{
  char *v1;

  sub_1A5848610(a1, *v1);
}

uint64_t sub_1A5848924()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  sub_1A5848610((uint64_t)v3, v1);
  return sub_1A594CED0();
}

void sub_1A5848964(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4E774D0;
}

uint64_t RemoteMailbox.Attributes.rawValue.setter(uint64_t result)
{
  _WORD *v1;

  *v1 = result;
  return result;
}

double (*RemoteMailbox.Attributes.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

void *RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.noSelect;
}

uint64_t static RemoteMailbox.Attributes.noSelect.getter()
{
  return 1;
}

void *RemoteMailbox.Attributes.marked.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.marked;
}

uint64_t static RemoteMailbox.Attributes.marked.getter()
{
  return 2;
}

void *RemoteMailbox.Attributes.unmarked.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.unmarked;
}

uint64_t static RemoteMailbox.Attributes.unmarked.getter()
{
  return 4;
}

void *RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.nonExistent;
}

uint64_t static RemoteMailbox.Attributes.nonExistent.getter()
{
  return 8;
}

void *RemoteMailbox.Attributes.noInferiors.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.noInferiors;
}

uint64_t static RemoteMailbox.Attributes.noInferiors.getter()
{
  return 16;
}

void *RemoteMailbox.Attributes.subscribed.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.subscribed;
}

uint64_t static RemoteMailbox.Attributes.subscribed.getter()
{
  return 32;
}

void *RemoteMailbox.Attributes.remote.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.remote;
}

uint64_t static RemoteMailbox.Attributes.remote.getter()
{
  return 64;
}

void *RemoteMailbox.Attributes.hasChildren.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.hasChildren;
}

uint64_t static RemoteMailbox.Attributes.hasChildren.getter()
{
  return 128;
}

void *RemoteMailbox.Attributes.hasNoChildren.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.hasNoChildren;
}

uint64_t static RemoteMailbox.Attributes.hasNoChildren.getter()
{
  return 256;
}

_WORD *sub_1A5848A48@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1A5848A54(_WORD *a1@<X8>)
{
  *a1 = 0;
}

_WORD *sub_1A5848A5C@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  _WORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_WORD *sub_1A5848A70@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  _WORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_WORD *sub_1A5848A84@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  _WORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1A5848A98(_WORD *a1, unsigned __int16 *a2)
{
  _WORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = (unsigned __int16)*v2;
  if ((v4 & v3) != v3)
    *v2 = v4 | v3;
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int16 *sub_1A5848AC8@<X0>(unsigned __int16 *result@<X0>, uint64_t a2@<X8>)
{
  _WORD *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = (unsigned __int16)*v2;
  v5 = v4 & v3;
  if ((v4 & v3) != 0)
    *v2 = v4 & ~(_WORD)v3;
  *(_WORD *)a2 = v5;
  *(_BYTE *)(a2 + 2) = v5 == 0;
  return result;
}

unsigned __int16 *sub_1A5848AF4@<X0>(unsigned __int16 *result@<X0>, uint64_t a2@<X8>)
{
  _WORD *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = (unsigned __int16)*v2;
  *v2 = v4 | v3;
  v5 = v4 & v3;
  *(_WORD *)a2 = v5;
  *(_BYTE *)(a2 + 2) = v5 == 0;
  return result;
}

_WORD *sub_1A5848B18(_WORD *result)
{
  _WORD *v1;

  *v1 |= *result;
  return result;
}

_WORD *sub_1A5848B2C(_WORD *result)
{
  _WORD *v1;

  *v1 &= *result;
  return result;
}

_WORD *sub_1A5848B40(_WORD *result)
{
  _WORD *v1;

  *v1 ^= *result;
  return result;
}

_WORD *sub_1A5848B54@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  _WORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A5848B68(unsigned __int16 *a1)
{
  unsigned __int16 *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A5848B7C(_WORD *a1)
{
  _WORD *v1;

  return (unsigned __int16)(*v1 & *a1) == 0;
}

BOOL sub_1A5848B90(unsigned __int16 *a1)
{
  unsigned __int16 *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A5848BA4()
{
  _WORD *v0;

  return *v0 == 0;
}

_WORD *sub_1A5848BB4(_WORD *result)
{
  _WORD *v1;

  *v1 &= ~*result;
  return result;
}

_WORD *sub_1A5848BC8@<X0>(_WORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = *result;
  *(_BYTE *)(a2 + 2) = 0;
  return result;
}

void sub_1A5848BD8(_WORD *a1@<X8>)
{
  _WORD *v1;

  *a1 = *v1;
}

uint64_t sub_1A5848BE4@<X0>(uint64_t a1@<X0>, _WORD *a2@<X8>)
{
  __int16 v3;
  uint64_t result;

  v3 = sub_1A5849A24(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void RemoteMailbox.Attributes.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t AssociatedTypeWitness;
  double v8;
  _BYTE v9[16];

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v4 + 16))(v6, a1, a2, v8);
  sub_1A594B730();
  swift_getAssociatedConformanceWitness();
  sub_1A594C3C0();
  __asm { BR              X10 }
}

void sub_1A5848D50()
{
  JUMPOUT(0x1A5848D24);
}

void sub_1A5848D5C()
{
  JUMPOUT(0x1A5848D24);
}

void sub_1A5848D68()
{
  JUMPOUT(0x1A5848D24);
}

void sub_1A5848D74()
{
  JUMPOUT(0x1A5848D24);
}

void sub_1A5848D80()
{
  JUMPOUT(0x1A5848D24);
}

void sub_1A5848D8C()
{
  JUMPOUT(0x1A5848D24);
}

void sub_1A5848D98()
{
  JUMPOUT(0x1A5848D24);
}

uint64_t sub_1A5848DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v2);
  return v4;
}

uint64_t RemoteMailbox.Attributes.allAttributes.getter@<X0>(__int16 a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_WORD *)(result + 16) = a1;
  *a2 = &unk_1E4E774D0;
  a2[1] = sub_1A58496D8;
  a2[2] = result;
  return result;
}

void RemoteMailbox.Attributes.debugDescription.getter()
{
  sub_1A582828C(0, 0, 0);
  __asm { BR              X9 }
}

void sub_1A5849098()
{
  RemoteMailbox.Attributes.debugDescription.getter();
}

uint64_t _s16IMAP2Persistence13RemoteMailboxV9AttributeO3nioAESg12NIOIMAPCore20D4InfoVADV_tcfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v0 = sub_1A594B49C();
  v2 = v1;
  if (v0 == sub_1A594B49C() && v2 == v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return 0;
  }
  v5 = sub_1A594CD38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v8 = sub_1A594B49C();
  v10 = v9;
  if (v8 == sub_1A594B49C() && v10 == v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    v12 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v13 = sub_1A594B49C();
      v15 = v14;
      if (v13 == sub_1A594B49C() && v15 == v16)
      {
        swift_bridgeObjectRelease();
        v6 = 2;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v17 = sub_1A594CD38();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 2;
        }
        else
        {
          v18 = sub_1A594B49C();
          v20 = v19;
          if (v18 == sub_1A594B49C() && v20 == v21)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            return 3;
          }
          else
          {
            v22 = sub_1A594CD38();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v22 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 3;
            }
            else
            {
              v23 = sub_1A594B49C();
              v25 = v24;
              if (v23 == sub_1A594B49C() && v25 == v26)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                return 4;
              }
              else
              {
                v27 = sub_1A594CD38();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v27 & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 4;
                }
                else
                {
                  v28 = sub_1A594B49C();
                  v30 = v29;
                  if (v28 == sub_1A594B49C() && v30 == v31)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();
                    return 5;
                  }
                  else
                  {
                    v32 = sub_1A594CD38();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v32 & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 5;
                    }
                    else
                    {
                      v33 = sub_1A594B49C();
                      v35 = v34;
                      if (v33 == sub_1A594B49C() && v35 == v36)
                      {
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease_n();
                        return 6;
                      }
                      else
                      {
                        v37 = sub_1A594CD38();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if ((v37 & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 6;
                        }
                        else
                        {
                          v38 = sub_1A594B49C();
                          v40 = v39;
                          if (v38 == sub_1A594B49C() && v40 == v41)
                          {
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease_n();
                            return 7;
                          }
                          else
                          {
                            v42 = sub_1A594CD38();
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            if ((v42 & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 7;
                            }
                            else
                            {
                              v43 = sub_1A594B49C();
                              v45 = v44;
                              if (v43 == sub_1A594B49C() && v45 == v46)
                              {
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease_n();
                                return 8;
                              }
                              else
                              {
                                v47 = sub_1A594CD38();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                if ((v47 & 1) != 0)
                                  return 8;
                                else
                                  return 9;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return v6;
}

uint64_t _s16IMAP2Persistence13RemoteMailboxV9AttributeO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1A594CB28();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_1A58496C8()
{
  return swift_deallocObject();
}

BOOL sub_1A58496D8(char *a1)
{
  uint64_t v1;

  return (unsigned __int16)(word_1A59DBB94[*a1] & *(_WORD *)(v1 + 16)) != 0;
}

unint64_t sub_1A58496FC()
{
  unint64_t result;

  result = qword_1EE7AA8D8;
  if (!qword_1EE7AA8D8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for RemoteMailbox.Attribute, &type metadata for RemoteMailbox.Attribute);
    atomic_store(result, (unint64_t *)&qword_1EE7AA8D8);
  }
  return result;
}

uint64_t sub_1A5849740()
{
  return sub_1A54E2E30(&qword_1EE7AA8E0, &qword_1EE7AA8E8, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1A5849770()
{
  unint64_t result;

  result = qword_1EE7AA8F0;
  if (!qword_1EE7AA8F0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for RemoteMailbox.Attributes, &type metadata for RemoteMailbox.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EE7AA8F0);
  }
  return result;
}

unint64_t sub_1A58497B8()
{
  unint64_t result;

  result = qword_1EE7AA8F8;
  if (!qword_1EE7AA8F8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for RemoteMailbox.Attributes, &type metadata for RemoteMailbox.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EE7AA8F8);
  }
  return result;
}

unint64_t sub_1A5849800()
{
  unint64_t result;

  result = qword_1EE7AA900;
  if (!qword_1EE7AA900)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for RemoteMailbox.Attributes, &type metadata for RemoteMailbox.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EE7AA900);
  }
  return result;
}

unint64_t sub_1A5849848()
{
  unint64_t result;

  result = qword_1EE7AA908;
  if (!qword_1EE7AA908)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for RemoteMailbox.Attributes, &type metadata for RemoteMailbox.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EE7AA908);
  }
  return result;
}

uint64_t _s9AttributeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s9AttributeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1A5849968 + 4 * byte_1A59DB8CA[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1A584999C + 4 * byte_1A59DB8C5[v4]))();
}

uint64_t sub_1A584999C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58499A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58499ACLL);
  return result;
}

uint64_t sub_1A58499B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58499C0);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1A58499C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58499CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteMailbox.Attribute()
{
  return &type metadata for RemoteMailbox.Attribute;
}

ValueMetadata *type metadata accessor for RemoteMailbox.Attributes()
{
  return &type metadata for RemoteMailbox.Attributes;
}

uint64_t sub_1A58499F8()
{
  return sub_1A54E2E30(&qword_1EE79AA98, &qword_1EE79AAA8, MEMORY[0x1E0DECCA8]);
}

uint64_t sub_1A5849A24(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int16 *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (unsigned __int16 *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1A5849A60(char **a1)
{
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A584D43C((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  result = sub_1A584C334(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A5849AC8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  int v31;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = a1;
  v4 = a1[3];
  v37 = MEMORY[0x1E0DEE9D8];
  result = (uint64_t)sub_1A5828350(0, v4 & ~(v4 >> 63), 0);
  v6 = v3[4];
  v7 = v3[3] + v6;
  if (v3[2] < v7)
    v7 = v3[2];
  v34 = v3;
  v35 = v3[4];
  v36 = v7;
  if (v4 < 0)
    goto LABEL_21;
  swift_retain();
  if (!v4)
  {
    v8 = v6;
    goto LABEL_17;
  }
  while (v6 != v36)
  {
LABEL_8:
    v8 = v6 + 1;
    v35 = v6 + 1;
    v9 = &v3[4 * v6];
    v10 = v9[7];
    v11 = *((_DWORD *)v9 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRetain_n();
    sub_1A584B39C(v10, v11, a2, a3);
    v13 = v12;
    v31 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v37 + 16);
    v15 = *(_QWORD *)(v37 + 24);
    if (v16 >= v15 >> 1)
      sub_1A5828350((char *)(v15 > 1), v16 + 1, 1);
    *(_QWORD *)(v37 + 16) = v16 + 1;
    v17 = v37 + 32 * v16;
    *(_QWORD *)(v17 + 32) = v10;
    *(_DWORD *)(v17 + 40) = v11;
    *(_QWORD *)(v17 + 48) = v13;
    *(_DWORD *)(v17 + 56) = v31;
    ++v6;
    if (!--v4)
    {
      while (1)
      {
LABEL_17:
        if (v8 == v36)
        {
          v30 = sub_1A584EDF0();
          v18 = v34;
          if ((v30 & 1) == 0)
          {
            swift_release();
            return v37;
          }
        }
        else
        {
          v18 = v34;
        }
        v19 = v35;
        v8 = ++v35;
        v20 = &v18[4 * v19];
        v21 = v20[7];
        v22 = *((_DWORD *)v20 + 16);
        swift_bridgeObjectRetain_n();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A584B39C(v21, v22, a2, a3);
        v24 = v23;
        v26 = v25;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = *(_QWORD *)(v37 + 16);
        v27 = *(_QWORD *)(v37 + 24);
        if (v28 >= v27 >> 1)
          sub_1A5828350((char *)(v27 > 1), v28 + 1, 1);
        *(_QWORD *)(v37 + 16) = v28 + 1;
        v29 = v37 + 32 * v28;
        *(_QWORD *)(v29 + 32) = v21;
        *(_DWORD *)(v29 + 40) = v22;
        *(_QWORD *)(v29 + 48) = v24;
        *(_DWORD *)(v29 + 56) = v26;
      }
    }
  }
  result = sub_1A584EDF0();
  if ((result & 1) != 0)
  {
    v3 = v34;
    v6 = v35;
    goto LABEL_8;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

BOOL sub_1A5849D38(uint64_t a1, uint64_t a2)
{
  return _s16IMAP2Persistence14RenameRollbackO4StepO21__derived_enum_equalsySbAE_AEtFZ_0(*(_QWORD *)a1, *(_DWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_DWORD *)(a1 + 24), *(_QWORD *)a2, *(_DWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_DWORD *)(a2 + 24));
}

uint64_t static RenameRollback.makeSteps(failedRenames:allMailboxes:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  int64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  _QWORD *v61;
  uint64_t result;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  char v69;
  char *v70;
  uint64_t v71[2];
  _QWORD *v72;
  _QWORD *v73;

  v7 = (_QWORD *)sub_1A594A458();
  v8 = (_QWORD *)*v7;
  v73 = (_QWORD *)*v7;
  swift_retain();
  v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10 = (char *)sub_1A584C19C(v9);
  swift_bridgeObjectRelease();
  v70 = v10;
  sub_1A5849A60(&v70);
  v11 = v70;
  v12 = *((_QWORD *)v70 + 2);
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA910);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size_0(v13);
    v15 = v14 - 40;
    if (v14 < 40)
      v15 = v14 - 9;
    v13[2] = v15 >> 5;
    v13[3] = 0;
    v13[4] = 0;
    sub_1A584D450((uint64_t)(v13 + 2), (uint64_t)(v13 + 5), v12, (uint64_t)v11);
  }
  else
  {
    v13 = (_QWORD *)*v7;
    swift_retain();
  }
  v65 = a4;
  swift_release();
  v66 = v13;
  v72 = v13;
  v16 = *(_QWORD *)(a1 + 16);
  v17 = (char *)MEMORY[0x1E0DEE9D8];
  if (v16)
  {
    v63 = a2;
    v64 = v8;
    v70 = (char *)MEMORY[0x1E0DEE9D8];
    sub_1A582837C(0, v16, 0);
    v17 = v70;
    v18 = sub_1A558A0B8(a1);
    v20 = v19;
    v22 = v21 & 1;
    v67 = a1 + 56;
    while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(v67 + (((unint64_t)v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        goto LABEL_62;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v20)
        goto LABEL_63;
      v69 = v22;
      v23 = *(_QWORD *)(a1 + 48) + 32 * v18;
      v24 = *(_QWORD *)(v23 + 16);
      v25 = *(_DWORD *)(v23 + 24);
      v70 = v17;
      v26 = a1;
      v27 = *((_QWORD *)v17 + 2);
      v28 = *((_QWORD *)v17 + 3);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v27 >= v28 >> 1)
      {
        sub_1A582837C((char *)(v28 > 1), v27 + 1, 1);
        v17 = v70;
      }
      *((_QWORD *)v17 + 2) = v27 + 1;
      v29 = &v17[16 * v27];
      *((_QWORD *)v29 + 4) = v24;
      *((_DWORD *)v29 + 10) = v25;
      v30 = sub_1A558A15C(v18, v20, v69 & 1, v26);
      v18 = v30;
      v20 = v31;
      v22 = v32 & 1;
      --v16;
      a1 = v26;
      if (!v16)
      {
        sub_1A5529B00(v30, v31, v22);
        a2 = v63;
        v8 = v64;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
LABEL_16:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v33 = sub_1A5846EF8((uint64_t)v17, a2);
  swift_bridgeObjectRelease();
  v71[0] = v33;
  v34 = v66[3];
  if (v34)
  {
    v35 = v8[3];
    swift_beginAccess();
    swift_beginAccess();
    while (1)
    {
      v36 = *(_QWORD *)(sub_1A584A2B8((uint64_t *)&v72, v71) + 16);
      v37 = v73[3];
      v38 = v37 + v36;
      if (__OFADD__(v37, v36))
        goto LABEL_64;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v40 = v73;
      if (v73[2] >= v38 && (isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if (!v36)
          goto LABEL_38;
      }
      else
      {
        sub_1A584D4B8(v38, 0, (uint64_t)&type metadata for RenameRollback.Step, &qword_1EE7AA938);
        v40 = v73;
        if (!v36)
          goto LABEL_38;
      }
      v41 = v40[3];
      v42 = v41 + v36;
      if (__OFADD__(v41, v36))
        goto LABEL_65;
      v40[3] = v42;
      if (v42 < v41)
        goto LABEL_66;
      v43 = v40[4];
      v44 = v43 + v41;
      v45 = v40[2];
      if (v43 + v41 >= v45)
        v46 = v40[2];
      else
        v46 = 0;
      v47 = v43 + v42;
      if (v47 >= v45)
        v48 = v40[2];
      else
        v48 = 0;
      v49 = v36;
      if (__OFSUB__(v42, v41))
        goto LABEL_67;
      v50 = v44 - v46;
      v51 = v47 - v48;
      if (v44 - v46 < v47 - v48)
        goto LABEL_36;
      v49 = v45 - v50;
      if (__OFSUB__(v45, v50))
        goto LABEL_69;
      if (v47 == v48)
      {
LABEL_36:
        if (v49 < v36)
          goto LABEL_68;
LABEL_37:
        swift_arrayInitWithCopy();
        goto LABEL_38;
      }
      if (v49 < 0)
        goto LABEL_70;
      if (v49)
        swift_arrayInitWithCopy();
      if (__OFADD__(v49, v36 - v49))
        goto LABEL_71;
      if (v36 < (unint64_t)v49 || v36 < v49)
        goto LABEL_72;
      if (v36 != v49)
      {
        if (v51 < v36 - v49)
          goto LABEL_73;
        goto LABEL_37;
      }
LABEL_38:
      swift_bridgeObjectRelease();
      v52 = v72[3];
      v54 = v52 == v34 && v73[3] == v35;
      if (v52)
      {
        v35 = v73[3];
        v34 = v72[3];
        if (!v54)
          continue;
      }
      break;
    }
  }
  v55 = (_QWORD *)swift_retain();
  v56 = sub_1A5849AC8(v55, a3, (uint64_t)v71);
  swift_release();
  swift_beginAccess();
  v57 = *(_QWORD *)(v56 + 16);
  v58 = v73[3];
  v59 = v58 + v57;
  if (__OFADD__(v58, v57))
  {
LABEL_74:
    __break(1u);
    result = swift_release();
    __break(1u);
    return result;
  }
  v60 = swift_isUniquelyReferenced_nonNull_native();
  v61 = v73;
  if (v73[2] < v59 || (v60 & 1) == 0)
  {
    sub_1A584D4B8(v59, 0, (uint64_t)&type metadata for RenameRollback.Step, &qword_1EE7AA938);
    v61 = v73;
  }
  sub_1A584D684((uint64_t)(v61 + 2), (uint64_t)(v61 + 5), v56 + 32, v57);
  swift_endAccess();
  swift_bridgeObjectRelease();
  *v65 = v73;
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1A584A2B8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  unsigned __int8 *v33;
  uint64_t v34;
  unsigned __int8 *v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  int v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118[2];
  uint64_t v119;
  int v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123[5];
  uint64_t v124;
  int64_t v125;
  int64_t v126;
  char v127[8];
  _QWORD v128[2];
  char v129;

  v116 = a2;
  v111 = 0;
  v110 = sub_1A5949FFC();
  v109 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110);
  v108 = (char *)&v105 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A594B478();
  v114 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v113 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = *(_QWORD **)sub_1A594A458();
  v122 = v121;
  if (*(_QWORD *)(*a1 + 24))
  {
    swift_retain_n();
    v115 = a1;
    v112 = v4;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1A584EF40();
      v11 = (_QWORD *)*a1;
      v12 = *(_QWORD *)(*a1 + 24);
      v81 = __OFSUB__(v12, 1);
      v13 = v12 - 1;
      if (v81)
      {
        __break(1u);
        JUMPOUT(0x1A584B31CLL);
      }
      v14 = v11[4] + v13;
      v15 = v11[2];
      if (v14 < v15)
        v15 = 0;
      v16 = &v11[4 * (v14 - v15)];
      v17 = v16[5];
      v18 = *((unsigned int *)v16 + 12);
      v19 = v16[7];
      v20 = *((unsigned int *)v16 + 16);
      v11[3] = v13;
      v21 = sub_1A5816118(v17, v18, *v116);
      v117 = v18;
      if ((v21 & 1) != 0)
        goto LABEL_37;
      v22 = v20;
      v23 = v19;
      v24 = *a1;
      v25 = *(_QWORD *)(*a1 + 32);
      v26 = *(_QWORD *)(*a1 + 24) + v25;
      if (*(_QWORD *)(*a1 + 16) < v26)
        v26 = *(_QWORD *)(*a1 + 16);
      v124 = *a1;
      v125 = v25;
      v126 = v26;
      v27 = v18 | (v18 << 32);
      v28 = v24;
      while (1)
      {
        if (v25 != v26)
          goto LABEL_19;
        if ((sub_1A584EDF0() & 1) == 0)
          break;
        v28 = v124;
        v25 = v125;
LABEL_19:
        v29 = v28 + 32 * v25++;
        v125 = v25;
        if ((*(unsigned int *)(v29 + 48) | ((unint64_t)*(unsigned int *)(v29 + 48) << 32)) == v27)
        {
          v30 = *(_QWORD *)(v29 + 40);
          v31 = *(_QWORD *)(v30 + 16);
          if (v31 == *(_QWORD *)(v17 + 16))
          {
            if (v31)
              v32 = v30 == v17;
            else
              v32 = 1;
            if (v32)
              goto LABEL_36;
            if (*(unsigned __int8 *)(v30 + 32) == *(unsigned __int8 *)(v17 + 32))
            {
              if (v31 == 1)
                goto LABEL_36;
              if (*(unsigned __int8 *)(v30 + 33) == *(unsigned __int8 *)(v17 + 33))
              {
                if (v31 == 2)
                  goto LABEL_36;
                if (*(unsigned __int8 *)(v30 + 34) == *(unsigned __int8 *)(v17 + 34))
                {
                  if (v31 == 3)
                    goto LABEL_36;
                  if (*(unsigned __int8 *)(v30 + 35) == *(unsigned __int8 *)(v17 + 35))
                  {
                    v33 = (unsigned __int8 *)(v30 + 36);
                    v34 = v31 - 4;
                    v35 = (unsigned __int8 *)(v17 + 36);
                    while (v34)
                    {
                      v37 = *v33++;
                      v36 = v37;
                      v38 = *v35++;
                      --v34;
                      if (v36 != v38)
                        goto LABEL_15;
                    }
LABEL_36:
                    swift_retain();
                    swift_release();
                    a1 = v115;
                    LODWORD(v18) = v117;
                    v19 = v23;
                    v20 = v22;
                    v4 = v112;
LABEL_37:
                    if ((sub_1A584B6C4(v17, v18, v19, v20, a1, &v121) & 1) != 0)
                    {
                      LODWORD(v107) = v20;
                      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                      do
                        v39 = 90000 * PCG32Random.next()();
                      while (v39 < 0x12DF0);
                      v40 = HIDWORD(v39) + 10000;
                      v123[0] = sub_1A584BD4C(v17);
                      v124 = 45;
                      v125 = 0xE100000000000000;
                      v120 = v40;
                      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                      sub_1A594CC9C();
                      sub_1A594B5F8();
                      swift_bridgeObjectRelease();
                      v41 = v113;
                      sub_1A594B460();
                      sub_1A594B418();
                      v43 = v42;
                      swift_bridgeObjectRelease();
                      (*(void (**)(char *, uint64_t))(v114 + 8))(v41, v4);
                      if (v43 >> 60 != 15)
                        __asm { BR              X9 }
LABEL_136:
                      __break(1u);
LABEL_137:
                      __break(1u);
LABEL_138:
                      __break(1u);
                      JUMPOUT(0x1A584B38CLL);
                    }
                    swift_beginAccess();
                    v44 = v121[3];
                    v45 = v44 + 1;
                    if (__OFADD__(v44, 1))
                    {
                      __break(1u);
                      goto LABEL_121;
                    }
                    v107 = v19;
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    v47 = (uint64_t)v121;
                    v48 = v121[2];
                    if (v48 < v45 || (isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      if (v48 < v45)
                      {
                        v49 = swift_isUniquelyReferenced_nonNull_native();
                        v50 = (char *)v121;
                        sub_1A594A464();
                        if ((v49 & 1) != 0)
                        {
                          v51 = *((_QWORD *)v50 + 3);
                          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA910);
                          v47 = swift_allocObject();
                          v52 = _swift_stdlib_malloc_size_0((const void *)v47);
                          v53 = v52 - 40;
                          if (v52 < 40)
                            v53 = v52 - 9;
                          *(_QWORD *)(v47 + 16) = v53 >> 5;
                          *(_QWORD *)(v47 + 24) = v51;
                          *(_QWORD *)(v47 + 32) = 0;
                          if (v51 > 0)
                          {
                            swift_retain();
                            v54 = v20;
                            v20 = v111;
                            sub_1A584DF50(v47 + 16, (char *)(v47 + 40), (_QWORD *)v50 + 2, v50 + 40);
                            v111 = v20;
                            LODWORD(v20) = v54;
                            *((_QWORD *)v50 + 3) = 0;
                            swift_release();
                          }
                          a1 = v115;
                          v55 = v117;
                          swift_release();
                          v121 = (_QWORD *)v47;
LABEL_79:
                          v77 = *(_QWORD *)(v47 + 24);
                          v78 = *(_QWORD *)(v47 + 32);
                          v81 = __OFADD__(v78, v77);
                          v79 = v78 + v77;
                          if (!v81)
                          {
                            if ((v77 & 0x8000000000000000) == 0)
                            {
                              v80 = *(_QWORD *)(v47 + 16);
                              v81 = __OFSUB__(v79, v80);
                              v82 = v79 - v80;
                              if (v82 < 0 != v81)
                                goto LABEL_87;
                              v79 = v82;
                              if (!v81)
                                goto LABEL_87;
                              __break(1u);
LABEL_124:
                              __break(1u);
LABEL_125:
                              __break(1u);
LABEL_126:
                              __break(1u);
                              goto LABEL_127;
                            }
                            if (v79 < 0)
                            {
                              v83 = *(_QWORD *)(v47 + 16);
                              v81 = __OFADD__(v79, v83);
                              v79 += v83;
                              if (v81)
                                goto LABEL_125;
                            }
LABEL_87:
                            v84 = v47 + 32 * v79;
                            *(_QWORD *)(v84 + 40) = v17;
                            *(_DWORD *)(v84 + 48) = v55;
                            *(_QWORD *)(v84 + 56) = v107;
                            *(_DWORD *)(v84 + 64) = v20;
                            v81 = __OFADD__(v77, 1);
                            v85 = v77 + 1;
                            if (!v81)
                            {
                              *(_QWORD *)(v47 + 24) = v85;
                              swift_endAccess();
                              goto LABEL_5;
                            }
LABEL_122:
                            __break(1u);
                            JUMPOUT(0x1A584B334);
                          }
LABEL_121:
                          __break(1u);
                          goto LABEL_122;
                        }
                        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA910);
                        v47 = swift_allocObject();
                        v68 = _swift_stdlib_malloc_size_0((const void *)v47);
                        v69 = v68 - 40;
                        if (v68 < 40)
                          v69 = v68 - 9;
                        v70 = *((_QWORD *)v50 + 3);
                        *(_QWORD *)(v47 + 16) = v69 >> 5;
                        *(_QWORD *)(v47 + 24) = v70;
                        *(_QWORD *)(v47 + 32) = 0;
                        v71 = *((_QWORD *)v50 + 3);
                        if (v71 <= 0)
                          goto LABEL_95;
                        v72 = *((_QWORD *)v50 + 2);
                        v73 = *((_QWORD *)v50 + 4);
                        v74 = v72 - v73;
                        if (!__OFSUB__(v72, v73))
                        {
                          v75 = v50 + 40;
                          if (v74 >= v71)
                          {
                            v76 = 0;
                            v106 = 0;
                            goto LABEL_90;
                          }
                          v76 = v71 - v74;
                          if (!__OFSUB__(v71, v74))
                          {
                            v106 = v75;
                            if (v74 >= 1)
LABEL_90:
                              swift_arrayInitWithCopy();
                            if (v74 < v71 && v76 >= 1)
                            {
                              if (!v106)
                                goto LABEL_138;
                              swift_arrayInitWithCopy();
                            }
LABEL_95:
                            swift_release();
                            v121 = (_QWORD *)v47;
                            a1 = v115;
LABEL_78:
                            v55 = v117;
                            goto LABEL_79;
                          }
LABEL_132:
                          __break(1u);
LABEL_133:
                          __break(1u);
                          goto LABEL_134;
                        }
LABEL_128:
                        __break(1u);
LABEL_129:
                        __break(1u);
LABEL_130:
                        __break(1u);
LABEL_131:
                        __break(1u);
                        goto LABEL_132;
                      }
                      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA910);
                      v59 = swift_allocObject();
                      v60 = *(_OWORD *)(v47 + 24);
                      *(_QWORD *)(v59 + 16) = v48;
                      *(_OWORD *)(v59 + 24) = v60;
                      v61 = *(_QWORD *)(v47 + 24);
                      if (v61 > 0)
                      {
                        v62 = *(_QWORD *)(v47 + 16);
                        v63 = *(_QWORD *)(v47 + 32);
                        v64 = v62 - v63;
                        if (__OFSUB__(v62, v63))
                          goto LABEL_124;
                        v65 = v47 + 40;
                        if (v64 >= v61)
                        {
                          v66 = 0;
                          v67 = 0;
                        }
                        else
                        {
                          v66 = v61 - v64;
                          if (__OFSUB__(v61, v64))
                            goto LABEL_129;
                          v67 = v65;
                          if (v64 < 1)
                          {
LABEL_72:
                            if (v64 < v61 && v66 >= 1)
                            {
                              if (!v65)
                                goto LABEL_137;
                              swift_arrayInitWithCopy();
                            }
                            goto LABEL_76;
                          }
                        }
                        swift_arrayInitWithCopy();
                        v65 = v67;
                        goto LABEL_72;
                      }
LABEL_76:
                      swift_release();
                      v121 = (_QWORD *)v59;
                      v47 = v59;
                    }
                    a1 = v115;
                    goto LABEL_78;
                  }
                }
              }
            }
          }
        }
LABEL_15:
        v26 = v126;
      }
      swift_retain();
      swift_release();
      swift_beginAccess();
      v56 = v122[3];
      v57 = v56 + 1;
      if (__OFADD__(v56, 1))
      {
        __break(1u);
        JUMPOUT(0x1A584B348);
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v58 = swift_isUniquelyReferenced_nonNull_native();
      v6 = v122;
      if (v122[2] < v57 || (v58 & 1) == 0)
      {
        sub_1A584D4B8(v57, 0, (uint64_t)&type metadata for RenameRollback.Step, &qword_1EE7AA938);
        v6 = v122;
      }
      v7 = v23;
      v8 = v117;
      v9 = v111;
      sub_1A584E298(v6 + 2, (uint64_t)(v6 + 5), v7, v22, v17, v117);
      v111 = v9;
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A58189F8(v10, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5827308((uint64_t)&v124, v17, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v115;
      v4 = v112;
LABEL_5:
      if (!*(_QWORD *)(*a1 + 24))
        goto LABEL_98;
    }
  }
  swift_retain_n();
LABEL_98:
  swift_beginAccess();
  v86 = v121;
  swift_retain();
  if ((sub_1A584E9E4(v86 + 2, (uint64_t)(v86 + 5), (uint64_t **)a1) & 1) != 0)
  {
    v87 = v86[3];
    if (v87 > 0)
    {
      v88 = *(_QWORD *)(*a1 + 24);
      v89 = v88 + v87;
      if (__OFADD__(v88, v87))
        goto LABEL_130;
      v90 = swift_isUniquelyReferenced_nonNull_native();
      v91 = *a1;
      if (*(_QWORD *)(*a1 + 16) < v89 || (v90 & 1) == 0)
      {
        sub_1A584D4B8(v89, 0, (uint64_t)&type metadata for MailboxToRename, &qword_1EE7AA910);
        v91 = *a1;
      }
      sub_1A584D780((_QWORD *)(v91 + 16), v91 + 40, (uint64_t)v123);
      sub_1A584D82C(v87, (uint64_t)&v124);
      sub_1A55032A0((uint64_t)&v126, (uint64_t)v127, &qword_1EE7AA940);
      sub_1A55032A0((uint64_t)v127, (uint64_t)v128, &qword_1EE7AA940);
      if ((v129 & 1) != 0)
      {
        v92 = v124;
        v93 = v125;
        swift_retain();
        swift_retain();
        sub_1A584DCAC(v86, v92, v93);
LABEL_111:
        swift_release();
        v99 = *(_QWORD *)(v91 + 24);
        v81 = __OFADD__(v99, v87);
        v100 = v99 + v87;
        if (v81)
          goto LABEL_131;
        *(_QWORD *)(v91 + 24) = v100;
        swift_release();
        goto LABEL_113;
      }
      v94 = v125;
      if (v125 < 0)
        goto LABEL_133;
      if (v86[3] < v125)
      {
LABEL_134:
        __break(1u);
      }
      else
      {
        v95 = v128[0];
        v96 = v128[1];
        v97 = v124;
        swift_retain();
        swift_retain();
        sub_1A584DAFC(0, v94, v86, v97, v94);
        v98 = v86[3];
        if (v98 >= v94)
        {
          swift_retain();
          sub_1A584DAFC(v94, v98, v86, v95, v96);
          swift_release();
          goto LABEL_111;
        }
      }
      __break(1u);
      goto LABEL_136;
    }
  }
LABEL_113:
  swift_release();
  swift_beginAccess();
  v101 = v122;
  v102 = v122[3];
  if (v102 < 0)
    goto LABEL_126;
  swift_retain();
  if (v102)
  {
    v103 = sub_1A594BA18();
    *(_QWORD *)(v103 + 16) = v102;
  }
  else
  {
    v103 = MEMORY[0x1E0DEE9D8];
  }
  v119 = 0;
  v118[0] = v103 + 32;
  v118[1] = v102;
  sub_1A584EC08(v101 + 2, (uint64_t)(v101 + 5), v118, &v119);
  if (v102 < v119)
  {
LABEL_127:
    __break(1u);
    goto LABEL_128;
  }
  *(_QWORD *)(v103 + 16) = v119;
  swift_release();
  swift_release();
  swift_release();
  return v103;
}

void sub_1A584B39C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v16[5];
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v21 = a4;
  v20 = a2;
  v19 = a1;
  v4 = sub_1A5949FFC();
  v16[3] = *(_QWORD *)(v4 - 8);
  v16[4] = v4;
  MEMORY[0x1E0C80A78](v4);
  v16[2] = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594B478();
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v17 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v8;
  v16[1] = v8;
  do
    v10 = 90000 * PCG32Random.next()();
  while (v10 < 0x12DF0);
  v11 = HIDWORD(v10) + 10000;
  v12 = sub_1A584BD4C(v19);
  v23 = 45;
  v24 = 0xE100000000000000;
  v25 = v12;
  v22 = v11;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  v13 = v17;
  sub_1A594B460();
  sub_1A594B418();
  v15 = v14;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v9);
  if (v15 >> 60 != 15)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x1A584B6B4);
}

uint64_t sub_1A584B6C4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6)
{
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  uint64_t v24;
  unsigned __int8 *v25;
  int v26;
  int v27;
  int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  unsigned __int8 *v55;
  uint64_t v56;
  unsigned __int8 *v57;
  int v58;
  int v59;
  int v60;
  unsigned __int8 *v62;
  unsigned __int8 *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v72 = a5;
  v74 = a4;
  v12 = sub_1A584F1D0(a1, a2, a3, a4, a5, a6, a3, a4);
  v73 = v13;
  v15 = v14;
  v67 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v12)
    return 0;
  v69 = a6;
  swift_beginAccess();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v70 = a3;
  v71 = v12;
  v62 = (unsigned __int8 *)(v12 + 36);
  v63 = (unsigned __int8 *)(a3 + 36);
  v68 = v15;
  v64 = v15 + 36;
  v65 = a1;
  v66 = a2;
  v17 = a2;
  while (1)
  {
    if (v17 != v74 || (v18 = *(_QWORD *)(a3 + 16), v18 != *(_QWORD *)(a1 + 16)))
    {
LABEL_22:
      v29 = v17 | ((unint64_t)v17 << 32);
      v30 = *(_QWORD *)(*v72 + 32);
      v31 = *(_QWORD *)(*v72 + 24) + v30;
      if (*(_QWORD *)(*v72 + 16) < v31)
        v31 = *(_QWORD *)(*v72 + 16);
      v75 = *v72;
      v77 = *(_QWORD *)(*v72 + 32);
      v79 = v31;
      v32 = *v72;
      while (1)
      {
        if (v30 == v31)
        {
          if ((sub_1A584EDF0() & 1) == 0)
          {
            swift_retain();
            swift_release();
            v39 = *(_QWORD *)(*v69 + 32);
            v40 = *(_QWORD *)(*v69 + 24) + v39;
            if (*(_QWORD *)(*v69 + 16) < v40)
              v40 = *(_QWORD *)(*v69 + 16);
            v76 = *v69;
            v78 = *(_QWORD *)(*v69 + 32);
            v80 = v40;
            v41 = *v69;
            while (1)
            {
              if (v39 == v40)
              {
                if ((sub_1A584EDF0() & 1) == 0)
                {
                  swift_retain();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  return 0;
                }
                v41 = v76;
                v39 = v78;
              }
              v42 = v41 + 32 * v39++;
              v78 = v39;
              v43 = *(unsigned int *)(v42 + 64);
              if ((v43 | (v43 << 32)) == v29)
              {
                v21 = *(_QWORD *)(v42 + 56);
                v44 = *(_QWORD *)(v21 + 16);
                if (v44 == *(_QWORD *)(a1 + 16))
                {
                  v20 = *(_QWORD *)(v42 + 40);
                  v17 = *(_DWORD *)(v42 + 48);
                  if (!v44)
                    goto LABEL_69;
                  if (v21 == a1)
                  {
                    v21 = a1;
LABEL_69:
                    a3 = v70;
                    swift_retain();
                    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                    swift_release();
                    LODWORD(v22) = v43;
                    goto LABEL_70;
                  }
                  if (*(unsigned __int8 *)(v21 + 32) == *(unsigned __int8 *)(a1 + 32))
                  {
                    if (v44 == 1)
                      goto LABEL_69;
                    if (*(unsigned __int8 *)(v21 + 33) == *(unsigned __int8 *)(a1 + 33))
                    {
                      if (v44 == 2)
                        goto LABEL_69;
                      if (*(unsigned __int8 *)(v21 + 34) == *(unsigned __int8 *)(a1 + 34))
                      {
                        if (v44 == 3)
                          goto LABEL_69;
                        if (*(unsigned __int8 *)(v21 + 35) == *(unsigned __int8 *)(a1 + 35))
                        {
                          v45 = 0;
                          v46 = v44 - 4;
                          while (v46 != v45)
                          {
                            v47 = *(unsigned __int8 *)(v21 + v45 + 36);
                            v48 = *(unsigned __int8 *)(a1 + 36 + v45++);
                            if (v47 != v48)
                              goto LABEL_47;
                          }
                          goto LABEL_69;
                        }
                      }
                    }
                  }
                }
              }
LABEL_47:
              v40 = v80;
            }
          }
          v32 = v75;
          v30 = v77;
        }
        v33 = v32 + 32 * v30++;
        v77 = v30;
        v22 = *(unsigned int *)(v33 + 64);
        if ((v22 | (v22 << 32)) == v29)
        {
          v21 = *(_QWORD *)(v33 + 56);
          v34 = *(_QWORD *)(v21 + 16);
          if (v34 == *(_QWORD *)(a1 + 16))
          {
            v20 = *(_QWORD *)(v33 + 40);
            v17 = *(_DWORD *)(v33 + 48);
            if (!v34)
              goto LABEL_67;
            if (v21 == a1)
            {
              v21 = a1;
              goto LABEL_67;
            }
            if (*(unsigned __int8 *)(v21 + 32) == *(unsigned __int8 *)(a1 + 32))
            {
              if (v34 == 1)
                goto LABEL_67;
              if (*(unsigned __int8 *)(v21 + 33) == *(unsigned __int8 *)(a1 + 33))
              {
                if (v34 == 2)
                  goto LABEL_67;
                if (*(unsigned __int8 *)(v21 + 34) == *(unsigned __int8 *)(a1 + 34))
                {
                  if (v34 == 3)
                    goto LABEL_67;
                  if (*(unsigned __int8 *)(v21 + 35) == *(unsigned __int8 *)(a1 + 35))
                    break;
                }
              }
            }
          }
        }
LABEL_25:
        v31 = v79;
      }
      v35 = 0;
      v36 = v34 - 4;
      while (v36 != v35)
      {
        v37 = *(unsigned __int8 *)(v21 + v35 + 36);
        v38 = *(unsigned __int8 *)(a1 + 36 + v35++);
        if (v37 != v38)
          goto LABEL_25;
      }
LABEL_67:
      a3 = v70;
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_release();
      goto LABEL_70;
    }
    if (v18)
      v19 = a1 == a3;
    else
      v19 = 1;
    if (!v19)
    {
      if (*(unsigned __int8 *)(a3 + 32) != *(unsigned __int8 *)(a1 + 32))
        goto LABEL_22;
      if (v18 != 1)
      {
        if (*(unsigned __int8 *)(a3 + 33) != *(unsigned __int8 *)(a1 + 33))
          goto LABEL_22;
        if (v18 != 2)
        {
          if (*(unsigned __int8 *)(a3 + 34) != *(unsigned __int8 *)(a1 + 34))
            goto LABEL_22;
          if (v18 != 3)
          {
            if (*(unsigned __int8 *)(a3 + 35) != *(unsigned __int8 *)(a1 + 35))
              goto LABEL_22;
            v23 = (unsigned __int8 *)(a1 + 36);
            v24 = v18 - 4;
            v25 = v63;
            while (v24)
            {
              v27 = *v25++;
              v26 = v27;
              v28 = *v23++;
              --v24;
              if (v26 != v28)
                goto LABEL_22;
            }
          }
        }
      }
    }
    v20 = v65;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v17 = v66;
    v21 = a3;
    LODWORD(v22) = v74;
LABEL_70:
    if (v17 == v73)
    {
      v49 = *(_QWORD *)(v20 + 16);
      if (v49 == *(_QWORD *)(v71 + 16))
      {
        if (v49 && v20 != v71)
        {
          if (*(unsigned __int8 *)(v20 + 32) != *(unsigned __int8 *)(v71 + 32))
            goto LABEL_3;
          if (v49 != 1)
          {
            if (*(unsigned __int8 *)(v20 + 33) != *(unsigned __int8 *)(v71 + 33))
              goto LABEL_3;
            if (v49 != 2)
            {
              if (*(unsigned __int8 *)(v20 + 34) != *(unsigned __int8 *)(v71 + 34))
                goto LABEL_3;
              if (v49 != 3)
              {
                if (*(unsigned __int8 *)(v20 + 35) != *(unsigned __int8 *)(v71 + 35))
                  goto LABEL_3;
                v55 = (unsigned __int8 *)(v20 + 36);
                v56 = v49 - 4;
                v57 = v62;
                while (v56)
                {
                  v59 = *v55++;
                  v58 = v59;
                  v60 = *v57++;
                  --v56;
                  if (v58 != v60)
                    goto LABEL_3;
                }
              }
            }
          }
        }
        if ((_DWORD)v22 == v67)
        {
          v50 = *(_QWORD *)(v21 + 16);
          if (v50 == *(_QWORD *)(v68 + 16))
          {
            if (!v50 || v21 == v68)
              goto LABEL_102;
            if (*(unsigned __int8 *)(v21 + 32) == *(unsigned __int8 *)(v68 + 32))
            {
              if (v50 == 1)
                goto LABEL_102;
              if (*(unsigned __int8 *)(v21 + 33) == *(unsigned __int8 *)(v68 + 33))
              {
                if (v50 == 2)
                  goto LABEL_102;
                if (*(unsigned __int8 *)(v21 + 34) == *(unsigned __int8 *)(v68 + 34))
                {
                  if (v50 == 3)
                    goto LABEL_102;
                  if (*(unsigned __int8 *)(v21 + 35) == *(unsigned __int8 *)(v68 + 35))
                    break;
                }
              }
            }
          }
        }
      }
    }
LABEL_3:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v20;
  }
  v51 = 0;
  v52 = v50 - 4;
  while (v52 != v51)
  {
    v53 = *(unsigned __int8 *)(v21 + v51 + 36);
    v54 = *(unsigned __int8 *)(v64 + v51++);
    if (v53 != v54)
      goto LABEL_3;
  }
LABEL_102:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1A584BD4C(uint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if ((unint64_t)v2 >= 6)
    v3 = v2 - 6;
  else
    v3 = 0;
  v4 = a1 + 32;
  result = sub_1A584F044(45, a1 + 32, v3, (2 * v2) | 1);
  if ((v6 & 1) != 0)
    goto LABEL_23;
  v7 = v2 - result;
  if (__OFSUB__(v2, result))
    goto LABEL_31;
  if (v7 < 1)
    goto LABEL_23;
  v8 = result + 1;
  if (__OFADD__(result, 1))
    goto LABEL_32;
  if (v2 < v8)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v8 < v3)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v8 == v2)
    goto LABEL_11;
  if (v8 >= v2)
  {
    __break(1u);
    return result;
  }
  if (*(unsigned __int8 *)(v4 + v8) - 58 < 0xFFFFFFF6)
  {
LABEL_23:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return v1;
  }
  if (result + 2 != v2)
  {
    while (result + 2 < v2)
    {
      if (*(unsigned __int8 *)(v1 + 34 + result) - 58 < 0xFFFFFFF6)
        goto LABEL_23;
      if (v2 - 2 == ++result)
        goto LABEL_11;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_11:
  v9 = *(_QWORD *)(v1 + 16);
  v10 = v9 >= v7;
  v11 = v9 - v7;
  if (v10)
    v3 = v11;
  else
    v3 = 0;
  sub_1A594CD68();
  swift_unknownObjectRetain_n();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = swift_dynamicCastClass();
  if (!v12)
  {
    swift_unknownObjectRelease();
    v12 = MEMORY[0x1E0DEE9D8];
  }
  v13 = *(_QWORD *)(v12 + 16);
  swift_release();
  if (v13 == v3)
  {
    v14 = swift_dynamicCastClass();
    if (!v14)
    {
      swift_unknownObjectRelease();
      v14 = MEMORY[0x1E0DEE9D8];
    }
    goto LABEL_19;
  }
LABEL_35:
  swift_unknownObjectRelease();
  sub_1A584C280(v1, v4, 0, (2 * v3) | 1);
LABEL_19:
  v15 = MailboxName.init(_:)(v14);
  swift_unknownObjectRelease();
  return v15;
}

uint64_t sub_1A584BF0C(uint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  int64_t v11;

  v2 = *(_QWORD *)(result + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v11 = v4 + v2;
  else
    v11 = v4;
  result = (uint64_t)sub_1A5826F74((char *)result, v11, 1, (char *)v3);
  v3 = result;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v7 = *(_QWORD *)(v3 + 16);
  if ((*(_QWORD *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = (uint64_t)memcpy((void *)(v3 + v7 + 32), (const void *)(v6 + 32), v2);
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v8 = *(_QWORD *)(v3 + 16);
  v9 = __OFADD__(v8, v2);
  v10 = v8 + v2;
  if (!v9)
  {
    *(_QWORD *)(v3 + 16) = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_1A584BFEC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3)
      {
LABEL_7:
        swift_arrayInitWithCopy();
        return;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AED8);
      v7 = (_QWORD *)swift_allocObject();
      v8 = _swift_stdlib_malloc_size_0(v7);
      v9 = v8 - 32;
      if (v8 < 32)
        v9 = v8 - 25;
      v7[2] = v5;
      v7[3] = 2 * (v9 >> 3);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
    goto LABEL_11;
  }
}

_QWORD *sub_1A584C0B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AED8);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size_0(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_1A584E5C4((uint64_t)&v8, v3 + 4, v1, a1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550F72C();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1A584C19C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA850);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size_0(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_1A584E7BC((uint64_t)&v8, (uint64_t)(v3 + 4), v1, a1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550F72C();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

void sub_1A584C280(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  int64_t v5;
  _QWORD *v8;
  size_t v9;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_9:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
        goto LABEL_5;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B368);
      v8 = (_QWORD *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size_0(v8);
      v8[2] = v5;
      v8[3] = 2 * v9 - 64;
      if (v4 != a3)
      {
LABEL_5:
        memcpy(v8 + 4, (const void *)(a2 + a3), v5);
        return;
      }
    }
    __break(1u);
    goto LABEL_9;
  }
}

uint64_t sub_1A584C334(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  _OWORD *v43;
  _OWORD *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  __int128 v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  char *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  char v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _BOOL4 v139;
  unsigned int v140;

  v2 = v1;
  v4 = a1[1];
  result = sub_1A594CC78();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_155;
    if (v4)
      return sub_1A584CCA4(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_154;
  v127 = result;
  v125 = a1;
  if (v4 <= 1)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    v134 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v4 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_120:
      v129 = v8;
      if (v12 >= 2)
      {
        v118 = *v125;
        do
        {
          v119 = v12 - 2;
          if (v12 < 2)
            goto LABEL_149;
          if (!v118)
            goto LABEL_162;
          v120 = *(_QWORD *)&v11[16 * v119 + 32];
          v121 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_1A584CEA0((char *)(v118 + 32 * v120), (char *)(v118 + 32 * *(_QWORD *)&v11[16 * v12 + 16]), v118 + 32 * v121, v134);
          if (v2)
            break;
          if (v121 < v120)
            goto LABEL_150;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v11 = sub_1A584D3C4((uint64_t)v11);
          if (v119 >= *((_QWORD *)v11 + 2))
            goto LABEL_151;
          v122 = &v11[16 * v119 + 32];
          *(_QWORD *)v122 = v120;
          *((_QWORD *)v122 + 1) = v121;
          v123 = *((_QWORD *)v11 + 2);
          if (v12 > v123)
            goto LABEL_152;
          memmove(&v11[16 * v12 + 16], &v11[16 * v12 + 32], 16 * (v123 - v12));
          *((_QWORD *)v11 + 2) = v123 - 1;
          v12 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_131:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v129 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v7 = v6 >> 1;
    v8 = sub_1A594BA18();
    *(_QWORD *)(v8 + 16) = v7;
    v134 = (char *)(v8 + 32);
  }
  v129 = v8;
  v9 = 0;
  v10 = *a1;
  v126 = *a1 + 48;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v131 = v4;
  v135 = *a1;
LABEL_15:
  v13 = v9;
  v14 = v9 + 1;
  v132 = v9;
  if (v9 + 1 < v4)
  {
    v128 = v11;
    v15 = v2;
    v16 = v10 + 32 * v14;
    v17 = *(_QWORD *)v16;
    v18 = *(_DWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(unsigned int *)(v16 + 24);
    v21 = v10 + 32 * v9;
    v22 = *(_QWORD *)v21;
    v23 = *(_DWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v25 = static MailboxName.stableOrderCompare(_:_:)(v19, v20, v24);
    type metadata accessor for ComparisonResult(0);
    if (v25 == -1)
    {
      v139 = 1;
    }
    else if (v25 == 1)
    {
      v139 = 0;
    }
    else
    {
      if (v25)
        goto LABEL_163;
      v139 = static MailboxName.stableOrder(_:_:)(v17, v18, v22, v23);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v131;
    v13 = v132;
    v14 = v132 + 2;
    v2 = v15;
    if (v132 + 2 < v131)
    {
      v26 = v126 + 32 * v132;
      v27 = v26;
      while (1)
      {
        v136 = v14;
        v28 = *(_QWORD *)(v26 + 16);
        v29 = *(_QWORD *)(v27 + 32);
        v27 += 32;
        v30 = *(_DWORD *)(v26 + 24);
        v31 = *(unsigned int *)(v26 + 40);
        v32 = *(_QWORD *)(v26 - 16);
        v33 = *(_DWORD *)(v26 - 8);
        v34 = *(_QWORD *)v26;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v35 = static MailboxName.stableOrderCompare(_:_:)(v29, v31, v34);
        if (v35 == -1)
        {
          v36 = 1;
        }
        else if (v35 == 1)
        {
          v36 = 0;
        }
        else
        {
          if (v35)
            goto LABEL_163;
          v36 = static MailboxName.stableOrder(_:_:)(v28, v30, v32, v33);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (((v139 ^ v36) & 1) != 0)
          break;
        v14 = v136 + 1;
        v26 = v27;
        v4 = v131;
        if (v131 == v136 + 1)
        {
          v14 = v131;
          goto LABEL_34;
        }
      }
      v4 = v131;
      v14 = v136;
LABEL_34:
      v13 = v132;
    }
    v11 = v128;
    if (v139)
    {
      if (v14 < v13)
        goto LABEL_156;
      if (v13 < v14)
      {
        v37 = 32 * v14 - 32;
        v38 = 32 * v13;
        v39 = v14;
        v40 = v13;
        do
        {
          if (v40 != --v39)
          {
            if (!v135)
              goto LABEL_161;
            v43 = (_OWORD *)(v135 + v38);
            v44 = (_OWORD *)(v135 + v37);
            v45 = *(_QWORD *)(v135 + v38);
            v46 = *(_DWORD *)(v135 + v38 + 8);
            v47 = *(_QWORD *)(v135 + v38 + 16);
            v48 = *(_DWORD *)(v135 + v38 + 24);
            if (v38 != v37 || v43 >= v44 + 2)
            {
              v41 = v44[1];
              *v43 = *v44;
              v43[1] = v41;
            }
            v42 = v135 + v37;
            *(_QWORD *)v42 = v45;
            *(_DWORD *)(v42 + 8) = v46;
            *(_QWORD *)(v42 + 16) = v47;
            *(_DWORD *)(v42 + 24) = v48;
          }
          ++v40;
          v37 -= 32;
          v38 += 32;
        }
        while (v40 < v39);
      }
    }
  }
  if (v14 >= v4)
    goto LABEL_71;
  if (__OFSUB__(v14, v13))
    goto LABEL_153;
  if (v14 - v13 >= v127)
    goto LABEL_71;
  if (__OFADD__(v13, v127))
    goto LABEL_157;
  if (v13 + v127 >= v4)
    v49 = v4;
  else
    v49 = v13 + v127;
  if (v49 >= v13)
  {
    if (v14 == v49)
      goto LABEL_71;
    v124 = v2;
    type metadata accessor for ComparisonResult(0);
    v50 = v135 + 32 * v14;
    v130 = v49;
LABEL_59:
    v52 = v13;
    v133 = v50;
    v53 = v50;
    v137 = v14;
    while (1)
    {
      v54 = *(_QWORD *)v53;
      v140 = *(_DWORD *)(v53 + 8);
      v55 = *(_QWORD *)(v53 + 16);
      v56 = *(unsigned int *)(v53 + 24);
      v57 = *(_QWORD *)(v53 - 32);
      v58 = *(_DWORD *)(v53 - 24);
      v59 = *(_QWORD *)(v53 - 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v60 = static MailboxName.stableOrderCompare(_:_:)(v55, v56, v59);
      if (v60 == -1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v60)
        {
          if (v60 != 1)
            goto LABEL_163;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_57:
          v51 = v137;
LABEL_58:
          v14 = v51 + 1;
          v13 = v132;
          v50 = v133 + 32;
          if (v14 != v130)
            goto LABEL_59;
          v14 = v130;
          v2 = v124;
LABEL_71:
          if (v14 < v13)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v11 = sub_1A584D2CC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
          v68 = *((_QWORD *)v11 + 2);
          v67 = *((_QWORD *)v11 + 3);
          v12 = v68 + 1;
          v10 = v135;
          if (v68 >= v67 >> 1)
          {
            v117 = sub_1A584D2CC((char *)(v67 > 1), v68 + 1, 1, v11);
            v10 = v135;
            v11 = v117;
          }
          *((_QWORD *)v11 + 2) = v12;
          v69 = v11 + 32;
          v70 = &v11[16 * v68 + 32];
          *(_QWORD *)v70 = v132;
          *((_QWORD *)v70 + 1) = v14;
          v138 = v14;
          if (v68)
          {
LABEL_77:
            v71 = v12 - 1;
            if (v12 >= 4)
            {
              v76 = &v69[16 * v12];
              v77 = *((_QWORD *)v76 - 8);
              v78 = *((_QWORD *)v76 - 7);
              v82 = __OFSUB__(v78, v77);
              v79 = v78 - v77;
              if (v82)
                goto LABEL_137;
              v81 = *((_QWORD *)v76 - 6);
              v80 = *((_QWORD *)v76 - 5);
              v82 = __OFSUB__(v80, v81);
              v74 = v80 - v81;
              v75 = v82;
              if (v82)
                goto LABEL_138;
              v83 = v12 - 2;
              v84 = &v69[16 * v12 - 32];
              v86 = *(_QWORD *)v84;
              v85 = *((_QWORD *)v84 + 1);
              v82 = __OFSUB__(v85, v86);
              v87 = v85 - v86;
              if (v82)
                goto LABEL_140;
              v82 = __OFADD__(v74, v87);
              v88 = v74 + v87;
              if (v82)
                goto LABEL_143;
              if (v88 >= v79)
              {
                v106 = &v69[16 * v71];
                v108 = *(_QWORD *)v106;
                v107 = *((_QWORD *)v106 + 1);
                v82 = __OFSUB__(v107, v108);
                v109 = v107 - v108;
                if (v82)
                  goto LABEL_147;
                v99 = v74 < v109;
              }
              else
              {
LABEL_90:
                if ((v75 & 1) != 0)
                  goto LABEL_139;
                v83 = v12 - 2;
                v89 = &v69[16 * v12 - 32];
                v91 = *(_QWORD *)v89;
                v90 = *((_QWORD *)v89 + 1);
                v92 = __OFSUB__(v90, v91);
                v93 = v90 - v91;
                v94 = v92;
                if (v92)
                  goto LABEL_142;
                v95 = &v69[16 * v71];
                v97 = *(_QWORD *)v95;
                v96 = *((_QWORD *)v95 + 1);
                v82 = __OFSUB__(v96, v97);
                v98 = v96 - v97;
                if (v82)
                  goto LABEL_145;
                if (__OFADD__(v93, v98))
                  goto LABEL_146;
                if (v93 + v98 < v74)
                  goto LABEL_102;
                v99 = v74 < v98;
              }
              if (v99)
                v71 = v83;
            }
            else
            {
              if (v12 == 3)
              {
                v73 = *((_QWORD *)v11 + 4);
                v72 = *((_QWORD *)v11 + 5);
                v82 = __OFSUB__(v72, v73);
                v74 = v72 - v73;
                v75 = v82;
                goto LABEL_90;
              }
              v100 = *((_QWORD *)v11 + 4);
              v101 = *((_QWORD *)v11 + 5);
              v82 = __OFSUB__(v101, v100);
              v93 = v101 - v100;
              v94 = v82;
LABEL_102:
              if ((v94 & 1) != 0)
                goto LABEL_141;
              v102 = &v69[16 * v71];
              v104 = *(_QWORD *)v102;
              v103 = *((_QWORD *)v102 + 1);
              v82 = __OFSUB__(v103, v104);
              v105 = v103 - v104;
              if (v82)
                goto LABEL_144;
              if (v105 < v93)
                goto LABEL_14;
            }
            v110 = v71 - 1;
            if (v71 - 1 >= v12)
            {
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
              break;
            }
            if (!v10)
              goto LABEL_160;
            v111 = v11;
            v112 = &v69[16 * v110];
            v113 = *(_QWORD *)v112;
            v114 = &v69[16 * v71];
            v115 = *((_QWORD *)v114 + 1);
            sub_1A584CEA0((char *)(v10 + 32 * *(_QWORD *)v112), (char *)(v10 + 32 * *(_QWORD *)v114), v10 + 32 * v115, v134);
            if (v2)
              goto LABEL_131;
            if (v115 < v113)
              goto LABEL_134;
            if (v71 > *((_QWORD *)v111 + 2))
              goto LABEL_135;
            *(_QWORD *)v112 = v113;
            *(_QWORD *)&v69[16 * v110 + 8] = v115;
            v116 = *((_QWORD *)v111 + 2);
            if (v71 >= v116)
              goto LABEL_136;
            v11 = v111;
            v12 = v116 - 1;
            memmove(&v69[16 * v71], v114 + 16, 16 * (v116 - 1 - v71));
            *((_QWORD *)v11 + 2) = v116 - 1;
            v10 = v135;
            if (v116 <= 2)
              goto LABEL_14;
            goto LABEL_77;
          }
          v12 = 1;
LABEL_14:
          v4 = v131;
          v9 = v138;
          v8 = v129;
          if (v138 >= v131)
            goto LABEL_120;
          goto LABEL_15;
        }
        v61 = static MailboxName.stableOrder(_:_:)(v54, v140, v57, v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v61)
          goto LABEL_57;
      }
      v51 = v137;
      if (!v135)
        goto LABEL_159;
      v62 = *(_QWORD *)v53;
      v63 = *(_DWORD *)(v53 + 8);
      v64 = *(_QWORD *)(v53 + 16);
      v65 = *(_DWORD *)(v53 + 24);
      v66 = *(_OWORD *)(v53 - 16);
      *(_OWORD *)v53 = *(_OWORD *)(v53 - 32);
      *(_OWORD *)(v53 + 16) = v66;
      *(_DWORD *)(v53 - 24) = v63;
      *(_QWORD *)(v53 - 16) = v64;
      *(_DWORD *)(v53 - 8) = v65;
      *(_QWORD *)(v53 - 32) = v62;
      v53 -= 32;
      if (v137 == ++v52)
        goto LABEL_58;
    }
  }
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  result = sub_1A594CD98();
  __break(1u);
  return result;
}

uint64_t sub_1A584CCA4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  __int128 v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;

  v21 = result;
  v24 = a3;
  if (a3 != a2)
  {
    v4 = *a4;
    type metadata accessor for ComparisonResult(0);
    v23 = v4;
    v5 = v4 + 32 * v24;
LABEL_5:
    v6 = v21;
    v22 = v5;
    while (1)
    {
      v7 = *(_QWORD *)v5;
      v25 = *(_DWORD *)(v5 + 8);
      v8 = *(_QWORD *)(v5 + 16);
      v9 = *(unsigned int *)(v5 + 24);
      v10 = *(_QWORD *)(v5 - 32);
      v11 = *(_DWORD *)(v5 - 24);
      v12 = *(_QWORD *)(v5 - 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v13 = static MailboxName.stableOrderCompare(_:_:)(v8, v9, v12);
      if (v13 == -1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
      }
      else
      {
        if (v13)
        {
          if (v13 != 1)
            goto LABEL_17;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
LABEL_4:
          v5 = v22 + 32;
          if (++v24 == a2)
            return result;
          goto LABEL_5;
        }
        v14 = static MailboxName.stableOrder(_:_:)(v7, v25, v10, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if (!v14)
          goto LABEL_4;
      }
      if (!v23)
        break;
      v15 = *(_QWORD *)v5;
      v16 = *(_DWORD *)(v5 + 8);
      v17 = *(_QWORD *)(v5 + 16);
      v18 = *(_DWORD *)(v5 + 24);
      v19 = *(_OWORD *)(v5 - 16);
      *(_OWORD *)v5 = *(_OWORD *)(v5 - 32);
      *(_OWORD *)(v5 + 16) = v19;
      *(_DWORD *)(v5 - 24) = v16;
      *(_QWORD *)(v5 - 16) = v17;
      *(_DWORD *)(v5 - 8) = v18;
      *(_QWORD *)(v5 - 32) = v15;
      v5 -= 32;
      if (v24 == ++v6)
        goto LABEL_4;
    }
    __break(1u);
LABEL_17:
    result = sub_1A594CD98();
    __break(1u);
  }
  return result;
}

uint64_t sub_1A584CEA0(char *__src, char *__dst, unint64_t a3, char *a4)
{
  char *v4;
  char *v5;
  char *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char *v25;
  char *v26;
  BOOL v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  char *v41;
  unint64_t v42;
  __int128 v43;
  size_t v44;
  uint64_t result;
  char *v46;
  char *v47;
  unsigned int v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;

  v4 = a4;
  v5 = __dst;
  v6 = __src;
  v7 = __dst - __src;
  v8 = __dst - __src + 31;
  if (__dst - __src >= 0)
    v8 = __dst - __src;
  v9 = v8 >> 5;
  v10 = a3 - (_QWORD)__dst;
  v11 = a3 - (_QWORD)__dst + 31;
  if ((uint64_t)(a3 - (_QWORD)__dst) >= 0)
    v11 = a3 - (_QWORD)__dst;
  v12 = v11 >> 5;
  if (v9 >= v12)
  {
    v29 = 32 * v12;
    if (a4 != __dst || &__dst[v29] <= a4)
      memmove(a4, __dst, 32 * v12);
    v14 = &v4[v29];
    if (v6 >= v5 || v10 < 32)
      goto LABEL_52;
    type metadata accessor for ComparisonResult(0);
    v30 = (char *)(a3 - 32);
    v46 = v6;
    v47 = v4;
    while (1)
    {
      v51 = (unint64_t)v14;
      v53 = v5;
      v31 = v14 - 32;
      v32 = *((_QWORD *)v14 - 4);
      v49 = *((_DWORD *)v14 - 6);
      v33 = *((_QWORD *)v14 - 2);
      v34 = *((unsigned int *)v14 - 2);
      v35 = v5 - 32;
      v36 = *((_QWORD *)v5 - 4);
      v37 = *((_DWORD *)v35 + 2);
      v38 = *((_QWORD *)v35 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v39 = static MailboxName.stableOrderCompare(_:_:)(v33, v34, v38);
      if (v39 == -1)
      {
        v40 = 1;
      }
      else if (v39 == 1)
      {
        v40 = 0;
      }
      else
      {
        if (v39)
        {
LABEL_56:
          result = sub_1A594CD98();
          __break(1u);
          return result;
        }
        v40 = static MailboxName.stableOrder(_:_:)(v32, v49, v36, v37);
      }
      v41 = v30 + 32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v40)
      {
        v42 = (unint64_t)v46;
        if (v41 == v53)
        {
          v5 = v35;
          v4 = v47;
          v14 = (char *)v51;
          if (v30 < v53)
            goto LABEL_48;
        }
        else
        {
          v5 = v35;
          v4 = v47;
          v14 = (char *)v51;
        }
      }
      else
      {
        v5 = v53;
        v42 = (unint64_t)v46;
        v35 = v31;
        if (v41 == (char *)v51)
        {
          v14 = v31;
          v4 = v47;
          if ((unint64_t)v30 < v51)
            goto LABEL_48;
        }
        else
        {
          v14 = v31;
          v4 = v47;
        }
      }
      v43 = *((_OWORD *)v35 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v35;
      *((_OWORD *)v30 + 1) = v43;
LABEL_48:
      if ((unint64_t)v5 > v42)
      {
        v30 -= 32;
        if (v14 > v4)
          continue;
      }
      goto LABEL_52;
    }
  }
  v13 = 32 * v9;
  if (a4 != __src || &__src[v13] <= a4)
    memmove(a4, __src, v13);
  v14 = &v4[v13];
  if ((unint64_t)v5 < a3 && v7 >= 32)
  {
    type metadata accessor for ComparisonResult(0);
    v50 = (unint64_t)v14;
    while (1)
    {
      v15 = v6;
      v16 = *(_QWORD *)v5;
      v17 = *((_DWORD *)v5 + 2);
      v18 = *((_QWORD *)v5 + 2);
      v52 = v5;
      v19 = *((unsigned int *)v5 + 6);
      v20 = *(_QWORD *)v4;
      v21 = *((_DWORD *)v4 + 2);
      v22 = *((_QWORD *)v4 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v23 = static MailboxName.stableOrderCompare(_:_:)(v18, v19, v22);
      if (v23 == 1)
        break;
      if (v23)
      {
        if (v23 != -1)
          goto LABEL_56;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = v15;
      }
      else
      {
        v24 = static MailboxName.stableOrder(_:_:)(v16, v17, v20, v21);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = v15;
        if (!v24)
          goto LABEL_17;
      }
      v26 = v52;
      v5 = v52 + 32;
      if (v25 != v52)
        goto LABEL_18;
LABEL_19:
      v6 = v25 + 32;
      v14 = (char *)v50;
      if ((unint64_t)v4 >= v50 || (unint64_t)v5 >= a3)
        goto LABEL_51;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = v15;
LABEL_17:
    v26 = v4;
    v27 = v25 == v4;
    v4 += 32;
    v5 = v52;
    if (v27)
      goto LABEL_19;
LABEL_18:
    v28 = *((_OWORD *)v26 + 1);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v28;
    goto LABEL_19;
  }
LABEL_51:
  v5 = v6;
LABEL_52:
  v44 = (v14 - v4 + (v14 - v4 < 0 ? 0x1FuLL : 0)) & 0xFFFFFFFFFFFFFFE0;
  if (v5 != v4 || v5 >= &v4[v44])
    memmove(v5, v4, v44);
  return 1;
}

char *sub_1A584D2CC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B310);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A584D3C4(uint64_t a1)
{
  return sub_1A584D2CC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1A584D3D8(uint64_t a1)
{
  return sub_1A5828398(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1A584D3EC(uint64_t a1)
{
  return sub_1A5828498(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1A584D400(uint64_t a1)
{
  return sub_1A5828AFC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1A584D414(uint64_t a1)
{
  return sub_1A58286A8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1A584D428(uint64_t a1)
{
  return sub_1A58288E4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1A584D43C(uint64_t a1)
{
  return sub_1A5828CF4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A584D450(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;

  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v5 = result;
    v6 = *(_QWORD *)(a4 + 16);
    if (!v6)
    {
LABEL_5:
      *(_QWORD *)(v5 + 8) = a3;
      return result;
    }
    if (v6 <= a3)
    {
      result = swift_arrayInitWithCopy();
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A584D4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  __int128 v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  v6 = *v4;
  v7 = (uint64_t *)(*v4 + 16);
  v8 = *v7;
  if (*v7 >= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a4);
    v12 = swift_allocObject();
    v15 = *(_OWORD *)(v6 + 24);
    *(_QWORD *)(v12 + 16) = v8;
    *(_OWORD *)(v12 + 24) = v15;
    if ((uint64_t)v15 >= 1)
      sub_1A584E148(v12 + 16, v12 + 40, v7, v6 + 40);
  }
  else
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v4;
    sub_1A594A464();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v11 = *(_QWORD *)(v10 + 24);
      __swift_instantiateConcreteTypeFromMangledName_0(a4);
      v12 = swift_allocObject();
      v13 = _swift_stdlib_malloc_size_0((const void *)v12);
      v14 = v13 - 40;
      if (v13 < 40)
        v14 = v13 - 9;
      *(_QWORD *)(v12 + 16) = v14 >> 5;
      *(_QWORD *)(v12 + 24) = v11;
      *(_QWORD *)(v12 + 32) = 0;
      if (v11 >= 1)
      {
        swift_retain();
        sub_1A584DF50(v12 + 16, (char *)(v12 + 40), (_QWORD *)(v10 + 16), (char *)(v10 + 40));
        *(_QWORD *)(v10 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName_0(a4);
      v12 = swift_allocObject();
      v16 = _swift_stdlib_malloc_size_0((const void *)v12);
      v17 = v16 - 40;
      if (v16 < 40)
        v17 = v16 - 9;
      v18 = *(_QWORD *)(v10 + 24);
      *(_QWORD *)(v12 + 16) = v17 >> 5;
      *(_QWORD *)(v12 + 24) = v18;
      *(_QWORD *)(v12 + 32) = 0;
      if (v18 >= 1)
        sub_1A584E06C(v12 + 16, v12 + 40, (_QWORD *)(v10 + 16), v10 + 40);
    }
  }
  result = swift_release();
  *v4 = v12;
  return result;
}

uint64_t sub_1A584D684(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  _BYTE v16[8];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  if (a4 < 1)
    return result;
  v7 = (uint64_t *)result;
  result = *(_QWORD *)(result + 8);
  v8 = result + a4;
  if (__OFADD__(result, a4))
  {
    __break(1u);
    goto LABEL_9;
  }
  v7[1] = v8;
  if (v8 < result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  sub_1A584E220(result, v8, v7, a2, (uint64_t)&v11);
  v15 = v11;
  sub_1A55032A0((uint64_t)&v15, (uint64_t)v16, &qword_1EE7AA950);
  sub_1A55032A0((uint64_t)v16, (uint64_t)&v22, &qword_1EE7AA950);
  v9 = v12;
  v10 = v13;
  if (v14 & 1 | (v13 == 0))
  {
    v9 = 0;
    v10 = 0;
  }
  v17 = v22;
  v18 = *((_QWORD *)&v15 + 1);
  v19 = v9;
  v20 = v10;
  v21 = v14 & 1 | (v13 == 0);
  return sub_1A584D970(a3, a4, &qword_1EE7AA928, &qword_1EE7AA930);
}

_QWORD *sub_1A584D780@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;

  v4 = result[1];
  v3 = result[2];
  v5 = v3 + v4;
  if (__OFADD__(v3, v4))
  {
    __break(1u);
    goto LABEL_24;
  }
  if ((v4 & 0x8000000000000000) == 0)
  {
    v6 = *result;
    v7 = __OFSUB__(v5, *result);
    if (v5 < *result)
      goto LABEL_9;
    v5 -= *result;
    if (!v7)
      goto LABEL_9;
    __break(1u);
  }
  v6 = *result;
  if (v5 < 0)
  {
    v7 = __OFADD__(v5, v6);
    v5 += v6;
    if (v7)
      goto LABEL_26;
  }
LABEL_9:
  if (v4 >= v6)
    goto LABEL_14;
  if (v5 < v3)
  {
    v8 = v3 - v5;
    if (!__OFSUB__(v3, v5))
      goto LABEL_15;
    __break(1u);
LABEL_14:
    v8 = 0;
LABEL_15:
    v9 = 0;
    v3 = 0;
    v10 = 1;
LABEL_22:
    *(_QWORD *)a3 = a2 + 32 * v5;
    *(_QWORD *)(a3 + 8) = v8;
    *(_QWORD *)(a3 + 16) = v9;
    *(_QWORD *)(a3 + 24) = v3;
    *(_BYTE *)(a3 + 32) = v10;
    return result;
  }
  v8 = v6 - v5;
  if (!__OFSUB__(v6, v5))
  {
    if ((v3 & 0x8000000000000000) == 0 && v6 >= v5)
    {
      v10 = v3 == 0;
      if (v3)
        v9 = a2;
      else
        v9 = 0;
      goto LABEL_22;
    }
    goto LABEL_25;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A584D82C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _BYTE v19[24];
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23[8];
  uint64_t v24;
  char v25;

  v5 = *v2;
  v6 = v2[1];
  v7 = v2[2];
  v8 = v2[3];
  v9 = *((_BYTE *)v2 + 32);
  sub_1A55032A0((uint64_t)(v2 + 2), (uint64_t)v19, &qword_1EE7AA940);
  result = sub_1A55032A0((uint64_t)v19, (uint64_t)v23, &qword_1EE7AA940);
  if (v25)
    v11 = 0;
  else
    v11 = v24;
  v12 = v2[1];
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (v13)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v14 <= a1)
  {
    v18 = v9 & 1;
    a1 = v6;
    goto LABEL_26;
  }
  v5 = *v2;
  if (v12 >= a1)
  {
    if (a1 < 0)
    {
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v7 = 0;
    v8 = 0;
    v18 = 1;
LABEL_26:
    *(_QWORD *)a2 = v5;
    *(_QWORD *)(a2 + 8) = a1;
    *(_QWORD *)(a2 + 16) = v7;
    *(_QWORD *)(a2 + 24) = v8;
    *(_BYTE *)(a2 + 32) = v18;
    return result;
  }
  result = sub_1A55032A0((uint64_t)v19, (uint64_t)&v20, &qword_1EE7AA940);
  if ((v22 & 1) == 0)
  {
    v15 = a1 - v12;
    if (!__OFSUB__(a1, v12))
    {
      if ((v15 & 0x8000000000000000) == 0)
      {
        if (v21 >= v15)
          v16 = a1 - v12;
        else
          v16 = v21;
        if (v21 >= 0)
          v17 = v16;
        else
          v17 = a1 - v12;
        if (v15)
          v8 = v17;
        else
          v8 = 0;
        v18 = v8 == 0;
        if (v8)
          v7 = v20;
        else
          v7 = 0;
        a1 = v12;
        goto LABEL_26;
      }
      goto LABEL_30;
    }
    goto LABEL_28;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A584D970(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  __int128 *v4;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  _BYTE v14[8];
  _BYTE v15[24];
  __int128 v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  _BYTE v20[8];
  uint64_t v21;

  sub_1A55032A0((uint64_t)(v4 + 1), (uint64_t)v15, a3);
  result = sub_1A55032A0((uint64_t)v15, (uint64_t)&v16, a3);
  if ((v17 & 1) == 0)
  {
    v18 = v16;
    v13 = *v4;
    v10 = *((_QWORD *)&v13 + 1);
    if ((*((_QWORD *)&v13 + 1) & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      if (a1)
      {
        if (*((_QWORD *)&v13 + 1))
        {
          sub_1A55032A0((uint64_t)&v13, (uint64_t)v14, a4);
          sub_1A55032A0((uint64_t)v14, (uint64_t)&v19, a4);
          result = v19;
          if (v19)
            result = swift_arrayInitWithCopy();
        }
      }
      v11 = a2;
      if (!__OFADD__(v10, a2 - v10))
      {
        if (a2 >= v10)
        {
          if (a1)
          {
            v12 = a2 - v10;
            if (v11 != v10)
            {
              if (*((uint64_t *)&v18 + 1) >= v12)
              {
                sub_1A55032A0((uint64_t)&v18, (uint64_t)v20, a4);
                sub_1A55032A0((uint64_t)v20, (uint64_t)&v21, a4);
                result = v21;
                if (!v21)
                  return result;
                return swift_arrayInitWithCopy();
              }
LABEL_24:
              __break(1u);
              return result;
            }
          }
          return result;
        }
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
    }
    __break(1u);
    goto LABEL_22;
  }
  if (a1 && a2)
  {
    v18 = *v4;
    if (*((uint64_t *)&v18 + 1) >= a2)
    {
      sub_1A55032A0((uint64_t)&v18, (uint64_t)&v21, a4);
      sub_1A55032A0((uint64_t)&v21, (uint64_t)&v13, a4);
      result = v13;
      if (!(_QWORD)v13)
        return result;
      return swift_arrayInitWithCopy();
    }
    goto LABEL_23;
  }
  return result;
}

uint64_t sub_1A584DAFC(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v17 = a1;
  v18 = a2;
  v19 = a3;
  swift_retain();
  v10 = a3[4];
  v11 = a3[3] + v10;
  if (a3[2] >= v11)
  {
    if (v11 < v10)
    {
      __break(1u);
    }
    else if (!__OFSUB__(v11, v10))
    {
      sub_1A584EED0(&a3[4 * v10 + 5], &v17, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t))sub_1A584F130, &v21);
      v12 = v21;
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_17;
  }
  swift_release();
  swift_retain();
  v12 = sub_1A584E328(&v17, a4, a5, a1, a2, a3);
  if (v20 == v18)
  {
    sub_1A55419EC(0);
LABEL_14:
    swift_release();
    return v12;
  }
  if (v20 >= v18 || v20 < v17)
    goto LABEL_18;
  if (v20 < 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v20 < v19[3])
  {
    v13 = v19[4] + v20;
    v14 = v19[2];
    if (v13 < v14)
      v14 = 0;
    v15 = v19[4 * (v13 - v14) + 5];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55419EC(v15);
    if (!v15)
      goto LABEL_14;
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_20:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

_QWORD *sub_1A584DCAC(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  BOOL v32;
  _BYTE v33[24];
  uint64_t v34;
  uint64_t v35;
  char v36;

  v6 = result + 2;
  v5 = result[2];
  v8 = result[3];
  v7 = result[4];
  v9 = v8 + v7;
  if (v5 >= v8 + v7)
  {
    v16 = result[3];
    if (v9 >= v7)
    {
      if (!__OFSUB__(v9, v7))
      {
        if (!v8)
          return (_QWORD *)v16;
        if (v8 <= a3)
        {
          if (a2)
            swift_arrayInitWithCopy();
          return (_QWORD *)v16;
        }
        goto LABEL_52;
      }
      goto LABEL_49;
    }
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v10 = __OFSUB__(v5, v7);
  v11 = v5 - v7;
  if (v10)
  {
    __break(1u);
    goto LABEL_48;
  }
  v12 = (uint64_t)result;
  if (v11 < v8)
  {
    v14 = v8 - v11;
    if (__OFSUB__(v8, v11))
    {
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    v15 = v11;
    v13 = result + 5;
  }
  else
  {
    v13 = 0;
    v14 = 0;
    v15 = result[3];
  }
  v31[0] = v13;
  v31[1] = v14;
  v32 = v11 >= v8;
  if (v15 >= a3)
    v16 = a3;
  else
    v16 = v15;
  if (v16 < 0)
    goto LABEL_50;
  if (v16)
    v17 = a3;
  else
    v17 = 0;
  if (v17 >= v15)
    v18 = v15;
  else
    v18 = v17;
  if (v18 < 0)
    goto LABEL_51;
  sub_1A584EB78(0, v18, (uint64_t)&result[4 * v7 + 5], v15, 0, v16, a2);
  if (v15 >= a3
    || (sub_1A55032A0((uint64_t)v31, (uint64_t)v33, &qword_1EE7AA948),
        result = (_QWORD *)sub_1A55032A0((uint64_t)v33, (uint64_t)&v34, &qword_1EE7AA948),
        (v36 & 1) != 0))
  {
    v19 = sub_1A584F4CC(v6, v16, v12);
    v21 = v20;
    v23 = v22;
LABEL_40:
    swift_retain();
    if (v21 != v23 || (sub_1A584EDF0() & 1) != 0)
    {
      v30 = v19[4 * v21 + 5];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55419EC(v30);
      if (!v30)
      {
LABEL_45:
        swift_release();
        return (_QWORD *)v16;
      }
      __break(1u);
    }
    sub_1A55419EC(0);
    goto LABEL_45;
  }
  v24 = a3 - v16;
  if (a3 - v16 >= v35)
    v25 = v35;
  else
    v25 = a3 - v16;
  v26 = v16 + v25;
  if (__OFADD__(v16, v25))
    goto LABEL_54;
  if (v26 < v16)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (v25 < 0)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (!v25)
    v24 = 0;
  if (v24 >= v35)
    v27 = v35;
  else
    v27 = v24;
  if ((v27 & 0x8000000000000000) == 0)
  {
    sub_1A584EB78(0, v27, v34, v35, v16, v16 + v25, a2);
    v19 = sub_1A584F4CC(v6, v26, v12);
    v21 = v28;
    v23 = v29;
    v16 = v26;
    goto LABEL_40;
  }
LABEL_57:
  __break(1u);
  return result;
}

void sub_1A584DF50(int a1, char *__dst, _QWORD *a3, char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BOOL4 v11;
  _BOOL4 v12;
  BOOL v13;
  char *v14;
  uint64_t v15;
  char *v16;
  size_t v17;
  char *v18;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_28;
  }
  v7 = a3[1];
  if (v5 < v7)
  {
    v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      v9 = *a3 - v4;
      v10 = a4;
      goto LABEL_6;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v10 = 0;
  v8 = 0;
  v9 = a3[1];
LABEL_6:
  v11 = v5 < v7;
  v12 = v8 != 0;
  v13 = v11 && v12;
  if (v11 && v12)
    v14 = v10;
  else
    v14 = 0;
  if (v11 && v12)
    v15 = v8;
  else
    v15 = 0;
  if (v9 < 1)
  {
    v9 = 0;
    goto LABEL_18;
  }
  if (!a4)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v16 = &a4[32 * v4];
  v17 = 32 * v9;
  if (v16 != __dst || &v16[v17] <= __dst)
    memmove(__dst, v16, v17);
LABEL_18:
  if (!v13 || v15 <= 0)
    return;
  if (!v14)
  {
LABEL_30:
    __break(1u);
    return;
  }
  v18 = &__dst[32 * v9];
  if (v18 != v14 || v18 >= &v14[32 * v15])
    memmove(v18, v14, 32 * v15);
}

uint64_t sub_1A584E06C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_17;
  }
  v6 = a3[1];
  if (v5 < v6)
  {
    v7 = v6 - v5;
    if (!__OFSUB__(v6, v5))
    {
      v8 = a4;
      if (v5 < 1)
        goto LABEL_9;
      goto LABEL_7;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = 0;
  v7 = 0;
  if (v6 >= 1)
  {
LABEL_7:
    if (a4)
    {
      result = swift_arrayInitWithCopy();
      goto LABEL_9;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_9:
  if (v5 < v6 && v7 >= 1)
  {
    if (v8)
      return swift_arrayInitWithCopy();
LABEL_19:
    __break(1u);
  }
  return result;
}

uint64_t sub_1A584E148(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_17;
  }
  v6 = a3[1];
  if (v5 >= v6)
  {
    v8 = 0;
    v7 = 0;
    if (v6 < 1)
      goto LABEL_9;
LABEL_7:
    if (a4)
    {
      result = swift_arrayInitWithCopy();
      goto LABEL_9;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v7 = v6 - v5;
  if (__OFSUB__(v6, v5))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = a4;
  if (v5 >= 1)
    goto LABEL_7;
LABEL_9:
  if (v5 < v6 && v7 >= 1)
  {
    if (v8)
      return swift_arrayInitWithCopy();
LABEL_19:
    __break(1u);
  }
  return result;
}

uint64_t sub_1A584E220@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  int v15;
  uint64_t v16;

  v5 = a3[2];
  v6 = v5 + result;
  v7 = *a3;
  if (v5 + result >= *a3)
    v8 = *a3;
  else
    v8 = 0;
  v9 = v5 + a2;
  if (v5 + a2 >= v7)
    v10 = *a3;
  else
    v10 = 0;
  v11 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    v12 = v6 - v8;
    v13 = v9 - v10;
    if (v11)
      v14 = v12 < v13;
    else
      v14 = 1;
    v15 = v14;
    if (v15 == 1)
    {
      v16 = 0;
      v13 = 0;
LABEL_18:
      *(_QWORD *)a5 = a4 + 32 * v12;
      *(_QWORD *)(a5 + 8) = v11;
      *(_QWORD *)(a5 + 16) = v16;
      *(_QWORD *)(a5 + 24) = v13;
      *(_BYTE *)(a5 + 32) = v15;
      return result;
    }
    v11 = v7 - v12;
    if (!__OFSUB__(v7, v12))
    {
      v16 = a4;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A584E298(_QWORD *result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;

  v6 = result[1];
  v7 = result[2];
  v9 = __OFADD__(v7, v6);
  v8 = v7 + v6;
  if (!v9)
  {
    if ((v6 & 0x8000000000000000) == 0)
    {
      v9 = __OFSUB__(v8, *result);
      if (v8 < *result || (v8 -= *result, !v9))
      {
LABEL_9:
        v10 = a2 + 32 * v8;
        *(_QWORD *)v10 = a3;
        *(_DWORD *)(v10 + 8) = a4;
        *(_QWORD *)(v10 + 16) = a5;
        *(_DWORD *)(v10 + 24) = a6;
        v9 = __OFADD__(v6, 1);
        v11 = v6 + 1;
        if (!v9)
        {
          result[1] = v11;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          return (_QWORD *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v8 < 0)
    {
      v9 = __OFADD__(v8, *result);
      v8 += *result;
      if (v9)
        goto LABEL_13;
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1A584E328(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v35[16];
  uint64_t v36;

  v32 = a4;
  v33 = a5;
  v34 = a6;
  result = swift_retain();
  v12 = a6[4];
  v13 = a6[3] + v12;
  if (a6[2] >= v13)
  {
    if (v13 >= v12)
    {
      if (!__OFSUB__(v13, v12))
      {
        sub_1A584EE58(&a6[4 * v12 + 5], &v32, (_QWORD *(*)(__int128 *__return_ptr, _QWORD *, uint64_t))sub_1A584F1A0, (uint64_t)v35);
        a3 = v36;
        result = swift_release();
        v14 = v32;
        v6 = v32 + a3;
        if (!__OFADD__(v32, a3))
        {
          v15 = v33;
          v16 = v34;
          goto LABEL_12;
        }
        goto LABEL_33;
      }
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  result = swift_release();
  v14 = v32;
  v15 = v33;
  v16 = v34;
  if (!a2)
  {
LABEL_6:
    a3 = 0;
    goto LABEL_7;
  }
  if (!a3)
  {
LABEL_7:
    v6 = v32;
LABEL_12:
    *a1 = v14;
    a1[1] = v15;
    a1[2] = (uint64_t)v16;
    a1[3] = v6;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (v33 == v32)
      goto LABEL_6;
    v28 = a1;
    v29 = a3;
    v27 = v33 - v32;
    if (v33 <= v32)
    {
LABEL_26:
      __break(1u);
LABEL_27:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      a1 = v28;
      a3 = v29;
      goto LABEL_12;
    }
    v17 = 0;
    v18 = v34[3];
    v19 = v34[4];
    v20 = v34[2];
    if (v18 <= v32)
      v18 = v32;
    v31 = v32 - v18;
    v21 = 4 * (v19 + v32);
    v30 = v32 - v33 + 1;
    while ((v14 & 0x8000000000000000) == 0)
    {
      if (!(v31 + v17))
        goto LABEL_30;
      if (v14 + v19 >= v20)
        v22 = v20;
      else
        v22 = 0;
      v23 = (uint64_t)&v16[v21 + -4 * v22];
      v24 = *(_QWORD *)(v23 + 40);
      v25 = *(_QWORD *)(v23 + 56);
      v26 = *(_DWORD *)(v23 + 64);
      LODWORD(v23) = *(_DWORD *)(v23 + 48);
      v6 = v14 + v17 + 1;
      *(_QWORD *)a2 = v24;
      *(_DWORD *)(a2 + 8) = v23;
      *(_QWORD *)(a2 + 16) = v25;
      *(_DWORD *)(a2 + 24) = v26;
      if (v29 - 1 == v17)
        goto LABEL_27;
      if (!(v30 + v17))
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v6 = v15;
        a3 = v27;
        a1 = v28;
        goto LABEL_12;
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v6 >= v14)
      {
        ++v17;
        v21 += 4;
        ++v19;
        a2 += 32;
        if (v6 < v15)
          continue;
      }
      goto LABEL_26;
    }
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A584E548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  if (a2 && a4)
  {
    if (a2 >= a4)
      v5 = a4;
    else
      v5 = a2;
    swift_arrayInitWithCopy();
    a1 += 32 * v5;
  }
  return a1;
}

uint64_t sub_1A584E5C4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v16);
    if (v13 == v10)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_38;
    }
    ++v11;
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A584E7BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 32 * v16;
    v21 = *(_QWORD *)v20;
    v22 = *(_DWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    LODWORD(v20) = *(_DWORD *)(v20 + 24);
    *(_QWORD *)v11 = v21;
    *(_DWORD *)(v11 + 8) = v22;
    *(_QWORD *)(v11 + 16) = v23;
    *(_DWORD *)(v11 + 24) = v20;
    if (v13 == v10)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_38;
    }
    v11 += 32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t *sub_1A584E9E4(uint64_t *result, uint64_t a2, uint64_t **a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  _BYTE v21[8];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v3 = result[2];
  v4 = *result;
  v5 = result[1] + v3;
  if (*result < v5)
    return (uint64_t *)(v4 < v5);
  v6 = result[1];
  if (v5 < v3)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (__OFSUB__(v5, v3))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = *a3;
  v8 = (*a3)[3];
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((*a3)[2] >= v9 && (isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if (v6 < 1)
      return (uint64_t *)(v4 < v5);
  }
  else
  {
    sub_1A584D4B8(v9, 0, (uint64_t)&type metadata for MailboxToRename, &qword_1EE7AA910);
    if (v6 < 1)
      return (uint64_t *)(v4 < v5);
  }
  v12 = *a3;
  result = (uint64_t *)(*a3)[3];
  v13 = (uint64_t)result + v6;
  if (__OFADD__(result, v6))
    goto LABEL_19;
  v12[3] = v13;
  if (v13 >= (uint64_t)result)
  {
    sub_1A584E220((uint64_t)result, v13, v12 + 2, (uint64_t)(v12 + 5), (uint64_t)&v16);
    v20 = v16;
    sub_1A55032A0((uint64_t)&v20, (uint64_t)v21, &qword_1EE7AA960);
    sub_1A55032A0((uint64_t)v21, (uint64_t)&v27, &qword_1EE7AA960);
    v14 = v17;
    v15 = v18;
    if (v19 & 1 | (v18 == 0))
    {
      v14 = 0;
      v15 = 0;
    }
    v22 = v27;
    v23 = *((_QWORD *)&v20 + 1);
    v24 = v14;
    v25 = v15;
    v26 = v19 & 1 | (v18 == 0);
    sub_1A584D970(a2 + 32 * v3, v5 - v3, &qword_1EE7AA940, &qword_1EE7AA968);
    return (uint64_t *)(v4 < v5);
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1A584EB78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;

  v7 = a7 + 32 * a5;
  if (!a7)
    v7 = 0;
  if (__OFADD__(result, a2 - result))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (a2 < result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (a3)
  {
    v9 = a2 - result;
    if (a2 != result)
    {
      if (a6 - a5 < v9)
      {
LABEL_16:
        __break(1u);
        return result;
      }
      if (v7)
        swift_arrayInitWithCopy();
    }
  }
  else
  {
    v9 = 0;
  }
  result = a5 + v9;
  if (__OFADD__(a5, v9))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  return result;
}

_QWORD *sub_1A584EC08(_QWORD *result, uint64_t a2, uint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _QWORD v17[2];
  BOOL v18;
  _BYTE v19[24];
  __int128 v20;
  _BYTE v21[8];
  uint64_t v22;
  __int128 v23;
  char v24;
  __int128 v25;
  _BYTE v26[8];
  uint64_t v27;

  v4 = result[2];
  v5 = *result - v4;
  if (__OFSUB__(*result, v4))
  {
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v8 = result[1];
  if (v5 < v8)
  {
    v10 = v8 - v5;
    if (__OFSUB__(v8, v5))
    {
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v11 = *result - v4;
    v9 = a2;
  }
  else
  {
    v9 = 0;
    v10 = 0;
    v11 = result[1];
  }
  *(_QWORD *)&v16 = a2 + 32 * v4;
  *((_QWORD *)&v16 + 1) = v11;
  v17[0] = v9;
  v17[1] = v10;
  v18 = v5 >= v8;
  v20 = v16;
  v12 = v11;
  if (v11 < 0)
    goto LABEL_26;
  v13 = *a3;
  sub_1A55032A0((uint64_t)&v20, (uint64_t)v21, &qword_1EE7AA950);
  result = (_QWORD *)sub_1A55032A0((uint64_t)v21, (uint64_t)&v22, &qword_1EE7AA950);
  if (v22 && v12 && v13)
    result = (_QWORD *)swift_arrayInitWithCopy();
  if (__OFADD__(*a4, v12))
    goto LABEL_27;
  *a4 += v12;
  sub_1A55032A0((uint64_t)v17, (uint64_t)v19, &qword_1EE7AA958);
  result = (_QWORD *)sub_1A55032A0((uint64_t)v19, (uint64_t)&v23, &qword_1EE7AA958);
  if ((v24 & 1) != 0)
    return result;
  v25 = v23;
  v14 = *((_QWORD *)&v23 + 1);
  if (__OFADD__(v12, *((_QWORD *)&v23 + 1)))
    goto LABEL_29;
  if (v12 + *((_QWORD *)&v23 + 1) < v12)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    __break(1u);
    return result;
  }
  if (*a3)
    v15 = *a3 + 32 * v12;
  else
    v15 = 0;
  sub_1A55032A0((uint64_t)&v25, (uint64_t)v26, &qword_1EE7AA950);
  result = (_QWORD *)sub_1A55032A0((uint64_t)v26, (uint64_t)&v27, &qword_1EE7AA950);
  if (v27 && v14)
  {
    if (v15)
      result = (_QWORD *)swift_arrayInitWithCopy();
  }
  if (__OFADD__(*a4, v14))
    goto LABEL_31;
  *a4 += v14;
  return result;
}

uint64_t sub_1A584EDF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 24);
  v2 = *(_QWORD *)(*v0 + 32);
  v6 = __OFADD__(v2, v3);
  v4 = v2 + v3;
  if (v6)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v3 < 0)
  {
LABEL_7:
    if ((v4 & 0x8000000000000000) == 0)
      goto LABEL_9;
    v7 = *(_QWORD *)(v1 + 16);
    v6 = __OFADD__(v4, v7);
    v4 += v7;
    if (!v6)
      goto LABEL_9;
LABEL_14:
    __break(1u);
    return result;
  }
  v5 = *(_QWORD *)(v1 + 16);
  v6 = __OFSUB__(v4, v5);
  v1 = v4 - v5;
  if (v1 < 0 == v6)
  {
    v4 = v1;
    if (v6)
    {
      __break(1u);
      goto LABEL_7;
    }
  }
LABEL_9:
  if (!v4 || v4 == v0[1])
    return 0;
  v0[1] = 0;
  v0[2] = v4;
  return 1;
}

_QWORD *sub_1A584EE58@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X2>, _QWORD *(*a3)(__int128 *__return_ptr, _QWORD *, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v6 = *a2;
  v7 = a2[1];
  v8 = __OFSUB__(v7, *a2);
  v9 = v7 - *a2;
  if (v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  v8 = __OFADD__(v6, v9);
  v10 = v6 + v9;
  if (v8)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v11 = v10 - v6;
  if (v10 < v6)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = &result[4 * v6];
  if (result)
    v13 = v12;
  else
    v13 = 0;
  result = a3(&v15, v13, v11);
  if (!v4)
  {
    v14 = v16;
    *(_OWORD *)a4 = v15;
    *(_QWORD *)(a4 + 16) = v14;
  }
  return result;
}

_QWORD *sub_1A584EED0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X2>, _QWORD *(*a3)(uint64_t *__return_ptr, _QWORD *, uint64_t)@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = *a2;
  v7 = a2[1];
  v8 = __OFSUB__(v7, *a2);
  v9 = v7 - *a2;
  if (v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  v8 = __OFADD__(v6, v9);
  v10 = v6 + v9;
  if (v8)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v11 = v10 - v6;
  if (v10 < v6)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = &result[4 * v6];
  if (result)
    v13 = v12;
  else
    v13 = 0;
  result = a3(&v14, v13, v11);
  if (!v4)
    *a4 = v14;
  return result;
}

uint64_t sub_1A584EF40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t result;

  v1 = *v0;
  v2 = (uint64_t *)(*v0 + 16);
  v3 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA910);
  v4 = swift_allocObject();
  v5 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  if ((uint64_t)v5 >= 1)
    sub_1A584E148(v4 + 16, v4 + 40, v2, v1 + 40);
  result = swift_release();
  *v0 = v4;
  return result;
}

BOOL _s16IMAP2Persistence14RenameRollbackO4StepO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return a2 == a6 && sub_1A578ECF4(a1, a5) && a4 == a8 && sub_1A578ECF4(a3, a7);
}

uint64_t sub_1A584F044(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int64_t v4;
  int64_t v5;
  int v6;

  v4 = a4 >> 1;
  if (a4 >> 1 == a3)
    return 0;
  if ((uint64_t)(a4 >> 1) > a3)
  {
    if (*(unsigned __int8 *)(a2 + a3) == result)
      return a3;
    v5 = a3 + 1;
    while (1)
    {
      if (v4 == v5)
        return 0;
      if (v5 >= v4)
        break;
      v6 = *(unsigned __int8 *)(a2 + v5++);
      if (v6 == result)
        return v5 - 1;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for RenameRollback()
{
  return &type metadata for RenameRollback;
}

ValueMetadata *type metadata accessor for RenameRollback.Step()
{
  return &type metadata for RenameRollback.Step;
}

unint64_t sub_1A584F0E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7AA918;
  if (!qword_1EE7AA918)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7AA920);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0D13000], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7AA918);
  }
  return result;
}

uint64_t sub_1A584F130@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  if (!result)
  {
    v5 = 0;
    goto LABEL_7;
  }
  v5 = a2;
  if (!a2)
  {
LABEL_7:
    *a3 = v5;
    return result;
  }
  if (*(_QWORD *)(v3 + 24) >= a2)
  {
    result = *(_QWORD *)(v3 + 16);
    if (result)
      result = swift_arrayInitWithCopy();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A584F1A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = sub_1A584E548(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
  if (!v4)
  {
    *a3 = result;
    a3[1] = v7;
    a3[2] = v8;
  }
  return result;
}

uint64_t sub_1A584F1D0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6, uint64_t a7, unsigned int a8)
{
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  if (a2 == a8)
  {
    v12 = a1;
    if (sub_1A578ECF4(a1, a7))
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return v12;
    }
  }
  v13 = a8 | ((unint64_t)a8 << 32);
  v14 = *(_QWORD *)(*a5 + 32);
  v15 = *(_QWORD *)(*a5 + 24) + v14;
  if (*(_QWORD *)(*a5 + 16) < v15)
    v15 = *(_QWORD *)(*a5 + 16);
  v36 = *a5;
  v37 = *(_QWORD *)(*a5 + 32);
  v38 = v15;
  v16 = *a5;
  while (1)
  {
    if (v14 != v15)
      goto LABEL_11;
    if ((sub_1A584EDF0() & 1) == 0)
      break;
    v16 = v36;
    v14 = v37;
LABEL_11:
    v17 = v16 + 32 * v14++;
    v37 = v14;
    if ((*(unsigned int *)(v17 + 48) | ((unint64_t)*(unsigned int *)(v17 + 48) << 32)) == v13)
    {
      v12 = *(_QWORD *)(v17 + 40);
      v18 = *(_QWORD *)(v12 + 16);
      if (v18 == *(_QWORD *)(a7 + 16))
      {
        if (!v18)
          goto LABEL_41;
        if (v12 == a7)
        {
          v12 = a7;
          goto LABEL_41;
        }
        if (*(unsigned __int8 *)(v12 + 32) == *(unsigned __int8 *)(a7 + 32))
        {
          if (v18 == 1)
            goto LABEL_41;
          if (*(unsigned __int8 *)(v12 + 33) == *(unsigned __int8 *)(a7 + 33))
          {
            v19 = 0;
            v20 = v18 - 2;
            while (v20 != v19)
            {
              v21 = *(unsigned __int8 *)(v12 + v19 + 34);
              v22 = *(unsigned __int8 *)(a7 + 34 + v19++);
              if (v21 != v22)
                goto LABEL_7;
            }
            goto LABEL_41;
          }
        }
      }
    }
LABEL_7:
    v15 = v38;
  }
  swift_retain();
  swift_release();
  swift_beginAccess();
  v23 = (_QWORD *)*a6;
  v24 = v23[4];
  v25 = v23[3] + v24;
  if (v23[2] < v25)
    v25 = v23[2];
  v34 = v23[4];
  v35 = v25;
  v26 = v23;
  while (1)
  {
    if (v24 == v25)
    {
      if ((sub_1A584EDF0() & 1) == 0)
      {
        swift_retain();
        swift_release();
        return 0;
      }
      v26 = v23;
      v24 = v34;
    }
    v27 = &v26[4 * v24++];
    v34 = v24;
    if ((*((unsigned int *)v27 + 12) | ((unint64_t)*((unsigned int *)v27 + 12) << 32)) == v13)
    {
      v12 = v27[5];
      v28 = *(_QWORD *)(v12 + 16);
      if (v28 == *(_QWORD *)(a7 + 16))
      {
        if (!v28)
          goto LABEL_41;
        if (v12 == a7)
        {
          v12 = a7;
          goto LABEL_41;
        }
        if (*(unsigned __int8 *)(v12 + 32) == *(unsigned __int8 *)(a7 + 32))
        {
          if (v28 == 1)
            goto LABEL_41;
          if (*(unsigned __int8 *)(v12 + 33) == *(unsigned __int8 *)(a7 + 33))
            break;
        }
      }
    }
LABEL_25:
    v25 = v35;
  }
  v29 = 0;
  v30 = v28 - 2;
  while (v30 != v29)
  {
    v31 = *(unsigned __int8 *)(v12 + v29 + 34);
    v32 = *(unsigned __int8 *)(a7 + 34 + v29++);
    if (v31 != v32)
      goto LABEL_25;
  }
LABEL_41:
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_release();
  return v12;
}

uint64_t *sub_1A584F4CC(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  v4 = result[1];
  v3 = result[2];
  v5 = *result;
  if (v4 == a2)
    return (uint64_t *)a3;
  v6 = v3 + v4;
  if (__OFADD__(v3, v4))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      v7 = __OFSUB__(v6, v5);
      if (v6 < v5)
        return (uint64_t *)a3;
      v6 -= v5;
      if (!v7)
        return (uint64_t *)a3;
      __break(1u);
    }
    if ((v6 & 0x8000000000000000) == 0 || !__OFADD__(v6, v5))
      return (uint64_t *)a3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A584F53C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v49;
  int64_t v50;
  char *v51;
  uint64_t v52;
  int64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v4 = type metadata accessor for ConnectionStatus.Error(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798640);
  MEMORY[0x1E0C80A78](v58);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Activity.MailboxStatus(0);
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  MEMORY[0x1E0C80A78](v9);
  v54 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v55 = (char *)&v49 - v12;
  MEMORY[0x1E0C80A78](v13);
  v62 = (uint64_t)&v49 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v49 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B898);
  MEMORY[0x1E0C80A78](v18);
  v20 = (uint64_t *)((char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v21);
  v23 = (uint64_t *)((char *)&v49 - v22);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v59 = 0;
  v56 = a1;
  v57 = v17;
  v24 = *(_QWORD *)(a1 + 64);
  v51 = v6;
  v52 = a1 + 64;
  v25 = 1 << *(_BYTE *)(a1 + 32);
  v26 = -1;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  v53 = (unint64_t)(v25 + 63) >> 6;
  v50 = v53 - 1;
  if ((v26 & v24) != 0)
  {
    v27 = __clz(__rbit64(v26 & v24)) | (v59 << 6);
LABEL_7:
    v28 = (uint64_t *)(*(_QWORD *)(v56 + 48) + 16 * v27);
    v29 = *v28;
    v30 = v28[1];
    v31 = *(_QWORD *)(v56 + 56) + *(_QWORD *)(v60 + 72) * v27;
    v32 = __swift_instantiateConcreteTypeFromMangledName_0(qword_1EE7A04D0);
    sub_1A58532CC(v31, (uint64_t)v20 + *(int *)(v32 + 48));
    *v20 = v29;
    v20[1] = v30;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v20, 0, 1, v32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_26;
  }
  v33 = v59 + 1;
  if (__OFADD__(v59, 1))
  {
    __break(1u);
LABEL_34:
    __break(1u);
    JUMPOUT(0x1A584FB74);
  }
  if (v33 < v53)
  {
    v34 = *(_QWORD *)(v52 + 8 * v33);
    if (v34)
    {
LABEL_11:
      v27 = __clz(__rbit64(v34)) + (v33 << 6);
      v59 = v33;
      goto LABEL_7;
    }
    v35 = v59 + 2;
    ++v59;
    if (v33 + 1 < v53)
    {
      v34 = *(_QWORD *)(v52 + 8 * v35);
      if (v34)
      {
LABEL_14:
        v33 = v35;
        goto LABEL_11;
      }
      v59 = v33 + 1;
      if (v33 + 2 < v53)
      {
        v34 = *(_QWORD *)(v52 + 8 * (v33 + 2));
        if (v34)
        {
          v33 += 2;
          goto LABEL_11;
        }
        v35 = v33 + 3;
        v59 = v33 + 2;
        if (v33 + 3 < v53)
        {
          v34 = *(_QWORD *)(v52 + 8 * v35);
          if (v34)
            goto LABEL_14;
          while (1)
          {
            v33 = v35 + 1;
            if (__OFADD__(v35, 1))
              goto LABEL_34;
            if (v33 >= v53)
              break;
            v34 = *(_QWORD *)(v52 + 8 * v33);
            ++v35;
            if (v34)
              goto LABEL_11;
          }
          v59 = v50;
        }
      }
    }
  }
  v36 = __swift_instantiateConcreteTypeFromMangledName_0(qword_1EE7A04D0);
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v20, 1, 1, v36);
LABEL_26:
  sub_1A5853310((uint64_t)v20, (uint64_t)v23);
  v37 = __swift_instantiateConcreteTypeFromMangledName_0(qword_1EE7A04D0);
  v38 = 1;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v23, 1, v37) != 1)
  {
    v39 = (uint64_t)v23 + *(int *)(v37 + 48);
    v40 = *v23;
    v41 = v23[1];
    sub_1A54E3394(v39, (uint64_t)v17, type metadata accessor for Activity.MailboxStatus);
    v42 = sub_1A5816C08(v40, v41);
    v44 = v43;
    swift_bridgeObjectRelease();
    if ((v44 & 1) != 0)
    {
      v45 = v62;
      sub_1A58532CC(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v60 + 72) * v42, v62);
      v46 = (uint64_t)&v8[*(int *)(v58 + 48)];
      sub_1A58532CC(v45, (uint64_t)v8);
      sub_1A58532CC((uint64_t)v17, v46);
      v47 = (char *)&loc_1A584F9D4 + dword_1A584FB74[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    sub_1A55034FC((uint64_t)v17, type metadata accessor for Activity.MailboxStatus);
    return 0;
  }
  return v38;
}

uint64_t sub_1A584FB84(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v25 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v26 = (unint64_t)(v5 + 63) >> 6;
  v27 = result;
  while (v7)
  {
    v28 = (v7 - 1) & v7;
    v29 = v4;
    v8 = __clz(__rbit64(v7)) | (v4 << 6);
LABEL_24:
    v13 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v8);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(v3 + 56) + 24 * v8;
    v17 = *(_DWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(unsigned __int8 *)(v16 + 16);
    v20 = *(unsigned __int8 *)(v16 + 17);
    sub_1A54E42B4(*v13, v15);
    v21 = sub_1A5816C68(v14, v15);
    v23 = v22;
    sub_1A54E46E8(v14, v15);
    if ((v23 & 1) == 0)
      return 0;
    v24 = *(_QWORD *)(a2 + 56) + 24 * v21;
    if (v17 != *(_DWORD *)v24)
      return 0;
    if (*(_BYTE *)(v24 + 16) == 1)
    {
      result = 0;
      if (!v19)
        return result;
    }
    else
    {
      if ((v19 & 1) != 0)
        return 0;
      result = 0;
      if (*(_QWORD *)(v24 + 8) != v18)
        return result;
    }
    v3 = v27;
    v7 = v28;
    v4 = v29;
    if (((v20 ^ *(unsigned __int8 *)(v24 + 17)) & 1) != 0)
      return result;
  }
  v9 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v9 >= v26)
    return 1;
  v10 = *(_QWORD *)(v25 + 8 * v9);
  v11 = v4 + 1;
  if (v10)
    goto LABEL_23;
  v11 = v9 + 1;
  if (v9 + 1 >= v26)
    return 1;
  v10 = *(_QWORD *)(v25 + 8 * v11);
  if (v10)
    goto LABEL_23;
  v11 = v9 + 2;
  if (v9 + 2 >= v26)
    return 1;
  v10 = *(_QWORD *)(v25 + 8 * v11);
  if (v10)
  {
LABEL_23:
    v28 = (v10 - 1) & v10;
    v29 = v11;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
    goto LABEL_24;
  }
  v12 = v9 + 3;
  if (v12 >= v26)
    return 1;
  v10 = *(_QWORD *)(v25 + 8 * v12);
  if (v10)
  {
    v11 = v12;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v26)
      return 1;
    v10 = *(_QWORD *)(v25 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_23;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A584FDC4(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  int32x2_t *v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  int32x2_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v5 = 0;
  v32 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v33 = (unint64_t)(v6 + 63) >> 6;
  v34 = result;
  while (1)
  {
    if (v8)
    {
      v35 = (v8 - 1) & v8;
      v36 = v5;
      v9 = __clz(__rbit64(v8)) | (v5 << 6);
      goto LABEL_22;
    }
    v10 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v10 >= v33)
      return 1;
    v11 = *(_QWORD *)(v32 + 8 * v10);
    v12 = v5 + 1;
    if (!v11)
    {
      v12 = v5 + 2;
      if (v5 + 2 >= v33)
        return 1;
      v11 = *(_QWORD *)(v32 + 8 * v12);
      if (!v11)
      {
        v12 = v5 + 3;
        if (v5 + 3 >= v33)
          return 1;
        v11 = *(_QWORD *)(v32 + 8 * v12);
        if (!v11)
          break;
      }
    }
LABEL_21:
    v35 = (v11 - 1) & v11;
    v36 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_22:
    v14 = 16 * v9;
    v15 = *(_QWORD *)(result + 48) + v14;
    v16 = *(_QWORD *)v15;
    v17 = *(_DWORD *)(v15 + 8);
    v18 = *(_QWORD *)(result + 56) + v14;
    v19 = *(int32x2_t **)v18;
    v20 = *(unsigned int *)(v18 + 8);
    v21 = *(_BYTE *)(v18 + 12);
    v22 = v21;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334((uint64_t)v19, v20, v21);
    v23 = sub_1A5816CE4(v16, v17);
    v25 = v24;
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {
      sub_1A54E3458((uint64_t)v19, v20, v22);
      return 0;
    }
    v26 = *(_QWORD *)(a2 + 56) + 16 * v23;
    v27 = *(int32x2_t **)v26;
    v28 = *(unsigned int *)(v26 + 8);
    v29 = *(unsigned __int8 *)(v26 + 12);
    sub_1A54E4334(*(_QWORD *)v26, v28, *(_BYTE *)(v26 + 12));
    sub_1A581596C();
    v3 = v3 & 0xFFFFFF0000000000 | v28 | (v29 << 32);
    v2 = v2 & 0xFFFFFF0000000000 | v20 | (v22 << 32);
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v27, v3, v19, v2);
    v31 = v30;
    sub_1A54E3458((uint64_t)v27, v28, v29);
    sub_1A54E3458((uint64_t)v19, v20, v22);
    result = v34;
    v8 = v35;
    v5 = v36;
    if ((v31 & 1) == 0)
      return 0;
  }
  v13 = v5 + 4;
  if (v5 + 4 >= v33)
    return 1;
  v11 = *(_QWORD *)(v32 + 8 * v13);
  if (v11)
  {
    v12 = v5 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v33)
      return 1;
    v11 = *(_QWORD *)(v32 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A5850050(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  _DWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  int64_t v37;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v35 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v36 = (unint64_t)(v5 + 63) >> 6;
  while (v7)
  {
    v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v37 = v4;
    v10 = v9 | (v4 << 6);
LABEL_26:
    v15 = *(_QWORD *)(v3 + 48) + 16 * v10;
    v16 = *(_QWORD *)v15;
    v17 = *(_DWORD *)(v15 + 8);
    v18 = *(_QWORD *)(v3 + 56) + 24 * v10;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_BYTE *)(v18 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = sub_1A5816CE4(v16, v17);
    v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0
      || (v25 = *(_QWORD *)(a2 + 56) + 24 * v22,
          v26 = *(_DWORD **)v25,
          v27 = *(_QWORD *)(*(_QWORD *)v25 + 16),
          v27 != *(_QWORD *)(v19 + 16)))
    {
LABEL_44:
      swift_bridgeObjectRelease();
      return 0;
    }
    v28 = *(_QWORD *)(v25 + 8);
    v29 = *(_BYTE *)(v25 + 16);
    if (v27)
      v30 = v26 == (_DWORD *)v19;
    else
      v30 = 1;
    if (!v30)
    {
      if (*(_DWORD *)(v19 + 32) != v26[8] || *(_DWORD *)(v19 + 36) != v26[9])
        goto LABEL_44;
      v31 = v27 - 1;
      if (v31)
      {
        if (*(_DWORD *)(v19 + 40) != v26[10] || *(_DWORD *)(v19 + 44) != v26[11])
          goto LABEL_44;
        v32 = 0;
        while (--v31)
        {
          v33 = &v26[v32];
          v34 = v19 + v32 * 4;
          if (*(_DWORD *)(v19 + v32 * 4 + 48) == v26[v32 + 12])
          {
            v32 += 2;
            if (*(_DWORD *)(v34 + 52) == v33[13])
              continue;
          }
          goto LABEL_44;
        }
      }
    }
    result = swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
    {
      v4 = v37;
      if ((v21 & 1) == 0)
        return 0;
    }
    else
    {
      if (v28 == v20)
        v8 = v21;
      else
        v8 = 1;
      v4 = v37;
      if ((v8 & 1) != 0)
        return 0;
    }
  }
  v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v11 >= v36)
    return 1;
  v12 = *(_QWORD *)(v35 + 8 * v11);
  v13 = v4 + 1;
  if (v12)
    goto LABEL_25;
  v13 = v4 + 2;
  if (v4 + 2 >= v36)
    return 1;
  v12 = *(_QWORD *)(v35 + 8 * v13);
  if (v12)
    goto LABEL_25;
  v13 = v4 + 3;
  if (v4 + 3 >= v36)
    return 1;
  v12 = *(_QWORD *)(v35 + 8 * v13);
  if (v12)
  {
LABEL_25:
    v7 = (v12 - 1) & v12;
    v37 = v13;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    goto LABEL_26;
  }
  v14 = v4 + 4;
  if (v4 + 4 >= v36)
    return 1;
  v12 = *(_QWORD *)(v35 + 8 * v14);
  if (v12)
  {
    v13 = v4 + 4;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v36)
      return 1;
    v12 = *(_QWORD *)(v35 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_25;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1A5850318(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  unint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v33;
  int64_t v34;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  int64_t v51;
  unint64_t v52;
  unint64_t v53;

  if (a1 == a2)
    return 1;
  v2 = a2;
  v3 = a1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v33 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v34 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v50 = (v7 - 1) & v7;
      v51 = v4;
      v8 = __clz(__rbit64(v7)) | (v4 << 6);
      goto LABEL_25;
    }
    v9 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      JUMPOUT(0x1A58508C4);
    }
    if (v9 >= v34)
      return 1;
    v10 = *(_QWORD *)(v33 + 8 * v9);
    v11 = v4 + 1;
    if (v10)
      goto LABEL_24;
    v11 = v9 + 1;
    if (v9 + 1 >= v34)
      return 1;
    v10 = *(_QWORD *)(v33 + 8 * v11);
    if (v10)
      goto LABEL_24;
    v11 = v9 + 2;
    if (v9 + 2 >= v34)
      return 1;
    v10 = *(_QWORD *)(v33 + 8 * v11);
    if (v10)
      goto LABEL_24;
    v11 = v9 + 3;
    if (v9 + 3 >= v34)
      return 1;
    v10 = *(_QWORD *)(v33 + 8 * v11);
    if (v10)
      goto LABEL_24;
    v12 = v9 + 4;
    if (v12 >= v34)
      return 1;
    v10 = *(_QWORD *)(v33 + 8 * v12);
    if (!v10)
    {
      while (1)
      {
        v11 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_60;
        if (v11 >= v34)
          return 1;
        v10 = *(_QWORD *)(v33 + 8 * v11);
        ++v12;
        if (v10)
          goto LABEL_24;
      }
    }
    v11 = v12;
LABEL_24:
    v50 = (v10 - 1) & v10;
    v51 = v11;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_25:
    v13 = *(_QWORD *)(v3 + 48) + 16 * v8;
    v14 = *(_QWORD *)v13;
    v15 = *(_DWORD *)(v13 + 8);
    v16 = *(_QWORD *)(v3 + 56) + 72 * v8;
    v17 = *(_QWORD *)v16;
    v18 = *(unsigned int *)(v16 + 8);
    v19 = *(unsigned __int8 *)(v16 + 12);
    v20 = *(unsigned __int16 *)(v16 + 14);
    v21 = *(unsigned __int8 *)(v16 + 16);
    v47 = *(_QWORD *)(v16 + 32);
    v48 = *(_QWORD *)(v16 + 24);
    v46 = *(_QWORD *)(v16 + 48);
    v39 = *(_QWORD *)(v16 + 56);
    v40 = *(_QWORD *)(v16 + 40);
    v44 = *(_BYTE *)(v16 + 64);
    v49 = *(_BYTE *)(v16 + 65);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = sub_1A5816CE4(v14, v15);
    v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
      goto LABEL_55;
    v25 = *(_QWORD *)(v2 + 56) + 72 * v22;
    v26 = *(unsigned __int16 *)(v25 + 14);
    v27 = *(unsigned __int8 *)(v25 + 16);
    v45 = *(_QWORD *)(v25 + 24);
    v43 = *(_QWORD *)(v25 + 32);
    v38 = *(_QWORD *)(v25 + 40);
    v42 = *(_QWORD *)(v25 + 48);
    v37 = *(_QWORD *)(v25 + 56);
    v41 = *(_BYTE *)(v25 + 64);
    v28 = *(_BYTE *)(v25 + 65);
    v29 = v52 & 0xFFFFFF0000000000 | *(unsigned int *)(v25 + 8) | ((unint64_t)*(unsigned __int8 *)(v25 + 12) << 32);
    v30 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v52 = v29;
    v53 = v53 & 0xFFFFFF0000000000 | v18 | (v19 << 32);
    if ((static MailboxPath.__derived_struct_equals(_:_:)(v30, v29, v17, v53) & 1) == 0 || v26 != v20)
      goto LABEL_54;
    if ((_DWORD)v27 != 7)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v21 != 7)
      return 0;
    if ((v28 & 1) != 0)
    {
      v3 = a1;
      v2 = a2;
      v7 = v50;
      v4 = v51;
      if ((v49 & 1) == 0)
        return 0;
    }
    else
    {
      v7 = v50;
      v4 = v51;
      if ((v49 & 1) != 0 || v45 != v48)
        return 0;
      if (v43 != v47 || HIDWORD(v43) != HIDWORD(v47))
        return 0;
      if ((v42 & 1) != 0)
      {
        v3 = a1;
        v2 = a2;
        if ((v46 & 1) == 0)
          return 0;
      }
      else
      {
        result = 0;
        v3 = a1;
        v2 = a2;
        if ((v46 & 1) != 0 || v38 != v40)
          return result;
      }
      if ((v41 & 1) != 0)
      {
        if ((v44 & 1) == 0)
          return 0;
      }
      else
      {
        if ((v44 & 1) != 0)
          return 0;
        if ((v37 | v39) < 0)
          goto LABEL_59;
        if (v39 != v37)
          return 0;
      }
    }
  }
  if (v21 != 7)
    __asm { BR              X8 }
LABEL_54:
  swift_bridgeObjectRelease();
LABEL_55:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A58508FC(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11 + 8);
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v11);
    v17 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v18 = sub_1A5816C08(v17, v15);
    v20 = v19;
    result = swift_bridgeObjectRelease();
    if ((v20 & 1) == 0 || *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v18) != v16)
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A5850AA0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v11);
    v16 = sub_1A5816DF4(*(_DWORD *)(*(_QWORD *)(v3 + 48) + 4 * v11));
    if ((v17 & 1) != 0)
    {
      result = sub_1A54ECF6C(*(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v16), v15);
      if ((result & 1) != 0)
        continue;
    }
    return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A5850C20(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int64_t v29;
  _QWORD v30[5];

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v29 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_28:
    v15 = (unsigned __int8 *)(*(_QWORD *)(v3 + 48) + 40 * v11);
    v16 = *((_QWORD *)v15 + 1);
    v17 = *((unsigned int *)v15 + 4);
    v18 = *((_QWORD *)v15 + 3);
    v19 = *((_QWORD *)v15 + 4);
    v20 = *(_QWORD *)(v3 + 56) + 12 * v11;
    v21 = *(_QWORD *)v20;
    v22 = *(_BYTE *)(v20 + 8);
    v30[0] = *v15 | ((unint64_t)*((unsigned int *)v15 + 1) << 32);
    v30[1] = v16;
    v30[2] = v17;
    v30[3] = v18;
    v30[4] = v19;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E42B4(v18, v19);
    v23 = sub_1A5816D48((uint64_t)v30);
    LOBYTE(v19) = v24;
    result = sub_1A55006C0((uint64_t)v30);
    if ((v19 & 1) == 0)
      return 0;
    v25 = *(_QWORD *)(a2 + 56) + 12 * v23;
    v26 = *(_QWORD *)v25;
    if (*(_BYTE *)(v25 + 8) == 1)
    {
      if (v26)
      {
        if (v21)
          v27 = v22;
        else
          v27 = 0;
        if ((v27 & 1) == 0)
          return 0;
      }
      else
      {
        if (v21)
          v9 = 0;
        else
          v9 = v22;
        if ((v9 & 1) == 0)
          return 0;
      }
    }
    else
    {
      if ((v22 & 1) != 0)
        return 0;
      if (v26 != v21 || HIDWORD(v26) != HIDWORD(v21))
        return 0;
    }
  }
  v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v12 >= v29)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v12);
  ++v4;
  if (v13)
    goto LABEL_27;
  v4 = v12 + 1;
  if (v12 + 1 >= v29)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
    goto LABEL_27;
  v4 = v12 + 2;
  if (v12 + 2 >= v29)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
    goto LABEL_27;
  v4 = v12 + 3;
  if (v12 + 3 >= v29)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_27:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_28;
  }
  v14 = v12 + 4;
  if (v14 >= v29)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_27;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v29)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_27;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1A5850E64(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v28 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v29 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v30 = (v6 - 1) & v6;
      v31 = v3;
      v8 = __clz(__rbit64(v6)) | (v3 << 6);
      goto LABEL_28;
    }
    v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v9 >= v29)
      return 1;
    v10 = *(_QWORD *)(v28 + 8 * v9);
    v11 = v3 + 1;
    if (!v10)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v29)
        return 1;
      v10 = *(_QWORD *)(v28 + 8 * v11);
      if (!v10)
      {
        v11 = v3 + 3;
        if (v3 + 3 >= v29)
          return 1;
        v10 = *(_QWORD *)(v28 + 8 * v11);
        if (!v10)
        {
          v11 = v3 + 4;
          if (v3 + 4 >= v29)
            return 1;
          v10 = *(_QWORD *)(v28 + 8 * v11);
          if (!v10)
            break;
        }
      }
    }
LABEL_27:
    v30 = (v10 - 1) & v10;
    v31 = v11;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_28:
    v13 = result;
    v14 = *(_QWORD *)(*(_QWORD *)(result + 48) + 16 * v8 + 8);
    v15 = *(_QWORD *)(result + 56) + 24 * v8;
    v16 = *(_DWORD *)v15;
    v17 = *(unsigned __int8 *)(v15 + 4);
    v18 = *(_QWORD *)(v15 + 8);
    v19 = *(_BYTE *)(v15 + 16);
    v20 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v21 = sub_1A5816C08(v20, v14);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
      return 0;
    v24 = *(_QWORD *)(a2 + 56) + 24 * v21;
    v25 = *(_QWORD *)(v24 + 8);
    v26 = *(_BYTE *)(v24 + 16);
    if ((*(_BYTE *)(v24 + 4) & 1) != 0)
    {
      if (!v17)
        return 0;
    }
    else
    {
      if (*(_DWORD *)v24 == v16)
        v27 = v17;
      else
        v27 = 1;
      if ((v27 & 1) != 0)
        return 0;
    }
    if ((v26 & 1) != 0)
    {
      result = v13;
      v6 = v30;
      v3 = v31;
      if ((v19 & 1) == 0)
        return 0;
    }
    else
    {
      if (v25 == v18)
        v7 = v19;
      else
        v7 = 1;
      result = v13;
      v6 = v30;
      v3 = v31;
      if ((v7 & 1) != 0)
        return 0;
    }
  }
  v12 = v3 + 5;
  if (v3 + 5 >= v29)
    return 1;
  v10 = *(_QWORD *)(v28 + 8 * v12);
  if (v10)
  {
    v11 = v3 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v29)
      return 1;
    v10 = *(_QWORD *)(v28 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_27;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A58510B4(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  int32x2_t *v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  int32x2_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v5 = 0;
  v32 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v33 = (unint64_t)(v6 + 63) >> 6;
  v34 = result;
  while (1)
  {
    if (v8)
    {
      v35 = (v8 - 1) & v8;
      v36 = v5;
      v9 = __clz(__rbit64(v8)) | (v5 << 6);
      goto LABEL_24;
    }
    v10 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v10 >= v33)
      return 1;
    v11 = *(_QWORD *)(v32 + 8 * v10);
    v12 = v5 + 1;
    if (!v11)
    {
      v12 = v5 + 2;
      if (v5 + 2 >= v33)
        return 1;
      v11 = *(_QWORD *)(v32 + 8 * v12);
      if (!v11)
      {
        v12 = v5 + 3;
        if (v5 + 3 >= v33)
          return 1;
        v11 = *(_QWORD *)(v32 + 8 * v12);
        if (!v11)
        {
          v12 = v5 + 4;
          if (v5 + 4 >= v33)
            return 1;
          v11 = *(_QWORD *)(v32 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_23:
    v35 = (v11 - 1) & v11;
    v36 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    v14 = 16 * v9;
    v15 = *(_QWORD *)(result + 48) + v14;
    v16 = *(_QWORD *)v15;
    v17 = *(_DWORD *)(v15 + 8);
    v18 = *(_QWORD *)(result + 56) + v14;
    v19 = *(int32x2_t **)v18;
    v20 = *(unsigned int *)(v18 + 8);
    v21 = *(_BYTE *)(v18 + 12);
    v22 = v21;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334((uint64_t)v19, v20, v21);
    v23 = sub_1A5816CE4(v16, v17);
    v25 = v24;
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {
      sub_1A54E3458((uint64_t)v19, v20, v22);
      return 0;
    }
    v26 = *(_QWORD *)(a2 + 56) + 16 * v23;
    v27 = *(int32x2_t **)v26;
    v28 = *(unsigned int *)(v26 + 8);
    v29 = *(unsigned __int8 *)(v26 + 12);
    sub_1A54E4334(*(_QWORD *)v26, v28, *(_BYTE *)(v26 + 12));
    sub_1A581596C();
    v3 = v3 & 0xFFFFFF0000000000 | v28 | (v29 << 32);
    v2 = v2 & 0xFFFFFF0000000000 | v20 | (v22 << 32);
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v27, v3, v19, v2);
    v31 = v30;
    sub_1A54E3458((uint64_t)v27, v28, v29);
    sub_1A54E3458((uint64_t)v19, v20, v22);
    result = v34;
    v8 = v35;
    v5 = v36;
    if ((v31 & 1) == 0)
      return 0;
  }
  v13 = v5 + 5;
  if (v5 + 5 >= v33)
    return 1;
  v11 = *(_QWORD *)(v32 + 8 * v13);
  if (v11)
  {
    v12 = v5 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v33)
      return 1;
    v11 = *(_QWORD *)(v32 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_1A585135C(int32x2_t *a1, uint64_t a2, int32x2_t *a3, uint64_t a4)
{
  sub_1A581596C();
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(a1, a2 & 0xFFFFFFFFFFLL, a3, a4 & 0xFFFFFFFFFFLL);
}

BOOL static SearchRequest.ID.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

uint64_t SearchRequest.Query.mailboxes.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

double (*SearchRequest.Query.mailboxes.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t SearchRequest.Query.predicate.getter(uint64_t a1, unint64_t a2)
{
  sub_1A58329FC(a2);
  return a2;
}

unint64_t SearchRequest.Query.predicate.setter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5832A60(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

double (*SearchRequest.Query.predicate.modify())(_QWORD)
{
  return nullsub_1;
}

void static SearchRequest.Query.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_1A5850050(a1, a3) & 1) != 0)
    static SearchRequest.Predicate.__derived_enum_equals(_:_:)(a2);
}

void static SearchRequest.Predicate.__derived_enum_equals(_:_:)(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A58514CC(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;

  if (!(a2 >> 60))
  {
    v2 = *(_QWORD *)(a1 + 16);
    v3 = *(_QWORD *)(a1 + 24);
    v4 = *(_QWORD *)(a2 + 16);
    v5 = *(_QWORD *)(a2 + 24);
    sub_1A58329FC(v2);
    sub_1A58329FC(v4);
    sub_1A58329FC(v3);
    sub_1A58329FC(v5);
    if ((((uint64_t (*)(unint64_t, unint64_t))static SearchRequest.Predicate.__derived_enum_equals(_:_:))(v2, v4) & 1) != 0)
    {
      v6 = ((uint64_t (*)(unint64_t, unint64_t))static SearchRequest.Predicate.__derived_enum_equals(_:_:))(v3, v5);
      sub_1A5832A60(v5);
      sub_1A5832A60(v3);
      sub_1A5832A60(v4);
      sub_1A5832A60(v2);
      return v6 & 1;
    }
    sub_1A5832A60(v5);
    sub_1A5832A60(v3);
    sub_1A5832A60(v4);
    sub_1A5832A60(v2);
  }
  return 0;
}

void sub_1A5851794(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = a1[1];
  if ((sub_1A5850050(*a1, *a2) & 1) != 0)
    static SearchRequest.Predicate.__derived_enum_equals(_:_:)(v2);
}

uint64_t sub_1A58517E0(uint64_t a1, uint64_t a2)
{
  return _s16IMAP2Persistence13SearchRequestV4KindO21__derived_enum_equalsySbAE_AEtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

uint64_t SearchRequest.id.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*SearchRequest.id.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SearchRequest.kind.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_1A58329C8(a2, a3);
  return a2;
}

unint64_t SearchRequest.kind.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t result;

  result = sub_1A5832A2C(*(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16));
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

double (*SearchRequest.kind.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static SearchRequest.fetchMessages(id:messages:)(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A58518C4(uint64_t a1, uint64_t a2)
{
  return _s16IMAP2Persistence13SearchRequestV23__derived_struct_equalsySbAC_ACtFZ_0(*(_DWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_DWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16));
}

uint64_t SearchRequest.ID.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*SearchRequest.ID.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SearchRequest.ID.hash(into:)()
{
  return sub_1A594CEAC();
}

uint64_t SearchRequest.ID.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

BOOL static SearchRequest.ID.< infix(_:_:)(unsigned int a1, unsigned int a2)
{
  return a1 < a2;
}

uint64_t SearchRequest.ID.description.getter()
{
  return sub_1A594CC9C();
}

uint64_t SearchRequest.ID.init()()
{
  return 1;
}

uint64_t SearchRequest.ID.next.getter(int a1)
{
  return (a1 + 1);
}

BOOL static SearchRequest.Predicate.Color.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t SearchRequest.Predicate.Color.hash(into:)()
{
  return sub_1A594CE88();
}

uint64_t SearchRequest.Predicate.Color.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t SearchRequest.Predicate.Day.year.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*SearchRequest.Predicate.Day.year.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SearchRequest.Predicate.Day.month.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SearchRequest.Predicate.Day.month.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*SearchRequest.Predicate.Day.month.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SearchRequest.Predicate.Day.day.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t SearchRequest.Predicate.Day.day.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

double (*SearchRequest.Predicate.Day.day.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SearchRequest.Predicate.Day.hash(into:)()
{
  sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CE88();
}

BOOL static SearchRequest.Predicate.Day.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a1 == a4 && a2 == a5 && a3 == a6;
}

uint64_t SearchRequest.Predicate.Day.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A5851B60()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A5851BC8()
{
  sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CE88();
}

void SearchRequest.Predicate.hash(into:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

unint64_t sub_1A5851C40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  sub_1A594CE88();
  sub_1A58329FC(v3);
  sub_1A58329FC(v4);
  ((void (*)(uint64_t, unint64_t))SearchRequest.Predicate.hash(into:))(v2, v3);
  ((void (*)(uint64_t, unint64_t))SearchRequest.Predicate.hash(into:))(v2, v4);
  sub_1A5832A60(v3);
  return sub_1A5832A60(v4);
}

void sub_1A5851DB4()
{
  JUMPOUT(0x1A5851DBCLL);
}

void sub_1A5851DE0()
{
  JUMPOUT(0x1A5851CCCLL);
}

void sub_1A5851DE8()
{
  JUMPOUT(0x1A5851CCCLL);
}

void sub_1A5851DF0()
{
  JUMPOUT(0x1A5851CCCLL);
}

uint64_t SearchRequest.Predicate.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_1A594CE64();
  SearchRequest.Predicate.hash(into:)((uint64_t)v3, a1);
  return sub_1A594CED0();
}

uint64_t sub_1A5851E3C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  SearchRequest.Predicate.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

void sub_1A5851E80(uint64_t a1)
{
  uint64_t *v1;

  SearchRequest.Predicate.hash(into:)(a1, *v1);
}

uint64_t sub_1A5851E88()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  SearchRequest.Predicate.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

void sub_1A5851EC8(uint64_t *a1)
{
  static SearchRequest.Predicate.__derived_enum_equals(_:_:)(*a1);
}

unint64_t static SearchRequest.Predicate.and(_:)(unint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 == 1)
  {
LABEL_9:
    v4 = v1[4];
    v5 = v4;
    goto LABEL_12;
  }
  if (v2)
  {
    v3 = *(_QWORD *)(result + 32 + 8 * v2 - 8);
    v4 = *(_QWORD *)(result + 32 + 8 * (v2 - 2));
    result = swift_allocObject();
    v5 = result;
    *(_QWORD *)(result + 16) = v4;
    *(_QWORD *)(result + 24) = v3;
    if (v2 != 2)
    {
      v11 = v3;
      v6 = (char *)(v1 + 1);
      v1 = &unk_1E4F16298;
      v7 = v2;
      while (v7 - 3 < v2)
      {
        v8 = *(_QWORD *)&v6[8 * v7];
        v9 = swift_allocObject();
        *(_QWORD *)(v9 + 16) = v8;
        *(_QWORD *)(v9 + 24) = v5;
        v10 = v7 - 3;
        if (v7 == 3)
        {
          sub_1A58329FC(v11);
          sub_1A58329FC(v4);
          v4 = v8;
          v5 = v9;
          goto LABEL_12;
        }
        result = sub_1A58329FC(v8);
        --v7;
        v5 = v9;
        if (v2 - 2 < v10)
        {
          __break(1u);
          goto LABEL_9;
        }
      }
      __break(1u);
      goto LABEL_14;
    }
    sub_1A58329FC(v3);
LABEL_12:
    sub_1A58329FC(v4);
    return v5;
  }
LABEL_14:
  __break(1u);
  return result;
}

unint64_t static SearchRequest.Predicate.or(_:)(unint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 == 1)
  {
LABEL_9:
    v4 = v1[4];
    v5 = v4;
    goto LABEL_12;
  }
  if (v2)
  {
    v3 = *(_QWORD *)(result + 32 + 8 * v2 - 8);
    v4 = *(_QWORD *)(result + 32 + 8 * (v2 - 2));
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    *(_QWORD *)(result + 24) = v3;
    v5 = result | 0x8000000000000000;
    if (v2 != 2)
    {
      v6 = (char *)(v1 + 1);
      v1 = &unk_1E4F16298;
      v7 = v2;
      while (v7 - 3 < v2)
      {
        v8 = *(_QWORD *)&v6[8 * v7];
        v9 = swift_allocObject();
        *(_QWORD *)(v9 + 16) = v8;
        *(_QWORD *)(v9 + 24) = v5;
        v5 = v9 | 0x8000000000000000;
        v10 = v7 - 3;
        if (v7 == 3)
        {
          sub_1A58329FC(v3);
          sub_1A58329FC(v4);
          v4 = v8;
          goto LABEL_12;
        }
        result = sub_1A58329FC(v8);
        --v7;
        if (v2 - 2 < v10)
        {
          __break(1u);
          goto LABEL_9;
        }
      }
      __break(1u);
      goto LABEL_14;
    }
    sub_1A58329FC(v3);
LABEL_12:
    sub_1A58329FC(v4);
    return v5;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t SearchRequest.Predicate.Color.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5852144 + 4 * byte_1A59DBC2A[a1]))(6579570, 0xE300000000000000);
}

uint64_t sub_1A5852144()
{
  return 0x65676E61726FLL;
}

uint64_t sub_1A5852158()
{
  return 0x776F6C6C6579;
}

uint64_t sub_1A585216C()
{
  return 0x6E65657267;
}

uint64_t sub_1A5852180()
{
  return 1702194274;
}

uint64_t sub_1A5852190()
{
  return 0x656C70727570;
}

uint64_t sub_1A58521A4()
{
  return 2036429415;
}

uint64_t sub_1A58521B4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A58521DC + 4 * byte_1A59DBC31[*v0]))(6579570, 0xE300000000000000);
}

uint64_t sub_1A58521DC()
{
  return 0x65676E61726FLL;
}

uint64_t sub_1A58521F0()
{
  return 0x776F6C6C6579;
}

uint64_t sub_1A5852204()
{
  return 0x6E65657267;
}

uint64_t sub_1A5852218()
{
  return 1702194274;
}

uint64_t sub_1A5852228()
{
  return 0x656C70727570;
}

uint64_t sub_1A585223C()
{
  return 2036429415;
}

uint64_t SearchRequest.Predicate.Day.description.getter()
{
  uint64_t v1;

  v1 = sub_1A594CC9C();
  sub_1A594B5F8();
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A5852320()
{
  return SearchRequest.Predicate.Day.description.getter();
}

void SearchRequest.Predicate.description.getter(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A585235C(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  sub_1A58329FC(v1);
  sub_1A58329FC(v2);
  v3 = ((uint64_t (*)(unint64_t))SearchRequest.Predicate.description.getter)(v1);
  if (v1 >> 60 == 8)
  {
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    v3 = 40;
  }
  v5 = v3;
  sub_1A594B5F8();
  ((void (*)(unint64_t))SearchRequest.Predicate.description.getter)(v2);
  if (v2 >> 60 == 8)
  {
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
  }
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A5832A60(v2);
  sub_1A5832A60(v1);
  return v5;
}

void sub_1A5852780()
{
  uint64_t *v0;

  SearchRequest.Predicate.description.getter(*v0);
}

uint64_t SearchRequest.RangesToExclude.ranges.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

double (*SearchRequest.RangesToExclude.ranges.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SearchRequest.RangesToExclude.skipForMessageCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SearchRequest.RangesToExclude.skipForMessageCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_BYTE *)(v2 + 16) = a2 & 1;
  return result;
}

double (*SearchRequest.RangesToExclude.skipForMessageCount.modify())(_QWORD)
{
  return nullsub_1;
}

IMAP2Persistence::SearchRequest::RangesToExclude __swiftcall SearchRequest.RangesToExclude.init(ranges:skipForMessageCount:)(Swift::OpaquePointer ranges, Swift::Int_optional skipForMessageCount)
{
  IMAP2Persistence::SearchRequest::RangesToExclude result;

  skipForMessageCount.is_nil &= 1u;
  result.skipForMessageCount = skipForMessageCount;
  result.ranges = ranges;
  return result;
}

uint64_t static SearchRequest.RangesToExclude.__derived_struct_equals(_:_:)(int32x2_t *a1, uint64_t a2, char a3, int32x2_t *a4, uint64_t a5, char a6)
{
  char v10;

  sub_1A5537EF0(a1, a4);
  if ((v10 & 1) != 0)
  {
    if ((a3 & 1) != 0)
    {
      if ((a6 & 1) != 0)
        return 1;
    }
    else if ((a6 & 1) == 0 && a2 == a5)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1A5852854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  int v5;
  char v6;
  char v8;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1A5537EF0(*(int32x2_t **)a1, *(int32x2_t **)a2);
  if ((v6 & 1) != 0)
  {
    if ((v3 & 1) != 0)
    {
      if (v5)
        return 1;
    }
    else
    {
      if (v2 == v4)
        v8 = v5;
      else
        v8 = 1;
      if ((v8 & 1) == 0)
        return 1;
    }
  }
  return 0;
}

uint64_t _s16IMAP2Persistence13SearchRequestV4KindO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  char v8;
  char v9;

  if ((a2 & 4) != 0)
  {
    if ((a4 & 4) != 0)
      return sub_1A584FDC4(a1, a3);
  }
  else if ((a4 & 4) == 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A58329FC(a2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A58329FC(a4);
    if ((sub_1A5850050(a1, a3) & 1) != 0)
    {
      static SearchRequest.Predicate.__derived_enum_equals(_:_:)(a2);
      v9 = v8;
      swift_bridgeObjectRelease();
      sub_1A5832A60(a4);
      swift_bridgeObjectRelease();
      sub_1A5832A60(a2);
      if ((v9 & 1) != 0)
        return 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1A5832A60(a4);
      swift_bridgeObjectRelease();
      sub_1A5832A60(a2);
    }
  }
  return 0;
}

uint64_t _s16IMAP2Persistence13SearchRequestV23__derived_struct_equalsySbAC_ACtFZ_0(int a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5, unint64_t a6)
{
  char v10;
  char v11;

  if (a1 != a4)
    return 0;
  if ((a3 & 4) != 0)
  {
    if ((a6 & 4) != 0 && (sub_1A584FDC4(a2, a5) & 1) != 0)
      return 1;
  }
  else if ((a6 & 4) == 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A58329FC(a3);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A58329FC(a6);
    if ((sub_1A5850050(a2, a5) & 1) != 0)
    {
      static SearchRequest.Predicate.__derived_enum_equals(_:_:)(a3);
      v11 = v10;
      swift_bridgeObjectRelease();
      sub_1A5832A60(a6);
      swift_bridgeObjectRelease();
      sub_1A5832A60(a3);
      if ((v11 & 1) != 0)
        return 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1A5832A60(a6);
      swift_bridgeObjectRelease();
      sub_1A5832A60(a3);
    }
  }
  return 0;
}

uint64_t sub_1A5852A9C()
{
  uint64_t v0;

  sub_1A5832A60(*(_QWORD *)(v0 + 16));
  sub_1A5832A60(*(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

unint64_t sub_1A5852ACC()
{
  unint64_t result;

  result = qword_1EE7983D8;
  if (!qword_1EE7983D8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchRequest.ID, &type metadata for SearchRequest.ID);
    atomic_store(result, (unint64_t *)&qword_1EE7983D8);
  }
  return result;
}

unint64_t sub_1A5852B14()
{
  unint64_t result;

  result = qword_1EE7AA970;
  if (!qword_1EE7AA970)
  {
    result = MEMORY[0x1A85B1874]("ͤS?Ȏ\n", &type metadata for SearchRequest.Predicate.Color);
    atomic_store(result, (unint64_t *)&qword_1EE7AA970);
  }
  return result;
}

unint64_t sub_1A5852B5C()
{
  unint64_t result;

  result = qword_1EE7AA978;
  if (!qword_1EE7AA978)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchRequest.Predicate.Day, &type metadata for SearchRequest.Predicate.Day);
    atomic_store(result, (unint64_t *)&qword_1EE7AA978);
  }
  return result;
}

unint64_t sub_1A5852BA4()
{
  unint64_t result;

  result = qword_1EE7AA980;
  if (!qword_1EE7AA980)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchRequest.Predicate, &type metadata for SearchRequest.Predicate);
    atomic_store(result, (unint64_t *)&qword_1EE7AA980);
  }
  return result;
}

unint64_t destroy for SearchRequest(uint64_t a1)
{
  return sub_1A5832A2C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t _s16IMAP2Persistence13SearchRequestVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_1A58329C8(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for SearchRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_1A58329C8(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  sub_1A5832A2C(v5, v6);
  return a1;
}

uint64_t assignWithTake for SearchRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1A5832A2C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchRequest(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 7 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 7);
  v3 = ((*(_DWORD *)(a1 + 16) >> 2) & 1 | (2 * (*(_DWORD *)(a1 + 16) & 3))) ^ 7;
  if (v3 >= 6)
    v3 = -1;
  return v3 + 1;
}

{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 6)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 7;
    if (a3 >= 7)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 7)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (-a2 >> 1) & 3 | (4 * (-a2 & 1));
    }
  }
  return result;
}

{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchRequest()
{
  return &type metadata for SearchRequest;
}

{
  return &type metadata for SearchRequest;
}

unint64_t destroy for SearchRequest.Query(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1A5832A60(*(_QWORD *)(a1 + 8));
}

_QWORD *_s16IMAP2Persistence13SearchRequestV5QueryVwCP_0(_QWORD *a1, _QWORD *a2)
{
  unint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A58329FC(v3);
  a1[1] = v3;
  return a1;
}

_QWORD *assignWithCopy for SearchRequest.Query(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  unint64_t v5;

  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = a2[1];
  sub_1A58329FC(v4);
  v5 = a1[1];
  a1[1] = v4;
  sub_1A5832A60(v5);
  return a1;
}

_QWORD *assignWithTake for SearchRequest.Query(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a1[1];
  a1[1] = a2[1];
  sub_1A5832A60(v4);
  return a1;
}

ValueMetadata *type metadata accessor for SearchRequest.Query()
{
  return &type metadata for SearchRequest.Query;
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchRequest.Kind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_1A58329C8(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

unint64_t destroy for SearchRequest.Kind(uint64_t a1)
{
  return sub_1A5832A2C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *assignWithCopy for SearchRequest.Kind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_1A58329C8(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1A5832A2C(v5, v6);
  return a1;
}

uint64_t *assignWithTake for SearchRequest.Kind(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1A5832A2C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchRequest.Kind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 7 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 7);
  v3 = ((*(_DWORD *)(a1 + 8) >> 2) & 1 | (2 * (*(_DWORD *)(a1 + 8) & 3))) ^ 7;
  if (v3 >= 6)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SearchRequest.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 6)
  {
    *(_QWORD *)result = a2 - 7;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 7)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 7)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (-a2 >> 1) & 3 | (4 * (-a2 & 1));
    }
  }
  return result;
}

uint64_t sub_1A5852FE4(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 8) >> 2) & 1;
}

uint64_t sub_1A5852FF0(uint64_t result)
{
  *(_QWORD *)(result + 8) &= ~4uLL;
  return result;
}

uint64_t sub_1A5853000(uint64_t result, char a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF8 | (4 * (a2 & 1u));
  return result;
}

ValueMetadata *type metadata accessor for SearchRequest.Kind()
{
  return &type metadata for SearchRequest.Kind;
}

ValueMetadata *type metadata accessor for SearchRequest.ID()
{
  return &type metadata for SearchRequest.ID;
}

unint64_t *initializeBufferWithCopyOfBuffer for SearchRequest.Predicate(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1A58329FC(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for SearchRequest.Predicate(unint64_t *a1)
{
  return sub_1A5832A60(*a1);
}

unint64_t *assignWithCopy for SearchRequest.Predicate(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1A58329FC(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1A5832A60(v4);
  return a1;
}

unint64_t *assignWithTake for SearchRequest.Predicate(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1A5832A60(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchRequest.Predicate(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x74 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 116);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x73)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SearchRequest.Predicate(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x73)
  {
    *(_QWORD *)result = a2 - 116;
    if (a3 >= 0x74)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x74)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A5853178(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 60;
  if (v1 <= 0xB)
    return v1;
  else
    return (*a1 >> 3) + 12;
}

_QWORD *sub_1A5853194(_QWORD *result)
{
  *result &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1A58531A4(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 0xC)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 60;
  }
  else
  {
    v2 = 8 * (a2 - 12);
    v3 = 0xC000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for SearchRequest.Predicate()
{
  return &type metadata for SearchRequest.Predicate;
}

uint64_t storeEnumTagSinglePayload for SearchRequest.Predicate.Color(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1A585322C + 4 * byte_1A59DBC55[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1A5853260 + 4 * byte_1A59DBC50[v4]))();
}

uint64_t sub_1A5853260(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5853268(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5853270);
  return result;
}

uint64_t sub_1A585327C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5853284);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1A5853288(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5853290(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchRequest.Predicate.Color()
{
  return &type metadata for SearchRequest.Predicate.Color;
}

ValueMetadata *type metadata accessor for SearchRequest.Predicate.Day()
{
  return &type metadata for SearchRequest.Predicate.Day;
}

ValueMetadata *type metadata accessor for SearchRequest.RangesToExclude()
{
  return &type metadata for SearchRequest.RangesToExclude;
}

uint64_t sub_1A58532CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Activity.MailboxStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5853310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5853358(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798640);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A58533A8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A58533F0()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1A5853430 + dword_1A58534FC[v0 >> 62]))();
}

uint64_t sub_1A5853440()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  if (v4 == BYTE6(v2))
  {
    if (v4 < 1)
    {
      v6 = 1;
    }
    else
    {
      sub_1A54E42B4(v3, v2);
      sub_1A5853FAC(v1, v0);
      v6 = v5;
    }
  }
  else
  {
    v6 = 0;
  }
  sub_1A54E46E8(v1, v0);
  return v6 & 1;
}

void sub_1A585350C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A585354C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A58535E0 + 4 * byte_1A59DC00B[a2]))(0x65766968637261);
}

uint64_t sub_1A58535E0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x65766968637261 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1A594CD38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1A58536CC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A585371C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A5853814 + 4 * byte_1A59DC01B[a2]))(0x64656B72616DLL);
}

uint64_t sub_1A5853814(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64656B72616DLL && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1A594CD38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1A5853968(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 6581810;
  else
    v2 = 7631665;
  if ((a2 & 1) != 0)
    v3 = 6581810;
  else
    v3 = 7631665;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1A594CD38();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

void sub_1A58539D4(uint64_t a1, char a2)
{
  sub_1A594CE64();
  __asm { BR              X10 }
}

uint64_t sub_1A5853A18()
{
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t RemoteMailbox.SpecialUse.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5853AE4 + 4 * byte_1A59DC02B[a1]))(7105633, 0xE300000000000000);
}

uint64_t sub_1A5853AE4()
{
  return 0x65766968637261;
}

uint64_t sub_1A5853AFC()
{
  return 0x737466617264;
}

uint64_t sub_1A5853B10()
{
  return 0x64656767616C66;
}

uint64_t sub_1A5853B28()
{
  return 1802401130;
}

uint64_t sub_1A5853B38()
{
  return 1953391987;
}

uint64_t sub_1A5853B48()
{
  return 0x6873617274;
}

void *static RemoteMailbox.SpecialUse.allCases.getter()
{
  return &unk_1E4E772C0;
}

void sub_1A5853B70(char *a1)
{
  sub_1A585350C(*a1);
}

uint64_t sub_1A5853B7C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s16IMAP2Persistence13RemoteMailboxV10SpecialUseO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1A5853BA8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A5853BD0 + 4 * byte_1A59DC032[*v0]))();
}

void sub_1A5853BD0(_QWORD *a1@<X8>)
{
  *a1 = 0x65766968637261;
  a1[1] = 0xE700000000000000;
}

void sub_1A5853BEC(_QWORD *a1@<X8>)
{
  *a1 = 0x737466617264;
  a1[1] = 0xE600000000000000;
}

void sub_1A5853C04(_QWORD *a1@<X8>)
{
  *a1 = 0x64656767616C66;
  a1[1] = 0xE700000000000000;
}

void sub_1A5853C20(_QWORD *a1@<X8>)
{
  *a1 = 1802401130;
  a1[1] = 0xE400000000000000;
}

void sub_1A5853C34(_QWORD *a1@<X8>)
{
  *a1 = 1953391987;
  a1[1] = 0xE400000000000000;
}

void sub_1A5853C48(_QWORD *a1@<X8>)
{
  *a1 = 0x6873617274;
  a1[1] = 0xE500000000000000;
}

void sub_1A5853C60()
{
  char *v0;

  sub_1A58539D4(0, *v0);
}

void sub_1A5853C6C()
{
  __asm { BR              X10 }
}

uint64_t sub_1A5853CA0()
{
  sub_1A594B1D8();
  return swift_bridgeObjectRelease();
}

void sub_1A5853D2C(uint64_t a1)
{
  char *v1;

  sub_1A58539D4(a1, *v1);
}

void sub_1A5853D34(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4E772C0;
}

void sub_1A5853D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5853DA4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1A5853F88);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_1A5853FAC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5854008()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_1A5853D44((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_1A54E46E8(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1A58541D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1A5949BE8();
  v11 = result;
  if (result)
  {
    result = sub_1A5949C0C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1A5949C00();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1A5853D44(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

uint64_t _s16IMAP2Persistence13RemoteMailboxV10SpecialUseOyAESg12NIOIMAPCore20D4InfoV9AttributeVcfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  UseAttribute.all.unsafeMutableAddressor();
  v0 = sub_1A594B49C();
  v2 = v1;
  if (v0 == sub_1A594B49C() && v2 == v3)
  {
    v6 = 0;
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v5 = sub_1A594CD38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    UseAttribute.archive.unsafeMutableAddressor();
    v8 = sub_1A594B49C();
    v10 = v9;
    if (v8 == sub_1A594B49C() && v10 == v11)
    {
      v6 = 1;
    }
    else
    {
      v12 = sub_1A594CD38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
        v6 = 1;
        goto LABEL_9;
      }
      UseAttribute.drafts.unsafeMutableAddressor();
      v13 = sub_1A594B49C();
      v15 = v14;
      if (v13 == sub_1A594B49C() && v15 == v16)
      {
        v6 = 2;
      }
      else
      {
        v17 = sub_1A594CD38();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
        {
          v6 = 2;
          goto LABEL_9;
        }
        UseAttribute.flagged.unsafeMutableAddressor();
        v18 = sub_1A594B49C();
        v20 = v19;
        if (v18 == sub_1A594B49C() && v20 == v21)
        {
          v6 = 3;
        }
        else
        {
          v22 = sub_1A594CD38();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v22 & 1) != 0)
          {
            v6 = 3;
            goto LABEL_9;
          }
          UseAttribute.junk.unsafeMutableAddressor();
          v23 = sub_1A594B49C();
          v25 = v24;
          if (v23 == sub_1A594B49C() && v25 == v26)
          {
            v6 = 4;
          }
          else
          {
            v27 = sub_1A594CD38();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v27 & 1) != 0)
            {
              v6 = 4;
              goto LABEL_9;
            }
            UseAttribute.sent.unsafeMutableAddressor();
            v28 = sub_1A594B49C();
            v30 = v29;
            if (v28 == sub_1A594B49C() && v30 == v31)
            {
              v6 = 5;
            }
            else
            {
              v32 = sub_1A594CD38();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v32 & 1) != 0)
              {
                v6 = 5;
                goto LABEL_9;
              }
              UseAttribute.trash.unsafeMutableAddressor();
              v33 = sub_1A594B49C();
              v35 = v34;
              v6 = 6;
              if (v33 != sub_1A594B49C() || v35 != v36)
              {
                if ((sub_1A594CD38() & 1) != 0)
                  v6 = 6;
                else
                  v6 = 7;
              }
            }
          }
        }
      }
    }
    goto LABEL_8;
  }
  v6 = 0;
LABEL_9:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t _s16IMAP2Persistence13RemoteMailboxV10SpecialUseO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1A594CB28();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

unint64_t sub_1A5854654()
{
  unint64_t result;

  result = qword_1EE7AA988;
  if (!qword_1EE7AA988)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for RemoteMailbox.SpecialUse, &type metadata for RemoteMailbox.SpecialUse);
    atomic_store(result, (unint64_t *)&qword_1EE7AA988);
  }
  return result;
}

unint64_t sub_1A585469C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7AA990;
  if (!qword_1EE7AA990)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7AA998);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7AA990);
  }
  return result;
}

uint64_t _s10SpecialUseOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1A5854734 + 4 * byte_1A59DC045[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1A5854768 + 4 * byte_1A59DC040[v4]))();
}

uint64_t sub_1A5854768(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5854770(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5854778);
  return result;
}

uint64_t sub_1A5854784(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A585478CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1A5854790(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5854798(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteMailbox.SpecialUse()
{
  return &type metadata for RemoteMailbox.SpecialUse;
}

uint64_t ConnectionStatus.Error.kind.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ConnectionStatus.Error.kind.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

double (*ConnectionStatus.Error.kind.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ConnectionStatus.Error.details.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ConnectionStatus.Error(0);
  return sub_1A54E330C(v1 + *(int *)(v3 + 20), a1, &qword_1EE798518);
}

uint64_t ConnectionStatus.Error.details.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ConnectionStatus.Error(0);
  return sub_1A57A0648(a1, v1 + *(int *)(v3 + 20), &qword_1EE798518);
}

double (*ConnectionStatus.Error.details.modify())(_QWORD)
{
  type metadata accessor for ConnectionStatus.Error(0);
  return nullsub_1;
}

uint64_t ConnectionStatus.Error.backedOffUntil.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ConnectionStatus.Error(0);
  return sub_1A54E330C(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_1EE796478);
}

uint64_t ConnectionStatus.Error.backedOffUntil.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ConnectionStatus.Error(0);
  return sub_1A57A0648(a1, v1 + *(int *)(v3 + 24), (uint64_t *)&unk_1EE796478);
}

double (*ConnectionStatus.Error.backedOffUntil.modify())(_QWORD)
{
  type metadata accessor for ConnectionStatus.Error(0);
  return nullsub_1;
}

uint64_t ConnectionStatus.Error.init(kind:details:backedOffUntil:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = type metadata accessor for ConnectionStatus.Error(0);
  v9 = (uint64_t)&a4[*(int *)(v8 + 20)];
  v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = (uint64_t)&a4[*(int *)(v8 + 24)];
  v12 = sub_1A594A0EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *a4 = a1;
  sub_1A57A0648(a2, v9, &qword_1EE798518);
  return sub_1A57A0648(a3, v11, (uint64_t *)&unk_1EE796478);
}

uint64_t ConnectionStatus.Error.Kind.hash(into:)()
{
  return sub_1A594CE88();
}

BOOL static ConnectionStatus.Error.Kind.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void *static ConnectionStatus.Error.Kind.allCases.getter()
{
  return &unk_1E4E78118;
}

uint64_t ConnectionStatus.Error.Kind.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

void sub_1A5854A64(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4E78118;
}

void ConnectionStatus.Error.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for ConnectionStatus.Error.Details(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v22 = (uint64_t)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - v6;
  v8 = sub_1A594A0EC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v21 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798530);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ConnectionStatus.Error(0);
  v18 = v1 + *(int *)(v17 + 24);
  v19 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1A54E330C(v1 + *(int *)(v17 + 20), (uint64_t)v16, &qword_1EE798518);
  sub_1A54E330C(v18, v19, (uint64_t *)&unk_1EE796478);
  LODWORD(v18) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v16, 1, v2);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v19, 1, v8);
  if ((_DWORD)v18 == 1)
  {
    if (v20 == 1)
    {
      v23 = 0;
      v24 = 0xE000000000000000;
      __asm { BR              X10 }
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v13, v19, v8);
    v23 = 0;
    v24 = 0xE000000000000000;
    sub_1A594C720();
    __asm { BR              X10 }
  }
  if (v20 == 1)
  {
    sub_1A54E3394((uint64_t)v16, (uint64_t)v7, type metadata accessor for ConnectionStatus.Error.Details);
    v23 = 0;
    v24 = 0xE000000000000000;
    sub_1A594C720();
    __asm { BR              X10 }
  }
  sub_1A54E3394((uint64_t)v16, v22, type metadata accessor for ConnectionStatus.Error.Details);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v21, v19, v8);
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_1A594C720();
  __asm { BR              X10 }
}

void sub_1A5854DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A594C924();
  sub_1A594B5F8();
  sub_1A58585FC((unint64_t *)&unk_1EE796448, MEMORY[0x1E0CB08F0]);
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  JUMPOUT(0x1A5855128);
}

void sub_1A5854DD0()
{
  JUMPOUT(0x1A5854E28);
}

void sub_1A5854DF4()
{
  JUMPOUT(0x1A5854E28);
}

void sub_1A5854E44()
{
  JUMPOUT(0x1A5854E9CLL);
}

void sub_1A5854E68()
{
  JUMPOUT(0x1A5854E9CLL);
}

void sub_1A5854F0C()
{
  JUMPOUT(0x1A5854F64);
}

void sub_1A5854F30()
{
  JUMPOUT(0x1A5854F64);
}

void sub_1A5854FF4()
{
  JUMPOUT(0x1A585504CLL);
}

void sub_1A5855018()
{
  JUMPOUT(0x1A585504CLL);
}

uint64_t ConnectionStatus.Error.Kind.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A5855190 + 4 * byte_1A59DC158[a1]))(0xD000000000000011, 0x80000001A5A13950);
}

uint64_t sub_1A5855190()
{
  return 0x7245726576726573;
}

uint64_t sub_1A58551F8()
{
  unsigned __int8 *v0;

  return ConnectionStatus.Error.Kind.description.getter(*v0);
}

void ConnectionStatus.Error.Details.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = sub_1A594ACEC();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for ConnectionStatus.Error.Details(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1A55034B8(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1A58552C8 + 4 * byte_1A59DC15E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A58552C8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v10;
  const char *v11;
  uint64_t v12;

  v5 = (*(uint64_t (**)(int *, uint64_t))(v3 + 88))(v1, v0);
  if (v5 == *MEMORY[0x1E0CCEB08])
  {
    (*(void (**)(int *, uint64_t))(v3 + 96))(v1, v0);
    v6 = *v1;
    *(_QWORD *)(v4 - 64) = 0;
    *(_QWORD *)(v4 - 56) = 0xE000000000000000;
    sub_1A594C720();
    v7 = *(_QWORD *)(v4 - 56);
    *(_QWORD *)(v4 - 64) = *(_QWORD *)(v4 - 64);
    *(_QWORD *)(v4 - 56) = v7;
    sub_1A594B5F8();
    *(_DWORD *)(v4 - 68) = v6;
    sub_1A594C924();
  }
  else
  {
    if (v5 == *MEMORY[0x1E0CCEAF8])
    {
      (*(void (**)(int *, uint64_t))(v3 + 96))(v1, v0);
      v10 = *v1;
      *(_QWORD *)(v4 - 64) = 0;
      *(_QWORD *)(v4 - 56) = 0xE000000000000000;
      sub_1A594C720();
      swift_bridgeObjectRelease();
      v11 = "networkError(.dns(";
    }
    else
    {
      if (v5 != *MEMORY[0x1E0CCEB00])
      {
        (*(void (**)(uint64_t, int *, uint64_t))(v3 + 32))(v2, v1, v0);
        *(_QWORD *)(v4 - 64) = 0;
        *(_QWORD *)(v4 - 56) = 0xE000000000000000;
        sub_1A594C720();
        v12 = *(_QWORD *)(v4 - 56);
        *(_QWORD *)(v4 - 64) = *(_QWORD *)(v4 - 64);
        *(_QWORD *)(v4 - 56) = v12;
        sub_1A594B5F8();
        sub_1A594C924();
        sub_1A594B5F8();
        v8 = *(_QWORD *)(v4 - 64);
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
        return v8;
      }
      (*(void (**)(int *, uint64_t))(v3 + 96))(v1, v0);
      v10 = *v1;
      *(_QWORD *)(v4 - 64) = 0;
      *(_QWORD *)(v4 - 56) = 0xE000000000000000;
      sub_1A594C720();
      swift_bridgeObjectRelease();
      v11 = "networkError(.tls(";
    }
    *(_QWORD *)(v4 - 64) = 0xD000000000000012;
    *(_QWORD *)(v4 - 56) = (unint64_t)(v11 - 32) | 0x8000000000000000;
    *(_DWORD *)(v4 - 68) = v10;
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
  }
  sub_1A594B5F8();
  return *(_QWORD *)(v4 - 64);
}

uint64_t ConnectionStatus.mailbox.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  unsigned int EnumCaseMultiPayload;
  uint64_t v7;

  v1 = type metadata accessor for ConnectionStatus(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(v0, (uint64_t)v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 2)
    return *(_QWORD *)v3;
  if (EnumCaseMultiPayload - 3 >= 2)
    sub_1A55034FC((uint64_t)v3, type metadata accessor for ConnectionStatus);
  return 0;
}

void _s16IMAP2Persistence16ConnectionStatusO5ErrorV7DetailsO21__derived_enum_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  _QWORD v15[4];

  v4 = sub_1A594ACEC();
  v15[2] = *(_QWORD *)(v4 - 8);
  v15[3] = v4;
  MEMORY[0x1E0C80A78](v4);
  v15[1] = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ConnectionStatus.Error.Details(0);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0580);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v15 + *(int *)(v12 + 48) - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(a1, (uint64_t)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ConnectionStatus.Error.Details);
  sub_1A55034B8(a2, (uint64_t)v13, type metadata accessor for ConnectionStatus.Error.Details);
  v14 = (char *)sub_1A5855864 + 4 * byte_1A59DC162[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A5855864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  sub_1A55034B8(v0, v2, type metadata accessor for ConnectionStatus.Error.Details);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 96) + 8))(v2, *(_QWORD *)(v3 - 88));
    sub_1A5510284(v0, &qword_1EE7A0580);
    v4 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v3 - 104);
    v5 = *(_QWORD *)(v3 - 96);
    v7 = *(_QWORD *)(v3 - 88);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v6, v1, v7);
    v4 = MEMORY[0x1A85AD158](v2, v6);
    v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v8(v6, v7);
    v8(v2, v7);
    sub_1A55034FC(v0, type metadata accessor for ConnectionStatus.Error.Details);
  }
  return v4 & 1;
}

void _s16IMAP2Persistence16ConnectionStatusO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = type metadata accessor for ConnectionStatus.Error(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for ConnectionStatus(0);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AA9B8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v13 + *(int *)(v10 + 48) - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(a1, (uint64_t)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ConnectionStatus);
  sub_1A55034B8(a2, (uint64_t)v11, type metadata accessor for ConnectionStatus);
  v12 = (char *)sub_1A5855C14 + 4 * byte_1A59DC166[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A5855C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v5;

  sub_1A55034B8(v0, v2, type metadata accessor for ConnectionStatus);
  v3 = *(_QWORD *)v2;
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    sub_1A5510284(v0, &qword_1EE7AA9B8);
LABEL_7:
    v5 = 0;
    return v5 & 1;
  }
  if ((*(unsigned int *)(v2 + 8) | ((unint64_t)*(unsigned int *)(v2 + 8) << 32)) != (*(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned int *)(v1 + 8) << 32)))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_10:
    sub_1A55034FC(v0, type metadata accessor for ConnectionStatus);
    goto LABEL_7;
  }
  v4 = sub_1A578ECF4(v3, *(_QWORD *)v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_10;
  sub_1A55034FC(v0, type metadata accessor for ConnectionStatus);
  v5 = 1;
  return v5 & 1;
}

BOOL _s16IMAP2Persistence16ConnectionStatusO5ErrorV23__derived_struct_equalsySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unsigned __int8 *v28;
  int v29;
  unsigned __int8 *v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  unsigned __int8 *v36;
  unsigned int v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 *v70;

  v70 = a2;
  v66 = sub_1A594A0EC();
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v67 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7964D8);
  MEMORY[0x1E0C80A78](v63);
  v65 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796478);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v57 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v57 - v12;
  v14 = type metadata accessor for ConnectionStatus.Error.Details(0);
  v68 = *(_QWORD *)(v14 - 8);
  v69 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798538);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798518);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v57 - v22;
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v57 - v26;
  v28 = a1;
  v29 = *a1;
  v30 = v70;
  if (v29 != *v70)
    return 0;
  v61 = v13;
  v62 = v25;
  v59 = v16;
  v60 = v10;
  v58 = v7;
  v31 = type metadata accessor for ConnectionStatus.Error(0);
  sub_1A54E330C((uint64_t)&v28[*(int *)(v31 + 20)], (uint64_t)v27, &qword_1EE798518);
  v32 = v30;
  sub_1A54E330C((uint64_t)&v30[*(int *)(v31 + 20)], (uint64_t)v23, &qword_1EE798518);
  v33 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_1A54E330C((uint64_t)v27, (uint64_t)v19, &qword_1EE798518);
  sub_1A54E330C((uint64_t)v23, v33, &qword_1EE798518);
  v34 = v69;
  v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  v36 = v28;
  if (v35((uint64_t)v19, 1, v69) != 1)
  {
    v39 = v62;
    sub_1A54E330C((uint64_t)v19, v62, &qword_1EE798518);
    if (v35(v33, 1, v34) != 1)
    {
      v42 = v33;
      v43 = (uint64_t)v59;
      sub_1A54E3394(v42, (uint64_t)v59, type metadata accessor for ConnectionStatus.Error.Details);
      _s16IMAP2Persistence16ConnectionStatusO5ErrorV7DetailsO21__derived_enum_equalsySbAG_AGtFZ_0(v39, v43);
      v45 = v44;
      sub_1A55034FC(v43, type metadata accessor for ConnectionStatus.Error.Details);
      sub_1A5510284((uint64_t)v23, &qword_1EE798518);
      sub_1A5510284((uint64_t)v27, &qword_1EE798518);
      v38 = v67;
      sub_1A55034FC(v39, type metadata accessor for ConnectionStatus.Error.Details);
      sub_1A5510284((uint64_t)v19, &qword_1EE798518);
      if ((v45 & 1) == 0)
        return 0;
      goto LABEL_9;
    }
    sub_1A5510284((uint64_t)v23, &qword_1EE798518);
    sub_1A5510284((uint64_t)v27, &qword_1EE798518);
    sub_1A55034FC(v39, type metadata accessor for ConnectionStatus.Error.Details);
LABEL_7:
    v40 = &qword_1EE798538;
    v41 = (uint64_t)v19;
LABEL_15:
    sub_1A5510284(v41, v40);
    return 0;
  }
  sub_1A5510284((uint64_t)v23, &qword_1EE798518);
  sub_1A5510284((uint64_t)v27, &qword_1EE798518);
  v37 = v35(v33, 1, v34);
  v38 = v67;
  if (v37 != 1)
    goto LABEL_7;
  sub_1A5510284((uint64_t)v19, &qword_1EE798518);
LABEL_9:
  v46 = (uint64_t)v61;
  sub_1A54E330C((uint64_t)&v36[*(int *)(v31 + 24)], (uint64_t)v61, (uint64_t *)&unk_1EE796478);
  v47 = (uint64_t)v60;
  sub_1A54E330C((uint64_t)&v32[*(int *)(v31 + 24)], (uint64_t)v60, (uint64_t *)&unk_1EE796478);
  v48 = v65;
  v49 = v65 + *(int *)(v63 + 48);
  sub_1A54E330C(v46, v65, (uint64_t *)&unk_1EE796478);
  sub_1A54E330C(v47, v49, (uint64_t *)&unk_1EE796478);
  v50 = v64;
  v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
  v52 = v66;
  if (v51(v48, 1, v66) == 1)
  {
    sub_1A5510284(v47, (uint64_t *)&unk_1EE796478);
    sub_1A5510284(v46, (uint64_t *)&unk_1EE796478);
    if (v51(v49, 1, v52) == 1)
    {
      sub_1A5510284(v48, (uint64_t *)&unk_1EE796478);
      return 1;
    }
    goto LABEL_14;
  }
  v53 = (uint64_t)v58;
  sub_1A54E330C(v48, (uint64_t)v58, (uint64_t *)&unk_1EE796478);
  if (v51(v49, 1, v52) == 1)
  {
    sub_1A5510284(v47, (uint64_t *)&unk_1EE796478);
    sub_1A5510284(v46, (uint64_t *)&unk_1EE796478);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v53, v52);
LABEL_14:
    v40 = &qword_1EE7964D8;
    v41 = v48;
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v38, v49, v52);
  sub_1A58585FC((unint64_t *)&qword_1EE796438, MEMORY[0x1E0CB08B8]);
  v55 = sub_1A594B37C();
  v56 = *(void (**)(char *, uint64_t))(v50 + 8);
  v56(v38, v52);
  sub_1A5510284(v47, (uint64_t *)&unk_1EE796478);
  sub_1A5510284(v46, (uint64_t *)&unk_1EE796478);
  v56((char *)v53, v52);
  sub_1A5510284(v48, (uint64_t *)&unk_1EE796478);
  return (v55 & 1) != 0;
}

uint64_t type metadata accessor for ConnectionStatus.Error(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE798540);
}

uint64_t type metadata accessor for ConnectionStatus.Error.Details(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE798500);
}

uint64_t type metadata accessor for ConnectionStatus(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE795DB0);
}

unint64_t sub_1A5856420()
{
  unint64_t result;

  result = qword_1EE7AA9A0;
  if (!qword_1EE7AA9A0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ConnectionStatus.Error.Kind, &type metadata for ConnectionStatus.Error.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7AA9A0);
  }
  return result;
}

unint64_t sub_1A5856468()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7AA9A8;
  if (!qword_1EE7AA9A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7AA9B0);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7AA9A8);
  }
  return result;
}

_DWORD *initializeBufferWithCopyOfBuffer for ConnectionStatus(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  unsigned int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (_DWORD *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v10 = type metadata accessor for ConnectionStatus.Error(0);
      v11 = *(int *)(v10 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for ConnectionStatus.Error.Details(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
      {
        v16 = (char *)&loc_1A5856640 + 4 * byte_1A59DC16B[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798518);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      v17 = *(int *)(v10 + 24);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_1A594A0EC();
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796478);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[2] = a2[2];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for ConnectionStatus(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v3 = type metadata accessor for ConnectionStatus.Error(0);
    v4 = a1 + *(int *)(v3 + 20);
    v5 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v6 = sub_1A594ACEC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
          break;
        case 1u:
          swift_bridgeObjectRelease();
          goto LABEL_8;
        case 2u:
        case 3u:
LABEL_8:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
    }
    v7 = a1 + *(int *)(v3 + 24);
    v8 = sub_1A594A0EC();
    v9 = *(_QWORD *)(v8 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  else if (result <= 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

_DWORD *initializeWithCopy for ConnectionStatus(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = type metadata accessor for ConnectionStatus.Error(0);
    v8 = *(int *)(v7 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      v13 = (char *)&loc_1A58569CC + 4 * byte_1A59DC173[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798518);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    v14 = *(int *)(v7 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1A594A0EC();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796478);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload <= 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1[2] = a2[2];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_DWORD *assignWithCopy for ConnectionStatus(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for ConnectionStatus);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v7 = type metadata accessor for ConnectionStatus.Error(0);
      v8 = *(int *)(v7 + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
      {
        v13 = (char *)&loc_1A5856C4C + 4 * byte_1A59DC177[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798518);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      v14 = *(int *)(v7 + 24);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_1A594A0EC();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796478);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      goto LABEL_12;
    }
    if (EnumCaseMultiPayload <= 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[2] = a2[2];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *initializeWithTake for ConnectionStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    v6 = type metadata accessor for ConnectionStatus.Error(0);
    v7 = *(int *)(v6 + 20);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798518);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v8, v9, *(_QWORD *)(v11 + 64));
      }
      else
      {
        v13 = sub_1A594ACEC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = *(int *)(v6 + 24);
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = sub_1A594A0EC();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796478);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *assignWithTake for ConnectionStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for ConnectionStatus);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      v6 = type metadata accessor for ConnectionStatus.Error(0);
      v7 = *(int *)(v6 + 20);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798518);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v8, v9, *(_QWORD *)(v11 + 64));
        }
        else
        {
          v13 = sub_1A594ACEC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v14 = *(int *)(v6 + 24);
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = sub_1A594A0EC();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796478);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A5857154()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConnectionStatus.Error(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ConnectionStatus.Error(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
    {
      v13 = (char *)&loc_1A58572A0 + 4 * byte_1A59DC17B[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798518);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    v14 = *(int *)(a3 + 24);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1A594A0EC();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796478);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t destroy for ConnectionStatus.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ConnectionStatus.Error.Details(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1A594ACEC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
        break;
      case 1u:
        swift_bridgeObjectRelease();
        goto LABEL_5;
      case 2u:
      case 3u:
LABEL_5:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_1A594A0EC();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

_BYTE *initializeWithCopy for ConnectionStatus.Error(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ConnectionStatus.Error.Details(0);
  if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v11 = (char *)&loc_1A5857570 + 4 * byte_1A59DC183[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798518);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v12 = *(int *)(a3 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1A594A0EC();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796478);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

_BYTE *assignWithCopy for ConnectionStatus.Error(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t (*v10)(_BYTE *, uint64_t, uint64_t);
  int v11;
  int v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_BYTE *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ConnectionStatus.Error.Details(0);
  v10 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  v11 = v10(v7, 1, v9);
  v12 = v10(v8, 1, v9);
  if (v11)
  {
    if (!v12)
    {
      v13 = (char *)&loc_1A585772C + 4 * byte_1A59DC187[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_1A55034FC((uint64_t)v7, type metadata accessor for ConnectionStatus.Error.Details);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798518);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)v7, type metadata accessor for ConnectionStatus.Error.Details);
    v15 = (char *)&loc_1A58577B8 + 4 * byte_1A59DC18B[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_1A594A0EC();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v20 + 24))(v17, v18, v19);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_14;
  }
  if (v23)
  {
LABEL_14:
    v24 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796478);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

void sub_1A585794C()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  v0[2] = v1[2];
  v0[3] = v1[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1A5857864);
}

void sub_1A585798C()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1A5857864);
}

void sub_1A58579B4()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1A5857864);
}

_BYTE *initializeWithTake for ConnectionStatus.Error(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ConnectionStatus.Error.Details(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798518);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(_QWORD *)(v10 + 64));
    }
    else
    {
      v12 = sub_1A594ACEC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1A594A0EC();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796478);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

_BYTE *assignWithTake for ConnectionStatus.Error(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_BYTE *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v26;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ConnectionStatus.Error.Details(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_1A55034FC((uint64_t)v7, type metadata accessor for ConnectionStatus.Error.Details);
      if (!swift_getEnumCaseMultiPayload())
      {
        v26 = sub_1A594ACEC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v7, v8, v26);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v14 = *(_QWORD *)(v10 + 64);
LABEL_8:
      memcpy(v7, v8, v14);
      goto LABEL_14;
    }
    sub_1A55034FC((uint64_t)v7, type metadata accessor for ConnectionStatus.Error.Details);
LABEL_7:
    v14 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798518) - 8) + 64);
    goto LABEL_8;
  }
  if (v13)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  else
  {
    v15 = sub_1A594ACEC();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v7, v8, v15);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_1A594A0EC();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v20 + 40))(v17, v18, v19);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_19;
  }
  if (v23)
  {
LABEL_19:
    v24 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796478);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v20 + 32))(v17, v18, v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectionStatus.Error()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5857DE4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 250)
  {
    v4 = *a1;
    if (v4 >= 6)
      return v4 - 5;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798518);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796478);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionStatus.Error()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1A5857E90(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 250)
  {
    *result = a2 + 5;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798518);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796478);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1A5857F30()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A563F244(319, &qword_1EE798528, (void (*)(uint64_t))type metadata accessor for ConnectionStatus.Error.Details);
  if (v0 <= 0x3F)
  {
    sub_1A563F244(319, &qword_1EE7964C0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionStatus.Error.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A585802C + 4 * byte_1A59DC194[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A5858060 + 4 * byte_1A59DC18F[v4]))();
}

uint64_t sub_1A5858060(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5858068(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5858070);
  return result;
}

uint64_t sub_1A585807C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5858084);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A5858088(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5858090(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionStatus.Error.Kind()
{
  return &type metadata for ConnectionStatus.Error.Kind;
}

uint64_t initializeBufferWithCopyOfBuffer for ConnectionStatus.Error.Details(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1A58580FC + 4 * byte_1A59DC199[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for ConnectionStatus.Error.Details(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_1A594ACEC();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 2:
    case 3:
LABEL_4:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for ConnectionStatus.Error.Details()
{
  char *v0;

  v0 = (char *)sub_1A5858290 + 4 * byte_1A59DC1A1[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A5858290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1A594ACEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for ConnectionStatus.Error.Details(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1A55034FC(result, type metadata accessor for ConnectionStatus.Error.Details);
    v2 = (char *)&loc_1A5858394 + 4 * byte_1A59DC1A5[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void *initializeWithTake for ConnectionStatus.Error.Details(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1A594ACEC();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for ConnectionStatus.Error.Details(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for ConnectionStatus.Error.Details);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1A594ACEC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A5858584()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594ACEC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A58585FC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1A594A0EC();
    result = MEMORY[0x1A85B1874](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A585863C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned __int8 *v27;
  int v28;
  int v29;
  int v30;
  int64_t v31;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v31 = (unint64_t)(v6 + 63) >> 6;
  v9 = a2 + 56;
  while (1)
  {
LABEL_7:
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_23;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v12 >= v31)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v31)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v31)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_22:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_23:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v17 = *v15;
    v16 = v15[1];
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v18 = -1 << *(_BYTE *)(a2 + 32);
    v19 = result & ~v18;
    if (((*(_QWORD *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      return 0;
    v20 = ~v18;
    while (1)
    {
      v21 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v19);
      if (v21[1] == v16)
      {
        v22 = *v21;
        v23 = *(_QWORD *)(v22 + 16);
        if (v23 == *(_QWORD *)(v17 + 16))
        {
          if (v23)
            v24 = v22 == v17;
          else
            v24 = 1;
          if (v24)
            goto LABEL_7;
          if (*(unsigned __int8 *)(v22 + 32) == *(unsigned __int8 *)(v17 + 32))
          {
            if (v23 == 1)
              goto LABEL_7;
            if (*(unsigned __int8 *)(v22 + 33) == *(unsigned __int8 *)(v17 + 33))
            {
              if (v23 == 2)
                goto LABEL_7;
              if (*(unsigned __int8 *)(v22 + 34) == *(unsigned __int8 *)(v17 + 34))
                break;
            }
          }
        }
      }
LABEL_25:
      v19 = (v19 + 1) & v20;
      if (((*(_QWORD *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        return 0;
    }
    v25 = (unsigned __int8 *)(v22 + 35);
    v26 = v23 - 3;
    v27 = (unsigned __int8 *)(v17 + 35);
    while (v26)
    {
      v29 = *v25++;
      v28 = v29;
      v30 = *v27++;
      --v26;
      if (v28 != v30)
        goto LABEL_25;
    }
  }
  v14 = v12 + 3;
  if (v14 >= v31)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v31)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1A58588BC(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  int64_t v24;
  _BYTE v25[72];

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v23 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(result + 56);
  v24 = (unint64_t)(v5 + 63) >> 6;
  v8 = a2 + 56;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_24;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v11 >= v24)
      return 1;
    v12 = *(_QWORD *)(v23 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v24)
        return 1;
      v12 = *(_QWORD *)(v23 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v24)
          return 1;
        v12 = *(_QWORD *)(v23 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_23:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_24:
    v14 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10);
    sub_1A594CE64();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    SectionSpecifier.Part.hash(into:)((uint64_t)v25, v14);
    v15 = sub_1A594CED0();
    v16 = -1 << *(_BYTE *)(a2 + 32);
    v17 = v15 & ~v16;
    if (((*(_QWORD *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
      goto LABEL_31;
    v18 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v19 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v18);
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      v20 = ~v16;
      while (1)
      {
        v17 = (v17 + 1) & v20;
        if (((*(_QWORD *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
          break;
        v21 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v22 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v21);
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
          goto LABEL_7;
      }
LABEL_31:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    result = swift_bridgeObjectRelease();
  }
  v13 = v11 + 3;
  if (v13 >= v24)
    return 1;
  v12 = *(_QWORD *)(v23 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v24)
      return 1;
    v12 = *(_QWORD *)(v23 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1A5858B24(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned __int8 *v27;
  int v28;
  int v29;
  int v30;
  int64_t v31;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v31 = (unint64_t)(v6 + 63) >> 6;
  v9 = a2 + 56;
  while (1)
  {
LABEL_7:
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_25;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    if (v12 >= v31)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v31)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v31)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v31)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_24:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_25:
    v15 = *(_QWORD *)(v3 + 48) + 16 * v11;
    v16 = *(_QWORD *)v15;
    v17 = *(unsigned int *)(v15 + 8);
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v18 = -1 << *(_BYTE *)(a2 + 32);
    v19 = result & ~v18;
    if (((*(_QWORD *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      return 0;
    v20 = ~v18;
    while (1)
    {
      v21 = *(_QWORD *)(a2 + 48) + 16 * v19;
      if ((*(unsigned int *)(v21 + 8) | ((unint64_t)*(unsigned int *)(v21 + 8) << 32)) == (v17 | (v17 << 32)))
      {
        v22 = *(_QWORD *)v21;
        v23 = *(_QWORD *)(v22 + 16);
        if (v23 == *(_QWORD *)(v16 + 16))
        {
          if (v23)
            v24 = v22 == v16;
          else
            v24 = 1;
          if (v24)
            goto LABEL_7;
          if (*(unsigned __int8 *)(v22 + 32) == *(unsigned __int8 *)(v16 + 32))
          {
            if (v23 == 1)
              goto LABEL_7;
            if (*(unsigned __int8 *)(v22 + 33) == *(unsigned __int8 *)(v16 + 33))
            {
              if (v23 == 2)
                goto LABEL_7;
              if (*(unsigned __int8 *)(v22 + 34) == *(unsigned __int8 *)(v16 + 34))
                break;
            }
          }
        }
      }
LABEL_27:
      v19 = (v19 + 1) & v20;
      if (((*(_QWORD *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        return 0;
    }
    v25 = (unsigned __int8 *)(v22 + 35);
    v26 = v23 - 3;
    v27 = (unsigned __int8 *)(v16 + 35);
    while (v26)
    {
      v29 = *v25++;
      v28 = v29;
      v30 = *v27++;
      --v26;
      if (v28 != v30)
        goto LABEL_27;
    }
  }
  v14 = v12 + 4;
  if (v14 >= v31)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v31)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_24;
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_1A5858DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v15;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v3 = 1 << *(_BYTE *)(a1 + 32);
    if (v3 < 64)
      v4 = ~(-1 << v3);
    else
      v4 = -1;
    v5 = v4 & *(_QWORD *)(a1 + 56);
    v15 = (unint64_t)(v3 + 63) >> 6;
    if (v5)
    {
      v6 = __clz(__rbit64(v5));
LABEL_23:
      v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
      v11 = *v10;
      v12 = v10[1];
      sub_1A594CE64();
      sub_1A54E42B4(v11, v12);
      sub_1A54E42B4(v11, v12);
      sub_1A5949F9C();
      sub_1A54E46E8(v11, v12);
      v13 = sub_1A594CED0() & ~(-1 << *(_BYTE *)(a2 + 32));
      if (((*(_QWORD *)(a2 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
        __asm { BR              X8 }
      sub_1A54E46E8(v11, v12);
      return 0;
    }
    if ((unint64_t)(v3 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 64);
      v8 = 1;
      if (v7)
        goto LABEL_22;
      v8 = 2;
      if (v15 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 72);
      if (v7)
        goto LABEL_22;
      v8 = 3;
      if (v15 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_22;
      v8 = 4;
      if (v15 <= 4)
        return 1;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
      {
LABEL_22:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
        goto LABEL_23;
      }
      v9 = 5;
      if (v15 > 5)
      {
        v7 = *(_QWORD *)(a1 + 96);
        if (v7)
        {
          v8 = 5;
          goto LABEL_22;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
            __break(1u);
          if (v8 >= v15)
            break;
          v7 = *(_QWORD *)(a1 + 56 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_22;
        }
      }
    }
    return 1;
  }
  return 0;
}

uint64_t sub_1A5859998(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_24;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v4 = v13 + 3;
    if (v13 + 3 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v15 = v13 + 4;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_35;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_24;
      }
    }
    v4 = v15;
LABEL_24:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    v16 = *(_DWORD *)(*(_QWORD *)(v3 + 48) + 4 * v12);
    sub_1A594CE64();
    sub_1A594CEAC();
    result = sub_1A594CED0();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(_DWORD *)(v19 + 4 * v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(_DWORD *)(v19 + 4 * v18) == v16)
      goto LABEL_7;
  }
}

BOOL static SyncRequest.ID.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

uint64_t static SyncRequest.__derived_struct_equals(_:_:)(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a1 == a3)
  {
    if (a2)
    {
      if (a4 && (sub_1A585863C(a2, a4) & 1) != 0)
        return 1;
    }
    else if (!a4)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t String.init(_:)()
{
  return sub_1A594CC9C();
}

uint64_t SyncRequest.kind.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

double (*SyncRequest.kind.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SyncRequest.mailboxes.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t SyncRequest.mailboxes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

double (*SyncRequest.mailboxes.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SyncRequest.includes(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
    return sub_1A5815FC4(a1, a2, a4);
  else
    return 1;
}

uint64_t SyncRequest.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A594CE88();
  if (!a3)
    return sub_1A594CE94();
  sub_1A594CE94();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5832804(a1, a3);
  return swift_bridgeObjectRelease();
}

BOOL static SyncRequest.Kind.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t SyncRequest.hashValue.getter(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE94();
  if (a2)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5832804((uint64_t)v4, a2);
    swift_bridgeObjectRelease();
  }
  return sub_1A594CED0();
}

uint64_t sub_1A5859D7C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 8);
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE94();
  if (v1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5832804((uint64_t)v3, v1);
    swift_bridgeObjectRelease();
  }
  return sub_1A594CED0();
}

uint64_t sub_1A5859E04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 8);
  sub_1A594CE88();
  if (!v4)
    return sub_1A594CE94();
  sub_1A594CE94();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5832804(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5859E68()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 8);
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE94();
  if (v1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5832804((uint64_t)v3, v1);
    swift_bridgeObjectRelease();
  }
  return sub_1A594CED0();
}

uint64_t sub_1A5859EEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (*a1 == *a2)
  {
    v2 = *((_QWORD *)a1 + 1);
    v3 = *((_QWORD *)a2 + 1);
    if (v2)
    {
      if (v3 && (sub_1A585863C(v2, v3) & 1) != 0)
        return 1;
    }
    else if (!v3)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t SyncRequest.ID.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*SyncRequest.ID.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SyncRequest.ID.init()()
{
  return 1;
}

void *SyncRequest.ID.serverTriggered.unsafeMutableAddressor()
{
  return &static SyncRequest.ID.serverTriggered;
}

uint64_t static SyncRequest.ID.serverTriggered.getter()
{
  return 0;
}

uint64_t SyncRequest.ID.makeNext()(int a1)
{
  if ((a1 + 1) > 1)
    return (a1 + 1);
  else
    return 1;
}

uint64_t SyncRequest.ID.hash(into:)()
{
  return sub_1A594CEAC();
}

uint64_t SyncRequest.ID.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

BOOL SyncRequest.Kind.isBackgroundSync.getter(unsigned __int8 a1)
{
  return a1 < 2u;
}

uint64_t SyncRequest.Kind.hash(into:)()
{
  return sub_1A594CE88();
}

void *static SyncRequest.Kind.allCases.getter()
{
  return &unk_1E4E76E48;
}

uint64_t SyncRequest.Kind.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

void sub_1A585A070(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4E76F00;
}

uint64_t SyncRequest.Kind.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A585A0B4 + 4 * byte_1A59DC3D0[a1]))(0x6369646F69726570, 0xE800000000000000);
}

uint64_t sub_1A585A0B4()
{
  return 1752397168;
}

uint64_t sub_1A585A0C4()
{
  return 0x74696E4972657375;
}

unint64_t sub_1A585A0E8()
{
  return 0xD000000000000015;
}

uint64_t sub_1A585A104()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A585A134 + 4 * byte_1A59DC3D4[*v0]))(0x6369646F69726570, 0xE800000000000000);
}

uint64_t sub_1A585A134()
{
  return 1752397168;
}

uint64_t sub_1A585A144()
{
  return 0x74696E4972657375;
}

unint64_t sub_1A585A168()
{
  return 0xD000000000000015;
}

uint64_t Set<>.makeNonEmpty()(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  else
    return sub_1A585A1EC((uint64_t)&unk_1E4E84CD8);
}

void Set<>.formNonEmpty()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  if (!*(_QWORD *)(*v0 + 16))
  {
    v2 = sub_1A585A1EC((uint64_t)&unk_1E4E84CB0);
    swift_bridgeObjectRelease();
    v1 = v2;
  }
  *v0 = v1;
}

uint64_t sub_1A585A1EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A708);
    v3 = sub_1A594C6E4();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_DWORD *)(v6 + 4 * v4);
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_DWORD *)(v14 + 4 * v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(_DWORD *)(v14 + 4 * v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_DWORD *)(v14 + 4 * v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

unint64_t sub_1A585A330()
{
  unint64_t result;

  result = qword_1EE7AA9C0;
  if (!qword_1EE7AA9C0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SyncRequest, &type metadata for SyncRequest);
    atomic_store(result, (unint64_t *)&qword_1EE7AA9C0);
  }
  return result;
}

unint64_t sub_1A585A378()
{
  unint64_t result;

  result = qword_1EE798370;
  if (!qword_1EE798370)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SyncRequest.ID, &type metadata for SyncRequest.ID);
    atomic_store(result, (unint64_t *)&qword_1EE798370);
  }
  return result;
}

unint64_t sub_1A585A3C0()
{
  unint64_t result;

  result = qword_1EE798378;
  if (!qword_1EE798378)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SyncRequest.Kind, &type metadata for SyncRequest.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE798378);
  }
  return result;
}

unint64_t sub_1A585A408()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7AA9C8;
  if (!qword_1EE7AA9C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7AA9D0);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7AA9C8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SyncRequest(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for SyncRequest(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SyncRequest(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SyncRequest()
{
  return &type metadata for SyncRequest;
}

ValueMetadata *type metadata accessor for SyncRequest.ID()
{
  return &type metadata for SyncRequest.ID;
}

uint64_t storeEnumTagSinglePayload for SyncRequest.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A585A56C + 4 * byte_1A59DC3DD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A585A5A0 + 4 * byte_1A59DC3D8[v4]))();
}

uint64_t sub_1A585A5A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A585A5A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A585A5B0);
  return result;
}

uint64_t sub_1A585A5BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A585A5C4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A585A5C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A585A5D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncRequest.Kind()
{
  return &type metadata for SyncRequest.Kind;
}

uint64_t UIDValidityWith.uidValidity.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t UIDValidityWith.uidValidity.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*UIDValidityWith.uidValidity.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t UIDValidityWith.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t UIDValidityWith.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 28), a1);
}

double (*UIDValidityWith.value.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t UIDValidityWith.init(uidValidity:value:)@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _DWORD *a5@<X8>)
{
  char *v7;

  *a5 = a1;
  v7 = (char *)a5 + *(int *)(type metadata accessor for UIDValidityWith(0, a3, a3, a4) + 28);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v7, a2, a3);
}

uint64_t type metadata accessor for UIDValidityWith(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UIDValidityWith);
}

uint64_t static UIDValidityWith<A>.__derived_struct_equals(_:_:)(_DWORD *a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (*a1 != *a2)
    return 0;
  type metadata accessor for UIDValidityWith(0, a3, a3, a4);
  return sub_1A594B37C() & 1;
}

uint64_t sub_1A585A730(_DWORD *a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  return static UIDValidityWith<A>.__derived_struct_equals(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t sub_1A585A73C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A585A7B8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v8 = ((v6 + 4) & ~v6) + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v6 + 4) & ~v6);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return v5 + v12 + 1;
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A585A878 + 4 * byte_1A59DC5B0[(v8 - 1)]))();
}

void sub_1A585A8D8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ((v8 + 4) & ~v8) + *(_QWORD *)(v6 + 64);
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      v14 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v15 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, ((v8 + 4) & ~v8) + *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t WindowOfInterestSize.hash(into:)(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    sub_1A594CE88();
  return sub_1A594CE88();
}

BOOL static WindowOfInterestSize.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) == 0)
      return a1 == a3;
    return 0;
  }
  return (a4 & 1) != 0;
}

uint64_t WindowOfInterestSize.hashValue.getter(uint64_t a1, char a2)
{
  sub_1A594CE64();
  if ((a2 & 1) == 0)
    sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A585AB64()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 8);
  sub_1A594CE64();
  if ((v1 & 1) == 0)
    sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A585ABC0()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_1A594CE88();
  return sub_1A594CE88();
}

uint64_t WindowOfInterestSize.lowestSequenceNumber(messageCount:)(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  if ((a3 & 1) != 0)
    return 1;
  v3 = result - a2;
  if (__OFSUB__(result, a2))
  {
    __break(1u);
    goto LABEL_9;
  }
  v4 = __OFADD__(v3, 1);
  v5 = v3 + 1;
  if (v4)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  if ((unint64_t)(v5 - 0x100000000) < 0xFFFFFFFF00000001)
    return 1;
  else
    return v5;
}

uint64_t WindowOfInterestSize.limit(serverNextUID:windowOfInterest:)(uint64_t a1, unint64_t a2, char a3, uint64_t a4, char a5)
{
  _BOOL4 v5;
  unint64_t v6;
  uint64_t result;

  v5 = (a1 & 0x100000000) == 0;
  if ((a3 & 1) != 0)
    v5 = 0;
  if ((a5 & 1) != 0)
    v5 = 0;
  if (!v5)
    return 0;
  v6 = ~HIDWORD(a2) + a1;
  result = a4 - v6;
  if (__OFSUB__(a4, v6))
    __break(1u);
  return result;
}

unint64_t sub_1A585AC90()
{
  unint64_t result;

  result = qword_1EE7AA9D8;
  if (!qword_1EE7AA9D8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for WindowOfInterestSize, &type metadata for WindowOfInterestSize);
    atomic_store(result, (unint64_t *)&qword_1EE7AA9D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WindowOfInterestSize()
{
  return &type metadata for WindowOfInterestSize;
}

BOOL sub_1A585ACE4(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  _BOOL8 v4;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = a1[1];
  v3 = a2[1];
  v4 = v3 >> 60 == 15 && v2 >> 60 == 15;
  if (v2 >> 60 == 15 || v3 >> 60 == 15)
    return v4;
  v6 = *a2;
  v7 = *a1;
  sub_1A5524FC0(*a1, v2);
  sub_1A5524FC0(v6, v3);
  v8 = sub_1A5862C2C(v7, v2, v6, v3);
  sub_1A5524FD4(v6, v3);
  sub_1A5524FD4(v7, v2);
  return v8 & 1;
}

BOOL sub_1A585AD94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _BYTE v11[80];
  _BYTE v12[80];

  sub_1A585BA78(a1, (uint64_t)v11);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  sub_1A585BA78(a2, (uint64_t)v12);
  v7 = *(_QWORD *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 88);
  sub_1A586B68C((uint64_t)v11);
  if ((v8 & 1) == 0)
    return 0;
  if (v5 >> 60 != 15)
  {
    if (v6 >> 60 == 15)
      return 0;
    sub_1A5524FC0(v4, v5);
    sub_1A5524FC0(v7, v6);
    v9 = sub_1A5862C2C(v4, v5, v7, v6);
    sub_1A5524FD4(v7, v6);
    sub_1A5524FD4(v4, v5);
    return (v9 & 1) != 0;
  }
  return v6 >> 60 == 15;
}

uint64_t sub_1A585AE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 88) >> 60 == 15)
  {
    sub_1A585BA34();
    swift_allocError();
    *(_OWORD *)v1 = xmmword_1A59ABDE0;
    *(_BYTE *)(v1 + 16) = 1;
    return swift_willThrow();
  }
  else
  {
    result = *(_QWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 80) = xmmword_1A59ABD50;
  }
  return result;
}

uint64_t sub_1A585AEF8()
{
  uint64_t v0;

  sub_1A585BA34();
  swift_allocError();
  *(_QWORD *)v0 = 0;
  *(_QWORD *)(v0 + 8) = 0;
  *(_BYTE *)(v0 + 16) = 1;
  return swift_willThrow();
}

uint64_t variable initialization expression of CommandConnection.delegate()
{
  return 0;
}

uint64_t variable initialization expression of CommandConnection.commandCounter()
{
  return 0;
}

uint64_t variable initialization expression of CommandConnection.runningCommands()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t variable initialization expression of CommandConnection.recentErrors()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t variable initialization expression of CommandConnection.enqueuedEvents()
{
  return 0;
}

uint64_t variable initialization expression of CommandConnection.idleKind()
{
  return 2;
}

uint64_t variable initialization expression of CommandConnection.pathAttributes()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t variable initialization expression of CommandConnection.dataTransferReportCollector()
{
  return 0;
}

uint64_t variable initialization expression of CommandConnection.unauthenticatedTimer()
{
  return 0;
}

uint64_t variable initialization expression of MailboxSelectionFailure.response()
{
  return 0;
}

uint64_t variable initialization expression of CommandConnection.RecentErrors.Statistics.failedToParse()
{
  return 0;
}

uint64_t variable initialization expression of CommandConnection.RecentErrors.Statistics.failedToAuthenticate()
{
  return 0;
}

uint64_t variable initialization expression of CommandConnection.RecentErrors.Statistics.serverUnavailable()
{
  return 0;
}

uint64_t variable initialization expression of CommandConnection.RecentErrors.Statistics.commandFailedCount()
{
  return 0;
}

uint64_t variable initialization expression of CommandConnection.RecentErrors.Statistics.networkErrorCount()
{
  return 0;
}

uint64_t variable initialization expression of CommandConnection.RecentErrors.Statistics.noViableNetworkCount()
{
  return 0;
}

uint64_t variable initialization expression of CommandConnection.RecentErrors.Statistics.lastResponseText()
{
  return 0;
}

uint64_t _s15IMAP2Connection07CommandB0C12RecentErrorsV10StatisticsV16lastNetworkError0H07NWErrorOSgvpfi_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1A594ACEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t variable initialization expression of SelectedMailbox.permanentFlags()
{
  return 0;
}

uint64_t variable initialization expression of SelectedMailbox.uidValidity()
{
  return 0x100000000;
}

uint64_t variable initialization expression of SelectedMailbox.modificationSequenceValue()
{
  return 0;
}

uint64_t variable initialization expression of CommandConnection.CapturedValue.idleKind()
{
  return 0;
}

uint64_t variable initialization expression of Timer.workItem()
{
  return 0;
}

uint64_t variable initialization expression of Timer.underlying()
{
  return 0;
}

uint64_t variable initialization expression of Timer.counter()
{
  return 0;
}

uint64_t variable initialization expression of UnauthenticatedStateWithTasks.currentlyRunning()
{
  return MEMORY[0x1E0DEE9D8];
}

__n128 __swift_memcpy112_8_0(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t sub_1A585B0E4(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 64);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_1A585B140(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 0;
    if (a2)
      *(_QWORD *)(result + 64) = a2;
  }
  return result;
}

void type metadata accessor for z_stream_s(uint64_t a1)
{
  sub_1A5658218(a1, (unint64_t *)&unk_1EE7AAA18);
}

uint64_t sub_1A585B1C4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, unint64_t a11)
{
  uint64_t inited;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v27 = a8 | 0x2000000000000000;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ADA0);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 32) = a1;
  v26 = a3;
  *(_OWORD *)(inited + 16) = xmmword_1A59ABDD0;
  *(_QWORD *)(inited + 40) = a2;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  *(_QWORD *)(inited + 64) = a3;
  *(_QWORD *)(inited + 72) = a4;
  *(_QWORD *)(inited + 80) = a5;
  *(_QWORD *)(inited + 88) = a6;
  *(_QWORD *)(inited + 96) = a7;
  *(_QWORD *)(inited + 104) = a8;
  *(_QWORD *)(inited + 112) = a10;
  *(_QWORD *)(inited + 120) = a11;
  sub_1A54E42B4(a1, a2);
  sub_1A54E42B4(a1, a2);
  sub_1A54E42B4(a3, a4);
  sub_1A54E42B4(a5, a6);
  sub_1A54E42B4(a7, a8);
  sub_1A54E42B4(a10, a11);
  v21 = sub_1A585BBA4(inited);
  v23 = v22;
  swift_setDeallocating();
  result = swift_arrayDestroy();
  *a9 = a1;
  a9[1] = a2;
  a9[2] = v26;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = v27;
  a9[8] = a10;
  a9[9] = a11;
  a9[10] = v21;
  a9[11] = v23;
  return result;
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_1A5658218(a1, (unint64_t *)&unk_1EE7AAA28);
}

void _s3__C8SecTrustCMa_0(uint64_t a1)
{
  sub_1A5658218(a1, &qword_1EE7A0F80);
}

void type metadata accessor for tls_ciphersuite_t(uint64_t a1)
{
  sub_1A5658218(a1, &qword_1EE7AAA38);
}

void type metadata accessor for tls_protocol_version_t(uint64_t a1)
{
  sub_1A5658218(a1, &qword_1EE7AAA40);
}

uint64_t sub_1A585B39C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  unint64_t v15;

  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
    case 4uLL:
      sub_1A54E42B4(result, a2);
      result = sub_1A54E42B4(a3, a4);
      break;
    case 1uLL:
      v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1A54E42B4(result, a2);
      sub_1A54E42B4(a3, a4);
      sub_1A54E42B4(a5, a6);
      sub_1A54E42B4(a7, v15);
      result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_5;
    case 2uLL:
LABEL_5:
      result = sub_1A54E42B4(result, a2);
      break;
    case 3uLL:
    case 5uLL:
    case 6uLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s14descr1E4F16599C10AppleTokenVwxx(uint64_t *a1)
{
  uint64_t result;
  unint64_t v3;

  result = sub_1A585B504(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  v3 = a1[11];
  if (v3 >> 60 != 15)
    return sub_1A54E46E8(a1[10], v3);
  return result;
}

uint64_t sub_1A585B504(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  unint64_t v15;

  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
    case 4uLL:
      sub_1A54E46E8(result, a2);
      result = sub_1A54E46E8(a3, a4);
      break;
    case 1uLL:
      v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1A54E46E8(result, a2);
      sub_1A54E46E8(a3, a4);
      sub_1A54E46E8(a5, a6);
      sub_1A54E46E8(a7, v15);
      result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_5;
    case 2uLL:
LABEL_5:
      result = sub_1A54E46E8(result, a2);
      break;
    case 3uLL:
    case 5uLL:
    case 6uLL:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s14descr1E4F16599C10AppleTokenVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v16 = a2[8];
  v17 = a2[9];
  sub_1A585B39C(*a2, v5, v6, v7, v8, v9, v10, v11, v16, v17);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v16;
  *(_QWORD *)(a1 + 72) = v17;
  v12 = a2 + 10;
  v13 = a2[11];
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v12;
  }
  else
  {
    v14 = *v12;
    sub_1A54E42B4(*v12, v13);
    *(_QWORD *)(a1 + 80) = v14;
    *(_QWORD *)(a1 + 88) = v13;
  }
  return a1;
}

uint64_t *_s14descr1E4F16599C10AppleTokenVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  unint64_t v30;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v29 = a2[8];
  v30 = a2[9];
  sub_1A585B39C(*a2, v5, v6, v7, v8, v9, v10, v11, v29, v30);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  v16 = a1[4];
  v17 = a1[5];
  v18 = a1[6];
  v19 = a1[7];
  v20 = a1[8];
  v21 = a1[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v29;
  a1[9] = v30;
  sub_1A585B504(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  v22 = a2 + 10;
  v23 = a2[11];
  if ((unint64_t)a1[11] >> 60 != 15)
  {
    if (v23 >> 60 != 15)
    {
      v25 = *v22;
      sub_1A54E42B4(*v22, v23);
      v26 = a1[10];
      v27 = a1[11];
      a1[10] = v25;
      a1[11] = v23;
      sub_1A54E46E8(v26, v27);
      return a1;
    }
    sub_1A585B824((uint64_t)(a1 + 10));
    goto LABEL_6;
  }
  if (v23 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 5) = *(_OWORD *)v22;
    return a1;
  }
  v24 = *v22;
  sub_1A54E42B4(*v22, v23);
  a1[10] = v24;
  a1[11] = v23;
  return a1;
}

uint64_t sub_1A585B824(uint64_t a1)
{
  destroy for OpaquePersistedMessageIdentifier(a1);
  return a1;
}

__n128 __swift_memcpy96_8_2(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t *_s14descr1E4F16599C10AppleTokenVwta(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = a1[6];
  v11 = a1[7];
  v12 = a1[8];
  v13 = a1[9];
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v14;
  v15 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v15;
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_1A585B504(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  v16 = (uint64_t *)(a2 + 80);
  v17 = a1[11];
  if (v17 >> 60 != 15)
  {
    v18 = *(_QWORD *)(a2 + 88);
    if (v18 >> 60 != 15)
    {
      v19 = a1[10];
      a1[10] = *v16;
      a1[11] = v18;
      sub_1A54E46E8(v19, v17);
      return a1;
    }
    sub_1A585B824((uint64_t)(a1 + 10));
  }
  *((_OWORD *)a1 + 5) = *(_OWORD *)v16;
  return a1;
}

uint64_t _s14descr1E4F16599C10AppleTokenVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x3A && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 58);
  v3 = (*(_QWORD *)(a1 + 56) >> 58) & 0xC;
  v4 = (((*(_BYTE *)(a1 + 79) & 0x30 | v3) >> 3) & 0xFFFFFFC7 | (8 * (v3 & 7 | (*(_QWORD *)(a1 + 40) >> 60) & 3))) ^ 0x3F;
  if (v4 >= 0x39)
    v4 = -1;
  return v4 + 1;
}

uint64_t _s14descr1E4F16599C10AppleTokenVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x39)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 58;
    if (a3 >= 0x3A)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0x3A)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      v3 = (-a2 >> 3) & 7 | (8 * (-a2 & 0x3F));
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = (unint64_t)((-a2 >> 3) & 3) << 60;
      *(_QWORD *)(result + 48) = 0;
      *(_QWORD *)(result + 56) = (v3 << 58) & 0x3000000000000000;
      *(_QWORD *)(result + 64) = 0;
      *(_QWORD *)(result + 72) = (v3 << 56) & 0x3000000000000000;
    }
  }
  return result;
}

ValueMetadata *_s14descr1E4F16599C10AppleTokenVMa()
{
  return &_s14descr1E4F16599C10AppleTokenVN;
}

unint64_t sub_1A585BA34()
{
  unint64_t result;

  result = qword_1EE7AAA48;
  if (!qword_1EE7AAA48)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DCC4C, &type metadata for Authentication.Error);
    atomic_store(result, (unint64_t *)&qword_1EE7AAA48);
  }
  return result;
}

uint64_t sub_1A585BA78(uint64_t a1, uint64_t a2)
{
  __swift_memcpy80_8_3(a2, a1);
  return a2;
}

__n128 __swift_memcpy16_8_6(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t _s14descr1E4F16599C10AppleTokenV5StateOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 12);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  if (v3 + 1 >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s14descr1E4F16599C10AppleTokenV5StateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 12;
    if (a3 >= 0xC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *_s14descr1E4F16599C10AppleTokenV5StateOMa()
{
  return &_s14descr1E4F16599C10AppleTokenV5StateON;
}

ValueMetadata *_s14descr1E4F165E1C11AppleToken2VMa()
{
  return &_s14descr1E4F165E1C11AppleToken2VN;
}

ValueMetadata *_s14descr1E4F165E1C11AppleToken2V5StateOMa()
{
  return &_s14descr1E4F165E1C11AppleToken2V5StateON;
}

uint64_t sub_1A585BBA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  _QWORD v6[5];
  __int128 v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v7 = xmmword_1A59ABE10;
  if (*(_QWORD *)(a1 + 16))
  {
    v5 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v1 = *(_QWORD *)(v5 + 32);
    v2 = *(_QWORD *)(v5 + 40);
    v6[3] = MEMORY[0x1E0CB0338];
    v6[4] = MEMORY[0x1E0CB0318];
    v6[0] = v1;
    v6[1] = v2;
    v3 = (char *)&loc_1A585BC5C
       + dword_1A585BF44[__swift_project_boxed_opaque_existential_1_0(v6, MEMORY[0x1E0CB0338])[1] >> 62];
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1A585BF54(_QWORD *a1, _QWORD *a2)
{
  return sub_1A5862C2C(*a1, a1[1], *a2, a2[1]);
}

void sub_1A585BF68(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1A585BFC4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  char v30;
  char v31;
  char v32;
  char v33;
  unsigned __int8 v34;

  v4 = v34;
  if (v34)
  {
    *(_QWORD *)(v3 - 104) = v2;
    v5 = v34;
    sub_1A58BF7A4(0, v34, 0);
    v2 = *(_QWORD *)(v3 - 104);
    v28 = (int)v0;
    if ((_DWORD)v1)
    {
      if ((_DWORD)v1 == 1)
        v6 = (int)v0;
      else
        v6 = *(_QWORD *)(v0 + 16);
    }
    else
    {
      v6 = 0;
    }
    v27 = (uint64_t)v0 >> 32;
    v25 = v0 >> 16;
    v26 = v0 >> 8;
    v23 = HIDWORD(v0);
    v24 = v0 >> 24;
    v21 = HIWORD(v0);
    v22 = v0 >> 40;
    v20 = HIBYTE(v0);
    *(_QWORD *)(v3 - 136) = v1;
    *(_QWORD *)(v3 - 128) = v0;
    while (v5)
    {
      if ((_DWORD)v1)
      {
        if ((_DWORD)v1 == 1)
        {
          if (v6 < v28 || v6 >= v27)
            goto LABEL_29;
          v7 = sub_1A5949BE8();
          if (!v7)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }
          v8 = v7;
          v9 = sub_1A5949C0C();
          v10 = v6 - v9;
          if (__OFSUB__(v6, v9))
            goto LABEL_32;
        }
        else
        {
          if (v6 < *(_QWORD *)(v0 + 16))
            goto LABEL_31;
          if (v6 >= *(_QWORD *)(v0 + 24))
            goto LABEL_33;
          v12 = sub_1A5949BE8();
          if (!v12)
            goto LABEL_36;
          v8 = v12;
          v13 = sub_1A5949C0C();
          v10 = v6 - v13;
          if (__OFSUB__(v6, v13))
            goto LABEL_34;
        }
        v11 = *(_BYTE *)(v8 + v10);
      }
      else
      {
        if (v6 >= v34)
          goto LABEL_30;
        *(_BYTE *)(v3 - 120) = v0;
        *(_BYTE *)(v3 - 119) = v26;
        *(_BYTE *)(v3 - 118) = v25;
        *(_BYTE *)(v3 - 117) = v24;
        *(_BYTE *)(v3 - 116) = v23;
        *(_BYTE *)(v3 - 115) = v22;
        *(_BYTE *)(v3 - 114) = v21;
        *(_BYTE *)(v3 - 113) = v20;
        *(_WORD *)(v3 - 112) = v29;
        *(_BYTE *)(v3 - 110) = v30;
        *(_BYTE *)(v3 - 109) = v31;
        *(_BYTE *)(v3 - 108) = v32;
        *(_BYTE *)(v3 - 107) = v33;
        v11 = *(_BYTE *)(v3 - 120 + v6);
      }
      *(_BYTE *)(v3 - 120) = v11;
      sub_1A585C398();
      sub_1A594B6DC();
      *(_QWORD *)(v3 - 120) = 30768;
      *(_QWORD *)(v3 - 112) = 0xE200000000000000;
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v3 - 120);
      v14 = *(_QWORD *)(v3 - 112);
      *(_QWORD *)(v3 - 104) = v2;
      v17 = *(_QWORD *)(v2 + 16);
      v16 = *(_QWORD *)(v2 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1A58BF7A4(v16 > 1, v17 + 1, 1);
        v2 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v2 + 16) = v17 + 1;
      v18 = v2 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v15;
      *(_QWORD *)(v18 + 40) = v14;
      ++v6;
      --v5;
      --v4;
      v1 = *(_QWORD *)(v3 - 136);
      v0 = *(_QWORD *)(v3 - 128);
      if (!v4)
        return v2;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x1A585C2B4);
  }
  return v2;
}

uint64_t sub_1A585C2DC()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = v0[1];
  sub_1A54E42B4(v1, v2);
  sub_1A585BF68(v1, v2);
  sub_1A54E46E8(v1, v2);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A60);
  sub_1A54E2E30((unint64_t *)&qword_1EE795FA8, &qword_1EE799A60, MEMORY[0x1E0DEAF20]);
  v3 = sub_1A594B268();
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_1A585C398()
{
  unint64_t result;

  result = qword_1EE79B470;
  if (!qword_1EE79B470)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEDEA0], MEMORY[0x1E0DEDE70]);
    atomic_store(result, (unint64_t *)&qword_1EE79B470);
  }
  return result;
}

uint64_t sub_1A585C3DC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = a1;
  if ((a3 & 1) == 0)
  {
    v5 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0)
      v5 = a1 & 0xFFFFFFFFFFFFLL;
    if (v5)
    {
      if (a1 == 32 && a2 == 0xE100000000000000)
      {
        v6 = 32;
        v7 = 0xE100000000000000;
LABEL_10:
        sub_1A585C500(v6, v7, 0);
        return 0;
      }
      if ((sub_1A594CD38() & 1) == 0)
      {
        sub_1A585C4BC();
        swift_allocError();
        swift_willThrow();
        sub_1A585C500(v4, a2, 0);
        return v4;
      }
    }
    v6 = v4;
    v7 = a2;
    goto LABEL_10;
  }
  return v4;
}

unint64_t sub_1A585C4BC()
{
  unint64_t result;

  result = qword_1EE7AAB18;
  if (!qword_1EE7AAB18)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DCC0C, &type metadata for Authentication.Challenge.ReceivedTextAsAuthenticationQuery);
    atomic_store(result, (unint64_t *)&qword_1EE7AAB18);
  }
  return result;
}

uint64_t sub_1A585C500(uint64_t a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_1A54E46E8(a1, a2);
  else
    return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for Authentication.Challenge.ReceivedTextAsAuthenticationQuery()
{
  return &type metadata for Authentication.Challenge.ReceivedTextAsAuthenticationQuery;
}

uint64_t sub_1A585C524(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = (a2 >> 60) & 3;
  if ((_DWORD)v2 == 1)
    return (uint64_t)(id)a1;
  if (!(_DWORD)v2)
    return sub_1A54E42B4(a1, a2);
  return a1;
}

void destroy for Authentication.Error(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;

  if (*(_BYTE *)(a1 + 16))
  {
    if (*(_QWORD *)a1 == -2)
    {
      v1 = *(_QWORD *)(a1 + 8);
      v2 = *(_QWORD *)a1;
LABEL_4:
      sub_1A585C57C(v2, v1);
    }
  }
  else
  {
    v1 = *(_QWORD *)(a1 + 8);
    if ((~v1 & 0x3000000000000000) != 0)
    {
      v2 = *(_QWORD *)a1;
      goto LABEL_4;
    }
  }
}

void sub_1A585C57C(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = (a2 >> 60) & 3;
  if ((_DWORD)v2 == 1)
  {

  }
  else if (!(_DWORD)v2)
  {
    sub_1A54E46E8(a1, a2);
  }
}

uint64_t _s15IMAP2Connection14AuthenticationO5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  if (*(_BYTE *)(a2 + 16))
  {
    v3 = *(_QWORD *)a2;
    if (*(_QWORD *)a2 == -2)
    {
      v4 = *(_QWORD *)(a2 + 8);
LABEL_7:
      sub_1A585C524(v3, v4);
      *(_QWORD *)a1 = v3;
      *(_QWORD *)(a1 + 8) = v4;
      *(_BYTE *)(a1 + 16) = 0;
      return a1;
    }
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    if ((~v4 & 0x3000000000000000) != 0)
    {
      v3 = *(_QWORD *)a2;
      goto LABEL_7;
    }
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithCopy for Authentication.Error(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;

  if (*(_BYTE *)(a1 + 16))
  {
    if (*(_DWORD *)a1 == -2)
    {
      v4 = *(_QWORD *)(a1 + 8);
LABEL_8:
      if (*((_BYTE *)a2 + 16))
      {
        v7 = *(_QWORD *)a2;
        if (*(_QWORD *)a2 == -2)
        {
          v8 = *((_QWORD *)a2 + 1);
LABEL_18:
          sub_1A585C524(v7, v8);
          v10 = *(_QWORD *)a1;
          v11 = *(_QWORD *)(a1 + 8);
          *(_QWORD *)a1 = v7;
          *(_QWORD *)(a1 + 8) = v8;
          sub_1A585C57C(v10, v11);
          return a1;
        }
      }
      else
      {
        v8 = *((_QWORD *)a2 + 1);
        if ((~v8 & 0x3000000000000000) != 0)
        {
          v7 = *(_QWORD *)a2;
          goto LABEL_18;
        }
      }
      sub_1A585C57C(*(_QWORD *)a1, v4);
      goto LABEL_16;
    }
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 8);
    if ((~v4 & 0x3000000000000000) != 0)
      goto LABEL_8;
  }
  if (!*((_BYTE *)a2 + 16))
  {
    v6 = *((_QWORD *)a2 + 1);
    if ((~v6 & 0x3000000000000000) != 0)
    {
      v5 = *(_QWORD *)a2;
      goto LABEL_13;
    }
LABEL_16:
    v9 = *a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)a1 = v9;
    return a1;
  }
  v5 = *(_QWORD *)a2;
  if (*(_QWORD *)a2 != -2)
    goto LABEL_16;
  v6 = *((_QWORD *)a2 + 1);
LABEL_13:
  sub_1A585C524(v5, v6);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = 0;
  return a1;
}

__n128 __swift_memcpy17_8_5(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for Authentication.Error(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_BYTE *)(a1 + 16))
  {
    if (*(_DWORD *)a1 == -2)
    {
      v4 = *(_QWORD *)(a1 + 8);
LABEL_8:
      if (*((_BYTE *)a2 + 16))
      {
        v5 = *a2;
        if (*a2 == -2)
        {
          v6 = a2[1];
LABEL_17:
          v7 = *(_QWORD *)a1;
          *(_QWORD *)a1 = v5;
          *(_QWORD *)(a1 + 8) = v6;
          sub_1A585C57C(v7, v4);
          return a1;
        }
      }
      else
      {
        v6 = a2[1];
        if ((~v6 & 0x3000000000000000) != 0)
        {
          v5 = *a2;
          goto LABEL_17;
        }
      }
      sub_1A585C57C(*(_QWORD *)a1, v4);
      goto LABEL_15;
    }
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 8);
    if ((~v4 & 0x3000000000000000) != 0)
      goto LABEL_8;
  }
  if (*((_BYTE *)a2 + 16))
  {
    if (*(_DWORD *)a2 != -2)
      goto LABEL_15;
  }
  else if ((~a2[1] & 0x3000000000000000) == 0)
  {
LABEL_15:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = 0;
  return a1;
}

uint64_t storeEnumTagSinglePayload for DataTransferReportAccumulator.State(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t sub_1A585C840(uint64_t a1)
{
  int v2;

  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2);
  if ((~*(_QWORD *)(a1 + 8) & 0x3000000000000000) != 0)
    v2 = -1;
  else
    v2 = 0;
  return (v2 + 1);
}

uint64_t sub_1A585C870(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_OWORD *)result = xmmword_1A59BA3C0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Authentication.Error()
{
  return &type metadata for Authentication.Error;
}

ValueMetadata *type metadata accessor for Authentication.Challenge()
{
  return &type metadata for Authentication.Challenge;
}

ValueMetadata *type metadata accessor for Authentication.Response()
{
  return &type metadata for Authentication.Response;
}

ValueMetadata *type metadata accessor for Authentication()
{
  return &type metadata for Authentication;
}

void sub_1A585C904(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A585FA68(a1, a2, a3);
}

void sub_1A585C920(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  os_log_t v27;
  uint64_t v28;
  _BYTE v29[40];
  _QWORD *v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1A594A764();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) != 0)
  {
    if (*(_QWORD *)(v2 + 88) >> 60 == 15)
    {
      v13 = v10;
      sub_1A585BA34();
      v14 = (void *)swift_allocError();
      *(_OWORD *)v15 = xmmword_1A59ABDE0;
      *(_BYTE *)(v15 + 16) = 1;
      swift_willThrow();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v13);
      sub_1A585F8E4(a2, (uint64_t)v7);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v16 = v14;
      v17 = v14;
      v18 = sub_1A594A74C();
      v19 = sub_1A594C018();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc();
        v31 = v18;
        v21 = v20;
        v30 = (_QWORD *)swift_slowAlloc();
        v33 = swift_slowAlloc();
        v35 = v33;
        *(_DWORD *)v21 = 68158466;
        LODWORD(v34) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v21 + 8) = 256;
        v22 = &v7[*(int *)(v5 + 20)];
        LOBYTE(v34) = *v22;
        sub_1A594C3CC();
        *(_WORD *)(v21 + 11) = 2082;
        v32 = v13;
        v23 = ConnectionID.debugDescription.getter(*((unsigned int *)v22 + 1));
        v34 = sub_1A589167C(v23, v24, &v35);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A585FAB0((uint64_t)v7);
        *(_WORD *)(v21 + 21) = 2112;
        v25 = sub_1A5949D98();
        v34 = v25;
        sub_1A594C3CC();
        v26 = v30;
        *v30 = v25;

        v27 = v31;
        _os_log_impl(&dword_1A4F90000, v31, v19, "[%.*hhx-%{public}s] Authentication failed: %@", (uint8_t *)v21, 0x1Fu);
        __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v26, -1, -1);
        v28 = v33;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v28, -1, -1);
        MEMORY[0x1A85B1964](v21, -1, -1);

        JUMPOUT(0x1A585CDECLL);
      }
      JUMPOUT(0x1A585CDC4);
    }
    JUMPOUT(0x1A585CD0CLL);
  }
  __asm { BR              X10 }
}

uint64_t sub_1A585CC80()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;

  *(_QWORD *)(v11 - 240) = v3;
  *(_QWORD *)(v11 - 232) = v1;
  v12 = v2;
  v13 = v3;
  v14 = v0;
  sub_1A585B39C(v10, v2, v13, v5, v0, v6, v8, v9, v18, v19);
  v15 = v6;
  if (qword_1EE7AA9F0 != -1)
    swift_once();
  v16 = unk_1EE7FA040;
  *(_QWORD *)(v11 - 216) = qword_1EE7FA038;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A585B504(v10, v12, *(_QWORD *)(v11 - 240), v5, v14, v15, v8, v9, *(_QWORD *)(v11 - 232), v7);
  *(_QWORD *)v4 = *(_QWORD *)(v11 - 216);
  *(_QWORD *)(v4 + 8) = v16;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  *(_BYTE *)(v4 + 64) = 1;
  return result;
}

void sub_1A585D100(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  _BYTE v28[40];
  os_log_t v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;

  v5 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1A594A764();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) != 0)
  {
    v12 = *(_QWORD *)(v2 + 88) >> 60;
    if ((_DWORD)v12 != 11)
    {
      if ((_DWORD)v12 == 15)
      {
        sub_1A585BA34();
        v13 = (void *)swift_allocError();
        *(_OWORD *)v14 = xmmword_1A59ABDE0;
        *(_BYTE *)(v14 + 16) = 1;
        swift_willThrow();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
        sub_1A585F8E4(a2, (uint64_t)v7);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v15 = v13;
        v16 = v13;
        v17 = sub_1A594A74C();
        v18 = sub_1A594C018();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = swift_slowAlloc();
          v30 = (_QWORD *)swift_slowAlloc();
          v31 = swift_slowAlloc();
          v34 = v31;
          *(_DWORD *)v19 = 68158466;
          LODWORD(v33) = 2;
          v32 = v13;
          sub_1A594C3CC();
          *(_WORD *)(v19 + 8) = 256;
          v20 = *(int *)(v5 + 20);
          v29 = v17;
          v21 = &v7[v20];
          LOBYTE(v33) = v7[v20];
          sub_1A594C3CC();
          *(_WORD *)(v19 + 11) = 2082;
          v22 = ConnectionID.debugDescription.getter(*((unsigned int *)v21 + 1));
          v33 = sub_1A589167C(v22, v23, &v34);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A585FAB0((uint64_t)v7);
          *(_WORD *)(v19 + 21) = 2112;
          v24 = sub_1A5949D98();
          v33 = v24;
          v25 = v32;
          sub_1A594C3CC();
          v26 = v30;
          *v30 = v24;

          _os_log_impl(&dword_1A4F90000, v29, v18, "[%.*hhx-%{public}s] Authentication failed: %@", (uint8_t *)v19, 0x1Fu);
          __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v26, -1, -1);
          v27 = v31;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v27, -1, -1);
          MEMORY[0x1A85B1964](v19, -1, -1);
          JUMPOUT(0x1A585D5D4);
        }
        JUMPOUT(0x1A585D5BCLL);
      }
      JUMPOUT(0x1A585D4F4);
    }
    JUMPOUT(0x1A585D4E8);
  }
  __asm { BR              X10 }
}

uint64_t sub_1A585D454()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;

  *(_QWORD *)(v11 - 216) = v1;
  v12 = v5;
  *(_QWORD *)(v11 - 256) = v5;
  v13 = v0;
  sub_1A585B39C(v12, v0, v7, v6, v2, v8, v9, v10, v19, v20);
  v14 = qword_1EE7AA9F0 == -1;
  *(_QWORD *)(v11 - 224) = v7;
  v15 = v6;
  if (!v14)
    swift_once();
  v16 = qword_1EE7FA038;
  v17 = unk_1EE7FA040;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A585B504(*(_QWORD *)(v11 - 256), v13, *(_QWORD *)(v11 - 224), v15, v2, v8, v9, v10, *(_QWORD *)(v11 - 216), v3);
  *(_QWORD *)v4 = v16;
  *(_QWORD *)(v4 + 8) = v17;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  *(_BYTE *)(v4 + 64) = 1;
  return result;
}

void sub_1A585D958(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _BYTE v29[48];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[69];

  v3 = v2;
  v6 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v10);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x1E0C80A78](v13);
  if ((a1 & 1) != 0)
  {
    v33 = v6;
    if ((unint64_t)(*(_QWORD *)(v3 + 144) - 1) < 2)
    {
      v17 = v14;
      v18 = v15;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v15 + 16))(v12, a2, v14, v16);
      sub_1A585F8E4(a2, (uint64_t)v8);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v19 = sub_1A594A74C();
      v20 = sub_1A594C000();
      v21 = v20;
      if (os_log_type_enabled(v19, v20))
      {
        v22 = swift_slowAlloc();
        v31 = v17;
        v23 = v22;
        v30 = swift_slowAlloc();
        v35[0] = v30;
        *(_DWORD *)v23 = 68158210;
        LODWORD(v34) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v23 + 8) = 256;
        v24 = *(int *)(v33 + 20);
        LODWORD(v33) = v21;
        v25 = &v8[v24];
        LOBYTE(v34) = v8[v24];
        sub_1A594C3CC();
        *(_WORD *)(v23 + 11) = 2082;
        v32 = v18;
        v26 = ConnectionID.debugDescription.getter(*((unsigned int *)v25 + 1));
        v34 = sub_1A589167C(v26, v27, v35);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A585FAB0((uint64_t)v8);
        _os_log_impl(&dword_1A4F90000, v19, (os_log_type_t)v33, "[%.*hhx-%{public}s] Authentication implementation has no initial response", (uint8_t *)v23, 0x15u);
        v28 = v30;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v28, -1, -1);
        MEMORY[0x1A85B1964](v23, -1, -1);

        JUMPOUT(0x1A585DD44);
      }
      JUMPOUT(0x1A585DD2CLL);
    }
    JUMPOUT(0x1A585DCDCLL);
  }
  v33 = *(_QWORD *)(v3 + 56);
  __asm { BR              X10 }
}

uint64_t sub_1A585DC40()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;

  v11 = v4;
  v3[8] = v1;
  v12 = v4;
  v3[4] = v0;
  v3[5] = v2;
  v13 = v3[9];
  sub_1A585B39C(v12, v0, v13, v9, v8, v10, v5, v7, v18, v19);
  v14 = qword_1EE7AA9F0 == -1;
  v3[3] = v9;
  if (!v14)
    swift_once();
  v15 = qword_1EE7FA038;
  v16 = unk_1EE7FA040;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A585B504(v11, v3[4], v13, v3[3], v8, v10, v5, v7, v3[8], v3[5]);
  *(_QWORD *)v6 = v15;
  *(_QWORD *)(v6 + 8) = v16;
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v6 + 56) = 0;
  *(_BYTE *)(v6 + 64) = 1;
  return result;
}

void sub_1A585E5A8(char a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  os_log_t v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[40];
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = v2;
  v40 = (os_log_t)_s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v40);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v36[-v7];
  v9 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v14 = &v36[-v13];
  if ((a1 & 1) != 0)
  {
    v15 = v3[11] >> 60;
    if ((_DWORD)v15 != 15)
    {
      if ((_DWORD)v15 == 11)
      {
        v16 = v11;
        v17 = v12;
        sub_1A585BA34();
        v18 = (void *)swift_allocError();
        *(_OWORD *)v19 = xmmword_1A59ABDE0;
        *(_BYTE *)(v19 + 16) = 1;
        swift_willThrow();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16))(v14, a2, v16);
        sub_1A585F8E4(a2, (uint64_t)v8);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v20 = v18;
        v21 = v18;
        v22 = sub_1A594A74C();
        v23 = sub_1A594C018();
        if (os_log_type_enabled(v22, v23))
        {
          v24 = swift_slowAlloc();
          v39 = v17;
          v25 = v24;
          v37 = (_QWORD *)swift_slowAlloc();
          v41 = swift_slowAlloc();
          v43 = v41;
          *(_DWORD *)v25 = 68158466;
          LODWORD(v42) = 2;
          v38 = v16;
          sub_1A594C3CC();
          *(_WORD *)(v25 + 8) = 256;
          v26 = &v8[SHIDWORD(v40[2].isa)];
          LOBYTE(v42) = *v26;
          sub_1A594C3CC();
          *(_WORD *)(v25 + 11) = 2082;
          v40 = v22;
          v27 = ConnectionID.debugDescription.getter(*((unsigned int *)v26 + 1));
          v42 = sub_1A589167C(v27, v28, &v43);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A585FAB0((uint64_t)v8);
          *(_WORD *)(v25 + 21) = 2112;
          v29 = sub_1A5949D98();
          v42 = v29;
          sub_1A594C3CC();
          v30 = v37;
          *v37 = v29;

          v31 = v40;
          _os_log_impl(&dword_1A4F90000, v40, v23, "[%.*hhx-%{public}s] Authentication failed: %@", (uint8_t *)v25, 0x1Fu);
          __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v30, -1, -1);
          v32 = v41;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v32, -1, -1);
          MEMORY[0x1A85B1964](v25, -1, -1);

          JUMPOUT(0x1A585ECC8);
        }
        JUMPOUT(0x1A585ECA0);
      }
      JUMPOUT(0x1A585EB98);
    }
    JUMPOUT(0x1A585E9F0);
  }
  v33 = v3[7];
  v34 = v3[8];
  v35 = v3[9];
  v39 = v34;
  v40 = v33;
  __asm { BR              X10 }
}

uint64_t sub_1A585E964()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;

  v10 = v2;
  *(_QWORD *)(v1 + 24) = v2;
  v11 = v0;
  sub_1A585B39C(v10, v0, v5, v8, v7, v9, v3, *(_QWORD *)(v1 + 64), v16, v17);
  v12 = qword_1EE7AA9F0 == -1;
  *(_QWORD *)(v1 + 32) = v8;
  if (!v12)
    swift_once();
  v13 = qword_1EE7FA038;
  v14 = unk_1EE7FA040;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A585B504(*(_QWORD *)(v1 + 24), v11, v5, *(_QWORD *)(v1 + 32), v7, v9, v3, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 56), v6);
  *(_QWORD *)v4 = v13;
  *(_QWORD *)(v4 + 8) = v14;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  *(_BYTE *)(v4 + 64) = 1;
  return result;
}

void sub_1A585F03C()
{
  __asm { BR              X10 }
}

uint64_t sub_1A585F0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  sub_1A585B39C(v7, v14, v8, v9, v10, a6, a7, v12, v13, v11);
  if (qword_1EE7AA9F0 != -1)
    swift_once();
  v15 = qword_1EE7FA038;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A585B504(v7, v14, v8, v9, v18, v19, v17, v12, v13, v11);
  return v15;
}

void sub_1A585F2BC()
{
  __asm { BR              X10 }
}

uint64_t sub_1A585F320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  sub_1A585B39C(v7, v14, v8, v9, v10, a6, a7, v12, v13, v11);
  if (qword_1EE7AA9F0 != -1)
    swift_once();
  v15 = qword_1EE7FA038;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A585B504(v7, v14, v8, v9, v18, v19, v17, v12, v13, v11);
  return v15;
}

void sub_1A585F53C()
{
  __asm { BR              X10 }
}

uint64_t sub_1A585F5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  sub_1A585B39C(v7, v14, v8, v9, v10, a6, a7, v12, v13, v11);
  if (qword_1EE7AA9F0 != -1)
    swift_once();
  v15 = qword_1EE7FA038;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A585B504(v7, v14, v8, v9, v18, v19, v17, v12, v13, v11);
  return v15;
}

uint64_t sub_1A585F7BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v10 = v1[6];
  v9 = v1[7];
  v12 = v1[8];
  v11 = v1[9];
  v14 = v9 | 0x1000000000000000;
  result = sub_1A585B39C(v3, v4, v5, v6, v7, v8, v10, v9, v12, v11);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v10;
  a1[7] = v14;
  a1[8] = v12;
  a1[9] = v11;
  return result;
}

void sub_1A585F858(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _BYTE v5[72];

  sub_1A585E5A8(a1, a2);
  if (!v3)
    sub_1A585F89C((uint64_t)v5, a3);
}

uint64_t sub_1A585F89C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7982A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A585F8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s6LoggerVMa_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A585F928@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v3 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  v6 = v1[8];
  v7 = v1[9];
  v8 = v1[10];
  v10 = v1[11];
  v9 = v1[12];
  v12 = v1[13];
  v11 = v1[14];
  v14 = v9 | 0x1000000000000000;
  result = sub_1A585B39C(v3, v4, v5, v6, v7, v8, v10, v9, v12, v11);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v10;
  a1[7] = v14;
  a1[8] = v12;
  a1[9] = v11;
  return result;
}

void sub_1A585F9C4(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _BYTE v5[72];

  sub_1A585D958(a1, a2);
  if (!v3)
    sub_1A585F89C((uint64_t)v5, a3);
}

void sub_1A585FA08(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _BYTE v5[72];

  sub_1A585D100(a1, a2);
  if (!v3)
    sub_1A585F89C((uint64_t)v5, a3);
}

void sub_1A585FA4C(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A585FA68(a1, a2, a3);
}

void sub_1A585FA68(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _BYTE v5[72];

  sub_1A585C920(a1, a2);
  if (!v3)
    sub_1A585F89C((uint64_t)v5, a3);
}

uint64_t sub_1A585FAB0(uint64_t a1)
{
  uint64_t v2;

  v2 = _s6LoggerVMa_0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A585FAEC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

void sub_1A585FB40(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  __int16 v13;
  char v14;

  ByteBufferAllocator.buffer(capacity:)(BYTE6(v6), a3, a4, a5, a6);
  *(_QWORD *)(v8 - 96) = v9;
  *(_DWORD *)(v8 - 88) = v10;
  *(_DWORD *)(v8 - 84) = v11;
  *(_DWORD *)(v8 - 80) = v12;
  *(_WORD *)(v8 - 76) = v13;
  *(_BYTE *)(v8 - 74) = v14;
  MEMORY[0x1E0C80A78](v9);
  __asm { BR              X10 }
}

uint64_t sub_1A585FBE4()
{
  uint64_t v0;
  uint64_t v1;
  Swift::UInt32 v2;
  uint64_t v3;
  int v4;

  *(_QWORD *)(v3 - 120) = v1;
  *(_WORD *)(v3 - 112) = v0;
  *(_BYTE *)(v3 - 110) = BYTE2(v0);
  *(_BYTE *)(v3 - 109) = BYTE3(v0);
  *(_BYTE *)(v3 - 108) = BYTE4(v0);
  *(_BYTE *)(v3 - 107) = BYTE5(v0);
  ByteBuffer._setBytes(_:at:)(v3 - 120, v3 - 120 + BYTE6(v0), v2);
  if (__CFADD__(*(_DWORD *)(v3 - 84), v4))
  {
    __break(1u);
    JUMPOUT(0x1A585FDBCLL);
  }
  return *(_QWORD *)(v3 - 96);
}

void sub_1A585FDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD v4[3];
  uint64_t v5;

  v5 = sub_1A5949FFC();
  MEMORY[0x1E0C80A78](v5);
  v4[2] = (char *)v4 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796A18) != MEMORY[0x1E0CB0338])
    __asm { BR              X10 }
  __break(1u);
  JUMPOUT(0x1A5860070);
}

unint64_t sub_1A5860080()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7963F0;
  if (!qword_1EE7963F0)
  {
    v1 = sub_1A5949FFC();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CB02D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7963F0);
  }
  return result;
}

uint64_t sub_1A58600C8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_1A5687BD4(a1, a2, a3);
  return a1;
}

uint64_t sub_1A58600DC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1A5860130(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a2[5];
    v9 = a2[6];
    sub_1A585C524(v8, v9);
    v4[5] = v8;
    v4[6] = v9;
    v10 = a3[5];
    v11 = (char *)v4 + v10;
    v12 = (uint64_t)a2 + v10;
    v13 = sub_1A594A764();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    v14 = _s6LoggerVMa_0();
    *(_QWORD *)&v11[*(int *)(v14 + 20)] = *(_QWORD *)(v12 + *(int *)(v14 + 20));
    v15 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *(_QWORD *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v4;
}

uint64_t sub_1A586022C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_1A585C57C(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A586028C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  sub_1A585C524(v7, v8);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = _s6LoggerVMa_0();
  *(_QWORD *)(v10 + *(int *)(v13 + 20)) = *(_QWORD *)(v11 + *(int *)(v13 + 20));
  v14 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t *sub_1A5860354(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = a2[5];
  v7 = a2[6];
  sub_1A585C524(v6, v7);
  v8 = a1[5];
  v9 = a1[6];
  a1[5] = v6;
  a1[6] = v7;
  sub_1A585C57C(v8, v9);
  v10 = a3[5];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1A594A764();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = *(int *)(_s6LoggerVMa_0() + 20);
  v15 = &v11[v14];
  v16 = &v12[v14];
  *v15 = *v16;
  *((_DWORD *)v15 + 1) = *((_DWORD *)v16 + 1);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1A5860430(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = _s6LoggerVMa_0();
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1A58604E0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_1A585C57C(v7, v8);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = *(int *)(_s6LoggerVMa_0() + 20);
  v14 = v10 + v13;
  v15 = v11 + v13;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  *(_DWORD *)(v14 + 4) = *(_DWORD *)(v15 + 4);
  v16 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1A58605B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58605C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = _s6LoggerVMa_0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1A586063C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5860648(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = _s6LoggerVMa_0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for AuthenticationTask()
{
  uint64_t result;

  result = qword_1EE798190;
  if (!qword_1EE798190)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A58606F8()
{
  uint64_t result;
  unint64_t v1;

  result = _s6LoggerVMa_0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A5860788@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t result;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  char *v44;
  uint64_t v45;
  _QWORD v46[10];
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  _BYTE v56[56];
  uint64_t v57;
  _BYTE v58[80];
  char v59[56];

  v2 = v1;
  v4 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v39 - v8;
  v10 = v1[3];
  v11 = v1[4];
  __swift_project_boxed_opaque_existential_1_0(v1, v10);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v11 + 8))(v46, v10, v11);
  sub_1A58622C0((uint64_t)v46, (uint64_t)v56);
  v12 = v57;
  v57 &= ~0x1000000000000000uLL;
  v42 = v4;
  v43 = a1;
  if ((v12 & 0x1000000000000000) != 0)
  {
    sub_1A585BA78((uint64_t)v56, (uint64_t)v58);
    v47 = 0x204C534153;
    v48 = 0xE500000000000000;
    sub_1A585BA78((uint64_t)v58, (uint64_t)v59);
    __asm { BR              X12 }
  }
  sub_1A58622FC((uint64_t)v46);
  v13 = type metadata accessor for AuthenticationTask();
  sub_1A55034B8((uint64_t)v1 + *(int *)(v13 + 20), (uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  sub_1A55034B8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v14 = sub_1A594A74C();
  v15 = sub_1A594C030();
  v16 = os_log_type_enabled(v14, v15);
  v44 = v9;
  if (v16)
  {
    v17 = swift_slowAlloc();
    v40 = swift_slowAlloc();
    v47 = v40;
    *(_DWORD *)v17 = 68158466;
    LODWORD(v45) = 2;
    v41 = v13;
    sub_1A594C3CC();
    *(_WORD *)(v17 + 8) = 256;
    v18 = *(int *)(v42 + 20);
    v42 = 0x4E49474F4CLL;
    v19 = &v6[v18];
    LOBYTE(v45) = v6[v18];
    sub_1A594C3CC();
    *(_WORD *)(v17 + 11) = 2082;
    v20 = ConnectionID.debugDescription.getter(*((unsigned int *)v19 + 1));
    v45 = sub_1A589167C(v20, v21, &v47);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    *(_WORD *)(v17 + 21) = 2082;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v45 = sub_1A589167C(v42, 0xE500000000000000, &v47);
    v13 = v41;
    sub_1A594C3CC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A4F90000, v14, v15, "[%.*hhx-%{public}s] Using authentication mechanism '%{public}s'.", (uint8_t *)v17, 0x1Fu);
    v22 = v40;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v22, -1, -1);
    MEMORY[0x1A85B1964](v17, -1, -1);

  }
  else
  {
    sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

    swift_bridgeObjectRelease_n();
  }
  v23 = v2[6];
  if ((v23 & 0x3000000000000000) == 0x2000000000000000 && v23 == 0x2000000000000000 && !v2[5])
  {
    v24 = *((unsigned __int8 *)v2 + *(int *)(v13 + 24));
    if (*((_BYTE *)v2 + *(int *)(v13 + 24)))
      v25 = 2;
    else
      v25 = 1;
    v2[5] = v25;
    v2[6] = 0x2000000000000000;
    v26 = v2[3];
    v27 = v2[4];
    __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)v2, v26);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, char *, uint64_t, uint64_t))(v27 + 16))(&v47, v24, v44, v26, v27);
    v29 = v47;
    v28 = v48;
    v30 = v49;
    v31 = v50;
    v32 = v51;
    v33 = v52;
    v35 = v53;
    v34 = v54;
    v36 = v55;
    result = sub_1A55034FC((uint64_t)v44, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v38 = v43;
    *v43 = v29;
    v38[1] = v28;
    v38[2] = v30;
    v38[3] = v31;
    v38[4] = v32;
    v38[5] = v33;
    v38[6] = v35;
    v38[7] = v34;
    *((_BYTE *)v38 + 64) = v36;
  }
  else
  {
    result = sub_1A594C9C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5860DE4(const void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  int v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  const void *v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  os_log_t v38;
  uint64_t v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[584];
  _BYTE v45[584];
  _BYTE v46[584];
  _BYTE v47[584];
  _BYTE v48[592];

  v2 = v1;
  sub_1A552316C(a1, v46);
  sub_1A552316C(v46, v48);
  v4 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v34 - v8;
  sub_1A552316C(a1, v47);
  result = sub_1A5523B90((uint64_t)v47);
  if ((_DWORD)result == 5)
  {
    v11 = *(_QWORD *)sub_1A5524678((uint64_t)v47);
    v12 = type metadata accessor for AuthenticationTask();
    sub_1A55034B8(v1 + *(int *)(v12 + 20), (uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    sub_1A55034B8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    sub_1A552316C(v48, v44);
    sub_1A5524678((uint64_t)v44);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A552316C(v48, v45);
    sub_1A5524678((uint64_t)v45);
    sub_1A5523B9C(a1, sub_1A586238C);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v13 = sub_1A594A74C();
    v14 = sub_1A594C030();
    if (os_log_type_enabled(v13, (os_log_type_t)v14))
    {
      v37 = v14;
      v38 = v13;
      v39 = v12;
      v40 = a1;
      v15 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v43 = v36;
      *(_DWORD *)v15 = 68158466;
      LODWORD(v42) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v15 + 8) = 256;
      v16 = &v6[*(int *)(v4 + 20)];
      LOBYTE(v42) = *v16;
      sub_1A594C3CC();
      *(_WORD *)(v15 + 11) = 2082;
      v17 = ConnectionID.debugDescription.getter(*((unsigned int *)v16 + 1));
      v42 = sub_1A589167C(v17, v18, &v43);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      *(_WORD *)(v15 + 21) = 2080;
      v19 = *(_QWORD *)(v11 + 16);
      v20 = MEMORY[0x1E0DEE9D8];
      v41 = v11;
      if (v19)
      {
        v34 = v9;
        v35 = v2;
        v42 = MEMORY[0x1E0DEE9D8];
        sub_1A58BF7A4(0, v19, 0);
        v20 = v42;
        v21 = (uint64_t *)(v11 + 40);
        do
        {
          v22 = *(v21 - 1);
          v23 = *v21;
          v42 = v20;
          v25 = *(_QWORD *)(v20 + 16);
          v24 = *(_QWORD *)(v20 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          if (v25 >= v24 >> 1)
          {
            sub_1A58BF7A4(v24 > 1, v25 + 1, 1);
            v20 = v42;
          }
          v21 += 4;
          *(_QWORD *)(v20 + 16) = v25 + 1;
          v26 = v20 + 16 * v25;
          *(_QWORD *)(v26 + 32) = v22;
          *(_QWORD *)(v26 + 40) = v23;
          --v19;
        }
        while (v19);
        v9 = v34;
        v2 = v35;
      }
      v42 = v20;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A60);
      sub_1A5862BD0();
      v27 = sub_1A594B268();
      v29 = v28;
      swift_bridgeObjectRelease();
      v42 = sub_1A589167C(v27, v29, &v43);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v30 = v40;
      sub_1A5523B9C(v40, sub_1A5862784);
      sub_1A5523B9C(v30, sub_1A5862784);
      v31 = v38;
      _os_log_impl(&dword_1A4F90000, v38, (os_log_type_t)v37, "[%.*hhx-%{public}s] Got capabilities during auth: %s.", (uint8_t *)v15, 0x1Fu);
      v32 = v36;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v32, -1, -1);
      MEMORY[0x1A85B1964](v15, -1, -1);

      sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      v11 = v41;
      v12 = v39;
    }
    else
    {

      sub_1A5523B9C(a1, sub_1A5862784);
      sub_1A5523B9C(a1, sub_1A5862784);
      sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    }
    v33 = *(int *)(v12 + 28);
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + v33) = v11;
  }
  return result;
}

double sub_1A5861264@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  char v41;
  double result;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  char v74;
  _OWORD v75[11];
  char v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[25];

  v5 = v4;
  *(_QWORD *)&v69 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v69);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v68 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v68 - v16;
  v18 = type metadata accessor for AuthenticationTask();
  sub_1A55034B8((uint64_t)v5 + *(int *)(v18 + 20), (uint64_t)v17, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  a3 &= 1u;
  sub_1A5862C1C(a1, a2, a3);
  v19 = sub_1A585C3DC(a1, a2, a3);
  *(_QWORD *)&v72 = v5;
  v20 = v19;
  v22 = v21;
  *(_QWORD *)&v71 = v14;
  *(_QWORD *)&v70 = v17;
  sub_1A5862E00();
  sub_1A54E46E8(v20, v22);
  v37 = v5[5];
  v38 = v5[6];
  v54 = (v38 >> 60) & 3;
  if (!(_DWORD)v54)
  {
    *(_OWORD *)(v5 + 5) = xmmword_1A59DC6D0;
    sub_1A55034FC(v70, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    sub_1A55DECF8((uint64_t)&v73);
    sub_1A55032A0((uint64_t)&v73, (uint64_t)v89, &qword_1EE7981D8);
    v39 = 1;
    goto LABEL_7;
  }
  v32 = v70;
  if ((_DWORD)v54 == 1)
  {
    v55 = v5[5];
  }
  else
  {
    if (__PAIR128__(v38 - 0x2000000000000000, v37) >= 3)
    {
      v57 = v71;
      sub_1A55034B8(v70, v71, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v58 = sub_1A594A74C();
      v59 = sub_1A594C024();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = v57;
        v61 = swift_slowAlloc();
        v62 = swift_slowAlloc();
        *(_QWORD *)&v73 = v62;
        *(_DWORD *)v61 = 68158210;
        LODWORD(v89[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v61 + 8) = 256;
        v63 = v60 + *(int *)(v69 + 20);
        LOBYTE(v89[0]) = *(_BYTE *)v63;
        sub_1A594C3CC();
        *(_WORD *)(v61 + 11) = 2082;
        v64 = ConnectionID.debugDescription.getter(*(unsigned int *)(v63 + 4));
        v89[0] = sub_1A589167C(v64, v65, (uint64_t *)&v73);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v71, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        _os_log_impl(&dword_1A4F90000, v58, v59, "[%.*hhx-%{public}s] Authentication plugin failed generating response", (uint8_t *)v61, 0x15u);
        swift_arrayDestroy();
        v5 = (_QWORD *)v72;
        MEMORY[0x1A85B1964](v62, -1, -1);
        MEMORY[0x1A85B1964](v61, -1, -1);
      }
      else
      {
        sub_1A55034FC(v57, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      }

      v66 = v5[3];
      v67 = v5[4];
      __swift_project_boxed_opaque_existential_1_0(v5, v66);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v67 + 8))(&v83, v66, v67);
      v71 = v84;
      v72 = v83;
      v68 = v86;
      v69 = v85;
      v35 = v87;
      v36 = v88;
      sub_1A55034FC(v70, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      v77 = v72;
      v78 = v71;
      v79 = v69;
      goto LABEL_6;
    }
    sub_1A585BA34();
    v55 = swift_allocError();
    *(_QWORD *)v56 = v37;
    *(_QWORD *)(v56 + 8) = v38;
    *(_BYTE *)(v56 + 16) = 0;
  }
  sub_1A585C524(v37, v38);
  *(_QWORD *)&v71 = v55;
  swift_willThrow();
  sub_1A55034B8(v32, (uint64_t)v11, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v23 = sub_1A594A74C();
  v24 = sub_1A594C018();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    *(_QWORD *)&v70 = v32;
    v27 = v26;
    *(_QWORD *)&v73 = v26;
    *(_DWORD *)v25 = 68158210;
    LODWORD(v89[0]) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v25 + 8) = 256;
    v28 = &v11[*(int *)(v69 + 20)];
    LOBYTE(v89[0]) = *v28;
    sub_1A594C3CC();
    *(_WORD *)(v25 + 11) = 2082;
    v29 = ConnectionID.debugDescription.getter(*((unsigned int *)v28 + 1));
    v89[0] = sub_1A589167C(v29, v30, (uint64_t *)&v73);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    _os_log_impl(&dword_1A4F90000, v23, v24, "[%.*hhx-%{public}s] Caught error processing Handshake query", (uint8_t *)v25, 0x15u);
    swift_arrayDestroy();
    v31 = v27;
    v32 = v70;
    MEMORY[0x1A85B1964](v31, -1, -1);
    MEMORY[0x1A85B1964](v25, -1, -1);
  }
  else
  {
    sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  }

  v33 = *(_QWORD *)(v72 + 24);
  v34 = *(_QWORD *)(v72 + 32);
  __swift_project_boxed_opaque_existential_1_0((_QWORD *)v72, v33);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v34 + 8))(&v83, v33, v34);
  v72 = v83;
  v69 = v85;
  v70 = v84;
  v68 = v86;
  v35 = v87;
  v36 = v88;

  sub_1A55034FC(v32, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  v77 = v72;
  v78 = v70;
  v79 = v69;
LABEL_6:
  v80 = v68;
  v81 = v35;
  v82 = v36;
  sub_1A5862228((uint64_t)&v77);
  sub_1A5862234(&v77, (uint64_t)&v73);
  nullsub_1(&v73);
  sub_1A55032A0((uint64_t)&v73, (uint64_t)v89, &qword_1EE7981D8);
  v37 = 0;
  v38 = 0;
  v39 = -1;
LABEL_7:
  *(_QWORD *)&v73 = v37;
  *((_QWORD *)&v73 + 1) = v38;
  v74 = v39;
  sub_1A55032A0((uint64_t)v89, (uint64_t)v75, &qword_1EE7981D8);
  v40 = v74;
  v41 = v76;
  result = *(double *)&v73;
  v43 = v75[0];
  v44 = v75[1];
  v45 = v75[2];
  v46 = v75[3];
  v47 = v75[4];
  v48 = v75[5];
  v49 = v75[6];
  v50 = v75[7];
  v51 = v75[8];
  v52 = v75[9];
  v53 = v75[10];
  *(_OWORD *)a4 = v73;
  *(_BYTE *)(a4 + 16) = v40;
  *(_OWORD *)(a4 + 24) = v43;
  *(_OWORD *)(a4 + 40) = v44;
  *(_OWORD *)(a4 + 56) = v45;
  *(_OWORD *)(a4 + 72) = v46;
  *(_OWORD *)(a4 + 88) = v47;
  *(_OWORD *)(a4 + 104) = v48;
  *(_OWORD *)(a4 + 120) = v49;
  *(_OWORD *)(a4 + 136) = v50;
  *(_OWORD *)(a4 + 152) = v51;
  *(_OWORD *)(a4 + 168) = v52;
  *(_OWORD *)(a4 + 184) = v53;
  *(_BYTE *)(a4 + 200) = v41;
  return result;
}

uint64_t sub_1A5861988@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  NSObject *v26;
  int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v43;
  uint64_t v44;
  int v45;
  os_log_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[23];
  _QWORD v59[10];
  _BYTE v60[56];
  uint64_t v61;
  _BYTE v62[80];
  _OWORD v63[3];
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[24];

  *(_QWORD *)&v50 = a3;
  v51 = a5;
  v8 = a4;
  v9 = type metadata accessor for AuthenticationTask();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v43 - v16;
  sub_1A55034B8((uint64_t)v5 + *(int *)(v9 + 20), (uint64_t)&v43 - v16, v18);
  if (v8)
  {
    v19 = v5[3];
    v20 = v5[4];
    __swift_project_boxed_opaque_existential_1_0(v5, v19);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v20 + 8))(v63, v19, v20);
    v49 = v63[1];
    v50 = v63[0];
    v47 = v64;
    v48 = v63[2];
    v21 = v65;
    v22 = v66;
    sub_1A55034FC((uint64_t)v17, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v52 = v50;
    v53 = v49;
    v54 = v48;
    v55 = v47;
    v56 = v21;
    v57 = v22;
    sub_1A5862228((uint64_t)&v52);
    sub_1A5862234(&v52, (uint64_t)v58);
    nullsub_1(v58);
    sub_1A55032A0((uint64_t)v58, (uint64_t)v67, &qword_1EE7981D8);
    v23 = v51;
  }
  else
  {
    *(_QWORD *)&v48 = v9;
    *(_QWORD *)&v49 = a2;
    sub_1A55034B8((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    sub_1A5862270(a1);
    v24 = v50;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v25 = v5;
    sub_1A55034B8((uint64_t)v5, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
    v26 = sub_1A594A74C();
    v27 = sub_1A594C030();
    if (os_log_type_enabled(v26, (os_log_type_t)v27))
    {
      v43 = v17;
      v45 = v27;
      v46 = v26;
      v28 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      v58[0] = v44;
      *(_DWORD *)v28 = 68158466;
      LODWORD(v67[0]) = 2;
      *(_QWORD *)&v47 = v11;
      sub_1A594C3CC();
      *(_WORD *)(v28 + 8) = 256;
      v29 = &v14[*(int *)(v12 + 20)];
      LOBYTE(v67[0]) = *v29;
      sub_1A594C3CC();
      *(_WORD *)(v28 + 11) = 2082;
      v30 = ConnectionID.debugDescription.getter(*((unsigned int *)v29 + 1));
      v67[0] = sub_1A589167C(v30, v31, v58);
      v32 = (_QWORD *)v47;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v14, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      *(_WORD *)(v28 + 21) = 2082;
      v33 = v32[3];
      v34 = v32[4];
      __swift_project_boxed_opaque_existential_1_0(v32, v33);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v34 + 8))(v59, v33, v34);
      sub_1A58622C0((uint64_t)v59, (uint64_t)v60);
      v35 = v61;
      v61 &= ~0x1000000000000000uLL;
      if ((v35 & 0x1000000000000000) != 0)
      {
        sub_1A585BA78((uint64_t)v60, (uint64_t)v62);
        v67[0] = 0x204C534153;
        v67[1] = 0xE500000000000000;
        sub_1A585BA78((uint64_t)v62, (uint64_t)v63);
        __asm { BR              X12 }
      }
      sub_1A58622FC((uint64_t)v59);
      v36 = v49;
      v37 = v48;
      v38 = (uint64_t)v43;
      v67[0] = sub_1A589167C(0x4E49474F4CLL, 0xE500000000000000, v58);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v47, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
      v39 = v46;
      _os_log_impl(&dword_1A4F90000, v46, (os_log_type_t)v45, "[%.*hhx-%{public}s] Authenticated with '%{public}s'.", (uint8_t *)v28, 0x1Fu);
      v40 = v44;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v40, -1, -1);
      MEMORY[0x1A85B1964](v28, -1, -1);

      sub_1A55034FC(v38, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      v23 = v51;
      v24 = v50;
    }
    else
    {

      sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
      sub_1A55034FC((uint64_t)v14, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      sub_1A55034FC((uint64_t)v17, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      v36 = v49;
      v37 = v48;
      v23 = v51;
    }
    v41 = *(_QWORD *)((char *)v25 + *(int *)(v37 + 28));
    *(_QWORD *)&v52 = a1;
    *((_QWORD *)&v52 + 1) = v36;
    *(_QWORD *)&v53 = v24;
    *((_QWORD *)&v53 + 1) = v41;
    sub_1A571EE28((uint64_t)&v52);
    sub_1A5862234(&v52, (uint64_t)v58);
    nullsub_1(v58);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55032A0((uint64_t)v58, (uint64_t)v67, &qword_1EE7981D8);
  }
  return sub_1A55032A0((uint64_t)v67, v23, &qword_1EE7981D8);
}

uint64_t sub_1A5862070(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_1A586207C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3[9];

  sub_1A5860788(v3);
  return sub_1A55032A0((uint64_t)v3, a1, &qword_1EE7982A0);
}

uint64_t sub_1A58620C0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, uint64_t a5@<X8>)
{
  _BYTE v7[184];

  sub_1A5861988(a1, a2, a3, a4, (uint64_t)v7);
  return sub_1A55032A0((uint64_t)v7, a5, &qword_1EE7981D8);
}

uint64_t sub_1A5862100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  _QWORD *v12;
  char v13;
  char v14;
  char v15;
  char v16;
  uint64_t v18;

  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - v9;
  v13 = sub_1A586353C(v11, v12);
  sub_1A55034B8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
  sub_1A55034B8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
  if ((v13 & 1) != 0)
  {
    v14 = v10[*(int *)(a3 + 24)];
    sub_1A55034FC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
    v15 = v7[*(int *)(a3 + 24)];
    sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
    v16 = v14 ^ v15 ^ 1;
  }
  else
  {
    sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
    sub_1A55034FC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_1A5862228(uint64_t result)
{
  *(_BYTE *)(result + 176) = 2;
  return result;
}

uint64_t sub_1A5862234(__int128 *a1, uint64_t a2)
{
  __swift_memcpy177_8_2(a2, a1);
  return a2;
}

unint64_t sub_1A5862270(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1A5862284(result);
  return result;
}

unint64_t sub_1A5862284(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A58622C0(uint64_t a1, uint64_t a2)
{
  __swift_memcpy80_8_3(a2, a1);
  return a2;
}

uint64_t sub_1A58622FC(uint64_t a1)
{
  sub_1A5862344(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return a1;
}

uint64_t sub_1A5862344(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if ((a8 & 0x1000000000000000) != 0)
    return sub_1A585B504(a1, a2, a3, a4, a5, a6, a7, a8 & 0xEFFFFFFFFFFFFFFFLL, a9, a10);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A586238C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned __int8 a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a65;

  switch(a65 >> 59)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      sub_1A5862270(result);
      goto LABEL_9;
    case 5uLL:
    case 6uLL:
    case 9uLL:
    case 0xBuLL:
    case 0xDuLL:
      goto LABEL_9;
    case 7uLL:
    case 8uLL:
      swift_retain();
      swift_retain();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_9;
    case 0xAuLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_9;
    case 0xCuLL:
      sub_1A55235F0(result, a2);
      goto LABEL_9;
    case 0x11uLL:
    case 0x12uLL:
      return sub_1A54E4334(result, a2, SBYTE4(a2));
    case 0x13uLL:
      sub_1A5523620(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21,
        a22,
        a23,
        a24,
        a25);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5523620(a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45,
        a46,
        a47,
        a48,
        a49);
      sub_1A5523AD8(a50, a51, a52, a53, a54, a55);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_9:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 0x14uLL:
      swift_retain();
      swift_retain();
      result = swift_retain();
      break;
    case 0x15uLL:
      result = sub_1A5523B84();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A5862784(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned __int8 a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a65;

  switch(a65 >> 59)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      sub_1A5862B80(result);
      goto LABEL_3;
    case 5uLL:
    case 6uLL:
    case 9uLL:
    case 0xBuLL:
    case 0xDuLL:
      goto LABEL_3;
    case 7uLL:
    case 8uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_10;
    case 0xAuLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 0xCuLL:
      sub_1A55240D4(result, a2);
      goto LABEL_3;
    case 0x11uLL:
    case 0x12uLL:
      return sub_1A54E3458(result, a2, SBYTE4(a2));
    case 0x13uLL:
      sub_1A5524104(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21,
        a22,
        a23,
        a24,
        a25);
      swift_bridgeObjectRelease();
      sub_1A5524104(a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45,
        a46,
        a47,
        a48,
        a49);
      sub_1A55245C0(a50, a51, a52, a53, a54, a55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_3:
      result = swift_bridgeObjectRelease();
      break;
    case 0x14uLL:
      swift_release();
      swift_release();
LABEL_10:
      result = swift_release();
      break;
    case 0x15uLL:
      result = sub_1A552466C();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A5862B80(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1A5862B94(result);
  return result;
}

unint64_t sub_1A5862B94(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A5862BD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE795FA8;
  if (!qword_1EE795FA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE799A60);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EE795FA8);
  }
  return result;
}

uint64_t sub_1A5862C1C(uint64_t a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_1A54E42B4(a1, a2);
  else
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void sub_1A5862C30(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5862C78()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1A5862CB8 + dword_1A5862D84[v0 >> 62]))();
}

uint64_t sub_1A5862CC8()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  if (v4 == BYTE6(v2))
  {
    if (v4 < 1)
    {
      v6 = 1;
    }
    else
    {
      sub_1A54E42B4(v3, v2);
      sub_1A5863264(v1, v0);
      v6 = v5;
    }
  }
  else
  {
    v6 = 0;
  }
  sub_1A54E46E8(v1, v0);
  return v6 & 1;
}

uint64_t sub_1A5862D94(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 1701602409;
  else
    v2 = 1886351214;
  if ((a2 & 1) != 0)
    v3 = 1701602409;
  else
    v3 = 1886351214;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1A594CD38();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1A5862E00()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = (v2 >> 60) & 3;
  if ((_DWORD)v3)
  {
    if ((_DWORD)v3 != 1)
      __asm { BR              X9 }
    v4 = v1;
  }
  else
  {
    sub_1A585BA34();
    swift_allocError();
    *(_QWORD *)v5 = v1;
    *(_QWORD *)(v5 + 8) = v2;
    *(_BYTE *)(v5 + 16) = 0;
    sub_1A585C524((uint64_t)v1, v2);
  }
  return swift_willThrow();
}

uint64_t sub_1A5862EC0()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)sub_1A5862EDC + 4 * byte_1A59DCE44[v0 >> 62]))();
}

void sub_1A5862EDC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;

  if ((v3 & 0xFF000000000000) != 0
    && (v5 = v0[3],
        v6 = v0[4],
        __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)v0, v5),
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 32))(v4, v3, v1, v5, v6),
        v2))
  {
    v0[5] = v2;
    v0[6] = 0x1000000000000000;
    v7 = v2;
  }
  else
  {
    v8 = v0[3];
    v9 = v0[4];
    __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)v0, v8);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
    if (!v2)
    {
      if (v11 >> 60 != 15)
      {
        v0[5] = v10;
        v0[6] = v11;
        JUMPOUT(0x1A5862EA4);
      }
      sub_1A586431C();
      v2 = (void *)swift_allocError();
      swift_willThrow();
    }
    v12 = v0[5];
    v13 = v0[6];
    v14 = v2;
    sub_1A585C57C(v12, v13);
    v0[5] = v2;
    v0[6] = 0x1000000000000000;
  }
  JUMPOUT(0x1A5862E9CLL);
}

uint64_t sub_1A5862FE4(uint64_t a1, uint64_t a2)
{
  return sub_1A58641D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

void sub_1A5862FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1A586305C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1A5863240);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_1A5863264(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A58632C0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_1A5862FFC((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_1A54E46E8(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1A5863488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1A5949BE8();
  v11 = result;
  if (result)
  {
    result = sub_1A5949C0C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1A5949C00();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1A5862FFC(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

uint64_t sub_1A586353C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  char v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  char v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  char v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  char v118;
  _BYTE v119[40];
  _BYTE v120[40];
  _QWORD v121[10];
  _QWORD v122[10];
  _BYTE v123[56];
  uint64_t v124;
  _BYTE v125[80];
  _QWORD v126[7];
  uint64_t v127;
  _QWORD v128[7];
  uint64_t v129;
  _OWORD v130[4];
  char v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  char v136;
  _OWORD v137[3];
  uint64_t v138;
  unint64_t v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  unint64_t v145;
  __int128 v146;

  v4 = a1[5];
  v5 = a1[6];
  v7 = a2[5];
  v6 = a2[6];
  v8 = (v5 >> 60) & 3;
  if ((_DWORD)v8)
  {
    if ((_DWORD)v8 != 1)
      __asm { BR              X9 }
    if ((v6 & 0x3000000000000000) != 0x1000000000000000)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 0x3000000000000000) != 0)
      goto LABEL_22;
    sub_1A585C524(a1[5], v5);
    sub_1A585C524(v7, v6);
    sub_1A5862C30(v4, v5);
    v10 = v9;
    sub_1A585C57C(v7, v6);
    sub_1A585C57C(v4, v5);
    if ((v10 & 1) == 0)
      goto LABEL_22;
  }
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1_0(a1, v11);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 8))(v121, v11, v12);
  v76 = v121[1];
  v78 = v121[0];
  v73 = v121[3];
  v74 = v121[2];
  v71 = v121[4];
  v13 = v121[5];
  v14 = v121[6];
  v15 = v121[7];
  v16 = v121[8];
  v17 = v121[9];
  v18 = a2[3];
  v19 = a2[4];
  __swift_project_boxed_opaque_existential_1_0(a2, v18);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v19 + 8))(v122, v18, v19);
  sub_1A58622C0((uint64_t)v121, (uint64_t)v126);
  v20 = v127;
  v127 &= ~0x1000000000000000uLL;
  if ((v20 & 0x1000000000000000) != 0)
  {
    sub_1A585BA78((uint64_t)v126, (uint64_t)v128);
    sub_1A58622C0((uint64_t)v122, (uint64_t)v123);
    v28 = v124;
    v124 &= ~0x1000000000000000uLL;
    if ((v28 & 0x1000000000000000) != 0)
    {
      sub_1A585BA78((uint64_t)v123, (uint64_t)v125);
      sub_1A585B39C(v78, v76, v74, v73, v71, v13, v14, v15 & 0xEFFFFFFFFFFFFFFFLL, v16, v17);
      sub_1A586B68C((uint64_t)v128);
      v30 = v29;
      sub_1A58622FC((uint64_t)v121);
      sub_1A58622FC((uint64_t)v122);
      sub_1A58622FC((uint64_t)v121);
      if ((v30 & 1) == 0)
        goto LABEL_22;
      goto LABEL_25;
    }
LABEL_21:
    sub_1A58622FC((uint64_t)v122);
    sub_1A58622FC((uint64_t)v121);
    goto LABEL_22;
  }
  v21 = v126[0];
  v22 = v126[1];
  v23 = v126[2];
  v24 = v126[3];
  sub_1A58622C0((uint64_t)v122, (uint64_t)v128);
  v25 = v129;
  v129 &= ~0x1000000000000000uLL;
  if ((v25 & 0x1000000000000000) != 0)
  {
    sub_1A585BA78((uint64_t)v128, (uint64_t)&v109);
    goto LABEL_21;
  }
  v26 = v128[2];
  v27 = v128[3];
  if ((v21 != v128[0] || v22 != v128[1]) && (sub_1A594CD38() & 1) == 0)
    goto LABEL_21;
  if (v23 == v26 && v24 == v27)
  {
    sub_1A58622FC((uint64_t)v122);
    sub_1A58622FC((uint64_t)v121);
  }
  else
  {
    v33 = sub_1A594CD38();
    sub_1A58622FC((uint64_t)v122);
    sub_1A58622FC((uint64_t)v121);
    v31 = 0;
    if ((v33 & 1) == 0)
      return v31 & 1;
  }
LABEL_25:
  sub_1A54FBF7C((uint64_t)a1, (uint64_t)v119);
  sub_1A54FBF7C((uint64_t)a2, (uint64_t)v120);
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798200);
  if (swift_dynamicCast())
  {
    v105 = v115;
    v106 = v116;
    v107 = v117;
    v108 = v118;
    v101 = v111;
    v102 = v112;
    v103 = v113;
    v104 = v114;
    v99 = v109;
    v100 = v110;
    if (swift_dynamicCast())
    {
      v85 = v95;
      v86 = v96;
      v87 = v97;
      v88 = v98;
      v81 = v91;
      v82 = v92;
      v83 = v93;
      v84 = v94;
      v79 = v89;
      v80 = v90;
      v35 = *((_QWORD *)&v100 + 1);
      v34 = v100;
      if ((*((_QWORD *)&v102 + 1) & 0x1000000000000000) != 0)
      {
        v137[0] = v99;
        v137[1] = v100;
        v137[2] = v101;
        v138 = v102;
        v139 = *((_QWORD *)&v102 + 1) & 0xEFFFFFFFFFFFFFFFLL;
        v140 = v103;
        if ((*((_QWORD *)&v82 + 1) & 0x1000000000000000) == 0)
        {
          v31 = 0;
LABEL_55:
          sub_1A586400C((uint64_t)&v79);
          sub_1A586400C((uint64_t)&v99);
          goto LABEL_56;
        }
        v141 = v89;
        v142 = v90;
        v143 = v81;
        v144 = v82;
        v145 = *((_QWORD *)&v92 + 1) & 0xEFFFFFFFFFFFFFFFLL;
        v146 = v83;
        sub_1A586418C(v99, *((unint64_t *)&v99 + 1), v100, *((unint64_t *)&v100 + 1), v101, *((unint64_t *)&v101 + 1), v102, *((uint64_t *)&v102 + 1), v103, *((unint64_t *)&v103 + 1));
        sub_1A586418C(v89, *((unint64_t *)&v89 + 1), v90, *((unint64_t *)&v90 + 1), v81, *((unint64_t *)&v81 + 1), v82, *((uint64_t *)&v92 + 1), v83, *((unint64_t *)&v83 + 1));
        sub_1A586B68C((uint64_t)v137);
        v65 = v56;
        sub_1A5862344(v89, *((unint64_t *)&v89 + 1), v90, *((unint64_t *)&v90 + 1), v81, *((unint64_t *)&v81 + 1), v82, *((uint64_t *)&v92 + 1), v83, *((unint64_t *)&v83 + 1));
        sub_1A5862344(v99, *((unint64_t *)&v99 + 1), v100, *((unint64_t *)&v100 + 1), v101, *((unint64_t *)&v101 + 1), v102, *((uint64_t *)&v102 + 1), v103, *((unint64_t *)&v103 + 1));
        if ((v65 & 1) != 0)
        {
LABEL_53:
          v130[0] = v104;
          v130[1] = v105;
          v130[2] = v106;
          v130[3] = v107;
          v131 = v108;
          v132 = v84;
          v133 = v85;
          v134 = v86;
          v135 = v87;
          v136 = v88;
          sub_1A58EB768((uint64_t)v130);
          v31 = v57;
          goto LABEL_55;
        }
      }
      else if ((*((_QWORD *)&v82 + 1) & 0x1000000000000000) == 0)
      {
        if (v99 != v79)
        {
          v36 = sub_1A594CD38();
          v35 = *((_QWORD *)&v100 + 1);
          v34 = v100;
          v31 = 0;
          if ((v36 & 1) == 0)
            goto LABEL_55;
        }
        if (__PAIR128__(v35, v34) != v90)
        {
          v31 = 0;
          if ((sub_1A594CD38() & 1) == 0)
            goto LABEL_55;
        }
        goto LABEL_53;
      }
      v31 = 0;
      goto LABEL_55;
    }
    sub_1A586400C((uint64_t)&v99);
  }
  if (swift_dynamicCast())
  {
    v77 = v109;
    v37 = *((_QWORD *)&v110 + 1);
    v38 = v110;
    v39 = *((_QWORD *)&v111 + 1);
    v40 = v111;
    v42 = *((_QWORD *)&v112 + 1);
    v41 = v112;
    v43 = *((_QWORD *)&v113 + 1);
    v75 = v113;
    v72 = *((_QWORD *)&v114 + 1);
    v44 = v114;
    if (swift_dynamicCast())
      goto LABEL_40;
    sub_1A585B504(v77, *((unint64_t *)&v77 + 1), v38, v37, v40, v39, v41, v42, v75, v43);
    sub_1A5524FD4(v44, v72);
  }
  if (swift_dynamicCast())
  {
    v77 = v109;
    v37 = *((_QWORD *)&v110 + 1);
    v38 = v110;
    v39 = *((_QWORD *)&v111 + 1);
    v40 = v111;
    v42 = *((_QWORD *)&v112 + 1);
    v41 = v112;
    v43 = *((_QWORD *)&v113 + 1);
    v75 = v113;
    v72 = *((_QWORD *)&v114 + 1);
    v44 = v114;
    if (swift_dynamicCast())
    {
LABEL_40:
      v45 = v40;
      v46 = *((_QWORD *)&v101 + 1);
      v47 = v102;
      v48 = v103;
      v49 = v42;
      v50 = *((_QWORD *)&v103 + 1);
      v62 = v104;
      v63 = v38;
      v70 = *((_QWORD *)&v104 + 1);
      v79 = v77;
      *(_QWORD *)&v80 = v38;
      *((_QWORD *)&v80 + 1) = v37;
      v64 = v37;
      v66 = v45;
      *(_QWORD *)&v81 = v45;
      *((_QWORD *)&v81 + 1) = v39;
      v67 = v39;
      v68 = v41;
      *(_QWORD *)&v82 = v41;
      *((_QWORD *)&v82 + 1) = v49;
      v69 = v49;
      *(_QWORD *)&v83 = v75;
      *((_QWORD *)&v83 + 1) = v43;
      v51 = v99;
      v89 = v99;
      v52 = *((_QWORD *)&v99 + 1);
      v53 = v100;
      v90 = v100;
      v54 = *((_QWORD *)&v100 + 1);
      v61 = v101;
      v91 = v101;
      v92 = v102;
      v93 = v103;
      sub_1A586B68C((uint64_t)&v79);
      if ((v55 & 1) != 0)
      {
        v60 = v43;
        if (v72 >> 60 == 15)
        {
          sub_1A585B504(v51, v52, v53, v54, v61, v46, v47, *((uint64_t *)&v47 + 1), v48, v50);
          sub_1A5524FD4(v62, v70);
          sub_1A585B504(v77, *((unint64_t *)&v77 + 1), v63, v64, v66, v67, v68, v69, v75, v43);
          sub_1A5524FD4(v44, v72);
          if (v70 >> 60 == 15)
            goto LABEL_58;
          goto LABEL_45;
        }
        if (v70 >> 60 != 15)
        {
          sub_1A5524FC0(v44, v72);
          sub_1A5524FC0(v62, v70);
          sub_1A5862C30(v44, v72);
          v59 = v58;
          sub_1A5524FD4(v62, v70);
          sub_1A5524FD4(v44, v72);
          sub_1A585B504(v51, v52, v53, v54, v61, v46, v47, *((uint64_t *)&v47 + 1), v48, v50);
          sub_1A5524FD4(v62, v70);
          sub_1A585B504(v77, *((unint64_t *)&v77 + 1), v63, v64, v66, v67, v68, v69, v75, v60);
          sub_1A5524FD4(v44, v72);
          if ((v59 & 1) != 0)
          {
LABEL_58:
            v31 = 1;
            goto LABEL_56;
          }
LABEL_45:
          v31 = 0;
LABEL_56:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v120);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v119);
          return v31 & 1;
        }
      }
      sub_1A585B504(v51, v52, v53, v54, v61, v46, v47, *((uint64_t *)&v47 + 1), v48, v50);
      sub_1A5524FD4(v62, v70);
      sub_1A585B504(v77, *((unint64_t *)&v77 + 1), v63, v64, v66, v67, v68, v69, v75, v43);
      sub_1A5524FD4(v44, v72);
      goto LABEL_45;
    }
    sub_1A585B504(v77, *((unint64_t *)&v77 + 1), v38, v37, v40, v39, v41, v42, v75, v43);
    sub_1A5524FD4(v44, v72);
  }
  sub_1A5863FCC((uint64_t)v119);
LABEL_22:
  v31 = 0;
  return v31 & 1;
}

uint64_t sub_1A5863FCC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAB28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A586400C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 120);
  v8 = *(_QWORD *)(a1 + 128);
  v9 = *(_QWORD *)(a1 + 136);
  v10 = *(_BYTE *)(a1 + 144);
  sub_1A5862344(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  sub_1A58640B0(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1A58640B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result;

  switch(a9)
  {
    case 0:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2:
      swift_release();
      swift_release();
LABEL_5:
      result = swift_release();
      break;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A586418C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if ((a8 & 0x1000000000000000) != 0)
    return sub_1A585B39C(a1, a2, a3, a4, a5, a6, a7, a8 & 0xEFFFFFFFFFFFFFFFLL, a9, a10);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A58641D4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  char v9;
  char v10;

  v7 = (a2 >> 60) & 3;
  if ((_DWORD)v7)
  {
    if ((_DWORD)v7 != 1)
      __asm { BR              X9 }
    if ((a4 & 0x3000000000000000) == 0x1000000000000000)
      return 1;
  }
  else if ((a4 & 0x3000000000000000) == 0)
  {
    sub_1A585C524(a1, a2);
    sub_1A585C524(a3, a4);
    sub_1A5862C30(a1, a2);
    v10 = v9;
    sub_1A585C57C(a3, a4);
    sub_1A585C57C(a1, a2);
    if ((v10 & 1) != 0)
      return 1;
  }
  return 0;
}

unint64_t sub_1A586431C()
{
  unint64_t result;

  result = qword_1EE7AAB30;
  if (!qword_1EE7AAB30)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DCEF0, &_s14descr1E4F16699C5StateV33ImplementationRequestsSecondQueryVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AAB30);
  }
  return result;
}

ValueMetadata *_s14descr1E4F16699C5StateV33ImplementationRequestsSecondQueryVMa()
{
  return &_s14descr1E4F16699C5StateV33ImplementationRequestsSecondQueryVN;
}

uint64_t *_s14descr1E4F16699C5StateV4StepOwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_1A585C524(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

void _s14descr1E4F16699C5StateV4StepOwxx(uint64_t a1)
{
  sub_1A585C57C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *_s14descr1E4F16699C5StateV4StepOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_1A585C524(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1A585C57C(v5, v6);
  return a1;
}

uint64_t *_s14descr1E4F16699C5StateV4StepOwta(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1A585C57C(v3, v4);
  return a1;
}

uint64_t _s14descr1E4F16699C5StateV4StepOwet(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2);
  if ((~*(_QWORD *)(a1 + 8) & 0x3000000000000000) != 0)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t _s14descr1E4F16699C5StateV4StepOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_OWORD *)result = xmmword_1A59BA3C0;
  }
  return result;
}

uint64_t sub_1A58644C0(uint64_t a1)
{
  if (((*(_QWORD *)(a1 + 8) >> 60) & 2) != 0)
    return (*(_DWORD *)a1 + 2);
  else
    return (*(_QWORD *)(a1 + 8) >> 60) & 3;
}

uint64_t sub_1A58644E0(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

_QWORD *sub_1A58644F0(_QWORD *result, uint64_t a2)
{
  if (a2 < 2)
  {
    result[1] = result[1] & 0xCFFFFFFFFFFFFFFFLL | (a2 << 60);
  }
  else
  {
    *result = (a2 - 2);
    result[1] = 0x2000000000000000;
  }
  return result;
}

ValueMetadata *_s14descr1E4F16699C5StateV4StepOMa()
{
  return &_s14descr1E4F16699C5StateV4StepON;
}

void _s14descr1E4F16699C5StateVwxx(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_1A585C57C(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

uint64_t _s14descr1E4F16699C5StateVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v6 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  sub_1A585C524(v6, v5);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v5;
  return a1;
}

uint64_t *_s14descr1E4F16699C5StateVwca(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v5 = a2[5];
  v4 = a2[6];
  sub_1A585C524(v5, v4);
  v6 = a1[5];
  v7 = a1[6];
  a1[5] = v5;
  a1[6] = v4;
  sub_1A585C57C(v6, v7);
  return a1;
}

__n128 __swift_memcpy56_8_3(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s14descr1E4F16699C5StateVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  unint64_t v6;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_1A585C57C(v5, v6);
  return a1;
}

uint64_t _s14descr1E4F16699C5StateVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14descr1E4F16699C5StateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s14descr1E4F16699C5StateVMa()
{
  return &_s14descr1E4F16699C5StateVN;
}

uint64_t sub_1A58646FC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, int *);
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, _QWORD, uint64_t, int *);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    v6 = *(int *)(a3 + 28);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = (int *)type metadata accessor for AuthenticationTask();
    v10 = *((_QWORD *)v9 - 1);
    v11 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v10 + 48);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
      memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = *(_OWORD *)(v8 + 24);
      *(_OWORD *)(v7 + 24) = v13;
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v7, v8);
      v14 = *(_QWORD *)(v8 + 40);
      v15 = *(_QWORD *)(v8 + 48);
      sub_1A585C524(v14, v15);
      *(_QWORD *)(v7 + 40) = v14;
      *(_QWORD *)(v7 + 48) = v15;
      v16 = v9[5];
      v17 = v7 + v16;
      v18 = v8 + v16;
      v19 = sub_1A594A764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      v20 = _s6LoggerVMa_0();
      *(_QWORD *)(v17 + *(int *)(v20 + 20)) = *(_QWORD *)(v18 + *(int *)(v20 + 20));
      *(_BYTE *)(v7 + v9[6]) = *(_BYTE *)(v8 + v9[6]);
      *(_QWORD *)(v7 + v9[7]) = *(_QWORD *)(v8 + v9[7]);
      *(_BYTE *)(v7 + v9[8]) = *(_BYTE *)(v8 + v9[8]);
      v21 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v10 + 56);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v21(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_1A5864890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for AuthenticationTask();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    __swift_destroy_boxed_opaque_existential_1(v4);
    sub_1A585C57C(*(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48));
    v7 = v4 + *(int *)(v5 + 20);
    v8 = sub_1A594A764();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A5864944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, int *);
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, _QWORD, uint64_t, int *);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = (int *)type metadata accessor for AuthenticationTask();
  v8 = *((_QWORD *)v7 - 1);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v8 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v9(v6, 1, v7))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
    memcpy((void *)v5, (const void *)v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = *(_OWORD *)(v6 + 24);
    *(_OWORD *)(v5 + 24) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v5, v6);
    v12 = *(_QWORD *)(v6 + 40);
    v13 = *(_QWORD *)(v6 + 48);
    sub_1A585C524(v12, v13);
    *(_QWORD *)(v5 + 40) = v12;
    *(_QWORD *)(v5 + 48) = v13;
    v14 = v7[5];
    v15 = v5 + v14;
    v16 = v6 + v14;
    v17 = sub_1A594A764();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = _s6LoggerVMa_0();
    *(_QWORD *)(v15 + *(int *)(v18 + 20)) = *(_QWORD *)(v16 + *(int *)(v18 + 20));
    *(_BYTE *)(v5 + v7[6]) = *(_BYTE *)(v6 + v7[6]);
    *(_QWORD *)(v5 + v7[7]) = *(_QWORD *)(v6 + v7[7]);
    *(_BYTE *)(v5 + v7[8]) = *(_BYTE *)(v6 + v7[8]);
    v19 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v8 + 56);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v19(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1A5864AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t *, _QWORD, uint64_t, int *);
  uint64_t v23;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (uint64_t *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v9 = (int *)type metadata accessor for AuthenticationTask();
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      __swift_assign_boxed_opaque_existential_1(v7, v8);
      v25 = v8[5];
      v26 = v8[6];
      sub_1A585C524(v25, v26);
      v27 = v7[5];
      v28 = v7[6];
      v7[5] = v25;
      v7[6] = v26;
      sub_1A585C57C(v27, v28);
      v29 = v9[5];
      v30 = (char *)v7 + v29;
      v31 = (char *)v8 + v29;
      v32 = sub_1A594A764();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
      v33 = *(int *)(_s6LoggerVMa_0() + 20);
      v34 = &v30[v33];
      v35 = &v31[v33];
      *v34 = *v35;
      *((_DWORD *)v34 + 1) = *((_DWORD *)v35 + 1);
      *((_BYTE *)v7 + v9[6]) = *((_BYTE *)v8 + v9[6]);
      *(uint64_t *)((char *)v7 + v9[7]) = *(uint64_t *)((char *)v8 + v9[7]);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *((_BYTE *)v7 + v9[8]) = *((_BYTE *)v8 + v9[8]);
      return a1;
    }
    sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  v14 = v8[3];
  v7[3] = v14;
  v7[4] = v8[4];
  (**(void (***)(uint64_t *, uint64_t *))(v14 - 8))(v7, v8);
  v15 = v8[5];
  v16 = v8[6];
  sub_1A585C524(v15, v16);
  v7[5] = v15;
  v7[6] = v16;
  v17 = v9[5];
  v18 = (char *)v7 + v17;
  v19 = (char *)v8 + v17;
  v20 = sub_1A594A764();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = _s6LoggerVMa_0();
  *(_QWORD *)&v18[*(int *)(v21 + 20)] = *(_QWORD *)&v19[*(int *)(v21 + 20)];
  *((_BYTE *)v7 + v9[6]) = *((_BYTE *)v8 + v9[6]);
  *(uint64_t *)((char *)v7 + v9[7]) = *(uint64_t *)((char *)v8 + v9[7]);
  *((_BYTE *)v7 + v9[8]) = *((_BYTE *)v8 + v9[8]);
  v22 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v10 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v22(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1A5864D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = (_OWORD *)(a1 + v4);
  v6 = (_OWORD *)(a2 + v4);
  v7 = (int *)type metadata accessor for AuthenticationTask();
  v8 = *((_QWORD *)v7 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = v6[1];
    *v5 = *v6;
    v5[1] = v10;
    v5[2] = v6[2];
    *((_QWORD *)v5 + 6) = *((_QWORD *)v6 + 6);
    v11 = v7[5];
    v12 = (char *)v5 + v11;
    v13 = (char *)v6 + v11;
    v14 = sub_1A594A764();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    v15 = _s6LoggerVMa_0();
    *(_QWORD *)&v12[*(int *)(v15 + 20)] = *(_QWORD *)&v13[*(int *)(v15 + 20)];
    *((_BYTE *)v5 + v7[6]) = *((_BYTE *)v6 + v7[6]);
    *(_QWORD *)((char *)v5 + v7[7]) = *(_QWORD *)((char *)v6 + v7[7]);
    *((_BYTE *)v5 + v7[8]) = *((_BYTE *)v6 + v7[8]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1A5864E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, int *);
  int v12;
  int v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = (int *)type metadata accessor for AuthenticationTask();
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      __swift_destroy_boxed_opaque_existential_1(v7);
      v22 = *(_OWORD *)(v8 + 16);
      *(_OWORD *)v7 = *(_OWORD *)v8;
      *(_OWORD *)(v7 + 16) = v22;
      *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
      v23 = *(_QWORD *)(v7 + 40);
      v24 = *(_QWORD *)(v7 + 48);
      *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
      sub_1A585C57C(v23, v24);
      v25 = v9[5];
      v26 = v7 + v25;
      v27 = v8 + v25;
      v28 = sub_1A594A764();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
      v29 = *(int *)(_s6LoggerVMa_0() + 20);
      v30 = v26 + v29;
      v31 = v27 + v29;
      *(_BYTE *)v30 = *(_BYTE *)v31;
      *(_DWORD *)(v30 + 4) = *(_DWORD *)(v31 + 4);
      *(_BYTE *)(v7 + v9[6]) = *(_BYTE *)(v8 + v9[6]);
      *(_QWORD *)(v7 + v9[7]) = *(_QWORD *)(v8 + v9[7]);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v7 + v9[8]) = *(_BYTE *)(v8 + v9[8]);
      return a1;
    }
    sub_1A55034FC(v7, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  v14 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v14;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
  v15 = v9[5];
  v16 = v7 + v15;
  v17 = v8 + v15;
  v18 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = _s6LoggerVMa_0();
  *(_QWORD *)(v16 + *(int *)(v19 + 20)) = *(_QWORD *)(v17 + *(int *)(v19 + 20));
  *(_BYTE *)(v7 + v9[6]) = *(_BYTE *)(v8 + v9[6]);
  *(_QWORD *)(v7 + v9[7]) = *(_QWORD *)(v8 + v9[7]);
  *(_BYTE *)(v7 + v9[8]) = *(_BYTE *)(v8 + v9[8]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1A5865078()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5865084(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1A5865104()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1A5865110(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for Authenticator()
{
  uint64_t result;

  result = qword_1EE7980E8;
  if (!qword_1EE7980E8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A58651C4()
{
  unint64_t v0;

  sub_1A5865248();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1A5865248()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE7981B8)
  {
    type metadata accessor for AuthenticationTask();
    v0 = sub_1A594C354();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE7981B8);
  }
}

_QWORD *sub_1A586529C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _QWORD v41[10];
  uint64_t v42;

  v7 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Authenticator();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A58655C0(a2);
  if (v3)
  {
    sub_1A55034FC(a2, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    return sub_1A5867D68(a1);
  }
  else
  {
    v37 = v10;
    v38 = v15;
    v39 = v9;
    v17 = *a1;
    v35 = a1[1];
    v36 = a1;
    v42 = v17;
    v18 = MEMORY[0x1E0DEE9D8];
    v40 = MEMORY[0x1E0DEE9D8];
    v19 = *(_QWORD *)(v17 + 16);
    if (v19)
    {
      v33 = a3;
      v34 = a2;
      v20 = v17 + 32;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      do
      {
        sub_1A5868528(v20, (uint64_t)v41);
        sub_1A58687AC(v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5868564);
        sub_1A586C5D4((uint64_t)v41);
        v22 = v21;
        sub_1A58687AC(v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5868664);
        sub_1A58F2410(v22);
        v20 += 80;
        --v19;
      }
      while (v19);
      sub_1A54F81BC((uint64_t)&v42);
      v18 = v40;
      v23 = v33;
      a2 = v34;
    }
    else
    {
      v23 = a3;
    }
    v24 = v35;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v25 = sub_1A5867DEC(v18, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40 = v25;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A58665F8(&v40);
    v26 = v36;
    swift_bridgeObjectRelease();
    v27 = v40;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v28 = Capability.saslIR.unsafeMutableAddressor();
    LOBYTE(v25) = sub_1A579CCB0(*v28, v28[1], v28[2], *((_BYTE *)v28 + 24), v24);
    sub_1A5867D68(v26);
    swift_bridgeObjectRelease();
    v29 = (uint64_t)v38;
    sub_1A55034B8(a2, (uint64_t)v38, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    *((_QWORD *)v12 + 2) = MEMORY[0x1E0DEE9E8];
    v30 = (uint64_t)&v12[*(int *)(v37 + 28)];
    v31 = type metadata accessor for AuthenticationTask();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
    v12[8] = v25 & 1;
    *(_QWORD *)v12 = v27;
    v32 = (uint64_t)v39;
    sub_1A5865DEC(v29, (uint64_t)v39);
    sub_1A55034FC(v29, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    sub_1A5868764(v32, v30);
    sub_1A54E3394((uint64_t)v12, v23, (uint64_t (*)(_QWORD))type metadata accessor for Authenticator);
    return (_QWORD *)sub_1A55034FC(a2, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  }
}

uint64_t sub_1A58655C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t result;
  int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  _OWORD v63[2];
  __n128 v64;
  __n128 v65;
  __n128 v66;
  uint64_t v67;
  __n128 v68;
  __n128 v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  _BYTE v73[16];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v58 = a1;
  v57 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v57);
  v3 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v57 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v57 - v8;
  v10 = sub_1A594A764();
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v57 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v57 - v17;
  v19 = *(_OWORD *)(v1 + 32);
  v62 = *(__n128 *)(v1 + 16);
  v63[0] = v19;
  v63[1] = *(_OWORD *)(v1 + 48);
  sub_1A58687F8((__n128 *)((char *)v63 + 8), &v65);
  sub_1A5868834(&v62, &v64);
  sub_1A58687F8(&v65, &v66);
  v20 = v67;
  if (v67 == 1)
  {
    result = (uint64_t)sub_1A5868834(&v64, &v68);
    if (v68.n128_u64[0] >> 62)
    {
      if (v68.n128_u64[0] >> 62 == 1)
        return result;
      v36 = v58;
      v37 = v59;
      v26 = v60;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v18, v58, v60);
      sub_1A55034B8(v36, (uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v38 = sub_1A594A74C();
      v39 = sub_1A594C030();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = swift_slowAlloc();
        v41 = swift_slowAlloc();
        v76 = v41;
        *(_DWORD *)v40 = 68158210;
        LODWORD(v61) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v40 + 8) = 256;
        v42 = &v9[*(int *)(v57 + 20)];
        LOBYTE(v61) = *v42;
        sub_1A594C3CC();
        *(_WORD *)(v40 + 11) = 2082;
        v43 = ConnectionID.debugDescription.getter(*((unsigned int *)v42 + 1));
        v61 = sub_1A589167C(v43, v44, &v76);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        _os_log_impl(&dword_1A4F90000, v38, v39, "[%.*hhx-%{public}s] Sending credentials over insecure connection.", (uint8_t *)v40, 0x15u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v41, -1, -1);
        MEMORY[0x1A85B1964](v40, -1, -1);

        v34 = *(uint64_t (**)(char *, uint64_t))(v59 + 8);
        v35 = v18;
        goto LABEL_15;
      }
      sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

      v34 = *(uint64_t (**)(char *, uint64_t))(v37 + 8);
      v35 = v18;
    }
    else
    {
      v68.n128_u64[0] &= 0x3FFFFFFFFFFFFFFFuLL;
      v24 = v58;
      v25 = v59;
      v26 = v60;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v15, v58, v60);
      sub_1A55034B8(v24, (uint64_t)v6, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v27 = sub_1A594A74C();
      v28 = sub_1A594C030();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = swift_slowAlloc();
        v30 = swift_slowAlloc();
        v76 = v30;
        *(_DWORD *)v29 = 68158210;
        LODWORD(v61) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v29 + 8) = 256;
        v31 = &v6[*(int *)(v57 + 20)];
        LOBYTE(v61) = *v31;
        sub_1A594C3CC();
        *(_WORD *)(v29 + 11) = 2082;
        v32 = ConnectionID.debugDescription.getter(*((unsigned int *)v31 + 1));
        v61 = sub_1A589167C(v32, v33, &v76);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        _os_log_impl(&dword_1A4F90000, v27, v28, "[%.*hhx-%{public}s] Sending credentials over insecure connection (opportunistic TLS).", (uint8_t *)v29, 0x15u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v30, -1, -1);
        MEMORY[0x1A85B1964](v29, -1, -1);

        v34 = *(uint64_t (**)(char *, uint64_t))(v59 + 8);
        v35 = v15;
LABEL_15:
        v45 = v60;
        return v34(v35, v45);
      }
      sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

      v34 = *(uint64_t (**)(char *, uint64_t))(v25 + 8);
      v35 = v15;
    }
    v45 = v26;
    return v34(v35, v45);
  }
  v22 = v66.n128_u8[0];
  v23 = v66.n128_u64[1];
  result = (uint64_t)sub_1A5868834(&v64, &v69);
  if (v69.n128_u64[0] >> 62 != 1)
    goto LABEL_32;
  v69.n128_u64[0] &= 0x3FFFFFFFFFFFFFFFuLL;
  v72 = v70;
  v71 = v69;
  if (!v20)
  {
    if (v22 == 1)
    {
      if (v71.n128_u16[0] == 772)
        return result;
    }
    else if (v71.n128_u16[0] - 771 < 2)
    {
      return result;
    }
    goto LABEL_32;
  }
  if (v22)
  {
    if (v22 == 1)
    {
      if (v71.n128_u16[0] != 772)
        goto LABEL_32;
    }
    else if (v71.n128_u16[0] - 771 > 1)
    {
LABEL_32:
      v46 = v58;
      v47 = v59;
      v48 = v60;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v12, v58, v60);
      sub_1A55034B8(v46, (uint64_t)v3, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v49 = sub_1A594A74C();
      v50 = sub_1A594C018();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint64_t)v3;
        v52 = swift_slowAlloc();
        v53 = swift_slowAlloc();
        v76 = v53;
        *(_DWORD *)v52 = 68158210;
        LODWORD(v61) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v52 + 8) = 256;
        v54 = v51 + *(int *)(v57 + 20);
        LOBYTE(v61) = *(_BYTE *)v54;
        sub_1A594C3CC();
        *(_WORD *)(v52 + 11) = 2082;
        v55 = ConnectionID.debugDescription.getter(*(unsigned int *)(v54 + 4));
        v61 = sub_1A589167C(v55, v56, &v76);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v51, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        _os_log_impl(&dword_1A4F90000, v49, v50, "[%.*hhx-%{public}s] Connection security does not fulfil requirements for sending credentials.", (uint8_t *)v52, 0x15u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v53, -1, -1);
        MEMORY[0x1A85B1964](v52, -1, -1);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v12, v60);
      }
      else
      {
        sub_1A55034FC((uint64_t)v3, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

        (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v48);
      }
      sub_1A5868870();
      swift_allocError();
      return swift_willThrow();
    }
  }
  else if (v71.n128_u16[0] - 771 >= 2)
  {
    goto LABEL_32;
  }
  sub_1A58688B4((uint64_t)&v71.n128_i64[1], (uint64_t)v73);
  result = sub_1A58688B4((uint64_t)v73, (uint64_t)&v74);
  if (!v75)
    goto LABEL_32;
  if (v23 != v74 || v20 != v75)
  {
    result = sub_1A594CD38();
    if ((result & 1) == 0)
      goto LABEL_32;
  }
  return result;
}

uint64_t sub_1A5865DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[10];
  _QWORD v47[10];
  _BYTE v48[80];
  _BYTE v49[56];
  uint64_t v50;
  _BYTE v51[80];
  _QWORD v52[7];
  uint64_t v53;
  _BYTE v54[80];
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[80];
  _QWORD v58[11];

  v3 = a2;
  v4 = *(_QWORD *)(*v2 + 16);
  if (!v4)
  {
LABEL_28:
    v31 = type metadata accessor for AuthenticationTask();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v3, 1, 1, v31);
  }
  v5 = *v2 + 32;
  v6 = v2[2];
  v44 = v6 + 56;
  swift_bridgeObjectRetain_n();
  v7 = 0;
  v35 = v5;
  v36 = v4;
  v45 = v6;
LABEL_3:
  sub_1A58622C0(v5 + 80 * v7, (uint64_t)v46);
  if (*(_QWORD *)(v6 + 16))
  {
    sub_1A594CE64();
    sub_1A58622C0((uint64_t)v46, (uint64_t)&v55);
    v8 = v56;
    v56 &= ~0x1000000000000000uLL;
    if ((v8 & 0x1000000000000000) != 0)
    {
      sub_1A585BA78((uint64_t)&v55, (uint64_t)v57);
      sub_1A594CE88();
      sub_1A585BA78((uint64_t)v57, (uint64_t)v58);
      __asm { BR              X11 }
    }
    sub_1A594CE88();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    sub_1A594B1D8();
    v9 = sub_1A594CED0();
    v10 = v45;
    v11 = -1 << *(_BYTE *)(v45 + 32);
    v12 = v9 & ~v11;
    if (((*(_QWORD *)(v44 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_30;
    v40 = v7 + 1;
    v43 = ~v11;
    while (1)
    {
      v13 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 80 * v12);
      v14 = *v13;
      v15 = v13[1];
      v16 = v13[2];
      v17 = v13[3];
      v18 = v13[7];
      if ((v18 & 0x1000000000000000) != 0)
      {
        v24 = v13[4];
        v25 = v13[5];
        v26 = v13[6];
        v27 = v13[8];
        v28 = v13[9];
        v47[0] = *v13;
        v47[1] = v15;
        v47[2] = v16;
        v47[3] = v17;
        v42 = v24;
        v47[4] = v24;
        v47[5] = v25;
        v47[6] = v26;
        v47[7] = v18 & 0xEFFFFFFFFFFFFFFFLL;
        v47[8] = v27;
        v47[9] = v28;
        sub_1A58622C0((uint64_t)v46, (uint64_t)v49);
        v29 = v50;
        v50 &= ~0x1000000000000000uLL;
        if ((v29 & 0x1000000000000000) != 0)
        {
          sub_1A585BA78((uint64_t)v49, (uint64_t)v51);
          sub_1A585BA78((uint64_t)v51, (uint64_t)v48);
          sub_1A58687AC(v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A586418C);
          sub_1A586418C(v14, v15, v16, v17, v42, v25, v26, v18, v27, v28);
          sub_1A586B68C((uint64_t)v47);
          v41 = v30;
          sub_1A58687AC(v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);
          sub_1A5862344(v14, v15, v16, v17, v42, v25, v26, v18, v27, v28);
          if ((v41 & 1) != 0)
            goto LABEL_26;
        }
      }
      else
      {
        sub_1A58622C0((uint64_t)v46, (uint64_t)v52);
        v19 = v53;
        v53 &= ~0x1000000000000000uLL;
        if ((v19 & 0x1000000000000000) != 0)
        {
          sub_1A585BA78((uint64_t)v52, (uint64_t)v54);
        }
        else
        {
          v20 = v52[2];
          v21 = v52[3];
          v22 = v14 == v52[0] && v15 == v52[1];
          if (v22 || (sub_1A594CD38() & 1) != 0)
          {
            v23 = v16 == v20 && v17 == v21;
            if (v23 || (sub_1A594CD38() & 1) != 0)
            {
LABEL_26:
              sub_1A58687AC(v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);
              v5 = v35;
              v7 = v40;
              v6 = v45;
              if (v40 == v36)
              {
                swift_bridgeObjectRelease_n();
                v3 = a2;
                goto LABEL_28;
              }
              goto LABEL_3;
            }
          }
        }
      }
      v12 = (v12 + 1) & v43;
      v10 = v45;
      if (((*(_QWORD *)(v44 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_30;
    }
  }
  sub_1A58687AC(v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A586418C);
LABEL_30:
  swift_bridgeObjectRelease_n();
  v33 = *(_BYTE *)(v37 + 8);
  v34 = (int *)type metadata accessor for AuthenticationTask();
  sub_1A55034B8(a1, a2 + v34[5], (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  sub_1A58687AC(v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A586418C);
  sub_1A586A204((uint64_t *)a2);
  sub_1A58687AC(v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);
  sub_1A58687AC(v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);
  *(_OWORD *)(a2 + 40) = xmmword_1A59BA370;
  *(_QWORD *)(a2 + v34[7]) = 0;
  *(_BYTE *)(a2 + v34[8]) = 2;
  *(_BYTE *)(a2 + v34[6]) = v33;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v34 - 1) + 56))(a2, 0, 1, v34);
}

void sub_1A58665F8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58EA2A8(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_1A5866660(v4);
  *a1 = v2;
}

void sub_1A5866660(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  char *v101;
  uint64_t v102;

  v3 = a1[1];
  v4 = sub_1A594CC78();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_141;
    if (v3)
      sub_1A5867150(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_148;
  v94 = v4;
  v91 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    v101 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
      goto LABEL_107;
    }
    v93 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1A594BA18();
    *(_QWORD *)(v7 + 16) = v6;
    v93 = v7;
    v101 = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v92 = *a1 + 232;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v90 = *a1 - 80;
  v95 = v3;
  v102 = *a1;
  do
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = v10 + 80 * v9;
      v15 = *(_QWORD *)(v14 + 56);
      if ((v15 & 0x1000000000000000) != 0)
        v16 = qword_1A59DD028[(*(_QWORD *)(v14 + 72) >> 59) & 6 | (v15 >> 61) & 1];
      else
        v16 = 8;
      v17 = v10 + 80 * v13;
      v18 = *(_QWORD *)(v17 + 56);
      if ((v18 & 0x1000000000000000) != 0)
        v19 = qword_1A59DD028[(*(_QWORD *)(v17 + 72) >> 59) & 6 | (v18 >> 61) & 1];
      else
        v19 = 8;
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v20 = v92 + 80 * v13;
        while (1)
        {
          v21 = *(_QWORD *)(v20 - 16);
          if ((v21 & 0x1000000000000000) != 0)
            __asm { BR              X1 }
          if ((v15 & 0x1000000000000000) != 0)
            __asm { BR              X1 }
          if (v16 < v19)
            break;
          ++v9;
          v20 += 80;
          v15 = v21;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v16 < v19)
      {
        if (v9 < v13)
          goto LABEL_142;
        if (v13 < v9)
        {
          v22 = 80 * v9;
          v23 = 80 * v13;
          v24 = v9;
          v25 = v13;
          do
          {
            if (v25 != --v24)
            {
              if (!v10)
                goto LABEL_146;
              v26 = v10 + v22;
              v100 = *(_OWORD *)(v10 + v23);
              v98 = *(_OWORD *)(v10 + v23 + 32);
              v99 = *(_OWORD *)(v10 + v23 + 16);
              v96 = *(_OWORD *)(v10 + v23 + 64);
              v97 = *(_OWORD *)(v10 + v23 + 48);
              memmove((void *)(v10 + v23), (const void *)(v10 + v22 - 80), 0x50uLL);
              v10 = v102;
              *(_OWORD *)(v26 - 80) = v100;
              *(_OWORD *)(v26 - 64) = v99;
              *(_OWORD *)(v26 - 48) = v98;
              *(_OWORD *)(v26 - 32) = v97;
              *(_OWORD *)(v26 - 16) = v96;
            }
            ++v25;
            v22 -= 80;
            v23 += 80;
          }
          while (v25 < v24);
          v3 = v95;
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_140;
      if (v9 - v13 < v94)
      {
        v27 = v13 + v94;
        if (__OFADD__(v13, v94))
          goto LABEL_143;
        if (v27 >= v3)
          v27 = v3;
        if (v27 >= v13)
        {
          if (v9 != v27)
          {
            v28 = v90 + 80 * v9;
            do
            {
              v29 = *(_QWORD *)(v10 + 80 * v9 + 56);
              v30 = *(_QWORD *)(v28 + 56);
              if ((v29 & 0x1000000000000000) != 0)
                __asm { BR              X3 }
              if ((v30 & 0x1000000000000000) != 0)
                __asm { BR              X3 }
              ++v9;
              v28 += 80;
            }
            while (v9 != v27);
            v9 = v27;
          }
          goto LABEL_57;
        }
LABEL_144:
        __break(1u);
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        sub_1A594C9B4();
        __break(1u);
        JUMPOUT(0x1A58670E0);
      }
    }
LABEL_57:
    if (v9 < v13)
      goto LABEL_135;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A58E9F8C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v32 = *((_QWORD *)v11 + 2);
    v31 = *((_QWORD *)v11 + 3);
    v12 = v32 + 1;
    v10 = v102;
    if (v32 >= v31 >> 1)
    {
      v81 = sub_1A58E9F8C((char *)(v31 > 1), v32 + 1, 1, v11);
      v10 = v102;
      v11 = v81;
    }
    *((_QWORD *)v11 + 2) = v12;
    v33 = v11 + 32;
    v34 = &v11[16 * v32 + 32];
    *(_QWORD *)v34 = v13;
    *((_QWORD *)v34 + 1) = v9;
    if (v32)
    {
      while (1)
      {
        v35 = v12 - 1;
        if (v12 >= 4)
        {
          v40 = &v33[16 * v12];
          v41 = *((_QWORD *)v40 - 8);
          v42 = *((_QWORD *)v40 - 7);
          v46 = __OFSUB__(v42, v41);
          v43 = v42 - v41;
          if (v46)
            goto LABEL_124;
          v45 = *((_QWORD *)v40 - 6);
          v44 = *((_QWORD *)v40 - 5);
          v46 = __OFSUB__(v44, v45);
          v38 = v44 - v45;
          v39 = v46;
          if (v46)
            goto LABEL_125;
          v47 = v12 - 2;
          v48 = &v33[16 * v12 - 32];
          v50 = *(_QWORD *)v48;
          v49 = *((_QWORD *)v48 + 1);
          v46 = __OFSUB__(v49, v50);
          v51 = v49 - v50;
          if (v46)
            goto LABEL_127;
          v46 = __OFADD__(v38, v51);
          v52 = v38 + v51;
          if (v46)
            goto LABEL_130;
          if (v52 >= v43)
          {
            v70 = &v33[16 * v35];
            v72 = *(_QWORD *)v70;
            v71 = *((_QWORD *)v70 + 1);
            v46 = __OFSUB__(v71, v72);
            v73 = v71 - v72;
            if (v46)
              goto LABEL_134;
            v63 = v38 < v73;
            goto LABEL_94;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v64 = *((_QWORD *)v11 + 4);
            v65 = *((_QWORD *)v11 + 5);
            v46 = __OFSUB__(v65, v64);
            v57 = v65 - v64;
            v58 = v46;
            goto LABEL_88;
          }
          v37 = *((_QWORD *)v11 + 4);
          v36 = *((_QWORD *)v11 + 5);
          v46 = __OFSUB__(v36, v37);
          v38 = v36 - v37;
          v39 = v46;
        }
        if ((v39 & 1) != 0)
          goto LABEL_126;
        v47 = v12 - 2;
        v53 = &v33[16 * v12 - 32];
        v55 = *(_QWORD *)v53;
        v54 = *((_QWORD *)v53 + 1);
        v56 = __OFSUB__(v54, v55);
        v57 = v54 - v55;
        v58 = v56;
        if (v56)
          goto LABEL_129;
        v59 = &v33[16 * v35];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v46 = __OFSUB__(v60, v61);
        v62 = v60 - v61;
        if (v46)
          goto LABEL_132;
        if (__OFADD__(v57, v62))
          goto LABEL_133;
        if (v57 + v62 >= v38)
        {
          v63 = v38 < v62;
LABEL_94:
          if (v63)
            v35 = v47;
          goto LABEL_96;
        }
LABEL_88:
        if ((v58 & 1) != 0)
          goto LABEL_128;
        v66 = &v33[16 * v35];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v46 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v46)
          goto LABEL_131;
        if (v69 < v57)
          goto LABEL_15;
LABEL_96:
        v74 = v35 - 1;
        if (v35 - 1 >= v12)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v10)
          goto LABEL_145;
        v75 = v11;
        v76 = &v33[16 * v74];
        v77 = *(_QWORD *)v76;
        v78 = &v33[16 * v35];
        v79 = *((_QWORD *)v78 + 1);
        sub_1A5867398((char *)(v10 + 80 * *(_QWORD *)v76), (char *)(v10 + 80 * *(_QWORD *)v78), v10 + 80 * v79, v101);
        if (v1)
          goto LABEL_104;
        if (v79 < v77)
          goto LABEL_121;
        if (v35 > *((_QWORD *)v75 + 2))
          goto LABEL_122;
        *(_QWORD *)v76 = v77;
        *(_QWORD *)&v33[16 * v74 + 8] = v79;
        v80 = *((_QWORD *)v75 + 2);
        if (v35 >= v80)
          goto LABEL_123;
        v11 = v75;
        v12 = v80 - 1;
        memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
        *((_QWORD *)v75 + 2) = v80 - 1;
        v10 = v102;
        if (v80 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v95;
  }
  while (v9 < v95);
  v8 = v93;
LABEL_107:
  v82 = v11;
  v93 = v8;
  if (v12 >= 2)
  {
    v83 = *v91;
    do
    {
      v84 = v12 - 2;
      if (v12 < 2)
        goto LABEL_136;
      if (!v83)
        goto LABEL_147;
      v85 = v82;
      v86 = *(_QWORD *)&v82[16 * v84 + 32];
      v87 = *(_QWORD *)&v82[16 * v12 + 24];
      sub_1A5867398((char *)(v83 + 80 * v86), (char *)(v83 + 80 * *(_QWORD *)&v82[16 * v12 + 16]), v83 + 80 * v87, v101);
      if (v1)
        break;
      if (v87 < v86)
        goto LABEL_137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v85 = sub_1A58EA294((uint64_t)v85);
      if (v84 >= *((_QWORD *)v85 + 2))
        goto LABEL_138;
      v88 = &v85[16 * v84 + 32];
      *(_QWORD *)v88 = v86;
      *((_QWORD *)v88 + 1) = v87;
      v89 = *((_QWORD *)v85 + 2);
      if (v12 > v89)
        goto LABEL_139;
      memmove(&v85[16 * v12 + 16], &v85[16 * v12 + 32], 16 * (v89 - v12));
      v82 = v85;
      *((_QWORD *)v85 + 2) = v89 - 1;
      v12 = v89 - 1;
    }
    while (v89 > 2);
  }
LABEL_104:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v93 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1A5867150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 80 * a3 - 80;
    do
    {
      v6 = *(_QWORD *)(v4 + 80 * a3 + 56);
      v7 = *(_QWORD *)(v5 + 56);
      if ((v6 & 0x1000000000000000) != 0)
        __asm { BR              X22 }
      if ((v7 & 0x1000000000000000) != 0)
        __asm { BR              X22 }
      ++a3;
      v5 += 80;
    }
    while (a3 != a2);
  }
}

uint64_t sub_1A5867398(char *__dst, char *__src, unint64_t a3, char *a4)
{
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  char *v24;
  char *v25;
  char *v26;

  v7 = __dst;
  v8 = __src - __dst;
  v9 = (__src - __dst) / 80;
  v10 = a3 - (_QWORD)__src;
  v11 = (uint64_t)(a3 - (_QWORD)__src) / 80;
  v26 = __dst;
  v25 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -79)
    {
      if (a4 != __src || &__src[80 * v11] <= a4)
        memmove(a4, __src, 80 * v11);
      v18 = &a4[80 * v11];
      v24 = v18;
      v26 = __src;
      if (v7 < __src && v10 >= 80)
      {
        v19 = (char *)(a3 - 80);
        do
        {
          v20 = *((_QWORD *)v18 - 3);
          v21 = *((_QWORD *)__src - 3);
          if ((v20 & 0x1000000000000000) != 0)
            __asm { BR              X14 }
          v22 = v19 + 80;
          if ((v21 & 0x1000000000000000) != 0)
            __asm { BR              X17 }
          v24 = v18 - 80;
          if (v22 < v18 || v19 >= v18 || v22 != v18)
            memmove(v19, v18 - 80, 0x50uLL);
          v18 -= 80;
          if (__src <= v7)
            break;
          v19 -= 80;
        }
        while (v18 > a4);
      }
LABEL_42:
      sub_1A58EA084((void **)&v26, (const void **)&v25, &v24);
      return 1;
    }
  }
  else if (v8 >= -79)
  {
    if (a4 != __dst || &__dst[80 * v9] <= a4)
      memmove(a4, __dst, 80 * v9);
    v12 = &a4[80 * v9];
    v24 = v12;
    if ((unint64_t)__src < a3 && v8 >= 80)
    {
      v13 = a4;
      while (1)
      {
        v14 = *((_QWORD *)__src + 7);
        v15 = *((_QWORD *)v13 + 7);
        if ((v14 & 0x1000000000000000) != 0)
          __asm { BR              X16 }
        if ((v15 & 0x1000000000000000) != 0)
          __asm { BR              X16 }
        v16 = v13 + 80;
        v17 = v13;
        if (v7 == v13)
        {
          v13 += 80;
          if (v7 < v16)
            goto LABEL_19;
        }
        else
        {
          v13 += 80;
        }
        memmove(v7, v17, 0x50uLL);
LABEL_19:
        v7 += 80;
        if (v13 >= v12 || (unint64_t)__src >= a3)
        {
          v25 = v16;
          v26 = v7;
          goto LABEL_42;
        }
      }
    }
    goto LABEL_42;
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

BOOL sub_1A5867908(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = type metadata accessor for AuthenticationTask();
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  MEMORY[0x1E0C80A78](v4);
  v51 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v46 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v46 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981C0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v46 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v46 - v22;
  v24 = a1;
  v25 = *a1;
  v26 = a2;
  if ((sub_1A58B8CCC(v25, *a2) & 1) == 0)
    return 0;
  v27 = v53;
  v49 = v17;
  v50 = v20;
  v47 = v8;
  v48 = v11;
  if (*((unsigned __int8 *)v24 + 8) != *((unsigned __int8 *)v26 + 8))
    return 0;
  v28 = v24;
  if ((sub_1A5895368(v24[2], v26[2]) & 1) == 0)
    return 0;
  v29 = (uint64_t)v14;
  v30 = v27;
  v31 = type metadata accessor for Authenticator();
  sub_1A5867D20((uint64_t)v28 + *(int *)(v31 + 28), (uint64_t)v23);
  v32 = (uint64_t)v50;
  sub_1A5867D20((uint64_t)v26 + *(int *)(v31 + 28), (uint64_t)v50);
  v33 = v29 + *(int *)(v12 + 48);
  sub_1A5867D20((uint64_t)v23, v29);
  sub_1A5867D20(v32, v33);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  if (v34(v29, 1, v27) == 1)
  {
    sub_1A5510284(v32, (uint64_t *)&unk_1EE7981A8);
    sub_1A5510284((uint64_t)v23, (uint64_t *)&unk_1EE7981A8);
    if (v34(v33, 1, v27) == 1)
    {
      sub_1A5510284(v29, (uint64_t *)&unk_1EE7981A8);
      return 1;
    }
    v38 = (uint64_t *)&unk_1EE7981C0;
    v36 = v29;
    goto LABEL_15;
  }
  v36 = v29;
  v37 = v49;
  sub_1A5867D20(v29, (uint64_t)v49);
  if (v34(v33, 1, v30) == 1)
  {
    v38 = (uint64_t *)&unk_1EE7981C0;
LABEL_14:
    sub_1A5510284(v32, (uint64_t *)&unk_1EE7981A8);
    sub_1A5510284((uint64_t)v23, (uint64_t *)&unk_1EE7981A8);
    sub_1A55034FC((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
LABEL_15:
    sub_1A5510284(v36, v38);
    return 0;
  }
  v39 = v30;
  v40 = v48;
  sub_1A54E3394(v33, (uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
  v41 = sub_1A586353C(v37, v40);
  v42 = (uint64_t)v47;
  sub_1A55034B8((uint64_t)v37, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
  v43 = v51;
  sub_1A55034B8((uint64_t)v40, v51, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
  if ((v41 & 1) == 0)
  {
    sub_1A55034FC(v43, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
    sub_1A55034FC(v42, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
    sub_1A55034FC((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
    v38 = (uint64_t *)&unk_1EE7981A8;
    v32 = (uint64_t)v50;
    goto LABEL_14;
  }
  v44 = *(unsigned __int8 *)(v42 + *(int *)(v39 + 24));
  sub_1A55034FC(v42, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
  v45 = *(unsigned __int8 *)(v43 + *(int *)(v39 + 24));
  sub_1A55034FC(v43, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
  sub_1A55034FC((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
  sub_1A5510284((uint64_t)v50, (uint64_t *)&unk_1EE7981A8);
  sub_1A5510284((uint64_t)v23, (uint64_t *)&unk_1EE7981A8);
  sub_1A55034FC((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
  sub_1A5510284(v36, (uint64_t *)&unk_1EE7981A8);
  return v44 == v45;
}

uint64_t sub_1A5867D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1A5867D68(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[2];
  v3 = a1[5];
  v4 = a1[6];
  v5 = a1[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5867DDC(v2);
  sub_1A562FDD4(v3, v4, v5);
  return a1;
}

uint64_t sub_1A5867DDC(uint64_t result)
{
  if ((result & 0x8000000000000000) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A5867DEC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  char v16;
  uint64_t v17;
  char v18;
  BOOL v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _BYTE *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = 0;
  v29 = a1 + 32;
  v25 = (_BYTE *)(a2 + 56);
  v4 = MEMORY[0x1E0DEE9D8];
  v28 = *(_QWORD *)(a1 + 16);
  do
  {
    v26 = v4;
    if (v3 <= v2)
      v5 = v2;
    else
      v5 = v3;
    v6 = a2;
    v27 = v5;
    while (1)
    {
      if (v3 == v5)
      {
        __break(1u);
        JUMPOUT(0x1A586850CLL);
      }
      v7 = (uint64_t *)(v29 + 80 * v3);
      v8 = v7[7];
      v39 = *v7;
      v40 = v7[8];
      v33 = v7[5];
      v34 = v8;
      v31 = v3 + 1;
      v37 = v7[3];
      v38 = v7[4];
      v35 = v7[1];
      v36 = v7[2];
      v32 = v7[9];
      if ((v8 & 0x1000000000000000) != 0)
        __asm { BR              X9 }
      v9 = v7[6];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v10 = Capability.loginDisabled.unsafeMutableAddressor();
      v11 = *(_QWORD *)(v6 + 16);
      if (!v11)
        break;
      v12 = *v10;
      v13 = v10[1];
      v14 = v10[2];
      v15 = v25;
      v16 = *((_BYTE *)v10 + 24);
      while (1)
      {
        v17 = *((_QWORD *)v15 - 1);
        v18 = *v15;
        v19 = *((_QWORD *)v15 - 3) == v12 && *((_QWORD *)v15 - 2) == v13;
        if (!v19 && (sub_1A594CD38() & 1) == 0)
          goto LABEL_12;
        if ((v18 & 1) == 0)
          break;
        if ((v16 & 1) != 0)
          goto LABEL_25;
LABEL_12:
        v15 += 32;
        if (!--v11)
          goto LABEL_27;
      }
      if (((v17 ^ v14) & 0xFFFFFFFFFFFFC000) != 0)
        v20 = 1;
      else
        v20 = v16;
      if ((v20 & 1) != 0)
        goto LABEL_12;
LABEL_25:
      sub_1A5862344(v39, v35, v36, v37, v38, v33, v9, v34, v40, v32);
      v6 = a2;
      v3 = v31;
      v5 = v27;
      if (v31 == v28)
        return v26;
    }
LABEL_27:
    v4 = v26;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1A58BF7C0(0, *(_QWORD *)(v26 + 16) + 1, 1);
      v4 = v26;
    }
    v2 = v28;
    v3 = v31;
    v22 = *(_QWORD *)(v4 + 16);
    v21 = *(_QWORD *)(v4 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_1A58BF7C0(v21 > 1, v22 + 1, 1);
      v4 = v26;
    }
    *(_QWORD *)(v4 + 16) = v22 + 1;
    v23 = (_QWORD *)(v4 + 80 * v22);
    v23[4] = v39;
    v23[5] = v35;
    v23[6] = v36;
    v23[7] = v37;
    v23[8] = v38;
    v23[9] = v33;
    v23[10] = v9;
    v23[11] = v34;
    v23[12] = v40;
    v23[13] = v32;
  }
  while (v31 != v28);
  return v4;
}

uint64_t sub_1A5868528(uint64_t a1, uint64_t a2)
{
  __swift_memcpy80_8_2(a2, a1);
  return a2;
}

uint64_t sub_1A5868564(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  unint64_t v15;

  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_1A54E42B4(result, a2);
      result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1A54E42B4(result, a2);
      sub_1A54E42B4(a3, a4);
      sub_1A54E42B4(a5, a6);
      sub_1A54E42B4(a7, v15);
      result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      result = sub_1A54E42B4(result, a2);
      break;
    case 3uLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A5868664(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  unint64_t v15;

  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_1A54E46E8(result, a2);
      result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1A54E46E8(result, a2);
      sub_1A54E46E8(a3, a4);
      sub_1A54E46E8(a5, a6);
      sub_1A54E46E8(a7, v15);
      result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      result = sub_1A54E46E8(result, a2);
      break;
    case 3uLL:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A5868764(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1A58687AC(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  return a1;
}

__n128 *sub_1A58687F8(__n128 *a1, __n128 *a2)
{
  __swift_memcpy24_8_6(a2, a1);
  return a2;
}

__n128 *sub_1A5868834(__n128 *a1, __n128 *a2)
{
  __swift_memcpy24_8_6(a2, a1);
  return a2;
}

unint64_t sub_1A5868870()
{
  unint64_t result;

  result = qword_1EE7AAB38;
  if (!qword_1EE7AAB38)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DCFE4, &type metadata for Authenticator.Configuration.TLSRequirementsNotMet);
    atomic_store(result, (unint64_t *)&qword_1EE7AAB38);
  }
  return result;
}

uint64_t sub_1A58688B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7993D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for Authenticator.Configuration.TLSRequirementsNotMet()
{
  return &type metadata for Authenticator.Configuration.TLSRequirementsNotMet;
}

uint64_t _s14descr1E4F16701C7CRAMMD5Vwxx(uint64_t *a1)
{
  unint64_t v2;

  sub_1A585B504(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  v2 = a1[11];
  if (((v2 >> 60) | 4) != 0xF)
    sub_1A54E46E8(a1[10], v2);
  sub_1A54E46E8(a1[12], a1[13]);
  return sub_1A54E46E8(a1[14], a1[15]);
}

uint64_t _s14descr1E4F16701C7CRAMMD5Vwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v20 = a2[8];
  v21 = a2[9];
  sub_1A585B39C(*a2, v5, v6, v7, v8, v9, v10, v11, v20, v21);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v20;
  *(_QWORD *)(a1 + 72) = v21;
  v12 = a2 + 10;
  v13 = a2[11];
  if (((v13 >> 60) | 4) == 0xF)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v12;
  }
  else
  {
    v14 = *v12;
    sub_1A54E42B4(*v12, a2[11]);
    *(_QWORD *)(a1 + 80) = v14;
    *(_QWORD *)(a1 + 88) = v13;
  }
  v15 = a2[12];
  v16 = a2[13];
  sub_1A54E42B4(v15, v16);
  *(_QWORD *)(a1 + 96) = v15;
  *(_QWORD *)(a1 + 104) = v16;
  v18 = a2[14];
  v17 = a2[15];
  sub_1A54E42B4(v18, v17);
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v17;
  return a1;
}

uint64_t *_s14descr1E4F16701C7CRAMMD5Vwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v38 = a2[8];
  v39 = a2[9];
  sub_1A585B39C(*a2, v5, v6, v7, v8, v9, v10, v11, v38, v39);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  v16 = a1[4];
  v17 = a1[5];
  v18 = a1[6];
  v19 = a1[7];
  v20 = a1[8];
  v21 = a1[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v38;
  a1[9] = v39;
  sub_1A585B504(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  v22 = a2 + 10;
  if ((((unint64_t)a1[11] >> 60) | 4) != 0xF)
  {
    v25 = a2[11];
    if (((v25 >> 60) | 4) != 0xF)
    {
      v35 = *v22;
      sub_1A54E42B4(*v22, a2[11]);
      v36 = a1[10];
      v37 = a1[11];
      a1[10] = v35;
      a1[11] = v25;
      sub_1A54E46E8(v36, v37);
      goto LABEL_7;
    }
    sub_1A5868C0C((uint64_t)(a1 + 10));
    goto LABEL_6;
  }
  v23 = a2[11];
  if (((v23 >> 60) | 4) == 0xF)
  {
LABEL_6:
    *((_OWORD *)a1 + 5) = *(_OWORD *)v22;
    goto LABEL_7;
  }
  v24 = *v22;
  sub_1A54E42B4(*v22, a2[11]);
  a1[10] = v24;
  a1[11] = v23;
LABEL_7:
  v26 = a2[12];
  v27 = a2[13];
  sub_1A54E42B4(v26, v27);
  v28 = a1[12];
  v29 = a1[13];
  a1[12] = v26;
  a1[13] = v27;
  sub_1A54E46E8(v28, v29);
  v31 = a2[14];
  v30 = a2[15];
  sub_1A54E42B4(v31, v30);
  v32 = a1[14];
  v33 = a1[15];
  a1[14] = v31;
  a1[15] = v30;
  sub_1A54E46E8(v32, v33);
  return a1;
}

uint64_t sub_1A5868C0C(uint64_t a1)
{
  destroy for Authentication.Challenge();
  return a1;
}

__n128 __swift_memcpy128_8_2(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t *_s14descr1E4F16701C7CRAMMD5Vwta(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = a1[6];
  v11 = a1[7];
  v12 = a1[8];
  v13 = a1[9];
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v14;
  v15 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v15;
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_1A585B504(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  v16 = (uint64_t *)(a2 + 80);
  v17 = a1[11];
  if (((v17 >> 60) | 4) != 0xF)
  {
    v18 = *(_QWORD *)(a2 + 88);
    if (((v18 >> 60) | 4) != 0xF)
    {
      v24 = a1[10];
      a1[10] = *v16;
      a1[11] = v18;
      sub_1A54E46E8(v24, v17);
      goto LABEL_5;
    }
    sub_1A5868C0C((uint64_t)(a1 + 10));
  }
  *((_OWORD *)a1 + 5) = *(_OWORD *)v16;
LABEL_5:
  v19 = a1[12];
  v20 = a1[13];
  *((_OWORD *)a1 + 6) = *(_OWORD *)(a2 + 96);
  sub_1A54E46E8(v19, v20);
  v21 = a1[14];
  v22 = a1[15];
  *((_OWORD *)a1 + 7) = *(_OWORD *)(a2 + 112);
  sub_1A54E46E8(v21, v22);
  return a1;
}

uint64_t _s14descr1E4F16701C7CRAMMD5Vwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x3A && *(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 58);
  v3 = (*(_QWORD *)(a1 + 56) >> 58) & 0xC;
  v4 = (((*(_BYTE *)(a1 + 79) & 0x30 | v3) >> 3) & 0xFFFFFFC7 | (8 * (v3 & 7 | (*(_QWORD *)(a1 + 40) >> 60) & 3))) ^ 0x3F;
  if (v4 >= 0x39)
    v4 = -1;
  return v4 + 1;
}

uint64_t _s14descr1E4F16701C7CRAMMD5Vwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x39)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 58;
    if (a3 >= 0x3A)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if (a3 >= 0x3A)
      *(_BYTE *)(result + 128) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      v3 = (-a2 >> 3) & 7 | (8 * (-a2 & 0x3F));
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = (unint64_t)((-a2 >> 3) & 3) << 60;
      *(_QWORD *)(result + 48) = 0;
      *(_QWORD *)(result + 56) = (v3 << 58) & 0x3000000000000000;
      *(_QWORD *)(result + 64) = 0;
      *(_QWORD *)(result + 72) = (v3 << 56) & 0x3000000000000000;
    }
  }
  return result;
}

ValueMetadata *_s14descr1E4F16701C7CRAMMD5VMa()
{
  return &_s14descr1E4F16701C7CRAMMD5VN;
}

void sub_1A5868E68(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1A5868EC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = BYTE6(v22);
  if (BYTE6(v22))
  {
    *(_QWORD *)(v3 - 104) = v2;
    v5 = BYTE6(v22);
    sub_1A58BF7A4(0, BYTE6(v22), 0);
    v2 = *(_QWORD *)(v3 - 104);
    if ((_DWORD)v1)
    {
      if ((_DWORD)v1 == 1)
        v6 = (int)a1;
      else
        v6 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v6 = 0;
    }
    *(_QWORD *)(v3 - 136) = v22 & 0x3FFFFFFFFFFFFFFFLL;
    *(_QWORD *)(v3 - 128) = v1;
    while (v5)
    {
      if ((_DWORD)v1)
      {
        if ((_DWORD)v1 == 1)
        {
          if (v6 < (int)a1 || v6 >= a1 >> 32)
            goto LABEL_29;
          v7 = sub_1A5949BE8();
          if (!v7)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }
          v8 = v7;
          v9 = sub_1A5949C0C();
          v10 = v6 - v9;
          if (__OFSUB__(v6, v9))
            goto LABEL_32;
        }
        else
        {
          if (v6 < *(_QWORD *)(a1 + 16))
            goto LABEL_31;
          if (v6 >= *(_QWORD *)(a1 + 24))
            goto LABEL_33;
          v12 = sub_1A5949BE8();
          if (!v12)
            goto LABEL_36;
          v8 = v12;
          v13 = sub_1A5949C0C();
          v10 = v6 - v13;
          if (__OFSUB__(v6, v13))
            goto LABEL_34;
        }
        v11 = *(_BYTE *)(v8 + v10);
      }
      else
      {
        if (v6 >= BYTE6(v22))
          goto LABEL_30;
        *(_QWORD *)(v3 - 118) = a1;
        *(_WORD *)(v3 - 110) = v22;
        *(_BYTE *)(v3 - 108) = BYTE2(v22);
        *(_BYTE *)(v3 - 107) = BYTE3(v22);
        *(_BYTE *)(v3 - 106) = BYTE4(v22);
        *(_BYTE *)(v3 - 105) = BYTE5(v22);
        v11 = *(_BYTE *)(v3 - 118 + v6);
      }
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1338);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1A59ABD10;
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEDE70];
      *(_QWORD *)(v14 + 64) = MEMORY[0x1E0DEDEC8];
      *(_BYTE *)(v14 + 32) = v11;
      v15 = sub_1A594B43C();
      v17 = v16;
      *(_QWORD *)(v3 - 104) = v2;
      v19 = *(_QWORD *)(v2 + 16);
      v18 = *(_QWORD *)(v2 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1A58BF7A4(v18 > 1, v19 + 1, 1);
        v2 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v2 + 16) = v19 + 1;
      v20 = v2 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v17;
      ++v6;
      --v5;
      --v4;
      v1 = *(_QWORD *)(v3 - 128);
      if (!v4)
        return v2;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x1A58691D8);
  }
  return v2;
}

BOOL sub_1A5869200(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = a1[1];
  v3 = a2[1];
  if (v2 >> 60 == 11)
    return v3 >> 60 == 11;
  if (v2 >> 60 == 15)
    return v3 >> 60 == 15;
  if (((v3 >> 60) | 4) == 0xF)
    return 0;
  v5 = *a1;
  v6 = *a2;
  sub_1A55B0AF0(*a1, v2);
  sub_1A55B0AF0(v6, v3);
  v7 = sub_1A5862C2C(v5, v2, v6, v3);
  sub_1A55B0B08(v6, v3);
  sub_1A55B0B08(v5, v2);
  return v7 & 1;
}

uint64_t sub_1A58692D4(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[8];
  _OWORD v14[8];

  v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  v3 = a1[7];
  v13[6] = a1[6];
  v13[7] = v3;
  v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[3];
  v14[2] = a2[2];
  v14[3] = v8;
  v14[0] = v6;
  v14[1] = v7;
  v9 = a2[4];
  v10 = a2[5];
  v11 = a2[7];
  v14[6] = a2[6];
  v14[7] = v11;
  v14[4] = v9;
  v14[5] = v10;
  return sub_1A5869490((uint64_t)v13, (uint64_t)v14) & 1;
}

_QWORD *sub_1A5869344()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[11];
  if (v1 >> 60 == 11)
  {
    sub_1A585BA34();
    swift_allocError();
    *(_OWORD *)v2 = xmmword_1A59ABDE0;
    *(_BYTE *)(v2 + 16) = 1;
    swift_willThrow();
  }
  else if (v1 >> 60 == 15)
  {
    return 0;
  }
  else
  {
    v3 = v0[10];
    *((_OWORD *)v0 + 5) = xmmword_1A59DC6C0;
    v0 = (_QWORD *)sub_1A58696EC(v0[12], v0[13], v0[14], v0[15], v3, v1);
    sub_1A55B0B08(v3, v1);
  }
  return v0;
}

uint64_t sub_1A5869418(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  if (*(_QWORD *)(v2 + 88) >> 60 == 15)
  {
    *(_QWORD *)(v2 + 80) = a1;
    *(_QWORD *)(v2 + 88) = a2;
    return sub_1A54E42B4(a1, a2);
  }
  else
  {
    sub_1A585BA34();
    swift_allocError();
    *(_OWORD *)v4 = xmmword_1A59ABDE0;
    *(_BYTE *)(v4 + 16) = 1;
    return swift_willThrow();
  }
}

uint64_t sub_1A5869490(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v11;
  __int128 v12;
  _BYTE v13[80];
  _BYTE v14[80];
  __int128 v15;
  __int128 v16;

  sub_1A585BA78(a1, (uint64_t)v14);
  sub_1A585BA78(a2, (uint64_t)v13);
  sub_1A586B68C((uint64_t)v14);
  if ((v4 & 1) != 0)
  {
    sub_1A57F4930((_OWORD *)(a1 + 80), &v12);
    sub_1A57F4930((_OWORD *)(a2 + 80), &v11);
    sub_1A57F4930(&v12, &v15);
    v5 = *((_QWORD *)&v15 + 1);
    if (*((_QWORD *)&v15 + 1) >> 60 == 11)
    {
      sub_1A57F4930(&v11, &v16);
      if (*((_QWORD *)&v16 + 1) >> 60 == 11)
        goto LABEL_10;
    }
    else
    {
      if (*((_QWORD *)&v15 + 1) >> 60 == 15)
      {
        sub_1A57F4930(&v11, &v16);
        if (*((_QWORD *)&v16 + 1) >> 60 != 15)
          return 0;
LABEL_10:
        __asm { BR              X11 }
      }
      v6 = v15;
      sub_1A57F4930(&v11, &v16);
      v7 = *((_QWORD *)&v16 + 1);
      if (((*((_QWORD *)&v16 + 1) >> 60) | 4) != 0xF)
      {
        v8 = v16;
        sub_1A5869A70((uint64_t)&v12);
        sub_1A5869A70((uint64_t)&v11);
        v9 = sub_1A5862C2C(v6, v5, v8, v7);
        sub_1A5869A9C((uint64_t)&v11);
        sub_1A5869A9C((uint64_t)&v12);
        if ((v9 & 1) != 0)
          goto LABEL_10;
      }
    }
  }
  return 0;
}

uint64_t sub_1A58696EC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v35 = a1;
  v36 = a2;
  v10 = sub_1A594AF44();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAB48);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a5;
  v38 = a6;
  v41 = a3;
  v42 = a4;
  sub_1A54E42B4(a5, a6);
  sub_1A54E42B4(a3, a4);
  sub_1A594AF38();
  sub_1A594AF8C();
  sub_1A58699E4();
  sub_1A5869A2C();
  sub_1A594AF50();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1A54E46E8(v37, v38);
  v39 = v14;
  v40 = sub_1A54E2E30((unint64_t *)&unk_1EE7AAB60, &qword_1EE7AAB48, MEMORY[0x1E0CA9470]);
  v18 = __swift_allocate_boxed_opaque_existential_1(&v37);
  (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 16))(v18, v17, v14);
  __swift_project_boxed_opaque_existential_1_0(&v37, v39);
  sub_1A5949C9C();
  v19 = v41;
  v20 = v42;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
  sub_1A5868E68(v19, v20);
  v37 = v21;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A60);
  sub_1A54E2E30((unint64_t *)&qword_1EE795FA8, &qword_1EE799A60, MEMORY[0x1E0DEAF20]);
  v22 = sub_1A594B268();
  v24 = v23;
  swift_bridgeObjectRelease();
  sub_1A54E46E8(v19, v20);
  v25 = sub_1A58C02DC(32, 0xE100000000000000);
  v27 = v26;
  v41 = v35;
  v42 = v36;
  sub_1A54E42B4(v35, v36);
  sub_1A58C7DC0(v25, v27);
  sub_1A54E46E8(v25, v27);
  v28 = v41;
  v29 = v42;
  v30 = sub_1A58C02DC(v22, v24);
  v32 = v31;
  v37 = v28;
  v38 = v29;
  sub_1A54E42B4(v28, v29);
  sub_1A58C7DC0(v30, v32);
  sub_1A54E46E8(v30, v32);
  sub_1A54E46E8(v28, v29);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v37;
}

unint64_t sub_1A58699E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7AAB50;
  if (!qword_1EE7AAB50)
  {
    v1 = sub_1A594AF8C();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CA9A10], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7AAB50);
  }
  return result;
}

unint64_t sub_1A5869A2C()
{
  unint64_t result;

  result = qword_1EE796418;
  if (!qword_1EE796418)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CB0310], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EE796418);
  }
  return result;
}

uint64_t sub_1A5869A70(uint64_t a1)
{
  sub_1A55B0AF0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1A5869A9C(uint64_t a1)
{
  sub_1A55B0B08(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

ValueMetadata *_s14descr1E4F16701C7CRAMMD5V5StateOMa()
{
  return &_s14descr1E4F16701C7CRAMMD5V5StateON;
}

uint64_t sub_1A5869AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result;

  switch(a9)
  {
    case 0:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_6;
    case 1:
      swift_retain();
      goto LABEL_6;
    case 2:
      swift_retain();
      swift_retain();
      return swift_retain();
    case 3:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_6:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s14descr1E4F16729C5LoginVwxx(uint64_t a1)
{
  sub_1A5862344(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return sub_1A58640B0(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_BYTE *)(a1 + 144));
}

uint64_t _s14descr1E4F16729C5LoginVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;

  v2 = a2;
  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v21 = a2[8];
  v22 = a2[9];
  sub_1A586418C(*a2, v5, v6, v7, v8, v9, v10, v11, v21, v22);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v21;
  *(_QWORD *)(a1 + 72) = v22;
  v12 = v2[10];
  v13 = v2[11];
  v14 = v2[12];
  v15 = v2[13];
  v16 = v2[14];
  v17 = v2[15];
  v18 = v2[16];
  v19 = v2[17];
  LOBYTE(v2) = *((_BYTE *)v2 + 144);
  sub_1A5869AD8(v12, v13, v14, v15, v16, v17, v18, v19, (char)v2);
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_QWORD *)(a1 + 96) = v14;
  *(_QWORD *)(a1 + 104) = v15;
  *(_QWORD *)(a1 + 112) = v16;
  *(_QWORD *)(a1 + 120) = v17;
  *(_QWORD *)(a1 + 128) = v18;
  *(_QWORD *)(a1 + 136) = v19;
  *(_BYTE *)(a1 + 144) = (_BYTE)v2;
  return a1;
}

uint64_t _s14descr1E4F16729C5LoginVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v40;
  unint64_t v41;

  v2 = a2;
  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v40 = a2[8];
  v41 = a2[9];
  sub_1A586418C(*a2, v5, v6, v7, v8, v9, v10, v11, v40, v41);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v40;
  *(_QWORD *)(a1 + 72) = v41;
  sub_1A5862344(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  v22 = v2[10];
  v23 = v2[11];
  v24 = v2[12];
  v25 = v2[13];
  v26 = v2[14];
  v27 = v2[15];
  v28 = v2[16];
  v29 = v2[17];
  LOBYTE(v2) = *((_BYTE *)v2 + 144);
  sub_1A5869AD8(v22, v23, v24, v25, v26, v27, v28, v29, (char)v2);
  v30 = *(_QWORD *)(a1 + 80);
  v31 = *(_QWORD *)(a1 + 88);
  v32 = *(_QWORD *)(a1 + 96);
  v33 = *(_QWORD *)(a1 + 104);
  v34 = *(_QWORD *)(a1 + 112);
  v35 = *(_QWORD *)(a1 + 120);
  v36 = *(_QWORD *)(a1 + 128);
  v37 = *(_QWORD *)(a1 + 136);
  v38 = *(_BYTE *)(a1 + 144);
  *(_QWORD *)(a1 + 80) = v22;
  *(_QWORD *)(a1 + 88) = v23;
  *(_QWORD *)(a1 + 96) = v24;
  *(_QWORD *)(a1 + 104) = v25;
  *(_QWORD *)(a1 + 112) = v26;
  *(_QWORD *)(a1 + 120) = v27;
  *(_QWORD *)(a1 + 128) = v28;
  *(_QWORD *)(a1 + 136) = v29;
  *(_BYTE *)(a1 + 144) = (_BYTE)v2;
  sub_1A58640B0(v30, v31, v32, v33, v34, v35, v36, v37, v38);
  return a1;
}

__n128 __swift_memcpy145_8_0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t _s14descr1E4F16729C5LoginVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  __int128 v27;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v15;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_1A5862344(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  v16 = *(_BYTE *)(a2 + 144);
  v17 = *(_QWORD *)(a1 + 80);
  v18 = *(_QWORD *)(a1 + 88);
  v19 = *(_QWORD *)(a1 + 96);
  v20 = *(_QWORD *)(a1 + 104);
  v21 = *(_QWORD *)(a1 + 112);
  v22 = *(_QWORD *)(a1 + 120);
  v23 = *(_QWORD *)(a1 + 128);
  v24 = *(_QWORD *)(a1 + 136);
  v25 = *(_BYTE *)(a1 + 144);
  v26 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v26;
  v27 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v27;
  *(_BYTE *)(a1 + 144) = v16;
  sub_1A58640B0(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  return a1;
}

uint64_t _s14descr1E4F16729C5LoginVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 145))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 144);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s14descr1E4F16729C5LoginVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 144) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 145) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 145) = 0;
    if (a2)
      *(_BYTE *)(result + 144) = -(char)a2;
  }
  return result;
}

ValueMetadata *_s14descr1E4F16729C5LoginVMa()
{
  return &_s14descr1E4F16729C5LoginVN;
}

_QWORD *sub_1A5869FC8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  return sub_1A586A144(v1, a1);
}

uint64_t sub_1A5869FD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  uint64_t v13;

  v3 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 88);
  v5 = *(_QWORD *)(v1 + 96);
  v6 = *(_QWORD *)(v1 + 104);
  v7 = *(_QWORD *)(v1 + 112);
  v8 = *(_QWORD *)(v1 + 120);
  v10 = *(_QWORD *)(v1 + 128);
  v9 = *(_QWORD *)(v1 + 136);
  v13 = v9;
  v11 = *(_BYTE *)(v1 + 144);
  result = sub_1A5869AD8(v3, v4, v5, v6, v7, v8, v10, v9, v11);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v13;
  *(_BYTE *)(a1 + 64) = v11;
  return result;
}

uint64_t sub_1A586A06C()
{
  uint64_t v0;

  sub_1A585BA34();
  swift_allocError();
  *(_OWORD *)v0 = xmmword_1A59BA3C0;
  *(_BYTE *)(v0 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_1A586A0C0(uint64_t a1, uint64_t a2)
{
  char v4;
  _BYTE v6[72];
  _BYTE v7[72];
  _QWORD v8[10];
  _QWORD v9[10];

  sub_1A58622C0(a1, (uint64_t)v8);
  sub_1A586A180(a1 + 80, (uint64_t)v6);
  sub_1A58622C0(a2, (uint64_t)v9);
  sub_1A586A180(a2 + 80, (uint64_t)v7);
  if ((sub_1A586C14C(v8, v9) & 1) != 0)
    sub_1A58EB768((uint64_t)v6);
  else
    v4 = 0;
  return v4 & 1;
}

_QWORD *sub_1A586A144(_QWORD *a1, _QWORD *a2)
{
  initializeWithCopy for MechanismKind(a2, a1, (uint64_t)&type metadata for MechanismKind);
  return a2;
}

uint64_t sub_1A586A180(uint64_t a1, uint64_t a2)
{
  __swift_memcpy65_8(a2, a1);
  return a2;
}

unint64_t sub_1A586A1C0()
{
  unint64_t result;

  result = qword_1EE79B890;
  if (!qword_1EE79B890)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DD1B4, &type metadata for MechanismKind);
    atomic_store(result, (unint64_t *)&qword_1EE79B890);
  }
  return result;
}

uint64_t sub_1A586A204@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[10];
  _QWORD v21[4];
  uint64_t v22;

  sub_1A585BA78(v1, (uint64_t)v20);
  v3 = v20[0];
  v4 = v20[3];
  v18 = v20[1];
  v19 = v20[2];
  v6 = v20[4];
  v5 = v20[5];
  v7 = v20[6];
  v8 = v20[7];
  v9 = v20[8];
  v10 = v20[9];
  sub_1A585BA78(v1, (uint64_t)v21);
  v11 = v22;
  if ((v22 & 0x1000000000000000) != 0)
  {
    v22 &= ~0x1000000000000000uLL;
    __asm { BR              X11 }
  }
  v12 = v21[1];
  v16 = v21[2];
  v17 = v21[0];
  v15 = v21[3];
  a1[3] = (uint64_t)&_s14descr1E4F16729C5LoginVN;
  a1[4] = (uint64_t)&off_1E4E742F0;
  v13 = swift_allocObject();
  *a1 = v13;
  *(_QWORD *)(v13 + 16) = v3;
  *(_QWORD *)(v13 + 24) = v18;
  *(_QWORD *)(v13 + 32) = v19;
  *(_QWORD *)(v13 + 40) = v4;
  *(_QWORD *)(v13 + 48) = v6;
  *(_QWORD *)(v13 + 56) = v5;
  *(_QWORD *)(v13 + 64) = v7;
  *(_QWORD *)(v13 + 72) = v8;
  *(_QWORD *)(v13 + 80) = v9;
  *(_QWORD *)(v13 + 88) = v10;
  *(_QWORD *)(v13 + 96) = v17;
  *(_QWORD *)(v13 + 104) = v12;
  *(_QWORD *)(v13 + 112) = v16;
  *(_QWORD *)(v13 + 120) = v15;
  *(_OWORD *)(v13 + 128) = 0u;
  *(_OWORD *)(v13 + 144) = 0u;
  *(_BYTE *)(v13 + 160) = 0;
  swift_bridgeObjectRetain_n();
  return swift_bridgeObjectRetain_n();
}

void sub_1A586A920()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[56];

  sub_1A585BA78(v0, (uint64_t)&v1);
  sub_1A585BA78(v0, (uint64_t)v2);
  __asm { BR              X12 }
}

uint64_t sub_1A586A994()
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1A594CE88();
  sub_1A54E42B4(v1, v2);
  sub_1A54E42B4(v3, v4);
  sub_1A5949F9C();
  sub_1A5949F9C();
  sub_1A54E46E8(v1, v2);
  return sub_1A54E46E8(v3, v4);
}

uint64_t sub_1A586AC2C()
{
  uint64_t v0;
  _BYTE v2[80];

  sub_1A585BA78(v0, (uint64_t)v2);
  sub_1A594CE64();
  sub_1A586A920();
  return sub_1A594CED0();
}

void sub_1A586AC78()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A585BA78(v0, (uint64_t)&v1);
  sub_1A586A920();
}

uint64_t sub_1A586ACB4()
{
  uint64_t v0;
  _BYTE v2[80];

  sub_1A585BA78(v0, (uint64_t)v2);
  sub_1A594CE64();
  sub_1A586A920();
  return sub_1A594CED0();
}

uint64_t sub_1A586AD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A586B2FC(a1, a2, a3, a4, (void (*)(uint64_t, _BYTE *))sub_1A585BA78, (uint64_t (*)(_BYTE *, _BYTE *))sub_1A586B68C);
}

uint64_t sub_1A586AD18()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v11;

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[2];
  v11 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = v0[7];
  v8 = v0[8];
  v9 = v0[9];
  sub_1A594CE64();
  sub_1A594CE88();
  if ((v7 & 0x1000000000000000) != 0)
  {
    sub_1A585B39C(v2, v1, v3, v11, v4, v5, v6, v7 & 0xEFFFFFFFFFFFFFFFLL, v8, v9);
    sub_1A586A920();
    sub_1A5862344(v2, v1, v3, v11, v4, v5, v6, v7, v8, v9);
  }
  else
  {
    sub_1A594B1D8();
    sub_1A594B1D8();
  }
  return sub_1A594CED0();
}

uint64_t sub_1A586AE4C()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[2];
  v4 = v0[7];
  if ((v4 & 0x1000000000000000) != 0)
  {
    v6 = v0[9];
    v7 = v0[6];
    v8 = v0[4];
    v11 = v0[5];
    v10 = v0[3];
    v9 = v0[8];
    sub_1A594CE88();
    sub_1A585B39C(v2, v1, v3, v10, v8, v11, v7, v4 & 0xEFFFFFFFFFFFFFFFLL, v9, v6);
    sub_1A586A920();
    return sub_1A5862344(v2, v1, v3, v10, v8, v11, v7, v4, v9, v6);
  }
  else
  {
    sub_1A594CE88();
    sub_1A594B1D8();
    return sub_1A594B1D8();
  }
}

uint64_t sub_1A586AF80()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v11;

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[2];
  v11 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = v0[7];
  v8 = v0[8];
  v9 = v0[9];
  sub_1A594CE64();
  sub_1A594CE88();
  if ((v7 & 0x1000000000000000) != 0)
  {
    sub_1A585B39C(v2, v1, v3, v11, v4, v5, v6, v7 & 0xEFFFFFFFFFFFFFFFLL, v8, v9);
    sub_1A586A920();
    sub_1A5862344(v2, v1, v3, v11, v4, v5, v6, v7, v8, v9);
  }
  else
  {
    sub_1A594B1D8();
    sub_1A594B1D8();
  }
  return sub_1A594CED0();
}

uint64_t sub_1A586B0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A586B2FC(a1, a2, a3, a4, (void (*)(uint64_t, _BYTE *))sub_1A58622C0, (uint64_t (*)(_BYTE *, _BYTE *))sub_1A586C14C);
}

uint64_t sub_1A586B0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A586B2FC(a1, a2, a3, a4, (void (*)(uint64_t, _BYTE *))sub_1A58622C0, (uint64_t (*)(_BYTE *, _BYTE *))sub_1A586C2D4);
}

uint64_t sub_1A586B0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A586B2FC(a1, a2, a3, a4, (void (*)(uint64_t, _BYTE *))sub_1A58622C0, (uint64_t (*)(_BYTE *, _BYTE *))sub_1A586B0EC);
}

BOOL sub_1A586B0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _BYTE v7[56];
  uint64_t v8;
  _BYTE v9[80];
  _BYTE v10[56];
  unint64_t v11;
  unint64_t v12;
  _BYTE v13[56];
  uint64_t v14;
  _BYTE v15[80];
  _BYTE v16[56];
  unint64_t v17;
  unint64_t v18;

  sub_1A585BA78(a2, (uint64_t)v13);
  v3 = v14;
  v14 &= ~0x1000000000000000uLL;
  if ((v3 & 0x1000000000000000) != 0)
  {
    sub_1A585BA78((uint64_t)v13, (uint64_t)v15);
    sub_1A585BA78((uint64_t)v15, (uint64_t)v16);
    v4 = qword_1A59DD2A0[(v18 >> 59) & 6 | (v17 >> 61) & 1];
    v17 &= ~0x2000000000000000uLL;
    v18 &= 0xCFFFFFFFFFFFFFFFLL;
  }
  else
  {
    v4 = 8;
  }
  sub_1A585BA78(a1, (uint64_t)v7);
  if ((v8 & 0x1000000000000000) != 0)
  {
    v8 &= ~0x1000000000000000uLL;
    sub_1A585BA78((uint64_t)v7, (uint64_t)v9);
    sub_1A585BA78((uint64_t)v9, (uint64_t)v10);
    v5 = qword_1A59DD2A0[(v12 >> 59) & 6 | (v11 >> 61) & 1];
  }
  else
  {
    v5 = 8;
  }
  return v4 >= v5;
}

uint64_t sub_1A586B1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A586B2FC(a1, a2, a3, a4, (void (*)(uint64_t, _BYTE *))sub_1A58622C0, (uint64_t (*)(_BYTE *, _BYTE *))sub_1A586B1F8);
}

BOOL sub_1A586B1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _BYTE v7[56];
  uint64_t v8;
  _BYTE v9[80];
  _BYTE v10[56];
  unint64_t v11;
  unint64_t v12;
  _BYTE v13[56];
  uint64_t v14;
  _BYTE v15[80];
  _BYTE v16[56];
  unint64_t v17;
  unint64_t v18;

  sub_1A585BA78(a1, (uint64_t)v13);
  v3 = v14;
  v14 &= ~0x1000000000000000uLL;
  if ((v3 & 0x1000000000000000) != 0)
  {
    sub_1A585BA78((uint64_t)v13, (uint64_t)v15);
    sub_1A585BA78((uint64_t)v15, (uint64_t)v16);
    v4 = qword_1A59DD2A0[(v18 >> 59) & 6 | (v17 >> 61) & 1];
    v17 &= ~0x2000000000000000uLL;
    v18 &= 0xCFFFFFFFFFFFFFFFLL;
  }
  else
  {
    v4 = 8;
  }
  sub_1A585BA78(a2, (uint64_t)v7);
  if ((v8 & 0x1000000000000000) != 0)
  {
    v8 &= ~0x1000000000000000uLL;
    sub_1A585BA78((uint64_t)v7, (uint64_t)v9);
    sub_1A585BA78((uint64_t)v9, (uint64_t)v10);
    v5 = qword_1A59DD2A0[(v12 >> 59) & 6 | (v11 >> 61) & 1];
  }
  else
  {
    v5 = 8;
  }
  return v4 >= v5;
}

uint64_t sub_1A586B2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A586B2FC(a1, a2, a3, a4, (void (*)(uint64_t, _BYTE *))sub_1A58622C0, (uint64_t (*)(_BYTE *, _BYTE *))sub_1A586B354);
}

uint64_t sub_1A586B2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _BYTE *), uint64_t (*a6)(_BYTE *, _BYTE *))
{
  _BYTE v10[80];
  _BYTE v11[80];

  a5(a1, v10);
  a5(a2, v11);
  return a6(v10, v11) & 1;
}

BOOL sub_1A586B354(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _BYTE v7[56];
  uint64_t v8;
  _BYTE v9[80];
  _BYTE v10[56];
  unint64_t v11;
  unint64_t v12;
  _BYTE v13[56];
  uint64_t v14;
  _BYTE v15[80];
  _BYTE v16[56];
  unint64_t v17;
  unint64_t v18;

  sub_1A585BA78(a2, (uint64_t)v13);
  v3 = v14;
  v14 &= ~0x1000000000000000uLL;
  if ((v3 & 0x1000000000000000) != 0)
  {
    sub_1A585BA78((uint64_t)v13, (uint64_t)v15);
    sub_1A585BA78((uint64_t)v15, (uint64_t)v16);
    v4 = qword_1A59DD2A0[(v18 >> 59) & 6 | (v17 >> 61) & 1];
    v17 &= ~0x2000000000000000uLL;
    v18 &= 0xCFFFFFFFFFFFFFFFLL;
  }
  else
  {
    v4 = 8;
  }
  sub_1A585BA78(a1, (uint64_t)v7);
  if ((v8 & 0x1000000000000000) != 0)
  {
    v8 &= ~0x1000000000000000uLL;
    sub_1A585BA78((uint64_t)v7, (uint64_t)v9);
    sub_1A585BA78((uint64_t)v9, (uint64_t)v10);
    v5 = qword_1A59DD2A0[(v12 >> 59) & 6 | (v11 >> 61) & 1];
  }
  else
  {
    v5 = 8;
  }
  return v4 < v5;
}

uint64_t sub_1A586B44C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B4B4();
  qword_1EE7F9228 = result;
  unk_1EE7F9230 = v1;
  return result;
}

uint64_t sub_1A586B47C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B4B4();
  qword_1EE7FA028 = result;
  unk_1EE7FA030 = v1;
  return result;
}

uint64_t sub_1A586B4B0()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B4B4();
  qword_1EE7FA038 = result;
  unk_1EE7FA040 = v1;
  return result;
}

uint64_t sub_1A586B4DC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B4B4();
  qword_1EE7FA048 = result;
  unk_1EE7FA050 = v1;
  return result;
}

uint64_t sub_1A586B510()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B4B4();
  qword_1EE7FA058 = result;
  unk_1EE7FA060 = v1;
  return result;
}

void sub_1A586B544(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1A586B588()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1A586B5BC + dword_1A586B67C[v0 >> 62]))();
}

uint64_t sub_1A586B5CC@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 == BYTE6(v1))
  {
    if (a1 < 1)
    {
      v5 = 1;
    }
    else
    {
      sub_1A54E42B4(v2, v1);
      sub_1A5863264(v4, v3);
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

void sub_1A586B68C(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[56];

  sub_1A585BA78(a1, (uint64_t)&v2);
  sub_1A585BA78(a1, (uint64_t)v3);
  __asm { BR              X12 }
}

uint64_t sub_1A586B6FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(v3 - 112) = v1 & 0xDFFFFFFFFFFFFFFFLL;
  *(_QWORD *)(v3 - 96) = a1 & 0xCFFFFFFFFFFFFFFFLL;
  v4 = *(_QWORD *)(v3 - 160);
  sub_1A585BA78(v2, (uint64_t)&v6);
  if (!((v8 >> 59) & 6 | ((v7 & 0x2000000000000000) != 0)))
  {
    v7 &= ~0x2000000000000000uLL;
    v8 &= 0xCFFFFFFFFFFFFFFFLL;
    __asm { BR              X10 }
  }
  return 0;
}

uint64_t sub_1A586C14C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  _BYTE v15[56];
  uint64_t v16;
  _QWORD v17[7];
  uint64_t v18;
  _QWORD v19[7];
  uint64_t v20;
  _BYTE v21[80];

  sub_1A585BA78((uint64_t)a1, (uint64_t)v19);
  v4 = v20;
  v20 &= ~0x1000000000000000uLL;
  if ((v4 & 0x1000000000000000) != 0)
  {
    sub_1A585BA78((uint64_t)v19, (uint64_t)v21);
    sub_1A585BA78((uint64_t)a2, (uint64_t)v15);
    if ((v16 & 0x1000000000000000) != 0)
    {
      v16 &= ~0x1000000000000000uLL;
      sub_1A585BA78((uint64_t)v15, (uint64_t)v17);
      sub_1A58687AC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A586418C);
      sub_1A58687AC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A586418C);
      sub_1A586B68C((uint64_t)v21);
      v12 = v13;
      sub_1A58687AC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);
      sub_1A58687AC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v5 = v19[0];
    v6 = v19[1];
    v7 = v19[2];
    v8 = v19[3];
    sub_1A585BA78((uint64_t)a2, (uint64_t)v17);
    v9 = v18;
    v18 &= ~0x1000000000000000uLL;
    if ((v9 & 0x1000000000000000) != 0)
    {
      sub_1A585BA78((uint64_t)v17, (uint64_t)v21);
      v12 = 0;
    }
    else
    {
      v10 = v17[2];
      v11 = v17[3];
      if (v5 == v17[0] && v6 == v17[1] || (v12 = 0, (sub_1A594CD38() & 1) != 0))
      {
        if (v7 == v10 && v8 == v11)
          v12 = 1;
        else
          v12 = sub_1A594CD38();
      }
    }
  }
  return v12 & 1;
}

BOOL sub_1A586C2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _BYTE v7[56];
  uint64_t v8;
  _BYTE v9[80];
  _BYTE v10[56];
  unint64_t v11;
  unint64_t v12;
  _BYTE v13[56];
  uint64_t v14;
  _BYTE v15[80];
  _BYTE v16[56];
  unint64_t v17;
  unint64_t v18;

  sub_1A585BA78(a1, (uint64_t)v13);
  v3 = v14;
  v14 &= ~0x1000000000000000uLL;
  if ((v3 & 0x1000000000000000) != 0)
  {
    sub_1A585BA78((uint64_t)v13, (uint64_t)v15);
    sub_1A585BA78((uint64_t)v15, (uint64_t)v16);
    v4 = qword_1A59DD2A0[(v18 >> 59) & 6 | (v17 >> 61) & 1];
    v17 &= ~0x2000000000000000uLL;
    v18 &= 0xCFFFFFFFFFFFFFFFLL;
  }
  else
  {
    v4 = 8;
  }
  sub_1A585BA78(a2, (uint64_t)v7);
  if ((v8 & 0x1000000000000000) != 0)
  {
    v8 &= ~0x1000000000000000uLL;
    sub_1A585BA78((uint64_t)v7, (uint64_t)v9);
    sub_1A585BA78((uint64_t)v9, (uint64_t)v10);
    v5 = qword_1A59DD2A0[(v12 >> 59) & 6 | (v11 >> 61) & 1];
  }
  else
  {
    v5 = 8;
  }
  return v4 < v5;
}

uint64_t sub_1A586C3C4()
{
  _QWORD *v0;
  unint64_t v1;

  sub_1A585B504(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11]);
  v1 = v0[13];
  if (((v1 >> 60) | 4) != 0xF)
    sub_1A54E46E8(v0[12], v1);
  sub_1A54E46E8(v0[14], v0[15]);
  sub_1A54E46E8(v0[16], v0[17]);
  return swift_deallocObject();
}

uint64_t sub_1A586C430()
{
  uint64_t v0;
  int v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A585B504(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  if (*(_QWORD *)(v0 + 160) >= 3uLL)
  {
    v1 = *(unsigned __int8 *)(v0 + 152);
    if (v1 != 255)
      sub_1A5687BD4(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1A586C4B8()
{
  _QWORD *v0;
  unint64_t v1;

  sub_1A585B504(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11]);
  v1 = v0[13];
  if (((v1 >> 60) | 4) != 0xF)
    sub_1A54E46E8(v0[12], v1);
  return swift_deallocObject();
}

uint64_t objectdestroy_9Tm()
{
  _QWORD *v0;
  unint64_t v1;

  sub_1A585B504(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11]);
  v1 = v0[13];
  if (v1 >> 60 != 15)
    sub_1A54E46E8(v0[12], v1);
  return swift_deallocObject();
}

uint64_t sub_1A586C578()
{
  uint64_t v0;

  sub_1A5862344(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  sub_1A58640B0(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_BYTE *)(v0 + 160));
  return swift_deallocObject();
}

void sub_1A586C5D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[56];

  sub_1A5868528(a1, (uint64_t)&v3);
  v2 = sub_1A594B478();
  MEMORY[0x1E0C80A78](v2);
  sub_1A5868528(a1, (uint64_t)v4);
  __asm { BR              X11 }
}

_QWORD *sub_1A586C67C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int64_t v38;
  _QWORD *v39;
  unint64_t v41;

  *(_QWORD *)(v3 - 112) = v2 & 0xDFFFFFFFFFFFFFFFLL;
  *(_QWORD *)(v3 - 96) = a1 & 0xCFFFFFFFFFFFFFFFLL;
  v5 = *(_QWORD *)(v3 - 168);
  v4 = *(_QWORD *)(v3 - 160);
  v7 = *(_QWORD *)(v3 - 152);
  v6 = *(_QWORD *)(v3 - 144);
  sub_1A54E42B4(v5, v4);
  sub_1A54E42B4(v7, v6);
  sub_1A594B454();
  v8 = sub_1A594B424();
  if (v9)
  {
    v10 = v8;
    v11 = v9;
    sub_1A594B454();
    v12 = sub_1A594B424();
    if (v13)
    {
      v14 = v13;
      *(_QWORD *)(v3 - 280) = v12;
      *(_QWORD *)(v3 - 272) = v10;
      v1 = sub_1A58D3DA4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v16 = v1[2];
      v15 = v1[3];
      if (v16 >= v15 >> 1)
        v1 = sub_1A58D3DA4((_QWORD *)(v15 > 1), v16 + 1, 1, v1);
      v17 = *(_QWORD *)(v3 - 280);
      v1[2] = v16 + 1;
      v18 = &v1[10 * v16];
      v18[4] = *(_QWORD *)(v3 - 272);
      v18[5] = v11;
      v18[6] = v17;
      v18[7] = v14;
      *((_OWORD *)v18 + 4) = 0u;
      *((_OWORD *)v18 + 5) = 0u;
      *((_OWORD *)v18 + 6) = 0u;
    }
    else
    {
      swift_bridgeObjectRelease();
      v1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
  }
  sub_1A54E42B4(v5, v4);
  sub_1A54E42B4(v7, v6);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_1A58D3DA4(0, v1[2] + 1, 1, v1);
  v20 = v1[2];
  v19 = v1[3];
  if (v20 >= v19 >> 1)
    v1 = sub_1A58D3DA4((_QWORD *)(v19 > 1), v20 + 1, 1, v1);
  v1[2] = v20 + 1;
  v21 = &v1[10 * v20];
  v21[4] = v5;
  v21[5] = v4;
  v21[6] = v7;
  v21[7] = v6;
  v21[9] = 0;
  v21[10] = 0;
  v21[8] = 0;
  *(_OWORD *)(v3 - 272) = xmmword_1A59DC6E0;
  *(_OWORD *)(v21 + 11) = xmmword_1A59DC6E0;
  v21[13] = 0x2000000000000000;
  sub_1A54E42B4(v5, v4);
  sub_1A54E42B4(v7, v6);
  v23 = v1[2];
  v22 = v1[3];
  if (v23 >= v22 >> 1)
    v1 = sub_1A58D3DA4((_QWORD *)(v22 > 1), v23 + 1, 1, v1);
  v1[2] = v23 + 1;
  v24 = &v1[10 * v23];
  v24[4] = v5;
  v24[5] = v4;
  v24[6] = v7;
  v24[7] = v6;
  v24[8] = 0;
  v24[9] = 0;
  v24[10] = 0;
  v24[11] = 0x1000000000000000;
  v24[12] = 0;
  v24[13] = 0;
  sub_1A594B460();
  v25 = sub_1A594B424();
  if (v26)
  {
    v27 = v26;
    *(_QWORD *)(v3 - 280) = v25;
    sub_1A594B460();
    v28 = sub_1A594B424();
    if (!v29)
    {
      sub_1A54E46E8(v5, v4);
      sub_1A54E46E8(v7, v6);
      swift_bridgeObjectRelease();
      return v1;
    }
    v30 = v29;
    *(_QWORD *)(v3 - 288) = v28;
    v32 = v1[2];
    v31 = v1[3];
    *(_QWORD *)(v3 - 296) = v31;
    v33 = v31 >> 1;
    v34 = v32 + 1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v33 <= v32)
    {
      v1 = sub_1A58D3DA4((_QWORD *)(*(_QWORD *)(v3 - 296) > 1uLL), v32 + 1, 1, v1);
      v41 = v1[3];
      *(_QWORD *)(v3 - 296) = v41;
      v33 = v41 >> 1;
    }
    v35 = *(_QWORD *)(v3 - 280);
    v36 = *(_QWORD *)(v3 - 288);
    v1[2] = v34;
    v37 = &v1[10 * v32];
    v37[4] = v35;
    v37[5] = v27;
    v37[6] = v36;
    v37[7] = v30;
    v37[9] = 0;
    v37[10] = 0;
    v37[8] = 0;
    *(_OWORD *)(v37 + 11) = xmmword_1A59AC1A0;
    v37[13] = 0x2000000000000000;
    v38 = v32 + 2;
    if (v33 <= v34)
    {
      v1 = sub_1A58D3DA4((_QWORD *)(*(_QWORD *)(v3 - 296) > 1uLL), v38, 1, v1);
      v36 = *(_QWORD *)(v3 - 288);
      v35 = *(_QWORD *)(v3 - 280);
    }
    v1[2] = v38;
    v39 = &v1[10 * v34];
    v39[4] = v35;
    v39[5] = v27;
    v39[6] = v36;
    v39[7] = v30;
    v39[9] = 0;
    v39[10] = 0;
    v39[8] = 0;
    *(_OWORD *)(v39 + 11) = *(_OWORD *)(v3 - 272);
    v39[13] = 0x3000000000000000;
  }
  sub_1A54E46E8(v5, v4);
  sub_1A54E46E8(v7, v6);
  return v1;
}

uint64_t destroy for MechanismKind.SASLKind(_QWORD *a1, uint64_t a2)
{
  return sub_1A586CDCC(a1, a2, sub_1A585B504);
}

_QWORD *initializeWithCopy for MechanismKind.SASLKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A586CE14(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A585B39C);
}

uint64_t *assignWithCopy for MechanismKind.SASLKind(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A586CECC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A585B39C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A585B504);
}

__n128 __swift_memcpy80_8_3(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_QWORD *assignWithTake for MechanismKind.SASLKind(_QWORD *a1, _OWORD *a2, uint64_t a3)
{
  return sub_1A586CF9C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A585B504);
}

uint64_t getEnumTagSinglePayload for MechanismKind.SASLKind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x3A && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 58);
  v3 = (*(_QWORD *)(a1 + 56) >> 58) & 0xC;
  v4 = (((*(_BYTE *)(a1 + 79) & 0x30 | v3) >> 3) & 0xFFFFFFC7 | (8 * (v3 & 7 | (*(_QWORD *)(a1 + 40) >> 60) & 3))) ^ 0x3F;
  if (v4 >= 0x39)
    v4 = -1;
  return v4 + 1;
}

uint64_t storeEnumTagSinglePayload for MechanismKind.SASLKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x39)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 58;
    if (a3 >= 0x3A)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x3A)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      v3 = (-a2 >> 3) & 7 | (8 * (-a2 & 0x3F));
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = (unint64_t)((-a2 >> 3) & 3) << 60;
      *(_QWORD *)(result + 48) = 0;
      *(_QWORD *)(result + 56) = (v3 << 58) & 0x3000000000000000;
      *(_QWORD *)(result + 64) = 0;
      *(_QWORD *)(result + 72) = (v3 << 56) & 0x3000000000000000;
    }
  }
  return result;
}

uint64_t sub_1A586CD60(uint64_t a1)
{
  return (*(_QWORD *)(a1 + 72) >> 59) & 6 | ((*(_QWORD *)(a1 + 56) & 0x2000000000000000) != 0);
}

_QWORD *sub_1A586CD7C(_QWORD *result, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = result[9];
  v3 = result[7] & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 1) << 61);
  result[5] &= 0xCFFFFFFFFFFFFFFFLL;
  result[7] = v3;
  result[9] = v2 & 0xCFFFFFFFFFFFFFFFLL | ((((unint64_t)(a2 & 7) >> 1) & 3) << 60);
  return result;
}

ValueMetadata *type metadata accessor for MechanismKind.SASLKind()
{
  return &type metadata for MechanismKind.SASLKind;
}

uint64_t destroy for MechanismKind(_QWORD *a1, uint64_t a2)
{
  return sub_1A586CDCC(a1, a2, sub_1A5862344);
}

uint64_t sub_1A586CDCC(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a3(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
}

_QWORD *initializeWithCopy for MechanismKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A586CE14(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A586418C);
}

_QWORD *sub_1A586CE14(_QWORD *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  v11 = a2[6];
  v12 = a2[7];
  v13 = a2[8];
  v15 = a2[9];
  a4(*a2, v6, v7, v8, v9, v10, v11, v12, v13, v15);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v9;
  a1[5] = v10;
  a1[6] = v11;
  a1[7] = v12;
  a1[8] = v13;
  a1[9] = v15;
  return a1;
}

uint64_t *assignWithCopy for MechanismKind(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A586CECC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A586418C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5862344);
}

uint64_t *sub_1A586CECC(uint64_t *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[4];
  v11 = a2[5];
  v12 = a2[6];
  v13 = a2[7];
  v14 = a2[8];
  v26 = a2[9];
  a4(*a2, v7, v8, v9, v10, v11, v12, v13, v14, v26);
  v15 = *a1;
  v16 = a1[1];
  v17 = a1[2];
  v18 = a1[3];
  v19 = a1[4];
  v20 = a1[5];
  v21 = a1[6];
  v22 = a1[7];
  v23 = a1[8];
  v24 = a1[9];
  *a1 = v6;
  a1[1] = v7;
  a1[2] = v8;
  a1[3] = v9;
  a1[4] = v10;
  a1[5] = v11;
  a1[6] = v12;
  a1[7] = v13;
  a1[8] = v14;
  a1[9] = v26;
  a5(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  return a1;
}

_QWORD *assignWithTake for MechanismKind(_QWORD *a1, _OWORD *a2, uint64_t a3)
{
  return sub_1A586CF9C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5862344);
}

_QWORD *sub_1A586CF9C(_QWORD *a1, _OWORD *a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;

  v6 = *a1;
  v8 = a1[1];
  v7 = a1[2];
  v9 = a1[3];
  v10 = a1[4];
  v11 = a1[5];
  v12 = a1[6];
  v13 = a1[7];
  v14 = a1[8];
  v15 = a1[9];
  v16 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v16;
  v17 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v17;
  *((_OWORD *)a1 + 4) = a2[4];
  a4(v6, v8, v7, v9, v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for MechanismKind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 7 && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 7);
  v3 = (((*(_QWORD *)(a1 + 56) & 0x1000000000000000) != 0) | (*(_QWORD *)(a1 + 40) >> 59) & 6) ^ 7;
  if (v3 >= 6)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MechanismKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 6)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 7;
    if (a3 >= 7)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 7)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = (unint64_t)((-a2 >> 1) & 3) << 60;
      *(_QWORD *)(result + 48) = 0;
      *(_QWORD *)(result + 56) = ((unint64_t)((-a2 >> 1) & 3 | (4 * (-a2 & 7))) << 58) & 0x1000000000000000;
      *(_QWORD *)(result + 64) = 0;
      *(_QWORD *)(result + 72) = 0;
    }
  }
  return result;
}

uint64_t sub_1A586D0DC(uint64_t a1)
{
  return (*(_QWORD *)(a1 + 56) >> 60) & 1;
}

uint64_t sub_1A586D0E8(uint64_t result)
{
  *(_QWORD *)(result + 56) &= ~0x1000000000000000uLL;
  return result;
}

uint64_t sub_1A586D0F8(uint64_t result, char a2)
{
  unint64_t v2;

  v2 = *(_QWORD *)(result + 56) & 0xEFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 1) << 60);
  *(_QWORD *)(result + 40) &= 0xCFFFFFFFFFFFFFFFLL;
  *(_QWORD *)(result + 56) = v2;
  return result;
}

ValueMetadata *type metadata accessor for MechanismKind()
{
  return &type metadata for MechanismKind;
}

unint64_t sub_1A586D12C()
{
  unint64_t result;

  result = qword_1EE7AAB70;
  if (!qword_1EE7AAB70)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DD234, &type metadata for MechanismKind.SASLKind);
    atomic_store(result, (unint64_t *)&qword_1EE7AAB70);
  }
  return result;
}

uint64_t sub_1A586D170()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v1 = sub_1A594BA18();
  *(_QWORD *)(v1 + 16) = 32;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  sub_1A586F774((void *)(v1 + 32));
  v13 = MEMORY[0x1E0DEE9D8];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = (uint64_t)sub_1A58D6318(v1);
  if (*(_QWORD *)(v1 + 16) <= 0xBuLL)
    goto LABEL_20;
  *(_DWORD *)(v1 + 40) = 1;
  v2 = *(_QWORD *)(v0 + 8);
  if ((v2 & 0x2000000000000000) != 0)
    v3 = HIBYTE(v2) & 0xF;
  else
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  v4 = *(_BYTE *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = (uint64_t)sub_1A58D6318(v1);
  if (*(_QWORD *)(v1 + 16) <= 0xFuLL)
  {
LABEL_20:
    result = sub_1A594C9C0();
    __break(1u);
  }
  else
  {
    if ((v4 & 1) != 0)
      v7 = 524807;
    else
      v7 = 519;
    v8 = v5 & 0xFFFFFFFFFFFFLL;
    if ((v6 & 0x2000000000000000) != 0)
      v8 = HIBYTE(v6) & 0xF;
    if (v3)
      v7 |= 0x1000u;
    if (v8)
      v7 |= 0x2000u;
    *(_DWORD *)(v1 + 44) = v7;
    v9 = sub_1A586F2D8(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
    sub_1A586E434(v9, 16);
    swift_release();
    v10 = sub_1A586F2D8(v5, v6);
    sub_1A586E434(v10, 24);
    swift_release();
    sub_1A58F1BE4(v13);
    v11 = sub_1A58C8218(v1);
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1A586D37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5700A78(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5871C48);
}

uint64_t sub_1A586D388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5700A78(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5871AAC);
}

BOOL sub_1A586D394(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  int v6;
  _OWORD v7[3];
  int v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_DWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_DWORD *)(a2 + 48);
  return sub_1A5871CD0((uint64_t *)v5, (uint64_t *)v7);
}

uint64_t sub_1A586D3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  int64_t v5;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;
  int64_t v13;
  unsigned __int16 v14;
  unsigned __int16 v15;
  uint64_t v16;
  int64_t v17;
  void *v18;
  int v19;
  char v20;
  uint64_t v21;
  int v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;

  result = sub_1A586D74C();
  if (!v3)
  {
    if (a1)
      v10 = a2 - a1;
    else
      v10 = 0;
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_27;
    }
    if (sub_1A586DB28(8, 0, v10, a1, a2) == 2)
    {
      v4 = sub_1A586DB28(20, 0, v10, a1, a2);
      v5 = sub_1A586F8B8(24, 8, a1, a2);
      if ((v4 & 0x800000) != 0)
      {
        v12 = sub_1A586D9AC(40, 0, v10, a1, a2);
        v14 = v12;
        if (v12)
        {
          v15 = sub_1A586D9AC(44, 0, v10, a1, a2);
          v10 = 0;
          if (v14 <= 0x7CFu && v15 < 0x7D0u)
          {
            v10 = 0;
            if (a1)
            {
              v16 = v15 + (unint64_t)v14;
              if (a2 - a1 >= v16)
                v10 = sub_1A58712C0(v15, v16, a1, a2, (_QWORD *(*)(__int128 *__return_ptr, uint64_t, _QWORD *))sub_1A5873FF8);
            }
          }
        }
        else
        {
          v10 = MEMORY[0x1E0DEE9D8];
        }
      }
      else
      {
        v10 = 0;
      }
      if ((v4 & 0x2000000) != 0)
      {
        v13 = sub_1A586F8B8(48, 8, a1, a2);
        v17 = v13;
        if (*(_QWORD *)(v13 + 16) == 8)
        {
          v25 = v13 + 40;
          v24 = sub_1A586DCA4(0, 0, 8uLL, v13 + 32, v13 + 40);
          v23 = sub_1A586DCA4(1, 0, 8uLL, v17 + 32, v25);
          LODWORD(result) = sub_1A586D9AC(2, 0, 8uLL, v17 + 32, v25);
LABEL_27:
          v22 = result;
          swift_bridgeObjectRelease();
          v20 = 0;
          v19 = v24 | (v23 << 8) | (v22 << 16);
          goto LABEL_24;
        }
        sub_1A5873FB4();
        v18 = (void *)swift_allocError();
        swift_willThrow();
        swift_bridgeObjectRelease();

      }
      v19 = 0;
      v20 = 1;
LABEL_24:
      result = sub_1A586D824(12, v4 & 1, a1, a2);
      *(_DWORD *)a3 = v4;
      *(_QWORD *)(a3 + 8) = v5;
      *(_QWORD *)(a3 + 16) = result;
      *(_QWORD *)(a3 + 24) = v21;
      *(_QWORD *)(a3 + 32) = v10;
      *(_DWORD *)(a3 + 40) = v19;
      *(_BYTE *)(a3 + 44) = v20;
      return result;
    }
    sub_1A5873E28();
    swift_allocError();
    *(_QWORD *)v11 = 2;
    *(_BYTE *)(v11 + 8) = 2;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A586D74C()
{
  int v0;
  uint64_t v1;

  while (1)
  {
    v0 = sub_1A58715BC();
    if ((v0 & 0x10000) != 0)
      break;
    if ((v0 & 0x80) != 0 || v0 != BYTE1(v0))
    {
      swift_bridgeObjectRelease();
      sub_1A5873E28();
      swift_allocError();
      *(_QWORD *)v1 = 0;
      *(_BYTE *)(v1 + 8) = 2;
      return swift_willThrow();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A586D824(uint64_t result, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v10;
  unsigned __int16 v11;
  unsigned __int16 v12;
  uint64_t v13;
  char v14;

  v5 = a4 - a3;
  if (a3)
    v6 = a4 - a3;
  else
    v6 = 0;
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  v10 = result;
  result = sub_1A586D9AC(result, 0, v6, a3, a4);
  if (v4)
    return result;
  v11 = result;
  if (!(_WORD)result)
    return 0;
  result = v10 + 4;
  if (__OFADD__(v10, 4))
    goto LABEL_21;
  v12 = sub_1A586D9AC(result, 0, v6, a3, a4);
  if (v11 > 0x7CFu || v12 > 0x7CFu || !a3 || v5 < (uint64_t)(v12 + (unint64_t)v11))
  {
    sub_1A5873E28();
    swift_allocError();
    *(_QWORD *)v13 = 3;
    v14 = 2;
LABEL_17:
    *(_BYTE *)(v13 + 8) = v14;
    return swift_willThrow();
  }
  if ((a2 & 1) != 0)
  {
    if ((v11 & 1) == 0)
      return sub_1A5872EC8(a3 + v12, (unint64_t)v11 >> 1);
    sub_1A5873E28();
    swift_allocError();
    *(_QWORD *)v13 = v11;
    v14 = 1;
    goto LABEL_17;
  }
  return sub_1A5872DD8((unsigned __int8 *)(a3 + v12), v11);
}

uint64_t sub_1A586D9AC(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  BOOL v10;
  unint64_t v11;

  v5 = a1 + 2;
  if (__OFADD__(a1, 2))
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (a4)
    v6 = a5 - a4;
  else
    v6 = 0;
  if ((a2 & 0x8000000000000000) != 0 || v6 < (uint64_t)a2)
    goto LABEL_22;
  if ((a3 & 0x8000000000000000) != 0 || v6 < (uint64_t)a3)
    goto LABEL_23;
  if ((uint64_t)(a3 - a2) < v5)
  {
    sub_1A5873E28();
    swift_allocError();
    *(_QWORD *)v7 = 1;
    *(_BYTE *)(v7 + 8) = 2;
    return swift_willThrow();
  }
  v9 = a2 + a1;
  if (__OFADD__(a2, a1))
    goto LABEL_24;
  if ((v9 & 0x8000000000000000) != 0 || v6 < (uint64_t)v9)
    goto LABEL_25;
  v10 = __OFADD__(a2, v5);
  v11 = a2 + v5;
  if (v10)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((v11 & 0x8000000000000000) != 0 || v6 < (uint64_t)v11)
    goto LABEL_27;
  if (v11 < v9)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v9 < a2)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  if (v11 > a3)
    goto LABEL_30;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B410);
  sub_1A5873F0C();
  sub_1A5949B4C();
  return 0;
}

uint64_t sub_1A586DB28(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  BOOL v10;
  unint64_t v11;

  v5 = a1 + 4;
  if (__OFADD__(a1, 4))
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (a4)
    v6 = a5 - a4;
  else
    v6 = 0;
  if ((a2 & 0x8000000000000000) != 0 || v6 < (uint64_t)a2)
    goto LABEL_22;
  if ((a3 & 0x8000000000000000) != 0 || v6 < (uint64_t)a3)
    goto LABEL_23;
  if ((uint64_t)(a3 - a2) < v5)
  {
    sub_1A5873E28();
    swift_allocError();
    *(_QWORD *)v7 = 1;
    *(_BYTE *)(v7 + 8) = 2;
    return swift_willThrow();
  }
  v9 = a2 + a1;
  if (__OFADD__(a2, a1))
    goto LABEL_24;
  if ((v9 & 0x8000000000000000) != 0 || v6 < (uint64_t)v9)
    goto LABEL_25;
  v10 = __OFADD__(a2, v5);
  v11 = a2 + v5;
  if (v10)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((v11 & 0x8000000000000000) != 0 || v6 < (uint64_t)v11)
    goto LABEL_27;
  if (v11 < v9)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v9 < a2)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  if (v11 > a3)
    goto LABEL_30;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B410);
  sub_1A5873F0C();
  sub_1A5949B4C();
  return 0;
}

uint64_t sub_1A586DCA4(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  BOOL v10;
  unint64_t v11;

  v5 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (a4)
    v6 = a5 - a4;
  else
    v6 = 0;
  if ((a2 & 0x8000000000000000) != 0 || v6 < (uint64_t)a2)
    goto LABEL_22;
  if ((a3 & 0x8000000000000000) != 0 || v6 < (uint64_t)a3)
    goto LABEL_23;
  if ((uint64_t)(a3 - a2) < v5)
  {
    sub_1A5873E28();
    swift_allocError();
    *(_QWORD *)v7 = 1;
    *(_BYTE *)(v7 + 8) = 2;
    return swift_willThrow();
  }
  v9 = a2 + a1;
  if (__OFADD__(a2, a1))
    goto LABEL_24;
  if ((v9 & 0x8000000000000000) != 0 || v6 < (uint64_t)v9)
    goto LABEL_25;
  v10 = __OFADD__(a2, v5);
  v11 = a2 + v5;
  if (v10)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((v11 & 0x8000000000000000) != 0 || v6 < (uint64_t)v11)
    goto LABEL_27;
  if (v11 < v9)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v9 < a2)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  if (v11 > a3)
    goto LABEL_30;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B410);
  sub_1A5873F0C();
  sub_1A5949B4C();
  return 0;
}

uint64_t sub_1A586DE20(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    if (a2)
      v3 = a3 - a2;
    else
      v3 = 0;
    result = sub_1A58710E0(0, result, v3, a2, a3);
    if ((v4 & 1) != 0)
      v5 = v3;
    else
      v5 = result;
    if ((v5 & 0x8000000000000000) == 0)
      return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A586DE90()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[8];
  int v17;
  char v18;
  _BYTE v19[8];
  _QWORD v20[2];

  v1 = v0;
  v20[1] = *MEMORY[0x1E0C80C00];
  v2 = sub_1A594BA18();
  *(_QWORD *)(v2 + 16) = 64;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  sub_1A586F774((void *)(v2 + 32));
  v13 = MEMORY[0x1E0DEE9D8];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_1A58D6318(v2);
  if (*(_QWORD *)(v2 + 16) > 0xBuLL)
  {
    *(_DWORD *)(v2 + 40) = 3;
    v12 = v2;
    v3 = sub_1A586F2D8(v1[2], v1[3]);
    sub_1A586E434(v3, 28);
    swift_release();
    v4 = sub_1A586F2D8(v1[4], v1[5]);
    sub_1A586E434(v4, 36);
    swift_release();
    v5 = sub_1A586F2D8(v1[6], v1[7]);
    sub_1A586E434(v5, 44);
    swift_release();
    v15 = *v1;
    v6 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A586E130(v6, 12);
    sub_1A54F81BC((uint64_t)&v15);
    v14 = v1[1];
    v7 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A586E130(v7, 20);
    sub_1A54F81BC((uint64_t)&v14);
    sub_1A55032A0((uint64_t)(v1 + 8), (uint64_t)v19, &qword_1EE7AABF0);
    sub_1A55032A0((uint64_t)v19, (uint64_t)v20, &qword_1EE7AABF0);
    if (v20[0])
      sub_1A586E2B4((char *)(v20[0] + 32), *(char **)(v20[0] + 16), 52);
    else
      sub_1A586E130(MEMORY[0x1E0DEE9D8], 52);
    sub_1A55032A0((uint64_t)(v1 + 9), (uint64_t)v16, &qword_1EE7AABF8);
    sub_1A55032A0((uint64_t)v16, (uint64_t)&v17, &qword_1EE7AABF8);
    v8 = (char *)v2;
    if ((v18 & 1) != 0)
      goto LABEL_12;
    v9 = v17;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1A58D6318(v12);
    if (*((_QWORD *)v8 + 2) > 0x3FuLL)
    {
      *((_DWORD *)v8 + 23) = v9;
LABEL_12:
      sub_1A58F1BE4(v13);
      v10 = sub_1A58C8218((uint64_t)v8);
      swift_bridgeObjectRelease();
      return v10;
    }
  }
  result = sub_1A594C9C0();
  __break(1u);
  return result;
}

uint64_t sub_1A586E130(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char **v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v4 = (char **)v2;
  v6 = *(_QWORD *)(v2 + 8);
  v5 = v2 + 8;
  v7 = *(_QWORD *)(v6 + 16);
  v8 = *v4;
  v9 = *((_QWORD *)*v4 + 2);
  v10 = v7 + v9;
  if (__OFADD__(v7, v9))
  {
    __break(1u);
  }
  else
  {
    if ((v10 & 0x8000000000000000) != 0 || HIDWORD(v10))
      goto LABEL_15;
    v3 = a2;
    v11 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A58F1BE4(v11);
    v5 = *(_QWORD *)(*(_QWORD *)v5 + 16) - v7;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      if ((v5 & 0x8000000000000000) != 0)
        goto LABEL_15;
      goto LABEL_6;
    }
  }
  v8 = sub_1A58D6318((uint64_t)v8);
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_15;
LABEL_6:
  if (v5 < 0x10000)
  {
    v12 = (uint64_t)&v8[*((_QWORD *)v8 + 2) + 32];
    sub_1A586F598(v5, v3, (uint64_t)(v8 + 32), v12);
    if (__OFADD__(v3, 2))
    {
      __break(1u);
    }
    else
    {
      sub_1A586F598(v5, v3 + 2, (uint64_t)(v8 + 32), v12);
      if (!__OFADD__(v3, 4))
      {
        result = sub_1A586F4D8(v10, v3 + 4, (uint64_t)(v8 + 32), v12);
        *v4 = v8;
        return result;
      }
    }
    __break(1u);
  }
LABEL_15:
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t sub_1A586E2B4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char **v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;

  v5 = (char **)v3;
  v7 = *(_QWORD *)(v3 + 8);
  v6 = v3 + 8;
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *v5;
  v10 = *((_QWORD *)*v5 + 2);
  v11 = v8 + v10;
  if (__OFADD__(v8, v10))
  {
    __break(1u);
  }
  else
  {
    if ((v11 & 0x8000000000000000) != 0 || HIDWORD(v11))
      goto LABEL_15;
    v4 = a3;
    sub_1A58F21FC(a1, a2);
    v6 = *(_QWORD *)(*(_QWORD *)v6 + 16) - v8;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      if ((v6 & 0x8000000000000000) != 0)
        goto LABEL_15;
      goto LABEL_6;
    }
  }
  v9 = sub_1A58D6318((uint64_t)v9);
  if ((v6 & 0x8000000000000000) != 0)
    goto LABEL_15;
LABEL_6:
  if (v6 < 0x10000)
  {
    v12 = (uint64_t)&v9[*((_QWORD *)v9 + 2) + 32];
    sub_1A586F598(v6, v4, (uint64_t)(v9 + 32), v12);
    if (__OFADD__(v4, 2))
    {
      __break(1u);
    }
    else
    {
      sub_1A586F598(v6, v4 + 2, (uint64_t)(v9 + 32), v12);
      if (!__OFADD__(v4, 4))
      {
        result = sub_1A586F4D8(v11, v4 + 4, (uint64_t)(v9 + 32), v12);
        *v5 = v9;
        return result;
      }
    }
    __break(1u);
  }
LABEL_15:
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t sub_1A586E434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char **v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;

  v4 = (char **)v2;
  v6 = *(_QWORD *)(v2 + 8);
  v5 = v2 + 8;
  v7 = *(_QWORD *)(v6 + 16);
  v8 = *v4;
  v9 = *((_QWORD *)*v4 + 2);
  v10 = v7 + v9;
  if (__OFADD__(v7, v9))
  {
    __break(1u);
  }
  else
  {
    if ((v10 & 0x8000000000000000) != 0 || HIDWORD(v10))
      goto LABEL_15;
    v3 = a2;
    swift_retain();
    sub_1A58FA0D8();
    swift_release();
    v5 = *(_QWORD *)(*(_QWORD *)v5 + 16) - v7;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      if ((v5 & 0x8000000000000000) != 0)
        goto LABEL_15;
      goto LABEL_6;
    }
  }
  v8 = sub_1A58D6318((uint64_t)v8);
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_15;
LABEL_6:
  if (v5 < 0x10000)
  {
    v11 = (uint64_t)&v8[*((_QWORD *)v8 + 2) + 32];
    sub_1A586F598(v5, v3, (uint64_t)(v8 + 32), v11);
    if (__OFADD__(v3, 2))
    {
      __break(1u);
    }
    else
    {
      sub_1A586F598(v5, v3 + 2, (uint64_t)(v8 + 32), v11);
      if (!__OFADD__(v3, 4))
      {
        result = sub_1A586F4D8(v10, v3 + 4, (uint64_t)(v8 + 32), v11);
        *v4 = v8;
        return result;
      }
    }
    __break(1u);
  }
LABEL_15:
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t sub_1A586E5C4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t result;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  char *v25;
  uint64_t v26[5];

  v26[4] = *MEMORY[0x1E0C80C00];
  v3 = swift_retain();
  v4 = (char *)a2(v3);
  swift_release();
  v5 = *((_QWORD *)v4 + 2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_16;
LABEL_2:
  v7 = *((_QWORD *)v4 + 2);
  v6 = *((_QWORD *)v4 + 3);
  v8 = v7 + 1;
  if (v7 >= v6 >> 1)
    v4 = sub_1A58D3CAC((char *)(v6 > 1), v7 + 1, 1, v4);
  *((_QWORD *)v4 + 2) = v8;
  v4[v7 + 32] = 0x80;
  v25 = v4;
  if (v7 > 0xFFFFFFFFFFFFFFELL)
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((v8 & 0x100000000000003FLL) == 0x38)
    goto LABEL_12;
  v9 = v7 + 33;
  do
  {
    v10 = *((_QWORD *)v4 + 3);
    v11 = v9 - 31;
    if (v9 - 32 >= v10 >> 1)
      v4 = sub_1A58D3CAC((char *)(v10 > 1), v9 - 31, 1, v4);
    *((_QWORD *)v4 + 2) = v11;
    v4[v9] = 0;
    if (v9 - 32 > 0xFFFFFFFFFFFFFFELL)
    {
      __break(1u);
LABEL_16:
      v4 = sub_1A58D3CAC(0, v5 + 1, 1, v4);
      goto LABEL_2;
    }
    ++v9;
  }
  while ((v11 & 0x100000000000003FLL) != 0x38);
  v25 = v4;
LABEL_12:
  if (v5 >> 60)
LABEL_18:
    __break(1u);
  v12 = 8 * v5;
  if (((8 * v5) & 0x8000000000000000) != 0)
  {
    sub_1A594C9B4();
    __break(1u);
    result = swift_willThrow();
    __break(1u);
  }
  else
  {
    v13 = HIDWORD(v12);
    LODWORD(v26[0]) = v12;
    sub_1A58F1D28((uint64_t)v26, (char *)v26 + 4);
    LODWORD(v26[0]) = v13;
    sub_1A58F1D28((uint64_t)v26, (char *)v26 + 4);
    v24 = 1732584193;
    v23 = -271733879;
    v22 = -1732584194;
    v21 = 271733878;
    v14 = *((_QWORD *)v25 + 2) >> 2;
    v26[0] = 0;
    v26[1] = v14;
    v26[2] = (uint64_t)(v25 + 32);
    v26[3] = v14;
    v15 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    MEMORY[0x1E0C80A78](v15);
    sub_1A58767BC(&v20, 16, v26, &v24, &v23, &v22, &v21);
    swift_bridgeObjectRelease();
    v16 = sub_1A594BA18();
    *(_QWORD *)(v16 + 16) = 16;
    v17 = v23;
    *(_DWORD *)(v16 + 32) = v24;
    *(_DWORD *)(v16 + 36) = v17;
    v18 = v21;
    *(_DWORD *)(v16 + 40) = v22;
    *(_DWORD *)(v16 + 44) = v18;
    swift_bridgeObjectRelease();
    return v16;
  }
  return result;
}

uint64_t sub_1A586E8B0(uint64_t a1)
{
  uint64_t inited;
  char *v2;
  char *v3;
  uint64_t *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v34[16];
  uint64_t v35;
  _QWORD v36[9];

  v36[8] = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a1 + 16) != 16)
    goto LABEL_41;
  v2 = v3;
  v5 = (char *)a1;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAC08);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABDA0;
  sub_1A594CD68();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_unknownObjectRetain_n();
  v8 = swift_dynamicCastClass();
  if (!v8)
  {
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
  }
  v4 = (uint64_t *)(inited + 32);
  v6 = (uint64_t)(v5 + 32);
  v9 = *(_QWORD *)(v8 + 16);
  swift_release();
  if (v9 != 7)
    goto LABEL_42;
  v10 = swift_dynamicCastClass();
  if (!v10)
  {
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  while (1)
  {
    swift_bridgeObjectRelease();
    *v4 = v10;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_unknownObjectRetain_n();
    v11 = swift_dynamicCastClass();
    if (!v11)
    {
      swift_bridgeObjectRelease();
      v11 = MEMORY[0x1E0DEE9D8];
    }
    v12 = *(_QWORD *)(v11 + 16);
    swift_release();
    if (v12 == 7)
    {
      v13 = swift_dynamicCastClass();
      if (!v13)
      {
        swift_bridgeObjectRelease();
        v13 = MEMORY[0x1E0DEE9D8];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v13 = sub_1A5871168((uint64_t)v5, v6, 7, 0x1DuLL);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 40) = v13;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_unknownObjectRetain_n();
    v14 = swift_dynamicCastClass();
    if (!v14)
    {
      swift_bridgeObjectRelease();
      v14 = MEMORY[0x1E0DEE9D8];
    }
    v15 = *(_QWORD *)(v14 + 16);
    swift_release();
    if (v15 == 2)
    {
      v16 = swift_dynamicCastClass();
      if (!v16)
      {
        swift_bridgeObjectRelease();
        v16 = MEMORY[0x1E0DEE9D8];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v16 = sub_1A5871168((uint64_t)v5, v6, 14, 0x21uLL);
    }
    swift_bridgeObjectRelease();
    v5 = *(char **)(v16 + 16);
    v18 = (int64_t)(v5 + 5);
    if (__OFADD__(v5, 5))
    {
      __break(1u);
LABEL_46:
      v5 = sub_1A58D3CAC((char *)(v17 > 1), v18, 1, v5);
      v17 = *((_QWORD *)v5 + 3);
      v20 = v17 >> 1;
      goto LABEL_26;
    }
    swift_retain();
    isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native
      && (v17 = *(_QWORD *)(v16 + 24), v20 = v17 >> 1, (uint64_t)(v17 >> 1) >= v18))
    {
      v5 = (char *)v16;
    }
    else
    {
      if ((uint64_t)v5 <= v18)
        v21 = (int64_t)(v5 + 5);
      else
        v21 = (int64_t)v5;
      v5 = sub_1A58D3CAC(isUniquelyReferenced_nonNull_native, v21, 1, (char *)v16);
      v17 = *((_QWORD *)v5 + 3);
      v20 = v17 >> 1;
    }
    v7 = *((_QWORD *)v5 + 2);
    v18 = v7 + 1;
    if (v20 <= v7)
      goto LABEL_46;
LABEL_26:
    *((_QWORD *)v5 + 2) = v18;
    v5[v7 + 32] = 0;
    v22 = v7 + 2;
    if (v20 < (uint64_t)(v7 + 2))
    {
      v5 = sub_1A58D3CAC((char *)(v17 > 1), v7 + 2, 1, v5);
      v17 = *((_QWORD *)v5 + 3);
      v20 = v17 >> 1;
    }
    *((_QWORD *)v5 + 2) = v22;
    v5[v18 + 32] = 0;
    v23 = v7 + 3;
    if (v20 < (uint64_t)(v7 + 3))
    {
      v5 = sub_1A58D3CAC((char *)(v17 > 1), v7 + 3, 1, v5);
      v17 = *((_QWORD *)v5 + 3);
      v20 = v17 >> 1;
    }
    *((_QWORD *)v5 + 2) = v23;
    v5[v22 + 32] = 0;
    v24 = v7 + 4;
    if (v20 < (uint64_t)(v7 + 4))
    {
      v5 = sub_1A58D3CAC((char *)(v17 > 1), v7 + 4, 1, v5);
      v17 = *((_QWORD *)v5 + 3);
      v20 = v17 >> 1;
    }
    *((_QWORD *)v5 + 2) = v24;
    v5[v23 + 32] = 0;
    v6 = v7 + 5;
    if (v20 < (uint64_t)(v7 + 5))
      v5 = sub_1A58D3CAC((char *)(v17 > 1), v7 + 5, 1, v5);
    *((_QWORD *)v5 + 2) = v6;
    v5[v24 + 32] = 0;
    swift_release();
    *(_QWORD *)(inited + 48) = v5;
    v36[0] = MEMORY[0x1E0DEE9D8];
    v25 = *(_QWORD *)(inited + 32);
    v26 = *(_QWORD *)(v25 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v26 != 7)
      goto LABEL_40;
    v27 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    MEMORY[0x1E0C80A78](v27);
    sub_1A586EE98(v34, v25, &v35);
    v5 = v2;
    if (v2)
      break;
    v6 = v35;
    swift_bridgeObjectRelease();
    v2 = (char *)v36;
    sub_1A58F1BE4(v6);
    v28 = *(_QWORD *)(inited + 40);
    if (*(_QWORD *)(v28 + 16) == 7)
    {
      v29 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      MEMORY[0x1E0C80A78](v29);
      sub_1A586EE98(v34, v28, &v35);
      v6 = v35;
      swift_bridgeObjectRelease();
      sub_1A58F1BE4(v6);
      v30 = *(_QWORD *)(inited + 48);
      if (*(_QWORD *)(v30 + 16) == 7)
      {
        v31 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        MEMORY[0x1E0C80A78](v31);
        sub_1A586EE98(v34, v30, &v35);
        v32 = v35;
        swift_bridgeObjectRelease();
        sub_1A58F1BE4(v32);
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796038);
        swift_arrayDestroy();
        return v36[0];
      }
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    swift_bridgeObjectRelease();
    v10 = sub_1A5871168((uint64_t)v5, v6, 0, 0xFuLL);
  }
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796038);
  return swift_arrayDestroy();
}

uint64_t sub_1A586EE98@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  unint64_t v5;
  int v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  int v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  size_t v21;
  void *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_QWORD *)(a2 + 16);
  if (!v5)
  {
    __break(1u);
    goto LABEL_13;
  }
  v6 = *(unsigned __int8 *)(a2 + 32);
  *a1 = v6;
  if (v5 == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v7 = *(unsigned __int8 *)(a2 + 33);
  HIDWORD(v8) = v6;
  LODWORD(v8) = v7 << 24;
  a1[1] = v8 >> 25;
  if (v5 < 3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = *(unsigned __int8 *)(a2 + 34);
  HIDWORD(v10) = v7;
  LODWORD(v10) = v9 << 24;
  a1[2] = v10 >> 26;
  if (v5 == 3)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v11 = *(unsigned __int8 *)(a2 + 35);
  HIDWORD(v12) = v9;
  LODWORD(v12) = v11 << 24;
  a1[3] = v12 >> 27;
  if (v5 < 5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v13 = *(unsigned __int8 *)(a2 + 36);
  HIDWORD(v14) = v11;
  LODWORD(v14) = v13 << 24;
  a1[4] = v14 >> 28;
  if (v5 == 5)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  v15 = *(unsigned __int8 *)(a2 + 37);
  HIDWORD(v16) = v13;
  LODWORD(v16) = v15 << 24;
  a1[5] = v16 >> 29;
  if (v5 < 7)
    goto LABEL_18;
  v17 = *(unsigned __int8 *)(a2 + 38);
  HIDWORD(v18) = v15;
  LODWORD(v18) = v17 << 24;
  a1[6] = v18 >> 30;
  a1[7] = 2 * v17;
  MEMORY[0x1E0C80A78](a1);
  result = sub_1A586F010(&v24, v22, v21, v19, (uint64_t)&v25, v20, v26);
  if (v3)
    return swift_willThrow();
  *a3 = v26[0];
  return result;
}

uint64_t sub_1A586F010@<X0>(void *dataOut@<X0>, void *key@<X2>, size_t keyLength@<X3>, void *dataIn@<X4>, uint64_t a5@<X1>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  size_t v10;
  size_t dataOutAvailable;
  CCCryptorStatus v12;
  CCCryptorStatus v13;
  CCCryptorStatus *v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20[2];

  v20[1] = *MEMORY[0x1E0C80C00];
  v20[0] = 0;
  if (dataIn)
    v10 = a6 - (_QWORD)dataIn;
  else
    v10 = 0;
  dataOutAvailable = a5 - (_QWORD)dataOut;
  if (!dataOut)
    dataOutAvailable = 0;
  v12 = CCCrypt(0, 1u, 2u, key, keyLength, 0, dataIn, v10, dataOut, dataOutAvailable, v20);
  if (v12)
  {
    v13 = v12;
    sub_1A58740BC();
    swift_allocError();
    *v14 = v13;
    return swift_willThrow();
  }
  else
  {
    v16 = sub_1A586DE20(v20[0], (uint64_t)dataOut, a5);
    result = sub_1A58712C0(v16, v17, v18, v19, (_QWORD *(*)(__int128 *__return_ptr, uint64_t, _QWORD *))sub_1A5873FF8);
    *a7 = result;
  }
  return result;
}

uint64_t sub_1A586F120(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v13;
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1A594AF44();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A586F2D8(a3, a4);
  v11 = sub_1A586E5C4(v10, (uint64_t (*)(uint64_t))sub_1A5896818);
  swift_release();
  v17 = sub_1A594B4B4();
  v18 = v12;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A586F2D8(v17, v18);
  swift_bridgeObjectRelease();
  v13 = swift_retain();
  v17 = sub_1A58C00B0(v13);
  v18 = v14;
  v16[1] = v11;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796038);
  sub_1A54E2E30((unint64_t *)&qword_1EE799DB0, &qword_1EE796038, MEMORY[0x1E0CB1B08]);
  sub_1A594AF38();
  sub_1A594AF8C();
  sub_1A58699E4();
  sub_1A5869A2C();
  sub_1A594AF50();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_1A54E46E8(v17, v18);
}

uint64_t sub_1A586F2D8(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = swift_allocObject();
  *(_WORD *)(v4 + 16) = 256;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = HIBYTE(a2) & 0xF;
  else
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 40) = v5;
  *(_WORD *)(v6 + 48) = 0;
  *(_BYTE *)(v6 + 50) = 1;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AABB0);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1A5874040;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v4;
  *(_QWORD *)(v8 + 24) = v7;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AABE8);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1A5874074;
  *(_QWORD *)(v9 + 24) = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v9;
}

uint64_t sub_1A586F3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A594BA18();
  *(_QWORD *)(v6 + 16) = 28;
  *(_QWORD *)(v6 + 34) = 0;
  *(_QWORD *)(v6 + 42) = 0;
  *(_QWORD *)(v6 + 50) = 0;
  *(_WORD *)(v6 + 58) = 0;
  *(_WORD *)(v6 + 32) = 257;
  *(_QWORD *)(v6 + 40) = a1;
  if (*(_QWORD *)(a2 + 16) >= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(a2 + 16);
  memmove((void *)(v6 + 48), (const void *)(a2 + 32), v7);
  if (a3)
  {
    v8 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A58F1BE4(v8);
  }
  v9 = sub_1A594BA18();
  *(_QWORD *)(v9 + 16) = 4;
  *(_DWORD *)(v9 + 32) = 0;
  sub_1A58F1BE4(v9);
  return v6;
}

uint64_t sub_1A586F4D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = a2 + 4;
  if (__OFADD__(a2, 4))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (a3)
  {
    if (a4 - a3 >= v4)
    {
      if (v4 >= a2)
      {
        *(_DWORD *)(a3 + a2) = result;
        return result;
      }
LABEL_10:
      __break(1u);
    }
    goto LABEL_11;
  }
  if (v4 > 0)
  {
LABEL_11:
    result = sub_1A594C9C0();
    __break(1u);
    return result;
  }
  if (v4 < a2)
    goto LABEL_10;
  return result;
}

uint64_t sub_1A586F598(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = a2 + 2;
  if (__OFADD__(a2, 2))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (a3)
  {
    if (a4 - a3 >= v4)
    {
      if (v4 >= a2)
      {
        *(_WORD *)(a3 + a2) = result;
        return result;
      }
LABEL_10:
      __break(1u);
    }
    goto LABEL_11;
  }
  if (v4 > 0)
  {
LABEL_11:
    result = sub_1A594C9C0();
    __break(1u);
    return result;
  }
  if (v4 < a2)
    goto LABEL_10;
  return result;
}

BOOL sub_1A586F658(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && *((unsigned __int16 *)a1 + 1) == *((unsigned __int16 *)a2 + 1);
}

uint64_t sub_1A586F690()
{
  uint64_t v1;

  v1 = sub_1A594CC9C();
  sub_1A594B5F8();
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A586F76C()
{
  return sub_1A586F690();
}

uint64_t sub_1A586F774(void *a1)
{
  uint64_t v2;
  int64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v2 = sub_1A594B4C0();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    result = sub_1A58BF7DC(0, v3, 0);
    v5 = v11;
    v6 = *(_QWORD *)(v2 + 16);
    v7 = "NTLMSSP";
    do
    {
      if (!v6)
      {
        __break(1u);
        return result;
      }
      v8 = *v7;
      v10 = *(_QWORD *)(v11 + 16);
      v9 = *(_QWORD *)(v11 + 24);
      if (v10 >= v9 >> 1)
        result = sub_1A58BF7DC(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v11 + 16) = v10 + 1;
      *(_BYTE *)(v11 + v10 + 32) = v8;
      --v6;
      ++v7;
      --v3;
    }
    while (v3);
    swift_release();
    if (!a1)
      return swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    v5 = MEMORY[0x1E0DEE9D8];
    if (!a1)
      return swift_bridgeObjectRelease();
  }
  memmove(a1, (const void *)(v5 + 32), *(_QWORD *)(v5 + 16));
  return swift_bridgeObjectRelease();
}

int64_t sub_1A586F8B8(int64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int64_t v10;
  uint64_t v11;
  size_t v12;
  _QWORD v13[5];

  v6 = result;
  if (a3)
  {
    v7 = a4 - a3;
    if (a4 - a3 >= result)
    {
      v8 = result + a2;
      if (__OFADD__(result, a2))
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      if (v7 >= v8)
      {
        v10 = a2;
        v9 = v8 == result;
        if (v8 >= result)
          goto LABEL_6;
        goto LABEL_17;
      }
    }
    goto LABEL_12;
  }
  if (result > 0)
    goto LABEL_12;
  v8 = result + a2;
  if (!__OFADD__(result, a2))
  {
    if (v8 <= 0)
    {
      v7 = 0;
      v10 = a2;
      v9 = v8 == result;
      if (v8 >= result)
      {
LABEL_6:
        if (v9)
          return MEMORY[0x1E0DEE9D8];
        if (v10 >= 1)
        {
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B370);
          v4 = swift_allocObject();
          v12 = _swift_stdlib_malloc_size_0((const void *)v4);
          *(_QWORD *)(v4 + 16) = v10;
          *(_QWORD *)(v4 + 24) = 2 * v12 - 64;
          goto LABEL_19;
        }
LABEL_18:
        v4 = MEMORY[0x1E0DEE9D8];
LABEL_19:
        result = sub_1A5871774(v13, (char *)(v4 + 32), v10, v6, v8, a3, v7);
        if (result != v10)
        {
          __break(1u);
          goto LABEL_21;
        }
        return v4;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_12:
    sub_1A5873E28();
    swift_allocError();
    *(_QWORD *)v11 = 1;
    *(_BYTE *)(v11 + 8) = 2;
    swift_willThrow();
    return v4;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1A586FA10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  char v5;
  uint64_t result;
  _WORD *v7;

  v4 = (_QWORD *)(a1 + 16);
  v5 = 1;
  result = swift_beginAccess();
  v7 = *(_WORD **)(a1 + 16);
  if (v7)
  {
    if (v7 == *(_WORD **)(a1 + 24))
    {
      LOWORD(v7) = 0;
      v5 = 1;
    }
    else
    {
      v5 = 0;
      *v4 = v7 + 1;
      LOWORD(v7) = *v7;
    }
  }
  *(_WORD *)a2 = (_WORD)v7;
  *(_BYTE *)(a2 + 2) = v5;
  return result;
}

double (*sub_1A586FA94())(_QWORD)
{
  int *v0;
  unint64_t v1;
  unsigned int v2;
  char v3;
  unsigned int v4;
  unsigned __int8 v5;
  char v6;
  unsigned int v7;
  unsigned int v8;
  char v9;
  BOOL v10;
  char v11;
  double (*result)(_QWORD);
  uint64_t v13;
  char v14;
  unsigned __int16 v15;
  char v16;
  int v17;
  char v18;

  LODWORD(v1) = *v0;
  v2 = *((unsigned __int8 *)v0 + 4);
  v17 = *v0;
  v18 = v2;
  if (!v2)
  {
    sub_1A594CA80();
    if ((v16 & 1) != 0)
    {
LABEL_3:
      v3 = 0;
      v4 = 0;
      v5 = 1;
LABEL_26:
      *v0 = v1;
      *((_BYTE *)v0 + 4) = v3;
      LOBYTE(v15) = v5;
      return (double (*)(_QWORD))(v4 | ((unint64_t)v5 << 32));
    }
    v4 = v15;
    if ((v15 & 0xF800) != 0xD800)
    {
      v3 = 0;
      v5 = 0;
      goto LABEL_26;
    }
    LODWORD(v1) = v1 & 0xFFFF0000 | v15;
    v2 = 16;
LABEL_6:
    sub_1A594CA80();
    if ((v16 & 1) != 0)
    {
      v6 = v2;
      goto LABEL_8;
    }
    LODWORD(v1) = ((-65535 << v2) - 1) & v1 | (v15 << v2);
    v6 = v2 + 16;
    if ((v2 + 16) <= 0x1Fu)
    {
      sub_1A594CA80();
      if ((v16 & 1) != 0)
      {
LABEL_8:
        if (!v6)
          goto LABEL_3;
        goto LABEL_16;
      }
      LODWORD(v1) = ((-65535 << v6) - 1) & v1 | (v15 << v6);
      v6 = v2 + 32;
      if (v2 >= 0xE0)
      {
        sub_1A594CA80();
        if ((v16 & 1) == 0)
        {
          v7 = ((-65535 << v2) - 1) & v1 | (v15 << v2);
          v6 = v2 + 48;
LABEL_17:
          v8 = v7 & 0xFC00FC00;
          if ((v7 & 0xFC00FC00) == 0xDC00D800)
            v9 = 32;
          else
            v9 = 16;
          v3 = v6 - v9;
          v10 = v8 == -603924480;
          if (v8 == -603924480)
            v11 = 32;
          else
            v11 = 16;
          v1 = (unint64_t)v7 >> v11;
          if (v10)
          {
            v5 = 0;
            v4 = (HIWORD(v7) & 0x3FF | ((v7 & 0x3FF) << 10)) + 0x10000;
          }
          else
          {
            v4 = 1;
            v5 = 1;
          }
          goto LABEL_26;
        }
        goto LABEL_8;
      }
    }
LABEL_16:
    v7 = v1;
    goto LABEL_17;
  }
  if ((v1 & 0xF800) == 0xD800)
    goto LABEL_6;
  sub_1A5873EC8();
  result = sub_1A570358C();
  v14 = *(_BYTE *)(v13 + 4);
  if (v14)
  {
    *(_DWORD *)v13 = *(unsigned __int16 *)(v13 + 2);
    *(_BYTE *)(v13 + 4) = v14 - 16;
    ((void (*)(unsigned __int16 *, _QWORD))result)(&v15, 0);
    v5 = 0;
    v4 = (unsigned __int16)v1;
    LODWORD(v1) = v17;
    v3 = v18;
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A586FCC4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  char v5;
  char v6;
  char v7;
  unsigned __int8 v8;
  char v9;

  swift_beginAccess();
  if (*(_BYTE *)(a1 + 17) == 1)
  {
    result = sub_1A594CA80();
    if ((v9 & 1) != 0)
    {
      v5 = 0;
      v6 = 1;
    }
    else
    {
      v5 = v7;
      result = swift_beginAccess();
      v6 = 0;
      *(_WORD *)(a1 + 16) = v8;
    }
  }
  else
  {
    v5 = *(_BYTE *)(a1 + 16);
    result = swift_beginAccess();
    v6 = 0;
    *(_WORD *)(a1 + 16) = 256;
  }
  *a2 = v5;
  a2[1] = v6;
  return result;
}

uint64_t sub_1A586FD98@<X0>(uint64_t a1@<X8>)
{
  int v2;
  uint64_t result;

  swift_beginAccess();
  v2 = sub_1A594B6A0();
  result = swift_endAccess();
  *(_WORD *)a1 = v2;
  *(_BYTE *)(a1 + 2) = BYTE2(v2) & 1;
  return result;
}

void sub_1A586FDF0(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_1A586FDF8@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_1A586FE0C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_1A586FE20@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1A586FE34(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1A586FE64@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_1A586FE90@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_1A586FEB4(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_1A586FEC8(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_1A586FEDC(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_1A586FEF0@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A586FF04(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A586FF18(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1A586FF2C(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A586FF40()
{
  _DWORD *v0;

  return *v0 == 0;
}

_DWORD *sub_1A586FF50(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_1A586FF64@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3;
  uint64_t result;

  v3 = sub_1A5874148(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1A586FFA0(int a1)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;

  if ((a1 & 1) != 0)
  {
    v2 = sub_1A58D3FE4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v4 = v2[2];
    v3 = v2[3];
    if (v4 >= v3 >> 1)
      v2 = sub_1A58D3FE4((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
    v2[2] = v4 + 1;
    v5 = &v2[2 * v4];
    v5[4] = 0xD000000000000010;
    v5[5] = 0x80000001A5A13C30;
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((a1 & 2) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
    v7 = v2[2];
    v6 = v2[3];
    if (v7 >= v6 >> 1)
      v2 = sub_1A58D3FE4((_QWORD *)(v6 > 1), v7 + 1, 1, v2);
    v2[2] = v7 + 1;
    v8 = (char *)&v2[2 * v7];
    strcpy(v8 + 32, "negotiateOEM");
    v8[45] = 0;
    *((_WORD *)v8 + 23) = -5120;
    if ((a1 & 4) == 0)
    {
LABEL_8:
      if ((a1 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_38;
    }
  }
  else if ((a1 & 4) == 0)
  {
    goto LABEL_8;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v10 = v2[2];
  v9 = v2[3];
  if (v10 >= v9 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v9 > 1), v10 + 1, 1, v2);
  v2[2] = v10 + 1;
  v11 = (char *)&v2[2 * v10];
  strcpy(v11 + 32, "requestTarget");
  *((_WORD *)v11 + 23) = -4864;
  if ((a1 & 0x10) == 0)
  {
LABEL_9:
    if ((a1 & 0x20) == 0)
      goto LABEL_10;
    goto LABEL_43;
  }
LABEL_38:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v13 = v2[2];
  v12 = v2[3];
  if (v13 >= v12 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v12 > 1), v13 + 1, 1, v2);
  v2[2] = v13 + 1;
  v14 = (char *)&v2[2 * v13];
  strcpy(v14 + 32, "negotiateSign");
  *((_WORD *)v14 + 23) = -4864;
  if ((a1 & 0x20) == 0)
  {
LABEL_10:
    if ((a1 & 0x40) == 0)
      goto LABEL_11;
    goto LABEL_48;
  }
LABEL_43:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v16 = v2[2];
  v15 = v2[3];
  if (v16 >= v15 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v15 > 1), v16 + 1, 1, v2);
  v2[2] = v16 + 1;
  v17 = (char *)&v2[2 * v16];
  strcpy(v17 + 32, "negotiateSeal");
  *((_WORD *)v17 + 23) = -4864;
  if ((a1 & 0x40) == 0)
  {
LABEL_11:
    if ((a1 & 0x80) == 0)
      goto LABEL_12;
    goto LABEL_53;
  }
LABEL_48:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v19 = v2[2];
  v18 = v2[3];
  if (v19 >= v18 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v18 > 1), v19 + 1, 1, v2);
  v2[2] = v19 + 1;
  v20 = &v2[2 * v19];
  v20[4] = 0xD000000000000016;
  v20[5] = 0x80000001A5A13C10;
  if ((a1 & 0x80) == 0)
  {
LABEL_12:
    if ((a1 & 0x200) == 0)
      goto LABEL_13;
    goto LABEL_58;
  }
LABEL_53:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v22 = v2[2];
  v21 = v2[3];
  if (v22 >= v21 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v21 > 1), v22 + 1, 1, v2);
  v2[2] = v22 + 1;
  v23 = &v2[2 * v22];
  v23[4] = 0xD000000000000016;
  v23[5] = 0x80000001A5A13BF0;
  if ((a1 & 0x200) == 0)
  {
LABEL_13:
    if ((a1 & 0x800) == 0)
      goto LABEL_14;
    goto LABEL_63;
  }
LABEL_58:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v25 = v2[2];
  v24 = v2[3];
  if (v25 >= v24 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v24 > 1), v25 + 1, 1, v2);
  v2[2] = v25 + 1;
  v26 = (char *)&v2[2 * v25];
  strcpy(v26 + 32, "negotiateNTLM");
  *((_WORD *)v26 + 23) = -4864;
  if ((a1 & 0x800) == 0)
  {
LABEL_14:
    if ((a1 & 0x1000) == 0)
      goto LABEL_15;
    goto LABEL_68;
  }
LABEL_63:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v28 = v2[2];
  v27 = v2[3];
  if (v28 >= v27 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v27 > 1), v28 + 1, 1, v2);
  v2[2] = v28 + 1;
  v29 = &v2[2 * v28];
  v29[4] = 0xD000000000000012;
  v29[5] = 0x80000001A5A13BD0;
  if ((a1 & 0x1000) == 0)
  {
LABEL_15:
    if ((a1 & 0x2000) == 0)
      goto LABEL_16;
    goto LABEL_73;
  }
LABEL_68:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v31 = v2[2];
  v30 = v2[3];
  if (v31 >= v30 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v30 > 1), v31 + 1, 1, v2);
  v2[2] = v31 + 1;
  v32 = &v2[2 * v31];
  v32[4] = 0xD000000000000017;
  v32[5] = 0x80000001A5A13BB0;
  if ((a1 & 0x2000) == 0)
  {
LABEL_16:
    if ((a1 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_78;
  }
LABEL_73:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v34 = v2[2];
  v33 = v2[3];
  if (v34 >= v33 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v33 > 1), v34 + 1, 1, v2);
  v2[2] = v34 + 1;
  v35 = &v2[2 * v34];
  v35[4] = 0xD00000000000001CLL;
  v35[5] = 0x80000001A5A13B90;
  if ((a1 & 0x8000) == 0)
  {
LABEL_17:
    if ((a1 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_83;
  }
LABEL_78:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v37 = v2[2];
  v36 = v2[3];
  if (v37 >= v36 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v36 > 1), v37 + 1, 1, v2);
  v2[2] = v37 + 1;
  v38 = &v2[2 * v37];
  v38[4] = 0xD000000000000013;
  v38[5] = 0x80000001A5A13B70;
  if ((a1 & 0x10000) == 0)
  {
LABEL_18:
    if ((a1 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_88;
  }
LABEL_83:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v40 = v2[2];
  v39 = v2[3];
  if (v40 >= v39 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v39 > 1), v40 + 1, 1, v2);
  v2[2] = v40 + 1;
  v41 = &v2[2 * v40];
  v41[4] = 0xD000000000000010;
  v41[5] = 0x80000001A5A13B50;
  if ((a1 & 0x20000) == 0)
  {
LABEL_19:
    if ((a1 & 0x80000) == 0)
      goto LABEL_20;
    goto LABEL_93;
  }
LABEL_88:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v43 = v2[2];
  v42 = v2[3];
  if (v43 >= v42 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v42 > 1), v43 + 1, 1, v2);
  v2[2] = v43 + 1;
  v44 = &v2[2 * v43];
  v44[4] = 0xD000000000000010;
  v44[5] = 0x80000001A5A13B30;
  if ((a1 & 0x80000) == 0)
  {
LABEL_20:
    if ((a1 & 0x100000) == 0)
      goto LABEL_21;
    goto LABEL_98;
  }
LABEL_93:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v46 = v2[2];
  v45 = v2[3];
  if (v46 >= v45 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v45 > 1), v46 + 1, 1, v2);
  v2[2] = v46 + 1;
  v47 = &v2[2 * v46];
  v47[4] = 0xD000000000000011;
  v47[5] = 0x80000001A5A13B10;
  if ((a1 & 0x100000) == 0)
  {
LABEL_21:
    if ((a1 & 0x400000) == 0)
      goto LABEL_22;
    goto LABEL_103;
  }
LABEL_98:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v49 = v2[2];
  v48 = v2[3];
  if (v49 >= v48 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v48 > 1), v49 + 1, 1, v2);
  v2[2] = v49 + 1;
  v50 = &v2[2 * v49];
  v50[4] = 0xD000000000000011;
  v50[5] = 0x80000001A5A13AF0;
  if ((a1 & 0x400000) == 0)
  {
LABEL_22:
    if ((a1 & 0x800000) == 0)
      goto LABEL_23;
    goto LABEL_108;
  }
LABEL_103:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v52 = v2[2];
  v51 = v2[3];
  if (v52 >= v51 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v51 > 1), v52 + 1, 1, v2);
  v2[2] = v52 + 1;
  v53 = &v2[2 * v52];
  v53[4] = 0xD000000000000016;
  v53[5] = 0x80000001A5A13AD0;
  if ((a1 & 0x800000) == 0)
  {
LABEL_23:
    if ((a1 & 0x2000000) == 0)
      goto LABEL_24;
    goto LABEL_113;
  }
LABEL_108:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v55 = v2[2];
  v54 = v2[3];
  if (v55 >= v54 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v54 > 1), v55 + 1, 1, v2);
  v2[2] = v55 + 1;
  v56 = &v2[2 * v55];
  v56[4] = 0xD000000000000013;
  v56[5] = 0x80000001A5A13AB0;
  if ((a1 & 0x2000000) == 0)
  {
LABEL_24:
    if ((a1 & 0x20000000) == 0)
      goto LABEL_25;
    goto LABEL_118;
  }
LABEL_113:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v58 = v2[2];
  v57 = v2[3];
  if (v58 >= v57 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v57 > 1), v58 + 1, 1, v2);
  v2[2] = v58 + 1;
  v59 = &v2[2 * v58];
  v59[4] = 0xD000000000000010;
  v59[5] = 0x80000001A5A13A90;
  if ((a1 & 0x20000000) == 0)
  {
LABEL_25:
    if ((a1 & 0x40000000) == 0)
      goto LABEL_26;
    goto LABEL_123;
  }
LABEL_118:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v61 = v2[2];
  v60 = v2[3];
  if (v61 >= v60 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v60 > 1), v61 + 1, 1, v2);
  v2[2] = v61 + 1;
  v62 = (char *)&v2[2 * v61];
  strcpy(v62 + 32, "negotiate128");
  v62[45] = 0;
  *((_WORD *)v62 + 23) = -5120;
  if ((a1 & 0x40000000) == 0)
  {
LABEL_26:
    if ((a1 & 0x80000000) == 0)
      goto LABEL_133;
    goto LABEL_128;
  }
LABEL_123:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
  v64 = v2[2];
  v63 = v2[3];
  if (v64 >= v63 >> 1)
    v2 = sub_1A58D3FE4((_QWORD *)(v63 > 1), v64 + 1, 1, v2);
  v2[2] = v64 + 1;
  v65 = &v2[2 * v64];
  v65[4] = 0xD000000000000014;
  v65[5] = 0x80000001A5A13A70;
  if (a1 < 0)
  {
LABEL_128:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1A58D3FE4(0, v2[2] + 1, 1, v2);
    v67 = v2[2];
    v66 = v2[3];
    if (v67 >= v66 >> 1)
      v2 = sub_1A58D3FE4((_QWORD *)(v66 > 1), v67 + 1, 1, v2);
    v2[2] = v67 + 1;
    v68 = &v2[2 * v67];
    v68[4] = 0x746169746F67656ELL;
    v68[5] = 0xEB00000000363565;
  }
LABEL_133:
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A60);
  sub_1A54E2E30((unint64_t *)&qword_1EE795FA8, &qword_1EE799A60, MEMORY[0x1E0DEAF20]);
  v69 = sub_1A594B268();
  swift_bridgeObjectRelease();
  return v69;
}

uint64_t sub_1A5870B74()
{
  int *v0;

  return sub_1A586FFA0(*v0);
}

uint64_t _s16ChallengeMessageVwxx(uint64_t a1)
{
  int v1;

  v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 != 255)
    sub_1A5687BD4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s16ChallengeMessageVwcp(uint64_t a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *((unsigned __int8 *)a2 + 16);
  if (v4 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  }
  else
  {
    v5 = *a2;
    v6 = a2[1];
    sub_1A5688348(*a2, v6, v4);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = v4;
  }
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s16ChallengeMessageVwca(uint64_t a1, __int128 *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;

  v4 = *((unsigned __int8 *)a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) == 255)
  {
    if (v4 == 255)
    {
      v13 = *a2;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      *(_OWORD *)a1 = v13;
    }
    else
    {
      v10 = *(_QWORD *)a2;
      v11 = *((_QWORD *)a2 + 1);
      sub_1A5688348(*(_QWORD *)a2, v11, v4);
      *(_QWORD *)a1 = v10;
      *(_QWORD *)(a1 + 8) = v11;
      *(_BYTE *)(a1 + 16) = v4;
    }
  }
  else if (v4 == 255)
  {
    sub_1A5870D78(a1);
    v12 = *((_BYTE *)a2 + 16);
    *(_OWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 16) = v12;
  }
  else
  {
    v5 = *(_QWORD *)a2;
    v6 = *((_QWORD *)a2 + 1);
    sub_1A5688348(*(_QWORD *)a2, v6, v4);
    v7 = *(_QWORD *)a1;
    v8 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    v9 = *(_BYTE *)(a1 + 16);
    *(_BYTE *)(a1 + 16) = v4;
    sub_1A5687BD4(v7, v8, v9);
  }
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  return a1;
}

uint64_t sub_1A5870D78(uint64_t a1)
{
  sub_1A5687BD4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

__n128 __swift_memcpy52_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s16ChallengeMessageVwta(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 == 255)
    goto LABEL_5;
  v5 = *(unsigned __int8 *)(a2 + 16);
  if (v5 == 255)
  {
    sub_1A5870D78(a1);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    goto LABEL_6;
  }
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A5687BD4(v6, v7, v4);
LABEL_6:
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

uint64_t _s16ChallengeMessageVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 52))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s16ChallengeMessageVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 52) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 52) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s16ChallengeMessageVMa()
{
  return &_s16ChallengeMessageVN;
}

uint64_t _s16ChallengeMessageV6TargetOwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A587465C(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1A5688348);
}

uint64_t *_s16ChallengeMessageV6TargetOwca(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A58746B8(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1A5688348, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A5687BD4);
}

uint64_t *_s16ChallengeMessageV6TargetOwta(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5874724(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A5687BD4);
}

uint64_t _s5StateOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

ValueMetadata *_s16ChallengeMessageV6TargetOMa()
{
  return &_s16ChallengeMessageV6TargetON;
}

_DWORD *__swift_memcpy4_2(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *_s9OSVersionVMa()
{
  return &_s9OSVersionVN;
}

ValueMetadata *_s5FlagsVMa()
{
  return &_s5FlagsVN;
}

unint64_t sub_1A5870FC4()
{
  unint64_t result;

  result = qword_1EE7AAB78;
  if (!qword_1EE7AAB78)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DD3A8, &_s5FlagsVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AAB78);
  }
  return result;
}

unint64_t sub_1A587100C()
{
  unint64_t result;

  result = qword_1EE7AAB80;
  if (!qword_1EE7AAB80)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DD378, &_s5FlagsVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AAB80);
  }
  return result;
}

unint64_t sub_1A5871054()
{
  unint64_t result;

  result = qword_1EE7AAB88;
  if (!qword_1EE7AAB88)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DD3D0, &_s5FlagsVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AAB88);
  }
  return result;
}

unint64_t sub_1A587109C()
{
  unint64_t result;

  result = qword_1EE7AAB90;
  if (!qword_1EE7AAB90)
  {
    result = MEMORY[0x1A85B1874]("ѕS?t~\n", &_s5FlagsVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AAB90);
  }
  return result;
}

uint64_t sub_1A58710E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  v5 = a5 - a4;
  if (!a4)
    v5 = 0;
  if (result < 0 || v5 < result)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a3 < 0 || v5 < a3)
    goto LABEL_19;
  v6 = a3 - result;
  if (a2 > 0)
  {
    if (v6 < 0 || v6 >= (unint64_t)a2)
      goto LABEL_14;
    return 0;
  }
  if (v6 <= 0 && v6 > a2)
    return 0;
LABEL_14:
  v7 = __OFADD__(result, a2);
  result += a2;
  if (v7)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  if (result < 0 || v5 < result)
    goto LABEL_21;
  return result;
}

uint64_t sub_1A5871168(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  int64_t v5;
  _QWORD *v8;
  size_t v9;
  void *v10;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0)
          goto LABEL_17;
        v10 = v8 + 4;
        if (a2 + a3 < (unint64_t)v8 + v5 + 32 && (unint64_t)v10 < a2 + a3 + v5)
          goto LABEL_17;
        memcpy(v10, (const void *)(a2 + a3), v5);
        return (uint64_t)v8;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B370);
      v8 = (_QWORD *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size_0(v8);
      v8[2] = v5;
      v8[3] = 2 * v9 - 64;
      if (v4 != a3)
        goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

int64_t sub_1A58712C0(int64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *(*a5)(__int128 *__return_ptr, uint64_t, _QWORD *))
{
  int64_t v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[2];
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  if (a3)
    v5 = a4 - a3;
  else
    v5 = 0;
  if (result < 0 || (v6 = result, v5 < result))
  {
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (a2 < 0 || v5 < a2)
    goto LABEL_24;
  v8 = a2 - result;
  if (a2 == result)
    return MEMORY[0x1E0DEE9D8];
  if (v8 <= 0)
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B370);
    v9 = (_QWORD *)swift_allocObject();
    result = _swift_stdlib_malloc_size_0(v9);
    v9[2] = v8;
    v9[3] = 2 * result - 64;
  }
  v15[0] = v6;
  v15[1] = a2;
  v16 = a3;
  v17 = a4;
  MEMORY[0x1E0C80A78](result);
  if (a3)
    result = (int64_t)sub_1A58719E0(a3, v15, a5, &v18);
  else
    result = (int64_t)sub_1A58719E0(0, v15, a5, &v18);
  v13 = v15[0] + v19;
  if (__OFADD__(v15[0], v19))
    goto LABEL_25;
  v14 = v17 - v16;
  if (!v16)
    v14 = 0;
  if (v13 < 0 || v14 < v13)
    goto LABEL_26;
  if (v19 == v8)
    return (int64_t)v9;
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A5871448(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1A5949BE8();
  if (!result || (result = sub_1A5949C0C(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1A5949C00();
      sub_1A594AF8C();
      sub_1A58699E4();
      return sub_1A594AEFC();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A58714F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = sub_1A5949BE8();
  v7 = result;
  if (result)
  {
    result = sub_1A5949C0C();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  v8 = __OFSUB__(a2, a1);
  v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  v10 = sub_1A5949C00();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  v12 = v7 + v11;
  if (v7)
    v13 = v12;
  else
    v13 = 0;
  return sub_1A586D3EC(v7, v13, a3);
}

_BYTE *sub_1A5871584(_BYTE *result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a3 + 16) > a2)
  {
    *result = *(_BYTE *)(a3 + a2 + 32);
    return nullsub_1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A58715BC()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int v25;
  char v26;
  unint64_t v27;
  _QWORD v28[3];

  if ((*(_BYTE *)(v0 + 64) & 1) != 0)
  {
    v1 = 0;
    v2 = 1;
    return v1 | (v2 << 16);
  }
  v3 = *(_QWORD *)(v0 + 32);
  if (v3 == *(_QWORD *)(v0 + 8))
    goto LABEL_7;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 16) + v3);
  *(_QWORD *)(v0 + 32) = v3 + 1;
  v6 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = v7 & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0)
    v8 = HIBYTE(v6) & 0xF;
  if (v5 >> 14 == 4 * v8)
  {
LABEL_7:
    v1 = 0;
    v2 = 1;
    *(_BYTE *)(v0 + 64) = 1;
    return v1 | (v2 << 16);
  }
  v9 = (v7 >> 59) & 1;
  if ((v6 & 0x1000000000000000) == 0)
    LOBYTE(v9) = 1;
  if ((*(_QWORD *)(v0 + 56) & 0xCLL) == 4 << v9)
  {
    v22 = *(_QWORD *)(v0 + 48);
    v24 = *(_QWORD *)(v0 + 40);
    v20 = v8;
    v5 = sub_1A55796A4(v5, v7, v6);
    v8 = v20;
    v6 = v22;
    v7 = v24;
  }
  v10 = v5 >> 16;
  if (v5 >> 16 >= v8)
  {
    __break(1u);
    goto LABEL_27;
  }
  if ((v6 & 0x1000000000000000) != 0)
  {
LABEL_27:
    result = sub_1A594B670();
    goto LABEL_19;
  }
  if ((v6 & 0x2000000000000000) != 0)
  {
    v28[0] = v7;
    v28[1] = v6 & 0xFFFFFFFFFFFFFFLL;
    result = *((unsigned __int8 *)v28 + v10);
  }
  else
  {
    if ((v7 & 0x1000000000000000) != 0)
    {
      v11 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    }
    else
    {
      v27 = v5 >> 16;
      v11 = sub_1A594C7D4();
      v10 = v27;
    }
    result = *(unsigned __int8 *)(v11 + v10);
  }
LABEL_19:
  v13 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 48);
  v15 = *(_QWORD *)(v0 + 56);
  v16 = (v13 >> 59) & 1;
  if ((v14 & 0x1000000000000000) == 0)
    LOBYTE(v16) = 1;
  if ((*(_QWORD *)(v0 + 56) & 0xCLL) == 4 << v16)
  {
    v25 = result;
    v21 = *(_QWORD *)(v0 + 48);
    v23 = *(_QWORD *)(v0 + 40);
    v18 = sub_1A55796A4(v15, v13, v14);
    v14 = v21;
    v13 = v23;
    v15 = v18;
    result = v25;
    if ((v21 & 0x1000000000000000) == 0)
      goto LABEL_23;
  }
  else if ((v14 & 0x1000000000000000) == 0)
  {
LABEL_23:
    v17 = (v15 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_24:
    v2 = 0;
    *(_QWORD *)(v0 + 56) = v17;
    v1 = v4 & 0xFFFF00FF | (result << 8);
    return v1 | (v2 << 16);
  }
  v26 = result;
  v19 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v19 = v13 & 0xFFFFFFFFFFFFLL;
  if (v19 > v15 >> 16)
  {
    v17 = sub_1A594B64C();
    LOBYTE(result) = v26;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

size_t sub_1A5871774(_QWORD *a1, char *__dst, int64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  size_t v12;
  char *v13;
  size_t result;

  if (__OFADD__(a4, a5 - a4))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (a5 < a4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v12 = 0;
  v13 = (char *)(a6 + a4);
  if (!a6)
    v13 = 0;
  if (a5 == a4 || !a3)
    goto LABEL_14;
  if (a5 - a4 >= a3)
    v12 = a3;
  else
    v12 = a5 - a4;
  if ((v12 & 0x8000000000000000) == 0 && (&__dst[v12] <= v13 || &v13[v12] <= __dst))
  {
    memcpy(__dst, v13, v12);
LABEL_14:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v12 + a4;
    return v12;
  }
LABEL_17:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

char *sub_1A58718BC(char *__src, int64_t a2, char *__dst, int64_t a4)
{
  char *v4;
  size_t v5;
  char *result;

  v4 = __src;
  if (!a2 || !a4)
    return v4;
  if (a2 >= a4)
    v5 = a4;
  else
    v5 = a2;
  if ((v5 & 0x8000000000000000) == 0 && (&__dst[v5] <= __src || &__src[v5] <= __dst))
  {
    memcpy(__dst, __src, v5);
    v4 += v5;
    return v4;
  }
  result = (char *)sub_1A594CA68();
  __break(1u);
  return result;
}

_QWORD *sub_1A58719E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, _QWORD *(*a3)(__int128 *__return_ptr, uint64_t, _QWORD *)@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;

  v19 = a4;
  v7 = *a2;
  v8 = a2[1];
  v10 = a2[2];
  v9 = a2[3];
  v11 = sub_1A56F12C4(0, *a2, v10, v9);
  result = (_QWORD *)sub_1A56F12C4(v7, v8, v10, v9);
  if (__OFADD__(v11, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  v13 = result;
  if ((uint64_t)result + v11 < v11)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (a1)
    v14 = a1 + v11;
  else
    v14 = 0;
  result = a3(&v17, v14, v13);
  if (!v4)
  {
    v15 = v18;
    v16 = v19;
    *v19 = v17;
    *((_QWORD *)v16 + 2) = v15;
  }
  return result;
}

uint64_t sub_1A5871AAC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(void))((char *)sub_1A5871AC8 + 4 * byte_1A59DD2E0[a3]))();
}

uint64_t sub_1A5871AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return sub_1A594CD38();
}

uint64_t sub_1A5871C48(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6)
    {
      if (a1 == a4 && a2 == a5)
        return 1;
      return sub_1A594CD38();
    }
    return 0;
  }
  if (a3 != 1)
    return a6 == 2 && !(a5 | a4);
  if (a6 != 1)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return sub_1A594CD38();
}

BOOL sub_1A5871CD0(uint64_t *a1, uint64_t *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL8 result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v4 = *((unsigned __int8 *)a1 + 16);
  v5 = *((unsigned __int8 *)a2 + 16);
  if (v4 == 255)
  {
    if (v5 != 255)
      return 0;
    goto LABEL_3;
  }
  if (v5 == 255)
    return 0;
  v9 = *a1;
  v10 = *a2;
  v11 = a2[1];
  if (v4)
  {
    if (v4 != 1)
    {
      result = 0;
      if (v5 != 2 || v11 | v10)
        return result;
LABEL_3:
      if ((sub_1A58B8814(a1[3], a2[3]) & 1) != 0)
      {
        v6 = a1[4];
        v7 = a2[4];
        if (v6)
        {
          if (!v7 || !_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(v6, v7))
            return 0;
LABEL_24:
          if (_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(a1[5], a2[5]))
            return *((_DWORD *)a1 + 12) == *((_DWORD *)a2 + 12);
          return 0;
        }
        if (!v7)
          goto LABEL_24;
      }
      return 0;
    }
    if (v5 != 1)
      return 0;
  }
  else if (*((_BYTE *)a2 + 16))
  {
    return 0;
  }
  if (v9 == v10 && a1[1] == v11)
    goto LABEL_3;
  v12 = sub_1A594CD38();
  result = 0;
  if ((v12 & 1) != 0)
    goto LABEL_3;
  return result;
}

void sub_1A5871DCC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  _QWORD v21[3];
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v12 = sub_1A594AF8C();
  v26 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1A594AF98();
  v24 = *(_QWORD *)(v13 - 8);
  v25 = v13;
  MEMORY[0x1E0C80A78](v13);
  v23 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAC00);
  MEMORY[0x1E0C80A78](v22);
  swift_bridgeObjectRelease();
  v15 = sub_1A586F2D8(a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = sub_1A586E5C4(v15, (uint64_t (*)(uint64_t))sub_1A5896818);
  swift_release();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v17 = (_QWORD *)sub_1A594BA18();
  v17[2] = 16;
  v17[4] = 0;
  v17[5] = 0;
  v27 = a8;
  sub_1A58F1BE4((uint64_t)v17);
  v21[1] = v27;
  v27 = a7;
  sub_1A58F1BE4(a8);
  sub_1A58C8218(v27);
  v19 = v18;
  swift_bridgeObjectRelease();
  sub_1A58699E4();
  sub_1A594AF20();
  v20 = (char *)&loc_1A5871F98 + *((int *)qword_1A5872218 + (v19 >> 62));
  v21[2] = v16;
  __asm { BR              X10 }
}

uint64_t sub_1A5871FAC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 - 104) = v0;
  *(_WORD *)(v5 - 96) = v2;
  *(_BYTE *)(v5 - 94) = BYTE2(v2);
  *(_BYTE *)(v5 - 93) = BYTE3(v2);
  *(_BYTE *)(v5 - 92) = BYTE4(v2);
  *(_BYTE *)(v5 - 91) = BYTE5(v2);
  sub_1A594AEFC();
  sub_1A54E46E8(v0, v2);
  v6 = *(_QWORD *)(v5 - 112);
  v7 = *(_QWORD *)(v5 - 144);
  sub_1A594AF08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 120) + 8))(v3, v1);
  sub_1A54E46E8(v0, v2);
  (*(void (**)(_QWORD *, uint64_t, _QWORD))(*(_QWORD *)(v5 - 136) + 32))(v4, v7, *(_QWORD *)(v5 - 128));
  *(_QWORD *)((char *)v4 + *(int *)(*(_QWORD *)(v5 - 152) + 36)) = 8;
  sub_1A58965F4(v4);
  sub_1A587407C((uint64_t)v4);
  sub_1A586E8B0(*(_QWORD *)(v5 - 160));
  if (v6)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return *(_QWORD *)(v5 - 168);
  }
}

uint64_t sub_1A5872228@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v15;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v15 = result;
  v17 = *(_QWORD *)(a5 + 16);
  if (!v17)
    goto LABEL_7;
  v18 = 0;
  v19 = (_BYTE *)(a5 + 48);
  while (*v19 != 1)
  {
    ++v18;
    v19 += 24;
    if (v17 == v18)
      goto LABEL_7;
  }
  if (v17 == v18)
  {
LABEL_7:
    v20 = 0;
    v21 = 0xE000000000000000;
    goto LABEL_8;
  }
  if (v18 >= v17)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (*v19 != 1)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  v20 = *((_QWORD *)v19 - 2);
  v21 = *((_QWORD *)v19 - 1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_8:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5871DCC(v15, a2, a3, a4, v20, v21, a6, a8);
  if (v9)
    return swift_bridgeObjectRelease();
  *(_QWORD *)a9 = v15;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = v20;
  *(_QWORD *)(a9 + 24) = v21;
  *(_QWORD *)(a9 + 32) = v22;
  *(_QWORD *)(a9 + 40) = v23;
  *(_DWORD *)(a9 + 48) = a7;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A587236C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;

  v13 = sub_1A586F2D8(a3, a4);
  v14 = sub_1A586E5C4(v13, (uint64_t (*)(uint64_t))sub_1A5896818);
  swift_release();
  v15 = sub_1A586E8B0(v14);
  result = swift_bridgeObjectRelease();
  if (!v7)
  {
    v17 = *(_QWORD *)(a5 + 16);
    if (!v17)
      goto LABEL_8;
    v18 = 0;
    v19 = (_BYTE *)(a5 + 48);
    while (*v19 != 1)
    {
      ++v18;
      v19 += 24;
      if (v17 == v18)
        goto LABEL_8;
    }
    if (v17 == v18)
    {
LABEL_8:
      v20 = 0;
      v21 = 0xE000000000000000;
LABEL_9:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      *(_QWORD *)a7 = a1;
      *(_QWORD *)(a7 + 8) = a2;
      *(_QWORD *)(a7 + 16) = v20;
      *(_QWORD *)(a7 + 24) = v21;
      *(_QWORD *)(a7 + 32) = v15;
      *(_QWORD *)(a7 + 40) = v15;
      *(_DWORD *)(a7 + 48) = a6;
      return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    if (v18 >= v17)
    {
      __break(1u);
    }
    else if (*v19 == 1)
    {
      v20 = *((_QWORD *)v19 - 2);
      v21 = *((_QWORD *)v19 - 1);
      sub_1A5874130(v20, v21, 1u);
      goto LABEL_9;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A58724A4(void (*a1)(char *, char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, char *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  _QWORD v62[6];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  unint64_t v83;

  v75 = a8;
  v76 = a10;
  v77 = a9;
  v78 = a1;
  v81 = sub_1A594AF44();
  v71 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v74 = (char *)v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A594A0EC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAB48);
  v80 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v70 = (char *)v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v69 = (char *)v62 - v24;
  MEMORY[0x1E0C80A78](v25);
  v73 = (char *)v62 - v26;
  MEMORY[0x1E0C80A78](v27);
  v72 = (char *)v62 - v28;
  MEMORY[0x1E0C80A78](v29);
  v79 = (char *)v62 - v30;
  v63 = a2;
  v64 = a3;
  v31 = a3;
  v32 = v76;
  v65 = a4;
  v66 = a5;
  v67 = a6;
  v68 = a7;
  sub_1A586F120(a2, v31, a4, a5);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 16))(v20, v78, v17);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v33 = v77;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A594A0B0();
  v36 = round((v35 + 1.16444736e10) * 10000000.0);
  if ((~*(_QWORD *)&v36 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v36 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v36 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v37 = (unint64_t)v36;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v38 = sub_1A586F3DC(v37, v33, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v39 = v75;
  v82 = v75;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A58F1BE4(v38);
  v40 = (char *)sub_1A58C8218((uint64_t)v82);
  v42 = v41;
  swift_bridgeObjectRelease();
  v82 = v40;
  v83 = v42;
  v43 = v73;
  v78 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
  v78(v73, v79, v21);
  v44 = sub_1A54E2E30((unint64_t *)&unk_1EE7AAB60, &qword_1EE7AAB48, MEMORY[0x1E0CA9470]);
  v45 = v74;
  v76 = v44;
  sub_1A594AF38();
  v46 = sub_1A594AF8C();
  v47 = sub_1A58699E4();
  v48 = sub_1A5869A2C();
  v49 = v72;
  v62[5] = v46;
  v62[4] = v47;
  v62[3] = v48;
  sub_1A594AF50();
  v71 = *(_QWORD *)(v71 + 8);
  ((void (*)(char *, uint64_t))v71)(v45, v81);
  sub_1A54E46E8((uint64_t)v82, v83);
  v50 = *(_QWORD *)(v38 + 16);
  v62[2] = sub_1A54E2E30(&qword_1EE7AAC18, &qword_1EE7AAB48, MEMORY[0x1E0CA9480]);
  result = sub_1A594B748();
  if (__OFADD__(v50, result))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v82 = sub_1A58D3CAC(0, (v50 + result) & ~((v50 + result) >> 63), 0, MEMORY[0x1E0DEE9D8]);
  v51 = v39;
  v52 = v78;
  v78(v43, v49, v21);
  sub_1A58F1F2C(v43);
  v53 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A58F1BE4(v53);
  v62[1] = v82;
  v54 = *(void (**)(char *, uint64_t))(v80 + 8);
  v54(v49, v21);
  v54(v79, v21);
  swift_bridgeObjectRelease();
  v55 = v69;
  sub_1A586F120(v63, v64, v65, v66);
  v82 = v51;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A58F1BE4(v33);
  v56 = (char *)sub_1A58C8218((uint64_t)v82);
  v58 = v57;
  swift_bridgeObjectRelease();
  v82 = v56;
  v83 = v58;
  v52(v43, v55, v21);
  sub_1A594AF38();
  v59 = v70;
  sub_1A594AF50();
  ((void (*)(char *, uint64_t))v71)(v45, v81);
  sub_1A54E46E8((uint64_t)v82, v83);
  v60 = *(_QWORD *)(v33 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A594B748();
  if (!__OFADD__(v60, result))
  {
    v82 = sub_1A58D3CAC(0, (v60 + result) & ~((v60 + result) >> 63), 0, MEMORY[0x1E0DEE9D8]);
    v78(v43, v59, v21);
    sub_1A58F1F2C(v43);
    sub_1A58F1BE4(v33);
    v61 = v82;
    v54(v59, v21);
    v54(v55, v21);
    return (uint64_t)v61;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A5872A60@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, void (*a10)(char *, char *, uint64_t), uint64_t a11)
{
  char *v11;
  uint64_t v16;
  unint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v11 = a7;
  v16 = result;
  v18 = *(_QWORD *)(a5 + 16);
  if (!v18)
    goto LABEL_7;
  v19 = 0;
  v20 = (_BYTE *)(a5 + 48);
  while (*v20 != 1)
  {
    ++v19;
    v20 += 24;
    if (v18 == v19)
      goto LABEL_7;
  }
  if (v18 == v19)
  {
LABEL_7:
    v21 = a8;
    v22 = 0;
    v23 = 0xE000000000000000;
LABEL_8:
    v24 = sub_1A58724A4(a10, v16, a2, a3, a4, v22, v23, v11, a11, a6);
    *(_QWORD *)a9 = v16;
    *(_QWORD *)(a9 + 8) = a2;
    *(_QWORD *)(a9 + 16) = v22;
    *(_QWORD *)(a9 + 24) = v23;
    *(_QWORD *)(a9 + 32) = v24;
    *(_QWORD *)(a9 + 40) = v25;
    *(_DWORD *)(a9 + 48) = v21;
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  if (v19 >= v18)
  {
    __break(1u);
  }
  else if (*v20 == 1)
  {
    v21 = a8;
    v22 = *((_QWORD *)v20 - 2);
    v23 = *((_QWORD *)v20 - 1);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v11 = a7;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

__n128 sub_1A5872B80@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, _OWORD *a8@<X8>, char a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  _BYTE *v22;
  uint64_t v23;
  __n128 result;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _BYTE v40[56];
  _BYTE v41[56];
  _BYTE v42[64];
  uint64_t v43;

  v39 = a8;
  v16 = sub_1A594A0EC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v21 = (void (*)(char *, char *, uint64_t))((char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((v19 & 0x80000) != 0)
  {
    v25 = v19;
    v26 = sub_1A594BA18();
    *(_QWORD *)(v26 + 16) = 8;
    *(_QWORD *)(v26 + 32) = 0;
    CCRandomGenerateBytes((void *)(v26 + 32), 8uLL);
    v22 = v40;
    v27 = v43;
    sub_1A5872228(a1, a2, a3, a4, a5, (uint64_t)a7, v25, v26, (uint64_t)v40);
    swift_bridgeObjectRelease();
    if (v27)
      return result;
  }
  else
  {
    v37 = a6;
    v38 = a1;
    if ((a9 & 1) != 0)
    {
      v28 = v18;
      HIDWORD(v36) = v19;
      sub_1A594A0E0();
      v29 = sub_1A594BA18();
      *(_QWORD *)(v29 + 16) = 8;
      *(_QWORD *)(v29 + 32) = 0;
      CCRandomGenerateBytes((void *)(v29 + 32), 8uLL);
      v30 = v43;
      sub_1A5872A60(v38, a2, a3, a4, a5, v37, a7, SHIDWORD(v36), (uint64_t)v42, v21, v29);
      if (v30)
      {
        (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v17 + 8))(v21, v28);
        swift_bridgeObjectRelease();
        return result;
      }
      (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v17 + 8))(v21, v28);
      swift_bridgeObjectRelease();
      v22 = v42;
    }
    else
    {
      v22 = v41;
      v23 = v43;
      sub_1A587236C(v38, a2, a3, a4, a5, v19, (uint64_t)v41);
      if (v23)
        return result;
    }
  }
  v31 = *((_DWORD *)v22 + 12);
  v32 = *((_QWORD *)v22 + 5);
  v33 = *((_QWORD *)v22 + 2);
  result = *(__n128 *)v22;
  v34 = *(_OWORD *)(v22 + 24);
  v35 = v39;
  *v39 = *(_OWORD *)v22;
  *((_QWORD *)v35 + 2) = v33;
  *(_OWORD *)((char *)v35 + 24) = v34;
  *((_QWORD *)v35 + 5) = v32;
  *((_DWORD *)v35 + 12) = v31;
  return result;
}

uint64_t sub_1A5872DD8(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  int v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v13 = 0;
  MEMORY[0x1A85AD968](a2);
  if (a1)
  {
    v4 = 0xE000000000000000;
    if (a2)
    {
      if (*a1 - 127 < 0xFFFFFFA1)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        sub_1A5873E28();
        swift_allocError();
        *(_QWORD *)v9 = 5;
        *(_BYTE *)(v9 + 8) = 2;
        return swift_willThrow();
      }
      v5 = 0;
      v6 = a2 - 1;
      v7 = a1 + 1;
      while (1)
      {
        v11 = v5;
        v12 = v4;
        sub_1A594B52C();
        v5 = v11;
        v4 = v12;
        if (!v6)
          return v11;
        v8 = *v7++;
        --v6;
        if ((v8 - 127) < 0xFFFFFFA1)
          goto LABEL_7;
      }
    }
  }
  return v13;
}

uint64_t sub_1A5872EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t i;
  uint64_t v8;

  MEMORY[0x1A85AD968](a2);
  if (a1)
    v4 = a1 + 2 * a2;
  else
    v4 = 0;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v4;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AABB0);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1A5873EC0;
  *(_QWORD *)(v6 + 24) = v5;
  swift_retain();
  for (i = (unint64_t)sub_1A586FA94(); (i & 0x100000000) == 0; i = (unint64_t)sub_1A586FA94())
    sub_1A594B52C();
  if ((_DWORD)i)
  {
    swift_bridgeObjectRelease();
    sub_1A5873E28();
    swift_allocError();
    *(_QWORD *)v8 = 4;
    *(_BYTE *)(v8 + 8) = 2;
    swift_willThrow();
  }
  swift_release();
  swift_release();
  return 0;
}

void sub_1A587302C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5873080@<X0>(int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  uint64_t v18;
  __int16 v19;
  char v20;
  char v21;
  char v22;
  char v23;
  int v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;

  if (BYTE6(v1) < 0x20uLL)
  {
    if (!a1)
    {
      v5 = BYTE6(v1);
      goto LABEL_12;
    }
    if (a1 != 1)
    {
      v7 = *(_QWORD *)(v2 + 16);
      v6 = *(_QWORD *)(v2 + 24);
      v5 = v6 - v7;
      if (!__OFSUB__(v6, v7))
        goto LABEL_12;
LABEL_21:
      __break(1u);
    }
    if (!__OFSUB__(HIDWORD(v2), (_DWORD)v2))
    {
      v5 = HIDWORD(v2) - (int)v2;
LABEL_12:
      sub_1A5873E28();
      swift_allocError();
      *(_QWORD *)v8 = v5;
      *(_BYTE *)(v8 + 8) = 0;
      swift_willThrow();
      sub_1A54E46E8(v2, v1);
      return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (!a1)
  {
    v18 = v2;
    v19 = v1;
    v20 = BYTE2(v1);
    v21 = BYTE3(v1);
    v22 = BYTE4(v1);
    v23 = BYTE5(v1);
    sub_1A586D3EC((uint64_t)&v18, (uint64_t)&v18 + BYTE6(v1), (uint64_t)&v24);
LABEL_14:
    v9 = v3;
    goto LABEL_16;
  }
  if (a1 == 1)
  {
    if (v2 >> 32 < (int)v2)
      goto LABEL_20;
    sub_1A58714F4((int)v2, v2 >> 32, (uint64_t)&v24);
    goto LABEL_14;
  }
  v10 = *(_QWORD *)(v2 + 16);
  v11 = *(_QWORD *)(v2 + 24);
  swift_retain();
  swift_retain();
  sub_1A58714F4(v10, v11, (uint64_t)&v24);
  v9 = v3;
  swift_release();
  swift_release();
LABEL_16:
  result = sub_1A54E46E8(v2, v1);
  if (v9)
    return swift_bridgeObjectRelease();
  v13 = v25;
  v14 = v26;
  v15 = v27;
  v16 = v28;
  v17 = v29;
  *(_DWORD *)v4 = v24;
  *(_OWORD *)(v4 + 8) = v13;
  *(_QWORD *)(v4 + 24) = v14;
  *(_QWORD *)(v4 + 32) = v15;
  *(_DWORD *)(v4 + 40) = v16;
  *(_BYTE *)(v4 + 44) = v17;
  return result;
}

uint64_t sub_1A58732B8(int64_t *a1)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  int64_t v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unsigned __int16 v12;
  unsigned __int16 v13;
  unsigned __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  __int128 v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  uint64_t v82;

  v2 = *a1;
  v3 = a1[2];
  v4 = a1[3];
  v82 = v4 - v3;
  if (v3)
    v5 = v4 - v3;
  else
    v5 = 0;
  if (v2 < 0 || v5 < v2)
    goto LABEL_211;
  v7 = a1[1];
  if (v7 < 0 || v5 < v7)
  {
LABEL_212:
    __break(1u);
LABEL_213:
    __break(1u);
LABEL_214:
    __break(1u);
LABEL_215:
    __break(1u);
LABEL_216:
    __break(1u);
LABEL_217:
    __break(1u);
LABEL_218:
    __break(1u);
LABEL_219:
    __break(1u);
LABEL_220:
    __break(1u);
LABEL_221:
    __break(1u);
LABEL_222:
    __break(1u);
LABEL_223:
    __break(1u);
LABEL_224:
    __break(1u);
LABEL_225:
    __break(1u);
LABEL_226:
    __break(1u);
LABEL_227:
    __break(1u);
LABEL_228:
    __break(1u);
LABEL_229:
    __break(1u);
LABEL_230:
    __break(1u);
LABEL_231:
    __break(1u);
LABEL_232:
    __break(1u);
    JUMPOUT(0x1A5873DBCLL);
  }
  if (v7 - v2 < 4)
    goto LABEL_9;
  v9 = v1;
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v81 = v5;
  while (2)
  {
    v11 = v10;
    v12 = sub_1A586D9AC(0, v2, v7, v3, v4);
    if (v9)
      return swift_bridgeObjectRelease();
    v13 = v12;
    v14 = sub_1A586D9AC(2, v2, v7, v3, v4);
    v9 = 0;
    if (!(v13 | v14))
      return (uint64_t)v11;
    if (v5 < v2)
      goto LABEL_196;
    v15 = v7;
    if ((unint64_t)(v7 - v2) >= 4)
    {
      v15 = v2 + 4;
      if (__OFADD__(v2, 4))
        goto LABEL_209;
      if (v15 < 0 || v5 < v15)
        goto LABEL_210;
      if (v7 < v15)
        goto LABEL_197;
    }
    if (v15 < v2)
      goto LABEL_198;
    *a1 = v15;
    a1[1] = v7;
    a1[2] = v3;
    a1[3] = v4;
    if (v5 < v15)
      goto LABEL_199;
    if (v7 - v15 >= v14)
    {
      if (v3)
      {
        if (v82 < v15)
          goto LABEL_207;
        if (v82 < v7)
          goto LABEL_200;
      }
      else
      {
        if (v15 > 0)
          goto LABEL_213;
        if (v7 > 0)
          goto LABEL_200;
      }
      v16 = v15 + v14;
      if (__OFADD__(v15, v14))
        goto LABEL_201;
      if (v16 < 0 || v5 < v16)
        goto LABEL_202;
      v17 = v14;
      if (v16 < v15)
        goto LABEL_203;
      if (v7 < v16)
        goto LABEL_204;
      if (v3)
      {
        if (v82 < v7)
          goto LABEL_208;
        v2 = v15 + v14;
        if (v82 < v15)
          goto LABEL_208;
        if (v82 < v16)
          goto LABEL_205;
      }
      else
      {
        if (v7 || v15 > 0)
          goto LABEL_214;
        if (v14)
          v2 = v14;
        else
          v2 = v15 + v14;
        if (v2 > 0)
          goto LABEL_205;
      }
      v18 = v7 - v2;
      if (v7 < v2)
      {
        __break(1u);
LABEL_196:
        __break(1u);
LABEL_197:
        __break(1u);
LABEL_198:
        __break(1u);
LABEL_199:
        __break(1u);
LABEL_200:
        __break(1u);
LABEL_201:
        __break(1u);
LABEL_202:
        __break(1u);
LABEL_203:
        __break(1u);
LABEL_204:
        __break(1u);
LABEL_205:
        __break(1u);
LABEL_206:
        __break(1u);
LABEL_207:
        __break(1u);
LABEL_208:
        __break(1u);
LABEL_209:
        __break(1u);
LABEL_210:
        __break(1u);
LABEL_211:
        __break(1u);
        goto LABEL_212;
      }
      if (v2 < v15)
        goto LABEL_206;
      *a1 = v2;
      a1[2] = v3;
      v10 = v11;
      switch(v13)
      {
        case 0u:
          goto LABEL_91;
        case 1u:
          if (v3)
          {
            if (v82 < v15)
              goto LABEL_221;
            if (v82 < v16)
              goto LABEL_215;
          }
          else
          {
            if (v15 > 0)
              goto LABEL_227;
            if (v16 > 0)
              goto LABEL_215;
          }
          if ((v17 & 1) != 0)
            goto LABEL_193;
          v30 = v3 + v15;
          if (v3)
            v31 = v30;
          else
            v31 = 0;
          if (v3)
            v32 = v17 >> 1;
          else
            v32 = 0;
          v33 = sub_1A5872EC8(v31, v32);
          v75 = v34;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v10 = v11;
          else
            v10 = sub_1A58D3EC4(0, v11[2] + 1, 1, v11);
          v36 = v10[2];
          v35 = v10[3];
          v18 = v7 - v2;
          if (v36 >= v35 >> 1)
          {
            v10 = sub_1A58D3EC4((_QWORD *)(v35 > 1), v36 + 1, 1, v10);
            v18 = v7 - v2;
          }
          v10[2] = v36 + 1;
          v37 = &v10[3 * v36];
          v37[4] = v33;
          v37[5] = v75;
          *((_BYTE *)v37 + 48) = 0;
          goto LABEL_91;
        case 2u:
          if (v3)
          {
            if (v82 < v15)
              goto LABEL_222;
            if (v82 < v16)
              goto LABEL_216;
          }
          else
          {
            if (v15 > 0)
              goto LABEL_228;
            if (v16 > 0)
              goto LABEL_216;
          }
          if ((v17 & 1) != 0)
            goto LABEL_193;
          v38 = v3 + v15;
          if (v3)
            v39 = v38;
          else
            v39 = 0;
          if (v3)
            v40 = v17 >> 1;
          else
            v40 = 0;
          v41 = sub_1A5872EC8(v39, v40);
          v76 = v42;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v10 = v11;
          else
            v10 = sub_1A58D3EC4(0, v11[2] + 1, 1, v11);
          v44 = v10[2];
          v43 = v10[3];
          v18 = v7 - v2;
          if (v44 >= v43 >> 1)
          {
            v10 = sub_1A58D3EC4((_QWORD *)(v43 > 1), v44 + 1, 1, v10);
            v18 = v7 - v2;
          }
          v10[2] = v44 + 1;
          v21 = &v10[3 * v44];
          v21[4] = v41;
          v21[5] = v76;
          v29 = 1;
          goto LABEL_90;
        case 3u:
          if (v3)
          {
            if (v82 < v15)
              goto LABEL_223;
            if (v82 < v16)
              goto LABEL_217;
          }
          else
          {
            if (v15 > 0)
              goto LABEL_229;
            if (v16 > 0)
              goto LABEL_217;
          }
          if ((v17 & 1) != 0)
            goto LABEL_193;
          v45 = v3 + v15;
          if (v3)
            v46 = v45;
          else
            v46 = 0;
          if (v3)
            v47 = v17 >> 1;
          else
            v47 = 0;
          v48 = sub_1A5872EC8(v46, v47);
          v77 = v49;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v10 = v11;
          else
            v10 = sub_1A58D3EC4(0, v11[2] + 1, 1, v11);
          v51 = v10[2];
          v50 = v10[3];
          v18 = v7 - v2;
          if (v51 >= v50 >> 1)
          {
            v10 = sub_1A58D3EC4((_QWORD *)(v50 > 1), v51 + 1, 1, v10);
            v18 = v7 - v2;
          }
          v10[2] = v51 + 1;
          v52 = &v10[3 * v51];
          v52[4] = v48;
          v52[5] = v77;
          *((_BYTE *)v52 + 48) = 2;
          goto LABEL_91;
        case 4u:
          if (v3)
          {
            if (v82 < v15)
              goto LABEL_224;
            if (v82 < v16)
              goto LABEL_218;
          }
          else
          {
            if (v15 > 0)
              goto LABEL_230;
            if (v16 > 0)
              goto LABEL_218;
          }
          if ((v17 & 1) != 0)
            goto LABEL_193;
          v53 = v3 + v15;
          if (v3)
            v54 = v53;
          else
            v54 = 0;
          if (v3)
            v55 = v17 >> 1;
          else
            v55 = 0;
          v56 = sub_1A5872EC8(v54, v55);
          v78 = v57;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v10 = v11;
          else
            v10 = sub_1A58D3EC4(0, v11[2] + 1, 1, v11);
          v59 = v10[2];
          v58 = v10[3];
          v18 = v7 - v2;
          if (v59 >= v58 >> 1)
          {
            v10 = sub_1A58D3EC4((_QWORD *)(v58 > 1), v59 + 1, 1, v10);
            v18 = v7 - v2;
          }
          v10[2] = v59 + 1;
          v21 = &v10[3 * v59];
          v21[4] = v56;
          v21[5] = v78;
          v29 = 3;
          goto LABEL_90;
        case 5u:
          if (v3)
          {
            if (v82 < v15)
              goto LABEL_225;
            if (v82 < v16)
              goto LABEL_219;
          }
          else
          {
            if (v15 > 0)
              goto LABEL_231;
            if (v16 > 0)
              goto LABEL_219;
          }
          if ((v17 & 1) != 0)
            goto LABEL_193;
          v60 = v3 + v15;
          if (v3)
            v61 = v60;
          else
            v61 = 0;
          if (v3)
            v62 = v17 >> 1;
          else
            v62 = 0;
          v63 = sub_1A5872EC8(v61, v62);
          v79 = v64;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v10 = v11;
          else
            v10 = sub_1A58D3EC4(0, v11[2] + 1, 1, v11);
          v66 = v10[2];
          v65 = v10[3];
          v18 = v7 - v2;
          if (v66 >= v65 >> 1)
          {
            v10 = sub_1A58D3EC4((_QWORD *)(v65 > 1), v66 + 1, 1, v10);
            v18 = v7 - v2;
          }
          v10[2] = v66 + 1;
          v21 = &v10[3 * v66];
          v21[4] = v63;
          v21[5] = v79;
          v29 = 4;
          goto LABEL_90;
        case 6u:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v10 = v11;
          else
            v10 = sub_1A58D3EC4(0, v11[2] + 1, 1, v11);
          v24 = v10[2];
          v23 = v10[3];
          v18 = v7 - v2;
          if (v24 >= v23 >> 1)
          {
            v10 = sub_1A58D3EC4((_QWORD *)(v23 > 1), v24 + 1, 1, v10);
            v18 = v7 - v2;
          }
          v10[2] = v24 + 1;
          v21 = &v10[3 * v24];
          v21[4] = 0;
          v21[5] = 0;
          goto LABEL_89;
        case 7u:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v10 = v11;
          else
            v10 = sub_1A58D3EC4(0, v11[2] + 1, 1, v11);
          v26 = v10[2];
          v25 = v10[3];
          v18 = v7 - v2;
          if (v26 >= v25 >> 1)
          {
            v10 = sub_1A58D3EC4((_QWORD *)(v25 > 1), v26 + 1, 1, v10);
            v18 = v7 - v2;
          }
          v10[2] = v26 + 1;
          v21 = &v10[3 * v26];
          v22 = xmmword_1A59ABDE0;
          goto LABEL_88;
        case 8u:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v10 = v11;
          else
            v10 = sub_1A58D3EC4(0, v11[2] + 1, 1, v11);
          v28 = v10[2];
          v27 = v10[3];
          v18 = v7 - v2;
          if (v28 >= v27 >> 1)
          {
            v10 = sub_1A58D3EC4((_QWORD *)(v27 > 1), v28 + 1, 1, v10);
            v18 = v7 - v2;
          }
          v10[2] = v28 + 1;
          v21 = &v10[3 * v28];
          v22 = xmmword_1A59DC700;
          goto LABEL_88;
        case 9u:
          if (v3)
          {
            if (v82 < v15)
              goto LABEL_226;
            if (v82 < v16)
              goto LABEL_220;
          }
          else
          {
            if (v15 > 0)
              goto LABEL_232;
            if (v16 > 0)
              goto LABEL_220;
          }
          if ((v17 & 1) != 0)
          {
LABEL_193:
            sub_1A5873E28();
            swift_allocError();
            *(_QWORD *)v74 = v17;
            *(_BYTE *)(v74 + 8) = 1;
            swift_willThrow();
            return swift_bridgeObjectRelease();
          }
          v67 = v3 + v15;
          if (v3)
            v68 = v67;
          else
            v68 = 0;
          if (v3)
            v69 = v17 >> 1;
          else
            v69 = 0;
          v70 = sub_1A5872EC8(v68, v69);
          v80 = v71;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v10 = v11;
          else
            v10 = sub_1A58D3EC4(0, v11[2] + 1, 1, v11);
          v73 = v10[2];
          v72 = v10[3];
          v18 = v7 - v2;
          if (v73 >= v72 >> 1)
          {
            v10 = sub_1A58D3EC4((_QWORD *)(v72 > 1), v73 + 1, 1, v10);
            v18 = v7 - v2;
          }
          v10[2] = v73 + 1;
          v21 = &v10[3 * v73];
          v21[4] = v70;
          v21[5] = v80;
          v29 = 5;
LABEL_90:
          *((_BYTE *)v21 + 48) = v29;
LABEL_91:
          v5 = v81;
          if (v18 > 3)
            continue;
          swift_bridgeObjectRelease();
          break;
        default:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v10 = v11;
          else
            v10 = sub_1A58D3EC4(0, v11[2] + 1, 1, v11);
          v20 = v10[2];
          v19 = v10[3];
          v18 = v7 - v2;
          if (v20 >= v19 >> 1)
          {
            v10 = sub_1A58D3EC4((_QWORD *)(v19 > 1), v20 + 1, 1, v10);
            v18 = v7 - v2;
          }
          v10[2] = v20 + 1;
          v21 = &v10[3 * v20];
          v22 = xmmword_1A59DC710;
LABEL_88:
          *((_OWORD *)v21 + 2) = v22;
LABEL_89:
          v29 = 6;
          goto LABEL_90;
      }
LABEL_9:
      sub_1A5873DE4();
      goto LABEL_10;
    }
    break;
  }
  swift_bridgeObjectRelease();
  sub_1A5873E6C();
LABEL_10:
  swift_allocError();
  return swift_willThrow();
}

unint64_t sub_1A5873DE4()
{
  unint64_t result;

  result = qword_1EE7AAB98;
  if (!qword_1EE7AAB98)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DD8E4, &_s16ChallengeMessageV20RawTargetInformationV51NTLMChallengeMessageTargetInformationBufferTooShortVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AAB98);
  }
  return result;
}

unint64_t sub_1A5873E28()
{
  unint64_t result;

  result = qword_1EE7AABA0;
  if (!qword_1EE7AABA0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DD8A4, &_s5ErrorON);
    atomic_store(result, (unint64_t *)&qword_1EE7AABA0);
  }
  return result;
}

unint64_t sub_1A5873E6C()
{
  unint64_t result;

  result = qword_1EE7AABA8;
  if (!qword_1EE7AABA8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DD864, &_s16ChallengeMessageV20RawTargetInformationV52NTLMChallengeMessageTargetInformationByteCountTooBigVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AABA8);
  }
  return result;
}

uint64_t sub_1A5873EB0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5873EC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A586FA10(v1, a1);
}

unint64_t sub_1A5873EC8()
{
  unint64_t result;

  result = qword_1EE7AABB8;
  if (!qword_1EE7AABB8)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEE4E0], MEMORY[0x1E0DEE4D8]);
    atomic_store(result, (unint64_t *)&qword_1EE7AABB8);
  }
  return result;
}

unint64_t sub_1A5873F0C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE7AABC8;
  if (!qword_1EE7AABC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE79B410);
    v2 = sub_1A5873F70();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CB26A8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE7AABC8);
  }
  return result;
}

unint64_t sub_1A5873F70()
{
  unint64_t result;

  result = qword_1EE7990E0;
  if (!qword_1EE7990E0)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CB1AA0], MEMORY[0x1E0DEAC20]);
    atomic_store(result, (unint64_t *)&qword_1EE7990E0);
  }
  return result;
}

unint64_t sub_1A5873FB4()
{
  unint64_t result;

  result = qword_1EE7AABD8;
  if (!qword_1EE7AABD8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DD824, &_s9OSVersionV16InvalidOSVersionVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AABD8);
  }
  return result;
}

char *sub_1A5873FF8@<X0>(char *a1@<X0>, int64_t a2@<X1>, char **a3@<X8>)
{
  return sub_1A5874100(a1, a2, a3);
}

uint64_t sub_1A587400C()
{
  return swift_deallocObject();
}

uint64_t sub_1A587401C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5874040@<X0>(uint64_t a1@<X8>)
{
  return sub_1A586FD98(a1);
}

uint64_t sub_1A5874048()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5874074@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1A586FCC4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1A587407C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAC00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A58740BC()
{
  unint64_t result;

  result = qword_1EE7AAC10;
  if (!qword_1EE7AAC10)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DD7E4, &_s17CommonCryptoErrorVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AAC10);
  }
  return result;
}

char *sub_1A5874100@<X0>(char *a1@<X0>, int64_t a2@<X1>, char **a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *result;
  char *v7;
  char *v8;

  result = sub_1A58718BC(a1, a2, *(char **)(v3 + 16), *(_QWORD *)(v3 + 24));
  if (!v4)
  {
    *a3 = result;
    a3[1] = v7;
    a3[2] = v8;
  }
  return result;
}

uint64_t sub_1A5874130(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t sub_1A5874148(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

ValueMetadata *_s17CommonCryptoErrorVMa()
{
  return &_s17CommonCryptoErrorVN;
}

uint64_t _s18RawResponseMessageVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s18RawResponseMessageVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(_DWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v7;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s18RawResponseMessageVwca(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v4;
  return a1;
}

__n128 __swift_memcpy77_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 61) = *(_OWORD *)(a2 + 61);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s18RawResponseMessageVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  return a1;
}

uint64_t _s18RawResponseMessageVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 77))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s18RawResponseMessageVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 76) = 0;
    *(_DWORD *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 77) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 77) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s18RawResponseMessageVMa()
{
  return &_s18RawResponseMessageVN;
}

ValueMetadata *_s18RawResponseMessageV10SessionKeyVMa()
{
  return &_s18RawResponseMessageV10SessionKeyVN;
}

ValueMetadata *_s9OSVersionV16InvalidOSVersionVMa()
{
  return &_s9OSVersionV16InvalidOSVersionVN;
}

ValueMetadata *_s16ChallengeMessageV20RawTargetInformationV52NTLMChallengeMessageTargetInformationByteCountTooBigVMa()
{
  return &_s16ChallengeMessageV20RawTargetInformationV52NTLMChallengeMessageTargetInformationByteCountTooBigVN;
}

uint64_t __swift_memcpy9_8_6(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *_s5ErrorOMa()
{
  return &_s5ErrorON;
}

ValueMetadata *_s16ChallengeMessageV20RawTargetInformationV51NTLMChallengeMessageTargetInformationBufferTooShortVMa()
{
  return &_s16ChallengeMessageV20RawTargetInformationV51NTLMChallengeMessageTargetInformationBufferTooShortVN;
}

__n128 __swift_memcpy32_8_6(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *_s10CredentialVMa()
{
  return &_s10CredentialVN;
}

_BYTE *__swift_memcpy1_1_7(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s4ModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5874588 + 4 * byte_1A59DD2F0[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A58745BC + 4 * byte_1A59DD2EB[v4]))();
}

uint64_t sub_1A58745BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58745C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58745CCLL);
  return result;
}

uint64_t sub_1A58745D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58745E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A58745E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58745EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4ModeOMa()
{
  return &_s4ModeON;
}

ValueMetadata *_s15ServerChallengeVMa()
{
  return &_s15ServerChallengeVN;
}

ValueMetadata *_s16ChallengeMessageV20RawTargetInformationVMa()
{
  return &_s16ChallengeMessageV20RawTargetInformationVN;
}

uint64_t _s16ChallengeMessageV17TargetInformationOwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A587465C(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1A5874130);
}

uint64_t _s16ChallengeMessageV17TargetInformationOwxx(uint64_t a1)
{
  return sub_1A5874644(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1A5874644(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A587465C(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  return a1;
}

uint64_t *_s16ChallengeMessageV17TargetInformationOwca(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A58746B8(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1A5874130, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A5874644);
}

uint64_t *sub_1A58746B8(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  v12 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *_s16ChallengeMessageV17TargetInformationOwta(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5874724(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A5874644);
}

uint64_t *sub_1A5874724(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t _s16ChallengeMessageV17TargetInformationOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s16ChallengeMessageV17TargetInformationOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A58747F4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 5u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_1A587480C(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(_QWORD *)result = a2 - 6;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 6;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *_s16ChallengeMessageV17TargetInformationOMa()
{
  return &_s16ChallengeMessageV17TargetInformationON;
}

unint64_t sub_1A5874838()
{
  unint64_t result;

  result = qword_1EE7AAC20;
  if (!qword_1EE7AAC20)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DD76C, &_s4ModeON);
    atomic_store(result, (unint64_t *)&qword_1EE7AAC20);
  }
  return result;
}

ValueMetadata *_s18RawResponseMessageV12NTLMResponseVMa()
{
  return &_s18RawResponseMessageV12NTLMResponseVN;
}

ValueMetadata *_s18RawResponseMessageV10LMResponseVMa()
{
  return &_s18RawResponseMessageV10LMResponseVN;
}

uint64_t _s14descr1E4F16AF9C4NTLMVwxx(uint64_t a1)
{
  uint64_t result;
  int v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1A585B504(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112));
  if (*(_QWORD *)(a1 + 144) >= 3uLL)
  {
    v3 = *(unsigned __int8 *)(a1 + 136);
    if (v3 != 255)
      sub_1A5687BD4(*(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s14descr1E4F16AF9C4NTLMVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  unint64_t v15;
  __int128 v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(_QWORD *)(a2 + 104);
  v24 = *(_QWORD *)(a2 + 96);
  v25 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 112);
  v23 = *(_QWORD *)(a2 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A585B39C(v25, v6, v7, v8, v9, v10, v23, v24, v11, v12);
  *(_QWORD *)(a1 + 40) = v25;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v23;
  *(_QWORD *)(a1 + 96) = v24;
  *(_QWORD *)(a1 + 104) = v11;
  *(_QWORD *)(a1 + 112) = v12;
  v13 = (_OWORD *)(a1 + 120);
  v14 = (_OWORD *)(a2 + 120);
  v15 = *(_QWORD *)(a2 + 144);
  if (v15 >= 3)
  {
    v17 = *(unsigned __int8 *)(a2 + 136);
    if (v17 == 255)
    {
      *v13 = *v14;
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    }
    else
    {
      v18 = *(_QWORD *)(a2 + 120);
      v19 = *(_QWORD *)(a2 + 128);
      sub_1A5688348(v18, v19, *(_BYTE *)(a2 + 136));
      *(_QWORD *)(a1 + 120) = v18;
      *(_QWORD *)(a1 + 128) = v19;
      *(_BYTE *)(a1 + 136) = v17;
    }
    v20 = *(_QWORD *)(a2 + 152);
    v21 = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 144) = v15;
    *(_QWORD *)(a1 + 152) = v20;
    *(_QWORD *)(a1 + 160) = v21;
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v16 = *(_OWORD *)(a2 + 136);
    *v13 = *v14;
    *(_OWORD *)(a1 + 136) = v16;
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  }
  return a1;
}

uint64_t _s14descr1E4F16AF9C4NTLMVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 *v22;
  __int128 *v23;
  unint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v46;
  unint64_t v47;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a2 + 96);
  v46 = *(_QWORD *)(a2 + 104);
  v47 = *(_QWORD *)(a2 + 112);
  sub_1A585B39C(v4, v5, v6, v7, v8, v9, v10, v11, v46, v47);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_QWORD *)(a1 + 72);
  v17 = *(_QWORD *)(a1 + 80);
  v18 = *(_QWORD *)(a1 + 88);
  v19 = *(_QWORD *)(a1 + 96);
  v20 = *(_QWORD *)(a1 + 104);
  v21 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v11;
  *(_QWORD *)(a1 + 104) = v46;
  *(_QWORD *)(a1 + 112) = v47;
  sub_1A585B504(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  v22 = (__int128 *)(a1 + 120);
  v23 = (__int128 *)(a2 + 120);
  v24 = *(_QWORD *)(a2 + 144);
  if (*(_QWORD *)(a1 + 144) >= 3uLL)
  {
    if (v24 >= 3)
    {
      v34 = *(unsigned __int8 *)(a2 + 136);
      if (*(unsigned __int8 *)(a1 + 136) == 255)
      {
        if (v34 == 255)
        {
          v44 = *v23;
          *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
          *v22 = v44;
        }
        else
        {
          v41 = *(_QWORD *)(a2 + 120);
          v42 = *(_QWORD *)(a2 + 128);
          sub_1A5688348(v41, v42, *(_BYTE *)(a2 + 136));
          *(_QWORD *)(a1 + 120) = v41;
          *(_QWORD *)(a1 + 128) = v42;
          *(_BYTE *)(a1 + 136) = v34;
        }
      }
      else if (v34 == 255)
      {
        sub_1A5870D78(a1 + 120);
        v43 = *(_BYTE *)(a2 + 136);
        *v22 = *v23;
        *(_BYTE *)(a1 + 136) = v43;
      }
      else
      {
        v35 = *(_QWORD *)(a2 + 120);
        v36 = *(_QWORD *)(a2 + 128);
        sub_1A5688348(v35, v36, *(_BYTE *)(a2 + 136));
        v37 = *(_QWORD *)(a1 + 120);
        v38 = *(_QWORD *)(a1 + 128);
        *(_QWORD *)(a1 + 120) = v35;
        *(_QWORD *)(a1 + 128) = v36;
        v39 = *(_BYTE *)(a1 + 136);
        *(_BYTE *)(a1 + 136) = v34;
        sub_1A5687BD4(v37, v38, v39);
      }
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    }
    else
    {
      sub_1A5874D80(a1 + 120);
      v29 = *(_OWORD *)(a2 + 136);
      v28 = *(_OWORD *)(a2 + 152);
      v30 = *v23;
      *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 136) = v29;
      *(_OWORD *)(a1 + 152) = v28;
      *v22 = v30;
    }
  }
  else if (v24 >= 3)
  {
    v31 = *(unsigned __int8 *)(a2 + 136);
    if (v31 == 255)
    {
      v40 = *v23;
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *v22 = v40;
    }
    else
    {
      v32 = *(_QWORD *)(a2 + 120);
      v33 = *(_QWORD *)(a2 + 128);
      sub_1A5688348(v32, v33, *(_BYTE *)(a2 + 136));
      *(_QWORD *)(a1 + 120) = v32;
      *(_QWORD *)(a1 + 128) = v33;
      *(_BYTE *)(a1 + 136) = v31;
    }
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v25 = *v23;
    v26 = *(_OWORD *)(a2 + 136);
    v27 = *(_OWORD *)(a2 + 152);
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 136) = v26;
    *(_OWORD *)(a1 + 152) = v27;
    *v22 = v25;
  }
  return a1;
}

uint64_t sub_1A5874D80(uint64_t a1)
{
  _s16ChallengeMessageVwxx(a1);
  return a1;
}

__n128 __swift_memcpy172_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_OWORD *)(a1 + 156) = *(__int128 *)((char *)a2 + 156);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t _s14descr1E4F16AF9C4NTLMVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  unint64_t v18;
  __int128 v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(a1 + 64);
  v10 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 80);
  v12 = *(_QWORD *)(a1 + 88);
  v13 = *(_QWORD *)(a1 + 96);
  v14 = *(_QWORD *)(a1 + 104);
  v15 = *(_QWORD *)(a1 + 112);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  sub_1A585B504(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  v16 = (_OWORD *)(a1 + 120);
  v17 = (_OWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 144) < 3uLL)
    goto LABEL_4;
  v18 = *(_QWORD *)(a2 + 144);
  if (v18 >= 3)
  {
    v20 = *(unsigned __int8 *)(a1 + 136);
    if (v20 != 255)
    {
      v21 = *(unsigned __int8 *)(a2 + 136);
      if (v21 != 255)
      {
        v22 = *(_QWORD *)(a1 + 120);
        v23 = *(_QWORD *)(a1 + 128);
        *(_OWORD *)(a1 + 120) = *v17;
        *(_BYTE *)(a1 + 136) = v21;
        sub_1A5687BD4(v22, v23, v20);
LABEL_10:
        *(_QWORD *)(a1 + 144) = v18;
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
        swift_bridgeObjectRelease();
        *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
        return a1;
      }
      sub_1A5870D78(a1 + 120);
    }
    *v16 = *v17;
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    goto LABEL_10;
  }
  sub_1A5874D80(a1 + 120);
LABEL_4:
  v19 = *(_OWORD *)(a2 + 136);
  *v16 = *v17;
  *(_OWORD *)(a1 + 136) = v19;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  return a1;
}

uint64_t _s14descr1E4F16AF9C4NTLMVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 172))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14descr1E4F16AF9C4NTLMVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 168) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 172) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 172) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s14descr1E4F16AF9C4NTLMVMa()
{
  return &_s14descr1E4F16AF9C4NTLMVN;
}

uint64_t sub_1A587501C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unsigned __int8 v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  char v32;

  v2 = *(_QWORD *)(v0 + 144);
  if ((unint64_t)(v2 - 1) < 2)
    return 0;
  v3 = (_QWORD *)(v0 + 120);
  v4 = (_QWORD *)(v0 + 152);
  if (v2)
  {
    v7 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 152);
    v9 = *(char **)(v0 + 160);
    *v3 = 0;
    *(_QWORD *)(v0 + 128) = 0;
    v10 = *(_BYTE *)(v0 + 136);
    *(_QWORD *)(v0 + 136) = 0;
    *(_QWORD *)(v0 + 144) = 2;
    *v4 = 0;
    *(_QWORD *)(v0 + 160) = 0;
    *(_DWORD *)(v0 + 168) = 0;
    sub_1A5872B80(*(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v2, v8, v9, &v12, *(_BYTE *)v0);
    sub_1A58600C8(v7, v6, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v1)
    {
      v23 = v15;
      v24 = v16;
      v25 = v13;
      v26 = v14;
      v27 = v12;
      v28 = 0;
      v29 = 0xE000000000000000;
      v30 = 0;
      v31 = v17 & 0x80201;
      v32 = 0;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v0 = sub_1A586DE90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A58600DC((uint64_t)&v12);
    }
  }
  else
  {
    *v3 = 0;
    *(_QWORD *)(v0 + 128) = 0;
    *(_QWORD *)(v0 + 136) = 0;
    *(_QWORD *)(v0 + 144) = 1;
    *v4 = 0;
    *(_QWORD *)(v0 + 160) = 0;
    *(_DWORD *)(v0 + 168) = 0;
    v5 = *(_BYTE *)v0;
    v18 = 0;
    v19 = 0xE000000000000000;
    v20 = 0;
    v21 = 0xE000000000000000;
    v22 = (v5 & 1) == 0;
    return sub_1A586D170();
  }
  return v0;
}

void sub_1A5875200(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  os_log_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  int v44;
  char *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  int v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t v89;
  os_log_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t, uint64_t);
  char *v95;
  void (*v96)(char *, uint64_t);
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103[4];
  int v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE v110[14];
  _BYTE v111[2];
  unsigned __int16 v112;
  char v113;

  v5 = v3;
  v101 = a3;
  v99 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v99);
  v100 = (uint64_t)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v98 = (uint64_t)&v86 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v86 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v86 - v15;
  v17 = sub_1A594A764();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v86 - v25;
  if (*(_QWORD *)(v5 + 144) == 1)
  {
    v95 = v24;
    v96 = v23;
    v97 = v22;
    sub_1A54E42B4(a1, a2);
    sub_1A587302C(a1, a2);
    if (!v4)
    {
      v27 = v101;
      v94 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
      v94(v26, v101, v17);
      sub_1A585F8E4(v27, (uint64_t)v16);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A5876110((uint64_t)&v104);
      sub_1A5876110((uint64_t)&v104);
      sub_1A5876110((uint64_t)&v104);
      sub_1A5876110((uint64_t)&v104);
      v28 = sub_1A594A74C();
      v29 = sub_1A594C000();
      v30 = v29;
      v31 = os_log_type_enabled(v28, v29);
      v92 = v5;
      v93 = v17;
      if (v31)
      {
        v32 = swift_slowAlloc();
        v90 = v28;
        v33 = v32;
        v91 = swift_slowAlloc();
        v103[0] = v91;
        *(_DWORD *)v33 = 68158722;
        LODWORD(v102) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v33 + 8) = 256;
        v34 = &v16[*(int *)(v99 + 20)];
        LOBYTE(v102) = *v34;
        sub_1A594C3CC();
        *(_WORD *)(v33 + 11) = 2082;
        LODWORD(v89) = v30;
        v35 = ConnectionID.debugDescription.getter(*((unsigned int *)v34 + 1));
        v102 = sub_1A589167C(v35, v36, v103);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A585FAB0((uint64_t)v16);
        *(_WORD *)(v33 + 21) = 2080;
        v37 = v106;
        v38 = v107;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v102 = sub_1A589167C(v37, v38, v103);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5876154((uint64_t)&v104);
        sub_1A5876154((uint64_t)&v104);
        *(_WORD *)(v33 + 31) = 2082;
        LODWORD(v102) = v104;
        v39 = sub_1A594B4A8();
        v102 = sub_1A589167C(v39, v40, v103);
        sub_1A594C3CC();
        v17 = v93;
        swift_bridgeObjectRelease();
        sub_1A5876154((uint64_t)&v104);
        sub_1A5876154((uint64_t)&v104);
        v41 = v90;
        _os_log_impl(&dword_1A4F90000, v90, (os_log_type_t)v89, "[%.*hhx-%{public}s] NTLM: Received challenge with target: '%s', flags: {%{public}s}", (uint8_t *)v33, 0x29u);
        v42 = v91;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v42, -1, -1);
        MEMORY[0x1A85B1964](v33, -1, -1);

      }
      else
      {
        sub_1A585FAB0((uint64_t)v16);
        sub_1A5876154((uint64_t)&v104);
        sub_1A5876154((uint64_t)&v104);
        sub_1A5876154((uint64_t)&v104);
        sub_1A5876154((uint64_t)&v104);

      }
      v43 = *(void (**)(char *, uint64_t))(v18 + 8);
      v43(v26, v17);
      sub_1A587619C((uint64_t)&v109, (uint64_t)v110);
      sub_1A587619C((uint64_t)v110, (uint64_t)v111);
      if ((v113 & 1) == 0)
      {
        LODWORD(v90) = v111[0];
        LODWORD(v91) = v111[1];
        v44 = v112;
        v45 = v95;
        v46 = v101;
        v94(v95, v101, v17);
        sub_1A585F8E4(v46, (uint64_t)v13);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v47 = sub_1A594A74C();
        v48 = sub_1A594C000();
        v49 = v48;
        if (os_log_type_enabled(v47, v48))
        {
          v50 = swift_slowAlloc();
          v89 = swift_slowAlloc();
          v103[0] = v89;
          *(_DWORD *)v50 = 68158978;
          LODWORD(v102) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v50 + 8) = 256;
          v51 = &v13[*(int *)(v99 + 20)];
          LOBYTE(v102) = *v51;
          v87 = v44;
          sub_1A594C3CC();
          *(_WORD *)(v50 + 11) = 2082;
          v88 = v49;
          v52 = ConnectionID.debugDescription.getter(*((unsigned int *)v51 + 1));
          v102 = sub_1A589167C(v52, v53, v103);
          sub_1A594C3CC();
          v17 = v93;
          swift_bridgeObjectRelease();
          sub_1A585FAB0((uint64_t)v13);
          *(_WORD *)(v50 + 21) = 256;
          LOBYTE(v102) = (_BYTE)v90;
          sub_1A594C3CC();
          *(_WORD *)(v50 + 24) = 256;
          LOBYTE(v102) = v91;
          sub_1A594C3CC();
          *(_WORD *)(v50 + 27) = 512;
          LOWORD(v102) = v87;
          sub_1A594C3CC();
          _os_log_impl(&dword_1A4F90000, v47, (os_log_type_t)v88, "[%.*hhx-%{public}s] NTLM: Received challenge with OS version %hhu.%hhu.%hu", (uint8_t *)v50, 0x1Fu);
          v54 = v89;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v54, -1, -1);
          MEMORY[0x1A85B1964](v50, -1, -1);

          v43 = *(void (**)(char *, uint64_t))(v18 + 8);
        }
        else
        {
          sub_1A585FAB0((uint64_t)v13);

        }
        v43(v45, v17);
      }
      v55 = v97;
      v56 = v100;
      v57 = v98;
      v58 = v104;
      if ((v104 & 0x200) != 0)
      {
        v61 = (char *)v96;
        v62 = v101;
        v94((char *)v96, v101, v17);
        sub_1A585F8E4(v62, v57);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v63 = sub_1A594A74C();
        v64 = sub_1A594C000();
        if (os_log_type_enabled(v63, v64))
        {
          v65 = v57;
          v66 = swift_slowAlloc();
          v67 = swift_slowAlloc();
          v96 = v43;
          v68 = v67;
          v103[0] = v67;
          *(_DWORD *)v66 = 68158210;
          LODWORD(v102) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v66 + 8) = 256;
          v69 = v65 + *(int *)(v99 + 20);
          LOBYTE(v102) = *(_BYTE *)v69;
          sub_1A594C3CC();
          *(_WORD *)(v66 + 11) = 2082;
          v70 = ConnectionID.debugDescription.getter(*(unsigned int *)(v69 + 4));
          v102 = sub_1A589167C(v70, v71, v103);
          sub_1A594C3CC();
          v17 = v93;
          swift_bridgeObjectRelease();
          sub_1A585FAB0(v98);
          _os_log_impl(&dword_1A4F90000, v63, v64, "[%.*hhx-%{public}s] NTLM: NTLM Authentication flag set", (uint8_t *)v66, 0x15u);
          swift_arrayDestroy();
          v72 = v68;
          v43 = v96;
          MEMORY[0x1A85B1964](v72, -1, -1);
          v56 = v100;
          MEMORY[0x1A85B1964](v66, -1, -1);
        }
        else
        {
          sub_1A585FAB0(v57);
        }

        v43(v61, v17);
        v55 = v97;
        if ((v58 & 0x80000) == 0)
        {
LABEL_15:
          v59 = v108;
          if (v108)
          {
LABEL_16:
            v60 = *(_QWORD *)(v59 + 16);
            v103[0] = 0;
            v103[1] = v60;
            v103[2] = v59 + 32;
            v103[3] = v59 + 32 + v60;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v73 = sub_1A58732B8(v103);
            swift_bridgeObjectRelease();
LABEL_26:
            v83 = v92;
            v84 = (_QWORD *)(v92 + 120);
            v85 = v105;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A5876154((uint64_t)&v104);
            sub_1A58761E4(*(_QWORD *)(v83 + 120), *(_QWORD *)(v83 + 128), *(_QWORD *)(v83 + 136), *(_QWORD *)(v83 + 144));
            *v84 = 0;
            *(_QWORD *)(v83 + 128) = 0;
            *(_QWORD *)(v83 + 136) = 255;
            *(_QWORD *)(v83 + 144) = v73;
            *(_QWORD *)(v83 + 152) = v59;
            *(_QWORD *)(v83 + 160) = v85;
            *(_DWORD *)(v83 + 168) = v58;
            return;
          }
LABEL_25:
          v73 = MEMORY[0x1E0DEE9D8];
          goto LABEL_26;
        }
      }
      else if ((v104 & 0x80000) == 0)
      {
        goto LABEL_15;
      }
      v74 = v101;
      v94(v55, v101, v17);
      sub_1A585F8E4(v74, v56);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v75 = sub_1A594A74C();
      v76 = sub_1A594C030();
      if (os_log_type_enabled(v75, v76))
      {
        v77 = swift_slowAlloc();
        v78 = swift_slowAlloc();
        v96 = v43;
        v79 = v78;
        v103[0] = v78;
        *(_DWORD *)v77 = 68158210;
        LODWORD(v102) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v77 + 8) = 256;
        v80 = v56 + *(int *)(v99 + 20);
        LOBYTE(v102) = *(_BYTE *)v80;
        sub_1A594C3CC();
        *(_WORD *)(v77 + 11) = 2082;
        v81 = ConnectionID.debugDescription.getter(*(unsigned int *)(v80 + 4));
        v102 = sub_1A589167C(v81, v82, v103);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A585FAB0(v100);
        _os_log_impl(&dword_1A4F90000, v75, v76, "[%.*hhx-%{public}s] NTLM: NTLM2 Session Response flag set", (uint8_t *)v77, 0x15u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v79, -1, -1);
        MEMORY[0x1A85B1964](v77, -1, -1);

        v96(v55, v93);
        v59 = v108;
        if (v108)
          goto LABEL_16;
      }
      else
      {
        sub_1A585FAB0(v56);

        v43(v55, v17);
        v59 = v108;
        if (v108)
          goto LABEL_16;
      }
      goto LABEL_25;
    }
  }
  else
  {
    sub_1A5875EFC();
    swift_allocError();
    swift_willThrow();
  }
}

BOOL sub_1A5875D80(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  unint64_t v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  __int128 v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;

  v2 = *((_QWORD *)a1 + 3);
  v3 = *((_QWORD *)a2 + 3);
  if (v2)
  {
    if (v2 == 1)
    {
      if (v3 != 1)
        return 0;
    }
    else
    {
      if (v2 != 2)
      {
        v5 = *a2;
        v6 = *((_QWORD *)a2 + 2);
        v7 = *((_QWORD *)a2 + 4);
        v8 = *((_QWORD *)a2 + 5);
        v9 = *((_DWORD *)a2 + 12);
        v10 = *((_DWORD *)a1 + 12);
        v12 = *((_QWORD *)a1 + 4);
        v11 = *((_QWORD *)a1 + 5);
        v13 = *((_QWORD *)a1 + 2);
        v15 = *a1;
        v16 = v13;
        v17 = v2;
        v18 = v12;
        v19 = v11;
        v20 = v10;
        if (v3 >= 3)
        {
          v21 = v5;
          v22 = v6;
          v23 = v3;
          v24 = v7;
          v25 = v8;
          v26 = v9;
          return sub_1A5871CD0((uint64_t *)&v15, (uint64_t *)&v21);
        }
        return 0;
      }
      if (v3 != 2)
        return 0;
    }
  }
  else if (v3)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_1A5875E40(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[9];
  _OWORD v14[2];
  _OWORD v15[9];
  _OWORD v16[2];

  v2 = a1[9];
  v13[8] = a1[8];
  v14[0] = v2;
  *(_OWORD *)((char *)v14 + 12) = *(_OWORD *)((char *)a1 + 156);
  v3 = a1[5];
  v13[4] = a1[4];
  v13[5] = v3;
  v4 = a1[7];
  v13[6] = a1[6];
  v13[7] = v4;
  v5 = a1[1];
  v13[0] = *a1;
  v13[1] = v5;
  v6 = a1[3];
  v13[2] = a1[2];
  v13[3] = v6;
  v7 = a2[9];
  v15[8] = a2[8];
  v16[0] = v7;
  *(_OWORD *)((char *)v16 + 12) = *(_OWORD *)((char *)a2 + 156);
  v8 = a2[5];
  v15[4] = a2[4];
  v15[5] = v8;
  v9 = a2[7];
  v15[6] = a2[6];
  v15[7] = v9;
  v10 = a2[1];
  v15[0] = *a2;
  v15[1] = v10;
  v11 = a2[3];
  v15[2] = a2[2];
  v15[3] = v11;
  return sub_1A5875F40((unsigned __int8 *)v13, (unsigned __int8 *)v15) & 1;
}

uint64_t sub_1A5875ED4()
{
  return sub_1A587501C();
}

void sub_1A5875EE8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1A5875200(a1, a2, a3);
}

unint64_t sub_1A5875EFC()
{
  unint64_t result;

  result = qword_1EE7AAC28;
  if (!qword_1EE7AAC28)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DDA38, &_s14descr1E4F16AF9C4NTLMV24InvalidStateForChallengeVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AAC28);
  }
  return result;
}

uint64_t sub_1A5875F40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  uint64_t result;
  BOOL v11;
  char v12;
  char v13;
  __int128 v14[3];
  __int128 v15[3];
  _BYTE v16[80];
  _BYTE v17[80];
  _OWORD v18[3];
  int v19;
  _OWORD v20[3];
  int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  int v29;

  if (*a1 != *a2)
    return 0;
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_QWORD *)a1 + 4);
  v6 = *((_QWORD *)a2 + 3);
  v7 = *((_QWORD *)a2 + 4);
  v8 = *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && *((_QWORD *)a1 + 2) == *((_QWORD *)a2 + 2);
  if (v8 || (v9 = sub_1A594CD38(), result = 0, (v9 & 1) != 0))
  {
    v11 = v4 == v6 && v5 == v7;
    if (v11 || (v12 = sub_1A594CD38(), result = 0, (v12 & 1) != 0))
    {
      sub_1A585BA78((uint64_t)(a1 + 40), (uint64_t)v17);
      sub_1A585BA78((uint64_t)(a2 + 40), (uint64_t)v16);
      sub_1A586B68C((uint64_t)v17);
      if ((v13 & 1) == 0)
        return 0;
      sub_1A5876234((__int128 *)(a1 + 120), (uint64_t)v15);
      sub_1A5876234((__int128 *)(a2 + 120), (uint64_t)v14);
      sub_1A5876234(v15, (uint64_t)&v22);
      if (*((_QWORD *)&v23 + 1) == 2)
      {
        sub_1A5876234(v14, (uint64_t)&v26);
        if (*((_QWORD *)&v27 + 1) != 2)
          return 0;
      }
      else
      {
        if (*((_QWORD *)&v23 + 1) != 1)
        {
          if (*((_QWORD *)&v23 + 1))
          {
            v18[0] = v22;
            v18[1] = v23;
            v18[2] = v24;
            v19 = v25;
            sub_1A5876234(v14, (uint64_t)&v26);
            if (*((_QWORD *)&v27 + 1) >= 3uLL)
            {
              v20[0] = v26;
              v20[1] = v27;
              v20[2] = v28;
              v21 = v29;
              if (sub_1A5871CD0((uint64_t *)v18, (uint64_t *)v20))
                return 1;
            }
          }
          else
          {
            sub_1A5876234(v14, (uint64_t)&v26);
            if (!*((_QWORD *)&v27 + 1))
              return 1;
          }
          return 0;
        }
        sub_1A5876234(v14, (uint64_t)&v26);
        if (*((_QWORD *)&v27 + 1) != 1)
          return 0;
      }
      return 1;
    }
  }
  return result;
}

uint64_t sub_1A5876110(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A5876154(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A587619C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7AAC30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A58761E4(uint64_t result, uint64_t a2, unsigned __int8 a3, unint64_t a4)
{
  if (a4 >= 3)
  {
    sub_1A58600C8(result, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A5876234(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_DWORD *)(a2 + 48) = *((_DWORD *)a1 + 12);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

ValueMetadata *_s14descr1E4F16AF9C4NTLMV24InvalidStateForChallengeVMa()
{
  return &_s14descr1E4F16AF9C4NTLMV24InvalidStateForChallengeVN;
}

uint64_t _s14descr1E4F16AF9C4NTLMV5StateOwxx(uint64_t result)
{
  int v1;

  if (*(_QWORD *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    v1 = *(unsigned __int8 *)(result + 16);
    if (v1 != 255)
      sub_1A5687BD4(*(_QWORD *)result, *(_QWORD *)(result + 8), v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s14descr1E4F16AF9C4NTLMV5StateOwcp(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[3];
  if (v4 < 0xFFFFFFFF)
  {
    v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  }
  else
  {
    v5 = *((unsigned __int8 *)a2 + 16);
    if (v5 == 255)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    }
    else
    {
      v6 = *a2;
      v7 = a2[1];
      sub_1A5688348(*a2, v7, *((_BYTE *)a2 + 16));
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v7;
      *(_BYTE *)(a1 + 16) = v5;
    }
    v9 = a2[4];
    v10 = a2[5];
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

uint64_t _s14descr1E4F16AF9C4NTLMV5StateOwca(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  char v21;
  __int128 v22;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
  {
    v5 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
    {
      v6 = *((unsigned __int8 *)a2 + 16);
      if (v5 == 255)
      {
        if (v6 == 255)
        {
          v22 = *a2;
          *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
          *(_OWORD *)a1 = v22;
        }
        else
        {
          v18 = *(_QWORD *)a2;
          v19 = *((_QWORD *)a2 + 1);
          sub_1A5688348(*(_QWORD *)a2, v19, *((_BYTE *)a2 + 16));
          *(_QWORD *)a1 = v18;
          *(_QWORD *)(a1 + 8) = v19;
          *(_BYTE *)(a1 + 16) = v6;
        }
      }
      else if (v6 == 255)
      {
        sub_1A5870D78(a1);
        v21 = *((_BYTE *)a2 + 16);
        *(_OWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 16) = v21;
      }
      else
      {
        v7 = *(_QWORD *)a2;
        v8 = *((_QWORD *)a2 + 1);
        sub_1A5688348(*(_QWORD *)a2, v8, *((_BYTE *)a2 + 16));
        v9 = *(_QWORD *)a1;
        v10 = *(_QWORD *)(a1 + 8);
        *(_QWORD *)a1 = v7;
        *(_QWORD *)(a1 + 8) = v8;
        v11 = *(_BYTE *)(a1 + 16);
        *(_BYTE *)(a1 + 16) = v6;
        sub_1A5687BD4(v9, v10, v11);
      }
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
      return a1;
    }
    if (v5 != 255)
      sub_1A5687BD4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    v15 = *a2;
    v16 = a2[1];
    v17 = a2[2];
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    *(_OWORD *)(a1 + 16) = v16;
    *(_OWORD *)(a1 + 32) = v17;
    *(_OWORD *)a1 = v15;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
    goto LABEL_12;
  v12 = *((unsigned __int8 *)a2 + 16);
  if (v12 == 255)
  {
    v20 = *a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)a1 = v20;
  }
  else
  {
    v13 = *(_QWORD *)a2;
    v14 = *((_QWORD *)a2 + 1);
    sub_1A5688348(*(_QWORD *)a2, v14, *((_BYTE *)a2 + 16));
    *(_QWORD *)a1 = v13;
    *(_QWORD *)(a1 + 8) = v14;
    *(_BYTE *)(a1 + 16) = v12;
  }
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s14descr1E4F16AF9C4NTLMV5StateOwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
LABEL_9:
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_13;
  }
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 != 255)
      sub_1A5687BD4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v5 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  }
  else
  {
    v6 = *(unsigned __int8 *)(a2 + 16);
    if (v6 == 255)
    {
      sub_1A5870D78(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    }
    else
    {
      v7 = *(_QWORD *)a1;
      v8 = *(_QWORD *)(a1 + 8);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 16) = v6;
      sub_1A5687BD4(v7, v8, v5);
    }
  }
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
LABEL_13:
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

uint64_t _s14descr1E4F16AF9C4NTLMV5StateOwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 52))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t _s14descr1E4F16AF9C4NTLMV5StateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_DWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 52) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 52) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 2;
  }
  return result;
}

uint64_t sub_1A5876760(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1A5876778(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 40) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_DWORD *)(a1 + 48) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *_s14descr1E4F16AF9C4NTLMV5StateOMa()
{
  return &_s14descr1E4F16AF9C4NTLMV5StateON;
}

int *sub_1A58767BC(int *result, uint64_t a2, uint64_t *a3, int *a4, int *a5, int *a6, int *a7)
{
  uint64_t v7;
  int *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;

  v7 = *a3;
  if (*a3 != a3[1])
  {
    v13 = result;
    while (1)
    {
      v14 = a3[2];
      v15 = (int *)(v14 + 4 * v7);
      if (!v14)
        v15 = 0;
      *v13 = *v15;
      v13[1] = v15[1];
      v13[2] = v15[2];
      v13[3] = v15[3];
      v13[4] = v15[4];
      v13[5] = v15[5];
      v13[6] = v15[6];
      v13[7] = v15[7];
      v13[8] = v15[8];
      v13[9] = v15[9];
      v13[10] = v15[10];
      v13[11] = v15[11];
      v13[12] = v15[12];
      v13[13] = v15[13];
      v13[14] = v15[14];
      v13[15] = v15[15];
      result = sub_1A58768EC(a4, a5, a6, a7, v13);
      v16 = a3[1];
      v7 = *a3 + 16;
      if ((unint64_t)(v16 - *a3) < 0x10)
        v7 = a3[1];
      if (v16 < v7)
        break;
      *a3 = v7;
      if (v7 == v16)
        return result;
    }
    __break(1u);
  }
  return result;
}

int *sub_1A58768EC(int *result, int *a2, int *a3, int *a4, int *a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;

  v5 = *a2;
  v6 = *a3;
  v8 = *a5;
  v72 = *a4;
  v7 = *a4;
  v73 = *result;
  HIDWORD(v10) = *a5 + *result + (*a3 & *a2 | *a4 & ~*a2);
  LODWORD(v10) = HIDWORD(v10);
  v9 = v10 >> 29;
  *result = v9;
  v11 = a5[1];
  HIDWORD(v10) = v11 + v7 + (v5 & v9 | v6 & ~v9);
  LODWORD(v10) = HIDWORD(v10);
  v12 = v10 >> 25;
  *a4 = v12;
  v13 = a5[2];
  HIDWORD(v10) = v13 + v6 + (v9 & v12 | v5 & ~v12);
  LODWORD(v10) = HIDWORD(v10);
  v14 = v10 >> 21;
  *a3 = v14;
  v15 = a5[3];
  HIDWORD(v10) = v15 + v5 + (v12 & v14 | v9 & ~v14);
  LODWORD(v10) = HIDWORD(v10);
  v16 = v10 >> 13;
  *a2 = v16;
  v17 = a5[4];
  HIDWORD(v10) = v17 + v9 + (v14 & v16 | v12 & ~v16);
  LODWORD(v10) = HIDWORD(v10);
  v18 = v10 >> 29;
  *result = v18;
  v19 = a5[5];
  HIDWORD(v10) = v12 + v19 + (v16 & v18 | v14 & ~v18);
  LODWORD(v10) = HIDWORD(v10);
  v20 = v10 >> 25;
  *a4 = v20;
  v21 = a5[6];
  HIDWORD(v10) = v14 + v21 + (v18 & v20 | v16 & ~v20);
  LODWORD(v10) = HIDWORD(v10);
  v22 = v10 >> 21;
  *a3 = v22;
  v23 = a5[7];
  HIDWORD(v10) = v16 + v23 + (v20 & v22 | v18 & ~v22);
  LODWORD(v10) = HIDWORD(v10);
  v24 = v10 >> 13;
  *a2 = v24;
  v25 = a5[8];
  HIDWORD(v10) = v18 + v25 + (v22 & v24 | v20 & ~v24);
  LODWORD(v10) = HIDWORD(v10);
  v26 = v10 >> 29;
  *result = v26;
  v27 = a5[9];
  HIDWORD(v10) = v20 + v27 + (v24 & v26 | v22 & ~v26);
  LODWORD(v10) = HIDWORD(v10);
  v28 = v10 >> 25;
  *a4 = v28;
  v29 = a5[10];
  HIDWORD(v10) = v22 + v29 + (v26 & v28 | v24 & ~v28);
  LODWORD(v10) = HIDWORD(v10);
  v30 = v10 >> 21;
  *a3 = v30;
  v31 = a5[11];
  HIDWORD(v10) = v24 + v31 + (v28 & v30 | v26 & ~v30);
  LODWORD(v10) = HIDWORD(v10);
  v32 = v10 >> 13;
  *a2 = v32;
  v33 = a5[12];
  HIDWORD(v10) = v26 + v33 + (v30 & v32 | v28 & ~v32);
  LODWORD(v10) = HIDWORD(v10);
  v34 = v10 >> 29;
  *result = v34;
  v35 = a5[13];
  HIDWORD(v10) = v28 + v35 + (v32 & v34 | v30 & ~v34);
  LODWORD(v10) = HIDWORD(v10);
  v36 = v10 >> 25;
  *a4 = v36;
  v37 = a5[14];
  HIDWORD(v10) = v30 + v37 + (v34 & v36 | v32 & ~v36);
  LODWORD(v10) = HIDWORD(v10);
  v38 = v10 >> 21;
  *a3 = v38;
  v39 = a5[15];
  HIDWORD(v10) = v32 + v39 + (v38 & v36 | v34 & ~v38);
  LODWORD(v10) = HIDWORD(v10);
  v40 = v10 >> 13;
  HIDWORD(v10) = v8 + v34 + 1518500249 + (v40 & (v38 | v36) | v38 & v36);
  LODWORD(v10) = HIDWORD(v10);
  v41 = v10 >> 29;
  HIDWORD(v10) = v17 + v36 + 1518500249 + (v41 & (v40 | v38) | v40 & v38);
  LODWORD(v10) = HIDWORD(v10);
  v42 = v10 >> 27;
  HIDWORD(v10) = v25 + v38 + 1518500249 + (v42 & (v41 | v40) | v41 & v40);
  LODWORD(v10) = HIDWORD(v10);
  v43 = v10 >> 23;
  HIDWORD(v10) = v33 + v40 + 1518500249 + (v43 & (v42 | v41) | v42 & v41);
  LODWORD(v10) = HIDWORD(v10);
  v44 = v10 >> 19;
  HIDWORD(v10) = v11 + v41 + 1518500249 + (v44 & (v43 | v42) | v43 & v42);
  LODWORD(v10) = HIDWORD(v10);
  v45 = v10 >> 29;
  HIDWORD(v10) = v19 + v42 + 1518500249 + (v45 & (v44 | v43) | v44 & v43);
  LODWORD(v10) = HIDWORD(v10);
  v46 = v10 >> 27;
  HIDWORD(v10) = v27 + v43 + 1518500249 + (v46 & (v45 | v44) | v45 & v44);
  LODWORD(v10) = HIDWORD(v10);
  v47 = v10 >> 23;
  HIDWORD(v10) = v35 + v44 + 1518500249 + (v47 & (v46 | v45) | v46 & v45);
  LODWORD(v10) = HIDWORD(v10);
  v48 = v10 >> 19;
  HIDWORD(v10) = v13 + v45 + 1518500249 + (v48 & (v47 | v46) | v47 & v46);
  LODWORD(v10) = HIDWORD(v10);
  v49 = v10 >> 29;
  HIDWORD(v10) = v21 + v46 + 1518500249 + (v49 & (v48 | v47) | v48 & v47);
  LODWORD(v10) = HIDWORD(v10);
  v50 = v10 >> 27;
  HIDWORD(v10) = v29 + v47 + 1518500249 + (v50 & (v49 | v48) | v49 & v48);
  LODWORD(v10) = HIDWORD(v10);
  v51 = v10 >> 23;
  HIDWORD(v10) = v37 + v48 + 1518500249 + (v51 & (v50 | v49) | v50 & v49);
  LODWORD(v10) = HIDWORD(v10);
  v52 = v10 >> 19;
  HIDWORD(v10) = v15 + v49 + 1518500249 + (v52 & (v51 | v50) | v51 & v50);
  LODWORD(v10) = HIDWORD(v10);
  v53 = v10 >> 29;
  HIDWORD(v10) = v23 + v50 + 1518500249 + (v53 & (v52 | v51) | v52 & v51);
  LODWORD(v10) = HIDWORD(v10);
  v54 = v10 >> 27;
  HIDWORD(v10) = v31 + v51 + 1518500249 + (v54 & (v53 | v52) | v53 & v52);
  LODWORD(v10) = HIDWORD(v10);
  v55 = v10 >> 23;
  HIDWORD(v10) = v39 + v52 + 1518500249 + (v55 & (v54 | v53) | v54 & v53);
  LODWORD(v10) = HIDWORD(v10);
  v56 = v10 >> 19;
  HIDWORD(v10) = v8 + v53 + 1859775393 + (v56 ^ v55 ^ v54);
  LODWORD(v10) = HIDWORD(v10);
  v57 = v10 >> 29;
  HIDWORD(v10) = v25 + v54 + 1859775393 + (v56 ^ v55 ^ v57);
  LODWORD(v10) = HIDWORD(v10);
  v58 = v10 >> 23;
  HIDWORD(v10) = v17 + v55 + 1859775393 + (v57 ^ v56 ^ v58);
  LODWORD(v10) = HIDWORD(v10);
  v59 = v10 >> 21;
  HIDWORD(v10) = v33 + v56 + 1859775393 + (v58 ^ v57 ^ v59);
  LODWORD(v10) = HIDWORD(v10);
  v60 = v10 >> 17;
  HIDWORD(v10) = v13 + v57 + 1859775393 + (v59 ^ v58 ^ v60);
  LODWORD(v10) = HIDWORD(v10);
  v61 = v10 >> 29;
  HIDWORD(v10) = v29 + v58 + 1859775393 + (v60 ^ v59 ^ v61);
  LODWORD(v10) = HIDWORD(v10);
  v62 = v10 >> 23;
  HIDWORD(v10) = v21 + v59 + 1859775393 + (v61 ^ v60 ^ v62);
  LODWORD(v10) = HIDWORD(v10);
  v63 = v10 >> 21;
  HIDWORD(v10) = v37 + v60 + 1859775393 + (v62 ^ v61 ^ v63);
  LODWORD(v10) = HIDWORD(v10);
  v64 = v10 >> 17;
  HIDWORD(v10) = v11 + v61 + 1859775393 + (v63 ^ v62 ^ v64);
  LODWORD(v10) = HIDWORD(v10);
  v65 = v10 >> 29;
  HIDWORD(v10) = v27 + v62 + 1859775393 + (v64 ^ v63 ^ v65);
  LODWORD(v10) = HIDWORD(v10);
  v66 = v10 >> 23;
  HIDWORD(v10) = v19 + v63 + 1859775393 + (v65 ^ v64 ^ v66);
  LODWORD(v10) = HIDWORD(v10);
  v67 = v10 >> 21;
  HIDWORD(v10) = v35 + v64 + 1859775393 + (v66 ^ v65 ^ v67);
  LODWORD(v10) = HIDWORD(v10);
  v68 = v10 >> 17;
  HIDWORD(v10) = v15 + v65 + 1859775393 + (v67 ^ v66 ^ v68);
  LODWORD(v10) = HIDWORD(v10);
  v69 = v10 >> 29;
  HIDWORD(v10) = v31 + v66 + 1859775393 + (v68 ^ v67 ^ v69);
  LODWORD(v10) = HIDWORD(v10);
  v70 = v10 >> 23;
  HIDWORD(v10) = v23 + v67 + 1859775393 + (v69 ^ v68 ^ v70);
  LODWORD(v10) = HIDWORD(v10);
  v71 = v10 >> 21;
  HIDWORD(v10) = v39 + v68 + 1859775393 + (v70 ^ v69 ^ v71);
  LODWORD(v10) = HIDWORD(v10);
  *result = v69 + v73;
  *a2 = (v10 >> 17) + v5;
  *a3 = v71 + v6;
  *a4 = v70 + v72;
  return result;
}

void sub_1A5876EE8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[6];
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = a3;
  v17 = *MEMORY[0x1E0C80C00];
  v12 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v4);
  v14 = (char *)v11 - v5;
  MEMORY[0x1E0C80A78](v6);
  v16 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v7);
  v11[5] = (char *)v11 - v8;
  MEMORY[0x1E0C80A78](v9);
  v10 = (char *)&loc_1A587701C + *((int *)qword_1A5877AB8 + (a2 >> 62));
  v13 = a2 >> 62;
  __asm { BR              X9 }
}

BOOL sub_1A5877AD8(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = a1[1];
  v3 = a2[1];
  if (v2 >> 60 == 11)
    return v3 >> 60 == 11;
  if (v2 >> 60 == 15)
    return v3 >> 60 == 15;
  if (((v3 >> 60) | 4) == 0xF)
    return 0;
  v5 = *a1;
  v6 = *a2;
  sub_1A55B0AF0(*a1, v2);
  sub_1A55B0AF0(v6, v3);
  v7 = sub_1A5862C2C(v5, v2, v6, v3);
  sub_1A55B0B08(v6, v3);
  sub_1A55B0B08(v5, v2);
  return v7 & 1;
}

uint64_t sub_1A5877BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v10;
  _BYTE v11[80];
  _BYTE v12[80];

  sub_1A585BA78(a1, (uint64_t)v11);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  sub_1A585BA78(a2, (uint64_t)v12);
  v7 = *(_QWORD *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 88);
  sub_1A586B68C((uint64_t)v11);
  if ((v8 & 1) == 0)
    return 0;
  if (v5 >> 60 == 11)
    return v6 >> 60 == 11;
  if (v5 >> 60 != 15)
  {
    if (((v6 >> 60) | 4) != 0xF)
    {
      sub_1A55B0AF0(v4, v5);
      sub_1A55B0AF0(v7, v6);
      v10 = sub_1A5862C2C(v4, v5, v7, v6);
      sub_1A55B0B08(v7, v6);
      sub_1A55B0B08(v4, v5);
      if ((v10 & 1) != 0)
        return 1;
    }
    return 0;
  }
  return v6 >> 60 == 15;
}

uint64_t sub_1A5877CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 88) >> 60;
  if ((_DWORD)v1 == 11)
    return 0;
  if ((_DWORD)v1 == 15)
  {
    sub_1A585BA34();
    swift_allocError();
    *(_OWORD *)v2 = xmmword_1A59ABDE0;
    *(_BYTE *)(v2 + 16) = 1;
    return swift_willThrow();
  }
  else
  {
    result = *(_QWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 80) = xmmword_1A59ABD50;
  }
  return result;
}

void sub_1A5877D3C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(v3 + 88) >> 60 == 15)
  {
    sub_1A5876EE8(a1, a2, a3);
    *(_OWORD *)(v3 + 80) = xmmword_1A59DC6C0;
  }
  else
  {
    sub_1A585BA34();
    swift_allocError();
    *(_OWORD *)v4 = xmmword_1A59ABDE0;
    *(_BYTE *)(v4 + 16) = 1;
    swift_willThrow();
  }
}

uint64_t sub_1A5877DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[2];

  v26 = a2;
  v27 = a1;
  v29[1] = *MEMORY[0x1E0C80C00];
  v5 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594A764();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a3, v8, v10);
  sub_1A585F8E4(a3, (uint64_t)v7);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v13 = sub_1A594A74C();
  v14 = sub_1A594C018();
  if (!os_log_type_enabled(v13, v14))
  {
    sub_1A585FAB0((uint64_t)v7);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  v25 = v3;
  v15 = swift_slowAlloc();
  v24 = swift_slowAlloc();
  v29[0] = v24;
  *(_DWORD *)v15 = 68158722;
  LODWORD(v28) = 2;
  sub_1A594C3CC();
  *(_WORD *)(v15 + 8) = 256;
  v16 = &v7[*(int *)(v5 + 20)];
  LOBYTE(v28) = *v16;
  sub_1A594C3CC();
  *(_WORD *)(v15 + 11) = 2082;
  v17 = ConnectionID.debugDescription.getter(*((unsigned int *)v16 + 1));
  v28 = sub_1A589167C(v17, v18, v29);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  sub_1A585FAB0((uint64_t)v7);
  *(_WORD *)(v15 + 21) = 1040;
  v19 = v27;
  v20 = v26 - v27;
  if (!v27)
    v20 = 0;
  if (v20 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_10:
    __break(1u);
  }
  if (v20 > 0x7FFFFFFF)
    goto LABEL_10;
  LODWORD(v28) = v20;
  sub_1A594C3CC();
  *(_WORD *)(v15 + 27) = 2098;
  if (v19)
  {
    v28 = v19;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v13, v14, "[%.*hhx-%{public}s] XOAUTH2 error: %{public}.*P", (uint8_t *)v15, 0x25u);
    v21 = v24;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v21, -1, -1);
    MEMORY[0x1A85B1964](v15, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  else
  {
    result = sub_1A594C9B4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5878124()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x73656D65686373;
  if (*v0 != 1)
    v1 = 0x65706F6373;
  if (*v0)
    return v1;
  else
    return 0x737574617473;
}

uint64_t sub_1A5878178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5878950(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A587819C()
{
  sub_1A5878C70();
  return sub_1A594CFB4();
}

uint64_t sub_1A58781C4()
{
  sub_1A5878C70();
  return sub_1A594CFC0();
}

double sub_1A58781EC@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1A5878A94(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

void sub_1A587822C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = sub_1A58C02DC(0x3D72657375, 0xE500000000000000);
  v6 = v5;
  sub_1A5949FE4();
  sub_1A54E46E8(v4, v6);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7 = sub_1A58C02DC(a1, a2);
  v9 = v8;
  sub_1A5949FE4();
  sub_1A54E46E8(v7, v9);
  __asm { BR              X12 }
}

uint64_t sub_1A58782F8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A7E8);
  v14 = sub_1A5878434();
  LOBYTE(v12[0]) = 1;
  __swift_project_boxed_opaque_existential_1_0(v12, v13);
  sub_1A5949F48();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  v2 = sub_1A58C02DC(0x6165423D68747561, 0xEC00000020726572);
  v4 = v3;
  sub_1A5949FE4();
  sub_1A54E46E8(v2, v4);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v5 = sub_1A58C02DC(v1, v0);
  v7 = v6;
  sub_1A5949FE4();
  sub_1A54E46E8(v5, v7);
  v8 = sub_1A58C8218((uint64_t)&unk_1E4E738C8);
  v10 = v9;
  sub_1A5949FE4();
  sub_1A54E46E8(v8, v10);
  return v15;
}

unint64_t sub_1A5878434()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7AAC40;
  if (!qword_1EE7AAC40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE79A7E8);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CB25E0], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7AAC40);
  }
  return result;
}

uint64_t _s14descr1E4F16B49C10OAuthTokenVwxx(uint64_t *a1)
{
  uint64_t result;
  unint64_t v3;

  result = sub_1A585B504(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  v3 = a1[11];
  if (((v3 >> 60) | 4) != 0xF)
    return sub_1A54E46E8(a1[10], v3);
  return result;
}

uint64_t _s14descr1E4F16B49C10OAuthTokenVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v16 = a2[8];
  v17 = a2[9];
  sub_1A585B39C(*a2, v5, v6, v7, v8, v9, v10, v11, v16, v17);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v16;
  *(_QWORD *)(a1 + 72) = v17;
  v12 = a2 + 10;
  v13 = a2[11];
  if (((v13 >> 60) | 4) == 0xF)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v12;
  }
  else
  {
    v14 = *v12;
    sub_1A54E42B4(*v12, v13);
    *(_QWORD *)(a1 + 80) = v14;
    *(_QWORD *)(a1 + 88) = v13;
  }
  return a1;
}

uint64_t *_s14descr1E4F16B49C10OAuthTokenVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v30 = a2[8];
  v31 = a2[9];
  sub_1A585B39C(*a2, v5, v6, v7, v8, v9, v10, v11, v30, v31);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  v16 = a1[4];
  v17 = a1[5];
  v18 = a1[6];
  v19 = a1[7];
  v20 = a1[8];
  v21 = a1[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v30;
  a1[9] = v31;
  sub_1A585B504(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  v22 = a2 + 10;
  if ((((unint64_t)a1[11] >> 60) | 4) != 0xF)
  {
    v25 = a2[11];
    if (((v25 >> 60) | 4) != 0xF)
    {
      v27 = *v22;
      sub_1A54E42B4(*v22, v25);
      v28 = a1[10];
      v29 = a1[11];
      a1[10] = v27;
      a1[11] = v25;
      sub_1A54E46E8(v28, v29);
      return a1;
    }
    sub_1A585B824((uint64_t)(a1 + 10));
    goto LABEL_6;
  }
  v23 = a2[11];
  if (((v23 >> 60) | 4) == 0xF)
  {
LABEL_6:
    *((_OWORD *)a1 + 5) = *(_OWORD *)v22;
    return a1;
  }
  v24 = *v22;
  sub_1A54E42B4(*v22, v23);
  a1[10] = v24;
  a1[11] = v23;
  return a1;
}

uint64_t *_s14descr1E4F16B49C10OAuthTokenVwta(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = a1[6];
  v11 = a1[7];
  v12 = a1[8];
  v13 = a1[9];
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v14;
  v15 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v15;
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_1A585B504(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  v16 = (uint64_t *)(a2 + 80);
  v17 = a1[11];
  if (((v17 >> 60) | 4) != 0xF)
  {
    v18 = *(_QWORD *)(a2 + 88);
    if (((v18 >> 60) | 4) != 0xF)
    {
      v20 = a1[10];
      a1[10] = *v16;
      a1[11] = v18;
      sub_1A54E46E8(v20, v17);
      return a1;
    }
    sub_1A585B824((uint64_t)(a1 + 10));
  }
  *((_OWORD *)a1 + 5) = *(_OWORD *)v16;
  return a1;
}

ValueMetadata *_s14descr1E4F16B49C10OAuthTokenVMa()
{
  return &_s14descr1E4F16B49C10OAuthTokenVN;
}

uint64_t sub_1A5878804(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5877DBC(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_1A587881C()
{
  unint64_t result;

  result = qword_1EE7AAC48;
  if (!qword_1EE7AAC48)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DDB18, &type metadata for S);
    atomic_store(result, (unint64_t *)&qword_1EE7AAC48);
  }
  return result;
}

__n128 __swift_memcpy48_8_5(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for S(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for S(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for S()
{
  return &type metadata for S;
}

ValueMetadata *_s14descr1E4F16B49C10OAuthTokenV5StateOMa()
{
  return &_s14descr1E4F16B49C10OAuthTokenV5StateON;
}

uint64_t sub_1A5878950(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656D65686373 && a2 == 0xE700000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65706F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A5878A94@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAC50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5878C70();
  sub_1A594CF18();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v24 = 0;
    v9 = sub_1A594CB4C();
    v11 = v10;
    v21 = v9;
    v23 = 1;
    v12 = sub_1A594CB4C();
    v14 = v13;
    v20 = v12;
    v22 = 2;
    v15 = sub_1A594CB4C();
    v16 = v8;
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    *a2 = v21;
    a2[1] = v11;
    a2[2] = v20;
    a2[3] = v14;
    a2[4] = v15;
    a2[5] = v18;
  }
  return result;
}

unint64_t sub_1A5878C70()
{
  unint64_t result;

  result = qword_1EE7AAC58;
  if (!qword_1EE7AAC58)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DDC04, &type metadata for S.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AAC58);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for S.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A5878D00 + 4 * byte_1A59DDA8F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A5878D34 + 4 * byte_1A59DDA8A[v4]))();
}

uint64_t sub_1A5878D34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5878D3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5878D44);
  return result;
}

uint64_t sub_1A5878D50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5878D58);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A5878D5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5878D64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for S.CodingKeys()
{
  return &type metadata for S.CodingKeys;
}

unint64_t sub_1A5878D84()
{
  unint64_t result;

  result = qword_1EE7AAC60;
  if (!qword_1EE7AAC60)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DDBDC, &type metadata for S.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AAC60);
  }
  return result;
}

unint64_t sub_1A5878DCC()
{
  unint64_t result;

  result = qword_1EE7AAC68;
  if (!qword_1EE7AAC68)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DDB4C, &type metadata for S.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AAC68);
  }
  return result;
}

unint64_t sub_1A5878E14()
{
  unint64_t result;

  result = qword_1EE7AAC70;
  if (!qword_1EE7AAC70)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DDB74, &type metadata for S.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AAC70);
  }
  return result;
}

ValueMetadata *_s5PlainVMa()
{
  return &_s5PlainVN;
}

BOOL sub_1A5878E68(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  _BOOL8 v4;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = a1[1];
  v3 = a2[1];
  v4 = v3 >> 60 == 15 && v2 >> 60 == 15;
  if (v2 >> 60 == 15 || v3 >> 60 == 15)
    return v4;
  v6 = *a2;
  v7 = *a1;
  sub_1A5524FC0(*a1, v2);
  sub_1A5524FC0(v6, v3);
  v8 = sub_1A5862C2C(v7, v2, v6, v3);
  sub_1A586012C(v6, v3);
  sub_1A586012C(v7, v2);
  return v8 & 1;
}

BOOL sub_1A5878F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _BYTE v11[80];
  _BYTE v12[80];

  sub_1A585BA78(a1, (uint64_t)v11);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  sub_1A585BA78(a2, (uint64_t)v12);
  v7 = *(_QWORD *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 88);
  sub_1A586B68C((uint64_t)v11);
  if ((v8 & 1) == 0)
    return 0;
  if (v5 >> 60 != 15)
  {
    if (v6 >> 60 == 15)
      return 0;
    sub_1A5524FC0(v4, v5);
    sub_1A5524FC0(v7, v6);
    v9 = sub_1A5862C2C(v4, v5, v7, v6);
    sub_1A586012C(v7, v6);
    sub_1A586012C(v4, v5);
    return (v9 & 1) != 0;
  }
  return v6 >> 60 == 15;
}

ValueMetadata *_s5PlainV5StateOMa()
{
  return &_s5PlainV5StateON;
}

uint64_t AuthenticationFailure.hash(into:)()
{
  return sub_1A594CE88();
}

BOOL static AuthenticationFailure.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t AuthenticationFailure.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t AuthenticationFailure.debugDescription.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726568746FLL;
  else
    return 0x6F7571207265766FLL;
}

unint64_t sub_1A58790C0()
{
  unint64_t result;

  result = qword_1EE7AAC78;
  if (!qword_1EE7AAC78)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AuthenticationFailure, &type metadata for AuthenticationFailure);
    atomic_store(result, (unint64_t *)&qword_1EE7AAC78);
  }
  return result;
}

uint64_t sub_1A5879104()
{
  _BYTE *v0;

  if (*v0)
    return 0x726568746FLL;
  else
    return 0x6F7571207265766FLL;
}

uint64_t storeEnumTagSinglePayload for AuthenticationFailure(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A587918C + 4 * byte_1A59DDCE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A58791C0 + 4 * byte_1A59DDCE0[v4]))();
}

uint64_t sub_1A58791C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58791C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58791D0);
  return result;
}

uint64_t sub_1A58791DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58791E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A58791E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58791F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationFailure()
{
  return &type metadata for AuthenticationFailure;
}

uint64_t sub_1A587920C(__int128 *a1, __int128 *a2)
{
  __int128 v4[12];
  __int128 v5[12];

  sub_1A5879EAC(a1, v4);
  sub_1A5879EAC(a2, v5);
  return sub_1A587A67C(v4, v5) & 1;
}

uint64_t sub_1A5879254@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  char v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  _OWORD v101[12];
  _QWORD v102[20];
  _BYTE v103[200];

  v2 = v1;
  v4 = type metadata accessor for UnauthenticatedState();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v62 - v8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v62 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v62 - v14;
  sub_1A5879DC8(v2, (uint64_t)&v62 - v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 9)
    {
      sub_1A5879DC8((uint64_t)v15, (uint64_t)v9);
      v59 = v9[1];
      if ((unint64_t)(v59 - 1) > 9)
      {
        sub_1A5879EF4(*v9, v59);
        LOBYTE(v89) = 0;
      }
      else
      {
        LOBYTE(v89) = 1;
      }
      sub_1A5879EEC((uint64_t)&v89);
      goto LABEL_36;
    }
    if (EnumCaseMultiPayload == 8)
    {
      sub_1A5879DC8((uint64_t)v15, (uint64_t)v12);
      v17 = *(_QWORD *)v12;
      v97 = *(_OWORD *)(v12 + 120);
      v98 = *(_OWORD *)(v12 + 136);
      v99 = *(_OWORD *)(v12 + 152);
      v100 = *(_OWORD *)(v12 + 168);
      v93 = *(_OWORD *)(v12 + 56);
      v94 = *(_OWORD *)(v12 + 72);
      v95 = *(_OWORD *)(v12 + 88);
      v96 = *(_OWORD *)(v12 + 104);
      v18 = *(_OWORD *)(v12 + 24);
      v90 = *(_OWORD *)(v12 + 8);
      v91 = v18;
      v92 = *(_OWORD *)(v12 + 40);
      v89 = v17;
      sub_1A5879F0C((uint64_t)&v89);
      goto LABEL_36;
    }
    goto LABEL_39;
  }
  sub_1A5879DC8((uint64_t)v15, (uint64_t)v6);
  v19 = *v6;
  v20 = *(_QWORD *)(*v6 + 16);
  if (!v20)
    goto LABEL_31;
  v21 = v19 + 32;
  v22 = v6[2];
  v86 = v22 + 56;
  v64 = v19;
  swift_bridgeObjectRetain_n();
  v23 = 0;
  v66 = v15;
  v67 = a1;
  v65 = v6;
  v62 = v21;
  v63 = v20;
  v78 = v22;
  do
  {
    v24 = (uint64_t *)(v21 + 80 * v23);
    v25 = *v24;
    v26 = v24[1];
    v84 = v24[2];
    v85 = v26;
    v27 = v24[3];
    v79 = v24[4];
    v77 = v24[5];
    v80 = v24[6];
    v87 = v24[7];
    v88 = v25;
    v29 = v24[8];
    v28 = v24[9];
    v81 = v29;
    v82 = v28;
    v83 = v27;
    if (!*(_QWORD *)(v22 + 16))
    {
      sub_1A586418C(v88, v85, v84, v83, v79, v77, v80, v87, v81, v82);
      v34 = v87;
LABEL_38:
      v60 = v34;
      swift_bridgeObjectRelease_n();
      sub_1A5862344(v88, v85, v84, v83, v79, v77, v80, v60, v81, v82);
      sub_1A55034FC((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for Authenticator);
      v15 = v66;
      a1 = v67;
LABEL_39:
      sub_1A5879E0C((uint64_t)v101);
      goto LABEL_40;
    }
    sub_1A594CE64();
    v68 = v23;
    if ((v87 & 0x1000000000000000) != 0)
    {
      sub_1A594CE88();
      __asm { BR              X9 }
    }
    sub_1A594CE88();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    sub_1A594B1D8();
    v30 = sub_1A594CED0();
    v31 = v78;
    v32 = -1 << *(_BYTE *)(v78 + 32);
    v33 = v30 & ~v32;
    v34 = v87;
    if (((*(_QWORD *)(v86 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
      goto LABEL_38;
    v35 = ~v32;
    ++v68;
    v69 = v87 & 0xEFFFFFFFFFFFFFFFLL;
    v70 = ~v32;
    while (1)
    {
      v36 = (uint64_t *)(*(_QWORD *)(v31 + 48) + 80 * v33);
      v37 = *v36;
      v38 = v36[1];
      v40 = v36[2];
      v39 = v36[3];
      v41 = v36[7];
      if ((v41 & 0x1000000000000000) == 0)
        break;
      v46 = v36[4];
      v47 = v36[5];
      v48 = v36[6];
      v49 = v36[8];
      v50 = v36[9];
      v102[0] = *v36;
      v102[1] = v38;
      v102[2] = v40;
      v102[3] = v39;
      v102[4] = v46;
      v102[5] = v47;
      v102[6] = v48;
      v102[7] = v41 & 0xEFFFFFFFFFFFFFFFLL;
      v102[8] = v49;
      v102[9] = v50;
      if ((v34 & 0x1000000000000000) != 0)
      {
        v102[10] = v88;
        v102[11] = v85;
        v102[12] = v84;
        v102[13] = v83;
        v102[14] = v79;
        v102[15] = v77;
        v102[16] = v80;
        v102[17] = v69;
        v102[18] = v81;
        v102[19] = v82;
        v71 = v39;
        v72 = v47;
        v51 = v46;
        v75 = v49;
        v76 = v46;
        v52 = v49;
        v74 = v40;
        v53 = v50;
        sub_1A586418C(v88, v85, v84, v83, v79, v77, v80, v87, v81, v82);
        v54 = v40;
        v55 = v71;
        v56 = v51;
        v57 = v72;
        sub_1A586418C(v37, v38, v54, v71, v56, v72, v48, v41, v52, v53);
        sub_1A586B68C((uint64_t)v102);
        v73 = v58;
        v35 = v70;
        sub_1A5862344(v88, v85, v84, v83, v79, v77, v80, v87, v81, v82);
        sub_1A5862344(v37, v38, v74, v55, v76, v57, v48, v41, v75, v53);
        v34 = v87;
        v31 = v78;
        if ((v73 & 1) != 0)
          goto LABEL_29;
      }
LABEL_13:
      v33 = (v33 + 1) & v35;
      if (((*(_QWORD *)(v86 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
        goto LABEL_38;
    }
    if ((v34 & 0x1000000000000000) != 0)
      goto LABEL_13;
    if (v37 != v88 || v38 != v85)
    {
      v43 = sub_1A594CD38();
      v34 = v87;
      v31 = v78;
      if ((v43 & 1) == 0)
        goto LABEL_13;
    }
    if (v40 != v84 || v39 != v83)
    {
      v45 = sub_1A594CD38();
      v34 = v87;
      v31 = v78;
      if ((v45 & 1) == 0)
        goto LABEL_13;
    }
LABEL_29:
    v22 = v31;
    sub_1A5862344(v88, v85, v84, v83, v79, v77, v80, v34, v81, v82);
    v21 = v62;
    a1 = v67;
    v23 = v68;
    v6 = v65;
    v15 = v66;
  }
  while (v68 != v63);
  swift_bridgeObjectRelease_n();
LABEL_31:
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Authenticator);
  sub_1A5879E80((uint64_t)&v89);
LABEL_36:
  sub_1A5879EAC((__int128 *)&v89, v101);
  nullsub_1(v101);
LABEL_40:
  sub_1A5879E38((uint64_t)v101, (uint64_t)v103);
  sub_1A55034FC((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  return sub_1A5879E38((uint64_t)v103, a1);
}

uint64_t sub_1A5879DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnauthenticatedState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_1A5879E0C(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 176) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 184) = -1;
  return result;
}

uint64_t sub_1A5879E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7981D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1A5879E80(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 176) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 184) = 2;
  return result;
}

_OWORD *sub_1A5879EAC(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[3];
  a2[2] = a1[2];
  a2[3] = v4;
  *a2 = v2;
  a2[1] = v3;
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[7];
  a2[6] = a1[6];
  a2[7] = v7;
  a2[4] = v5;
  a2[5] = v6;
  v8 = a1[8];
  v9 = a1[9];
  v10 = a1[10];
  *(_OWORD *)((char *)a2 + 169) = *(__int128 *)((char *)a1 + 169);
  a2[9] = v9;
  a2[10] = v10;
  a2[8] = v8;
  return a2;
}

uint64_t sub_1A5879EEC(uint64_t result)
{
  *(_BYTE *)(result + 184) = 0;
  return result;
}

uint64_t sub_1A5879EF4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((unint64_t)(a2 - 1) >= 0xA)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A5879F0C(uint64_t result)
{
  *(_BYTE *)(result + 184) = 1;
  return result;
}

uint64_t sub_1A5879F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  uint64_t result;

  if (a24 == 1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t destroy for AuthenticationResult(uint64_t a1)
{
  return sub_1A587A070(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_QWORD *)(a1 + 176),
           *(_BYTE *)(a1 + 184));
}

uint64_t sub_1A587A070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  uint64_t result;

  if (a24 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AuthenticationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v3 = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 168);
  v26 = *(_QWORD *)(a2 + 176);
  v27 = *(_BYTE *)(a2 + 184);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  sub_1A5879F18(*(_QWORD *)a2, v8, v9, v10, v11, v3, v4, v5, v6, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  *(_QWORD *)(a1 + 176) = v26;
  *(_BYTE *)(a1 + 184) = v27;
  return a1;
}

uint64_t assignWithCopy for AuthenticationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v3 = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v30 = *(_QWORD *)(a2 + 72);
  v31 = *(_QWORD *)(a2 + 80);
  v32 = *(_QWORD *)(a2 + 88);
  v33 = *(_QWORD *)(a2 + 96);
  v34 = *(_QWORD *)(a2 + 104);
  v35 = *(_QWORD *)(a2 + 112);
  v36 = *(_QWORD *)(a2 + 120);
  v37 = *(_QWORD *)(a2 + 128);
  v38 = *(_QWORD *)(a2 + 136);
  v39 = *(_QWORD *)(a2 + 144);
  v40 = *(_QWORD *)(a2 + 152);
  v41 = *(_QWORD *)(a2 + 160);
  v42 = *(_QWORD *)(a2 + 168);
  v43 = *(_QWORD *)(a2 + 176);
  v44 = *(_BYTE *)(a2 + 184);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  sub_1A5879F18(*(_QWORD *)a2, v8, v9, v10, v11, v3, v4, v5, v6, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43,
    v44);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v3;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v30;
  *(_QWORD *)(a1 + 80) = v31;
  *(_QWORD *)(a1 + 88) = v32;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v33;
  *(_QWORD *)(a1 + 104) = v34;
  *(_QWORD *)(a1 + 112) = v35;
  *(_QWORD *)(a1 + 120) = v36;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v37;
  *(_QWORD *)(a1 + 136) = v38;
  *(_QWORD *)(a1 + 144) = v39;
  *(_QWORD *)(a1 + 152) = v40;
  v26 = *(_OWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v41;
  *(_QWORD *)(a1 + 168) = v42;
  v27 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 176) = v43;
  v28 = *(_BYTE *)(a1 + 184);
  *(_BYTE *)(a1 + 184) = v44;
  sub_1A587A070(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    v28);
  return a1;
}

__n128 __swift_memcpy185_8_1(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_OWORD *)(a1 + 169) = *(__int128 *)((char *)a2 + 169);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for AuthenticationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v3 = *(_QWORD *)(a2 + 176);
  v4 = *(_BYTE *)(a2 + 184);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_OWORD *)(a1 + 96);
  v16 = *(_OWORD *)(a1 + 112);
  v17 = *(_OWORD *)(a1 + 128);
  v18 = *(_OWORD *)(a1 + 144);
  v19 = *(_OWORD *)(a1 + 160);
  v20 = *(_QWORD *)(a1 + 176);
  v21 = *(_BYTE *)(a1 + 184);
  v22 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v22;
  v23 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v23;
  v24 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v24;
  v25 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v25;
  v26 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v26;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 176) = v3;
  *(_BYTE *)(a1 + 184) = v4;
  sub_1A587A070(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticationResult(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 185))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 184);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticationResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 184) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 185) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 185) = 0;
    if (a2)
      *(_BYTE *)(result + 184) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A587A60C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 184) <= 1u)
    return *(unsigned __int8 *)(a1 + 184);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A587A624(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    LOBYTE(a2) = 2;
    *(_OWORD *)(result + 168) = 0u;
  }
  *(_BYTE *)(result + 184) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationResult()
{
  return &type metadata for AuthenticationResult;
}

uint64_t sub_1A587A67C(__int128 *a1, __int128 *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char *v8;
  char v9;
  _BYTE *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[12];
  _OWORD v35[12];
  _OWORD v36[11];
  _OWORD v37[11];

  sub_1A5879EAC(a1, v35);
  v3 = sub_1A587A60C((uint64_t)v35);
  if (!v3)
  {
    nullsub_1(v35);
    v9 = *v8;
    sub_1A5879EAC(a2, v34);
    if (!sub_1A587A60C((uint64_t)v34))
    {
      nullsub_1(v34);
      v7 = v9 ^ *v10 ^ 1;
      return v7 & 1;
    }
LABEL_10:
    v7 = 0;
    return v7 & 1;
  }
  if (v3 != 1)
  {
    sub_1A5879EAC(a2, v34);
    if (sub_1A587A60C((uint64_t)v34) == 2)
    {
      v7 = 1;
      return v7 & 1;
    }
    goto LABEL_10;
  }
  nullsub_1(v35);
  v5 = *(_QWORD *)v4;
  v31 = *(_OWORD *)(v4 + 136);
  v32 = *(_OWORD *)(v4 + 152);
  v33 = *(_OWORD *)(v4 + 168);
  v27 = *(_OWORD *)(v4 + 72);
  v28 = *(_OWORD *)(v4 + 88);
  v29 = *(_OWORD *)(v4 + 104);
  v30 = *(_OWORD *)(v4 + 120);
  v23 = *(_OWORD *)(v4 + 8);
  v24 = *(_OWORD *)(v4 + 24);
  v25 = *(_OWORD *)(v4 + 40);
  v26 = *(_OWORD *)(v4 + 56);
  sub_1A5879EAC(a2, v34);
  if (sub_1A587A60C((uint64_t)v34) != 1)
    goto LABEL_10;
  nullsub_1(v34);
  v20 = *(_OWORD *)(v6 + 136);
  v21 = *(_OWORD *)(v6 + 152);
  v22 = *(_OWORD *)(v6 + 168);
  v16 = *(_OWORD *)(v6 + 72);
  v17 = *(_OWORD *)(v6 + 88);
  v18 = *(_OWORD *)(v6 + 104);
  v19 = *(_OWORD *)(v6 + 120);
  v12 = *(_OWORD *)(v6 + 8);
  v13 = *(_OWORD *)(v6 + 24);
  v14 = *(_OWORD *)(v6 + 40);
  v15 = *(_OWORD *)(v6 + 56);
  if ((sub_1A5793924(v5, *(_QWORD *)v6) & 1) == 0)
    goto LABEL_10;
  v36[8] = v31;
  v36[9] = v32;
  v36[10] = v33;
  v36[4] = v27;
  v36[5] = v28;
  v36[6] = v29;
  v36[7] = v30;
  v36[0] = v23;
  v36[1] = v24;
  v36[2] = v25;
  v36[3] = v26;
  v37[8] = v20;
  v37[9] = v21;
  v37[10] = v22;
  v37[4] = v16;
  v37[5] = v17;
  v37[6] = v18;
  v37[7] = v19;
  v37[0] = v12;
  v37[1] = v13;
  v37[2] = v14;
  v37[3] = v15;
  v7 = static ServerID.__derived_struct_equals(_:_:)(v36, v37);
  return v7 & 1;
}

uint64_t sub_1A587A864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (uint64_t)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A57A8674(v0, v3);
  if (swift_getEnumCaseMultiPayload() == 14)
  {
    v4 = *(_QWORD *)v3;
    v5 = *(unsigned int *)(v3 + 8);
    v6 = *(_QWORD *)(v3 + 16);
    v7 = *(unsigned __int8 *)(v3 + 12);
    sub_1A587A994();
    v8 = MessageIdentifierSet.count.getter(v4, v5 | (v7 << 32));
    sub_1A54E3458(v4, v5, v7);
    v3 = sub_1A587A9D8(v6);
    result = swift_bridgeObjectRelease();
    v10 = v8 * v3;
    if ((unsigned __int128)(v8 * (__int128)v3) >> 64 == (v8 * v3) >> 63)
      goto LABEL_5;
    __break(1u);
  }
  result = sub_1A55A90F4(v3);
  v10 = 0;
LABEL_5:
  v11 = __OFADD__(v10, 5);
  v12 = v10 + 5;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    v13 = (unsigned __int128)((v12 - 1) * (__int128)0x6666666666666667) >> 64;
    return (v13 >> 1) + ((unint64_t)v13 >> 63);
  }
  return result;
}

unint64_t sub_1A587A994()
{
  unint64_t result;

  result = qword_1EE797048;
  if (!qword_1EE797048)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UID, &type metadata for UID);
    atomic_store(result, (unint64_t *)&qword_1EE797048);
  }
  return result;
}

uint64_t sub_1A587A9D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  unsigned int *i;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  unint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    result = 0;
    for (i = (unsigned int *)(a1 + 64); ; i += 10)
    {
      v6 = *((_QWORD *)i - 2);
      v7 = *((_QWORD *)i - 1);
      v8 = *((unsigned __int8 *)i + 4) >> 5;
      if (v8 == 1)
      {
        v14 = v6 - 1;
        if ((v7 & 0xFE) == 0 || v14 < 2)
        {
          v5 = __OFADD__(result++, 1);
          if (v5)
          {
            __break(1u);
            return 0;
          }
          goto LABEL_4;
        }
      }
      else if (v8 != 3)
      {
        if (v8 != 6)
          goto LABEL_4;
        v9 = *i | ((unint64_t)*((unsigned __int8 *)i + 4) << 32);
        v10 = *((_QWORD *)i - 4);
        v11 = v6 | *((_QWORD *)i - 3) | v7;
        v12 = v9 == 0xC000000000 && v10 == 3;
        v13 = v12 && v11 == 0;
        if (!v13 && (v9 != 0xC000000000 || v10 != 6 || v11))
          goto LABEL_4;
      }
      v5 = __OFADD__(result, 5);
      result += 5;
      if (v5)
      {
        __break(1u);
        return result;
      }
LABEL_4:
      if (!--v1)
        return result;
    }
  }
  return 0;
}

uint64_t storeEnumTagSinglePayload for GetCapabilities(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A587AAE0 + 4 * byte_1A59DDDF5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A587AB14 + 4 * byte_1A59DDDF0[v4]))();
}

uint64_t sub_1A587AB14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A587AB1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A587AB24);
  return result;
}

uint64_t sub_1A587AB30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A587AB38);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A587AB3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A587AB44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GetCapabilities()
{
  return &type metadata for GetCapabilities;
}

uint64_t sub_1A587AB60()
{
  unsigned __int8 *v0;

  return *v0;
}

double sub_1A587AB68@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 64) = 4;
  return result;
}

uint64_t sub_1A587AB80@<X0>(char a1@<W3>, uint64_t a2@<X8>)
{
  __int128 v4[12];
  _BYTE v5[184];
  _BYTE v6[184];

  if (a1)
  {
    v4[0] = xmmword_1A59DC720;
    sub_1A587ABF8((uint64_t)v4);
    sub_1A5862234(v4, (uint64_t)v5);
    nullsub_1(v5);
  }
  else
  {
    sub_1A55DECF8((uint64_t)v5);
  }
  sub_1A587AC04((uint64_t)v5, (uint64_t)v6);
  return sub_1A587AC04((uint64_t)v6, a2);
}

uint64_t sub_1A587ABF8(uint64_t result)
{
  *(_BYTE *)(result + 176) = 6;
  return result;
}

uint64_t sub_1A587AC04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7981D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A587AC4C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1A594A8D8();
  if (v1 <= 0x3F)
  {
    result = _s6LoggerVMa_0();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_initClassMetadata2();
        if (!result)
          return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1A587AD04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  v0 = sub_1A594C078();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A594C048();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1A594AD70();
  MEMORY[0x1E0C80A78](v5);
  sub_1A587C148();
  sub_1A594AD4C();
  v7[1] = MEMORY[0x1E0DEE9D8];
  sub_1A587C184();
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A4810);
  sub_1A587C1CC();
  sub_1A594C5C4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1A594C0A8();
  qword_1EE7A04C0 = result;
  return result;
}

uint64_t *sub_1A587AE94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = (uint64_t)v0 + qword_1EE7F9948;
  v3 = sub_1A594A8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  sub_1A585FAB0((uint64_t)v0 + qword_1EE7F9938);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 136));
  return v0;
}

uint64_t sub_1A587AF24()
{
  sub_1A587AE94();
  return swift_deallocClassInstance();
}

uint64_t _s8VerifierCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s8VerifierCMn);
}

void sub_1A587AF54()
{
  uint64_t v0;

  type metadata accessor for CertUITrustManager();
  swift_allocObject();
  CertUITrustManager.init()();
  qword_1EE7A04A8 = v0;
}

uint64_t sub_1A587AF90(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  char *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t);
  uint64_t v69;
  uint64_t v70;

  v67 = a6;
  v68 = a5;
  v66 = a3;
  v8 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v65 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v65 - v15;
  v17 = sub_1A594A764();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v65 - v22;
  v27 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v65 - v25;
  if (a1)
  {
    if (a1 == 1)
    {
      v29 = v26;
      (*(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16))(v23, a2, v26, v27);
      sub_1A585F8E4(a2, (uint64_t)v13);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v30 = sub_1A594A74C();
      v31 = sub_1A594C018();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        v70 = v33;
        *(_DWORD *)v32 = 68158210;
        LODWORD(v69) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v32 + 8) = 256;
        v34 = &v13[*(int *)(v8 + 20)];
        LOBYTE(v69) = *v34;
        sub_1A594C3CC();
        *(_WORD *)(v32 + 11) = 2082;
        v35 = ConnectionID.debugDescription.getter(*((unsigned int *)v34 + 1));
        v69 = sub_1A589167C(v35, v36, &v70);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A585FAB0((uint64_t)v13);
        _os_log_impl(&dword_1A4F90000, v30, v31, "[%.*hhx-%{public}s] [Prompt] User allowed untrusted certificate(s) for session.", (uint8_t *)v32, 0x15u);
        v37 = 1;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v33, -1, -1);
        MEMORY[0x1A85B1964](v32, -1, -1);

        (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v29);
      }
      else
      {
        sub_1A585FAB0((uint64_t)v13);

        (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v29);
        v37 = 1;
      }
    }
    else
    {
      v46 = v26;
      (*(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16))(v20, a2, v26, v27);
      sub_1A585F8E4(a2, (uint64_t)v10);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v47 = sub_1A594A74C();
      v48 = sub_1A594C018();
      if (os_log_type_enabled(v47, v48))
      {
        v49 = swift_slowAlloc();
        v50 = swift_slowAlloc();
        v70 = v50;
        *(_DWORD *)v49 = 68158210;
        LODWORD(v69) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v49 + 8) = 256;
        v51 = &v10[*(int *)(v8 + 20)];
        LOBYTE(v69) = *v51;
        sub_1A594C3CC();
        *(_WORD *)(v49 + 11) = 2082;
        v52 = ConnectionID.debugDescription.getter(*((unsigned int *)v51 + 1));
        v69 = sub_1A589167C(v52, v53, &v70);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A585FAB0((uint64_t)v10);
        _os_log_impl(&dword_1A4F90000, v47, v48, "[%.*hhx-%{public}s] [Prompt] User allowed untrusted certificate(s) permanently.", (uint8_t *)v49, 0x15u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v50, -1, -1);
        MEMORY[0x1A85B1964](v49, -1, -1);
      }
      else
      {
        sub_1A585FAB0((uint64_t)v10);
      }

      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v46);
      v59 = *(void **)(v66 + 16);
      v60 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
      v61 = v59;
      v37 = 1;
      v62 = objc_msgSend(v60, sel_initWithBool_, 1);
      v63 = (void *)sub_1A594B3F4();
      objc_msgSend(v61, sel_setAccountProperty_forKey_, v62, v63);

    }
  }
  else
  {
    v38 = v26;
    (*(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16))((char *)&v65 - v25, a2, v26, v27);
    sub_1A585F8E4(a2, (uint64_t)v16);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v39 = sub_1A594A74C();
    v40 = sub_1A594C018();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v70 = v42;
      *(_DWORD *)v41 = 68158210;
      LODWORD(v69) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 8) = 256;
      v43 = &v16[*(int *)(v8 + 20)];
      LOBYTE(v69) = *v43;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 11) = 2082;
      v44 = ConnectionID.debugDescription.getter(*((unsigned int *)v43 + 1));
      v69 = sub_1A589167C(v44, v45, &v70);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A585FAB0((uint64_t)v16);
      _os_log_impl(&dword_1A4F90000, v39, v40, "[%.*hhx-%{public}s] [Prompt] User denied untrusted certificate(s).", (uint8_t *)v41, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v42, -1, -1);
      MEMORY[0x1A85B1964](v41, -1, -1);
    }
    else
    {
      sub_1A585FAB0((uint64_t)v16);
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v28, v38);
    v54 = *(void **)(v66 + 16);
    v55 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    v56 = v54;
    v57 = objc_msgSend(v55, sel_initWithBool_, 0);
    v58 = (void *)sub_1A594B3F4();
    objc_msgSend(v56, sel_setAccountProperty_forKey_, v57, v58);

    v37 = 0;
  }
  return v68(v37);
}

uint64_t sub_1A587B6D4(int a1, uint64_t (*a2)(uint64_t), uint64_t a3, unsigned __int8 a4, unsigned __int16 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);

  v25 = a6;
  v26 = a3;
  v27 = a2;
  v13 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A594AED8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EE7A04C8 != -1)
    swift_once();
  v20 = qword_1EE7A04C0;
  *v19 = qword_1EE7A04C0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0DEF740], v16);
  v21 = (id)v20;
  LOBYTE(v20) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) != 0)
  {
    sub_1A585F8E4(a8, (uint64_t)v15);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v23 = sub_1A587C544(a4, a1, a5, v25, a7, (uint64_t)v15);
    return v27(v23);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A587B84C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  _QWORD aBlock[6];

  v1 = _s6LoggerVMa_0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(*(id *)(v0 + 16), sel_isDirty, MEMORY[0x1E0C80A78](v1)))
  {
    v5 = *(void **)(v0 + 16);
    v6 = *(void **)(v0 + 24);
    sub_1A585F8E4(v0+ OBJC_IVAR____TtCVE15IMAP2ConnectionO16IMAP2Persistence16CertificateTrust29DefaultVerifierImplementationP33_F342119D05A6F1A070C6FAB1999158A515AccountAndStore_logger, (uint64_t)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
    v7 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v8 = swift_allocObject();
    sub_1A587C06C((uint64_t)v4, v8 + v7);
    aBlock[4] = sub_1A587C0B0;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A587BEBC;
    aBlock[3] = &block_descriptor_27;
    v9 = _Block_copy(aBlock);
    v10 = v6;
    v11 = v5;
    swift_release();
    objc_msgSend(v10, sel_saveVerifiedAccount_withCompletionHandler_, v11, v9);
    _Block_release(v9);

  }
  sub_1A585FAB0(v0+ OBJC_IVAR____TtCVE15IMAP2ConnectionO16IMAP2Persistence16CertificateTrust29DefaultVerifierImplementationP33_F342119D05A6F1A070C6FAB1999158A515AccountAndStore_logger);
  return v0;
}

void sub_1A587B9BC(char a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v6 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v41 - v10;
  v12 = sub_1A594A764();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v41 - v17;
  if ((a1 & 1) == 0)
  {
    if (a2)
    {
      (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v15, a3, v12, v18);
      sub_1A585F8E4(a3, (uint64_t)v8);
      v20 = a2;
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v21 = a2;
      v22 = a2;
      v23 = sub_1A594A74C();
      v24 = sub_1A594C018();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = swift_slowAlloc();
        v42 = (_QWORD *)swift_slowAlloc();
        v43 = swift_slowAlloc();
        v46 = v43;
        *(_DWORD *)v25 = 68158466;
        LODWORD(v45) = 2;
        v44 = v12;
        sub_1A594C3CC();
        *(_WORD *)(v25 + 8) = 256;
        v26 = &v8[*(int *)(v6 + 20)];
        LOBYTE(v45) = *v26;
        sub_1A594C3CC();
        *(_WORD *)(v25 + 11) = 2082;
        v27 = ConnectionID.debugDescription.getter(*((unsigned int *)v26 + 1));
        v45 = sub_1A589167C(v27, v28, &v46);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A585FAB0((uint64_t)v8);
        *(_WORD *)(v25 + 21) = 2112;
        v29 = sub_1A5949D98();
        v45 = v29;
        sub_1A594C3CC();
        v30 = v42;
        *v42 = v29;

        _os_log_impl(&dword_1A4F90000, v23, v24, "[%.*hhx-%{public}s] Failed to save account: %@", (uint8_t *)v25, 0x1Fu);
        __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v30, -1, -1);
        v31 = v43;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v31, -1, -1);
        MEMORY[0x1A85B1964](v25, -1, -1);

        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v44);
        return;
      }

      sub_1A585FAB0((uint64_t)v8);
      v39 = *(void (**)(char *, uint64_t))(v13 + 8);
      v40 = v15;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))((char *)&v41 - v17, a3, v12, v18);
      sub_1A585F8E4(a3, (uint64_t)v11);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v32 = sub_1A594A74C();
      v33 = sub_1A594C018();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc();
        v35 = swift_slowAlloc();
        v46 = v35;
        *(_DWORD *)v34 = 68158210;
        LODWORD(v45) = 2;
        v44 = v12;
        sub_1A594C3CC();
        *(_WORD *)(v34 + 8) = 256;
        v36 = &v11[*(int *)(v6 + 20)];
        LOBYTE(v45) = *v36;
        sub_1A594C3CC();
        *(_WORD *)(v34 + 11) = 2082;
        v37 = ConnectionID.debugDescription.getter(*((unsigned int *)v36 + 1));
        v45 = sub_1A589167C(v37, v38, &v46);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A585FAB0((uint64_t)v11);
        _os_log_impl(&dword_1A4F90000, v32, v33, "[%.*hhx-%{public}s] Failed to save account.", (uint8_t *)v34, 0x15u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v35, -1, -1);
        MEMORY[0x1A85B1964](v34, -1, -1);

        (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v44);
        return;
      }
      sub_1A585FAB0((uint64_t)v11);

      v39 = *(void (**)(char *, uint64_t))(v13 + 8);
      v40 = v19;
    }
    v39(v40, v12);
  }
}

void sub_1A587BEBC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1A587BF1C()
{
  sub_1A587B84C();
  return swift_deallocClassInstance();
}

uint64_t sub_1A587BF3C()
{
  return _s29DefaultVerifierImplementationV15AccountAndStoreCMa();
}

uint64_t _s29DefaultVerifierImplementationV15AccountAndStoreCMa()
{
  uint64_t result;

  result = qword_1EE7AAC90;
  if (!qword_1EE7AAC90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A587BF80()
{
  uint64_t result;
  unint64_t v1;

  result = _s6LoggerVMa_0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A587BFFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s6LoggerVMa_0() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1A587C06C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s6LoggerVMa_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1A587C0B0(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s6LoggerVMa_0() - 8) + 80);
  sub_1A587B9BC(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t sub_1A587C114(int a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;

  if (a1 == 1)
    v2 = 1;
  else
    v2 = 2 * (a1 == 2);
  return a2(v2);
}

unint64_t sub_1A587C148()
{
  unint64_t result;

  result = qword_1EE7A4768;
  if (!qword_1EE7A4768)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE7A4768);
  }
  return result;
}

unint64_t sub_1A587C184()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A4880[0];
  if (!qword_1EE7A4880[0])
  {
    v1 = sub_1A594C048();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, qword_1EE7A4880);
  }
  return result;
}

unint64_t sub_1A587C1CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A4850;
  if (!qword_1EE7A4850)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0((uint64_t *)&unk_1EE7A4810);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7A4850);
  }
  return result;
}

uint64_t sub_1A587C218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;

  v5 = sub_1A594A764();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - v13;
  if (!a2)
    return 0;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C8F2B8]), sel_init);
  v16 = (void *)sub_1A594B3F4();
  v17 = objc_msgSend(v15, sel_accountWithIdentifier_, v16);

  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
    sub_1A585F8E4(a3, (uint64_t)v11);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v19 = sub_1A594A74C();
    v20 = sub_1A594C018();
    if (os_log_type_enabled(v19, (os_log_type_t)v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v31 = v22;
      *(_DWORD *)v21 = 68158210;
      LODWORD(v30) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v21 + 8) = 256;
      v23 = *(int *)(v9 + 20);
      v29 = v15;
      v24 = &v11[v23];
      LOBYTE(v30) = v11[v23];
      sub_1A594C3CC();
      *(_WORD *)(v21 + 11) = 2082;
      v25 = ConnectionID.debugDescription.getter(*((unsigned int *)v24 + 1));
      v30 = sub_1A589167C(v25, v26, &v31);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A585FAB0((uint64_t)v11);
      _os_log_impl(&dword_1A4F90000, v19, (os_log_type_t)v20, "[%.*hhx-%{public}s] Unable to get account.", (uint8_t *)v21, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v22, -1, -1);
      MEMORY[0x1A85B1964](v21, -1, -1);

    }
    else
    {
      sub_1A585FAB0((uint64_t)v11);

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  sub_1A585F8E4(a3, (uint64_t)v14);
  _s29DefaultVerifierImplementationV15AccountAndStoreCMa();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = v15;
  sub_1A587C06C((uint64_t)v14, v18+ OBJC_IVAR____TtCVE15IMAP2ConnectionO16IMAP2Persistence16CertificateTrust29DefaultVerifierImplementationP33_F342119D05A6F1A070C6FAB1999158A515AccountAndStore_logger);
  return v18;
}

uint64_t sub_1A587C544(unsigned __int8 a1, int a2, unsigned __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t result;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;

  LODWORD(v111) = a2;
  v8 = a3;
  v110 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v110);
  v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v103 = (uint64_t)&v102 - v12;
  MEMORY[0x1E0C80A78](v13);
  v102 = (uint64_t)&v102 - v14;
  MEMORY[0x1E0C80A78](v15);
  v106 = (uint64_t)&v102 - v16;
  MEMORY[0x1E0C80A78](v17);
  v109 = (uint64_t)&v102 - v18;
  MEMORY[0x1E0C80A78](v19);
  v108 = (uint64_t)&v102 - v20;
  v21 = sub_1A594A764();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v105 = (char *)&v102 - v26;
  MEMORY[0x1E0C80A78](v27);
  v104 = (char *)&v102 - v28;
  MEMORY[0x1E0C80A78](v29);
  v107 = (char *)&v102 - v30;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v102 - v32;
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v102 - v35;
  swift_bridgeObjectRelease();
  if (a1)
  {
    if (a1 == 1)
    {
      v37 = (char *)v21;
      if (v8 == 772)
        goto LABEL_4;
LABEL_10:
      v51 = a6;
      (*(void (**)(char *, uint64_t, char *))(v22 + 16))(v24, a6, v37);
      sub_1A585F8E4(a6, (uint64_t)v10);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v52 = sub_1A594A74C();
      v53 = sub_1A594C018();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = swift_slowAlloc();
        v55 = swift_slowAlloc();
        v113 = v55;
        *(_DWORD *)v54 = 68158210;
        LODWORD(v112) = 2;
        v111 = (char *)v51;
        sub_1A594C3CC();
        *(_WORD *)(v54 + 8) = 256;
        v56 = *(int *)(v110 + 20);
        v109 = v22;
        v57 = &v10[v56];
        LOBYTE(v112) = v10[v56];
        sub_1A594C3CC();
        *(_WORD *)(v54 + 11) = 2082;
        v58 = ConnectionID.debugDescription.getter(*((unsigned int *)v57 + 1));
        v112 = sub_1A589167C(v58, v59, &v113);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A585FAB0((uint64_t)v10);
        _os_log_impl(&dword_1A4F90000, v52, v53, "[%.*hhx-%{public}s] TLS policy not met.", (uint8_t *)v54, 0x15u);
        v50 = 1;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v55, -1, -1);
        MEMORY[0x1A85B1964](v54, -1, -1);

        sub_1A585FAB0((uint64_t)v111);
        (*(void (**)(char *, char *))(v109 + 8))(v24, v37);
        return v50;
      }

      sub_1A585FAB0((uint64_t)v10);
      sub_1A585FAB0(v51);
      (*(void (**)(char *, char *))(v22 + 8))(v24, v37);
      return 1;
    }
    v37 = (char *)v21;
    if ((v8 - 771) > 1)
      goto LABEL_10;
  }
  else
  {
    v37 = (char *)v21;
    if ((v8 - 771) >= 2)
      goto LABEL_10;
  }
LABEL_4:
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0578);
  v38 = a6;
  if (!(_BYTE)v111)
  {
    sub_1A585FAB0(a6);
    return 0;
  }
  if (v111 == 4)
  {
    (*(void (**)(char *, uint64_t, char *))(v22 + 16))(v33, a6, v37);
    v60 = v109;
    sub_1A585F8E4(a6, v109);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v61 = sub_1A594A74C();
    v62 = sub_1A594C018();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = swift_slowAlloc();
      v64 = swift_slowAlloc();
      v107 = v37;
      v65 = v64;
      v113 = v64;
      *(_DWORD *)v63 = 68158210;
      LODWORD(v112) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v63 + 8) = 256;
      v66 = *(int *)(v110 + 20);
      v111 = (char *)a6;
      v67 = v60 + v66;
      LOBYTE(v112) = *(_BYTE *)(v60 + v66);
      sub_1A594C3CC();
      *(_WORD *)(v63 + 11) = 2082;
      v68 = ConnectionID.debugDescription.getter(*(unsigned int *)(v67 + 4));
      v112 = sub_1A589167C(v68, v69, &v113);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A585FAB0(v60);
      _os_log_impl(&dword_1A4F90000, v61, v62, "[%.*hhx-%{public}s] Fatal trust failure.", (uint8_t *)v63, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v65, -1, -1);
      MEMORY[0x1A85B1964](v63, -1, -1);

      sub_1A585FAB0((uint64_t)v111);
      (*(void (**)(char *, char *))(v22 + 8))(v33, v107);
      return 1;
    }

    sub_1A585FAB0(v60);
    sub_1A585FAB0(a6);
    (*(void (**)(char *, char *))(v22 + 8))(v33, v37);
    return 1;
  }
  if (v111 == 1)
  {
    (*(void (**)(char *, uint64_t, char *))(v22 + 16))(v36, a6, v37);
    v39 = v108;
    sub_1A585F8E4(a6, v108);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v40 = sub_1A594A74C();
    v41 = sub_1A594C018();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc();
      v111 = v36;
      v43 = v42;
      v44 = swift_slowAlloc();
      v107 = v37;
      v45 = v44;
      v113 = v44;
      *(_DWORD *)v43 = 68158210;
      LODWORD(v112) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v43 + 8) = 256;
      v46 = v38;
      v47 = v39 + *(int *)(v110 + 20);
      LOBYTE(v112) = *(_BYTE *)v47;
      sub_1A594C3CC();
      *(_WORD *)(v43 + 11) = 2082;
      v48 = ConnectionID.debugDescription.getter(*(unsigned int *)(v47 + 4));
      v112 = sub_1A589167C(v48, v49, &v113);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A585FAB0(v39);
      _os_log_impl(&dword_1A4F90000, v40, v41, "[%.*hhx-%{public}s] Trust denied.", (uint8_t *)v43, 0x15u);
      v50 = 1;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v45, -1, -1);
      MEMORY[0x1A85B1964](v43, -1, -1);

      sub_1A585FAB0(v46);
      (*(void (**)(char *, char *))(v22 + 8))(v111, v107);
      return v50;
    }

    sub_1A585FAB0(v39);
    sub_1A585FAB0(v38);
    (*(void (**)(char *, char *))(v22 + 8))(v36, v37);
    return 1;
  }
  if (a1 <= 1u)
  {
    v70 = v107;
    (*(void (**)(char *, uint64_t, char *))(v22 + 16))(v107, v38, v37);
    v71 = v106;
    sub_1A585F8E4(v38, v106);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v72 = sub_1A594A74C();
    v73 = sub_1A594C018();
    if (!os_log_type_enabled(v72, v73))
    {

      sub_1A585FAB0(v71);
      sub_1A585FAB0(v38);
      (*(void (**)(char *, char *))(v22 + 8))(v70, v37);
      return 1;
    }
    v74 = swift_slowAlloc();
    v75 = swift_slowAlloc();
    v113 = v75;
    *(_DWORD *)v74 = 68158210;
    LODWORD(v112) = 2;
    v109 = v22;
    sub_1A594C3CC();
    *(_WORD *)(v74 + 8) = 256;
    v76 = v37;
    v77 = v71 + *(int *)(v110 + 20);
    LOBYTE(v112) = *(_BYTE *)v77;
    sub_1A594C3CC();
    *(_WORD *)(v74 + 11) = 2082;
    v78 = ConnectionID.debugDescription.getter(*(unsigned int *)(v77 + 4));
    v112 = sub_1A589167C(v78, v79, &v113);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A585FAB0(v71);
    _os_log_impl(&dword_1A4F90000, v72, v73, "[%.*hhx-%{public}s] Trust evaluation failed.", (uint8_t *)v74, 0x15u);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v75, -1, -1);
    MEMORY[0x1A85B1964](v74, -1, -1);

    sub_1A585FAB0(v38);
    (*(void (**)(char *, char *))(v109 + 8))(v107, v76);
    return 1;
  }
  v80 = v22;
  switch(v111)
  {
    case 2u:
      v91 = v104;
      (*(void (**)(char *, uint64_t, char *))(v22 + 16))(v104, v38, v37);
      v92 = v102;
      sub_1A585F8E4(v38, v102);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v93 = sub_1A594A74C();
      v94 = sub_1A594C030();
      if (os_log_type_enabled(v93, v94))
      {
        v95 = swift_slowAlloc();
        v96 = swift_slowAlloc();
        v113 = v96;
        *(_DWORD *)v95 = 68158210;
        LODWORD(v112) = 2;
        v109 = v80;
        sub_1A594C3CC();
        *(_WORD *)(v95 + 8) = 256;
        v97 = v37;
        v98 = v92 + *(int *)(v110 + 20);
        LOBYTE(v112) = *(_BYTE *)v98;
        sub_1A594C3CC();
        *(_WORD *)(v95 + 11) = 2082;
        v99 = ConnectionID.debugDescription.getter(*(unsigned int *)(v98 + 4));
        v112 = sub_1A589167C(v99, v100, &v113);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A585FAB0(v92);
        _os_log_impl(&dword_1A4F90000, v93, v94, "[%.*hhx-%{public}s] Unspecified trust result.", (uint8_t *)v95, 0x15u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v96, -1, -1);
        MEMORY[0x1A85B1964](v95, -1, -1);

        sub_1A585FAB0(v38);
        (*(void (**)(char *, char *))(v109 + 8))(v104, v97);
      }
      else
      {

        sub_1A585FAB0(v92);
        sub_1A585FAB0(v38);
        (*(void (**)(char *, char *))(v80 + 8))(v91, v37);
      }
      return 0;
    case 5u:
      v81 = v105;
      (*(void (**)(char *, uint64_t, char *))(v22 + 16))(v105, v38, v37);
      v82 = v103;
      sub_1A585F8E4(v38, v103);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v83 = sub_1A594A74C();
      v84 = sub_1A594C018();
      if (!os_log_type_enabled(v83, v84))
      {

        sub_1A585FAB0(v82);
        sub_1A585FAB0(v38);
        (*(void (**)(char *, char *))(v80 + 8))(v81, v37);
        return 1;
      }
      v85 = swift_slowAlloc();
      v86 = swift_slowAlloc();
      v113 = v86;
      *(_DWORD *)v85 = 68158210;
      LODWORD(v112) = 2;
      v109 = v80;
      sub_1A594C3CC();
      *(_WORD *)(v85 + 8) = 256;
      v87 = v37;
      v88 = v82 + *(int *)(v110 + 20);
      LOBYTE(v112) = *(_BYTE *)v88;
      sub_1A594C3CC();
      *(_WORD *)(v85 + 11) = 2082;
      v89 = ConnectionID.debugDescription.getter(*(unsigned int *)(v88 + 4));
      v112 = sub_1A589167C(v89, v90, &v113);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A585FAB0(v82);
      _os_log_impl(&dword_1A4F90000, v83, v84, "[%.*hhx-%{public}s] Trust evaluation failed with other error.", (uint8_t *)v85, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v86, -1, -1);
      MEMORY[0x1A85B1964](v85, -1, -1);

      sub_1A585FAB0(v38);
      (*(void (**)(char *, char *))(v109 + 8))(v105, v87);
      return 1;
    case 3u:
      sub_1A585FAB0(a6);
      return 2;
  }
  result = sub_1A594CD2C();
  __break(1u);
  return result;
}

uint64_t _s11TrustResultOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A587D330 + 4 * byte_1A59DDE25[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A587D364 + 4 * byte_1A59DDE20[v4]))();
}

uint64_t sub_1A587D364(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A587D36C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A587D374);
  return result;
}

uint64_t sub_1A587D380(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A587D388);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A587D38C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A587D394(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11TrustResultOMa()
{
  return &_s11TrustResultON;
}

ValueMetadata *_s29DefaultVerifierImplementationVMa()
{
  return &_s29DefaultVerifierImplementationVN;
}

unint64_t sub_1A587D3C4()
{
  unint64_t result;

  result = qword_1EE7AACA8;
  if (!qword_1EE7AACA8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DDF74, &_s11TrustResultON);
    atomic_store(result, (unint64_t *)&qword_1EE7AACA8);
  }
  return result;
}

uint64_t sub_1A587D408(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t CommandConnection.id.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
}

uint64_t CommandConnection.engineID.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_engineID);
}

uint64_t sub_1A587D454(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[24];

  v4 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v12[-v8];
  sub_1A55034B8(a1, (uint64_t)&v12[-v8], (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  v10 = *a2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_1A55034B8(v10, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  swift_beginAccess();
  sub_1A5891DB0((uint64_t)v9, v10);
  swift_endAccess();
  sub_1A587D570((uint64_t)v6);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  return sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
}

uint64_t sub_1A587D570(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t result;
  _QWORD *v16;
  _QWORD *v17;
  _BYTE v18[168];
  _QWORD v19[44];
  _BYTE v20[168];
  _QWORD v21[44];

  v3 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v18[-v7];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v18[-v10];
  v12 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_1A55034B8(v12, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  _s15IMAP2Connection0B5StateO21__derived_enum_equalsySbAC_ACtFZ_0(a1, (uint64_t)v11);
  v14 = v13;
  result = sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if ((v14 & 1) == 0)
  {
    sub_1A55034B8(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      memcpy(v21, v8, 0x15AuLL);
      sub_1A55034B8(v12, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        memcpy(v19, v5, 0x15AuLL);
        sub_1A5891E0C((__int128 *)&v21[23], (uint64_t)v20);
        if (sub_1A5891E48((uint64_t)v20) == 1)
        {
          sub_1A5892220((uint64_t)v20);
          sub_1A5891E54((uint64_t)v21);
          sub_1A5891E0C((__int128 *)&v19[23], (uint64_t)v18);
          if (sub_1A5891E48((uint64_t)v18) == 1)
          {
            sub_1A5892220((uint64_t)v18);
            return sub_1A5891E54((uint64_t)v19);
          }
          v16 = v19;
        }
        else
        {
          sub_1A5891E54((uint64_t)v19);
          v16 = v21;
        }
        sub_1A5891E54((uint64_t)v16);
      }
      else
      {
        sub_1A5891E54((uint64_t)v21);
        sub_1A55034FC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      }
    }
    else
    {
      sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    }
    v17 = (_QWORD *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_enqueuedEvents);
    swift_beginAccess();
    if (*v17)
    {
      return sub_1A587F950(a1);
    }
    else
    {
      *v17 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      sub_1A587F950(a1);
      return sub_1A588F56C();
    }
  }
  return result;
}

uint64_t CommandConnection.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  return sub_1A55034B8(v3, a1, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
}

uint64_t sub_1A587D848(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v8[24];

  v3 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_1A55034B8(v6, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  swift_beginAccess();
  sub_1A5891DB0(a1, v6);
  swift_endAccess();
  sub_1A587D570(v5);
  sub_1A55034FC(a1, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  return sub_1A55034FC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
}

uint64_t CommandConnection.recentErrors.getter()
{
  return sub_1A587D9F0();
}

uint64_t (*sub_1A587D93C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A587D980(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v6 = v5;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return swift_bridgeObjectRelease();
}

uint64_t CommandConnection.pathAttributes.getter()
{
  return sub_1A587D9F0();
}

uint64_t sub_1A587D9F0()
{
  swift_beginAccess();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t CommandConnection.constraint.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_pathAttributes);
  swift_beginAccess();
  v2 = *v1;
  if (!*(_QWORD *)(v2 + 16))
    return 0;
  sub_1A594CE64();
  sub_1A594CE88();
  v3 = sub_1A594CED0() & ~(-1 << *(_BYTE *)(v2 + 32));
  return (*(_QWORD *)(v2 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v3) & 1;
}

uint64_t CommandConnection.underlyingID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC15IMAP2Connection10Connection_underlyingID);
}

uint64_t CommandConnection.createdAt.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC15IMAP2Connection10Connection_createdAt);
}

uint64_t CommandConnection.__allocating_init(id:engineID:configuration:makeCredentials:getPushInformation:finishPushRegistration:queue:delegate:reportDataTransfer:test_overrideIdleRefreshInterval:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, char a16)
{
  uint64_t v23;

  v23 = swift_allocObject();
  CommandConnection.init(id:engineID:configuration:makeCredentials:getPushInformation:finishPushRegistration:queue:delegate:reportDataTransfer:test_overrideIdleRefreshInterval:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16 & 1);
  return v23;
}

uint64_t CommandConnection.init(id:engineID:configuration:makeCredentials:getPushInformation:finishPushRegistration:queue:delegate:reportDataTransfer:test_overrideIdleRefreshInterval:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, unsigned __int8 a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v17 = v16;
  v45 = a6;
  v46 = a8;
  v49 = a5;
  v50 = a7;
  v44 = a4;
  v47 = a13;
  v48 = a14;
  v43 = a16;
  v21 = type metadata accessor for ConnectionConfiguration(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_delegate;
  *(_QWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_DWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_commandCounter) = 0;
  v25 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_recentErrors) = v25;
  *(_QWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_enqueuedEvents) = 0;
  *(_BYTE *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idleKind) = 2;
  *(_QWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_pathAttributes) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_dataTransferReportCollector) = 0;
  *(_QWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_unauthenticatedTimer) = 0;
  *(_DWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) = a1;
  *(_BYTE *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_engineID) = a2;
  *(_QWORD *)(v17 + 24) = a10;
  v51 = a3;
  sub_1A55034B8(a3, (uint64_t)v23, type metadata accessor for ConnectionConfiguration);
  type metadata accessor for Connection(0);
  swift_allocObject();
  v26 = a10;
  v27 = sub_1A589C3E8((uint64_t)v23, v26, a2, a1);
  sub_1A55034B8(v27 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  *(_QWORD *)(v24 + 8) = a12;
  swift_unknownObjectWeakAssign();
  type metadata accessor for Timer();
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = 0;
  v28[5] = v26;
  *(_QWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idleTimer) = v28;
  v29 = v26;
  if ((v43 & 1) != 0)
    a15 = sub_1A5891CBC(0x33uLL) + 240;
  *(_QWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idleRefreshInterval) = a15;
  v31 = (_QWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_makeCredentials);
  v33 = v49;
  v32 = v50;
  *v31 = v44;
  v31[1] = v33;
  v34 = (_QWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_getPushInformation);
  *v34 = v45;
  v34[1] = v32;
  v35 = (_QWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_finishPushRegistration);
  *v35 = v46;
  v35[1] = a9;
  v36 = v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  v37 = *MEMORY[0x1E0CCE5B8];
  v38 = sub_1A594AA40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v36, v37, v38);
  type metadata accessor for ConnectionState();
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v17 + 16) = v27;
  *(_QWORD *)(v27 + OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate + 8) = &off_1E4E72870;
  swift_unknownObjectWeakAssign();
  _s27DataTransferReportCollectorCMa();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v39 = swift_retain();
  v40 = sub_1A58B9400(v39, a1, (uint64_t)v29, v47, v48);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  sub_1A55034FC(v51, type metadata accessor for ConnectionConfiguration);
  *(_QWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_dataTransferReportCollector) = v40;
  swift_release();
  return v17;
}

Swift::Void __swiftcall CommandConnection.start()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v12[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1A594AD34();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594AD70();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[4] = sub_1A5891D44;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A587D408;
  aBlock[3] = &block_descriptor_28;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_1A594AD4C();
  v12[1] = MEMORY[0x1E0DEE9D8];
  sub_1A55E1698((unint64_t *)&unk_1EE7A19D0, v3, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A08);
  sub_1A5891D64();
  sub_1A594C5C4();
  MEMORY[0x1A85AE508](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
}

uint64_t sub_1A587E144(uint64_t result)
{
  if (*(_QWORD *)(result + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_dataTransferReportCollector))
  {
    swift_retain();
    sub_1A58B90F8();
    swift_release();
    return sub_1A589A9A4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall CommandConnection.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int EnumCaseMultiPayload;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];

  v1 = v0;
  v40 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v40);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - v5;
  MEMORY[0x1E0C80A78](v7);
  v38 = (uint64_t)&v37 - v8;
  MEMORY[0x1E0C80A78](v9);
  v39 = (char *)&v37 - v10;
  v11 = sub_1A594A764();
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A594AED8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char **)((char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = *(void **)(v1 + 24);
  *v21 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v18 + 104))(v21, *MEMORY[0x1E0DEF740], v17, v19);
  v23 = v22;
  LOBYTE(v22) = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v21, v17);
  if ((v22 & 1) != 0)
  {
    v24 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_1A55034B8(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v16, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v13, v16, v42);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v25 = sub_1A594A74C();
    v26 = sub_1A594C030();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v44[0] = v28;
      *(_DWORD *)v27 = 68158210;
      LODWORD(v43) = 2;
      v37 = v6;
      sub_1A594C3CC();
      *(_WORD *)(v27 + 8) = 256;
      v29 = v24 + *(int *)(v14 + 20);
      LOBYTE(v43) = *(_BYTE *)v29;
      sub_1A594C3CC();
      *(_WORD *)(v27 + 11) = 2082;
      v30 = ConnectionID.debugDescription.getter(*(unsigned int *)(v29 + 4));
      v43 = sub_1A589167C(v30, v31, v44);
      v6 = v37;
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v25, v26, "[%.*hhx-%{public}s] Cancel.", (uint8_t *)v27, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v28, -1, -1);
      MEMORY[0x1A85B1964](v27, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v42);
    v32 = (uint64_t)v39;
    sub_1A594AA64();
    v33 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    sub_1A55034B8(v33, v32, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    v34 = v38;
    sub_1A55034B8(v32, v38, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload >= 3)
    {
      if (EnumCaseMultiPayload - 3 < 2)
      {
        sub_1A55034FC(v32, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
        return;
      }
    }
    else
    {
      sub_1A55034FC(v34, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    }
    sub_1A55034FC(v32, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    swift_storeEnumTagMultiPayload();
    sub_1A55034B8(v33, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    swift_beginAccess();
    sub_1A5891DB0((uint64_t)v6, v33);
    swift_endAccess();
    sub_1A587D570(v3);
    sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    sub_1A55034FC((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    v36 = OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_unauthenticatedTimer;
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_unauthenticatedTimer))
    {
      swift_retain();
      RestartableTimer.stop()();
      swift_release();
    }
    *(_QWORD *)(v1 + v36) = 0;
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void CommandConnection.isCancelledOrFailed.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_1A55034B8(v4, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  v5 = (char *)sub_1A587E734 + 4 * byte_1A59DDFE0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A587E734()
{
  uint64_t v0;

  sub_1A55034FC(v0, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  return 0;
}

uint64_t CommandConnection.send(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[16];

  v2 = v1;
  v4 = type metadata accessor for OutboundContent(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1A594AED8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(void **)(v2 + 24);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x1E0DEF740], v7, v9);
  v13 = v12;
  LOBYTE(v12) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  if ((v12 & 1) != 0)
  {
    Timer.cancel()();
    MEMORY[0x1E0C80A78](v15);
    *(_QWORD *)&v17[-16] = v2;
    *(_QWORD *)&v17[-8] = a1;
    v16 = sub_1A587EC0C((void (*)(unint64_t))sub_1A5891DF4);
    sub_1A55034B8(a1, (uint64_t)v6, type metadata accessor for ClientCommand);
    swift_storeEnumTagMultiPayload();
    sub_1A589AF40(v16, (uint64_t)v6);
    sub_1A55034FC((uint64_t)v6, type metadata accessor for OutboundContent);
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A587E918(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v2 = sub_1A58D76D4();
  sub_1A58D7CA8();
  v4 = v3;
  v5 = sub_1A587A864();
  sub_1A58E3844(a1, v2, v4, v5, 0);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t CommandConnection.makeNextCommandID()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_1A594AED8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + 24);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x1E0DEF740], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) != 0)
  {
    v9 = (_DWORD *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_commandCounter);
    swift_beginAccess();
    v10 = (*v9 + 1) & 0xFFFFFF;
    *v9 = v10;
    return *(unsigned int *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) | (unint64_t)(v10 << 32);
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall CommandConnection.flush()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;

  v1 = sub_1A594A62C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594AED8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (uint64_t *)((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v0 + 24);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x1E0DEF740], v5, v7);
  v11 = v10;
  LOBYTE(v10) = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) != 0)
  {
    _s6LoggerVMa_0();
    OSSignpostID.init(engine:kind:connectionID:)();
    sub_1A58C1000((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1A587EC0C(void (*a1)(unint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t result;
  int *v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v4 = sub_1A594AED8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v1 + 24);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4, v6);
  v10 = v9;
  LOBYTE(v9) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) != 0)
  {
    v12 = (int *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_commandCounter);
    swift_beginAccess();
    v13 = *v12;
    v14 = (*v12 + 1) & 0xFFFFFF;
    *v12 = v14;
    v15 = *(unsigned int *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) | (unint64_t)(v14 << 32);
    a1(v15);
    if (v2)
    {
      *v12 = v13;
      swift_willThrow();
    }
    swift_endAccess();
    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CommandConnection.selectedMailbox.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v11[168];
  _QWORD v12[44];
  _BYTE v13[168];

  v1 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_1A55034B8(v4, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1A55034FC((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    return 0;
  }
  memcpy(v12, v3, 0x15AuLL);
  sub_1A5891E0C((__int128 *)&v12[23], (uint64_t)v13);
  v5 = sub_1A5891E48((uint64_t)v13);
  if (!v5)
  {
    sub_1A5892220((uint64_t)v13);
    sub_1A5891E54((uint64_t)v12);
    return 0;
  }
  if (v5 == 1)
  {
    v6 = (uint64_t *)sub_1A5892220((uint64_t)v13);
    sub_1A5891E0C((__int128 *)&v12[23], (uint64_t)v11);
    v7 = sub_1A5892220((uint64_t)v11);
    sub_1A5892230(v7);
    sub_1A5891E54((uint64_t)v12);
    v8 = *v6;
  }
  else
  {
    v8 = *(_QWORD *)sub_1A5892220((uint64_t)v13);
    sub_1A5891E0C((__int128 *)&v12[23], (uint64_t)v11);
    sub_1A5892220((uint64_t)v11);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5891E54((uint64_t)v12);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5894370((uint64_t)&v12[23], (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A5891FDC);
  return v8;
}

uint64_t CommandConnection.selectMailbox(name:)(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  v3 = v2;
  v6 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v15[-v10];
  v12 = v3 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_1A55034B8(v12, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  LOBYTE(a1) = ConnectionState.selectMailbox(name:)(a1, a2);
  sub_1A55034B8(v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  swift_beginAccess();
  sub_1A5891DB0((uint64_t)v11, v12);
  swift_endAccess();
  sub_1A587D570((uint64_t)v8);
  sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  v13 = v3 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  sub_1A55034B8(v12, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  swift_retain();
  sub_1A58B7684(v13, v11, v3);
  swift_release();
  sub_1A55034B8(v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  swift_beginAccess();
  sub_1A5891DB0((uint64_t)v11, v12);
  swift_endAccess();
  sub_1A587D570((uint64_t)v8);
  sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  return a1 & 1;
}

void CommandConnection.replaceDelegate(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  const void *v36;
  __uint64_t v37;
  uint64_t v38;
  __uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  __uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[44];
  uint64_t v67;
  uint64_t v68;

  v3 = v2;
  v61 = a2;
  v62 = a1;
  v64 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v64);
  v59 = (__uint64_t *)((char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v63 = (char *)&v53 - v6;
  v7 = sub_1A594A764();
  v65 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v53 - v11;
  v60 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v60);
  v58 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v53 - v15;
  v17 = sub_1A594AED8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (uint64_t *)((char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = *(void **)(v3 + 24);
  *v21 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v18 + 104))(v21, *MEMORY[0x1E0DEF740], v17, v19);
  v23 = v22;
  LOBYTE(v22) = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v21, v17);
  if ((v22 & 1) != 0)
  {
    v57 = v9;
    v24 = v3 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_1A55034B8(v3 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v16, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v55 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
    v55(v12, v16, v7);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v25 = sub_1A594A74C();
    v26 = sub_1A594C00C();
    v27 = os_log_type_enabled(v25, v26);
    v56 = v24;
    if (v27)
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v66[0] = v29;
      *(_DWORD *)v28 = 68158210;
      LODWORD(v68) = 2;
      v54 = v3;
      sub_1A594C3CC();
      *(_WORD *)(v28 + 8) = 256;
      v30 = v24 + *(int *)(v60 + 20);
      LOBYTE(v68) = *(_BYTE *)v30;
      sub_1A594C3CC();
      *(_WORD *)(v28 + 11) = 2082;
      v31 = ConnectionID.debugDescription.getter(*(unsigned int *)(v30 + 4));
      v68 = sub_1A589167C(v31, v32, v66);
      v3 = v54;
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v25, v26, "[%.*hhx-%{public}s] Setting new delegate (better path available).", (uint8_t *)v28, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v29, -1, -1);
      MEMORY[0x1A85B1964](v28, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v33 = *(void (**)(char *, uint64_t))(v65 + 8);
    v33(v12, v7);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_delegate + 8) = v61;
    swift_unknownObjectWeakAssign();
    v34 = v3 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    v35 = v34;
    v36 = v63;
    sub_1A55034B8(v35, (uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      memcpy(v66, v36, 0x15AuLL);
      sub_1A5891E54((uint64_t)v66);
      v37 = static MonotonicTime.now()();
      v38 = type metadata accessor for UnauthenticatedStateWithTasks();
      v39 = v59;
      *(__uint64_t *)((char *)v59 + *(int *)(v38 + 24)) = MEMORY[0x1E0DEE9D8];
      *v39 = v37;
      type metadata accessor for UnauthenticatedState();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_1A587D570((uint64_t)v39);
      sub_1A55034FC((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    }
    else
    {
      sub_1A55034FC((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      v40 = v56;
      v41 = v58;
      sub_1A55034B8(v56, v58, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      v42 = v57;
      v55(v57, (char *)v41, v7);
      swift_retain_n();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v43 = sub_1A594A74C();
      v44 = sub_1A594C018();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = swift_slowAlloc();
        v46 = swift_slowAlloc();
        v64 = v46;
        *(_DWORD *)v45 = 68158210;
        LODWORD(v67) = 2;
        v65 = v7;
        v66[0] = v46;
        sub_1A594C3CC();
        *(_WORD *)(v45 + 8) = 256;
        v47 = v40 + *(int *)(v60 + 20);
        LOBYTE(v67) = *(_BYTE *)v47;
        sub_1A594C3CC();
        *(_WORD *)(v45 + 11) = 2082;
        v48 = ConnectionID.debugDescription.getter(*(unsigned int *)(v47 + 4));
        v67 = sub_1A589167C(v48, v49, v66);
        sub_1A594C3CC();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v43, v44, "[%.*hhx-%{public}s] Trying to replace delegate on unauthenticated connection. Closing.", (uint8_t *)v45, 0x15u);
        v50 = v64;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v50, -1, -1);
        MEMORY[0x1A85B1964](v45, -1, -1);

        v51 = v42;
        v52 = v65;
      }
      else
      {

        swift_release_n();
        v51 = v42;
        v52 = v7;
      }
      v33(v51, v52);
      CommandConnection.cancel()();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t CommandConnection.deinit()
{
  uint64_t v0;

  swift_release();

  sub_1A55034FC(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  sub_1A5892AD4(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_delegate);
  swift_bridgeObjectRelease();
  sub_1A55034FC(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t CommandConnection.__deallocating_deinit()
{
  CommandConnection.deinit();
  return swift_deallocClassInstance();
}

uint64_t Response.logIdentifier.getter()
{
  const void *v0;
  _BYTE v2[584];
  uint64_t v3;
  unint64_t v4;

  v3 = 0;
  v4 = 0xE000000000000000;
  sub_1A5892AF8(v0, v2);
  sub_1A594C924();
  return v3;
}

Swift::Void __swiftcall CommandConnection.collectDataTransferReport()()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_dataTransferReportCollector))
  {
    swift_retain();
    sub_1A58B92A8();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1A587F950(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  char v45;
  __uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  unint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD v100[21];
  uint64_t v101[21];
  uint64_t v102[44];

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A7D8);
  MEMORY[0x1E0C80A78](v3);
  v91 = (uint64_t)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = (char *)type metadata accessor for ConnectionEvent(0);
  MEMORY[0x1E0C80A78](v90);
  v89 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594A764();
  v7 = *(_QWORD *)(v6 - 8);
  v98 = v6;
  v99 = v7;
  MEMORY[0x1E0C80A78](v6);
  v97 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v88 = (char *)&v86 - v10;
  v92 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v92);
  v93 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v86 - v13;
  v15 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v15);
  v94 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v86 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v86 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7980D0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A58804E8();
  v95 = v1;
  v26 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  v27 = a1;
  v28 = (uint64_t)&v25[*(int *)(v23 + 48)];
  v96 = v27;
  sub_1A55034B8(v27, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  sub_1A55034B8(v26, v28, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v43 = v89;
    v44 = v91;
    sub_1A55034B8(v28, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v45 = *v19;
      v46 = static MonotonicTime.now()();
      v87 = v26;
      v47 = v46;
      *v43 = v45;
      type metadata accessor for ConnectionEvent.FailureReason(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      v48 = (uint64_t)v25;
      v30 = v95;
      v49 = (_QWORD *)(v95 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_recentErrors);
      swift_beginAccess();
      sub_1A55034B8((uint64_t)v43, v44, type metadata accessor for ConnectionEvent);
      sub_1A588BF88(v47, v44);
      sub_1A5510284(v44, &qword_1EE79A7D8);
      sub_1A55034FC((uint64_t)v43, type metadata accessor for ConnectionEvent);
      swift_endAccess();
      v50 = swift_allocObject();
      *(_QWORD *)(v50 + 16) = *v49;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      *(_DWORD *)(v50 + 24) = *(_DWORD *)ConnectionID.invalid.unsafeMutableAddressor();
      v51 = MEMORY[0x1E0DEE9E8];
      *(_QWORD *)(v50 + 32) = MEMORY[0x1E0DEE9E8];
      *(_QWORD *)(v50 + 40) = v51;
      sub_1A5880D8C(v50 | 0x1000000000000000);
      swift_release();
      sub_1A594AA64();
      sub_1A55034FC(v48, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      v26 = v87;
      sub_1A55034FC(v28, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
LABEL_10:
      v42 = v98;
      v52 = v99;
      v53 = v97;
      v54 = (uint64_t)v94;
      goto LABEL_24;
    }
  }
  else if (EnumCaseMultiPayload == 2)
  {
    v87 = v26;
    sub_1A55034B8(v28, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    memcpy(v102, v22, 0x15AuLL);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v90 = v25;
      v91 = v28;
      v30 = v95;
      v31 = v95 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
      sub_1A55034B8(v95 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v14, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      v32 = v99;
      v33 = v88;
      v34 = v98;
      (*(void (**)(void))(v99 + 32))();
      swift_retain_n();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v35 = sub_1A594A74C();
      v36 = sub_1A594C00C();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = swift_slowAlloc();
        v38 = swift_slowAlloc();
        v101[0] = v38;
        *(_DWORD *)v37 = 68158210;
        LODWORD(v100[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v37 + 8) = 256;
        v39 = v31 + *(int *)(v92 + 20);
        LOBYTE(v100[0]) = *(_BYTE *)v39;
        sub_1A594C3CC();
        *(_WORD *)(v37 + 11) = 2082;
        v40 = ConnectionID.debugDescription.getter(*(unsigned int *)(v39 + 4));
        v100[0] = sub_1A589167C(v40, v41, v101);
        sub_1A594C3CC();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v35, v36, "[%.*hhx-%{public}s] Connection did authenticate.", (uint8_t *)v37, 0x15u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v38, -1, -1);
        MEMORY[0x1A85B1964](v37, -1, -1);

        v42 = v98;
        (*(void (**)(char *, uint64_t))(v99 + 8))(v88, v98);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
        v42 = v34;
      }
      v59 = v102[0];
      v60 = Capability.idle.unsafeMutableAddressor();
      v61 = *v60;
      v62 = v60[1];
      v63 = v60[2];
      v64 = *((_BYTE *)v60 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      LOBYTE(v61) = sub_1A54EA9BC(v61, v62, v63, v64, v59);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v30 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idleKind) = v61 & 1;
      v65 = swift_allocObject();
      *(_QWORD *)(v65 + 16) = v59;
      *(_OWORD *)(v65 + 136) = *(_OWORD *)&v102[15];
      *(_OWORD *)(v65 + 152) = *(_OWORD *)&v102[17];
      *(_OWORD *)(v65 + 168) = *(_OWORD *)&v102[19];
      *(_OWORD *)(v65 + 184) = *(_OWORD *)&v102[21];
      *(_OWORD *)(v65 + 72) = *(_OWORD *)&v102[7];
      *(_OWORD *)(v65 + 88) = *(_OWORD *)&v102[9];
      *(_OWORD *)(v65 + 104) = *(_OWORD *)&v102[11];
      *(_OWORD *)(v65 + 120) = *(_OWORD *)&v102[13];
      *(_OWORD *)(v65 + 24) = *(_OWORD *)&v102[1];
      *(_OWORD *)(v65 + 40) = *(_OWORD *)&v102[3];
      *(_OWORD *)(v65 + 56) = *(_OWORD *)&v102[5];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55425D8((uint64_t)&v102[1]);
      sub_1A58807BC(v65);
      swift_release();
      sub_1A5891E54((uint64_t)v102);
      sub_1A55034FC((uint64_t)v90, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      sub_1A55034FC(v91, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      v52 = v99;
      goto LABEL_23;
    }
    sub_1A5891E0C((__int128 *)&v102[23], (uint64_t)v101);
    v57 = (uint64_t)v25;
    if (sub_1A5891E48((uint64_t)v101))
    {
      sub_1A5891E54((uint64_t)v102);
      v30 = v95;
      v52 = v99;
    }
    else
    {
      v66 = (uint64_t *)sub_1A5892220((uint64_t)v101);
      v67 = *v66;
      v52 = v99;
      if (*v66)
      {
        v68 = v66[3];
        v90 = (char *)v66[4];
        v69 = (uint64_t)v90;
        v71 = v66[1];
        v70 = v66[2];
        v72 = swift_allocObject();
        v91 = v28;
        *(_QWORD *)(v72 + 16) = v67;
        *(_DWORD *)(v72 + 24) = v71;
        *(_QWORD *)(v72 + 32) = v70;
        *(_QWORD *)(v72 + 40) = v68;
        v73 = v72 | 0x5000000000000000;
        *(_QWORD *)(v72 + 48) = v69;
        sub_1A5894370((uint64_t)&v102[23], (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A58942F8(v70, v68, v69);
        v30 = v95;
        sub_1A58807BC(v73);
        swift_bridgeObjectRelease();
        swift_release();
        sub_1A5892148(v70, v68, (uint64_t)v90);
        sub_1A5891E54((uint64_t)v102);
        v58 = v91;
        goto LABEL_22;
      }
      sub_1A5891E0C((__int128 *)&v102[23], (uint64_t)v100);
      v85 = sub_1A5892220((uint64_t)v100);
      sub_1A58942B4(*(_QWORD *)v85, *(_QWORD *)(v85 + 8), *(_QWORD *)(v85 + 16), *(_QWORD *)(v85 + 24), *(_QWORD *)(v85 + 32));
      sub_1A5891E54((uint64_t)v102);
      v30 = v95;
    }
    v58 = v28;
LABEL_22:
    sub_1A55034FC(v58, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    sub_1A55034FC(v57, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    v42 = v98;
LABEL_23:
    v53 = v97;
    v54 = (uint64_t)v94;
    v26 = v87;
    goto LABEL_24;
  }
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_1A55034FC(v28, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    v30 = v95;
    goto LABEL_10;
  }
  v55 = (uint64_t)v25;
  v56 = swift_getEnumCaseMultiPayload();
  v54 = (uint64_t)v94;
  v30 = v95;
  v53 = v97;
  if (v56 == 4)
  {
    sub_1A594AA64();
    sub_1A55034FC(v55, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  }
  else
  {
    sub_1A5510284(v55, &qword_1EE7980D0);
  }
  v42 = v98;
  v52 = v99;
LABEL_24:
  sub_1A55034B8(v26, v54, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  v74 = ConnectionState.mailboxSelectionPayload(old:)(v96);
  sub_1A55034FC(v54, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if ((~v74 & 0xF000000000000007) != 0)
  {
    v75 = v30 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    v76 = v93;
    sub_1A55034B8(v30 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v93, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v53, v76, v42);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v77 = sub_1A594A74C();
    v78 = sub_1A594C00C();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = swift_slowAlloc();
      v80 = swift_slowAlloc();
      v102[0] = v80;
      *(_DWORD *)v79 = 68158210;
      LODWORD(v101[0]) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v79 + 8) = 256;
      v81 = v75 + *(int *)(v92 + 20);
      LOBYTE(v101[0]) = *(_BYTE *)v81;
      sub_1A594C3CC();
      *(_WORD *)(v79 + 11) = 2082;
      v82 = ConnectionID.debugDescription.getter(*(unsigned int *)(v81 + 4));
      v101[0] = sub_1A589167C(v82, v83, v102);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v77, v78, "[%.*hhx-%{public}s] Mailbox selection changed.", (uint8_t *)v79, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v80, -1, -1);
      MEMORY[0x1A85B1964](v79, -1, -1);

      (*(void (**)(char *, uint64_t))(v99 + 8))(v97, v98);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v42);
    }
    sub_1A58807BC(v74);
    sub_1A58942A0(v74);
  }
  sub_1A5882A70();
  return sub_1A58807BC(0x8000000000000010);
}

void sub_1A58804E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  uint64_t v18;
  NSObject *v19;
  int v20;
  void (*v21)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  void (*v25)(_BYTE *, uint64_t);
  _BYTE v26[12];
  int v27;
  _BYTE *v28;
  uint64_t v29;
  int v30;

  v1 = v0;
  v2 = sub_1A594A62C();
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v28 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v6 = &v26[-v5];
  v7 = sub_1A594A65C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v11);
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_1A55034B8(v14, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  sub_1A58EC954();
  v16 = v15;
  sub_1A55034FC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  sub_1A58EC954();
  if (v16 != v17)
  {
    v18 = tracingSignposter.unsafeMutableAddressor();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, v18, v7);
    OSSignpostID.init(engine:kind:connectionID:)();
    v19 = sub_1A594A650();
    v20 = sub_1A594C150();
    if ((sub_1A594C318() & 1) != 0)
    {
      v21 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v29 + 16);
      v27 = v20;
      v22 = v28;
      v21(v28, v6, v2);
      v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v23 = 67109120;
      v30 = v16;
      sub_1A594C3CC();
      v24 = sub_1A594A620();
      _os_signpost_emit_with_name_impl(&dword_1A4F90000, v19, (os_signpost_type_t)v27, v24, "Connection.imapStateUpdate", "%u", v23, 8u);
      MEMORY[0x1A85B1964](v23, -1, -1);

      v25 = *(void (**)(_BYTE *, uint64_t))(v29 + 8);
      v25(v6, v2);
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
      v25(v22, v2);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v29 + 8))(v6, v2);
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
}

uint64_t sub_1A58807BC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD **v22;
  uint64_t (*v23)();
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[44];

  v2 = v1;
  v52 = sub_1A594A764();
  v4 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 >> 60) - 2 <= 3)
  {
    v13 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    sub_1A55034B8(v13, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    v14 = (char *)&loc_1A58808FC + 4 * word_1A59DDFE6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v15 = *(unsigned int *)(v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands);
  swift_beginAccess();
  v17 = *v16;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v50 = v15;
  v49 = sub_1A5897610(v15, v17);
  v19 = v18;
  v51 = v20;
  swift_bridgeObjectRelease();
  v21 = (_QWORD *)(v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_enqueuedEvents);
  swift_beginAccess();
  if (!*v21)
  {
    v31 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_1A55034B8(v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v52);
    swift_retain();
    sub_1A5893E60(a1);
    swift_retain();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v32 = sub_1A594A74C();
    v33 = sub_1A594C018();
    v34 = os_log_type_enabled(v32, v33);
    v48 = v19;
    if (v34)
    {
      v35 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      v54[0] = v47;
      *(_DWORD *)v35 = 68158210;
      LODWORD(v53) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v35 + 8) = 256;
      v36 = v31 + *(int *)(v7 + 20);
      LOBYTE(v53) = *(_BYTE *)v36;
      sub_1A594C3CC();
      *(_WORD *)(v35 + 11) = 2082;
      v37 = ConnectionID.debugDescription.getter(*(unsigned int *)(v36 + 4));
      v53 = sub_1A589167C(v37, v38, v54);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v32, v33, "[%.*hhx-%{public}s] Trying to enqueue event outside withEnqueuedSend.", (uint8_t *)v35, 0x15u);
      v39 = v47;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v39, -1, -1);
      MEMORY[0x1A85B1964](v35, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v52);
    v40 = v51;
    v41 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_delegate;
    if (!MEMORY[0x1A85B1A0C](v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_delegate))
    {
      sub_1A5893E90(a1);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v42 = *(_QWORD *)(v41 + 8);
    ObjectType = swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B1B0);
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1A59ABD10;
    *(_DWORD *)(v44 + 32) = v50;
    *(_QWORD *)(v44 + 40) = a1;
    *(_DWORD *)(v44 + 48) = v49;
    *(_QWORD *)(v44 + 56) = v48;
    *(_QWORD *)(v44 + 64) = v40;
    v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 8);
    sub_1A5893E60(a1);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v45(v44, ObjectType, v42);
    sub_1A5893E90(a1);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_16;
  }
  sub_1A5893E60(a1);
  v23 = sub_1A587D93C();
  v24 = *v22;
  if (*v22)
  {
    v25 = v22;
    sub_1A5893E60(a1);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v26 = v51;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v25 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v24 = sub_1A58D4210(0, v24[2] + 1, 1, v24);
      *v25 = v24;
    }
    v29 = v24[2];
    v28 = v24[3];
    if (v29 >= v28 >> 1)
    {
      v24 = sub_1A58D4210((_QWORD *)(v28 > 1), v29 + 1, 1, v24);
      *v25 = v24;
    }
    v24[2] = v29 + 1;
    v30 = &v24[5 * v29];
    *((_DWORD *)v30 + 8) = v50;
    v30[5] = a1;
    *((_DWORD *)v30 + 12) = v49;
    v30[7] = v19;
    v30[8] = v26;
    ((void (*)(uint64_t *, _QWORD))v23)(v54, 0);
    sub_1A5893E90(a1);
LABEL_16:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  ((void (*)(uint64_t *, _QWORD))v23)(v54, 0);
  sub_1A5893E90(a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A5880D8C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  const void *v44;
  unint64_t *v45;
  unint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char *v117;
  NSObject *v118;
  os_log_type_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  Swift::String v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  NSObject *v131;
  os_log_type_t v132;
  int v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  os_log_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  unint64_t v153;
  char *v154;
  uint64_t v155;
  NSObject *v156;
  os_log_type_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  os_log_t v172;
  os_log_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  NSObject *v180;
  os_log_type_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  unint64_t v193;
  os_log_t v194;
  void (*v195)(uint64_t, uint64_t);
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  os_log_t v205;
  os_log_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221[73];
  uint64_t v222[3];
  uint64_t v223[74];

  v219 = a1;
  v1 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v1);
  v215 = (char *)&v205 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v214 = (char *)&v205 - v4;
  v5 = sub_1A594A764();
  v6 = *(_QWORD *)(v5 - 8);
  v216 = v5;
  v217 = v6;
  MEMORY[0x1E0C80A78](v5);
  v212 = (uint64_t)&v205 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v213 = (uint64_t)&v205 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v205 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v205 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v205 - v17;
  MEMORY[0x1E0C80A78](v19);
  v210 = (char *)&v205 - v20;
  MEMORY[0x1E0C80A78](v21);
  v211 = (char *)&v205 - v22;
  v23 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v205 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v205 - v27;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v205 - v30;
  MEMORY[0x1E0C80A78](v32);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v205 - v34;
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v205 - v37;
  MEMORY[0x1E0C80A78](v39);
  v43 = (char *)&v205 - v42;
  if (v219 >> 60 != 4)
  {
    v209 = v40;
    if (v219 >> 60 == 3)
    {
      v44 = (const void *)((v219 & 0xFFFFFFFFFFFFFFFLL) + 16);
      sub_1A552316C(v44, v221);
      sub_1A552316C(v221, v223);
      if (sub_1A5523B90((uint64_t)v223) == 4)
      {
        v45 = (unint64_t *)sub_1A5524678((uint64_t)v223);
        v46 = *v45;
        v213 = v45[1];
        v47 = (void *)v45[2];
        v48 = v218;
        v49 = v218 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
        sub_1A55034B8(v218 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v43, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        v50 = v216;
        v51 = v211;
        (*(void (**)(void))(v217 + 32))();
        swift_retain_n();
        sub_1A5523B9C(v221, sub_1A586238C);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        sub_1A5862270(v46);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5862270(v46);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v52 = sub_1A594A74C();
        v53 = sub_1A594C018();
        v54 = v53;
        if (os_log_type_enabled(v52, v53))
        {
          v55 = swift_slowAlloc();
          LODWORD(v212) = v54;
          v56 = v55;
          v57 = swift_slowAlloc();
          v222[0] = v57;
          *(_DWORD *)v56 = 68158466;
          LODWORD(v220) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v56 + 8) = 256;
          v58 = v49 + *(int *)(v209 + 20);
          LOBYTE(v220) = *(_BYTE *)v58;
          sub_1A594C3CC();
          *(_WORD *)(v56 + 11) = 2082;
          v59 = ConnectionID.debugDescription.getter(*(unsigned int *)(v58 + 4));
          v220 = sub_1A589167C(v59, v60, v222);
          sub_1A594C3CC();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v56 + 21) = 2080;
          sub_1A5862270(v46);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          ResponseText.debugDescription.getter(v46, v213, v47);
          v62 = v61;
          v64 = v63;
          sub_1A5862B80(v46);
          swift_bridgeObjectRelease();
          v220 = sub_1A589167C(v62, v64, v222);
          sub_1A594C3CC();
          v48 = v218;
          swift_bridgeObjectRelease();
          sub_1A5862B80(v46);
          swift_bridgeObjectRelease();
          sub_1A5862B80(v46);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v52, (os_log_type_t)v212, "[%.*hhx-%{public}s] Received BYE %s", (uint8_t *)v56, 0x1Fu);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v57, -1, -1);
          MEMORY[0x1A85B1964](v56, -1, -1);

          sub_1A5862B80(v46);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v217 + 8))(v211, v216);
LABEL_31:
          v198 = (uint64_t)v214;
          v197 = (uint64_t)v215;
          v67 = v219;
          goto LABEL_32;
        }
        sub_1A5862B80(v46);
        swift_release_n();
        swift_bridgeObjectRelease();
        sub_1A5862B80(v46);
        swift_bridgeObjectRelease();
        sub_1A5862B80(v46);

        swift_bridgeObjectRelease();
        v195 = *(void (**)(uint64_t, uint64_t))(v217 + 8);
        v196 = (uint64_t)v51;
      }
      else
      {
        sub_1A552316C(v44, v223);
        v48 = v218;
        v115 = v218 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
        sub_1A55034B8(v218 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v38, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        v50 = v216;
        v116 = v217;
        v117 = v210;
        (*(void (**)(char *, char *, uint64_t))(v217 + 32))(v210, v38, v216);
        swift_retain_n();
        sub_1A5523B9C(v223, sub_1A586238C);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        sub_1A5523B9C(v223, sub_1A586238C);
        sub_1A5523B9C(v223, sub_1A586238C);
        v118 = sub_1A594A74C();
        v119 = sub_1A594C00C();
        if (os_log_type_enabled(v118, v119))
        {
          v120 = swift_slowAlloc();
          v121 = swift_slowAlloc();
          v221[0] = v121;
          *(_DWORD *)v120 = 68158466;
          LODWORD(v222[0]) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v120 + 8) = 256;
          v122 = v115 + *(int *)(v209 + 20);
          LOBYTE(v222[0]) = *(_BYTE *)v122;
          sub_1A594C3CC();
          *(_WORD *)(v120 + 11) = 2082;
          v123 = ConnectionID.debugDescription.getter(*(unsigned int *)(v122 + 4));
          v222[0] = sub_1A589167C(v123, v124, v221);
          sub_1A594C3CC();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v120 + 21) = 2082;
          sub_1A5523B9C(v223, sub_1A586238C);
          v125 = UntaggedResponse.makeDescriptionWithoutPII()();
          sub_1A5523B9C(v223, sub_1A5862784);
          v222[0] = sub_1A589167C(v125._countAndFlagsBits, (unint64_t)v125._object, v221);
          sub_1A594C3CC();
          v48 = v218;
          swift_bridgeObjectRelease();
          sub_1A5523B9C(v223, sub_1A5862784);
          sub_1A5523B9C(v223, sub_1A5862784);
          _os_log_impl(&dword_1A4F90000, v118, v119, "[%.*hhx-%{public}s] Received 'S: %{public}s' from network.", (uint8_t *)v120, 0x1Fu);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v121, -1, -1);
          MEMORY[0x1A85B1964](v120, -1, -1);

          sub_1A5523B9C(v223, sub_1A5862784);
          (*(void (**)(char *, uint64_t))(v217 + 8))(v210, v216);
          goto LABEL_31;
        }
        sub_1A5523B9C(v223, sub_1A5862784);
        swift_release_n();
        sub_1A5523B9C(v223, sub_1A5862784);
        sub_1A5523B9C(v223, sub_1A5862784);

        v195 = *(void (**)(uint64_t, uint64_t))(v116 + 8);
        v196 = (uint64_t)v117;
      }
LABEL_30:
      v195(v196, v50);
      goto LABEL_31;
    }
    v48 = v218;
    v100 = v218 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_1A55034B8(v218 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v25, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v101 = v216;
    v102 = v217;
    v103 = v212;
    (*(void (**)(uint64_t, char *, uint64_t))(v217 + 32))(v212, v25, v216);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v67 = v219;
    sub_1A5893E60(v219);
    sub_1A5893E60(v67);
    v104 = sub_1A594A74C();
    v105 = sub_1A594C00C();
    if (os_log_type_enabled(v104, v105))
    {
      v106 = swift_slowAlloc();
      v107 = swift_slowAlloc();
      v223[0] = v107;
      *(_DWORD *)v106 = 68158466;
      LODWORD(v221[0]) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v106 + 8) = 256;
      v108 = v100 + *(int *)(v209 + 20);
      LOBYTE(v221[0]) = *(_BYTE *)v108;
      sub_1A594C3CC();
      *(_WORD *)(v106 + 11) = 2082;
      v109 = ConnectionID.debugDescription.getter(*(unsigned int *)(v108 + 4));
      v221[0] = sub_1A589167C(v109, v110, v223);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v106 + 21) = 2080;
      Event.Payload.shortLogIdentifier.getter(v67);
      v221[0] = sub_1A589167C(v111, v112, v223);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A5893E90(v67);
      sub_1A5893E90(v67);
      _os_log_impl(&dword_1A4F90000, v104, v105, "[%.*hhx-%{public}s] Received '%s' from network.", (uint8_t *)v106, 0x1Fu);
      swift_arrayDestroy();
      v113 = v107;
      v48 = v218;
      MEMORY[0x1A85B1964](v113, -1, -1);
      MEMORY[0x1A85B1964](v106, -1, -1);

      v114 = *(void (**)(uint64_t, uint64_t))(v217 + 8);
LABEL_27:
      v114(v103, v216);
      goto LABEL_28;
    }
    swift_release_n();
    sub_1A5893E90(v67);
    sub_1A5893E90(v67);

    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v103, v101);
    goto LABEL_28;
  }
  v65 = v213;
  v66 = v15;
  v67 = v219;
  v68 = *(unsigned __int8 *)(v219 + 16);
  v69 = (char *)*(unsigned int *)(v219 + 20);
  v71 = *(_QWORD *)(v219 + 24);
  v70 = *(_QWORD *)(v219 + 32);
  v211 = *(char **)(v219 + 40);
  v212 = v70;
  v72 = *(unsigned __int8 *)(v219 + 48);
  v210 = v69;
  v208 = v68;
  if (!v72)
  {
    v126 = v40;
    v48 = v218;
    v127 = v218 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_1A55034B8(v218 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v28, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v50 = v216;
    (*(void (**)(uint64_t, char *, uint64_t))(v217 + 32))(v65, v28, v216);
    swift_retain_n();
    v128 = v71;
    v129 = v211;
    v130 = v212;
    sub_1A5892368(v71, v212, (uint64_t)v211, 0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A5862270(v71);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5862270(v71);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5892368(v71, v130, (uint64_t)v129, 0);
    sub_1A5862270(v71);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v131 = sub_1A594A74C();
    v132 = sub_1A594C00C();
    v133 = v132;
    if (os_log_type_enabled(v131, v132))
    {
      v134 = swift_slowAlloc();
      v206 = v131;
      v135 = v129;
      v136 = v134;
      v207 = swift_slowAlloc();
      v223[0] = v207;
      *(_DWORD *)v136 = 68158978;
      LODWORD(v221[0]) = 2;
      LODWORD(v205) = v133;
      v137 = v130;
      sub_1A594C3CC();
      *(_WORD *)(v136 + 8) = 256;
      v138 = v127 + *(int *)(v126 + 20);
      LOBYTE(v221[0]) = *(_BYTE *)v138;
      sub_1A594C3CC();
      *(_WORD *)(v136 + 11) = 2082;
      v139 = ConnectionID.debugDescription.getter(*(unsigned int *)(v138 + 4));
      v221[0] = sub_1A589167C(v139, v140, v223);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v136 + 21) = 2082;
      v141 = Tag.debugDescription.getter(v208 | ((_QWORD)v210 << 32));
      v221[0] = sub_1A589167C(v141, v142, v223);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v136 + 31) = 2082;
      v221[0] = sub_1A589167C(19279, 0xE200000000000000, v223);
      sub_1A594C3CC();
      sub_1A5862B80(v128);
      swift_bridgeObjectRelease();
      sub_1A5862B80(v128);
      swift_bridgeObjectRelease();
      *(_WORD *)(v136 + 41) = 2080;
      sub_1A5862270(v128);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      ResponseText.debugDescription.getter(v128, v130, v135);
      v144 = v143;
      v146 = v145;
      sub_1A5862B80(v128);
      swift_bridgeObjectRelease();
      v221[0] = sub_1A589167C(v144, v146, v223);
      sub_1A594C3CC();
      v48 = v218;
      swift_bridgeObjectRelease();
      sub_1A5862B80(v128);
      swift_bridgeObjectRelease();
      sub_1A5862B80(v128);
      swift_bridgeObjectRelease();
      v147 = v206;
      _os_log_impl(&dword_1A4F90000, v206, (os_log_type_t)v205, "[%.*hhx-%{public}s] Received 'S: %{public}s %{public}s %s' from network.", (uint8_t *)v136, 0x33u);
      v148 = v207;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v148, -1, -1);
      MEMORY[0x1A85B1964](v136, -1, -1);

      sub_1A58921EC(v128, v137, (uint64_t)v135, 0);
      (*(void (**)(uint64_t, uint64_t))(v217 + 8))(v213, v216);
      goto LABEL_31;
    }
    swift_release_n();
    sub_1A5862B80(v128);
    swift_bridgeObjectRelease();
    sub_1A5862B80(v128);
    swift_bridgeObjectRelease();
    sub_1A5862B80(v128);
    swift_bridgeObjectRelease();
    sub_1A5862B80(v128);

    swift_bridgeObjectRelease();
    sub_1A58921EC(v128, v130, (uint64_t)v129, 0);
    v195 = *(void (**)(uint64_t, uint64_t))(v217 + 8);
    v196 = v213;
    goto LABEL_30;
  }
  if (v72 != 1)
  {
    v209 = v40;
    v149 = v218;
    v150 = v218 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_1A55034B8(v218 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v35, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v151 = v217;
    v152 = v35;
    v48 = v149;
    (*(void (**)(char *, char *, uint64_t))(v217 + 32))(v18, v152, v216);
    swift_retain_n();
    v153 = v71;
    v103 = (uint64_t)v18;
    v154 = v211;
    v155 = v212;
    sub_1A5892368(v71, v212, (uint64_t)v211, 2u);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A5862270(v71);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5862270(v71);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5892368(v71, v155, (uint64_t)v154, 2u);
    sub_1A5862270(v71);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v156 = sub_1A594A74C();
    v157 = sub_1A594C018();
    LODWORD(v213) = v157;
    if (!os_log_type_enabled(v156, v157))
    {
      swift_release_n();
      sub_1A5862B80(v153);
      swift_bridgeObjectRelease();
      sub_1A5862B80(v153);
      swift_bridgeObjectRelease();
      sub_1A5862B80(v153);
      swift_bridgeObjectRelease();
      sub_1A5862B80(v153);

      swift_bridgeObjectRelease();
      sub_1A58921EC(v153, v155, (uint64_t)v154, 2u);
      v114 = *(void (**)(uint64_t, uint64_t))(v151 + 8);
      goto LABEL_27;
    }
    v158 = swift_slowAlloc();
    v205 = v156;
    v159 = v154;
    v160 = v158;
    v206 = (os_log_t)swift_slowAlloc();
    v223[0] = (uint64_t)v206;
    *(_DWORD *)v160 = 68158978;
    LODWORD(v221[0]) = 2;
    v207 = v103;
    v161 = v155;
    sub_1A594C3CC();
    *(_WORD *)(v160 + 8) = 256;
    v162 = v150 + *(int *)(v209 + 20);
    LOBYTE(v221[0]) = *(_BYTE *)v162;
    sub_1A594C3CC();
    *(_WORD *)(v160 + 11) = 2082;
    v163 = ConnectionID.debugDescription.getter(*(unsigned int *)(v162 + 4));
    v221[0] = sub_1A589167C(v163, v164, v223);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v160 + 21) = 2082;
    v165 = Tag.debugDescription.getter(v208 | ((_QWORD)v210 << 32));
    v221[0] = sub_1A589167C(v165, v166, v223);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v160 + 31) = 2082;
    v221[0] = sub_1A589167C(4473154, 0xE300000000000000, v223);
    sub_1A594C3CC();
    sub_1A5862B80(v153);
    swift_bridgeObjectRelease();
    sub_1A5862B80(v153);
    swift_bridgeObjectRelease();
    *(_WORD *)(v160 + 41) = 2080;
    sub_1A5862270(v153);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    ResponseText.debugDescription.getter(v153, v155, v159);
    v168 = v167;
    v170 = v169;
    sub_1A5862B80(v153);
    swift_bridgeObjectRelease();
    v171 = v168;
    v48 = v218;
    v221[0] = sub_1A589167C(v171, v170, v223);
    sub_1A594C3CC();
    v67 = v219;
    swift_bridgeObjectRelease();
    sub_1A5862B80(v153);
    swift_bridgeObjectRelease();
    sub_1A5862B80(v153);
    swift_bridgeObjectRelease();
    v172 = v205;
    _os_log_impl(&dword_1A4F90000, v205, (os_log_type_t)v213, "[%.*hhx-%{public}s] Received 'S: %{public}s %{public}s %s' from network.", (uint8_t *)v160, 0x33u);
    v173 = v206;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v173, -1, -1);
    MEMORY[0x1A85B1964](v160, -1, -1);

    sub_1A58921EC(v153, v161, (uint64_t)v159, 2u);
    (*(void (**)(uint64_t, uint64_t))(v217 + 8))(v207, v216);
LABEL_28:
    v198 = (uint64_t)v214;
    v197 = (uint64_t)v215;
LABEL_32:
    sub_1A58807BC(v67);
    v199 = v48 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    v200 = v48 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    sub_1A55034B8(v200, v198, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    swift_retain();
    sub_1A58AC5F8(v67, (uint64_t)sub_1A58941DC, v48, (uint64_t)sub_1A589429C, v48, v199);
    sub_1A55034B8(v200, v197, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    swift_beginAccess();
    sub_1A5891DB0(v198, v200);
    swift_endAccess();
    sub_1A587D570(v197);
    sub_1A55034FC(v198, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    sub_1A55034FC(v197, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    swift_release();
    return sub_1A588E558();
  }
  v73 = v71;
  v74 = (~v71 & 0xF000000000000007) == 0;
  v75 = v217;
  if (v74 || v73 != 0x8000000000000068)
  {
    v174 = v40;
    v48 = v218;
    v175 = v218 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_1A55034B8(v218 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v31, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v176 = v12;
    v177 = v31;
    v50 = v216;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v12, v177, v216);
    swift_retain_n();
    v179 = v211;
    v178 = v212;
    sub_1A5892368(v73, v212, (uint64_t)v211, 1u);
    sub_1A5862270(v73);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A5862270(v73);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5862270(v73);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5892368(v73, v178, (uint64_t)v179, 1u);
    sub_1A5862270(v73);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v180 = sub_1A594A74C();
    v181 = sub_1A594C018();
    LODWORD(v213) = v181;
    if (os_log_type_enabled(v180, v181))
    {
      v182 = swift_slowAlloc();
      v207 = (uint64_t)v176;
      v183 = v182;
      v206 = (os_log_t)swift_slowAlloc();
      v223[0] = (uint64_t)v206;
      *(_DWORD *)v183 = 68158978;
      LODWORD(v221[0]) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v183 + 8) = 256;
      v184 = v175 + *(int *)(v174 + 20);
      LOBYTE(v221[0]) = *(_BYTE *)v184;
      sub_1A594C3CC();
      *(_WORD *)(v183 + 11) = 2082;
      v185 = ConnectionID.debugDescription.getter(*(unsigned int *)(v184 + 4));
      v221[0] = sub_1A589167C(v185, v186, v223);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v183 + 21) = 2082;
      v187 = Tag.debugDescription.getter(v208 | ((_QWORD)v210 << 32));
      v221[0] = sub_1A589167C(v187, v188, v223);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v183 + 31) = 2082;
      v221[0] = sub_1A589167C(20302, 0xE200000000000000, v223);
      sub_1A594C3CC();
      sub_1A5862B80(v73);
      swift_bridgeObjectRelease();
      sub_1A5862B80(v73);
      swift_bridgeObjectRelease();
      *(_WORD *)(v183 + 41) = 2080;
      sub_1A5862270(v73);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v189 = v212;
      ResponseText.debugDescription.getter(v73, v212, v179);
      v191 = v190;
      v193 = v192;
      sub_1A5862B80(v73);
      swift_bridgeObjectRelease();
      v221[0] = sub_1A589167C(v191, v193, v223);
      sub_1A594C3CC();
      v48 = v218;
      swift_bridgeObjectRelease();
      sub_1A5862B80(v73);
      swift_bridgeObjectRelease();
      sub_1A5862B80(v73);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v180, (os_log_type_t)v213, "[%.*hhx-%{public}s] Received 'S: %{public}s %{public}s %s' from network.", (uint8_t *)v183, 0x33u);
      v194 = v206;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v194, -1, -1);
      MEMORY[0x1A85B1964](v183, -1, -1);

      sub_1A5862B80(v73);
      swift_bridgeObjectRelease();
      sub_1A58921EC(v73, v189, (uint64_t)v179, 1u);
      (*(void (**)(uint64_t, uint64_t))(v217 + 8))(v207, v216);
      goto LABEL_31;
    }
    swift_release_n();
    sub_1A5862B80(v73);
    swift_bridgeObjectRelease();
    sub_1A5862B80(v73);
    swift_bridgeObjectRelease();
    sub_1A5862B80(v73);
    swift_bridgeObjectRelease();
    sub_1A5862B80(v73);

    swift_bridgeObjectRelease();
    sub_1A5862B80(v73);
    swift_bridgeObjectRelease();
    sub_1A58921EC(v73, v212, (uint64_t)v179, 1u);
    v195 = *(void (**)(uint64_t, uint64_t))(v217 + 8);
    v196 = (uint64_t)v176;
    goto LABEL_30;
  }
  v76 = v40;
  v77 = v218;
  v78 = v218 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  v79 = v41;
  sub_1A55034B8(v218 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v41, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  v80 = v79;
  v81 = v66;
  v82 = v216;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v66, v80, v216);
  swift_retain();
  sub_1A5862270(0x8000000000000068);
  swift_retain();
  v83 = (uint64_t)v211;
  v84 = v212;
  sub_1A5892368(0x8000000000000068, v212, (uint64_t)v211, 1u);
  sub_1A5862270(0x8000000000000068);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A5862270(0x8000000000000068);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5862270(0x8000000000000068);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5892368(0x8000000000000068, v84, v83, 1u);
  sub_1A5862270(0x8000000000000068);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v85 = sub_1A594A74C();
  v86 = sub_1A594C018();
  LODWORD(v219) = v86;
  if (os_log_type_enabled(v85, v86))
  {
    v87 = swift_slowAlloc();
    v215 = (char *)swift_slowAlloc();
    v223[0] = (uint64_t)v215;
    *(_DWORD *)v87 = 68158978;
    LODWORD(v221[0]) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v87 + 8) = 256;
    v88 = v78 + *(int *)(v76 + 20);
    LOBYTE(v221[0]) = *(_BYTE *)v88;
    sub_1A594C3CC();
    *(_WORD *)(v87 + 11) = 2082;
    v214 = v81;
    v89 = v82;
    v90 = ConnectionID.debugDescription.getter(*(unsigned int *)(v88 + 4));
    v221[0] = sub_1A589167C(v90, v91, v223);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v87 + 21) = 2082;
    v92 = Tag.debugDescription.getter(v208 | ((_QWORD)v210 << 32));
    v221[0] = sub_1A589167C(v92, v93, v223);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v87 + 31) = 2082;
    v221[0] = sub_1A589167C(20302, 0xE200000000000000, v223);
    sub_1A594C3CC();
    sub_1A5862B80(0x8000000000000068);
    swift_bridgeObjectRelease();
    sub_1A5862B80(0x8000000000000068);
    swift_bridgeObjectRelease();
    *(_WORD *)(v87 + 41) = 2080;
    sub_1A5862270(0x8000000000000068);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    ResponseText.debugDescription.getter(0x8000000000000068, v212, v211);
    v95 = v94;
    v97 = v96;
    sub_1A5862B80(0x8000000000000068);
    swift_bridgeObjectRelease();
    v77 = v218;
    v221[0] = sub_1A589167C(v95, v97, v223);
    v83 = (uint64_t)v211;
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A5862B80(0x8000000000000068);
    swift_bridgeObjectRelease();
    sub_1A5862B80(0x8000000000000068);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v85, (os_log_type_t)v219, "[%.*hhx-%{public}s] Received 'S: %{public}s %{public}s %s' from network. Server is temporarily unavailable.", (uint8_t *)v87, 0x33u);
    v98 = v215;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v98, -1, -1);
    v99 = v87;
    v84 = v212;
    MEMORY[0x1A85B1964](v99, -1, -1);

    (*(void (**)(char *, uint64_t))(v217 + 8))(v214, v89);
  }
  else
  {
    swift_release_n();
    sub_1A5862B80(0x8000000000000068);
    swift_bridgeObjectRelease();
    sub_1A5862B80(0x8000000000000068);
    swift_bridgeObjectRelease();
    sub_1A5862B80(0x8000000000000068);
    swift_bridgeObjectRelease();
    sub_1A5862B80(0x8000000000000068);

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v81, v82);
  }
  v202 = swift_allocObject();
  v203 = (_QWORD *)(v77 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_recentErrors);
  swift_beginAccess();
  *(_QWORD *)(v202 + 16) = *v203;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *(_DWORD *)(v202 + 24) = *(_DWORD *)ConnectionID.invalid.unsafeMutableAddressor();
  v204 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v202 + 32) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v202 + 40) = v204;
  sub_1A58807BC(v202 | 0x1000000000000000);
  swift_release();
  CommandConnection.cancel()();
  sub_1A5862B80(0x8000000000000068);
  swift_bridgeObjectRelease();
  return sub_1A58921EC(0x8000000000000068, v84, v83, 1u);
}

uint64_t sub_1A5882A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unsigned int EnumCaseMultiPayload;
  uint64_t v10;
  _QWORD *v11;
  _BYTE v12[24];

  v1 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v6 = &v12[-v5];
  v7 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_1A55034B8(v7, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  sub_1A55034B8((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload - 3 >= 3)
  {
    if (EnumCaseMultiPayload >= 2)
    {
      sub_1A55034FC((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      v10 = swift_allocObject();
      v11 = (_QWORD *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_pathAttributes);
      swift_beginAccess();
      *(_QWORD *)(v10 + 16) = *v11;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A58807BC(v10 | 0x6000000000000000);
      return swift_release();
    }
    sub_1A55034FC((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  }
  return sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
}

uint64_t sub_1A5882BF8(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v4 = v3;
  v44 = a3;
  v47 = type metadata accessor for ConnectionEvent(0);
  MEMORY[0x1E0C80A78](v47);
  v48 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594A764();
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v43);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OutboundContent(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A594AED8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (uint64_t *)((char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = *(void **)(v4 + 24);
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v16 + 104))(v19, *MEMORY[0x1E0DEF740], v15, v17);
  v21 = v20;
  LOBYTE(v20) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v16 + 8))(v19, v15);
  if ((v20 & 1) != 0)
  {
    v23 = (uint64_t *)(v4 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands);
    swift_beginAccess();
    v24 = sub_1A58E35F8(*v23);
    if ((v25 & 1) != 0)
    {
      v30 = v4 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
      sub_1A55034B8(v4 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v11, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      v31 = v45;
      v32 = v46;
      v33 = v49;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v49, v11, v46);
      swift_retain_n();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v34 = sub_1A594A74C();
      v35 = sub_1A594C00C();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = swift_slowAlloc();
        v37 = v31;
        v38 = swift_slowAlloc();
        v51 = v38;
        *(_DWORD *)v36 = 68158210;
        LODWORD(v50) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v36 + 8) = 256;
        v39 = v30 + *(int *)(v43 + 20);
        LOBYTE(v50) = *(_BYTE *)v39;
        sub_1A594C3CC();
        *(_WORD *)(v36 + 11) = 2082;
        v40 = ConnectionID.debugDescription.getter(*(unsigned int *)(v39 + 4));
        v50 = sub_1A589167C(v40, v41, &v51);
        sub_1A594C3CC();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v34, v35, "[%.*hhx-%{public}s] Trying to send handshake reply, but no barrier command is running.", (uint8_t *)v36, 0x15u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v38, -1, -1);
        MEMORY[0x1A85B1964](v36, -1, -1);

        (*(void (**)(char *, uint64_t))(v37 + 8))(v49, v32);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v32);
      }
      sub_1A594AA64();
      type metadata accessor for ConnectionEvent.FailureReason(0);
      v42 = v48;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_1A5883064(v42);
      v28 = type metadata accessor for ConnectionEvent;
      v29 = (uint64_t)v42;
    }
    else
    {
      v26 = v24;
      *(_QWORD *)v14 = a1;
      *((_QWORD *)v14 + 1) = a2;
      v27 = v44 & 1;
      v14[16] = v44 & 1;
      swift_storeEnumTagMultiPayload();
      sub_1A5862C1C(a1, a2, v27);
      sub_1A589AF40(v26, v14);
      v28 = type metadata accessor for OutboundContent;
      v29 = (uint64_t)v14;
    }
    return sub_1A55034FC(v29, v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A5883064(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(_QWORD);
  char *v83;
  _QWORD v84[27];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v100 = 0;
  v101 = a1;
  v85 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v85);
  v92 = (char *)v84 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v99 = (char *)v84 - v3;
  v4 = sub_1A594ACEC();
  v5 = *(_QWORD *)(v4 - 8);
  v86 = v4;
  v87 = v5;
  MEMORY[0x1E0C80A78](v4);
  v84[9] = (char *)v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v84[17] = (char *)v84 - v8;
  MEMORY[0x1E0C80A78](v9);
  v84[21] = (char *)v84 - v10;
  v84[8] = v11;
  MEMORY[0x1E0C80A78](v12);
  v84[11] = (char *)v84 - v13;
  v14 = sub_1A594A764();
  v102 = *(_QWORD *)(v14 - 8);
  v103 = v14;
  MEMORY[0x1E0C80A78](v14);
  v95 = (char *)v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v93 = (char *)v84 - v17;
  MEMORY[0x1E0C80A78](v18);
  v97 = (char *)v84 - v19;
  MEMORY[0x1E0C80A78](v20);
  v96 = (char *)v84 - v21;
  MEMORY[0x1E0C80A78](v22);
  v84[20] = (char *)v84 - v23;
  MEMORY[0x1E0C80A78](v24);
  v91 = (char *)v84 - v25;
  MEMORY[0x1E0C80A78](v26);
  v84[19] = (char *)v84 - v27;
  MEMORY[0x1E0C80A78](v28);
  v84[18] = (char *)v84 - v29;
  MEMORY[0x1E0C80A78](v30);
  v84[5] = (char *)v84 - v31;
  MEMORY[0x1E0C80A78](v32);
  v84[6] = (char *)v84 - v33;
  MEMORY[0x1E0C80A78](v34);
  v84[10] = (char *)v84 - v35;
  MEMORY[0x1E0C80A78](v36);
  v84[16] = (char *)v84 - v37;
  MEMORY[0x1E0C80A78](v38);
  v84[12] = (char *)v84 - v39;
  MEMORY[0x1E0C80A78](v40);
  v84[24] = (char *)v84 - v41;
  MEMORY[0x1E0C80A78](v42);
  v84[22] = (char *)v84 - v43;
  MEMORY[0x1E0C80A78](v44);
  v84[23] = (char *)v84 - v45;
  v46 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v46);
  v88 = (char *)v84 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v48);
  v84[26] = (char *)v84 - v49;
  MEMORY[0x1E0C80A78](v50);
  v90 = (char *)v84 - v51;
  MEMORY[0x1E0C80A78](v52);
  v89 = (char *)v84 - v53;
  MEMORY[0x1E0C80A78](v54);
  v84[15] = (char *)v84 - v55;
  MEMORY[0x1E0C80A78](v56);
  v84[25] = (char *)v84 - v57;
  MEMORY[0x1E0C80A78](v58);
  v84[14] = (char *)v84 - v59;
  MEMORY[0x1E0C80A78](v60);
  v84[13] = (char *)v84 - v61;
  MEMORY[0x1E0C80A78](v62);
  v84[2] = (char *)v84 - v63;
  MEMORY[0x1E0C80A78](v64);
  v84[1] = (char *)v84 - v65;
  MEMORY[0x1E0C80A78](v66);
  v84[3] = (char *)v84 - v67;
  MEMORY[0x1E0C80A78](v68);
  v84[7] = (char *)v84 - v69;
  MEMORY[0x1E0C80A78](v70);
  v84[4] = (char *)v84 - v71;
  MEMORY[0x1E0C80A78](v72);
  MEMORY[0x1E0C80A78](v73);
  MEMORY[0x1E0C80A78](v74);
  v75 = type metadata accessor for ConnectionEvent.FailureReason(0);
  MEMORY[0x1E0C80A78](v75);
  v94 = (char *)v84 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v77);
  v98 = (char *)v84 - v78;
  v79 = sub_1A594AA40();
  MEMORY[0x1E0C80A78](v79);
  v80 = type metadata accessor for ConnectionEvent(0);
  MEMORY[0x1E0C80A78](v80);
  sub_1A55034B8(v101, (uint64_t)v84 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0), v82);
  v83 = (char *)sub_1A58836BC + 4 * word_1A59DDFF2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A58836BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v2, v3, v0);
  sub_1A588C6FC(v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1A588BDA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t result;
  __uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = sub_1A594AED8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v2 + 24);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4, v6);
  v10 = v9;
  LOBYTE(v9) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) != 0)
  {
    v12 = static MonotonicTime.now()();
    swift_beginAccess();
    sub_1A588C424(v12, a1);
    swift_endAccess();
    v13 = (_QWORD *)(v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_enqueuedEvents);
    result = swift_beginAccess();
    if (*v13)
    {
      v14 = *(_QWORD *)(a1 + 16);
      if (v14)
      {
        v15 = *(_QWORD *)(type metadata accessor for ConnectionEvent(0) - 8);
        v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
        v17 = *(_QWORD *)(v15 + 72);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        do
        {
          sub_1A5883064(v16);
          v16 += v17;
          --v14;
        }
        while (v14);
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      *v13 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(a1 + 16);
      if (v18)
      {
        v19 = *(_QWORD *)(type metadata accessor for ConnectionEvent(0) - 8);
        v20 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
        v21 = *(_QWORD *)(v19 + 72);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        do
        {
          sub_1A5883064(v20);
          v20 += v21;
          --v18;
        }
        while (v18);
        swift_bridgeObjectRelease();
      }
      return sub_1A588F56C();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A588BF88(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;

  v52 = (char *)a2;
  v48 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE797EA0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v53 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v46 = (uint64_t)&v45 - v7;
  v8 = type metadata accessor for ConnectionEvent(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v45 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798048);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v45 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A7D8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7961B0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v45 - v28;
  sub_1A5894598((uint64_t)v52, (uint64_t)v23);
  sub_1A54E3394((uint64_t)v23, (uint64_t)v20, type metadata accessor for ConnectionEvent);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v30(v20, 0, 1, v8);
  v30(v26, 1, 1, v8);
  sub_1A58945E0((uint64_t)v20, (uint64_t)v26);
  sub_1A55032A0((uint64_t)v26, (uint64_t)v29, &qword_1EE7961B0);
  sub_1A55032A0((uint64_t)v29, (uint64_t)v17, &qword_1EE798048);
  v30(v29, 1, 1, v8);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v31(v17, 1, v8) == 1)
  {
    v32 = v48;
    v33 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v49 = v31;
    v50 = v30;
    v51 = v8;
    v52 = v11;
    v36 = v45;
    v33 = MEMORY[0x1E0DEE9D8];
    v37 = v47;
    v32 = v48;
    do
    {
      sub_1A54E3394((uint64_t)v17, (uint64_t)v14, type metadata accessor for ConnectionEvent);
      v39 = (uint64_t)v52;
      sub_1A55034B8((uint64_t)v14, (uint64_t)v52, type metadata accessor for ConnectionEvent);
      sub_1A58D93A0(v32, v39, (uint64_t)v4);
      sub_1A55034FC((uint64_t)v14, type metadata accessor for ConnectionEvent);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v4, 1, v37) == 1)
      {
        sub_1A5510284((uint64_t)v4, (uint64_t *)&unk_1EE797EA0);
      }
      else
      {
        v40 = v46;
        sub_1A54E3394((uint64_t)v4, v46, type metadata accessor for CommandConnection.RecentErrors.Error);
        sub_1A54E3394(v40, v53, type metadata accessor for CommandConnection.RecentErrors.Error);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v33 = sub_1A58D4330(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
        v42 = *(_QWORD *)(v33 + 16);
        v41 = *(_QWORD *)(v33 + 24);
        if (v42 >= v41 >> 1)
        {
          v44 = sub_1A58D4330(v41 > 1, v42 + 1, 1, v33);
          v43 = v36;
          v33 = v44;
        }
        else
        {
          v43 = v36;
        }
        *(_QWORD *)(v33 + 16) = v42 + 1;
        sub_1A54E3394(v53, v33+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v42, type metadata accessor for CommandConnection.RecentErrors.Error);
        v37 = v47;
        v32 = v48;
      }
      sub_1A55032A0((uint64_t)v29, (uint64_t)v17, &qword_1EE798048);
      v38 = v51;
      v50(v29, 1, 1, v51);
    }
    while (v49(v17, 1, v38) != 1);
  }
  sub_1A5510284((uint64_t)v29, &qword_1EE7961B0);
  v34 = MonotonicTime.init(seconds:since:)(v32, -4.0);
  sub_1A58D9D48(v34);
  return sub_1A58F2568(v33);
}

uint64_t sub_1A588C424(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD v27[3];
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE797EA0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  v8 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v31 = (uint64_t)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v29 = (uint64_t)v27 - v11;
  v12 = type metadata accessor for ConnectionEvent(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v27 - v17;
  v19 = *(_QWORD *)(a2 + 16);
  if (v19)
  {
    v27[1] = a2;
    v27[2] = v2;
    v20 = a2 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v30 = *(_QWORD *)(v16 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v21 = MEMORY[0x1E0DEE9D8];
    v28 = a1;
    do
    {
      sub_1A55034B8(v20, (uint64_t)v18, type metadata accessor for ConnectionEvent);
      sub_1A55034B8((uint64_t)v18, (uint64_t)v14, type metadata accessor for ConnectionEvent);
      sub_1A58D93A0(a1, (uint64_t)v14, (uint64_t)v7);
      sub_1A55034FC((uint64_t)v18, type metadata accessor for ConnectionEvent);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v32) == 1)
      {
        sub_1A5510284((uint64_t)v7, (uint64_t *)&unk_1EE797EA0);
      }
      else
      {
        v22 = v29;
        sub_1A54E3394((uint64_t)v7, v29, type metadata accessor for CommandConnection.RecentErrors.Error);
        sub_1A54E3394(v22, v31, type metadata accessor for CommandConnection.RecentErrors.Error);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_1A58D4330(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
        v24 = *(_QWORD *)(v21 + 16);
        v23 = *(_QWORD *)(v21 + 24);
        if (v24 >= v23 >> 1)
          v21 = sub_1A58D4330(v23 > 1, v24 + 1, 1, v21);
        *(_QWORD *)(v21 + 16) = v24 + 1;
        sub_1A54E3394(v31, v21+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v24, type metadata accessor for CommandConnection.RecentErrors.Error);
        a1 = v28;
      }
      v20 += v30;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = MEMORY[0x1E0DEE9D8];
  }
  v25 = MonotonicTime.init(seconds:since:)(a1, -4.0);
  sub_1A58D9D48(v25);
  return sub_1A58F2568(v21);
}

void sub_1A588C6FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (**v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(void (**)(char *, uint64_t), uint64_t, uint64_t);
  void (**v61)(char *, uint64_t);
  char *v62;
  char *v63;
  NSObject *v64;
  os_log_type_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  void (*v77)(char *, uint64_t);
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  void (**v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102[4];

  v99 = a1;
  v94 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v94);
  v97 = (char *)&v83 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v95 = (char *)&v83 - v3;
  MEMORY[0x1E0C80A78](v4);
  v96 = (char *)&v83 - v5;
  MEMORY[0x1E0C80A78](v6);
  v98 = (char *)&v83 - v7;
  MEMORY[0x1E0C80A78](v8);
  v92 = (char *)&v83 - v9;
  MEMORY[0x1E0C80A78](v10);
  v93 = (char *)&v83 - v11;
  v12 = sub_1A594A764();
  v90 = *(_QWORD *)(v12 - 8);
  v91 = v12;
  MEMORY[0x1E0C80A78](v12);
  v89 = (void (**)(char *, uint64_t))((char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v86 = (char *)&v83 - v15;
  v87 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v87);
  v88 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v83 - v18;
  v20 = sub_1A594ACEC();
  v21 = *(char **)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v83 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v83 - v28;
  MEMORY[0x1E0C80A78](v30);
  v32 = (_DWORD *)((char *)&v83 - v31);
  v33 = sub_1A594AA40();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = MEMORY[0x1E0C80A78](v33);
  v37 = (char *)&v83 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v34 + 16))(v37, v99, v33, v35);
  if ((*(unsigned int (**)(char *, uint64_t))(v34 + 88))(v37, v33) == *MEMORY[0x1E0CCE5C0])
  {
    v83 = v19;
    v38 = (uint64_t)v88;
    v84 = v23;
    v85 = v26;
    v39 = v89;
    v40 = v90;
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    if ((*((unsigned int (**)(char *, uint64_t))v21 + 11))(v37, v20) == *MEMORY[0x1E0CCEB08])
    {
      (*((void (**)(_DWORD *, char *, uint64_t))v21 + 2))(v32, v37, v20);
      (*((void (**)(_DWORD *, uint64_t))v21 + 12))(v32, v20);
      if (*v32 == 89)
      {
        v89 = (void (**)(char *, uint64_t))v21;
        v41 = v100;
        v42 = v100 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
        v43 = (uint64_t)v83;
        sub_1A55034B8(v100 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v83, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        v44 = v40;
        v45 = v86;
        v46 = v91;
        (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v86, v43, v91);
        swift_retain_n();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        swift_retain_n();
        v47 = sub_1A594A74C();
        v48 = sub_1A594C030();
        if (os_log_type_enabled(v47, v48))
        {
          v49 = swift_slowAlloc();
          v88 = (char *)swift_slowAlloc();
          v102[0] = (uint64_t)v88;
          *(_DWORD *)v49 = 68158466;
          LODWORD(v101) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v49 + 8) = 256;
          v50 = v42 + *(int *)(v87 + 20);
          LOBYTE(v101) = *(_BYTE *)v50;
          sub_1A594C3CC();
          *(_WORD *)(v49 + 11) = 2082;
          v51 = ConnectionID.debugDescription.getter(*(unsigned int *)(v50 + 4));
          v101 = sub_1A589167C(v51, v52, v102);
          sub_1A594C3CC();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v49 + 21) = 2048;
          v53 = *(_QWORD *)(*(_QWORD *)(v41 + 16) + OBJC_IVAR____TtC15IMAP2Connection10Connection_underlyingID);
          swift_release();
          v101 = v53;
          sub_1A594C3CC();
          swift_release();
          _os_log_impl(&dword_1A4F90000, v47, v48, "[%.*hhx-%{public}s] [C%llu] Connection did fail: Operation canceled", (uint8_t *)v49, 0x1Fu);
          v54 = v88;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v54, -1, -1);
          MEMORY[0x1A85B1964](v49, -1, -1);

          (*(void (**)(char *, uint64_t))(v90 + 8))(v86, v91);
        }
        else
        {

          swift_release_n();
          (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
        }
        v89[1](v37, v20);
        v55 = v100;
        v79 = (uint64_t)v92;
        v80 = (uint64_t)v93;
LABEL_11:
        v81 = v55 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
        swift_beginAccess();
        sub_1A55034B8(v81, v80, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
        sub_1A55034B8(v80, v79, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
        v82 = (char *)&loc_1A588D058 + 4 * byte_1A59DE00C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    v56 = v29;
    (*((void (**)(char *, char *, uint64_t))v21 + 4))(v29, v37, v20);
    v55 = v100;
    v57 = v100 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    v58 = v38;
    sub_1A55034B8(v100 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v38, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v59 = v40;
    v60 = *(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v40 + 32);
    v61 = v39;
    v62 = v56;
    v60(v39, v58, v91);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v63 = v85;
    v88 = (char *)*((_QWORD *)v21 + 2);
    ((void (*)(char *, char *, uint64_t))v88)(v85, v56, v20);
    swift_retain_n();
    v64 = sub_1A594A74C();
    v65 = sub_1A594C018();
    v66 = v65;
    if (os_log_type_enabled(v64, v65))
    {
      v67 = swift_slowAlloc();
      v86 = v62;
      v68 = v67;
      v69 = swift_slowAlloc();
      v102[0] = v69;
      *(_DWORD *)v68 = 68158722;
      LODWORD(v101) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v68 + 8) = 256;
      v70 = *(int *)(v87 + 20);
      LODWORD(v87) = v66;
      v71 = v57 + v70;
      LOBYTE(v101) = *(_BYTE *)(v57 + v70);
      sub_1A594C3CC();
      *(_WORD *)(v68 + 11) = 2082;
      v72 = ConnectionID.debugDescription.getter(*(unsigned int *)(v71 + 4));
      v101 = sub_1A589167C(v72, v73, v102);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 21) = 2048;
      v74 = *(_QWORD *)(*(_QWORD *)(v100 + 16) + OBJC_IVAR____TtC15IMAP2Connection10Connection_underlyingID);
      swift_release();
      v101 = v74;
      sub_1A594C3CC();
      swift_release();
      *(_WORD *)(v68 + 31) = 2080;
      ((void (*)(char *, char *, uint64_t))v88)(v84, v63, v20);
      v75 = sub_1A594B4A8();
      v101 = sub_1A589167C(v75, v76, v102);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v77 = (void (*)(char *, uint64_t))*((_QWORD *)v21 + 1);
      v77(v63, v20);
      _os_log_impl(&dword_1A4F90000, v64, (os_log_type_t)v87, "[%.*hhx-%{public}s] [C%llu] Connection did fail: %s", (uint8_t *)v68, 0x29u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v69, -1, -1);
      v55 = v100;
      MEMORY[0x1A85B1964](v68, -1, -1);

      (*(void (**)(char *, uint64_t))(v90 + 8))((char *)v89, v91);
      v77(v86, v20);
    }
    else
    {

      swift_release();
      v78 = (void (*)(char *, uint64_t))*((_QWORD *)v21 + 1);
      v78(v63, v20);
      swift_release_n();
      (*(void (**)(_QWORD, uint64_t))(v59 + 8))(v61, v91);
      v78(v62, v20);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v33);
    v55 = v100;
  }
  v79 = (uint64_t)v92;
  v80 = (uint64_t)v93;
  goto LABEL_11;
}

uint64_t sub_1A588D2A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_1A594ACEC();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CCEB10];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v7, a1, v2, v5);
  sub_1A55E1698((unint64_t *)&qword_1EE795E78, v3, MEMORY[0x1E0CCEB28]);
  v8 = (void *)swift_allocError();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v9, v7, v2);
  v10 = sub_1A5949D98();

  return v10;
}

void sub_1A588D388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  void (*v43)(_QWORD *, _QWORD, uint64_t);
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)();
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  __uint64_t v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD *, _QWORD, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  NSObject *v78;
  os_log_type_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105[44];
  _QWORD v106[21];

  v1 = v0;
  v2 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v93 = (uint64_t)&v89 - v6;
  v7 = sub_1A594A764();
  v103 = *(_QWORD *)(v7 - 8);
  v104 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v94 = (char *)&v89 - v11;
  MEMORY[0x1E0C80A78](v12);
  v92 = (char *)&v89 - v13;
  v101 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v101);
  v15 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v89 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v89 - v20;
  v100 = sub_1A594AE84();
  v95 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v23 = (char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v98 = (char *)&v89 - v25;
  v99 = sub_1A594AD10();
  v102 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v96 = (uint64_t *)((char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v27);
  v97 = (uint64_t *)((char *)&v89 - v28);
  v29 = (uint64_t *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands);
  swift_beginAccess();
  v30 = *v29;
  if ((sub_1A58E37E8(v30) & 1) != 0)
    goto LABEL_9;
  v31 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idleKind);
  if (v31 == 2)
  {
    v32 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_1A55034B8(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v15, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v33 = v103;
    v34 = v104;
    (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v9, v15, v104);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v35 = sub_1A594A74C();
    v36 = sub_1A594C030();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v105[0] = v38;
      *(_DWORD *)v37 = 68158210;
      LODWORD(v106[0]) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v37 + 8) = 256;
      v39 = v32 + *(int *)(v101 + 20);
      LOBYTE(v106[0]) = *(_BYTE *)v39;
      sub_1A594C3CC();
      *(_WORD *)(v37 + 11) = 2082;
      v40 = ConnectionID.debugDescription.getter(*(unsigned int *)(v39 + 4));
      v106[0] = sub_1A589167C(v40, v41, v105);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v35, v36, "[%.*hhx-%{public}s] No idle kind set.", (uint8_t *)v37, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v38, -1, -1);
      MEMORY[0x1A85B1964](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v103 + 8))(v9, v104);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v34);
    }
LABEL_9:
    Timer.cancel()();
    return;
  }
  if ((v31 & 1) == 0)
  {
    v104 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idleTimer);
    v42 = v97;
    *v97 = 2;
    v43 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v102 + 104);
    v44 = v99;
    v43(v42, *MEMORY[0x1E0DEF4A0], v99);
    v45 = (void *)swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1A594AE6C();
    v46 = (uint64_t)v98;
    sub_1A594AE78();
    v47 = *(void (**)(char *, uint64_t))(v95 + 8);
    v48 = v100;
    v47(v23, v100);
    v49 = (uint64_t)v96;
    *v96 = 100;
    v43((_QWORD *)v49, *MEMORY[0x1E0DEF490], v44);
    v50 = sub_1A5893E40;
LABEL_7:
    Timer.cancelPreviousAndAsync(at:leeway:closure:)(v46, v49, (uint64_t)v50, v45);
    v51 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
    v51(v49, v44);
    v47((char *)v46, v48);
    swift_release();
    v51((uint64_t)v42, v44);
    swift_release();
    return;
  }
  v52 = v1;
  if (!*(_QWORD *)(v30 + 16) || *(_BYTE *)(v30 + 56) != 2)
    goto LABEL_22;
  v53 = *(unsigned __int8 *)(v30 + 32);
  v91 = *(unsigned int *)(v30 + 36);
  v54 = *(_QWORD *)(v30 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v55 = static MonotonicTime.now()();
  v56 = v55 - v54;
  if (v55 >= v54)
  {
    if ((uint64_t)(v55 - v54) < 0)
    {
LABEL_38:
      __break(1u);
      return;
    }
  }
  else
  {
    if ((uint64_t)(v54 - v55) < 0)
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    v56 = v55 - v54;
  }
  v57 = round((double)v56 / 1000000000.0);
  if ((~*(_QWORD *)&v57 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v57 <= -9.22337204e18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v57 >= 9.22337204e18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v90 = v53;
  if (__OFADD__((uint64_t)v57, 60))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v52 = v1;
  v58 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idleRefreshInterval);
  if (v58 >= (uint64_t)v57 + 60)
  {
    v100 = (uint64_t)v57;
    v102 = v58;
    v74 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_1A55034B8(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v21, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v76 = v103;
    v75 = v104;
    v77 = v92;
    (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v92, v21, v104);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_retain_n();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v78 = sub_1A594A74C();
    v79 = sub_1A594C000();
    v80 = v79;
    if (os_log_type_enabled(v78, v79))
    {
      v81 = swift_slowAlloc();
      v99 = swift_slowAlloc();
      v105[0] = v99;
      *(_DWORD *)v81 = 68158978;
      LODWORD(v106[0]) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v81 + 8) = 256;
      v82 = *(int *)(v101 + 20);
      LODWORD(v101) = v80;
      v83 = v74 + v82;
      LOBYTE(v106[0]) = *(_BYTE *)(v74 + v82);
      sub_1A594C3CC();
      *(_WORD *)(v81 + 11) = 2082;
      v84 = ConnectionID.debugDescription.getter(*(unsigned int *)(v83 + 4));
      v106[0] = sub_1A589167C(v84, v85, v105);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v81 + 21) = 2082;
      v86 = Tag.debugDescription.getter(v90 | (v91 << 32));
      v106[0] = sub_1A589167C(v86, v87, v105);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v81 + 31) = 2048;
      v106[0] = v100;
      sub_1A594C3CC();
      *(_WORD *)(v81 + 41) = 2048;
      swift_release();
      v106[0] = v102;
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, v78, (os_log_type_t)v101, "[%.*hhx-%{public}s] %{public}s IDLE is %ld seconds old (< %ld). Not refreshing.", (uint8_t *)v81, 0x33u);
      v88 = v99;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v88, -1, -1);
      MEMORY[0x1A85B1964](v81, -1, -1);

      (*(void (**)(char *, uint64_t))(v103 + 8))(v92, v104);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v75);
    }
    return;
  }
  swift_bridgeObjectRelease();
LABEL_22:
  v59 = v52 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  v60 = v93;
  sub_1A55034B8(v59, v93, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  sub_1A55034B8(v60, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    memcpy(v105, v4, 0x15AuLL);
    sub_1A5891E0C((__int128 *)&v105[23], (uint64_t)v106);
    if (sub_1A5891E48((uint64_t)v106) == 2)
    {
      sub_1A5892220((uint64_t)v106);
      sub_1A5891E54((uint64_t)v105);
      sub_1A55034FC(v60, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      sub_1A5890E48();
      v104 = *(_QWORD *)(v52 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idleTimer);
      v42 = v97;
      *v97 = *(_QWORD *)(v52 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idleRefreshInterval);
      v61 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v102 + 104);
      v44 = v99;
      v61(v42, *MEMORY[0x1E0DEF4A0], v99);
      v45 = (void *)swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_1A594AE6C();
      v46 = (uint64_t)v98;
      sub_1A594AE78();
      v47 = *(void (**)(char *, uint64_t))(v95 + 8);
      v48 = v100;
      v47(v23, v100);
      v49 = (uint64_t)v96;
      *v96 = 100;
      v61((_QWORD *)v49, *MEMORY[0x1E0DEF490], v44);
      v50 = sub_1A5893E20;
      goto LABEL_7;
    }
    sub_1A5891E54((uint64_t)v105);
  }
  else
  {
    sub_1A55034FC((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  }
  sub_1A55034FC(v60, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  v62 = v52 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  sub_1A55034B8(v52 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v18, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  v63 = v103;
  v64 = v94;
  v65 = v18;
  v66 = v104;
  (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v94, v65, v104);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v67 = sub_1A594A74C();
  v68 = sub_1A594C00C();
  if (os_log_type_enabled(v67, v68))
  {
    v69 = swift_slowAlloc();
    v70 = swift_slowAlloc();
    v105[0] = v70;
    *(_DWORD *)v69 = 68158210;
    LODWORD(v106[0]) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v69 + 8) = 256;
    v71 = v62 + *(int *)(v101 + 20);
    LOBYTE(v106[0]) = *(_BYTE *)v71;
    sub_1A594C3CC();
    *(_WORD *)(v69 + 11) = 2082;
    v72 = ConnectionID.debugDescription.getter(*(unsigned int *)(v71 + 4));
    v106[0] = sub_1A589167C(v72, v73, v105);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v67, v68, "[%.*hhx-%{public}s] Not sending IDLE. No mailbox selected.", (uint8_t *)v69, 0x15u);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v70, -1, -1);
    MEMORY[0x1A85B1964](v69, -1, -1);

    (*(void (**)(char *, uint64_t))(v63 + 8))(v94, v66);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v66);
  }
}

uint64_t sub_1A588E060(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = v4;
  v38 = a3;
  v39 = a4;
  v37 = a2;
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s6LoggerVMa_0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v36 - v16;
  if (!(a1 >> 62))
    return sub_1A58C1594(a1 & 0x101FF);
  if (a1 >> 62 == 1)
  {
    v18 = v5 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_1A55034B8(v5 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v14, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v19 = sub_1A594A74C();
    v20 = sub_1A594C000();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v41 = v36;
      *(_DWORD *)v21 = 68158210;
      LODWORD(v40) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v21 + 8) = 256;
      v22 = v18 + *(int *)(v11 + 20);
      LOBYTE(v40) = *(_BYTE *)v22;
      sub_1A594C3CC();
      *(_WORD *)(v21 + 11) = 2082;
      v23 = ConnectionID.debugDescription.getter(*(unsigned int *)(v22 + 4));
      v40 = sub_1A589167C(v23, v24, &v41);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v19, v20, "[%.*hhx-%{public}s] Finishing push registration.", (uint8_t *)v21, 0x15u);
      v25 = v36;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v25, -1, -1);
      MEMORY[0x1A85B1964](v21, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                  + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_finishPushRegistration))(a1, v37, v38, v39);
  }
  v27 = v38 | v37 | v39;
  if (a1 == 0x8000000000000000 && !v27)
  {
    v28 = *(_QWORD *)(v5 + 16);
    v29 = v28 + OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration;
    v30 = *(unsigned __int8 *)(v29 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 28));
    if (v30 >> 6)
    {
      if (v30 >> 6 != 1)
      {
        v31 = 1;
        sub_1A58EF790();
        goto LABEL_21;
      }
      LOBYTE(v30) = v30 & 0x3F;
    }
    sub_1A58EF56C(v29, v30, v28 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger);
    v31 = 0;
LABEL_21:
    sub_1A55034B8(v28 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)v17, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v33 = (*(unsigned __int8 *)(v12 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v34 = swift_allocObject();
    *(_BYTE *)(v34 + 16) = v31;
    sub_1A54E3394((uint64_t)v17, v34 + v33, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v35 = swift_retain();
    sub_1A58C12F0(v35, (uint64_t)sub_1A5893F38, v34);
    swift_release();
    return swift_release_n();
  }
  if (a1 == 0x8000000000000001 && !v27)
    return sub_1A588EADC();
  if (a1 == 0x8000000000000002 && !v27)
  {
    v32 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1A58C180C((uint64_t)sub_1A5893EC0, v32);
    return swift_release_n();
  }
  if (a1 != 0x8000000000000003 || v27)
    return sub_1A58C1AB0();
  else
    return sub_1A588EFD0();
}

uint64_t sub_1A588E558()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t (*v11)@<X0>(uint64_t *@<X8>);
  _QWORD *v12;

  v1 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v6 = &v10[-v5];
  v7 = (uint64_t)v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  v8 = (uint64_t)v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_1A55034B8(v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  v11 = sub_1A58941DC;
  v12 = v0;
  swift_retain();
  sub_1A58AEE10((void (*)(_QWORD *__return_ptr, uint64_t))sub_1A589422C, (uint64_t)v10, (uint64_t)sub_1A58941F4, v0, v7);
  sub_1A58B6F80(v7, v6, (uint64_t)v0);
  sub_1A55034B8(v8, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  swift_beginAccess();
  sub_1A5891DB0((uint64_t)v6, v8);
  swift_endAccess();
  sub_1A587D570(v3);
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  sub_1A55034FC((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  return swift_release();
}

uint64_t sub_1A588E6D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = sub_1A589B6E0();
  v7 = OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration;
  if (v6 == 1)
  {
    v8 = 0;
    v9 = 0;
    v10 = 0x8000000000000000;
  }
  else
  {
    LODWORD(v10) = v4;
    v8 = v5;
    v9 = v6;
    if (*(char *)(v3 + v7 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 28)) >= 0)
      v10 = v10 | 0x4000000000000000;
    else
      v10 = v10;
  }
  result = sub_1A589B4B8();
  *a1 = v10;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = result;
  a1[4] = v12;
  a1[5] = v13;
  return result;
}

uint64_t sub_1A588E77C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  char *v36;
  char *v37;
  uint64_t v38;
  __int128 v39[13];
  __int128 v40[12];

  v1 = v0;
  v2 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v2);
  v37 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v35 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v35 - v8;
  v10 = type metadata accessor for UnauthenticatedStateWithTasks();
  MEMORY[0x1E0C80A78](v10);
  v38 = (uint64_t)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A594AED8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (_QWORD *)((char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(v1 + 24);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v13 + 104))(v16, *MEMORY[0x1E0DEF740], v12, v14);
  v18 = v17;
  LOBYTE(v17) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v16, v12);
  if ((v17 & 1) != 0)
  {
    v20 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    sub_1A55034B8(v20, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v36 = v6;
      sub_1A54E3394((uint64_t)v9, v38, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
      v21 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
      sub_1A5894234((uint64_t)v39);
      sub_1A5862234(v39, (uint64_t)v40);
      swift_retain();
      sub_1A58F5240(v40, v21);
      v23 = *(_QWORD *)(v22 + 16);
      if (v23)
      {
        v35[0] = v22;
        v35[1] = v2;
        v24 = (uint64_t *)(v22 + 56);
        do
        {
          v25 = *(v24 - 3);
          v26 = *(v24 - 2);
          v28 = *(v24 - 1);
          v27 = *v24;
          sub_1A5893FE8(v25);
          sub_1A588E060(v25, v26, v28, v27);
          sub_1A5894020(v25);
          v24 += 4;
          --v23;
        }
        while (v23);
      }
      swift_release();
      v31 = (uint64_t)v37;
      swift_bridgeObjectRelease();
      v32 = v38;
      v33 = (uint64_t)v36;
      sub_1A55034B8(v38, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
      swift_storeEnumTagMultiPayload();
      sub_1A55034B8(v20, v31, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      swift_beginAccess();
      sub_1A5891DB0(v33, v20);
      swift_endAccess();
      sub_1A587D570(v31);
      sub_1A55034FC(v33, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      v34 = sub_1A55034FC(v31, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      sub_1A588E558(v34);
      v30 = v32;
      v29 = type metadata accessor for UnauthenticatedStateWithTasks;
    }
    else
    {
      v29 = type metadata accessor for ConnectionState;
      v30 = (uint64_t)v9;
    }
    return sub_1A55034FC(v30, (uint64_t (*)(_QWORD))v29);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A588EADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  void (*v19)(char *, char *, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  id v40;
  char *v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_1A594AD34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v52 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594AD70();
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  MEMORY[0x1E0C80A78](v5);
  v49 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594AD40();
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A594A764();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  sub_1A55034B8(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v16, v18);
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v46 = v10;
  v19(v13, v16, v10);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v20 = sub_1A594A74C();
  v21 = sub_1A594C000();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v45 = v2;
    v23 = v22;
    v24 = swift_slowAlloc();
    v44 = v3;
    v25 = v24;
    aBlock[0] = v24;
    *(_DWORD *)v23 = 68158210;
    LODWORD(v53) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 8) = 256;
    v26 = v17 + *(int *)(v14 + 20);
    LOBYTE(v53) = *(_BYTE *)v26;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 11) = 2082;
    v27 = ConnectionID.debugDescription.getter(*(unsigned int *)(v26 + 4));
    v53 = sub_1A589167C(v27, v28, aBlock);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v20, v21, "[%.*hhx-%{public}s] Requesting credentials.", (uint8_t *)v23, 0x15u);
    swift_arrayDestroy();
    v29 = v25;
    v3 = v44;
    MEMORY[0x1A85B1964](v29, -1, -1);
    v30 = v23;
    v2 = v45;
    MEMORY[0x1A85B1964](v30, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v46);
  v32 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_makeCredentials);
  v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_makeCredentials + 8);
  sub_1A587C148();
  v34 = v47;
  v33 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v9, *MEMORY[0x1E0DEF520], v48);
  v35 = (void *)sub_1A594C0C0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v33);
  v36 = *(void **)(v1 + 24);
  v37 = swift_allocObject();
  swift_weakInit();
  v38 = (_QWORD *)swift_allocObject();
  v38[2] = v32;
  v38[3] = v31;
  v38[4] = v36;
  v38[5] = v37;
  aBlock[4] = (uint64_t)sub_1A5893F7C;
  aBlock[5] = (uint64_t)v38;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A587D408;
  aBlock[3] = (uint64_t)&block_descriptor_1455;
  v39 = _Block_copy(aBlock);
  swift_retain();
  v40 = v36;
  swift_retain();
  v41 = v49;
  sub_1A594AD4C();
  v53 = MEMORY[0x1E0DEE9D8];
  sub_1A55E1698((unint64_t *)&unk_1EE7A19D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A08);
  sub_1A5891D64();
  v42 = v52;
  sub_1A594C5C4();
  MEMORY[0x1A85AE508](0, v41, v42, v39);
  _Block_release(v39);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v42, v2);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v41, v51);
  swift_release();
  return swift_release();
}

uint64_t sub_1A588EFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  void (*v19)(char *, char *, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  id v40;
  char *v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_1A594AD34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v52 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594AD70();
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  MEMORY[0x1E0C80A78](v5);
  v49 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594AD40();
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A594A764();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  sub_1A55034B8(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v16, v18);
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v46 = v10;
  v19(v13, v16, v10);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v20 = sub_1A594A74C();
  v21 = sub_1A594C000();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v45 = v2;
    v23 = v22;
    v24 = swift_slowAlloc();
    v44 = v3;
    v25 = v24;
    aBlock[0] = v24;
    *(_DWORD *)v23 = 68158210;
    LODWORD(v53) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 8) = 256;
    v26 = v17 + *(int *)(v14 + 20);
    LOBYTE(v53) = *(_BYTE *)v26;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 11) = 2082;
    v27 = ConnectionID.debugDescription.getter(*(unsigned int *)(v26 + 4));
    v53 = sub_1A589167C(v27, v28, aBlock);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v20, v21, "[%.*hhx-%{public}s] Requesting push information.", (uint8_t *)v23, 0x15u);
    swift_arrayDestroy();
    v29 = v25;
    v3 = v44;
    MEMORY[0x1A85B1964](v29, -1, -1);
    v30 = v23;
    v2 = v45;
    MEMORY[0x1A85B1964](v30, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v46);
  v32 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_getPushInformation);
  v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_getPushInformation + 8);
  sub_1A587C148();
  v34 = v47;
  v33 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v9, *MEMORY[0x1E0DEF520], v48);
  v35 = (void *)sub_1A594C0C0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v33);
  v36 = *(void **)(v1 + 24);
  v37 = swift_allocObject();
  swift_weakInit();
  v38 = (_QWORD *)swift_allocObject();
  v38[2] = v32;
  v38[3] = v31;
  v38[4] = v36;
  v38[5] = v37;
  aBlock[4] = (uint64_t)sub_1A5894090;
  aBlock[5] = (uint64_t)v38;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A587D408;
  aBlock[3] = (uint64_t)&block_descriptor_1471;
  v39 = _Block_copy(aBlock);
  swift_retain();
  v40 = v36;
  swift_retain();
  v41 = v49;
  sub_1A594AD4C();
  v53 = MEMORY[0x1E0DEE9D8];
  sub_1A55E1698((unint64_t *)&unk_1EE7A19D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A08);
  sub_1A5891D64();
  v42 = v52;
  sub_1A594C5C4();
  MEMORY[0x1A85AE508](0, v41, v42, v39);
  _Block_release(v39);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v42, v2);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v41, v51);
  swift_release();
  return swift_release();
}

uint64_t sub_1A588F4C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = sub_1A589B6E0();
  v7 = OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration;
  if (v6 == 1)
  {
    v8 = 0;
    v9 = 0;
    v10 = 0x8000000000000000;
  }
  else
  {
    LODWORD(v10) = v4;
    v8 = v5;
    v9 = v6;
    if (*(char *)(v3 + v7 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 28)) >= 0)
      v10 = v10 | 0x4000000000000000;
    else
      v10 = v10;
  }
  result = sub_1A589B4B8();
  *a2 = v10;
  a2[1] = v8;
  a2[2] = v9;
  a2[3] = result;
  a2[4] = v12;
  a2[5] = v13;
  return result;
}

uint64_t sub_1A588F56C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = sub_1A594A764();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_enqueuedEvents);
  swift_beginAccess();
  v10 = *v9;
  if (*v9)
  {
    *v9 = 0;
    if (*(_QWORD *)(v10 + 16)
      && (v11 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_delegate,
          MEMORY[0x1A85B1A0C](v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_delegate)))
    {
      v12 = *(_QWORD *)(v11 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(v10, ObjectType, v12);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v15 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_1A55034B8(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v8, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v16 = sub_1A594A74C();
    v17 = sub_1A594C018();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v25 = v19;
      *(_DWORD *)v18 = 68158210;
      LODWORD(v24) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v18 + 8) = 256;
      v20 = v15 + *(int *)(v6 + 20);
      LOBYTE(v24) = *(_BYTE *)v20;
      sub_1A594C3CC();
      *(_WORD *)(v18 + 11) = 2082;
      v21 = ConnectionID.debugDescription.getter(*(unsigned int *)(v20 + 4));
      v24 = sub_1A589167C(v21, v22, &v25);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v16, v17, "[%.*hhx-%{public}s] Trying to send nil enqueued events.", (uint8_t *)v18, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v19, -1, -1);
      MEMORY[0x1A85B1964](v18, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1A588F86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v17[0] = a2;
  v5 = sub_1A594AD34();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A594AD70();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a1;
  aBlock[4] = sub_1A5893FE0;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A587D408;
  aBlock[3] = &block_descriptor_1464;
  v15 = _Block_copy(aBlock);
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594AD4C();
  v17[1] = MEMORY[0x1E0DEE9D8];
  sub_1A55E1698((unint64_t *)&unk_1EE7A19D0, v6, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A08);
  sub_1A5891D64();
  sub_1A594C5C4();
  MEMORY[0x1A85AE508](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1A588FA48(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A588FAA4(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A588FAA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  char v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)();
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68[12];

  v2 = v1;
  v59 = a1;
  v3 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v60 = (uint64_t)&v49 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v49 - v9;
  v58 = type metadata accessor for UnauthenticatedStateWithTasks();
  MEMORY[0x1E0C80A78](v58);
  v61 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A594AED8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (uint64_t *)((char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(v2 + 24);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v13 + 104))(v16, *MEMORY[0x1E0DEF740], v12, v14);
  v18 = v17;
  v19 = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v16, v12);
  if ((v19 & 1) != 0)
  {
    v21 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    sub_1A55034B8(v21, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v55 = v21;
      v56 = v3;
      v22 = v61;
      sub_1A54E3394((uint64_t)v10, v61, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
      v23 = *(_QWORD *)(v2 + 16);
      v24 = sub_1A589B6E0();
      v27 = OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration;
      v57 = v5;
      v53 = v25;
      v54 = v24;
      v52 = v26;
      if (v26 == 1)
      {
        v28 = 0;
        v29 = 0;
        v30 = 0x8000000000000000;
      }
      else
      {
        v33 = v24;
        v28 = v25;
        v34 = v26;
        if (*(char *)(v23 + v27 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 28)) >= 0)
          v30 = v33 | 0x4000000000000000;
        else
          v30 = v33;
        v29 = v34;
        v5 = v57;
      }
      v35 = sub_1A589B4B8();
      v36 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
      *(_QWORD *)&v62 = v59;
      *((_QWORD *)&v62 + 1) = v30;
      v63 = v28;
      v64 = v29;
      v59 = v35;
      v65 = v35;
      v66 = v37;
      v50 = v38;
      v51 = v37;
      v67 = v38;
      sub_1A571EB40((uint64_t)&v62);
      sub_1A5862234(&v62, (uint64_t)v68);
      swift_retain();
      sub_1A58F5240(v68, v36);
      v40 = *(_QWORD *)(v39 + 16);
      if (v40)
      {
        v41 = (uint64_t *)(v39 + 56);
        do
        {
          v42 = *(v41 - 3);
          v43 = *(v41 - 2);
          v45 = *(v41 - 1);
          v44 = *v41;
          sub_1A5893FE8(v42);
          sub_1A588E060(v42, v43, v45, v44);
          sub_1A5894020(v42);
          v41 += 4;
          --v40;
        }
        while (v40);
        swift_release();
        v5 = v57;
        v22 = v61;
      }
      else
      {
        swift_release();
      }
      swift_bridgeObjectRelease();
      sub_1A562FDD4(v54, v53, v52);
      sub_1A562FDD4(v59, v51, v50);
      v46 = v60;
      sub_1A55034B8(v22, v60, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
      swift_storeEnumTagMultiPayload();
      v47 = v55;
      sub_1A55034B8(v55, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      swift_beginAccess();
      sub_1A5891DB0(v46, v47);
      swift_endAccess();
      sub_1A587D570(v5);
      sub_1A55034FC(v46, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      v48 = sub_1A55034FC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      sub_1A588E558(v48);
      v32 = v22;
      v31 = type metadata accessor for UnauthenticatedStateWithTasks;
    }
    else
    {
      v31 = type metadata accessor for ConnectionState;
      v32 = (uint64_t)v10;
    }
    return sub_1A55034FC(v32, (uint64_t (*)(_QWORD))v31);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A588FEB4(void (*a1)(uint64_t, uint64_t), uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  id v11;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v11 = a3;
  swift_retain();
  a1(a6, v10);
  return swift_release();
}

uint64_t sub_1A588FF28(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v17[0] = a2;
  v5 = sub_1A594AD34();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A594AD70();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  sub_1A55032A0((uint64_t)a1, v14 + 24, &qword_1EE795D48);
  aBlock[4] = sub_1A589413C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A587D408;
  aBlock[3] = &block_descriptor_1480;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1A5894148(a1);
  sub_1A594AD4C();
  v17[1] = MEMORY[0x1E0DEE9D8];
  sub_1A55E1698((unint64_t *)&unk_1EE7A19D0, v6, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A08);
  sub_1A5891D64();
  sub_1A594C5C4();
  MEMORY[0x1A85AE508](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1A589011C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A5890178(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A5890178(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)();
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[8];
  __int128 v55[12];

  v2 = v1;
  sub_1A55032A0(a1, (uint64_t)v54, &qword_1EE795D48);
  v3 = v54[1];
  v42 = v54[2];
  v43 = v54[0];
  v40 = v54[4];
  v41 = v54[3];
  v38 = v54[6];
  v39 = v54[5];
  v37 = v54[7];
  v4 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v4);
  v45 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v44 = (uint64_t)&v36 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - v9;
  v11 = type metadata accessor for UnauthenticatedStateWithTasks();
  MEMORY[0x1E0C80A78](v11);
  v46 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A594AED8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (uint64_t *)((char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(void **)(v2 + 24);
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v14 + 104))(v17, *MEMORY[0x1E0DEF740], v13, v15);
  v19 = v18;
  LOBYTE(v18) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v17, v13);
  if ((v18 & 1) != 0)
  {
    v21 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    sub_1A55034B8(v21, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A54E3394((uint64_t)v10, v46, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
      v22 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
      *(_QWORD *)&v47 = v43;
      *((_QWORD *)&v47 + 1) = v3;
      v48 = v42;
      v49 = v41;
      v50 = v40;
      v51 = v39;
      v52 = v38;
      v53 = v37;
      sub_1A58941D0((uint64_t)&v47);
      sub_1A5862234(&v47, (uint64_t)v55);
      swift_retain();
      sub_1A58F5240(v55, v22);
      v24 = *(_QWORD *)(v23 + 16);
      if (v24)
      {
        v42 = v23;
        v43 = v4;
        v25 = (uint64_t *)(v23 + 56);
        do
        {
          v26 = *(v25 - 3);
          v27 = *(v25 - 2);
          v29 = *(v25 - 1);
          v28 = *v25;
          sub_1A5893FE8(v26);
          sub_1A588E060(v26, v27, v29, v28);
          sub_1A5894020(v26);
          v25 += 4;
          --v24;
        }
        while (v24);
      }
      swift_release();
      swift_bridgeObjectRelease();
      v32 = v46;
      v33 = v44;
      sub_1A55034B8(v46, v44, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
      swift_storeEnumTagMultiPayload();
      v34 = v45;
      sub_1A55034B8(v21, v45, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      swift_beginAccess();
      sub_1A5891DB0(v33, v21);
      swift_endAccess();
      sub_1A587D570(v34);
      sub_1A55034FC(v33, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      v35 = sub_1A55034FC(v34, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      sub_1A588E558(v35);
      v31 = v32;
      v30 = type metadata accessor for UnauthenticatedStateWithTasks;
    }
    else
    {
      v30 = type metadata accessor for ConnectionState;
      v31 = (uint64_t)v10;
    }
    return sub_1A55034FC(v31, (uint64_t (*)(_QWORD))v30);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A589053C(char *a1, char *a2)
{
  return sub_1A5862D94(*a1, *a2);
}

uint64_t sub_1A5890548()
{
  sub_1A594CE64();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A58905AC()
{
  sub_1A594B1D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A58905E4()
{
  sub_1A594CE64();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A5890644@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A594CB28();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1A58906A0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 1886351214;
  if (*v1)
    v2 = 1701602409;
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1A58906C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[12];
  int v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[5];
  _BYTE v58[352];

  v1 = v0;
  v53 = sub_1A594A62C();
  v49 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v50 = &v42[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v51 = type metadata accessor for OutboundContent(0);
  MEMORY[0x1E0C80A78](v51);
  v52 = &v42[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v54 = sub_1A594A764();
  v4 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v42[-v6];
  v8 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v42[-v10];
  v12 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v12);
  v14 = &v42[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v55 = v1;
  v15 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_1A55034B8(v15, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
    return sub_1A55034FC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  v47 = v11;
  v48 = v8;
  v17 = v53;
  v16 = v54;
  memcpy(v58, v14, 0x15AuLL);
  sub_1A5891E54((uint64_t)v58);
  v18 = v55;
  v19 = v55 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands;
  result = swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v19 + 16))
  {
    v21 = swift_retain();
    v46 = sub_1A5892994(v21);
    swift_release();
    v22 = v18 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    v23 = (uint64_t)v47;
    sub_1A55034B8(v18 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v47, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v24 = v7;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 32))(v7, v23, v16);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v25 = sub_1A594A74C();
    v26 = sub_1A594C00C();
    v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v28 = swift_slowAlloc();
      v45 = v24;
      v29 = v28;
      v44 = swift_slowAlloc();
      v57[0] = v44;
      *(_DWORD *)v29 = 68158466;
      LODWORD(v56) = 2;
      v47 = (_BYTE *)v4;
      sub_1A594C3CC();
      *(_WORD *)(v29 + 8) = 256;
      v43 = v27;
      v30 = v22 + *(int *)(v48 + 20);
      LOBYTE(v56) = *(_BYTE *)v30;
      sub_1A594C3CC();
      *(_WORD *)(v29 + 11) = 2082;
      v31 = ConnectionID.debugDescription.getter(*(unsigned int *)(v30 + 4));
      v56 = sub_1A589167C(v31, v32, v57);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 21) = 2082;
      v33 = v46;
      v34 = Tag.debugDescription.getter(v46 & 0xFFFFFFFF000000FFLL);
      v56 = sub_1A589167C(v34, v35, v57);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v25, (os_log_type_t)v43, "[%.*hhx-%{public}s] Sending NOOP as %{public}s", (uint8_t *)v29, 0x1Fu);
      v36 = v44;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v36, -1, -1);
      MEMORY[0x1A85B1964](v29, -1, -1);

      (*((void (**)(_BYTE *, uint64_t))v47 + 1))(v45, v54);
      v37 = v17;
      v38 = v49;
      v39 = (uint64_t)v50;
      v40 = (uint64_t)v52;
    }
    else
    {

      swift_release_n();
      (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v24, v16);
      v38 = v49;
      v37 = v17;
      v39 = (uint64_t)v50;
      v40 = (uint64_t)v52;
      v33 = v46;
    }
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1A589AF40(v33, v40);
    sub_1A55034FC(v40, type metadata accessor for OutboundContent);
    OSSignpostID.init(engine:kind:connectionID:)();
    sub_1A58C1000(v39);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v39, v37);
    return sub_1A588D388(v41);
  }
  return result;
}

uint64_t sub_1A5890E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[2];

  v1 = sub_1A594A62C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OutboundContent(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594A764();
  v9 = *(_QWORD *)(v8 - 8);
  v42 = v8;
  v43 = v9;
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v10);
  v40 = (char *)&v35 - v11;
  v41 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v41);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - v13;
  v15 = swift_retain();
  v37 = sub_1A589281C(v15);
  v38 = v1;
  v39 = v2;
  swift_release();
  v16 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  sub_1A55034B8(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v14, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v14, v42);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v17 = sub_1A594A74C();
  v18 = sub_1A594C00C();
  v19 = os_log_type_enabled(v17, v18);
  v20 = v41;
  if (v19)
  {
    v21 = swift_slowAlloc();
    v36 = v4;
    v22 = v21;
    v35 = swift_slowAlloc();
    v45[0] = v35;
    *(_DWORD *)v22 = 68158466;
    LODWORD(v44) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v22 + 8) = 256;
    v23 = v16 + *(int *)(v20 + 20);
    LOBYTE(v44) = *(_BYTE *)v23;
    sub_1A594C3CC();
    *(_WORD *)(v22 + 11) = 2082;
    v24 = ConnectionID.debugDescription.getter(*(unsigned int *)(v23 + 4));
    v44 = sub_1A589167C(v24, v25, v45);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 21) = 2082;
    v26 = v18;
    v27 = v37;
    v28 = Tag.debugDescription.getter(v37 & 0xFFFFFFFF000000FFLL);
    v44 = sub_1A589167C(v28, v29, v45);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v17, v26, "[%.*hhx-%{public}s] Sending IDLE as %{public}s", (uint8_t *)v22, 0x1Fu);
    v30 = v35;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v30, -1, -1);
    v31 = v22;
    v4 = v36;
    MEMORY[0x1A85B1964](v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v42);
    v32 = v38;
    v33 = v39;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v42);
    v32 = v38;
    v33 = v39;
    v27 = v37;
  }
  swift_storeEnumTagMultiPayload();
  sub_1A589AF40(v27, v7);
  sub_1A55034FC((uint64_t)v7, type metadata accessor for OutboundContent);
  OSSignpostID.init(engine:kind:connectionID:)();
  sub_1A58C1000((uint64_t)v4);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v4, v32);
}

uint64_t sub_1A589145C(uint64_t a1, void (*a2)(void))
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    a2();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A58914B4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - v6;
  swift_beginAccess();
  swift_storeEnumTagMultiPayload();
  v8 = sub_1A58D76D4();
  sub_1A55034FC((uint64_t)v7, type metadata accessor for ClientCommand);
  swift_storeEnumTagMultiPayload();
  sub_1A58D7CA8();
  v10 = v9;
  sub_1A55034FC((uint64_t)v4, type metadata accessor for ClientCommand);
  sub_1A58E3844(a1, v8, v10, 0, 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1A589160C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1A589167C(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1A594C3CC();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1A589167C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1A589174C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1A558CC98((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1A558CC98((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1A589174C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A594C420();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1A5891904(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1A594C7D4();
  if (!v8)
  {
    sub_1A594C9B4();
    __break(1u);
LABEL_17:
    result = sub_1A594CA68();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1A5891904(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1A5891998(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A5891B70(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1A5891B70(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A5891998(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1A5891B0C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1A594C72C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1A594C9B4();
      __break(1u);
LABEL_10:
      v2 = sub_1A594B640();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1A594CA68();
    __break(1u);
LABEL_14:
    result = sub_1A594C9B4();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1A5891B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B370);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size_0(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A5891B70(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B370);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

unint64_t sub_1A5891CBC(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x1A85B197C](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x1A85B197C](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5891D44()
{
  uint64_t v0;

  return sub_1A587E144(v0);
}

unint64_t sub_1A5891D64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A40D0;
  if (!qword_1EE7A40D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0((uint64_t *)&unk_1EE7A1A08);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7A40D0);
  }
  return result;
}

uint64_t sub_1A5891DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConnectionState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5891DF4(unint64_t a1)
{
  return sub_1A587E918(a1);
}

uint64_t sub_1A5891E0C(__int128 *a1, uint64_t a2)
{
  __swift_memcpy162_8(a2, a1);
  return a2;
}

uint64_t sub_1A5891E48(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 160) >> 14;
}

uint64_t sub_1A5891E54(uint64_t a1)
{
  uint64_t v2;
  unsigned __int16 v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v17 = *(_QWORD *)(a1 + 192);
  v18 = *(_QWORD *)(a1 + 184);
  v15 = *(_QWORD *)(a1 + 208);
  v16 = *(_QWORD *)(a1 + 200);
  v13 = *(_QWORD *)(a1 + 224);
  v14 = *(_QWORD *)(a1 + 216);
  v11 = *(_QWORD *)(a1 + 240);
  v12 = *(_QWORD *)(a1 + 232);
  v10 = *(_OWORD *)(a1 + 248);
  v8 = *(_OWORD *)(a1 + 280);
  v9 = *(_OWORD *)(a1 + 264);
  v7 = *(_OWORD *)(a1 + 296);
  v6 = *(_OWORD *)(a1 + 312);
  v2 = *(_QWORD *)(a1 + 336);
  v5 = *(_QWORD *)(a1 + 328);
  v3 = *(_WORD *)(a1 + 344);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5891FDC(v18, v17, v16, v15, v14, v13, v12, v11, v10, *((uint64_t *)&v10 + 1), v9, DWORD2(v9), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5,
    v2,
    v3);
  return a1;
}

unint64_t sub_1A5891FDC(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int16 a21)
{
  int v23;

  v23 = a21 >> 14;
  switch(v23)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 1:
      swift_bridgeObjectRelease();
      sub_1A5892174(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 0:
      return sub_1A5892104(result, a2, a3, a4, a5);
  }
  return result;
}

unint64_t sub_1A5892104(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_1A5892148(a3, a4, a5);
  }
  return result;
}

unint64_t sub_1A5892148(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1A5862B80(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A5892174(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10)
{
  int v10;

  v10 = (a10 >> 21) & 7;
  if (v10 == 3)
    return sub_1A58921D8(result, a2, a3, a4);
  if (v10 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A58921D8(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 0xFF)
    return sub_1A58921EC(result, a2, a3, a4);
  return result;
}

unint64_t sub_1A58921EC(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_1A5862B80(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A5892220(uint64_t result)
{
  *(_WORD *)(result + 160) &= 0x3FFFu;
  return result;
}

uint64_t sub_1A5892230(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v9 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A58922E8(v12, v11, v2, v3, v4, v5, v6, v8, v7, v9);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A58922E8(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10)
{
  int v10;

  v10 = (a10 >> 21) & 7;
  if (v10 == 3)
    return sub_1A5892354(result, a2, a3, a4);
  if (v10 == 2)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

unint64_t sub_1A5892354(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 0xFF)
    return sub_1A5892368(result, a2, a3, a4);
  return result;
}

unint64_t sub_1A5892368(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_1A5862270(result);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A589239C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v6 = a1;
    v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v23 = sub_1A594CA38();
  swift_bridgeObjectRelease();
  if (v23 < v5)
    goto LABEL_31;
LABEL_4:
  v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v10 = sub_1A594CA38();
    swift_bridgeObjectRelease();
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v14 = sub_1A594CA38();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v7 = *v4;
  if (*v4 >> 62)
    goto LABEL_34;
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_36;
LABEL_8:
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if (v7 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7 = MEMORY[0x1A85AEC10](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = (_QWORD *)(v13 + 32 + 8 * v6);
  sub_1A594AC8C();
  swift_arrayDestroy();
  if (!v8)
  {
LABEL_28:
    *v15 = v3;
    return sub_1A594B988();
  }
  if (!(v7 >> 62))
  {
    v16 = *(_QWORD *)(v13 + 16);
    v17 = v16 - v5;
    if (!__OFSUB__(v16, v5))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v24 = sub_1A594CA38();
  swift_bridgeObjectRelease();
  v17 = v24 - v5;
  if (__OFSUB__(v24, v5))
    goto LABEL_40;
LABEL_21:
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)(v15 + 1);
    v19 = (char *)(v13 + 32 + 8 * v5);
    if (v15 + 1 != (_QWORD *)v19 || v18 >= &v19[8 * v17])
      memmove(v18, v19, 8 * v17);
    if (!(v7 >> 62))
    {
      v20 = *(_QWORD *)(v13 + 16);
      v21 = v20 + v8;
      if (!__OFADD__(v20, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v21;
        goto LABEL_28;
      }
      goto LABEL_43;
    }
LABEL_41:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v25 = sub_1A594CA38();
    swift_bridgeObjectRelease();
    v21 = v25 + v8;
    if (!__OFADD__(v25, v8))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5892674(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1A58D4330(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(type metadata accessor for CommandConnection.RecentErrors.Error(0) - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A589281C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t result;
  int *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE v16[24];

  v3 = sub_1A594AED8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(void **)(a1 + 24);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x1E0DEF740], v3, v5);
  v9 = v8;
  LOBYTE(v8) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) != 0)
  {
    v11 = (int *)(a1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_commandCounter);
    swift_beginAccess();
    v12 = *v11;
    v13 = (*v11 + 1) & 0xFFFFFF;
    *v11 = v13;
    v14 = *(unsigned int *)(a1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
    swift_beginAccess();
    v15 = v14 | (v13 << 32);
    sub_1A58E3844(v15, MEMORY[0x1E0DEE9E8], MEMORY[0x1E0DEE9E8], 0, 2);
    swift_endAccess();
    if (v1)
    {
      *v11 = v12;
      swift_willThrow();
    }
    swift_endAccess();
    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5892994(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t result;
  int *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v3 = sub_1A594AED8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(a1 + 24);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x1E0DEF740], v3, v5);
  v9 = v8;
  LOBYTE(v8) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) != 0)
  {
    v11 = (int *)(a1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_commandCounter);
    swift_beginAccess();
    v12 = *v11;
    v13 = (*v11 + 1) & 0xFFFFFF;
    *v11 = v13;
    v14 = *(unsigned int *)(a1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) | (unint64_t)(v13 << 32);
    sub_1A58914B4(v14);
    if (v1)
    {
      *v11 = v12;
      swift_willThrow();
    }
    swift_endAccess();
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5892AD4(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

void *sub_1A5892AF8(const void *a1, void *a2)
{
  __swift_memcpy584_8(a2, a1);
  return a2;
}

uint64_t sub_1A5892B34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  return sub_1A55034B8(v3, a2, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
}

uint64_t sub_1A5892B94@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_recentErrors);
  swift_beginAccess();
  *a2 = *v3;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A5892BE8(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A587D980(a1, a2, a3, a4, &OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_recentErrors);
}

uint64_t sub_1A5892C04@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_pathAttributes);
  swift_beginAccess();
  *a2 = *v3;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A5892C58(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A587D980(a1, a2, a3, a4, &OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_pathAttributes);
}

uint64_t sub_1A5892C74()
{
  return type metadata accessor for CommandConnection();
}

uint64_t type metadata accessor for CommandConnection()
{
  uint64_t result;

  result = qword_1EE797EF8;
  if (!qword_1EE797EF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5892CB8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = _s6LoggerVMa_0();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ConnectionState();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CommandConnection.IdleKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5892E20 + 4 * byte_1A59DE017[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5892E54 + 4 * byte_1A59DE012[v4]))();
}

uint64_t sub_1A5892E54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5892E5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5892E64);
  return result;
}

uint64_t sub_1A5892E70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5892E78);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5892E7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5892E84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CommandConnection.IdleKind()
{
  return &type metadata for CommandConnection.IdleKind;
}

unint64_t sub_1A5892EA4()
{
  unint64_t result;

  result = qword_1EE7AACB8;
  if (!qword_1EE7AACB8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DE15C, &type metadata for CommandConnection.IdleKind);
    atomic_store(result, (unint64_t *)&qword_1EE7AACB8);
  }
  return result;
}

uint64_t sub_1A5892EE8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5892F00()
{
  uint64_t v0;

  return sub_1A54F5CD4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A5892F08()
{
  return swift_deallocObject();
}

_BYTE **sub_1A5892F18(_BYTE **result)
{
  uint64_t v1;
  _BYTE *v2;

  v2 = *result;
  *v2 = *(_BYTE *)(v1 + 16);
  *result = v2 + 1;
  return result;
}

uint64_t sub_1A5892F2C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5892F3C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5892F4C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5892F5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1A5892F88()
{
  return swift_deallocObject();
}

uint64_t sub_1A5892F98()
{
  return swift_deallocObject();
}

uint64_t sub_1A5892FA8(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1A589160C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1A5892FB0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5892FC0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5892FD0()
{
  uint64_t v0;

  return sub_1A58C7374(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A5892FD8@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A58C7398(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A5892FE4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5892FF4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893004()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893014()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893024()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893034()
{
  return swift_deallocObject();
}

uint64_t *sub_1A5893044(uint64_t *a1)
{
  sub_1A5867DDC(*a1);
  return a1;
}

uint64_t *sub_1A5893070(uint64_t *a1)
{
  sub_1A562FDD4(*a1, a1[1], a1[2]);
  return a1;
}

uint64_t sub_1A589309C()
{
  return swift_deallocObject();
}

uint64_t sub_1A58930AC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58930BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58930CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58930DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58930EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58930FC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A5893120()
{
  return sub_1A5949D98();
}

uint64_t sub_1A5893128()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893138()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893148()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893158()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893168()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893178()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893188()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893198()
{
  return swift_deallocObject();
}

void sub_1A58931A8(uint64_t *a1, _QWORD **a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A58C72C4(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1A58931B0()
{
  return swift_deallocObject();
}

uint64_t sub_1A58931C0()
{
  uint64_t v0;

  return sub_1A58C72A0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A58931C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A58931D8()
{
  return swift_deallocObject();
}

uint64_t sub_1A58931E8()
{
  return swift_deallocObject();
}

uint64_t sub_1A58931F8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893208()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893218()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893228()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893238()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893248()
{
  return swift_deallocObject();
}

unint64_t sub_1A5893258()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16) | ((unint64_t)*(unsigned int *)(v0 + 20) << 32);
}

uint64_t sub_1A5893268()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893278()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893288()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893298()
{
  return swift_deallocObject();
}

uint64_t sub_1A58932A8()
{
  return swift_deallocObject();
}

uint64_t sub_1A58932B8()
{
  return swift_deallocObject();
}

uint64_t sub_1A58932C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A58932D8()
{
  return swift_deallocObject();
}

uint64_t sub_1A58932E8()
{
  uint64_t v0;

  sub_1A58921EC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_1A5893314()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893324()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893334()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893344()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893354()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893364()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893374()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893384()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893394()
{
  return swift_deallocObject();
}

uint64_t sub_1A58933A4()
{
  return swift_deallocObject();
}

uint64_t sub_1A58933B4()
{
  return swift_deallocObject();
}

uint64_t sub_1A58933C4()
{
  return swift_deallocObject();
}

uint64_t sub_1A58933D4()
{
  return swift_deallocObject();
}

uint64_t sub_1A58933E4()
{
  return swift_deallocObject();
}

uint64_t sub_1A58933F4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893404()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893414()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893424()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893434()
{
  uint64_t v0;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v17 = *(_OWORD *)(v0 + 496);
  v15 = *(_OWORD *)(v0 + 464);
  v16 = *(_OWORD *)(v0 + 480);
  v13 = *(_OWORD *)(v0 + 432);
  v14 = *(_OWORD *)(v0 + 448);
  v11 = *(_OWORD *)(v0 + 400);
  v12 = *(_OWORD *)(v0 + 416);
  v9 = *(_OWORD *)(v0 + 368);
  v10 = *(_OWORD *)(v0 + 384);
  v7 = *(_OWORD *)(v0 + 336);
  v8 = *(_OWORD *)(v0 + 352);
  v5 = *(_OWORD *)(v0 + 304);
  v6 = *(_OWORD *)(v0 + 320);
  v3 = *(_OWORD *)(v0 + 272);
  v4 = *(_OWORD *)(v0 + 288);
  v2 = *(_OWORD *)(v0 + 240);
  sub_1A5862784(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160),
    *(_QWORD *)(v0 + 168),
    *(_QWORD *)(v0 + 176),
    *(_QWORD *)(v0 + 184),
    *(_QWORD *)(v0 + 192),
    *(_QWORD *)(v0 + 200),
    *(_OWORD *)(v0 + 208),
    *(_QWORD *)(v0 + 216),
    *(_QWORD *)(v0 + 224),
    *(_QWORD *)(v0 + 232),
    v2,
    *((uint64_t *)&v2 + 1),
    *(_QWORD *)(v0 + 256),
    *(_QWORD *)(v0 + 264),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    *(_QWORD *)(v0 + 512));
  return swift_deallocObject();
}

uint64_t sub_1A5893524()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A594ACEC() - 8) + 80);
  return sub_1A588D2A8(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1A5893550()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893560()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893570()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893580()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893590()
{
  return swift_deallocObject();
}

uint64_t sub_1A58935A0()
{
  return swift_deallocObject();
}

uint64_t sub_1A58935B0()
{
  return swift_deallocObject();
}

uint64_t sub_1A58935C0()
{
  return swift_deallocObject();
}

uint64_t sub_1A58935D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1A58935FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A589360C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589361C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589362C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589363C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5893674()
{
  return swift_deallocObject();
}

uint64_t sub_1A589368C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589369C()
{
  return swift_deallocObject();
}

uint64_t sub_1A58936AC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58936BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58936CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58936DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58936EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58936FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A589370C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589371C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589372C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589373C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589374C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589375C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893770()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_604Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A594ACEC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A58937E4()
{
  sub_1A594ACEC();
  return sub_1A594ACD4();
}

uint64_t sub_1A589381C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589382C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589383C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589384C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589385C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589386C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589387C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589388C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589389C()
{
  return swift_deallocObject();
}

uint64_t sub_1A58938AC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58938BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58938CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58938DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58938EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893900()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893910()
{
  return sub_1A594A83C();
}

uint64_t sub_1A5893918()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893928()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893938()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893948()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893958()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A589397C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589398C()
{
  return swift_deallocObject();
}

uint64_t sub_1A589399C()
{
  return swift_deallocObject();
}

uint64_t sub_1A58939AC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58939BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58939CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58939DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58939EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A58939FC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  v3 = *a1 + 4;
  result = sub_1A594C3CC();
  *a1 = v3;
  return result;
}

uint64_t sub_1A5893A58()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893A68()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893A78()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893A88()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893A98()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893AA8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893AB8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893AC8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893AD8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893AE8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893AFC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893B0C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893B1C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893B2C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893B3C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893B4C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893B5C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893B6C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893B7C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893B8C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893B9C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893BAC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893BBC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893BCC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893BDC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893BEC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893BFC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893C0C()
{
  return swift_deallocObject();
}

unint64_t sub_1A5893C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  v2 = _s6LoggerVMa_0();
  return *(unsigned __int8 *)(v1 + *(int *)(v2 + 20)) | ((unint64_t)*(unsigned int *)(v1 + *(int *)(v2 + 20) + 4) << 32);
}

uint64_t sub_1A5893C5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = (*(uint64_t (**)(void))(v0 + 16))();
  return ConnectionID.debugDescription.getter(v1);
}

uint64_t objectdestroy_601Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5893CAC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893CBC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893CCC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893CDC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893CEC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  v3 = *a1 + 1;
  result = sub_1A594C3CC();
  *a1 = v3;
  return result;
}

uint64_t sub_1A5893D44()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893D54()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893D64()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893D74()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893D84()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893D94()
{
  return swift_deallocObject();
}

uint64_t sub_1A5893DA4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  v3 = *a1 + 8;
  result = sub_1A594C3CC();
  *a1 = v3;
  return result;
}

uint64_t sub_1A5893DFC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A5893E20()
{
  uint64_t v0;

  return sub_1A589145C(v0, (void (*)(void))sub_1A588D388);
}

uint64_t sub_1A5893E40()
{
  uint64_t v0;

  return sub_1A589145C(v0, (void (*)(void))sub_1A58906C8);
}

unint64_t sub_1A5893E60(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A5893E90(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1A5893EC0(char a1)
{
  sub_1A58A4044(a1);
}

uint64_t sub_1A5893EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s6LoggerVMa_0() - 8) + 80);
  v2 = v0 + ((v1 + 17) & ~v1);
  v3 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1A5893F38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(_s6LoggerVMa_0() - 8) + 80);
  return sub_1A58A3BFC(a1, *(_BYTE *)(v1 + 16), v1 + ((v3 + 17) & ~v3));
}

uint64_t sub_1A5893F7C()
{
  uint64_t v0;

  return sub_1A588FEB4(*(void (**)(uint64_t, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), (uint64_t)&unk_1E4F1A850, (uint64_t)sub_1A5893FAC);
}

uint64_t sub_1A5893FAC(uint64_t a1)
{
  uint64_t v1;

  return sub_1A588F86C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A5893FB4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5893FE0()
{
  uint64_t v0;

  return sub_1A588FA48(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1A5893FE8(unint64_t result)
{
  if (result >> 62 == 1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

unint64_t sub_1A5894020(unint64_t result)
{
  if (result >> 62 == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t objectdestroy_1451Tm()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5894090()
{
  uint64_t v0;

  return sub_1A588FEB4(*(void (**)(uint64_t, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), (uint64_t)&unk_1E4F1A918, (uint64_t)sub_1A58940EC);
}

uint64_t objectdestroy_1457Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A58940EC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A588FF28(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A58940F4()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1A589413C()
{
  uint64_t v0;

  return sub_1A589011C(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t *sub_1A5894148(uint64_t *a1)
{
  sub_1A5894180(*a1, a1[1], a1[2]);
  return a1;
}

uint64_t sub_1A5894180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A58941D0(uint64_t result)
{
  *(_BYTE *)(result + 176) = 4;
  return result;
}

uint64_t sub_1A58941DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A588F4C4(v1, a1);
}

uint64_t sub_1A58941F4(uint64_t a1)
{
  uint64_t v1;

  v1 = CommandConnection.send(_:)(a1);
  CommandConnection.flush()();
  return v1;
}

double sub_1A589422C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A58AEDD0(*(void (**)(_OWORD *__return_ptr))(v1 + 16), a1);
}

double sub_1A5894234(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 3;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_QWORD *)(a1 + 168) = 0;
  *(_BYTE *)(a1 + 176) = 7;
  return result;
}

uint64_t sub_1A5894278()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1A58942A0(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1A5893E90(result);
  return result;
}

unint64_t sub_1A58942B4(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return sub_1A58942F8(a3, a4, a5);
  }
  return result;
}

unint64_t sub_1A58942F8(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1A5862270(result);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A5894324()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 48))
  {
    if ((~*(_QWORD *)(v0 + 32) & 0xF000000000000007) != 0)
      sub_1A5862B94(*(_QWORD *)(v0 + 32));
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1A5894370(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))
{
  __int16 v4;

  v4 = *(_WORD *)(a1 + 160);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    v4);
  return a1;
}

unint64_t sub_1A58943DC(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int16 a21)
{
  int v23;

  v23 = a21 >> 14;
  switch(v23)
  {
    case 2:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    case 1:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A58922E8(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    case 0:
      return sub_1A58942B4(result, a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_1A589451C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5894598(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A7D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A58945E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798048);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t CommandCounter.init()()
{
  return 0;
}

unint64_t CommandID.init(connection:commandCounter:)(unsigned int a1, uint64_t a2)
{
  return a1 | (unint64_t)(a2 << 32);
}

uint64_t CommandCounter.withNext<A>(_:)(uint64_t (*a1)(void))
{
  int *v1;
  uint64_t v2;
  int v3;
  uint64_t result;

  v3 = *v1;
  *v1 = (*v1 + 1) & 0xFFFFFF;
  result = a1();
  if (v2)
  {
    *v1 = v3;
    return swift_willThrow();
  }
  return result;
}

uint64_t static ConnectionCommandIDSet.empty.getter()
{
  return *(unsigned int *)ConnectionID.invalid.unsafeMutableAddressor();
}

uint64_t ConnectionCommandIDSet.count.getter(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 16);
}

unint64_t CommandID.tag.getter(uint64_t a1)
{
  return a1 & 0xFFFFFFFF000000FFLL;
}

uint64_t CommandID.connection.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*CommandID.connection.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CommandCounter.init(rawValue:)(int a1)
{
  return a1 & 0xFFFFFF;
}

uint64_t CommandID.hash(into:)()
{
  sub_1A594CEAC();
  return sub_1A594CEAC();
}

BOOL static CommandID.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t CommandID.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

uint64_t sub_1A5894AE4()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

uint64_t sub_1A5894B3C()
{
  sub_1A594CEAC();
  return sub_1A594CEAC();
}

uint64_t sub_1A5894B74()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

uint64_t static CommandID.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _BOOL4 v3;

  v3 = (_DWORD)a1 == (_DWORD)a2 && HIDWORD(a1) < HIDWORD(a2);
  return a1 < a2 || v3;
}

BOOL static CommandCounter.< infix(_:_:)(unsigned int a1, unsigned int a2)
{
  return a1 < a2;
}

BOOL sub_1A5894BF8(_DWORD *a1, _DWORD *a2)
{
  if (*a1 < *a2)
    return 1;
  return *a1 == *a2 && a1[1] < a2[1];
}

BOOL sub_1A5894C24(_DWORD *a1, _DWORD *a2)
{
  if (*a2 < *a1)
    return 0;
  return *a2 != *a1 || a2[1] >= a1[1];
}

BOOL sub_1A5894C50(_DWORD *a1, _DWORD *a2)
{
  if (*a1 < *a2)
    return 0;
  return *a1 != *a2 || a1[1] >= a2[1];
}

BOOL sub_1A5894C7C(_DWORD *a1, _DWORD *a2)
{
  if (*a2 < *a1)
    return 1;
  return *a2 == *a1 && a2[1] < a1[1];
}

uint64_t CommandCounter.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*CommandCounter.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ConnectionCommandIDSet.connection.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*ConnectionCommandIDSet.connection.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ConnectionCommandIDSet.commands.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ConnectionCommandIDSet.commands.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

double (*ConnectionCommandIDSet.commands.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ConnectionCommandIDSet.idleOrNoop.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ConnectionCommandIDSet.idleOrNoop.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

double (*ConnectionCommandIDSet.idleOrNoop.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static ConnectionCommandIDSet.__derived_struct_equals(_:_:)(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  char v8;

  if (a1 != a4)
    return 0;
  if ((sub_1A54ECF6C(a2, a5) & 1) != 0)
    v8 = sub_1A54ECF6C(a3, a6);
  else
    v8 = 0;
  return v8 & 1;
}

uint64_t sub_1A5894DB8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  int64_t v32;

  if (result == a2)
    return 1;
  v2 = a2;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v28 = result;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  if (v6)
    goto LABEL_7;
LABEL_8:
  v9 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v9 >= v30)
    return 1;
  v10 = *(_QWORD *)(v29 + 8 * v9);
  v11 = v3 + 1;
  if (!v10)
  {
    v11 = v9 + 1;
    if (v9 + 1 >= v30)
      return 1;
    v10 = *(_QWORD *)(v29 + 8 * v11);
    if (!v10)
    {
      v11 = v9 + 2;
      if (v9 + 2 >= v30)
        return 1;
      v10 = *(_QWORD *)(v29 + 8 * v11);
      if (!v10)
      {
        v12 = v9 + 3;
        if (v12 < v30)
        {
          v10 = *(_QWORD *)(v29 + 8 * v12);
          if (v10)
          {
            v11 = v12;
            goto LABEL_21;
          }
          while (1)
          {
            v11 = v12 + 1;
            if (__OFADD__(v12, 1))
              break;
            if (v11 >= v30)
              return 1;
            v10 = *(_QWORD *)(v29 + 8 * v11);
            ++v12;
            if (v10)
              goto LABEL_21;
          }
LABEL_44:
          __break(1u);
          return result;
        }
        return 1;
      }
    }
  }
LABEL_21:
  v31 = (v10 - 1) & v10;
  v32 = v11;
  for (i = __clz(__rbit64(v10)) + (v11 << 6); ; i = __clz(__rbit64(v6)) | (v3 << 6))
  {
    v13 = *(_QWORD *)(result + 48) + 32 * i;
    v15 = *(_QWORD *)v13;
    v14 = *(_QWORD *)(v13 + 8);
    v16 = *(_QWORD *)(v13 + 16);
    v17 = *(unsigned __int8 *)(v13 + 24);
    sub_1A594CE64();
    swift_bridgeObjectRetain_n();
    sub_1A594B1D8();
    swift_bridgeObjectRelease();
    sub_1A594CE94();
    if (v17 != 1)
      sub_1A594CEB8();
    v18 = sub_1A594CED0();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      break;
    v21 = ~v19;
    v22 = *(_QWORD *)(a2 + 48);
    while (1)
    {
      v24 = v22 + 32 * v20;
      v25 = *(_QWORD *)(v24 + 16);
      v26 = *(_BYTE *)(v24 + 24);
      v27 = *(_QWORD *)v24 == v15 && *(_QWORD *)(v24 + 8) == v14;
      if (!v27 && (sub_1A594CD38() & 1) == 0)
        goto LABEL_30;
      if ((v26 & 1) == 0)
        break;
      if (v17)
        goto LABEL_38;
LABEL_30:
      v20 = (v20 + 1) & v21;
      if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        goto LABEL_41;
    }
    if (((v25 ^ v16) & 0xFFFFFFFFFFFFC000) != 0)
      v23 = 1;
    else
      v23 = v17;
    if ((v23 & 1) != 0)
      goto LABEL_30;
LABEL_38:
    swift_bridgeObjectRelease();
    v3 = v32;
    v2 = a2;
    result = v28;
    v6 = v31;
    if (!v31)
      goto LABEL_8;
LABEL_7:
    v31 = (v6 - 1) & v6;
    v32 = v3;
  }
LABEL_41:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A5895080(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = *(_QWORD *)(result + 56);
  v26 = result;
  v27 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v4;
  v28 = (unint64_t)(v5 + 63) >> 6;
  v8 = a2 + 56;
  if ((v6 & v4) == 0)
    goto LABEL_8;
  while (2)
  {
    v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v29 = v3;
    v10 = v9 | (v3 << 6);
LABEL_22:
    v15 = *(_QWORD *)(*(_QWORD *)(result + 48) + 16 * v10 + 8);
    sub_1A594CE64();
    sub_1A594CE88();
    if (v15)
    {
      sub_1A594B4B4();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594B1D8();
      swift_bridgeObjectRelease();
    }
    v16 = sub_1A594CED0();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
    {
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
    v19 = ~v17;
    while (1)
    {
      if (!*(_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * v18 + 8))
      {
        if (!v15)
          goto LABEL_38;
        goto LABEL_27;
      }
      if (!v15)
        goto LABEL_27;
      v20 = sub_1A594B4B4();
      v22 = v21;
      if (v20 == sub_1A594B4B4() && v22 == v23)
        break;
      v25 = sub_1A594CD38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
        goto LABEL_37;
LABEL_27:
      v18 = (v18 + 1) & v19;
      if (((*(_QWORD *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        goto LABEL_41;
    }
    swift_bridgeObjectRelease_n();
LABEL_37:
    swift_bridgeObjectRelease();
LABEL_38:
    result = v26;
    v3 = v29;
    if (v7)
      continue;
    break;
  }
LABEL_8:
  v11 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v11 >= v28)
    return 1;
  v12 = *(_QWORD *)(v27 + 8 * v11);
  v13 = v3 + 1;
  if (v12)
    goto LABEL_21;
  v13 = v3 + 2;
  if (v3 + 2 >= v28)
    return 1;
  v12 = *(_QWORD *)(v27 + 8 * v13);
  if (v12)
    goto LABEL_21;
  v13 = v3 + 3;
  if (v3 + 3 >= v28)
    return 1;
  v12 = *(_QWORD *)(v27 + 8 * v13);
  if (v12)
    goto LABEL_21;
  v14 = v3 + 4;
  if (v3 + 4 >= v28)
    return 1;
  v12 = *(_QWORD *)(v27 + 8 * v14);
  if (v12)
  {
    v13 = v3 + 4;
LABEL_21:
    v7 = (v12 - 1) & v12;
    v29 = v13;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v28)
      return 1;
    v12 = *(_QWORD *)(v27 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_21;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1A5895368(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v30;
  char v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  int64_t v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD v60[21];

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v2 = 0;
  v3 = *(_QWORD *)(a1 + 56);
  v40 = a1;
  v41 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & v3;
  v42 = (unint64_t)(v4 + 63) >> 6;
  v56 = a2 + 56;
  if ((v5 & v3) != 0)
    goto LABEL_7;
LABEL_8:
  v10 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v10 >= v42)
    return 1;
  v11 = *(_QWORD *)(v41 + 8 * v10);
  ++v2;
  if (!v11)
  {
    v2 = v10 + 1;
    if (v10 + 1 >= v42)
      return 1;
    v11 = *(_QWORD *)(v41 + 8 * v2);
    if (!v11)
    {
      v2 = v10 + 2;
      if (v10 + 2 >= v42)
        return 1;
      v11 = *(_QWORD *)(v41 + 8 * v2);
      if (!v11)
      {
        v12 = v10 + 3;
        if (v12 < v42)
        {
          v11 = *(_QWORD *)(v41 + 8 * v12);
          if (v11)
          {
            v2 = v12;
            goto LABEL_21;
          }
          while (1)
          {
            v2 = v12 + 1;
            if (__OFADD__(v12, 1))
              break;
            if (v2 >= v42)
              return 1;
            v11 = *(_QWORD *)(v41 + 8 * v2);
            ++v12;
            if (v11)
              goto LABEL_21;
          }
LABEL_49:
          __break(1u);
          JUMPOUT(0x1A5895CDCLL);
        }
        return 1;
      }
    }
  }
LABEL_21:
  v8 = (v11 - 1) & v11;
  for (i = __clz(__rbit64(v11)) + (v2 << 6); ; i = v7 | (v2 << 6))
  {
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 80 * i);
    v14 = v13[2];
    v58 = v13[1];
    v59 = *v13;
    v15 = v13[3];
    v16 = v13[7];
    v48 = v13[5];
    v49 = v13[6];
    v17 = v13[9];
    v50 = v13[8];
    v51 = v13[4];
    sub_1A594CE64();
    v57 = v16;
    v53 = v15;
    v54 = v14;
    v47 = v17;
    v43 = v8;
    v44 = v2;
    if ((v16 & 0x1000000000000000) != 0)
    {
      sub_1A594CE88();
      __asm { BR              X9 }
    }
    sub_1A594CE88();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    sub_1A594B1D8();
    v18 = sub_1A594CED0();
    v19 = a2;
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v18 & ~v20;
    v22 = v16;
    if (((*(_QWORD *)(v56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      break;
    v55 = ~v20;
    while (1)
    {
      v23 = (uint64_t *)(*(_QWORD *)(v19 + 48) + 80 * v21);
      v24 = *v23;
      v25 = v23[1];
      v26 = v23[2];
      v27 = v23[3];
      v28 = v23[7];
      if ((v28 & 0x1000000000000000) == 0)
        break;
      v34 = v23[4];
      v33 = v23[5];
      v35 = v23[6];
      v36 = v23[8];
      v37 = v23[9];
      v60[0] = *v23;
      v60[1] = v25;
      v60[2] = v26;
      v60[3] = v27;
      v60[4] = v34;
      v60[5] = v33;
      v60[6] = v35;
      v60[7] = v28 & 0xEFFFFFFFFFFFFFFFLL;
      v60[8] = v36;
      v60[9] = v37;
      if ((v22 & 0x1000000000000000) != 0)
      {
        v60[10] = v59;
        v60[11] = v58;
        v60[12] = v54;
        v60[13] = v53;
        v60[14] = v51;
        v60[15] = v48;
        v60[16] = v49;
        v60[17] = v57 & 0xEFFFFFFFFFFFFFFFLL;
        v60[18] = v50;
        v60[19] = v47;
        v45 = v33;
        sub_1A586418C(v59, v58, v54, v53, v51, v48, v49, v57, v50, v47);
        sub_1A586418C(v24, v25, v26, v27, v34, v45, v35, v28, v36, v37);
        sub_1A586B68C((uint64_t)v60);
        v46 = v38;
        sub_1A5862344(v59, v58, v54, v53, v51, v48, v49, v57, v50, v47);
        sub_1A5862344(v24, v25, v26, v27, v34, v45, v35, v28, v36, v37);
        v22 = v57;
        v19 = a2;
        if ((v46 & 1) != 0)
          goto LABEL_43;
      }
LABEL_27:
      v21 = (v21 + 1) & v55;
      if (((*(_QWORD *)(v56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_46;
    }
    if ((v22 & 0x1000000000000000) != 0)
      goto LABEL_27;
    if (v24 != v59 || v25 != v58)
    {
      v30 = sub_1A594CD38();
      v22 = v57;
      v19 = a2;
      if ((v30 & 1) == 0)
        goto LABEL_27;
    }
    if (v26 != v54 || v27 != v53)
    {
      v32 = sub_1A594CD38();
      v22 = v57;
      v19 = a2;
      if ((v32 & 1) == 0)
        goto LABEL_27;
    }
LABEL_43:
    sub_1A5862344(v59, v58, v54, v53, v51, v48, v49, v22, v50, v47);
    a1 = v40;
    v6 = v43;
    v2 = v44;
    if (!v43)
      goto LABEL_8;
LABEL_7:
    v7 = __clz(__rbit64(v6));
    v8 = (v6 - 1) & v6;
  }
LABEL_46:
  sub_1A5862344(v59, v58, v54, v53, v51, v48, v49, v22, v50, v47);
  return 0;
}

uint64_t sub_1A5895CF8(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_24;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v4 = v13 + 3;
    if (v13 + 3 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v15 = v13 + 4;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_35;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_24;
      }
    }
    v4 = v15;
LABEL_24:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v12);
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (v16 == *(unsigned __int8 *)(v19 + v18));
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (v16 == *(unsigned __int8 *)(v19 + v18))
      goto LABEL_7;
  }
}

uint64_t sub_1A5895EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && (v2 = *(_QWORD *)(a2 + 16),
        v3 = *(_QWORD *)(a1 + 16),
        (sub_1A54ECF6C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8)) & 1) != 0))
  {
    v4 = sub_1A54ECF6C(v3, v2);
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

BOOL ConnectionCommandIDSet.contains(_:)(uint64_t a1, int a2, uint64_t a3)
{
  return (_DWORD)a1 == a2 && sub_1A54EA8D0(SHIDWORD(a1), a3);
}

uint64_t ConnectionCommandIDSet.isDisjoint(with:)(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  if (a1 == a4)
    return sub_1A554A554(a5, a2);
  else
    return 1;
}

uint64_t ConnectionCommandIDSet.normalCommandCount.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(a3 + 16) <= *(_QWORD *)(a2 + 16) >> 3)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5896978(a3);
    v5 = a2;
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v5 = sub_1A5896AD8(a3, a2);
  }
  v6 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t ConnectionCommandIDSet.underestimatedCount.getter(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 16);
}

uint64_t ConnectionCommandIDSet.makeIterator()(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = -1;
  v7 = -1 << *(_BYTE *)(a2 + 32);
  v8 = a2 + 56;
  if (-v7 < 64)
    v6 = ~(-1 << -(char)v7);
  v9 = v6 & *(_QWORD *)(a2 + 56);
  v10 = ~v7;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a2;
  v11[3] = v8;
  v11[4] = v10;
  v11[5] = 0;
  v11[6] = v9;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_DWORD *)(v12 + 24) = a1;
  *(_QWORD *)(v12 + 32) = a2;
  *(_QWORD *)(v12 + 40) = a3;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7961A8);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1A5896EE0;
  *(_QWORD *)(v13 + 24) = v12;
  swift_bridgeObjectRetain_n();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v13;
}

uint64_t sub_1A58960F4@<X0>(_QWORD *a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;

  result = swift_beginAccess();
  v8 = a1[5];
  v7 = a1[6];
  v9 = v8;
  if (v7)
  {
    v10 = (v7 - 1) & v7;
    v11 = __clz(__rbit64(v7)) | (v8 << 6);
LABEL_3:
    v12 = 0;
    v13 = *(unsigned int *)(*(_QWORD *)(a1[2] + 48) + 4 * v11);
    a1[5] = v9;
    a1[6] = v10;
    v14 = a2 | (unint64_t)(v13 << 32);
LABEL_21:
    *(_QWORD *)a3 = v14;
    *(_BYTE *)(a3 + 8) = v12;
    return result;
  }
  v15 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    v16 = (unint64_t)(a1[4] + 64) >> 6;
    if (v15 < v16)
    {
      v17 = a1[3];
      v18 = *(_QWORD *)(v17 + 8 * v15);
      if (v18)
      {
LABEL_7:
        v10 = (v18 - 1) & v18;
        v11 = __clz(__rbit64(v18)) + (v15 << 6);
        v9 = v15;
        goto LABEL_3;
      }
      v9 = v8 + 1;
      if (v8 + 2 < v16)
      {
        v18 = *(_QWORD *)(v17 + 8 * (v8 + 2));
        if (v18)
        {
          v15 = v8 + 2;
          goto LABEL_7;
        }
        v9 = v8 + 2;
        if (v8 + 3 < v16)
        {
          v18 = *(_QWORD *)(v17 + 8 * (v8 + 3));
          if (v18)
          {
            v15 = v8 + 3;
            goto LABEL_7;
          }
          v15 = v8 + 4;
          v9 = v8 + 3;
          if (v8 + 4 < v16)
          {
            v18 = *(_QWORD *)(v17 + 8 * v15);
            if (v18)
              goto LABEL_7;
            v9 = v16 - 1;
            v19 = v8 + 5;
            while (v16 != v19)
            {
              v18 = *(_QWORD *)(v17 + 8 * v19++);
              if (v18)
              {
                v15 = v19 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
    v14 = 0;
    a1[5] = v9;
    a1[6] = 0;
    v12 = 1;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5896254@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = ConnectionCommandIDSet.makeIterator()(*(_DWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1A58962A4()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 8) + 16);
}

uint64_t sub_1A58962B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A58963E0(*(_DWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A58962FC(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A5896308(a1, a2, a3, *(_DWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16));
}

uint64_t sub_1A5896308(uint64_t *a1, _QWORD *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v9 = ConnectionCommandIDSet.makeIterator()(a4, a5, a6);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v11 = 0;
  if (!a2 || !a3)
  {
LABEL_11:
    *a1 = v9;
    return v11;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_1A594CA80();
    if ((v14 & 1) != 0)
    {
      v11 = 0;
    }
    else
    {
      v11 = 0;
      v12 = v13;
      while (1)
      {
        *a2 = v12;
        if (a3 - 1 == v11)
          break;
        sub_1A594CA80();
        v12 = v13;
        ++a2;
        ++v11;
        if ((v14 & 1) != 0)
          goto LABEL_11;
      }
      v11 = a3;
    }
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A58963E0(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B1D0);
    v7 = (_QWORD *)swift_allocObject();
    v8 = _swift_stdlib_malloc_size_0(v7);
    v9 = v8 - 32;
    if (v8 < 32)
      v9 = v8 - 25;
    v10 = v9 >> 3;
    v7[2] = v6;
    v7[3] = 2 * v10;
    v11 = v7 + 4;
    v12 = v10 & 0x7FFFFFFFFFFFFFFFLL;
    ConnectionCommandIDSet.makeIterator()(a1, a2, a3);
    v13 = v12 - v6;
    while (1)
    {
      result = sub_1A594CA80();
      if ((v31 & 1) != 0)
        goto LABEL_36;
      *v11++ = v30;
      if (!--v6)
        goto LABEL_9;
    }
  }
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24) >> 1;
  ConnectionCommandIDSet.makeIterator()(a1, a2, a3);
  v11 = v7 + 4;
LABEL_9:
  result = sub_1A594CA80();
  if ((v31 & 1) == 0)
  {
    v15 = v30;
    while (1)
    {
      if (!v13)
      {
        v16 = v7[3];
        if ((uint64_t)((v16 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_34;
        v17 = v16 & 0xFFFFFFFFFFFFFFFELL;
        if (v17 <= 1)
          v18 = 1;
        else
          v18 = v17;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B1D0);
        v19 = (_QWORD *)swift_allocObject();
        v20 = _swift_stdlib_malloc_size_0(v19);
        v21 = v20 - 32;
        if (v20 < 32)
          v21 = v20 - 25;
        v22 = v21 >> 3;
        v19[2] = v18;
        v19[3] = 2 * (v21 >> 3);
        v23 = (unint64_t)(v19 + 4);
        v24 = v7[3] >> 1;
        if (v7[2])
        {
          if (v19 != v7 || v23 >= (unint64_t)&v7[v24 + 4])
            memmove(v19 + 4, v7 + 4, 8 * v24);
          v7[2] = 0;
        }
        v11 = (_QWORD *)(v23 + 8 * v24);
        v13 = (v22 & 0x7FFFFFFFFFFFFFFFLL) - v24;
        result = swift_release();
        v7 = v19;
      }
      v26 = __OFSUB__(v13--, 1);
      if (v26)
        break;
      *v11++ = v15;
      result = sub_1A594CA80();
      v15 = v30;
      if ((v31 & 1) != 0)
        goto LABEL_29;
    }
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_29:
  result = swift_release();
  v27 = v7[3];
  if (v27 < 2)
    return (uint64_t)v7;
  v28 = v27 >> 1;
  v26 = __OFSUB__(v28, v13);
  v29 = v28 - v13;
  if (!v26)
  {
    v7[2] = v29;
    return (uint64_t)v7;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A58965F4(_QWORD *a1)
{
  size_t v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  _QWORD *v19;
  size_t v20;
  unint64_t v21;
  size_t v22;
  BOOL v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v3 = sub_1A594AF98();
  v4 = MEMORY[0x1E0C80A78](v3);
  (*(void (**)(char *, _QWORD *, uint64_t, double))(v6 + 16))((char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v4);
  sub_1A589770C();
  sub_1A594B730();
  result = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAC00);
  v8 = *(_QWORD *)((char *)a1 + *(int *)(result + 36));
  v9 = v30;
  if (!v8 || (v10 = v31, v11 = *(_QWORD *)(v30 + 16), v31 == v11))
  {
    result = swift_bridgeObjectRelease();
    v1 = 0;
    a1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_27;
  }
  if ((v31 & 0x8000000000000000) == 0)
  {
    if (v31 < *(_QWORD *)(v30 + 16))
    {
      v1 = 0;
      a1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = v8 - 1;
      v13 = (_BYTE *)(MEMORY[0x1E0DEE9D8] + 32);
      v14 = v11 - 1;
      v29 = v14;
      while (1)
      {
        v15 = *(_BYTE *)(v9 + v10 + 32);
        if (!v1)
        {
          v16 = a1[3];
          if ((uint64_t)((v16 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_32;
          v17 = v16 & 0xFFFFFFFFFFFFFFFELL;
          if (v17 <= 1)
            v18 = 1;
          else
            v18 = v17;
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B370);
          v19 = (_QWORD *)swift_allocObject();
          v20 = 2 * _swift_stdlib_malloc_size_0(v19) - 64;
          v19[2] = v18;
          v19[3] = v20;
          v21 = (unint64_t)(v19 + 4);
          v22 = a1[3] >> 1;
          if (a1[2])
          {
            if (v19 != a1 || v21 >= (unint64_t)a1 + v22 + 32)
              memmove(v19 + 4, a1 + 4, v22);
            a1[2] = 0;
          }
          v13 = (_BYTE *)(v21 + v22);
          v1 = (v20 >> 1) - v22;
          result = swift_release();
          a1 = v19;
          v14 = v29;
        }
        v24 = __OFSUB__(v1--, 1);
        if (v24)
          break;
        *v13 = v15;
        if (!v12 || v14 == v10)
          goto LABEL_26;
        ++v10;
        ++v13;
        --v12;
        if (v10 >= *(_QWORD *)(v9 + 16))
          goto LABEL_25;
      }
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    result = swift_bridgeObjectRelease();
LABEL_27:
    v25 = a1[3];
    if (v25 < 2)
      return (uint64_t)a1;
    v26 = v25 >> 1;
    v24 = __OFSUB__(v26, v1);
    v27 = v26 - v1;
    if (!v24)
    {
      a1[2] = v27;
      return (uint64_t)a1;
    }
    goto LABEL_33;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A589681C()
{
  uint64_t result;
  _QWORD *v1;
  size_t v2;
  char v3;
  _BYTE *v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *v8;
  size_t v9;
  unint64_t v10;
  size_t v11;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  char v18;

  swift_retain();
  result = sub_1A594CA80();
  v1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = 0;
  if ((v18 & 1) == 0)
  {
    v3 = v17;
    v4 = (_BYTE *)(MEMORY[0x1E0DEE9D8] + 32);
    while (1)
    {
      if (!v2)
      {
        v5 = v1[3];
        if ((uint64_t)((v5 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_24;
        v6 = v5 & 0xFFFFFFFFFFFFFFFELL;
        if (v6 <= 1)
          v7 = 1;
        else
          v7 = v6;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B370);
        v8 = (_QWORD *)swift_allocObject();
        v9 = 2 * _swift_stdlib_malloc_size_0(v8) - 64;
        v8[2] = v7;
        v8[3] = v9;
        v10 = (unint64_t)(v8 + 4);
        v11 = v1[3] >> 1;
        if (v1[2])
        {
          if (v8 != v1 || v10 >= (unint64_t)v1 + v11 + 32)
            memmove(v8 + 4, v1 + 4, v11);
          v1[2] = 0;
        }
        v4 = (_BYTE *)(v10 + v11);
        v2 = (v9 >> 1) - v11;
        result = swift_release();
        v1 = v8;
      }
      v13 = __OFSUB__(v2--, 1);
      if (v13)
        break;
      *v4++ = v3;
      result = sub_1A594CA80();
      v3 = v17;
      if ((v18 & 1) != 0)
        goto LABEL_19;
    }
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
LABEL_19:
  result = swift_release();
  v14 = v1[3];
  if (v14 < 2)
    return (uint64_t)v1;
  v15 = v14 >> 1;
  v13 = __OFSUB__(v15, v2);
  v16 = v15 - v2;
  if (!v13)
  {
    v1[2] = v16;
    return (uint64_t)v1;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1A5896978(unint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        return swift_release();
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          return swift_release();
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            return swift_release();
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    result = sub_1A5897020(*(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v7)
    return swift_release();
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A5896AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t isStackAllocationSafe;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[6];

  v2 = a2;
  v33[5] = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v6 = a1 + 56;
    v5 = *(_QWORD *)(a1 + 56);
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v32 = ~v7;
    if (-v7 < 64)
      v8 = ~(-1 << -(char)v7);
    else
      v8 = -1;
    v9 = v8 & v5;
    v10 = (unint64_t)(63 - v7) >> 6;
    v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v13 = v12 | (v4 << 6);
        }
        else
        {
          v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_37;
          }
          if (v14 >= v10)
            goto LABEL_35;
          v15 = *(_QWORD *)(v6 + 8 * v14);
          v16 = v4 + 1;
          if (!v15)
          {
            v16 = v4 + 2;
            if (v4 + 2 >= v10)
              goto LABEL_35;
            v15 = *(_QWORD *)(v6 + 8 * v16);
            if (!v15)
            {
              v16 = v4 + 3;
              if (v4 + 3 >= v10)
                goto LABEL_35;
              v15 = *(_QWORD *)(v6 + 8 * v16);
              if (!v15)
              {
                v16 = v4 + 4;
                if (v4 + 4 >= v10)
                  goto LABEL_35;
                v15 = *(_QWORD *)(v6 + 8 * v16);
                if (!v15)
                {
                  v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_35:
                    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                    sub_1A550F72C();
                    return v2;
                  }
                  v15 = *(_QWORD *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      v16 = v17 + 1;
                      if (__OFADD__(v17, 1))
                        break;
                      if (v16 >= v10)
                        goto LABEL_35;
                      v15 = *(_QWORD *)(v6 + 8 * v16);
                      ++v17;
                      if (v15)
                        goto LABEL_23;
                    }
LABEL_37:
                    __break(1u);
                  }
                  v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          v9 = (v15 - 1) & v15;
          v13 = __clz(__rbit64(v15)) + (v16 << 6);
          v4 = v16;
        }
        v18 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * v13);
        sub_1A594CE64();
        sub_1A594CEAC();
        v19 = sub_1A594CED0();
        v20 = -1 << *(_BYTE *)(v2 + 32);
        v21 = v19 & ~v20;
      }
      while (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      v22 = *(_QWORD *)(v2 + 48);
      if (*(_DWORD *)(v22 + 4 * v21) == v18)
        break;
      while (1)
      {
        v21 = (v21 + 1) & ~v20;
        if (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        if (*(_DWORD *)(v22 + 4 * v21) == v18)
          goto LABEL_28;
      }
    }
LABEL_28:
    v33[0] = a1;
    v33[1] = v6;
    v33[2] = v32;
    v33[3] = v4;
    v33[4] = v9;
    v23 = (unint64_t)(63 - v20) >> 6;
    v24 = 8 * v23;
    isStackAllocationSafe = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v23 < 0x81 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      v27 = (char *)&v31 - v26;
      memcpy((char *)&v31 - v26, (const void *)(v2 + 56), v24);
      v28 = sub_1A589714C((uint64_t)v27, v23, v2, v21, v33);
      swift_release();
      sub_1A550F72C();
    }
    else
    {
      v29 = (void *)swift_slowAlloc();
      memcpy(v29, (const void *)(v2 + 56), v24);
      v28 = sub_1A589714C((uint64_t)v29, v23, v2, v21, v33);
      swift_release();
      sub_1A550F72C();
      MEMORY[0x1A85B1964](v29, -1, -1);
    }
    return v28;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1A5896E80()
{
  sub_1A550F72C();
  return swift_deallocObject();
}

uint64_t sub_1A5896EAC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5896EE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A58960F4(*(_QWORD **)(v1 + 16), *(_DWORD *)(v1 + 24), a1);
}

unint64_t sub_1A5896EF4()
{
  unint64_t result;

  result = qword_1EE7AACC0;
  if (!qword_1EE7AACC0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for CommandID, &type metadata for CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE7AACC0);
  }
  return result;
}

unint64_t sub_1A5896F3C()
{
  unint64_t result;

  result = qword_1EE7980F8;
  if (!qword_1EE7980F8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for CommandCounter, &type metadata for CommandCounter);
    atomic_store(result, (unint64_t *)&qword_1EE7980F8);
  }
  return result;
}

unint64_t sub_1A5896F84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7AACD0;
  if (!qword_1EE7AACD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7AACD8);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEC1E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7AACD0);
  }
  return result;
}

_QWORD *__swift_memcpy8_4_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for CommandID()
{
  return &type metadata for CommandID;
}

ValueMetadata *type metadata accessor for CommandCounter()
{
  return &type metadata for CommandCounter;
}

__n128 __swift_memcpy24_8_6(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionCommandIDSet()
{
  return &type metadata for ConnectionCommandIDSet;
}

unint64_t sub_1A5897020(int a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v14;

  v3 = *v1;
  sub_1A594CE64();
  sub_1A594CEAC();
  v4 = sub_1A594CED0();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_9:
    v11 = 0;
    v12 = 1;
    return v11 | ((unint64_t)v12 << 32);
  }
  v7 = *(_QWORD *)(v3 + 48);
  if (*(_DWORD *)(v7 + 4 * v6) != a1)
  {
    v8 = ~v5;
    do
    {
      v6 = (v6 + 1) & v8;
      if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        goto LABEL_9;
    }
    while (*(_DWORD *)(v7 + 4 * v6) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v1;
  v14 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A58DDDA8();
    v10 = v14;
  }
  v11 = *(unsigned int *)(*(_QWORD *)(v10 + 48) + 4 * v6);
  sub_1A554CF34(v6);
  *v1 = v14;
  swift_bridgeObjectRelease();
  v12 = 0;
  return v11 | ((unint64_t)v12 << 32);
}

uint64_t sub_1A589714C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;

  v7 = (unint64_t *)result;
  v8 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v9 = v8 - 1;
  v10 = a3 + 56;
  while (1)
  {
    v15 = a5[3];
    v16 = a5[4];
    if (!v16)
      break;
    v17 = (v16 - 1) & v16;
    v18 = __clz(__rbit64(v16)) | (v15 << 6);
LABEL_22:
    v25 = *(_DWORD *)(*(_QWORD *)(*a5 + 48) + 4 * v18);
    a5[3] = v15;
    a5[4] = v17;
    sub_1A594CE64();
    sub_1A594CEAC();
    result = sub_1A594CED0();
    v26 = -1 << *(_BYTE *)(a3 + 32);
    v27 = result & ~v26;
    v11 = v27 >> 6;
    v12 = 1 << v27;
    if (((1 << v27) & *(_QWORD *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      v28 = *(_QWORD *)(a3 + 48);
      if (*(_DWORD *)(v28 + 4 * v27) == v25)
      {
LABEL_3:
        v13 = v11;
        v14 = v7[v11];
        v7[v13] = v14 & ~v12;
        if ((v12 & v14) != 0)
        {
          if (__OFSUB__(v9--, 1))
            goto LABEL_34;
          if (!v9)
            return MEMORY[0x1E0DEE9E8];
        }
      }
      else
      {
        for (i = v27 + 1; ; i = v30 + 1)
        {
          v30 = i & ~v26;
          if (((*(_QWORD *)(v10 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
            break;
          if (*(_DWORD *)(v28 + 4 * v30) == v25)
          {
            v11 = v30 >> 6;
            v12 = 1 << v30;
            goto LABEL_3;
          }
        }
      }
    }
  }
  v19 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    v20 = (unint64_t)(a5[2] + 64) >> 6;
    v21 = a5[3];
    if (v19 >= v20)
      goto LABEL_31;
    v22 = a5[1];
    v23 = *(_QWORD *)(v22 + 8 * v19);
    if (!v23)
    {
      v21 = v15 + 1;
      if (v15 + 2 >= v20)
        goto LABEL_31;
      v23 = *(_QWORD *)(v22 + 8 * (v15 + 2));
      if (v23)
      {
        v19 = v15 + 2;
      }
      else
      {
        v21 = v15 + 2;
        if (v15 + 3 >= v20)
          goto LABEL_31;
        v23 = *(_QWORD *)(v22 + 8 * (v15 + 3));
        if (v23)
        {
          v19 = v15 + 3;
        }
        else
        {
          v19 = v15 + 4;
          v21 = v15 + 3;
          if (v15 + 4 >= v20)
            goto LABEL_31;
          v23 = *(_QWORD *)(v22 + 8 * v19);
          if (!v23)
          {
            v21 = v20 - 1;
            v24 = v15 + 5;
            while (v20 != v24)
            {
              v23 = *(_QWORD *)(v22 + 8 * v24++);
              if (v23)
              {
                v19 = v24 - 1;
                goto LABEL_21;
              }
            }
LABEL_31:
            a5[3] = v21;
            a5[4] = 0;
            swift_retain();
            return sub_1A58973A8(v7, a2, v9, a3);
          }
        }
      }
    }
LABEL_21:
    v17 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v19 << 6);
    v15 = v19;
    goto LABEL_22;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A58973A8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6F8);
  result = sub_1A594C6E4();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v14);
    sub_1A594CE64();
    sub_1A594CEAC();
    result = sub_1A594CED0();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_DWORD *)(*(_QWORD *)(v9 + 48) + 4 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A5897610(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  uint64_t v7;
  int v10;
  uint64_t v11;

  v3 = MEMORY[0x1E0DEE9E8];
  v11 = MEMORY[0x1E0DEE9E8];
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v5 = a2 + 32;
    v6 = (unsigned int *)(a2 + 36);
    v7 = *(_QWORD *)(a2 + 16);
    do
    {
      if (*(v6 - 1) == (_DWORD)a1)
        sub_1A58DAAC4(&v10, *v6);
      v6 += 10;
      --v7;
    }
    while (v7);
    v11 = v3;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    do
    {
      if (*(_DWORD *)v5 == (_DWORD)a1 && *(_BYTE *)(v5 + 24) != 0)
        sub_1A58DAAC4(&v10, *(unsigned int *)(v5 + 4));
      v5 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t sub_1A589770C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7AACE0;
  if (!qword_1EE7AACE0)
  {
    v1 = sub_1A594AF98();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CA9A58], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7AACE0);
  }
  return result;
}

uint64_t _s19CommandOutputBufferVwcp(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s19CommandOutputBufferVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  return a1;
}

__n128 __swift_memcpy34_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s19CommandOutputBufferVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t _s19CommandOutputBufferVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 34))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s19CommandOutputBufferVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 34) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s19CommandOutputBufferVMa()
{
  return &_s19CommandOutputBufferVN;
}

uint64_t sub_1A58978F8()
{
  uint64_t *v0;
  uint64_t done;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v19[5];
  uint64_t v20;

  done = _s19CommandOutputBufferV8IdleDoneVMa(0);
  MEMORY[0x1E0C80A78](done);
  v19[4] = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = _s19CommandOutputBufferV9HandshakeVMa(0);
  MEMORY[0x1E0C80A78](v3);
  v19[3] = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s19CommandOutputBufferV12ContinuationVMa(0);
  MEMORY[0x1E0C80A78](v5);
  v19[2] = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s19CommandOutputBufferV7CommandVMa(0);
  MEMORY[0x1E0C80A78](v7);
  v19[1] = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = _s19CommandOutputBufferV7ElementOMa(0);
  MEMORY[0x1E0C80A78](v20);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v19 - v13;
  v15 = *v0;
  if (*(_QWORD *)(*v0 + 16))
  {
    v19[0] = v0;
    v16 = v15 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55034B8(v16, (uint64_t)v14, _s19CommandOutputBufferV7ElementOMa);
    sub_1A55034B8((uint64_t)v14, (uint64_t)v10, _s19CommandOutputBufferV7ElementOMa);
    v17 = (char *)&loc_1A5897AB8 + dword_1A5897BC4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1A5897BD4(unint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  char v24;
  int v25;
  unint64_t *v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *, uint64_t);
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  void (*v61)(uint64_t, char *, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t *v68;

  v68 = a1;
  v65 = _s19CommandOutputBufferV12ContinuationVMa(0);
  MEMORY[0x1E0C80A78](v65);
  v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799ED0);
  MEMORY[0x1E0C80A78](v64);
  v6 = (char **)((char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v63 = (char *)&v53 - v8;
  MEMORY[0x1E0C80A78](v9);
  v60 = (char **)((char *)&v53 - v10);
  v11 = _s19CommandOutputBufferV7ElementOMa(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v53 - v16;
  v18 = _s19CommandOutputBufferV7CommandVMa(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a2 + *(int *)(type metadata accessor for ConnectionCommand(0) + 20);
  v22 = sub_1A594AE60();
  v67 = *(_QWORD *)(v22 - 8);
  v23 = *(void (**)(uint64_t, char *, uint64_t))(v67 + 16);
  v59 = v22;
  v61 = v23;
  ((void (*)(char *, uint64_t))v23)(v20, v21);
  v24 = *(_BYTE *)a2;
  v66 = a2;
  v25 = *(_DWORD *)(a2 + 4);
  v26 = v68;
  v27 = &v20[*(int *)(v18 + 20)];
  *v27 = v24;
  *((_DWORD *)v27 + 1) = v25;
  v20[*(int *)(v18 + 24)] = 0;
  v53 = v20;
  sub_1A55034B8((uint64_t)v20, (uint64_t)v17, _s19CommandOutputBufferV7CommandVMa);
  v62 = v11;
  swift_storeEnumTagMultiPayload();
  v28 = *v26;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v28 = sub_1A58D4680(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
  v30 = *(_QWORD *)(v28 + 16);
  v29 = *(_QWORD *)(v28 + 24);
  if (v30 >= v29 >> 1)
    v28 = sub_1A58D4680(v29 > 1, v30 + 1, 1, v28);
  *(_QWORD *)(v28 + 16) = v30 + 1;
  v58 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v57 = *(_QWORD *)(v12 + 72);
  sub_1A54E3394((uint64_t)v17, v28 + v58 + v57 * v30, _s19CommandOutputBufferV7ElementOMa);
  *v26 = v28;
  v31 = *(_QWORD *)(v21 + *(int *)(type metadata accessor for ClientCommand.Encoded() + 20));
  v32 = *(_QWORD *)(v31 + 16);
  v54 = v31;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v56 = v32;
  if (v32)
  {
    v33 = 0;
    v34 = (char *)(v54 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80)));
    v55 = *(_QWORD *)(v67 + 72);
    do
    {
      v35 = v64;
      v36 = &v63[*(int *)(v64 + 48)];
      v37 = v59;
      v38 = (uint64_t)v14;
      v39 = v61;
      v61((uint64_t)v36, v34, v59);
      v40 = (uint64_t)v4;
      v41 = v6;
      v42 = v60;
      v43 = (char *)v60 + *(int *)(v35 + 48);
      *v60 = v33;
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v43, v36, v37);
      v44 = (uint64_t)v42;
      v6 = v41;
      v4 = (char *)v40;
      sub_1A5899130(v44, (uint64_t)v6);
      v45 = *v6;
      v39(v40, (char *)v6 + *(int *)(v35 + 48), v37);
      v14 = (char *)v38;
      v46 = v65;
      v47 = *(_DWORD *)(v66 + 4);
      v48 = v40 + *(int *)(v65 + 20);
      *(_BYTE *)v48 = *(_BYTE *)v66;
      *(_DWORD *)(v48 + 4) = v47;
      *(_QWORD *)(v40 + *(int *)(v46 + 24)) = v45;
      sub_1A55034B8(v40, v38, _s19CommandOutputBufferV12ContinuationVMa);
      swift_storeEnumTagMultiPayload();
      v49 = *v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v49 = sub_1A58D4680(0, *(_QWORD *)(v49 + 16) + 1, 1, v49);
      v51 = *(_QWORD *)(v49 + 16);
      v50 = *(_QWORD *)(v49 + 24);
      if (v51 >= v50 >> 1)
        v49 = sub_1A58D4680(v50 > 1, v51 + 1, 1, v49);
      ++v33;
      *(_QWORD *)(v49 + 16) = v51 + 1;
      sub_1A54E3394(v38, v49 + v58 + v51 * v57, _s19CommandOutputBufferV7ElementOMa);
      *v68 = v49;
      sub_1A55034FC((uint64_t)v4, _s19CommandOutputBufferV12ContinuationVMa);
      sub_1A5899178((uint64_t)v6);
      v34 += v55;
    }
    while (v56 != v33);
  }
  swift_bridgeObjectRelease();
  return sub_1A55034FC((uint64_t)v53, _s19CommandOutputBufferV7CommandVMa);
}

BOOL sub_1A5898070(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  _BOOL8 v9;
  uint64_t v11;

  v3 = _s19CommandOutputBufferV7ElementOMa(0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v7 != 1)
    goto LABEL_5;
  sub_1A55034B8(*(_QWORD *)v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), (uint64_t)v6, _s19CommandOutputBufferV7ElementOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1A55034FC((uint64_t)v6, _s19CommandOutputBufferV7ElementOMa);
  if (EnumCaseMultiPayload != 2)
  {
    v7 = *(_QWORD *)(*(_QWORD *)v1 + 16);
LABEL_5:
    v9 = v7 != 0;
    goto LABEL_6;
  }
  v9 = 0;
LABEL_6:
  a1(v1);
  return v9;
}

uint64_t sub_1A589815C(unint64_t *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unsigned __int8 *v14;
  uint64_t v15;
  int v16;
  int v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t *v35;
  int v36;
  int v37;
  void (*v38)(char *, unsigned __int8 *);
  uint64_t v39;
  uint64_t v40;

  v4 = _s19CommandOutputBufferV7ElementOMa(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - v9;
  v11 = _s19CommandOutputBufferV7CommandVMa(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &a2[*(int *)(type metadata accessor for ConnectionCommand(0) + 20)];
  v15 = sub_1A594AE60();
  v34 = *(_QWORD *)(v15 - 8);
  v35 = (unint64_t *)v14;
  v38 = *(void (**)(char *, unsigned __int8 *))(v34 + 16);
  v39 = v15;
  v38(v13, v14);
  v16 = *a2;
  v18 = &v13[*(int *)(v11 + 20)];
  v36 = *((_DWORD *)a2 + 1);
  v17 = v36;
  v37 = v16;
  *v18 = v16;
  *((_DWORD *)v18 + 1) = v17;
  v13[*(int *)(v11 + 24)] = 1;
  sub_1A55034B8((uint64_t)v13, (uint64_t)v10, _s19CommandOutputBufferV7CommandVMa);
  v40 = v4;
  swift_storeEnumTagMultiPayload();
  v19 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v19 = sub_1A58D4680(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
  v21 = *(_QWORD *)(v19 + 16);
  v20 = *(_QWORD *)(v19 + 24);
  if (v21 >= v20 >> 1)
    v19 = sub_1A58D4680(v20 > 1, v21 + 1, 1, v19);
  *(_QWORD *)(v19 + 16) = v21 + 1;
  v22 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v23 = *(_QWORD *)(v5 + 72);
  sub_1A54E3394((uint64_t)v10, v19 + v22 + v23 * v21, _s19CommandOutputBufferV7ElementOMa);
  *a1 = v19;
  v24 = *(unint64_t *)((char *)v35 + *(int *)(type metadata accessor for ClientCommand.Encoded() + 20));
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v33 = v13;
    v26 = v24 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
    v27 = *(_QWORD *)(v34 + 72);
    v34 = v24;
    v35 = a1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    do
    {
      ((void (*)(char *, uint64_t, uint64_t))v38)(v7, v26, v39);
      v28 = &v7[*(int *)(_s19CommandOutputBufferV8IdleDoneVMa(0) + 20)];
      *v28 = v37;
      *((_DWORD *)v28 + 1) = v36;
      swift_storeEnumTagMultiPayload();
      v30 = *(_QWORD *)(v19 + 16);
      v29 = *(_QWORD *)(v19 + 24);
      if (v30 >= v29 >> 1)
        v19 = sub_1A58D4680(v29 > 1, v30 + 1, 1, v19);
      *(_QWORD *)(v19 + 16) = v30 + 1;
      sub_1A54E3394((uint64_t)v7, v19 + v22 + v30 * v23, _s19CommandOutputBufferV7ElementOMa);
      v26 += v27;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    *v35 = v19;
    v13 = v33;
  }
  return sub_1A55034FC((uint64_t)v13, _s19CommandOutputBufferV7CommandVMa);
}

uint64_t sub_1A5898450(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;

  v4 = _s19CommandOutputBufferV7ElementOMa(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s19CommandOutputBufferV9HandshakeVMa(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A594AE60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, a2, v11);
  v12 = a2 + *(int *)(type metadata accessor for HandshakeReply.Encoded() + 20);
  v13 = *(_BYTE *)v12;
  LODWORD(v12) = *(_DWORD *)(v12 + 4);
  v14 = &v10[*(int *)(v8 + 20)];
  *v14 = v13;
  *((_DWORD *)v14 + 1) = v12;
  sub_1A55034B8((uint64_t)v10, (uint64_t)v7, _s19CommandOutputBufferV9HandshakeVMa);
  swift_storeEnumTagMultiPayload();
  v15 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v15 = sub_1A58D4680(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
  v17 = *(_QWORD *)(v15 + 16);
  v16 = *(_QWORD *)(v15 + 24);
  if (v17 >= v16 >> 1)
    v15 = sub_1A58D4680(v16 > 1, v17 + 1, 1, v15);
  *(_QWORD *)(v15 + 16) = v17 + 1;
  sub_1A54E3394((uint64_t)v7, v15+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v17, _s19CommandOutputBufferV7ElementOMa);
  *a1 = v15;
  return sub_1A55034FC((uint64_t)v10, _s19CommandOutputBufferV9HandshakeVMa);
}

uint64_t sub_1A589860C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_1A594AE60();
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x1E0C80A78](v4);
  v23 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = _s19CommandOutputBufferV7CommandVMa(0);
  MEMORY[0x1E0C80A78](v21);
  v22 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s19CommandOutputBufferV7ElementOMa(0);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - v10;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20 - v14;
  v16 = *v1;
  if (*(_QWORD *)(*v1 + 16))
  {
    v20 = a1;
    v26 = v2;
    sub_1A55034B8(v16 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)&v20 - v14, _s19CommandOutputBufferV7ElementOMa);
    sub_1A55034B8((uint64_t)v15, (uint64_t)v11, _s19CommandOutputBufferV7ElementOMa);
    v17 = (char *)&loc_1A58987AC + 4 * byte_1A59DE400[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v18 = _s19CommandOutputBufferV8SendDataVMa(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 1, 1, v18);
}

void sub_1A5898ACC()
{
  uint64_t v0;
  uint64_t done;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  done = _s19CommandOutputBufferV8IdleDoneVMa(0);
  MEMORY[0x1E0C80A78](done);
  v2 = _s19CommandOutputBufferV9HandshakeVMa(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = _s19CommandOutputBufferV12ContinuationVMa(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = _s19CommandOutputBufferV7CommandVMa(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = _s19CommandOutputBufferV7ElementOMa(0);
  MEMORY[0x1E0C80A78](v5);
  sub_1A55034B8(v0, (uint64_t)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v8 = (char *)sub_1A5898C30 + 4 * byte_1A59DE404[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A5898C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A54E3394(v2, v1, _s19CommandOutputBufferV7CommandVMa);
  v3 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v0, v1, v3);
}

void sub_1A5898D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;
  uint64_t done;

  done = _s19CommandOutputBufferV8IdleDoneVMa(0);
  MEMORY[0x1E0C80A78](done);
  v1 = _s19CommandOutputBufferV9HandshakeVMa(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = _s19CommandOutputBufferV12ContinuationVMa(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = _s19CommandOutputBufferV7CommandVMa(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = _s19CommandOutputBufferV7ElementOMa(0);
  MEMORY[0x1E0C80A78](v4);
  sub_1A55034B8(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)sub_1A5898E94 + 4 * byte_1A59DE408[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_1A5898E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned int v4;
  uint64_t v5;

  sub_1A54E3394(v2, v1, _s19CommandOutputBufferV7CommandVMa);
  v3 = (unsigned __int8 *)(v1 + *(int *)(v0 + 20));
  v4 = *v3;
  v5 = *((unsigned int *)v3 + 1);
  sub_1A55034FC(v1, _s19CommandOutputBufferV7CommandVMa);
  return v4 | (unint64_t)(v5 << 32);
}

uint64_t sub_1A5898F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v0 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  if (v0 != _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0())
    return 0;
  sub_1A594AE60();
  sub_1A5899084();
  sub_1A594BD60();
  v1 = sub_1A594BDB4();
  if (v4 == v3)
    return 1;
  MEMORY[0x1E0C80A78](v1);
  sub_1A594ADE8();
  return v4;
}

unint64_t sub_1A5899084()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE798F38;
  if (!qword_1EE798F38)
  {
    v1 = sub_1A594AE60();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEF670], v1);
    atomic_store(result, (unint64_t *)&qword_1EE798F38);
  }
  return result;
}

uint64_t _s19CommandOutputBufferV8IdleDoneVMa(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE797F90);
}

uint64_t _s19CommandOutputBufferV9HandshakeVMa(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE797FC0);
}

uint64_t _s19CommandOutputBufferV12ContinuationVMa(uint64_t a1)
{
  return sub_1A55A1A0C(a1, qword_1EE797F68);
}

uint64_t _s19CommandOutputBufferV7CommandVMa(uint64_t a1)
{
  return sub_1A55A1A0C(a1, qword_1EE797F50);
}

uint64_t _s19CommandOutputBufferV7ElementOMa(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE797F80);
}

uint64_t sub_1A5899130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5899178(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799ED0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s19CommandOutputBufferV8SendDataVMa(uint64_t a1)
{
  return sub_1A55A1A0C(a1, qword_1EE797FA0);
}

unint64_t sub_1A58991CC()
{
  unint64_t result;

  result = qword_1EE7AACE8;
  if (!qword_1EE7AACE8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DE644, &_s19CommandOutputBufferV27ServerExpectsHandshakeReplyVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AACE8);
  }
  return result;
}

unint64_t sub_1A5899210()
{
  unint64_t result;

  result = qword_1EE7AACF0;
  if (!qword_1EE7AACF0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DE584, &_s19CommandOutputBufferV25ServerExpectsContinuationVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AACF0);
  }
  return result;
}

ValueMetadata *_s19CommandOutputBufferV25ServerExpectsContinuationVMa()
{
  return &_s19CommandOutputBufferV25ServerExpectsContinuationVN;
}

ValueMetadata *_s19CommandOutputBufferV33ServerDoesNotExpectHandshakeReplyVMa()
{
  return &_s19CommandOutputBufferV33ServerDoesNotExpectHandshakeReplyVN;
}

ValueMetadata *_s19CommandOutputBufferV40CanNotAppendHandshakeUnlessBufferIsEmptyVMa()
{
  return &_s19CommandOutputBufferV40CanNotAppendHandshakeUnlessBufferIsEmptyVN;
}

ValueMetadata *_s19CommandOutputBufferV27ServerExpectsHandshakeReplyVMa()
{
  return &_s19CommandOutputBufferV27ServerExpectsHandshakeReplyVN;
}

uint64_t sub_1A58992AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58992BC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58992CC()
{
  return sub_1A5899BA0();
}

uint64_t *sub_1A58992D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594AE60();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1A5899368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1A58993CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1A5899444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1A58994A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  *(_DWORD *)(v9 + 4) = *(_DWORD *)(v10 + 4);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_1A589951C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A589952C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A589953C()
{
  return sub_1A5899BA0();
}

uint64_t sub_1A5899560()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5899570()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for HandshakeReply.Encoded(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594AE60();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for HandshakeReply.Encoded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for HandshakeReply.Encoded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  return a1;
}

uint64_t assignWithTake for HandshakeReply.Encoded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  return a1;
}

uint64_t sub_1A5899740()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1A589978C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_2Tm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1A58997DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594AE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1A589984C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594AE60();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1A58998DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_1A5899940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1A58999B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_1A5899A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  *(_DWORD *)(v9 + 4) = *(_DWORD *)(v10 + 4);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_1A5899A90()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1A594AE60();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t sub_1A5899B18()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A594AE60();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t sub_1A5899BA0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594AE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t __swift_memcpy10_4_0(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_1A5899C2C(uint64_t result, int a2)
{
  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    *(_BYTE *)(result + 9) = 0;
  }
  return result;
}

ValueMetadata *_s19CommandOutputBufferV8BehaviorOMa()
{
  return &_s19CommandOutputBufferV8BehaviorON;
}

uint64_t sub_1A5899C60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1A5899CB0 + 4 * byte_1A59DE40C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_1A5899E0C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 3)
  {
    v3 = sub_1A594AE60();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void sub_1A5899E58()
{
  char *v0;

  v0 = (char *)sub_1A5899EA0 + 4 * byte_1A59DE410[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A5899EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  v3 = _s19CommandOutputBufferV7CommandVMa(0);
  *(_QWORD *)(v0 + *(int *)(v3 + 20)) = *(_QWORD *)(v1 + *(int *)(v3 + 20));
  *(_BYTE *)(v0 + *(int *)(v3 + 24)) = *(_BYTE *)(v1 + *(int *)(v3 + 24));
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_1A5899FA4(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1A55034FC(result, _s19CommandOutputBufferV7ElementOMa);
    v2 = (char *)&loc_1A589A004 + 4 * byte_1A59DE414[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1A589A108()
{
  char *v0;

  v0 = (char *)sub_1A589A150 + 4 * byte_1A59DE418[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A589A150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  v3 = _s19CommandOutputBufferV7CommandVMa(0);
  *(_QWORD *)(v0 + *(int *)(v3 + 20)) = *(_QWORD *)(v1 + *(int *)(v3 + 20));
  *(_BYTE *)(v0 + *(int *)(v3 + 24)) = *(_BYTE *)(v1 + *(int *)(v3 + 24));
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_1A589A254(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1A55034FC(result, _s19CommandOutputBufferV7ElementOMa);
    v2 = (char *)&loc_1A589A2B4 + 4 * byte_1A59DE41C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1A589A3B8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = _s19CommandOutputBufferV7CommandVMa(319);
  if (v1 <= 0x3F)
  {
    result = _s19CommandOutputBufferV12ContinuationVMa(319);
    if (v2 <= 0x3F)
    {
      result = _s19CommandOutputBufferV8IdleDoneVMa(319);
      if (v3 <= 0x3F)
      {
        result = _s19CommandOutputBufferV9HandshakeVMa(319);
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t _s19CommandOutputBufferV7CommandV4KindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A589A4BC + 4 * byte_1A59DE425[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A589A4F0 + 4 * byte_1A59DE420[v4]))();
}

uint64_t sub_1A589A4F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A589A4F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A589A500);
  return result;
}

uint64_t sub_1A589A50C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A589A514);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A589A518(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A589A520(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s19CommandOutputBufferV7CommandV4KindOMa()
{
  return &_s19CommandOutputBufferV7CommandV4KindON;
}

uint64_t __swift_memcpy9_4_2(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s19CommandOutputBufferV8BehaviorO30WorkaroundForOpenwaveMessagingVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *_s19CommandOutputBufferV8BehaviorO30WorkaroundForOpenwaveMessagingVMa()
{
  return &_s19CommandOutputBufferV8BehaviorO30WorkaroundForOpenwaveMessagingVN;
}

unint64_t sub_1A589A590()
{
  unint64_t result;

  result = qword_1EE7AACF8;
  if (!qword_1EE7AACF8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DE6F0, &_s19CommandOutputBufferV7CommandV4KindON);
    atomic_store(result, (unint64_t *)&qword_1EE7AACF8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Compress(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A589A620 + 4 * byte_1A59DE71D[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A589A654 + 4 * byte_1A59DE718[v4]))();
}

uint64_t sub_1A589A654(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A589A65C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A589A664);
  return result;
}

uint64_t sub_1A589A670(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A589A678);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A589A67C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A589A684(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Compress()
{
  return &type metadata for Compress;
}

double sub_1A589A6A0@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 2;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 4;
  return result;
}

uint64_t sub_1A589A6C8@<X0>(char a1@<W3>, uint64_t a2@<X8>)
{
  __int128 v4[11];
  _BYTE v5[184];
  _BYTE v6[184];

  if (a1)
    sub_1A589A730((uint64_t)v4);
  else
    sub_1A589A774((uint64_t)v4);
  sub_1A5862234(v4, (uint64_t)v5);
  nullsub_1(v5);
  sub_1A587AC04((uint64_t)v5, (uint64_t)v6);
  return sub_1A587AC04((uint64_t)v6, a2);
}

double sub_1A589A730(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 2;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_QWORD *)(a1 + 168) = 0;
  *(_BYTE *)(a1 + 176) = 7;
  return result;
}

double sub_1A589A774(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_QWORD *)(a1 + 168) = 0;
  *(_BYTE *)(a1 + 176) = 7;
  return result;
}

uint64_t sub_1A589A7B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = v0;
  v2 = sub_1A594A8D8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594A884();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v20 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v5, v1, v2, v11);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) != *MEMORY[0x1E0CCE290])
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
  v14 = &v5[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798E78) + 48)];
  v15 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v15(v13, v5, v6);
  v16 = sub_1A594A8CC();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  v15(v9, v13, v6);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) != *MEMORY[0x1E0CCE228])
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
  v17 = *(_QWORD *)v9;
  v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0D60);
  sub_1A5510284((uint64_t)&v9[*(int *)(v18 + 48)], &qword_1EE7A0C08);
  return v17;
}

uint64_t sub_1A589A9A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = v0;
  v40 = sub_1A594A764();
  v42 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v41 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = _s6LoggerVMa_0();
  v38 = *(_QWORD *)(v36 - 8);
  v3 = *(_QWORD *)(v38 + 64);
  MEMORY[0x1E0C80A78](v36);
  v39 = (uint64_t)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v35 - v5;
  v7 = sub_1A594AA40();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - v12;
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15IMAP2Connection10Connection_connection);
  sub_1A594AA58();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0CCE5B8], v7);
  v15 = MEMORY[0x1A85ACEAC](v13, v10);
  v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v10, v7);
  result = ((uint64_t (*)(char *, uint64_t))v16)(v13, v7);
  if ((v15 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798E90);
    v18 = swift_allocBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v19, 1, 1, v7);
    v20 = swift_allocObject();
    swift_weakInit();
    v21 = v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
    v37 = v14;
    sub_1A55034B8(v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)v6, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v22 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    v23 = (v3 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = swift_allocObject();
    sub_1A54E3394((uint64_t)v6, v24 + v22, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    *(_QWORD *)(v24 + v23) = v20;
    *(_QWORD *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
    v25 = v21;
    swift_retain();
    v38 = v18;
    swift_retain();
    sub_1A58A6898((uint64_t)sub_1A58A683C);
    sub_1A594A9D4();
    swift_release();
    swift_release();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1A58A6898((uint64_t)sub_1A58A68A8);
    sub_1A594A980();
    swift_release_n();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1A58A6898((uint64_t)sub_1A58A68C8);
    sub_1A594A9E0();
    swift_release_n();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1A58A6898((uint64_t)sub_1A58A68D0);
    sub_1A594A9EC();
    swift_release_n();
    v26 = v39;
    sub_1A55034B8(v21, v39, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v27 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v41, v26, v40);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v28 = sub_1A594A74C();
    v29 = sub_1A594C030();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v44 = v31;
      *(_DWORD *)v30 = 68158210;
      LODWORD(v43) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v30 + 8) = 256;
      v32 = v25 + *(int *)(v36 + 20);
      LOBYTE(v43) = *(_BYTE *)v32;
      sub_1A594C3CC();
      *(_WORD *)(v30 + 11) = 2082;
      v33 = ConnectionID.debugDescription.getter(*(unsigned int *)(v32 + 4));
      v43 = sub_1A589167C(v33, v34, &v44);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v28, v29, "[%.*hhx-%{public}s] Starting", (uint8_t *)v30, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v31, -1, -1);
      MEMORY[0x1A85B1964](v30, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v27);
    sub_1A594AA4C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A589AF40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  int v48;
  os_log_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v3 = v2;
  v58 = a1;
  v46 = type metadata accessor for LoggableCommand(0);
  MEMORY[0x1E0C80A78](v46);
  v47 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594A764();
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  MEMORY[0x1E0C80A78](v6);
  v51 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v8);
  v50 = (unint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for OutboundContent(0);
  MEMORY[0x1E0C80A78](v57);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v12);
  v54 = (uint64_t)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v56 = (uint64_t)&v45 - v15;
  v16 = sub_1A594A62C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(int *)(v8 + 20);
  v49 = (os_log_t)(v3 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger);
  v21 = (unsigned __int8 *)(v3 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger + v20);
  v22 = *((unsigned int *)v21 + 1);
  v48 = *v21;
  OSSignpostID.init(engine:kind:connectionID:)();
  v23 = swift_allocObject();
  v55 = v3;
  v24 = v58;
  swift_weakInit();
  swift_retain();
  sub_1A58C0D30(v24, a2, (uint64_t)v19, (uint64_t)sub_1A58A6710, v23);
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  swift_release();
  sub_1A55034B8(a2, (uint64_t)v11, type metadata accessor for OutboundContent);
  if (swift_getEnumCaseMultiPayload())
  {
    v25 = type metadata accessor for OutboundContent;
    v26 = (uint64_t)v11;
  }
  else
  {
    v27 = v48;
    v28 = v24;
    v29 = v56;
    sub_1A54E3394((uint64_t)v11, v56, type metadata accessor for ClientCommand);
    v30 = v50;
    sub_1A55034B8((uint64_t)v49, v50, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v32 = v51;
    v31 = v52;
    v33 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v51, v30, v53);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A55034B8(v29, v54, type metadata accessor for ClientCommand);
    v34 = sub_1A594A74C();
    v35 = sub_1A594C030();
    if (os_log_type_enabled(v34, v35))
    {
      v50 = HIDWORD(v28);
      v36 = swift_slowAlloc();
      v57 = swift_slowAlloc();
      v60 = v57;
      *(_DWORD *)v36 = 68158466;
      LODWORD(v59) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v36 + 8) = 256;
      LOBYTE(v59) = v27;
      sub_1A594C3CC();
      *(_WORD *)(v36 + 11) = 2082;
      v49 = v34;
      v37 = ConnectionID.debugDescription.getter(v22);
      v59 = sub_1A589167C(v37, v38, &v60);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 21) = 2082;
      v39 = (uint64_t)v47;
      v40 = v54;
      sub_1A55034B8(v54, (uint64_t)&v47[*(int *)(v46 + 20)], type metadata accessor for ClientCommand);
      *(_BYTE *)v39 = v28;
      *(_DWORD *)(v39 + 4) = v50;
      v41 = LoggableCommand.makeDescriptionWithoutPII()();
      sub_1A55034FC(v39, type metadata accessor for LoggableCommand);
      v59 = sub_1A589167C(v41._countAndFlagsBits, (unint64_t)v41._object, &v60);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v40, type metadata accessor for ClientCommand);
      v42 = v49;
      _os_log_impl(&dword_1A4F90000, v49, v35, "[%.*hhx-%{public}s] Sent 'C: %{public}s'", (uint8_t *)v36, 0x1Fu);
      v43 = v57;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v43, -1, -1);
      MEMORY[0x1A85B1964](v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v53);
    }
    else
    {

      sub_1A55034FC(v54, type metadata accessor for ClientCommand);
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
    }
    v26 = v56;
    v25 = type metadata accessor for ClientCommand;
  }
  return sub_1A55034FC(v26, v25);
}

uint64_t sub_1A589B4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unsigned int v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = sub_1A594A8D8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594A884();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - v10;
  v12 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 28));
  if (v12 >> 6)
  {
    if (v12 >> 6 != 1)
      return 0;
    v12 &= 0x3Fu;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v4, v1) == *MEMORY[0x1E0CCE290])
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
    v13 = &v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798E78) + 48)];
    v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v11, v4, v5);
    v15 = sub_1A594A8CC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
    v14(v8, v11, v5);
    if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) == *MEMORY[0x1E0CCE228])
    {
      (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v5);
      v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0D60);
      sub_1A5510284((uint64_t)&v8[*(int *)(v16 + 48)], &qword_1EE7A0C08);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v12;
}

unint64_t sub_1A589B6E0()
{
  uint64_t v0;
  unint64_t result;
  NSObject *v2;
  unsigned int negotiated_tls_protocol_version;
  unsigned int negotiated_tls_ciphersuite;

  sub_1A594AB78();
  sub_1A594AB30();
  v0 = sub_1A594AA7C();
  swift_release();
  result = 0;
  if (v0)
  {
    sub_1A594AB6C();
    swift_dynamicCastClassUnconditional();
    swift_retain();
    v2 = sub_1A594AB3C();
    negotiated_tls_protocol_version = sec_protocol_metadata_get_negotiated_tls_protocol_version(v2);
    negotiated_tls_ciphersuite = sec_protocol_metadata_get_negotiated_tls_ciphersuite(v2);
    if (sec_protocol_metadata_get_server_name(v2))
      sub_1A594B610();
    swift_release_n();
    swift_unknownObjectRelease();
    return negotiated_tls_protocol_version | ((unint64_t)negotiated_tls_ciphersuite << 16);
  }
  return result;
}

uint64_t type metadata accessor for ConnectionConfiguration(uint64_t a1)
{
  return sub_1A55A1A0C(a1, qword_1EE798008);
}

uint64_t ConnectionConfiguration.init(endpoint:prohibitConstrainedPaths:prohibitedInterfaceTypes:transportLayerSecurity:sourceApplicationBundleIdentifier:networkAccountIdentifier:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;

  v15 = (int *)type metadata accessor for ConnectionConfiguration(0);
  v16 = v15[6];
  v17 = (_QWORD *)(a9 + v15[8]);
  v18 = (_QWORD *)(a9 + v15[9]);
  v19 = sub_1A594A8D8();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  *(_BYTE *)(a9 + v15[5]) = a2;
  *(_QWORD *)(a9 + v16) = a3;
  *(_BYTE *)(a9 + v15[7]) = a4;
  *v17 = a5;
  v17[1] = a6;
  *v18 = a7;
  v18[1] = a8;
  return result;
}

uint64_t ConnectionConfiguration.TransportLayerSecurity.init(_:)(uint64_t result)
{
  unsigned int v1;

  if (result >> 6 == 1)
    v1 = result & 0x3F | 0x40;
  else
    v1 = 128;
  if (result >> 6)
    return v1;
  else
    return result;
}

uint64_t sub_1A589C08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1A594A8D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1A589C120(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A594A8D8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t sub_1A589C198()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594A8D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A589C2A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A589C2B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A589C2B8);
  return result;
}

uint64_t sub_1A589C2D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A589C2D8);
  *(_BYTE *)result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1A589C2DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A589C2E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

BOOL sub_1A589C300(_QWORD *a1, _QWORD *a2)
{
  return sub_1A58A5A7C(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

BOOL sub_1A589C31C(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *a1;
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = a2[4];
  v12 = a2[5];
  if (v3 >> 62)
  {
    if (v3 >> 62 != 1)
    {
      if (v7 >> 62 != 2 || v7 != 0x8000000000000000 || (v9 | v8) != 0)
        return 0;
      return sub_1A58A5A7C(v4, v5, v6, v10, v11, v12);
    }
    if (v7 >> 62 != 1)
      return 0;
  }
  else if (v7 >> 62)
  {
    return 0;
  }
  if ((sub_1A58D89A4(v3, a1[1], a1[2], v7, v8, v9) & 1) != 0)
    return sub_1A58A5A7C(v4, v5, v6, v10, v11, v12);
  return 0;
}

uint64_t sub_1A589C3E8(uint64_t a1, void *a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  id v38;
  uint64_t v39;
  char *v40;
  char *v41;
  NSObject *v42;
  os_signpost_type_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint8_t *v48;
  os_signpost_id_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  id v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;

  v5 = v4;
  v61 = a2;
  v68 = a1;
  v8 = sub_1A594A62C();
  v63 = *(_QWORD *)(v8 - 8);
  v64 = v8;
  MEMORY[0x1E0C80A78](v8);
  v53 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v65 = (char *)&v52 - v11;
  v12 = sub_1A594A65C();
  v66 = *(_QWORD *)(v12 - 8);
  v67 = v12;
  MEMORY[0x1E0C80A78](v12);
  v60 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = (char *)sub_1A594A8D8();
  v59 = *((_QWORD *)v62 - 1);
  MEMORY[0x1E0C80A78](v62);
  v58 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A594AA94();
  v56 = *(_QWORD *)(v15 - 8);
  v57 = v15;
  MEMORY[0x1E0C80A78](v15);
  v55 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ConnectionConfiguration(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v52 - v24;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  v26 = OBJC_IVAR____TtC15IMAP2Connection10Connection_receiveTranscoder;
  *(_QWORD *)(v5 + v26) = ServerResponseTranscoder.init()();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_pendingHandshakeReplyCount) = 0;
  v27 = v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_throttleInfo;
  *(_QWORD *)v27 = 0;
  *(_QWORD *)(v27 + 8) = 0;
  *(_BYTE *)(v27 + 16) = 1;
  v28 = ConnectionLoggerID.init(engine:connection:)(a3, a4);
  v29 = v28;
  v30 = HIDWORD(v28);
  sub_1A594A758();
  v31 = &v25[*(int *)(v20 + 20)];
  *v31 = v29;
  *((_DWORD *)v31 + 1) = v30;
  v54 = sub_1A594AA88();
  v32 = v68;
  sub_1A55034B8(v68, (uint64_t)v19, type metadata accessor for ConnectionConfiguration);
  sub_1A55034B8((uint64_t)v25, (uint64_t)v22, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  sub_1A58A8138((uint64_t)v19, (uint64_t)v22);
  sub_1A594AAC4();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594AAD0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v33 = v32;
  sub_1A594AADC();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594AAF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v55, *MEMORY[0x1E0CCE638], v57);
  sub_1A594AAA0();
  (*(void (**)(char *, char *, char *))(v59 + 16))(v58, v19, v62);
  v34 = sub_1A594AA10();
  v35 = (uint64_t)v22;
  v36 = v65;
  sub_1A55034FC(v35, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  sub_1A55034FC((uint64_t)v19, type metadata accessor for ConnectionConfiguration);
  v62 = v25;
  sub_1A55034B8((uint64_t)v25, v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_createdAt) = static MonotonicTime.now()();
  sub_1A55034B8(v33, v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration, type metadata accessor for ConnectionConfiguration);
  v37 = v61;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_queue) = v61;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_connection) = v34;
  v38 = v37;
  swift_retain();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_underlyingID) = sub_1A594A914();
  v39 = tracingSignposter.unsafeMutableAddressor();
  v40 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v60, v39, v67);
  OSSignpostID.init(engine:kind:connectionID:)();
  v41 = v40;
  v42 = sub_1A594A650();
  v43 = sub_1A594C150();
  if ((sub_1A594C318() & 1) != 0)
  {
    v44 = v63;
    v45 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
    v46 = v53;
    v61 = v38;
    v47 = v64;
    v45(v53, v36, v64);
    v48 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v48 = 67109120;
    v69 = 1;
    sub_1A594C3CC();
    v49 = sub_1A594A620();
    _os_signpost_emit_with_name_impl(&dword_1A4F90000, v42, v43, v49, "Connection.networkStateUpdate", "%u", v48, 8u);
    MEMORY[0x1A85B1964](v48, -1, -1);
    swift_release();

    sub_1A55034FC(v68, type metadata accessor for ConnectionConfiguration);
    v50 = *(void (**)(char *, uint64_t))(v44 + 8);
    v50(v65, v47);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v41, v67);
    sub_1A55034FC((uint64_t)v62, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v50(v46, v47);
  }
  else
  {
    swift_release();

    sub_1A55034FC(v68, type metadata accessor for ConnectionConfiguration);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v36, v64);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v67);
    sub_1A55034FC((uint64_t)v62, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  }
  return v5;
}

uint64_t sub_1A589C9F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_signpost_type_t v15;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  uint64_t v18;
  uint8_t *v19;
  uint8_t *v20;
  os_signpost_id_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;

  v1 = v0;
  v28 = sub_1A594A62C();
  v2 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - v6;
  v8 = sub_1A594A65C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = tracingSignposter.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v13 = v0 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
  _s6LoggerVMa_0();
  v27 = v13;
  OSSignpostID.init(engine:kind:connectionID:)();
  v14 = sub_1A594A650();
  v15 = sub_1A594C150();
  if ((sub_1A594C318() & 1) != 0)
  {
    v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    v17 = v4;
    v25 = v4;
    v18 = v28;
    v16(v17, v7, v28);
    v19 = (uint8_t *)swift_slowAlloc();
    v26 = v2;
    v20 = v19;
    *(_DWORD *)v19 = 67109120;
    v29 = 2;
    sub_1A594C3CC();
    v21 = sub_1A594A620();
    _os_signpost_emit_with_name_impl(&dword_1A4F90000, v14, v15, v21, "Connection.networkStateUpdate", "%u", v20, 8u);
    MEMORY[0x1A85B1964](v20, -1, -1);

    v22 = *(void (**)(char *, uint64_t))(v26 + 8);
    v22(v7, v18);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v22(v25, v18);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v28);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_1A594A92C();
  sub_1A55034FC(v27, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  sub_1A55034FC(v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration, type metadata accessor for ConnectionConfiguration);
  sub_1A5892AD4(v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate);
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_1A589CCA8()
{
  sub_1A589C9F0();
  return swift_deallocClassInstance();
}

uint64_t sub_1A589CCCC()
{
  return type metadata accessor for Connection(0);
}

uint64_t type metadata accessor for Connection(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE797FF0);
}

uint64_t sub_1A589CCE8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = _s6LoggerVMa_0();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ConnectionConfiguration(319);
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

ValueMetadata *type metadata accessor for Connection.ThrottleInfo()
{
  return &type metadata for Connection.ThrottleInfo;
}

char *sub_1A589CDBC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  char v33;
  unint64_t v34;
  unsigned int v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *(_QWORD *)a2;
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(_BYTE *)(a2 + 16);
      sub_1A5862C1C(v11, v12, v13);
      *(_QWORD *)a1 = v11;
      *((_QWORD *)a1 + 1) = v12;
      a1[16] = v13;
LABEL_27:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v9 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v9;
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
          *((_DWORD *)a1 + 8) = *(_DWORD *)(a2 + 32);
          *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          goto LABEL_26;
        case 1u:
          v14 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v14;
          v15 = *(_QWORD *)(a2 + 16);
          v16 = *(_QWORD *)(a2 + 24);
          *((_QWORD *)a1 + 2) = v15;
          *((_QWORD *)a1 + 3) = v16;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_26;
        case 2u:
        case 8u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_26;
        case 3u:
        case 4u:
        case 5u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_26;
        case 6u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_26;
        case 7u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_26;
        case 9u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v17 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796830);
          v18 = *(int *)(v17 + 64);
          v19 = &a1[v18];
          v20 = (const void *)(a2 + v18);
          v21 = sub_1A594A0EC();
          v22 = *(_QWORD *)(v21 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
          {
            v23 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796488);
            memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
          }
          v41 = *(int *)(v17 + 80);
          v42 = (uint64_t *)&a1[v41];
          v43 = (uint64_t *)(a2 + v41);
          v44 = *v43;
          v45 = v43[1];
          sub_1A54E42B4(*v43, v45);
          *v42 = v44;
          v42[1] = v45;
          goto LABEL_26;
        case 0xAu:
        case 0xCu:
          v24 = *(_QWORD *)a2;
          sub_1A589D3EC(v24);
          *(_QWORD *)a1 = v24;
          goto LABEL_26;
        case 0xBu:
        case 0xDu:
          v25 = *(_QWORD *)a2;
          sub_1A589D3EC(*(_QWORD *)a2);
          v26 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = v25;
          *((_QWORD *)a1 + 1) = v26;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_26;
        case 0xEu:
          v27 = *(_QWORD *)a2;
          v28 = *(_DWORD *)(a2 + 8);
          v29 = *(_BYTE *)(a2 + 12);
          sub_1A54E4334(*(_QWORD *)a2, v28, v29);
          *(_QWORD *)a1 = v27;
          *((_DWORD *)a1 + 2) = v28;
          a1[12] = v29;
          v30 = *(_QWORD *)(a2 + 24);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          *((_QWORD *)a1 + 3) = v30;
          a1[32] = *(_BYTE *)(a2 + 32);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_26;
        case 0xFu:
          v31 = *(_QWORD *)a2;
          v32 = *(_DWORD *)(a2 + 8);
          v33 = *(_BYTE *)(a2 + 12);
          sub_1A54E4334(*(_QWORD *)a2, v32, v33);
          *(_QWORD *)a1 = v31;
          *((_DWORD *)a1 + 2) = v32;
          a1[12] = v33;
          *((_WORD *)a1 + 8) = *(_WORD *)(a2 + 16);
          *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_26;
        case 0x10u:
        case 0x11u:
          v34 = *(_QWORD *)a2;
          v35 = *(_DWORD *)(a2 + 8);
          v36 = *(_BYTE *)(a2 + 12);
          sub_1A54E4334(*(_QWORD *)a2, v35, v36);
          *(_QWORD *)a1 = v34;
          *((_DWORD *)a1 + 2) = v35;
          a1[12] = v36;
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_26;
        case 0x12u:
          v37 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v37;
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_26;
        case 0x13u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          v38 = *(_QWORD *)(a2 + 16);
          *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = v38;
          v39 = *(_QWORD *)(a2 + 32);
          *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
          *((_QWORD *)a1 + 4) = v39;
          v40 = *(_QWORD *)(a2 + 48);
          *((_QWORD *)a1 + 5) = *(_QWORD *)(a2 + 40);
          *((_QWORD *)a1 + 6) = v40;
          *((_QWORD *)a1 + 7) = *(_QWORD *)(a2 + 56);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_26:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          break;
      }
      goto LABEL_27;
    }
    memcpy(a1, (const void *)a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

unint64_t sub_1A589D3EC(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A589D428(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
    return sub_1A585C500(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  if (!(_DWORD)result)
  {
    type metadata accessor for ClientCommand(0);
    result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
        swift_bridgeObjectRelease();
        return swift_release();
      case 1:
        swift_bridgeObjectRelease();
        goto LABEL_21;
      case 2:
      case 6:
      case 8:
        swift_bridgeObjectRelease();
        goto LABEL_21;
      case 3:
      case 4:
      case 5:
        goto LABEL_21;
      case 7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_21;
      case 9:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796830);
        v4 = a1 + *(int *)(v3 + 64);
        v5 = sub_1A594A0EC();
        v6 = *(_QWORD *)(v5 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
          (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
        return sub_1A54E46E8(*(_QWORD *)(a1 + *(int *)(v3 + 80)), *(_QWORD *)(a1 + *(int *)(v3 + 80) + 8));
      case 10:
      case 12:
        return sub_1A589D620(*(_QWORD *)a1);
      case 11:
      case 13:
        sub_1A589D620(*(_QWORD *)a1);
        goto LABEL_21;
      case 14:
      case 16:
      case 17:
        sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
        goto LABEL_21;
      case 15:
        sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
        goto LABEL_21;
      case 18:
        swift_release();
        swift_release();
        return swift_release();
      case 19:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_21:
        result = swift_bridgeObjectRelease();
        break;
      default:
        return result;
    }
  }
  return result;
}

unint64_t sub_1A589D620(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1A589D65C(char *a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int v30;
  char v31;
  unint64_t v32;
  unsigned int v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v9 = *(_QWORD *)a2;
    v10 = *(_QWORD *)(a2 + 8);
    v11 = *(_BYTE *)(a2 + 16);
    sub_1A5862C1C(v9, v10, v11);
    *(_QWORD *)a1 = v9;
    *((_QWORD *)a1 + 1) = v10;
    a1[16] = v11;
LABEL_25:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v8 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v8;
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
        *((_DWORD *)a1 + 8) = *(_DWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        goto LABEL_24;
      case 1u:
        v12 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v12;
        v13 = *(_QWORD *)(a2 + 16);
        v14 = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 2) = v13;
        *((_QWORD *)a1 + 3) = v14;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_24;
      case 2u:
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_24;
      case 3u:
      case 4u:
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_24;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_24;
      case 7u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_24;
      case 9u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796830);
        v16 = *(int *)(v15 + 64);
        v17 = &a1[v16];
        v18 = (const void *)(a2 + v16);
        v19 = sub_1A594A0EC();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796488);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        v39 = *(int *)(v15 + 80);
        v40 = (uint64_t *)&a1[v39];
        v41 = (uint64_t *)(a2 + v39);
        v42 = *v41;
        v43 = v41[1];
        sub_1A54E42B4(*v41, v43);
        *v40 = v42;
        v40[1] = v43;
        goto LABEL_24;
      case 0xAu:
      case 0xCu:
        v22 = *(_QWORD *)a2;
        sub_1A589D3EC(v22);
        *(_QWORD *)a1 = v22;
        goto LABEL_24;
      case 0xBu:
      case 0xDu:
        v23 = *(_QWORD *)a2;
        sub_1A589D3EC(*(_QWORD *)a2);
        v24 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = v23;
        *((_QWORD *)a1 + 1) = v24;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_24;
      case 0xEu:
        v25 = *(_QWORD *)a2;
        v26 = *(_DWORD *)(a2 + 8);
        v27 = *(_BYTE *)(a2 + 12);
        sub_1A54E4334(*(_QWORD *)a2, v26, v27);
        *(_QWORD *)a1 = v25;
        *((_DWORD *)a1 + 2) = v26;
        a1[12] = v27;
        v28 = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_QWORD *)a1 + 3) = v28;
        a1[32] = *(_BYTE *)(a2 + 32);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_24;
      case 0xFu:
        v29 = *(_QWORD *)a2;
        v30 = *(_DWORD *)(a2 + 8);
        v31 = *(_BYTE *)(a2 + 12);
        sub_1A54E4334(*(_QWORD *)a2, v30, v31);
        *(_QWORD *)a1 = v29;
        *((_DWORD *)a1 + 2) = v30;
        a1[12] = v31;
        *((_WORD *)a1 + 8) = *(_WORD *)(a2 + 16);
        *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_24;
      case 0x10u:
      case 0x11u:
        v32 = *(_QWORD *)a2;
        v33 = *(_DWORD *)(a2 + 8);
        v34 = *(_BYTE *)(a2 + 12);
        sub_1A54E4334(*(_QWORD *)a2, v33, v34);
        *(_QWORD *)a1 = v32;
        *((_DWORD *)a1 + 2) = v33;
        a1[12] = v34;
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_24;
      case 0x12u:
        v35 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v35;
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_24;
      case 0x13u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v36 = *(_QWORD *)(a2 + 16);
        *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = v36;
        v37 = *(_QWORD *)(a2 + 32);
        *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 4) = v37;
        v38 = *(_QWORD *)(a2 + 48);
        *((_QWORD *)a1 + 5) = *(_QWORD *)(a2 + 40);
        *((_QWORD *)a1 + 6) = v38;
        *((_QWORD *)a1 + 7) = *(_QWORD *)(a2 + 56);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    goto LABEL_25;
  }
  memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1A589DC64(char *a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  char v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;

  if (a1 != (char *)a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for OutboundContent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v9 = *(_QWORD *)a2;
      v10 = *(_QWORD *)(a2 + 8);
      v11 = *(_BYTE *)(a2 + 16);
      sub_1A5862C1C(v9, v10, v11);
      *(_QWORD *)a1 = v9;
      *((_QWORD *)a1 + 1) = v10;
      a1[16] = v11;
LABEL_26:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          *((_DWORD *)a1 + 7) = *(_DWORD *)(a2 + 28);
          v8 = *(_DWORD *)(a2 + 32);
          *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
          *((_DWORD *)a1 + 8) = v8;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          goto LABEL_25;
        case 1u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_25;
        case 2u:
        case 8u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_25;
        case 3u:
        case 4u:
        case 5u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_25;
        case 6u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_25;
        case 7u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_25;
        case 9u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796830);
          v13 = *(int *)(v12 + 64);
          v14 = &a1[v13];
          v15 = (const void *)(a2 + v13);
          v16 = sub_1A594A0EC();
          v17 = *(_QWORD *)(v16 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
          {
            v18 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796488);
            memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
          }
          v31 = *(int *)(v12 + 80);
          v32 = (uint64_t *)&a1[v31];
          v33 = (uint64_t *)(a2 + v31);
          v34 = *v33;
          v35 = v33[1];
          sub_1A54E42B4(*v33, v35);
          *v32 = v34;
          v32[1] = v35;
          goto LABEL_25;
        case 0xAu:
        case 0xCu:
          v19 = *(_QWORD *)a2;
          sub_1A589D3EC(v19);
          *(_QWORD *)a1 = v19;
          goto LABEL_25;
        case 0xBu:
        case 0xDu:
          v20 = *(_QWORD *)a2;
          sub_1A589D3EC(*(_QWORD *)a2);
          *(_QWORD *)a1 = v20;
          *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_25;
        case 0xEu:
          v21 = *(_QWORD *)a2;
          v22 = *(_DWORD *)(a2 + 8);
          v23 = *(_BYTE *)(a2 + 12);
          sub_1A54E4334(*(_QWORD *)a2, v22, v23);
          *(_QWORD *)a1 = v21;
          *((_DWORD *)a1 + 2) = v22;
          a1[12] = v23;
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          v24 = *(_QWORD *)(a2 + 24);
          a1[32] = *(_BYTE *)(a2 + 32);
          *((_QWORD *)a1 + 3) = v24;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_25;
        case 0xFu:
          v25 = *(_QWORD *)a2;
          v26 = *(_DWORD *)(a2 + 8);
          v27 = *(_BYTE *)(a2 + 12);
          sub_1A54E4334(*(_QWORD *)a2, v26, v27);
          *(_QWORD *)a1 = v25;
          *((_DWORD *)a1 + 2) = v26;
          a1[12] = v27;
          a1[16] = *(_BYTE *)(a2 + 16);
          a1[17] = *(_BYTE *)(a2 + 17);
          *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_25;
        case 0x10u:
        case 0x11u:
          v28 = *(_QWORD *)a2;
          v29 = *(_DWORD *)(a2 + 8);
          v30 = *(_BYTE *)(a2 + 12);
          sub_1A54E4334(*(_QWORD *)a2, v29, v30);
          *(_QWORD *)a1 = v28;
          *((_DWORD *)a1 + 2) = v29;
          a1[12] = v30;
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_25;
        case 0x12u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_25;
        case 0x13u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
          *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
          *((_QWORD *)a1 + 5) = *(_QWORD *)(a2 + 40);
          *((_QWORD *)a1 + 6) = *(_QWORD *)(a2 + 48);
          *((_QWORD *)a1 + 7) = *(_QWORD *)(a2 + 56);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_25:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_26;
    }
    memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for OutboundContent(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE798120);
}

_QWORD *sub_1A589E2F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for ClientCommand(0);
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      a1[2] = a2[2];
      v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796830);
      v8 = *(int *)(v7 + 64);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1A594A0EC();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796488);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(_OWORD *)((char *)a1 + *(int *)(v7 + 80)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 80));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1A589E470(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for OutboundContent);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for ClientCommand(0);
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        a1[2] = a2[2];
        v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796830);
        v8 = *(int *)(v7 + 64);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1A594A0EC();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          v13 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796488);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        *(_OWORD *)((char *)a1 + *(int *)(v7 + 80)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 80));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A589E608()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ClientCommand(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A589E674(uint64_t a1, _QWORD *a2, char *a3, char *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  NSObject *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  void (*v147)(char *, uint64_t, uint64_t);
  void (*v148)(char *, uint64_t);
  NSObject *v149;
  char v150;
  _DWORD *v151;
  os_log_t v152;
  uint64_t v153;
  char *v154;
  uint8_t *v155;
  void (*v156)(char *, char *, uint64_t);
  uint8_t *v157;
  char *v158;
  int v159;
  BOOL v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  os_log_t v165;
  int v166;
  void (*v167)(char *, uint64_t);
  char *v168;
  void (*v169)(os_log_t, uint64_t, uint64_t);
  uint64_t v170;
  uint64_t v171;
  void (*v172)(char *, uint64_t);
  os_signpost_id_t v173;
  void (*v174)(char *, os_log_t);
  uint64_t result;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  os_log_t v180;
  uint64_t v181;
  uint64_t (*v182)(os_log_t, uint64_t);
  int v183;
  int v184;
  void (*v185)(char *, os_log_t, uint64_t);
  NSObject *v186;
  _DWORD *v187;
  int v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  NSObject *v197;
  os_log_type_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  os_log_t v206;
  void (*v207)(char *, os_log_t, uint64_t);
  char *v208;
  void (*v209)(char *, char *, uint64_t);
  char *v210;
  int v211;
  int v212;
  uint64_t v213;
  char *v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  NSObject *v220;
  os_log_type_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  NSObject *v240;
  uint64_t v241;
  NSObject *v242;
  os_log_type_t v243;
  int v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  char *v251;
  void *v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  os_log_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  _QWORD *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  NSObject *v266;
  os_log_type_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  unint64_t v272;
  _QWORD *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  char *v278;
  void (*v279)(char *, uint64_t);
  NSObject *v280;
  os_log_type_t v281;
  _BOOL4 v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  unint64_t v287;
  char *v288;
  void *v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  _QWORD *v293;
  os_log_t v294;
  uint64_t v295;
  void (*v296)(char *, _QWORD *, uint64_t);
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  void (*v301)(char *, uint64_t);
  char *v302;
  uint64_t v303;
  NSObject *v304;
  os_log_type_t v305;
  int v306;
  _BOOL4 v307;
  uint64_t v308;
  uint64_t v309;
  _QWORD *v310;
  uint64_t v311;
  uint64_t v312;
  unint64_t v313;
  char *v314;
  char *v315;
  void *v316;
  uint64_t v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  char *v321;
  char *v322;
  _QWORD *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  NSObject *v328;
  os_log_type_t v329;
  _BOOL4 v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  unint64_t v335;
  void (*v336)(char *, _QWORD *, uint64_t);
  _QWORD *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  char *v342;
  void (*v343)(char *, uint64_t);
  NSObject *v344;
  os_log_type_t v345;
  int v346;
  void (*v347)(char *, char *, uint64_t);
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  unint64_t v354;
  NSObject *v355;
  void *v356;
  char *v357;
  char *v358;
  uint64_t v359;
  uint64_t v360;
  os_log_t v361;
  char *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  char *v366;
  void (*v367)(char *, uint64_t);
  uint64_t v368;
  char *v369;
  NSObject *v370;
  os_log_type_t v371;
  int v372;
  _BOOL4 v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  unint64_t v377;
  char *v378;
  char *v379;
  void *v380;
  uint64_t v381;
  char *v382;
  objc_class *v383;
  os_log_t v384;
  uint64_t v385;
  char *v386;
  uint64_t v387;
  char *v388;
  _QWORD *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  NSObject *v394;
  os_log_type_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  unint64_t v400;
  _QWORD *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  char *v405;
  char *v406;
  void (*v407)(char *, uint64_t);
  NSObject *v408;
  os_log_type_t v409;
  int v410;
  void (*v411)(char *, char *, uint64_t);
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  char *v415;
  uint64_t v416;
  uint64_t v417;
  unint64_t v418;
  NSObject *v419;
  void *v420;
  char *v421;
  char *v422;
  uint64_t v423;
  uint64_t v424;
  os_log_t v425;
  char *v426;
  void (*v427)(char *, _QWORD *, uint64_t);
  char *v428;
  _QWORD *v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  NSObject *v434;
  os_log_type_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  unint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  unint64_t v445;
  uint64_t v446;
  uint64_t v447;
  void (*v448)(uint64_t, uint64_t, uint64_t);
  unint64_t v449;
  uint64_t v450;
  int v451;
  uint64_t v452;
  uint64_t v453;
  _QWORD *v454;
  uint64_t v455;
  char *v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  NSObject *v460;
  os_log_type_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  unint64_t v466;
  uint64_t v467;
  unint64_t v468;
  uint64_t v469;
  uint64_t v470;
  char *v471;
  char *v472;
  uint64_t v473;
  char *v474;
  char *v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  char *v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  char *v487;
  char *v488;
  char *v489;
  char *v490;
  char *v491;
  char *v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  char *v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  char *v501;
  char *v502;
  uint64_t v503;
  char *v504;
  char *v505;
  char *v506;
  char *v507;
  char *v508;
  char *v509;
  char *v510;
  uint64_t v511;
  uint64_t v512;
  char *v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  char *v517;
  uint64_t v518;
  char *v519;
  char *v520;
  char *v521;
  char *v522;
  uint64_t v523;
  uint64_t v524;
  char *v525;
  char *v526;
  uint64_t v527;
  uint64_t v528;
  char *v529;
  char *v530;
  char *v531;
  int v532;
  char *v533;
  char *v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  char *v538;
  char *v539;
  char *v540;
  _QWORD *v541;
  void (*v542)(char *, uint64_t);
  os_log_t v543;
  void (*v544)(char *, uint64_t, uint64_t);
  uint64_t v545;
  uint64_t isa;
  os_log_t v547;
  char *v548;
  char *v549;
  uint64_t v550;
  uint64_t v551;
  char *v552;
  uint64_t v553;
  char *v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  char *v559;
  int v560;

  v554 = a4;
  v548 = a3;
  v556 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798E90);
  MEMORY[0x1E0C80A78](v5);
  v530 = (char *)&v470 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v538 = (char *)&v470 - v8;
  MEMORY[0x1E0C80A78](v9);
  v540 = (char *)&v470 - v10;
  v535 = type metadata accessor for ConnectionEvent(0);
  v536 = *(_QWORD *)(v535 - 8);
  MEMORY[0x1E0C80A78](v535);
  v539 = (char *)&v470 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v474 = (char *)&v470 - v13;
  MEMORY[0x1E0C80A78](v14);
  v528 = (uint64_t)&v470 - v15;
  v553 = sub_1A594ACEC();
  v551 = *(_QWORD *)(v553 - 8);
  MEMORY[0x1E0C80A78](v553);
  v490 = (char *)&v470 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v488 = (char *)&v470 - v18;
  MEMORY[0x1E0C80A78](v19);
  v489 = (char *)&v470 - v20;
  MEMORY[0x1E0C80A78](v21);
  v487 = (char *)&v470 - v22;
  MEMORY[0x1E0C80A78](v23);
  v505 = (char *)&v470 - v24;
  MEMORY[0x1E0C80A78](v25);
  v504 = (char *)&v470 - v26;
  MEMORY[0x1E0C80A78](v27);
  v525 = (char *)&v470 - v28;
  MEMORY[0x1E0C80A78](v29);
  v534 = (char *)&v470 - v30;
  MEMORY[0x1E0C80A78](v31);
  v510 = (char *)&v470 - v32;
  MEMORY[0x1E0C80A78](v33);
  v502 = (char *)&v470 - v34;
  MEMORY[0x1E0C80A78](v35);
  v509 = (char *)&v470 - v36;
  MEMORY[0x1E0C80A78](v37);
  v501 = (char *)&v470 - v38;
  MEMORY[0x1E0C80A78](v39);
  v520 = (char *)&v470 - v40;
  MEMORY[0x1E0C80A78](v41);
  v519 = (char *)&v470 - v42;
  MEMORY[0x1E0C80A78](v43);
  v517 = (char *)&v470 - v44;
  MEMORY[0x1E0C80A78](v45);
  v529 = (char *)&v470 - v46;
  MEMORY[0x1E0C80A78](v47);
  v552 = (char *)&v470 - v48;
  v49 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v49);
  v479 = (uint64_t)&v470 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v51);
  v477 = (uint64_t)&v470 - v52;
  MEMORY[0x1E0C80A78](v53);
  v478 = (uint64_t)&v470 - v54;
  MEMORY[0x1E0C80A78](v55);
  v476 = (uint64_t)&v470 - v56;
  MEMORY[0x1E0C80A78](v57);
  v486 = (uint64_t)&v470 - v58;
  MEMORY[0x1E0C80A78](v59);
  v483 = (uint64_t)&v470 - v60;
  MEMORY[0x1E0C80A78](v61);
  v485 = (uint64_t)&v470 - v62;
  MEMORY[0x1E0C80A78](v63);
  v482 = (uint64_t)&v470 - v64;
  MEMORY[0x1E0C80A78](v65);
  v503 = (uint64_t)&v470 - v66;
  MEMORY[0x1E0C80A78](v67);
  v497 = (uint64_t)&v470 - v68;
  MEMORY[0x1E0C80A78](v69);
  v518 = (uint64_t)&v470 - v70;
  MEMORY[0x1E0C80A78](v71);
  v515 = (uint64_t)&v470 - v72;
  MEMORY[0x1E0C80A78](v73);
  v484 = (uint64_t)&v470 - v74;
  MEMORY[0x1E0C80A78](v75);
  v480 = (uint64_t)&v470 - v76;
  MEMORY[0x1E0C80A78](v77);
  v498 = (uint64_t)&v470 - v78;
  MEMORY[0x1E0C80A78](v79);
  v493 = (uint64_t)&v470 - v80;
  MEMORY[0x1E0C80A78](v81);
  v500 = (uint64_t)&v470 - v82;
  MEMORY[0x1E0C80A78](v83);
  v495 = (uint64_t)&v470 - v84;
  MEMORY[0x1E0C80A78](v85);
  v499 = (uint64_t)&v470 - v86;
  MEMORY[0x1E0C80A78](v87);
  v494 = (uint64_t)&v470 - v88;
  MEMORY[0x1E0C80A78](v89);
  v516 = (uint64_t)&v470 - v90;
  MEMORY[0x1E0C80A78](v91);
  v512 = (uint64_t)&v470 - v92;
  MEMORY[0x1E0C80A78](v93);
  v524 = (uint64_t)&v470 - v94;
  MEMORY[0x1E0C80A78](v95);
  v523 = (uint64_t)&v470 - v96;
  MEMORY[0x1E0C80A78](v97);
  v514 = (uint64_t)&v470 - v98;
  MEMORY[0x1E0C80A78](v99);
  v511 = (uint64_t)&v470 - v100;
  v550 = sub_1A594A764();
  v545 = *(_QWORD *)(v550 - 8);
  MEMORY[0x1E0C80A78](v550);
  v549 = (char *)&v470 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v102);
  v475 = (char *)&v470 - v103;
  MEMORY[0x1E0C80A78](v104);
  v492 = (char *)&v470 - v105;
  MEMORY[0x1E0C80A78](v106);
  v491 = (char *)&v470 - v107;
  MEMORY[0x1E0C80A78](v108);
  v508 = (char *)&v470 - v109;
  MEMORY[0x1E0C80A78](v110);
  v521 = (char *)&v470 - v111;
  MEMORY[0x1E0C80A78](v112);
  v481 = (char *)&v470 - v113;
  MEMORY[0x1E0C80A78](v114);
  v496 = (char *)&v470 - v115;
  MEMORY[0x1E0C80A78](v116);
  v507 = (char *)&v470 - v117;
  MEMORY[0x1E0C80A78](v118);
  v506 = (char *)&v470 - v119;
  MEMORY[0x1E0C80A78](v120);
  v522 = (char *)&v470 - v121;
  MEMORY[0x1E0C80A78](v122);
  v526 = (char *)&v470 - v123;
  MEMORY[0x1E0C80A78](v124);
  v513 = (char *)&v470 - v125;
  v126 = sub_1A594AA40();
  v127 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v543 = (os_log_t)((char *)&v470 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v129);
  v533 = (char *)&v470 - v130;
  MEMORY[0x1E0C80A78](v131);
  v133 = (char *)&v470 - v132;
  MEMORY[0x1E0C80A78](v134);
  v136 = (char *)&v470 - v135;
  v137 = sub_1A594A62C();
  isa = (uint64_t)v137[-1].isa;
  v547 = v137;
  MEMORY[0x1E0C80A78](v137);
  v531 = (char *)&v470 - ((v138 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v139);
  v141 = (char *)&v470 - v140;
  v142 = sub_1A594A65C();
  v143 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v145 = (char *)&v470 - ((v144 + 15) & 0xFFFFFFFFFFFFFFF0);
  v548 += 16;
  v537 = swift_projectBox();
  v146 = tracingSignposter.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v145, v146, v142);
  v527 = v49;
  v541 = a2;
  OSSignpostID.init(engine:kind:connectionID:)();
  v147 = *(void (**)(char *, uint64_t, uint64_t))(v127 + 16);
  v147(v136, v556, v126);
  v554 = v133;
  v147(v133, (uint64_t)v136, v126);
  v148 = *(void (**)(char *, uint64_t))(v127 + 8);
  v148(v136, v126);
  v149 = sub_1A594A650();
  v532 = sub_1A594C150();
  v150 = sub_1A594C318();
  v151 = (_DWORD *)MEMORY[0x1E0CCE5C8];
  v557 = v126;
  v555 = v127;
  v544 = v147;
  v542 = v148;
  if ((v150 & 1) == 0)
  {
    v148(v554, v126);

    (*(void (**)(char *, os_log_t))(isa + 8))(v141, v547);
    (*(void (**)(char *, uint64_t))(v143 + 8))(v145, v142);
    v168 = v552;
    v169 = (void (*)(os_log_t, uint64_t, uint64_t))v147;
    goto LABEL_20;
  }
  v471 = v145;
  v470 = v143;
  v473 = v142;
  v153 = isa;
  v152 = v547;
  v154 = v531;
  (*(void (**)(char *, char *, os_log_t))(isa + 16))(v531, v141, v547);
  v155 = (uint8_t *)swift_slowAlloc();
  v156 = (void (*)(char *, char *, uint64_t))v147;
  v157 = v155;
  *(_DWORD *)v155 = 67109120;
  v158 = v533;
  v156(v533, v554, v126);
  v159 = (*(uint64_t (**)(char *, uint64_t))(v127 + 88))(v158, v126);
  v160 = v159 == *v151;
  v161 = v153;
  v472 = v141;
  if (v160)
  {
    v162 = v158;
    v163 = v154;
    v164 = v153;
    v165 = v152;
    v166 = 4;
    v167 = v542;
  }
  else
  {
    v167 = v542;
    if (v159 != *MEMORY[0x1E0CCE5C0])
    {
      v168 = v552;
      if (v159 == *MEMORY[0x1E0CCE5B8])
      {
        v163 = v154;
        v164 = v161;
        v165 = v152;
        v166 = 3;
      }
      else if (v159 == *MEMORY[0x1E0CCE5D8])
      {
        v163 = v154;
        v164 = v161;
        v165 = v152;
        v166 = 5;
      }
      else if (v159 == *MEMORY[0x1E0CCE5B0])
      {
        v163 = v154;
        v164 = v161;
        v165 = v152;
        v166 = 6;
      }
      else
      {
        v162 = v158;
        v163 = v154;
        v164 = v161;
        v165 = v152;
        if (v159 != *MEMORY[0x1E0CCE5D0])
        {
          v166 = 0;
          goto LABEL_9;
        }
        v166 = 8;
      }
      v170 = v470;
      v542(v554, v557);
      goto LABEL_19;
    }
    v162 = v158;
    v163 = v154;
    v164 = v153;
    v165 = v152;
    v166 = 7;
  }
  v168 = v552;
LABEL_9:
  v170 = v470;
  v171 = v557;
  v172 = v167;
  v167(v162, v557);
  v172(v554, v171);
LABEL_19:
  v560 = v166;
  sub_1A594C3CC();
  v173 = sub_1A594A620();
  _os_signpost_emit_with_name_impl(&dword_1A4F90000, v149, (os_signpost_type_t)v532, v173, "Connection.networkStateUpdate", "%u", v157, 8u);
  MEMORY[0x1A85B1964](v157, -1, -1);

  v174 = *(void (**)(char *, os_log_t))(v164 + 8);
  v174(v472, v165);
  (*(void (**)(char *, uint64_t))(v170 + 8))(v471, v473);
  v174(v163, v165);
  v169 = (void (*)(os_log_t, uint64_t, uint64_t))v544;
LABEL_20:
  swift_beginAccess();
  result = swift_weakLoadStrong();
  v176 = v555;
  v177 = v553;
  v178 = v551;
  v179 = v549;
  v554 = (char *)result;
  if (!result)
    return result;
  v180 = v543;
  v181 = v557;
  v169(v543, v556, v557);
  v182 = *(uint64_t (**)(os_log_t, uint64_t))(v176 + 88);
  v183 = v182(v180, v181);
  v184 = *MEMORY[0x1E0CCE5C8];
  v548 = (char *)v182;
  if (v183 != v184)
  {
    if (v183 != *MEMORY[0x1E0CCE5C0])
    {
      v205 = v176;
      if (v183 == *MEMORY[0x1E0CCE5B8])
      {
        v259 = v545;
        v260 = v513;
        v261 = v541;
        v262 = v550;
        (*(void (**)(char *, _QWORD *, uint64_t))(v545 + 16))(v513, v541, v550);
        v263 = (uint64_t)v261;
        v264 = v511;
        sub_1A55034B8(v263, v511, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        v265 = v514;
        sub_1A55034B8(v264, v514, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        sub_1A55034FC(v264, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v266 = sub_1A594A74C();
        v267 = sub_1A594C00C();
        if (os_log_type_enabled(v266, v267))
        {
          v268 = swift_slowAlloc();
          v269 = swift_slowAlloc();
          v559 = (char *)v269;
          *(_DWORD *)v268 = 68158210;
          LODWORD(v558) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v268 + 8) = 256;
          v270 = v265 + *(int *)(v527 + 20);
          LOBYTE(v558) = *(_BYTE *)v270;
          sub_1A594C3CC();
          *(_WORD *)(v268 + 11) = 2082;
          v271 = ConnectionID.debugDescription.getter(*(unsigned int *)(v270 + 4));
          v558 = sub_1A589167C(v271, v272, (uint64_t *)&v559);
          v205 = v555;
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC(v265, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          _os_log_impl(&dword_1A4F90000, v266, v267, "[%.*hhx-%{public}s] state: setup", (uint8_t *)v268, 0x15u);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v269, -1, -1);
          MEMORY[0x1A85B1964](v268, -1, -1);

          (*(void (**)(char *, uint64_t))(v545 + 8))(v260, v262);
        }
        else
        {
          sub_1A55034FC(v265, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

          (*(void (**)(char *, uint64_t))(v259 + 8))(v260, v262);
        }
        goto LABEL_50;
      }
      if (v183 == *MEMORY[0x1E0CCE5D8])
      {
        v322 = v496;
        v323 = v541;
        v324 = v550;
        (*(void (**)(char *, _QWORD *, uint64_t))(v545 + 16))(v496, v541, v550);
        v325 = (uint64_t)v323;
        v326 = v493;
        sub_1A55034B8(v325, v493, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        v327 = v498;
        sub_1A55034B8(v326, v498, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        sub_1A55034FC(v326, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v328 = sub_1A594A74C();
        v329 = sub_1A594C00C();
        v330 = os_log_type_enabled(v328, v329);
        v227 = v554;
        if (v330)
        {
          v331 = swift_slowAlloc();
          v332 = swift_slowAlloc();
          v559 = (char *)v332;
          *(_DWORD *)v331 = 68158210;
          LODWORD(v558) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v331 + 8) = 256;
          v333 = v327 + *(int *)(v527 + 20);
          LOBYTE(v558) = *(_BYTE *)v333;
          sub_1A594C3CC();
          *(_WORD *)(v331 + 11) = 2082;
          v334 = ConnectionID.debugDescription.getter(*(unsigned int *)(v333 + 4));
          v558 = sub_1A589167C(v334, v335, (uint64_t *)&v559);
          v205 = v555;
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC(v327, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          _os_log_impl(&dword_1A4F90000, v328, v329, "[%.*hhx-%{public}s] state: preparing", (uint8_t *)v331, 0x15u);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v332, -1, -1);
          MEMORY[0x1A85B1964](v331, -1, -1);

          (*(void (**)(char *, uint64_t))(v545 + 8))(v322, v550);
        }
        else
        {
          sub_1A55034FC(v327, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

          (*(void (**)(char *, uint64_t))(v545 + 8))(v322, v324);
        }
        v228 = (uint64_t)v540;
        v229 = (uint64_t)v539;
        v230 = (uint64_t)v538;
        v231 = v537;
      }
      else
      {
        v227 = v554;
        if (v183 == *MEMORY[0x1E0CCE5B0])
        {
          v387 = v545;
          v388 = v481;
          v389 = v541;
          v390 = v550;
          (*(void (**)(char *, _QWORD *, uint64_t))(v545 + 16))(v481, v541, v550);
          v391 = (uint64_t)v389;
          v392 = v480;
          sub_1A55034B8(v391, v480, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          v393 = v484;
          sub_1A55034B8(v392, v484, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          sub_1A55034FC(v392, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          v394 = sub_1A594A74C();
          v395 = sub_1A594C030();
          if (os_log_type_enabled(v394, v395))
          {
            v396 = swift_slowAlloc();
            v397 = swift_slowAlloc();
            v559 = (char *)v397;
            *(_DWORD *)v396 = 68158210;
            LODWORD(v558) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v396 + 8) = 256;
            v398 = v393 + *(int *)(v527 + 20);
            LOBYTE(v558) = *(_BYTE *)v398;
            sub_1A594C3CC();
            *(_WORD *)(v396 + 11) = 2082;
            v399 = ConnectionID.debugDescription.getter(*(unsigned int *)(v398 + 4));
            v558 = sub_1A589167C(v399, v400, (uint64_t *)&v559);
            v205 = v555;
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A55034FC(v393, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
            _os_log_impl(&dword_1A4F90000, v394, v395, "[%.*hhx-%{public}s] state: ready", (uint8_t *)v396, 0x15u);
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v397, -1, -1);
            MEMORY[0x1A85B1964](v396, -1, -1);

            (*(void (**)(char *, uint64_t))(v545 + 8))(v388, v550);
          }
          else
          {
            sub_1A55034FC(v393, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

            (*(void (**)(char *, uint64_t))(v387 + 8))(v388, v390);
          }
          v228 = (uint64_t)v540;
          v229 = (uint64_t)v539;
          v230 = (uint64_t)v538;
          v231 = v537;
          v442 = swift_allocObject();
          swift_weakInit();
          v443 = swift_allocObject();
          *(_QWORD *)(v443 + 16) = sub_1A58A6920;
          *(_QWORD *)(v443 + 24) = v442;
          swift_retain_n();
          sub_1A594A974();
          swift_release_n();
          swift_release();
        }
        else
        {
          v427 = *(void (**)(char *, _QWORD *, uint64_t))(v545 + 16);
          if (v183 == *MEMORY[0x1E0CCE5D0])
          {
            v428 = v475;
            v429 = v541;
            v430 = v550;
            v427(v475, v541, v550);
            v431 = (uint64_t)v429;
            v432 = v476;
            sub_1A55034B8(v431, v476, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
            v433 = v478;
            sub_1A55034B8(v432, v478, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
            sub_1A55034FC(v432, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            v434 = sub_1A594A74C();
            v435 = sub_1A594C000();
            if (os_log_type_enabled(v434, v435))
            {
              v436 = swift_slowAlloc();
              v437 = swift_slowAlloc();
              v559 = (char *)v437;
              *(_DWORD *)v436 = 68158210;
              LODWORD(v558) = 2;
              sub_1A594C3CC();
              *(_WORD *)(v436 + 8) = 256;
              v438 = v433 + *(int *)(v527 + 20);
              LOBYTE(v558) = *(_BYTE *)v438;
              sub_1A594C3CC();
              *(_WORD *)(v436 + 11) = 2082;
              v439 = ConnectionID.debugDescription.getter(*(unsigned int *)(v438 + 4));
              v558 = sub_1A589167C(v439, v440, (uint64_t *)&v559);
              v205 = v555;
              sub_1A594C3CC();
              swift_bridgeObjectRelease();
              sub_1A55034FC(v433, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
              _os_log_impl(&dword_1A4F90000, v434, v435, "[%.*hhx-%{public}s] state: cancelled", (uint8_t *)v436, 0x15u);
              swift_arrayDestroy();
              MEMORY[0x1A85B1964](v437, -1, -1);
              MEMORY[0x1A85B1964](v436, -1, -1);

              (*(void (**)(char *, uint64_t))(v545 + 8))(v428, v550);
            }
            else
            {
              sub_1A55034FC(v433, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

              (*(void (**)(char *, uint64_t))(v545 + 8))(v428, v430);
            }
            v228 = (uint64_t)v540;
            v229 = (uint64_t)v539;
            v230 = (uint64_t)v538;
            v231 = v537;
            v467 = (uint64_t)v474;
            type metadata accessor for ConnectionEvent.FailureReason(0);
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796250);
            v468 = (*(unsigned __int8 *)(v536 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v536 + 80);
            v469 = swift_allocObject();
            *(_OWORD *)(v469 + 16) = xmmword_1A59ABD10;
            sub_1A55034B8(v467, v469 + v468, type metadata accessor for ConnectionEvent);
            if (MEMORY[0x1A85B1A0C](&v227[OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate]))
            {
              sub_1A588BDA4(v469);
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            sub_1A55034FC(v467, type metadata accessor for ConnectionEvent);
          }
          else
          {
            v454 = v541;
            v455 = v550;
            v427(v179, v541, v550);
            v456 = v179;
            v457 = (uint64_t)v454;
            v458 = v477;
            sub_1A55034B8(v457, v477, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
            v459 = v479;
            sub_1A55034B8(v458, v479, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
            sub_1A55034FC(v458, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            v460 = sub_1A594A74C();
            v461 = sub_1A594C018();
            if (os_log_type_enabled(v460, v461))
            {
              v462 = swift_slowAlloc();
              v463 = swift_slowAlloc();
              v559 = (char *)v463;
              *(_DWORD *)v462 = 68158210;
              LODWORD(v558) = 2;
              sub_1A594C3CC();
              *(_WORD *)(v462 + 8) = 256;
              v464 = v459 + *(int *)(v527 + 20);
              LOBYTE(v558) = *(_BYTE *)v464;
              sub_1A594C3CC();
              *(_WORD *)(v462 + 11) = 2082;
              v465 = ConnectionID.debugDescription.getter(*(unsigned int *)(v464 + 4));
              v558 = sub_1A589167C(v465, v466, (uint64_t *)&v559);
              v205 = v555;
              sub_1A594C3CC();
              swift_bridgeObjectRelease();
              sub_1A55034FC(v459, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
              _os_log_impl(&dword_1A4F90000, v460, v461, "[%.*hhx-%{public}s] state: <unknown>", (uint8_t *)v462, 0x15u);
              swift_arrayDestroy();
              MEMORY[0x1A85B1964](v463, -1, -1);
              MEMORY[0x1A85B1964](v462, -1, -1);

              (*(void (**)(char *, uint64_t))(v545 + 8))(v456, v550);
            }
            else
            {
              sub_1A55034FC(v459, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

              (*(void (**)(char *, uint64_t))(v545 + 8))(v456, v455);
            }
            v228 = (uint64_t)v540;
            v229 = (uint64_t)v539;
            v230 = (uint64_t)v538;
            v231 = v537;
            v542((char *)v543, v557);
          }
        }
      }
      goto LABEL_84;
    }
    v206 = v543;
    (*(void (**)(os_log_t, uint64_t))(v176 + 96))(v543, v557);
    v207 = *(void (**)(char *, os_log_t, uint64_t))(v178 + 32);
    v208 = v534;
    v207(v534, v206, v177);
    v209 = *(void (**)(char *, char *, uint64_t))(v178 + 16);
    v210 = v525;
    v209(v525, v208, v177);
    v211 = (*(uint64_t (**)(char *, uint64_t))(v178 + 88))(v210, v177);
    v212 = *MEMORY[0x1E0CCEB08];
    v552 = (char *)v209;
    if (v211 == v212)
    {
      (*(void (**)(char *, uint64_t))(v178 + 96))(v210, v177);
      v213 = v545;
      v214 = v521;
      v215 = v541;
      v216 = v550;
      (*(void (**)(char *, _QWORD *, uint64_t))(v545 + 16))(v521, v541, v550);
      v217 = (uint64_t)v215;
      v218 = v515;
      sub_1A55034B8(v217, v515, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      v219 = v518;
      sub_1A55034B8(v218, v518, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      sub_1A55034FC(v218, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v220 = sub_1A594A74C();
      v221 = sub_1A594C018();
      if (os_log_type_enabled(v220, v221))
      {
        v222 = swift_slowAlloc();
        v223 = swift_slowAlloc();
        v559 = (char *)v223;
        *(_DWORD *)v222 = 68158466;
        LODWORD(v558) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v222 + 8) = 256;
        v224 = v219 + *(int *)(v527 + 20);
        LOBYTE(v558) = *(_BYTE *)v224;
        sub_1A594C3CC();
        *(_WORD *)(v222 + 11) = 2082;
        v225 = ConnectionID.debugDescription.getter(*(unsigned int *)(v224 + 4));
        v558 = sub_1A589167C(v225, v226, (uint64_t *)&v559);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v219, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        *(_WORD *)(v222 + 21) = 1024;
        LODWORD(v558) = sub_1A594A83C();
        v227 = v554;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v220, v221, "[%.*hhx-%{public}s] state: failed, POSIX %{darwin.errno}d", (uint8_t *)v222, 0x1Bu);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v223, -1, -1);
        MEMORY[0x1A85B1964](v222, -1, -1);

        (*(void (**)(char *, uint64_t))(v545 + 8))(v521, v550);
        v228 = (uint64_t)v540;
        v229 = (uint64_t)v539;
        v230 = (uint64_t)v538;
        v231 = v537;
        v232 = v553;
LABEL_79:
        v441 = v551;
        goto LABEL_80;
      }
      sub_1A55034FC(v219, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

      (*(void (**)(char *, uint64_t))(v213 + 8))(v214, v216);
      v228 = (uint64_t)v540;
      v229 = (uint64_t)v539;
      v230 = (uint64_t)v538;
      v231 = v537;
      v232 = v553;
    }
    else
    {
      if (v211 == *MEMORY[0x1E0CCEAF8])
      {
        v549 = (char *)v207;
        v273 = v541;
        (*(void (**)(char *, _QWORD *, uint64_t))(v545 + 16))(v508, v541, v550);
        v274 = (uint64_t)v273;
        v275 = v497;
        sub_1A55034B8(v274, v497, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        v276 = v503;
        sub_1A55034B8(v275, v503, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        sub_1A55034FC(v275, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v277 = v504;
        v209(v504, v534, v177);
        v278 = v505;
        v209(v505, v277, v177);
        v279 = *(void (**)(char *, uint64_t))(v178 + 8);
        v279(v277, v177);
        v232 = v177;
        v280 = sub_1A594A74C();
        v281 = sub_1A594C018();
        LODWORD(v547) = v281;
        v282 = os_log_type_enabled(v280, v281);
        v227 = v554;
        if (v282)
        {
          v283 = swift_slowAlloc();
          v543 = v280;
          v284 = v283;
          v541 = (_QWORD *)swift_slowAlloc();
          isa = swift_slowAlloc();
          v559 = (char *)isa;
          *(_DWORD *)v284 = 68158466;
          LODWORD(v558) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v284 + 8) = 256;
          v285 = v276 + *(int *)(v527 + 20);
          LOBYTE(v558) = *(_BYTE *)v285;
          sub_1A594C3CC();
          *(_WORD *)(v284 + 11) = 2082;
          v286 = ConnectionID.debugDescription.getter(*(unsigned int *)(v285 + 4));
          v558 = sub_1A589167C(v286, v287, (uint64_t *)&v559);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC(v276, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          *(_WORD *)(v284 + 21) = 2112;
          v288 = v520;
          v209(v520, v278, v232);
          sub_1A58A6758();
          v289 = (void *)swift_allocError();
          ((void (*)(uint64_t, char *, uint64_t))v549)(v290, v288, v232);
          v291 = v278;
          v292 = sub_1A5949D98();

          v558 = v292;
          sub_1A594C3CC();
          v293 = v541;
          *v541 = v292;
          v279(v291, v232);
          v294 = v543;
          _os_log_impl(&dword_1A4F90000, v543, (os_log_type_t)v547, "[%.*hhx-%{public}s] state: failed, DNS %@", (uint8_t *)v284, 0x1Fu);
          __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v293, -1, -1);
          v295 = isa;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v295, -1, -1);
          MEMORY[0x1A85B1964](v284, -1, -1);

        }
        else
        {
          sub_1A55034FC(v276, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          v279(v278, v232);

        }
        (*(void (**)(char *, uint64_t))(v545 + 8))(v508, v550);
        v228 = (uint64_t)v540;
        v229 = (uint64_t)v539;
        v230 = (uint64_t)v538;
        v231 = v537;
        goto LABEL_79;
      }
      v336 = *(void (**)(char *, _QWORD *, uint64_t))(v545 + 16);
      if (v211 != *MEMORY[0x1E0CCEB00])
      {
        v401 = v541;
        v336(v492, v541, v550);
        v402 = (uint64_t)v401;
        v403 = v483;
        sub_1A55034B8(v402, v483, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        v404 = v486;
        sub_1A55034B8(v403, v486, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        sub_1A55034FC(v403, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v405 = v488;
        v209(v488, v534, v177);
        v406 = v490;
        v209(v490, v405, v177);
        v407 = *(void (**)(char *, uint64_t))(v178 + 8);
        v407(v405, v177);
        v232 = v177;
        v408 = sub_1A594A74C();
        v409 = sub_1A594C018();
        v410 = v409;
        if (os_log_type_enabled(v408, v409))
        {
          v411 = v209;
          v412 = swift_slowAlloc();
          v547 = v408;
          v413 = v412;
          isa = swift_slowAlloc();
          v549 = (char *)swift_slowAlloc();
          v559 = v549;
          *(_DWORD *)v413 = 68158466;
          LODWORD(v558) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v413 + 8) = 256;
          v414 = *(int *)(v527 + 20);
          LODWORD(v543) = v410;
          v415 = v406;
          v416 = v404 + v414;
          LOBYTE(v558) = *(_BYTE *)(v404 + v414);
          sub_1A594C3CC();
          *(_WORD *)(v413 + 11) = 2082;
          v417 = ConnectionID.debugDescription.getter(*(unsigned int *)(v416 + 4));
          v558 = sub_1A589167C(v417, v418, (uint64_t *)&v559);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC(v404, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          *(_WORD *)(v413 + 21) = 2112;
          v419 = v520;
          v411(v520, v415, v232);
          sub_1A58A6758();
          v420 = (void *)swift_allocError();
          v207(v421, v419, v232);
          v422 = v415;
          v423 = sub_1A5949D98();

          v558 = v423;
          sub_1A594C3CC();
          v424 = isa;
          *(_QWORD *)isa = v423;
          v407(v422, v232);
          v425 = v547;
          _os_log_impl(&dword_1A4F90000, v547, (os_log_type_t)v543, "[%.*hhx-%{public}s] state: failed, %@", (uint8_t *)v413, 0x1Fu);
          __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v424, -1, -1);
          v426 = v549;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v426, -1, -1);
          MEMORY[0x1A85B1964](v413, -1, -1);

        }
        else
        {
          sub_1A55034FC(v404, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          v407(v406, v232);

        }
        (*(void (**)(char *, uint64_t))(v545 + 8))(v492, v550);
        v228 = (uint64_t)v540;
        v229 = (uint64_t)v539;
        v230 = (uint64_t)v538;
        v231 = v537;
        v227 = v554;
        v407(v525, v232);
        goto LABEL_79;
      }
      v337 = v541;
      v336(v491, v541, v550);
      v338 = (uint64_t)v337;
      v339 = v482;
      sub_1A55034B8(v338, v482, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      v340 = v485;
      sub_1A55034B8(v339, v485, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      sub_1A55034FC(v339, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v341 = v487;
      v209(v487, v534, v177);
      v342 = v489;
      v209(v489, v341, v177);
      v343 = *(void (**)(char *, uint64_t))(v178 + 8);
      v343(v341, v177);
      v232 = v177;
      v344 = sub_1A594A74C();
      v345 = sub_1A594C018();
      v346 = v345;
      if (os_log_type_enabled(v344, v345))
      {
        v347 = v209;
        v348 = swift_slowAlloc();
        v547 = v344;
        v349 = v348;
        isa = swift_slowAlloc();
        v549 = (char *)swift_slowAlloc();
        v559 = v549;
        *(_DWORD *)v349 = 68158466;
        LODWORD(v558) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v349 + 8) = 256;
        v350 = *(int *)(v527 + 20);
        LODWORD(v543) = v346;
        v351 = v342;
        v352 = v340 + v350;
        LOBYTE(v558) = *(_BYTE *)(v340 + v350);
        sub_1A594C3CC();
        *(_WORD *)(v349 + 11) = 2082;
        v353 = ConnectionID.debugDescription.getter(*(unsigned int *)(v352 + 4));
        v558 = sub_1A589167C(v353, v354, (uint64_t *)&v559);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v340, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        *(_WORD *)(v349 + 21) = 2112;
        v355 = v520;
        v347(v520, v351, v232);
        sub_1A58A6758();
        v356 = (void *)swift_allocError();
        v207(v357, v355, v232);
        v358 = v351;
        v359 = sub_1A5949D98();

        v558 = v359;
        sub_1A594C3CC();
        v360 = isa;
        *(_QWORD *)isa = v359;
        v343(v358, v232);
        v361 = v547;
        _os_log_impl(&dword_1A4F90000, v547, (os_log_type_t)v543, "[%.*hhx-%{public}s] state: failed, TLS %@", (uint8_t *)v349, 0x1Fu);
        __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v360, -1, -1);
        v362 = v549;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v362, -1, -1);
        MEMORY[0x1A85B1964](v349, -1, -1);

      }
      else
      {
        sub_1A55034FC(v340, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        v343(v342, v232);

      }
      (*(void (**)(char *, uint64_t))(v545 + 8))(v491, v550);
      v228 = (uint64_t)v540;
      v229 = (uint64_t)v539;
      v230 = (uint64_t)v538;
      v231 = v537;
    }
    v441 = v551;
    v227 = v554;
LABEL_80:
    v444 = v528;
    ((void (*)(uint64_t, char *, uint64_t))v552)(v528, v534, v232);
    type metadata accessor for ConnectionEvent.FailureReason(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796250);
    v445 = (*(unsigned __int8 *)(v536 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v536 + 80);
    v446 = swift_allocObject();
    *(_OWORD *)(v446 + 16) = xmmword_1A59ABD10;
    sub_1A55034B8(v444, v446 + v445, type metadata accessor for ConnectionEvent);
    if (MEMORY[0x1A85B1A0C](&v227[OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate]))
    {
      sub_1A588BDA4(v446);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v447 = v553;
    v205 = v555;
    sub_1A55034FC(v528, type metadata accessor for ConnectionEvent);
    (*(void (**)(char *, uint64_t))(v441 + 8))(v534, v447);
    goto LABEL_84;
  }
  (*(void (**)(os_log_t, uint64_t))(v176 + 96))(v180, v557);
  v185 = *(void (**)(char *, os_log_t, uint64_t))(v178 + 32);
  v185(v168, v180, v177);
  v186 = *(NSObject **)(v178 + 16);
  v187 = v529;
  ((void (*)(char *, char *, uint64_t))v186)(v529, v168, v177);
  v188 = (*(uint64_t (**)(_DWORD *, uint64_t))(v178 + 88))(v187, v177);
  if (v188 == *MEMORY[0x1E0CCEB08])
  {
    (*(void (**)(_DWORD *, uint64_t))(v178 + 96))(v187, v177);
    LODWORD(v549) = *v187;
    v189 = v178;
    v190 = v545;
    v191 = v526;
    v192 = v541;
    v193 = v550;
    (*(void (**)(char *, _QWORD *, uint64_t))(v545 + 16))(v526, v541, v550);
    v194 = (uint64_t)v192;
    v195 = v523;
    sub_1A55034B8(v194, v523, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v196 = v524;
    sub_1A55034B8(v195, v524, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    sub_1A55034FC(v195, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v197 = sub_1A594A74C();
    v198 = sub_1A594C030();
    if (os_log_type_enabled(v197, v198))
    {
      v199 = swift_slowAlloc();
      v200 = swift_slowAlloc();
      v559 = (char *)v200;
      *(_DWORD *)v199 = 68158466;
      LODWORD(v558) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v199 + 8) = 256;
      v201 = v196 + *(int *)(v527 + 20);
      LOBYTE(v558) = *(_BYTE *)v201;
      sub_1A594C3CC();
      *(_WORD *)(v199 + 11) = 2082;
      v202 = v190;
      v203 = ConnectionID.debugDescription.getter(*(unsigned int *)(v201 + 4));
      v558 = sub_1A589167C(v203, v204, (uint64_t *)&v559);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v196, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      *(_WORD *)(v199 + 21) = 1024;
      LODWORD(v558) = sub_1A594A83C();
      v205 = v555;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v197, v198, "[%.*hhx-%{public}s] state: waiting, POSIX %{darwin.errno}d", (uint8_t *)v199, 0x1Bu);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v200, -1, -1);
      MEMORY[0x1A85B1964](v199, -1, -1);

      (*(void (**)(char *, uint64_t))(v202 + 8))(v526, v550);
      (*(void (**)(char *, uint64_t))(v551 + 8))(v552, v553);
LABEL_50:
      v228 = (uint64_t)v540;
      v229 = (uint64_t)v539;
      v230 = (uint64_t)v538;
      v231 = v537;
      v227 = v554;
      goto LABEL_84;
    }

    sub_1A55034FC(v196, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    (*(void (**)(char *, uint64_t))(v190 + 8))(v191, v193);
    (*(void (**)(char *, uint64_t))(v189 + 8))(v552, v553);
    goto LABEL_47;
  }
  v233 = *MEMORY[0x1E0CCEAF8];
  v549 = (char *)v185;
  if (v188 == v233)
  {
    v234 = v545;
    v235 = (uint64_t)v541;
    (*(void (**)(char *, _QWORD *, uint64_t))(v545 + 16))(v522, v541, v550);
    v236 = v512;
    sub_1A55034B8(v235, v512, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v237 = v516;
    sub_1A55034B8(v236, v516, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    sub_1A55034FC(v236, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v238 = v517;
    ((void (*)(char *, char *, uint64_t))v186)(v517, v168, v177);
    v239 = v519;
    ((void (*)(char *, char *, uint64_t))v186)(v519, v238, v177);
    v240 = *(NSObject **)(v178 + 8);
    ((void (*)(char *, uint64_t))v240)(v238, v177);
    v241 = v177;
    v242 = sub_1A594A74C();
    v243 = sub_1A594C030();
    v244 = v243;
    if (os_log_type_enabled(v242, v243))
    {
      v245 = swift_slowAlloc();
      LODWORD(v547) = v244;
      v246 = v245;
      isa = swift_slowAlloc();
      v551 = swift_slowAlloc();
      v559 = (char *)v551;
      *(_DWORD *)v246 = 68158466;
      LODWORD(v558) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v246 + 8) = 256;
      v247 = v239;
      v248 = v237 + *(int *)(v527 + 20);
      LOBYTE(v558) = *(_BYTE *)v248;
      sub_1A594C3CC();
      *(_WORD *)(v246 + 11) = 2082;
      v543 = v240;
      v249 = ConnectionID.debugDescription.getter(*(unsigned int *)(v248 + 4));
      v558 = sub_1A589167C(v249, v250, (uint64_t *)&v559);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v237, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      *(_WORD *)(v246 + 21) = 2112;
      v251 = v520;
      ((void (*)(char *, char *, uint64_t))v186)(v520, v247, v241);
      sub_1A58A6758();
      v252 = (void *)swift_allocError();
      ((void (*)(uint64_t, char *, uint64_t))v549)(v253, v251, v241);
      v254 = v247;
      v255 = sub_1A5949D98();

      v558 = v255;
      v205 = v555;
      sub_1A594C3CC();
      v256 = isa;
      *(_QWORD *)isa = v255;
      v257 = v543;
      ((void (*)(char *, uint64_t))v543)(v254, v241);
      _os_log_impl(&dword_1A4F90000, v242, (os_log_type_t)v547, "[%.*hhx-%{public}s] state: waiting, DNS %@", (uint8_t *)v246, 0x1Fu);
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v256, -1, -1);
      v258 = v551;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v258, -1, -1);
      MEMORY[0x1A85B1964](v246, -1, -1);

      (*(void (**)(char *, uint64_t))(v545 + 8))(v522, v550);
      ((void (*)(char *, uint64_t))v257)(v552, v241);
      goto LABEL_50;
    }

    ((void (*)(char *, uint64_t))v240)(v239, v241);
    sub_1A55034FC(v237, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    (*(void (**)(char *, uint64_t))(v234 + 8))(v522, v550);
    ((void (*)(char *, uint64_t))v240)(v168, v241);
LABEL_47:
    v228 = (uint64_t)v540;
    v229 = (uint64_t)v539;
    v230 = (uint64_t)v538;
    v231 = v537;
    v227 = v554;
    v205 = v555;
    goto LABEL_84;
  }
  v296 = *(void (**)(char *, _QWORD *, uint64_t))(v545 + 16);
  if (v188 == *MEMORY[0x1E0CCEB00])
  {
    v297 = (uint64_t)v541;
    v296(v506, v541, v550);
    v298 = v494;
    sub_1A55034B8(v297, v494, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v299 = v499;
    sub_1A55034B8(v298, v499, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    sub_1A55034FC(v298, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v300 = v501;
    ((void (*)(char *, char *, uint64_t))v186)(v501, v168, v177);
    v547 = v186;
    ((void (*)(char *, char *, uint64_t))v186)(v509, v300, v177);
    v301 = *(void (**)(char *, uint64_t))(v178 + 8);
    v301(v300, v177);
    v302 = v168;
    v303 = v177;
    v304 = sub_1A594A74C();
    v305 = sub_1A594C030();
    v306 = v305;
    v307 = os_log_type_enabled(v304, v305);
    v205 = v555;
    if (v307)
    {
      v308 = swift_slowAlloc();
      LODWORD(isa) = v306;
      v309 = v308;
      v310 = (_QWORD *)swift_slowAlloc();
      v551 = swift_slowAlloc();
      v559 = (char *)v551;
      *(_DWORD *)v309 = 68158466;
      LODWORD(v558) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v309 + 8) = 256;
      v311 = v299 + *(int *)(v527 + 20);
      LOBYTE(v558) = *(_BYTE *)v311;
      sub_1A594C3CC();
      *(_WORD *)(v309 + 11) = 2082;
      v312 = ConnectionID.debugDescription.getter(*(unsigned int *)(v311 + 4));
      v558 = sub_1A589167C(v312, v313, (uint64_t *)&v559);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v299, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      *(_WORD *)(v309 + 21) = 2112;
      v314 = v520;
      v315 = v509;
      ((void (*)(char *, char *, uint64_t))v547)(v520, v509, v303);
      sub_1A58A6758();
      v316 = (void *)swift_allocError();
      ((void (*)(uint64_t, char *, uint64_t))v549)(v317, v314, v303);
      v318 = v315;
      v319 = sub_1A5949D98();

      v558 = v319;
      v205 = v555;
      sub_1A594C3CC();
      *v310 = v319;
      v301(v318, v303);
      _os_log_impl(&dword_1A4F90000, v304, (os_log_type_t)isa, "[%.*hhx-%{public}s] state: waiting, TLS %@", (uint8_t *)v309, 0x1Fu);
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v310, -1, -1);
      v320 = v551;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v320, -1, -1);
      MEMORY[0x1A85B1964](v309, -1, -1);

      (*(void (**)(char *, uint64_t))(v545 + 8))(v506, v550);
      v321 = v552;
    }
    else
    {

      v301(v509, v303);
      sub_1A55034FC(v299, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      (*(void (**)(char *, uint64_t))(v545 + 8))(v506, v550);
      v321 = v302;
    }
    v301(v321, v303);
    goto LABEL_50;
  }
  v363 = (uint64_t)v541;
  v296(v507, v541, v550);
  v364 = v495;
  sub_1A55034B8(v363, v495, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  v365 = v500;
  sub_1A55034B8(v364, v500, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  sub_1A55034FC(v364, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v366 = v502;
  ((void (*)(char *, char *, uint64_t))v186)(v502, v168, v177);
  ((void (*)(char *, char *, uint64_t))v186)(v510, v366, v177);
  v367 = *(void (**)(char *, uint64_t))(v178 + 8);
  v367(v366, v177);
  v368 = v177;
  v369 = v168;
  v370 = sub_1A594A74C();
  v371 = sub_1A594C030();
  v372 = v371;
  v373 = os_log_type_enabled(v370, v371);
  v205 = v555;
  if (v373)
  {
    v374 = swift_slowAlloc();
    v547 = (os_log_t)swift_slowAlloc();
    v551 = swift_slowAlloc();
    v559 = (char *)v551;
    *(_DWORD *)v374 = 68158466;
    LODWORD(v558) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v374 + 8) = 256;
    v375 = v365 + *(int *)(v527 + 20);
    LOBYTE(v558) = *(_BYTE *)v375;
    sub_1A594C3CC();
    *(_WORD *)(v374 + 11) = 2082;
    v376 = ConnectionID.debugDescription.getter(*(unsigned int *)(v375 + 4));
    v558 = sub_1A589167C(v376, v377, (uint64_t *)&v559);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v365, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    *(_WORD *)(v374 + 21) = 2112;
    LODWORD(isa) = v372;
    v378 = v520;
    v379 = v510;
    ((void (*)(char *, char *, uint64_t))v186)(v520, v510, v368);
    sub_1A58A6758();
    v380 = (void *)swift_allocError();
    ((void (*)(uint64_t, char *, uint64_t))v549)(v381, v378, v368);
    v382 = v379;
    v383 = (objc_class *)sub_1A5949D98();

    v558 = (uint64_t)v383;
    v205 = v555;
    sub_1A594C3CC();
    v384 = v547;
    v547->isa = v383;
    v367(v382, v368);
    _os_log_impl(&dword_1A4F90000, v370, (os_log_type_t)isa, "[%.*hhx-%{public}s] state: waiting, %@", (uint8_t *)v374, 0x1Fu);
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v384, -1, -1);
    v385 = v551;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v385, -1, -1);
    MEMORY[0x1A85B1964](v374, -1, -1);

    (*(void (**)(char *, uint64_t))(v545 + 8))(v507, v550);
    v386 = v552;
  }
  else
  {

    v367(v510, v368);
    sub_1A55034FC(v365, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    (*(void (**)(char *, uint64_t))(v545 + 8))(v507, v550);
    v386 = v369;
  }
  v367(v386, v368);
  v228 = (uint64_t)v540;
  v229 = (uint64_t)v539;
  v230 = (uint64_t)v538;
  v231 = v537;
  v227 = v554;
  v367(v529, v368);
LABEL_84:
  swift_beginAccess();
  sub_1A54E330C(v231, v228, &qword_1EE798E90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v205 + 48))(v228, 1, v557) == 1)
  {
LABEL_85:
    v448 = (void (*)(uint64_t, uint64_t, uint64_t))v544;
    v544((char *)v229, v556, v557);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796250);
    v449 = (*(unsigned __int8 *)(v536 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v536 + 80);
    v450 = swift_allocObject();
    *(_OWORD *)(v450 + 16) = xmmword_1A59ABD10;
    sub_1A55034B8(v229, v450 + v449, type metadata accessor for ConnectionEvent);
    if (MEMORY[0x1A85B1A0C](&v227[OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate]))
    {
      sub_1A588BDA4(v450);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v452 = (uint64_t)v530;
    swift_release();
    sub_1A55034FC(v229, type metadata accessor for ConnectionEvent);
    v453 = v557;
    v448(v452, v556, v557);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v205 + 56))(v452, 0, 1, v453);
    swift_beginAccess();
    sub_1A58A68D8(v452, v231);
    return sub_1A5510284(v228, &qword_1EE798E90);
  }
  sub_1A54E330C(v228, v230, &qword_1EE798E90);
  v451 = ((uint64_t (*)(uint64_t, uint64_t))v548)(v230, v557);
  if (v451 == *MEMORY[0x1E0CCE5C0])
  {
    swift_release();
    v542((char *)v230, v557);
  }
  else
  {
    if (v451 != *MEMORY[0x1E0CCE5D0])
    {
      v542((char *)v230, v557);
      goto LABEL_85;
    }
    swift_release();
  }
  return sub_1A5510284(v228, &qword_1EE798E90);
}

uint64_t sub_1A58A2140(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  int v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  char *v72;
  os_log_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  _QWORD v79[2];
  int v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  int v83;
  uint64_t v84;
  os_log_t v85;
  uint64_t v86;
  char *v87;
  int v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v2 = v1;
  v97 = a1;
  v90 = type metadata accessor for ConnectionEvent(0);
  v91 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v92 = (char *)v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A594A8E4();
  v104 = *(_QWORD *)(v4 - 8);
  v105 = v4;
  MEMORY[0x1E0C80A78](v4);
  v103 = (char *)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_1A594A908();
  v102 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v7 = (char *)v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594ACC8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v94 = (char *)v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v93 = (char *)v79 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v79 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v79 - v17;
  v19 = sub_1A594A764();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v99);
  v24 = (char *)v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
  sub_1A55034B8(v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)v24, v25);
  v106 = v20;
  v107 = v19;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v24, v19);
  v26 = v2;
  v27 = v94;
  v95 = v26;
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v100 = v18;
  v101 = v9;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v29 = v97;
  v28(v18, v97, v8);
  v89 = v15;
  v30 = v15;
  v31 = v93;
  v28(v30, v29, v8);
  v28(v31, v29, v8);
  v32 = v29;
  v33 = v22;
  v28(v27, v32, v8);
  v34 = sub_1A594A74C();
  v35 = sub_1A594C000();
  if (os_log_type_enabled(v34, (os_log_type_t)v35))
  {
    v83 = v35;
    v85 = v34;
    v87 = v33;
    v36 = swift_slowAlloc();
    v82 = swift_slowAlloc();
    v112 = v82;
    *(_DWORD *)v36 = 68159234;
    LODWORD(v109) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v36 + 8) = 256;
    v37 = v98 + *(int *)(v99 + 20);
    LOBYTE(v109) = *(_BYTE *)v37;
    sub_1A594C3CC();
    *(_WORD *)(v36 + 11) = 2082;
    v38 = ConnectionID.debugDescription.getter(*(unsigned int *)(v37 + 4));
    v109 = sub_1A589167C(v38, v39, &v112);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 21) = 1024;
    v40 = v100;
    v41 = sub_1A594ACB0() & 1;
    v42 = *(void (**)(char *, uint64_t))(v101 + 8);
    v86 = v8;
    v81 = v42;
    v42(v40, v8);
    LODWORD(v109) = v41;
    sub_1A594C3CC();
    v84 = v36;
    *(_WORD *)(v36 + 27) = 2082;
    v43 = v89;
    v44 = sub_1A594ACBC();
    v45 = *(_QWORD *)(v44 + 16);
    if (v45)
    {
      v111 = MEMORY[0x1E0DEE9D8];
      sub_1A58BF7A4(0, v45, 0);
      v46 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
      v79[1] = v44;
      v47 = v44 + v46;
      v48 = *(_QWORD *)(v102 + 72);
      v100 = *(char **)(v102 + 16);
      v101 = v48;
      LODWORD(v99) = *MEMORY[0x1E0CCE370];
      LODWORD(v98) = *MEMORY[0x1E0CCE368];
      v96 = *MEMORY[0x1E0CCE378];
      v88 = *MEMORY[0x1E0CCE360];
      v80 = *MEMORY[0x1E0CCE380];
      do
      {
        ((void (*)(char *, unint64_t, uint64_t))v100)(v7, v47, v108);
        v49 = v103;
        sub_1A594A8FC();
        v50 = (*(uint64_t (**)(char *, uint64_t))(v104 + 88))(v49, v105);
        if (v50 != (_DWORD)v99 && v50 != (_DWORD)v98 && v50 != v96 && v50 != v88 && v50 != v80)
          (*(void (**)(char *, uint64_t))(v104 + 8))(v103, v105);
        v109 = sub_1A594A8F0();
        v110 = v51;
        sub_1A594B5F8();
        sub_1A594B5F8();
        swift_bridgeObjectRelease();
        sub_1A594B5F8();
        v52 = v109;
        v53 = v110;
        (*(void (**)(char *, uint64_t))(v102 + 8))(v7, v108);
        v54 = v111;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A58BF7A4(0, *(_QWORD *)(v54 + 16) + 1, 1);
          v54 = v111;
        }
        v56 = *(_QWORD *)(v54 + 16);
        v55 = *(_QWORD *)(v54 + 24);
        if (v56 >= v55 >> 1)
        {
          sub_1A58BF7A4(v55 > 1, v56 + 1, 1);
          v54 = v111;
        }
        *(_QWORD *)(v54 + 16) = v56 + 1;
        v57 = v54 + 16 * v56;
        *(_QWORD *)(v57 + 32) = v52;
        *(_QWORD *)(v57 + 40) = v53;
        v47 += v101;
        --v45;
        v59 = v106;
        v58 = v107;
      }
      while (v45);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v54 = MEMORY[0x1E0DEE9D8];
      v59 = v106;
      v58 = v107;
    }
    v64 = v84;
    v109 = v54;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A60);
    sub_1A5862BD0();
    v65 = sub_1A594B268();
    v67 = v66;
    swift_bridgeObjectRelease();
    v109 = sub_1A589167C(v65, v67, &v112);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    v68 = v43;
    v69 = v86;
    v70 = v81;
    v81(v68, v86);
    *(_WORD *)(v64 + 37) = 1024;
    v71 = v93;
    LODWORD(v65) = sub_1A594AC98() & 1;
    v70(v71, v69);
    LODWORD(v109) = v65;
    sub_1A594C3CC();
    *(_WORD *)(v64 + 43) = 1024;
    v72 = v94;
    LODWORD(v65) = sub_1A594ACA4() & 1;
    v70(v72, v69);
    LODWORD(v109) = v65;
    sub_1A594C3CC();
    v73 = v85;
    _os_log_impl(&dword_1A4F90000, v85, (os_log_type_t)v83, "[%.*hhx-%{public}s] Path did change. Constrained: %{BOOL}d, interfaces: %{public}s, IPv4: %{BOOL}d, IPv6: %{BOOL}d", (uint8_t *)v64, 0x31u);
    v74 = v82;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v74, -1, -1);
    MEMORY[0x1A85B1964](v64, -1, -1);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v87, v58);
    v63 = (uint64_t *)v92;
    v62 = v95;
  }
  else
  {
    v60 = *(void (**)(char *, uint64_t))(v101 + 8);
    v60(v27, v8);
    v60(v31, v8);
    v60(v100, v8);
    v61 = v95;
    swift_release_n();
    v60(v89, v8);

    (*(void (**)(char *, uint64_t))(v106 + 8))(v33, v107);
    v62 = v61;
    v63 = (uint64_t *)v92;
  }
  v75 = MEMORY[0x1E0DEE9E8];
  v109 = MEMORY[0x1E0DEE9E8];
  if ((sub_1A594ACB0() & 1) != 0)
  {
    sub_1A58DB038();
    v75 = v109;
  }
  *v63 = v75;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796250);
  v76 = (*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
  v77 = swift_allocObject();
  *(_OWORD *)(v77 + 16) = xmmword_1A59ABD10;
  sub_1A55034B8((uint64_t)v63, v77 + v76, type metadata accessor for ConnectionEvent);
  if (MEMORY[0x1A85B1A0C](v62 + OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate))
  {
    sub_1A588BDA4(v77);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return sub_1A55034FC((uint64_t)v63, type metadata accessor for ConnectionEvent);
}

uint64_t sub_1A58A2B1C(char a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A58A2B7C((a1 & 1) == 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A58A2B7C(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE v22[4];
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = sub_1A594A764();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
  sub_1A55034B8(v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)v10, v12);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v7, v10, v4);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v13 = sub_1A594A74C();
  v14 = sub_1A594C030();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v23 = a1;
    v16 = v15;
    v24 = swift_slowAlloc();
    v26 = v24;
    *(_DWORD *)v16 = 68158466;
    LODWORD(v25) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 8) = 256;
    v17 = v11 + *(int *)(v8 + 20);
    LOBYTE(v25) = *(_BYTE *)v17;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 11) = 2082;
    v18 = ConnectionID.debugDescription.getter(*(unsigned int *)(v17 + 4));
    v25 = sub_1A589167C(v18, v19, &v26);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 21) = 1024;
    LODWORD(v25) = (v23 & 1) == 0;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v13, v14, "[%.*hhx-%{public}s] Is viable: %{BOOL}d", (uint8_t *)v16, 0x1Bu);
    v20 = v24;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v20, -1, -1);
    MEMORY[0x1A85B1964](v16, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A58A2E2C(char a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A58A2E88(a1 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A58A2E88(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v33 = a1 & 1;
  v32 = type metadata accessor for ConnectionEvent(0);
  v34 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594A764();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
  sub_1A55034B8(v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)v11, v13);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v14 = sub_1A594A74C();
  v15 = sub_1A594C000();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v31 = v2;
    v17 = v16;
    v30 = swift_slowAlloc();
    v36 = v30;
    *(_DWORD *)v17 = 68158466;
    LODWORD(v35) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v17 + 8) = 256;
    v18 = v12 + *(int *)(v9 + 20);
    LOBYTE(v35) = *(_BYTE *)v18;
    sub_1A594C3CC();
    *(_WORD *)(v17 + 11) = 2082;
    v19 = ConnectionID.debugDescription.getter(*(unsigned int *)(v18 + 4));
    v35 = sub_1A589167C(v19, v20, &v36);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 21) = 1024;
    v21 = v33;
    LODWORD(v35) = v33;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v14, v15, "[%.*hhx-%{public}s] Better path available: %{BOOL}d", (uint8_t *)v17, 0x1Bu);
    v22 = v30;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v22, -1, -1);
    v23 = v17;
    v2 = v31;
    MEMORY[0x1A85B1964](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v24 = v34;
    v25 = v21;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v24 = v34;
    v25 = v33;
  }
  *v4 = v25;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796250);
  v26 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1A59ABD10;
  sub_1A55034B8((uint64_t)v4, v27 + v26, type metadata accessor for ConnectionEvent);
  if (MEMORY[0x1A85B1A0C](v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate))
  {
    sub_1A588BDA4(v27);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return sub_1A55034FC((uint64_t)v4, type metadata accessor for ConnectionEvent);
}

uint64_t sub_1A58A3240(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    a3(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A58A32AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  id v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  void *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v87 = a1;
  v2 = type metadata accessor for ConnectionEvent(0);
  v3 = *(_QWORD *)(v2 - 8);
  v79 = v2;
  v80 = v3;
  MEMORY[0x1E0C80A78](v2);
  v81 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1A594A764();
  v86 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v83 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v76 = (char *)&v72 - v7;
  v77 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v77);
  v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v74 = (uint64_t)&v72 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A594ACEC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v75 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v78 = (char *)&v72 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (_DWORD *)((char *)&v72 - v21);
  MEMORY[0x1E0C80A78](v23);
  v85 = (char *)&v72 - v24;
  v25 = sub_1A594AED8();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (uint64_t *)((char *)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v82 = v1;
  v30 = *(void **)(v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_queue);
  *v29 = v30;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v26 + 104))(v29, *MEMORY[0x1E0DEF740], v25, v27);
  v31 = v30;
  LOBYTE(v30) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v26 + 8))(v29, v25);
  if ((v30 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  sub_1A54E330C(v87, (uint64_t)v14, &qword_1EE798EB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    return sub_1A5510284((uint64_t)v14, &qword_1EE798EB8);
  v33 = v15;
  v34 = v16;
  v35 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v36 = v85;
  v35(v85, v14, v33);
  v37 = *(char **)(v16 + 16);
  ((void (*)(_DWORD *, char *, uint64_t))v37)(v22, v36, v33);
  if ((*(unsigned int (**)(_DWORD *, uint64_t))(v16 + 88))(v22, v33) == *MEMORY[0x1E0CCEB08])
  {
    (*(void (**)(_DWORD *, uint64_t))(v16 + 96))(v22, v33);
    v38 = v82;
    v39 = v84;
    v40 = v86;
    if (*v22 == 89)
    {
      v83 = v37;
      v41 = v82 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
      v42 = v74;
      sub_1A55034B8(v82 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, v74, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v76, v42, v39);
      swift_retain_n();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v43 = v39;
      v44 = sub_1A594A74C();
      v45 = sub_1A594C030();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = swift_slowAlloc();
        v47 = swift_slowAlloc();
        v87 = v34;
        v48 = v47;
        v89 = v47;
        *(_DWORD *)v46 = 68158210;
        LODWORD(v88) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v46 + 8) = 256;
        v49 = v41 + *(int *)(v77 + 20);
        LOBYTE(v88) = *(_BYTE *)v49;
        sub_1A594C3CC();
        *(_WORD *)(v46 + 11) = 2082;
        v50 = ConnectionID.debugDescription.getter(*(unsigned int *)(v49 + 4));
        v88 = sub_1A589167C(v50, v51, &v89);
        v36 = v85;
        sub_1A594C3CC();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v44, v45, "[%.*hhx-%{public}s] Failed to send data (connection is cancelled)", (uint8_t *)v46, 0x15u);
        swift_arrayDestroy();
        v52 = v48;
        v34 = v87;
        MEMORY[0x1A85B1964](v52, -1, -1);
        MEMORY[0x1A85B1964](v46, -1, -1);

        (*(void (**)(char *, uint64_t))(v40 + 8))(v76, v84);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v76, v43);
      }
      v37 = v83;
      goto LABEL_15;
    }
  }
  else
  {
    (*(void (**)(_DWORD *, uint64_t))(v16 + 8))(v22, v33);
    v38 = v82;
    v39 = v84;
    v40 = v86;
  }
  v76 = (char *)v35;
  v87 = v34;
  v53 = v38 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
  sub_1A55034B8(v38 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v83, v9, v39);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v54 = v78;
  ((void (*)(char *, char *, uint64_t))v37)(v78, v36, v33);
  v55 = sub_1A594A74C();
  v56 = sub_1A594C018();
  v57 = v56;
  if (os_log_type_enabled(v55, v56))
  {
    v58 = swift_slowAlloc();
    v73 = (_QWORD *)swift_slowAlloc();
    v74 = swift_slowAlloc();
    v89 = v74;
    *(_DWORD *)v58 = 68158466;
    LODWORD(v88) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v58 + 8) = 256;
    v59 = v53 + *(int *)(v77 + 20);
    LOBYTE(v88) = *(_BYTE *)v59;
    sub_1A594C3CC();
    *(_WORD *)(v58 + 11) = 2082;
    LODWORD(v77) = v57;
    v60 = ConnectionID.debugDescription.getter(*(unsigned int *)(v59 + 4));
    v88 = sub_1A589167C(v60, v61, &v89);
    v38 = v82;
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 21) = 2112;
    v62 = v75;
    ((void (*)(char *, char *, uint64_t))v37)(v75, v54, v33);
    sub_1A58A6758();
    v63 = (void *)swift_allocError();
    ((void (*)(uint64_t, char *, uint64_t))v76)(v64, v62, v33);
    v65 = v37;
    v66 = sub_1A5949D98();

    v88 = v66;
    sub_1A594C3CC();
    v67 = v73;
    *v73 = v66;
    v37 = v65;
    v34 = v87;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v54, v33);
    _os_log_impl(&dword_1A4F90000, v55, (os_log_type_t)v77, "[%.*hhx-%{public}s] Failed to send data: %@", (uint8_t *)v58, 0x1Fu);
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
    swift_arrayDestroy();
    v36 = v85;
    MEMORY[0x1A85B1964](v67, -1, -1);
    v68 = v74;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v68, -1, -1);
    MEMORY[0x1A85B1964](v58, -1, -1);

    (*(void (**)(char *, uint64_t))(v86 + 8))(v83, v84);
  }
  else
  {
    swift_release_n();
    v34 = v87;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v54, v33);

    (*(void (**)(char *, uint64_t))(v86 + 8))(v83, v39);
  }
LABEL_15:
  v69 = (uint64_t)v81;
  ((void (*)(char *, char *, uint64_t))v37)(v81, v36, v33);
  type metadata accessor for ConnectionEvent.FailureReason(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796250);
  v70 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  v71 = swift_allocObject();
  *(_OWORD *)(v71 + 16) = xmmword_1A59ABD10;
  sub_1A55034B8(v69, v71 + v70, type metadata accessor for ConnectionEvent);
  if (MEMORY[0x1A85B1A0C](v38 + OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate))
  {
    sub_1A588BDA4(v71);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1A55034FC(v69, type metadata accessor for ConnectionEvent);
  sub_1A594AA64();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v36, v33);
}

uint64_t sub_1A58A3BFC(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, double);
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v5 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v35 - v9;
  v11 = sub_1A594A764();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v35 - v16;
  v19 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  if ((a2 & 1) != 0)
  {
    v19((char *)&v35 - v16, a3, v11, v17);
    sub_1A55034B8(a3, (uint64_t)v10, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v20 = sub_1A594A74C();
    v21 = sub_1A594C030();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v36 = v23;
      *(_DWORD *)v22 = 68158210;
      LODWORD(v35) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v22 + 8) = 256;
      v24 = &v10[*(int *)(v5 + 20)];
      LOBYTE(v35) = *v24;
      sub_1A594C3CC();
      *(_WORD *)(v22 + 11) = 2082;
      v25 = ConnectionID.debugDescription.getter(*((unsigned int *)v24 + 1));
      v35 = sub_1A589167C(v25, v26, &v36);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v10, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      _os_log_impl(&dword_1A4F90000, v20, v21, "[%.*hhx-%{public}s] Did request opportunistic STARTTLS", (uint8_t *)v22, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v23, -1, -1);
      MEMORY[0x1A85B1964](v22, -1, -1);
    }
    else
    {
      sub_1A55034FC((uint64_t)v10, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v11);
  }
  else
  {
    v19(v14, a3, v11, v17);
    sub_1A55034B8(a3, (uint64_t)v7, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v27 = sub_1A594A74C();
    v28 = sub_1A594C030();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v36 = v30;
      *(_DWORD *)v29 = 68158210;
      LODWORD(v35) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v29 + 8) = 256;
      v31 = &v7[*(int *)(v5 + 20)];
      LOBYTE(v35) = *v31;
      sub_1A594C3CC();
      *(_WORD *)(v29 + 11) = 2082;
      v32 = ConnectionID.debugDescription.getter(*((unsigned int *)v31 + 1));
      v35 = sub_1A589167C(v32, v33, &v36);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      _os_log_impl(&dword_1A4F90000, v27, v28, "[%.*hhx-%{public}s] Did request STARTTLS", (uint8_t *)v29, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v30, -1, -1);
      MEMORY[0x1A85B1964](v29, -1, -1);
    }
    else
    {
      sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

void sub_1A58A4044(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = type metadata accessor for ConnectionEvent(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v7 = Strong;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796250);
      v8 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1A59ABD10;
      sub_1A55034B8((uint64_t)v5, v9 + v8, type metadata accessor for ConnectionEvent);
      if (MEMORY[0x1A85B1A0C](v7 + OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate))
      {
        sub_1A588BDA4(v9);
        swift_unknownObjectRelease();
      }
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_release();
      sub_1A55034FC((uint64_t)v5, type metadata accessor for ConnectionEvent);
    }
  }
}

uint64_t sub_1A58A41B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for ConnectionEvent(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A594ACEC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v18 = result;
    if (a1 != 1)
      sub_1A58A44C8(a1);
    sub_1A54E330C(a4, (uint64_t)v12, &qword_1EE798EB8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_1A5510284((uint64_t)v12, &qword_1EE798EB8);
      v19 = swift_allocObject();
      swift_weakInit();
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = sub_1A58A6920;
      *(_QWORD *)(v20 + 24) = v19;
      swift_retain_n();
      sub_1A594A974();
      swift_release();
      swift_release_n();
      return swift_release();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v16, v13);
      type metadata accessor for ConnectionEvent.FailureReason(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796250);
      v21 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1A59ABD10;
      sub_1A55034B8((uint64_t)v9, v22 + v21, type metadata accessor for ConnectionEvent);
      if (MEMORY[0x1A85B1A0C](v18 + OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate))
      {
        sub_1A588BDA4(v22);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_1A55034FC((uint64_t)v9, type metadata accessor for ConnectionEvent);
      sub_1A594AA64();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
  }
  return result;
}

uint64_t sub_1A58A44C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[4];
  uint64_t v35;

  v3 = type metadata accessor for ConnectionEvent(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1A594A764();
  v7 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  v32 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v32);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - v12;
  if (a1)
    return sub_1A58A4BC4(a1);
  v30 = v3;
  v31 = v4;
  v29 = v6;
  v15 = v1;
  v16 = v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
  sub_1A55034B8(v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)&v28 - v12, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v13, v33);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v17 = sub_1A594A74C();
  v18 = sub_1A594C030();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v34[0] = v20;
    *(_DWORD *)v19 = 68158210;
    LODWORD(v35) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v19 + 8) = 256;
    v21 = v16 + *(int *)(v32 + 20);
    LOBYTE(v35) = *(_BYTE *)v21;
    sub_1A594C3CC();
    *(_WORD *)(v19 + 11) = 2082;
    v22 = ConnectionID.debugDescription.getter(*(unsigned int *)(v21 + 4));
    v35 = sub_1A589167C(v22, v23, v34);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v17, v18, "[%.*hhx-%{public}s] Did complete STARTTLS", (uint8_t *)v19, 0x15u);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v20, -1, -1);
    MEMORY[0x1A85B1964](v19, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v33);
  v24 = (uint64_t)v29;
  v25 = v31;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796250);
  v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1A59ABD10;
  sub_1A55034B8(v24, v27 + v26, type metadata accessor for ConnectionEvent);
  if (MEMORY[0x1A85B1A0C](v15 + OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate))
  {
    sub_1A588BDA4(v27);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return sub_1A55034FC(v24, type metadata accessor for ConnectionEvent);
}

uint64_t sub_1A58A4BC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  char *v14;
  int64_t v15;
  const void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  const void **v29;
  _BYTE *v30;
  _BYTE *v31;
  int64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char v59;
  int v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  const void *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _BYTE v74[4];
  int v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  _BYTE v87[584];
  _BYTE v88[584];
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _OWORD v93[11];
  _BYTE v94[184];
  _BYTE v95[584];
  _BYTE v96[584];
  _BYTE v97[584];
  _BYTE v98[584];
  _BYTE v99[584];
  _QWORD v100[25];

  MEMORY[0x1E0C80A78](a1);
  v77 = v2;
  v3 = v1;
  v5 = v4;
  v100[23] = *MEMORY[0x1E0C80C00];
  v6 = type metadata accessor for ConnectionEvent(0);
  v83 = *(_QWORD *)(v6 - 8);
  v84 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = &v74[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v79 = &v74[-v10];
  MEMORY[0x1E0C80A78](v11);
  v85 = (uint64_t *)&v74[-v12];
  v13 = *(_QWORD *)(v5 + 16);
  v86 = sub_1A58D4694(0, v13, 0, MEMORY[0x1E0DEE9D8]);
  if (v13)
  {
    v76 = v8;
    v78 = v3;
    v82 = v3 + OBJC_IVAR____TtC15IMAP2Connection10Connection_receiveTranscoder;
    v14 = (char *)(v5 + 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v15 = v13 - 1;
    v80 = v5;
    while (1)
    {
      sub_1A57BC8E8(v14, v87);
      sub_1A57BC8E8(v87, v88);
      if (sub_1A56EF358((uint64_t)v88) == 1)
      {
        v16 = (const void *)sub_1A56EF364((uint64_t)v88);
        sub_1A5715EC4(v16, v100);
        sub_1A5715EC4(v16, v94);
        if (sub_1A56EFC28((uint64_t)v94) == 2)
        {
          v81 = v15;
          nullsub_1(v94);
          v18 = *(_QWORD *)(v17 + 16);
          v20 = *(_QWORD *)(v17 + 32);
          v21 = *(_BYTE *)(v17 + 40);
          *(_QWORD *)&v93[0] = *(_QWORD *)(v17 + 24);
          v19 = *(_QWORD *)&v93[0];
          *((_QWORD *)&v93[0] + 1) = v20;
          v89 = 0x4C54544F5248545BLL;
          v90 = 0xEB000000005D4445;
          sub_1A58A7E68((uint64_t)v87, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A7EE4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A69C4);
          sub_1A58A7E68((uint64_t)v87, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A7EE4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A69C4);
          sub_1A58A7E68((uint64_t)v87, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A7EE4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A69C4);
          sub_1A5892368(v18, v19, v20, v21);
          sub_1A58A7F10();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v22 = sub_1A594C498();
          sub_1A5862B80(v18);
          swift_bridgeObjectRelease_n();
          if ((v22 & 1) != 0)
            sub_1A58A55CC();
          swift_bridgeObjectRelease();
          sub_1A58921EC(v18, v19, v20, v21);
          v15 = v81;
        }
        else
        {
          sub_1A57BC8E8(v87, &v89);
          v39 = sub_1A56EF364((uint64_t)&v89);
          sub_1A57BC8E8(v87, v93);
          v40 = sub_1A56EF364((uint64_t)v93);
          sub_1A58A6954(v40);
          sub_1A58A6954(v39);
        }
        swift_beginAccess();
        ServerResponseTranscoder.append(_:)(v100);
        swift_endAccess();
        sub_1A58A7E68((uint64_t)v87, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FE4);
        sub_1A58A7E68((uint64_t)v87, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FE4);
        if (!v15)
          goto LABEL_27;
      }
      else
      {
        v23 = sub_1A56EF364((uint64_t)v88);
        v24 = *(_QWORD *)(v23 + 8);
        v25 = *(_QWORD *)(v23 + 16);
        v26 = *(_BYTE *)(v23 + 24);
        if ((v26 & 1) != 0)
        {
          v27 = (_QWORD *)(*(_QWORD *)v23 + 24);
          swift_beginAccess();
          if (HIDWORD(v24) < v24)
            __break(1u);
          v28 = *v27 + ((v25 >> 24) & 0xFFFF00 | BYTE6(v25)) + v24;
          v91 = MEMORY[0x1E0DEAC20];
          v92 = MEMORY[0x1E0CB1AA8];
          v89 = v28;
          v90 = v28 + (HIDWORD(v24) - v24);
          v29 = (const void **)__swift_project_boxed_opaque_existential_1_0(&v89, MEMORY[0x1E0DEAC20]);
          v30 = *v29;
          if (*v29 && (v31 = v29[1], v32 = v31 - v30, v31 != v30))
          {
            if (v32 <= 14)
            {
              *(_QWORD *)((char *)v93 + 6) = 0;
              *(_QWORD *)&v93[0] = 0;
              BYTE14(v93[0]) = (_BYTE)v31 - (_BYTE)v30;
              memcpy(v93, v30, v32);
              v24 = *(_QWORD *)&v93[0];
              v25 = DWORD2(v93[0]) | ((unint64_t)BYTE12(v93[0]) << 32) | ((unint64_t)BYTE13(v93[0]) << 40) | ((unint64_t)BYTE14(v93[0]) << 48);
              sub_1A57BC8E8(v87, v94);
              v51 = sub_1A56EF364((uint64_t)v94);
              v52 = *(_QWORD *)v51;
              v53 = *(_QWORD *)(v51 + 8);
              v54 = *(_QWORD *)(v51 + 16);
              LODWORD(v81) = *(unsigned __int8 *)(v51 + 24);
              sub_1A58A7E68((uint64_t)v87, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A7EE4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A69C4);
              sub_1A58A7EE4(v52, v53, v54, v81);
            }
            else
            {
              sub_1A5949C18();
              v81 = swift_allocObject();
              sub_1A57BC8E8(v87, v93);
              v46 = sub_1A56EF364((uint64_t)v93);
              v47 = *(_QWORD *)v46;
              v48 = *(_QWORD *)(v46 + 8);
              v49 = *(_QWORD *)(v46 + 16);
              v75 = *(unsigned __int8 *)(v46 + 24);
              sub_1A57BC8E8(v87, v94);
              v50 = sub_1A56EF364((uint64_t)v94);
              sub_1A58A7EE4(*(_QWORD *)v50, *(_QWORD *)(v50 + 8), *(_QWORD *)(v50 + 16), *(_BYTE *)(v50 + 24));
              sub_1A58A7EE4(v47, v48, v49, v75);
              if ((unint64_t)v32 >= 0x7FFFFFFF)
              {
                v55 = sub_1A5949BDC();
                sub_1A5949F3C();
                v24 = swift_allocObject();
                *(_QWORD *)(v24 + 16) = 0;
                *(_QWORD *)(v24 + 24) = v32;
                v25 = v55 | 0x8000000000000000;
              }
              else
              {
                v24 = v32 << 32;
                v25 = sub_1A5949BDC() | 0x4000000000000000;
              }
            }
          }
          else
          {
            sub_1A57BC8E8(v87, v93);
            v33 = sub_1A56EF364((uint64_t)v93);
            v34 = *(_QWORD *)v33;
            v35 = *(_QWORD *)(v33 + 8);
            v36 = *(_QWORD *)(v33 + 16);
            v37 = *(_BYTE *)(v33 + 24);
            sub_1A57BC8E8(v87, v94);
            v38 = sub_1A56EF364((uint64_t)v94);
            sub_1A58A7EE4(*(_QWORD *)v38, *(_QWORD *)(v38 + 8), *(_QWORD *)(v38 + 16), *(_BYTE *)(v38 + 24));
            sub_1A58A7EE4(v34, v35, v36, v37);
            v24 = 0;
            v25 = 0xC000000000000000;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
        }
        else
        {
          sub_1A58A7E68((uint64_t)v87, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A7EE4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A69C4);
          sub_1A58A7E68((uint64_t)v87, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A7EE4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A69C4);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
        v41 = v85;
        *v85 = v24;
        v41[1] = v25;
        *((_BYTE *)v41 + 16) = v26;
        swift_storeEnumTagMultiPayload();
        sub_1A5862C1C(v24, v25, v26);
        v42 = v86;
        v44 = *(_QWORD *)(v86 + 16);
        v43 = *(_QWORD *)(v86 + 24);
        if (v44 >= v43 >> 1)
          v42 = sub_1A58D4694(v43 > 1, v44 + 1, 1, v86);
        *(_QWORD *)(v42 + 16) = v44 + 1;
        v45 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
        v86 = v42;
        sub_1A54E3394((uint64_t)v85, v42 + v45 + *(_QWORD *)(v83 + 72) * v44, type metadata accessor for ConnectionEvent);
        sub_1A58A7E68((uint64_t)v87, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FE4);
        sub_1A585C500(v24, v25, v26);
        sub_1A58A7E68((uint64_t)v87, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FE4);
        if (!v15)
        {
LABEL_27:
          swift_bridgeObjectRelease();
          v3 = v78;
          v8 = v76;
          break;
        }
      }
      --v15;
      v14 += 184;
    }
  }
  swift_beginAccess();
  v56 = v77;
  ServerResponseTranscoder.parseNext()((uint64_t)v95);
  if (v56)
  {
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  while (1)
  {
    sub_1A58A75EC((uint64_t)v95, (uint64_t)v88);
    swift_endAccess();
    sub_1A58A75EC((uint64_t)v95, (uint64_t)v96);
    if (sub_1A58A7634((uint64_t)v96) == 1)
      break;
    sub_1A5892AF8(v96, v97);
    sub_1A5892AF8(v97, v98);
    if (sub_1A57B1128((uint64_t)v98) == 1)
    {
      v58 = sub_1A57B1134((uint64_t)v98);
      v59 = *(_BYTE *)v58;
      v60 = *(_DWORD *)(v58 + 4);
      v61 = *(_QWORD *)(v58 + 24);
      v62 = *(_BYTE *)(v58 + 32);
      *(_OWORD *)v8 = *(_OWORD *)(v58 + 8);
      *((_QWORD *)v8 + 2) = v61;
      v8[24] = v62;
      v8[28] = v59;
      *((_DWORD *)v8 + 8) = v60;
      swift_storeEnumTagMultiPayload();
      sub_1A58A75EC((uint64_t)v88, (uint64_t)v87);
      sub_1A58A7648(v87);
      v63 = v86;
      v65 = *(_QWORD *)(v86 + 16);
      v64 = *(_QWORD *)(v86 + 24);
      if (v65 >= v64 >> 1)
        v63 = sub_1A58D4694(v64 > 1, v65 + 1, 1, v86);
      *(_QWORD *)(v63 + 16) = v65 + 1;
      v66 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
      v86 = v63;
      v67 = v63 + v66 + *(_QWORD *)(v83 + 72) * v65;
      v68 = (uint64_t)v8;
    }
    else
    {
      v69 = (const void *)sub_1A57B1134((uint64_t)v98);
      sub_1A552316C(v69, v99);
      sub_1A552316C(v99, v79);
      swift_storeEnumTagMultiPayload();
      sub_1A58A75EC((uint64_t)v88, (uint64_t)v87);
      sub_1A58A7648(v87);
      v70 = v86;
      v72 = *(_QWORD *)(v86 + 16);
      v71 = *(_QWORD *)(v86 + 24);
      if (v72 >= v71 >> 1)
        v70 = sub_1A58D4694(v71 > 1, v72 + 1, 1, v86);
      *(_QWORD *)(v70 + 16) = v72 + 1;
      v73 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
      v86 = v70;
      v67 = v70 + v73 + *(_QWORD *)(v83 + 72) * v72;
      v68 = (uint64_t)v79;
    }
    sub_1A54E3394(v68, v67, type metadata accessor for ConnectionEvent);
    sub_1A5523B9C(v95, &sub_1A58A7748);
    swift_beginAccess();
    ServerResponseTranscoder.parseNext()((uint64_t)v95);
  }
  if (!*(_QWORD *)(v86 + 16) || !MEMORY[0x1A85B1A0C](v3 + OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate))
    return swift_bridgeObjectRelease();
  sub_1A588BDA4(v86);
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

unint64_t sub_1A58A55CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t result;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  double v22;
  os_log_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = sub_1A594A764();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = static MonotonicTime.now()();
  v10 = result;
  v11 = (unint64_t *)(v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_throttleInfo);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_throttleInfo + 16) & 1) != 0)
    goto LABEL_2;
  v12 = *v11;
  v13 = v11[1];
  v14 = result - *v11;
  if (result < *v11)
  {
    if ((uint64_t)(v12 - result) >= 0)
    {
      v14 = result - v12;
      goto LABEL_7;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((uint64_t)(result - *v11) < 0)
    goto LABEL_19;
LABEL_7:
  v15 = (double)v14 / 1000000000.0;
  if (v15 <= 20.0)
  {
    if (!__OFADD__(v13, 1))
    {
      v11[1] = v13 + 1;
      return result;
    }
    goto LABEL_20;
  }
  if (v15 >= 120.0)
  {
LABEL_2:
    *v11 = v10;
    v11[1] = 1;
    *((_BYTE *)v11 + 16) = 0;
    return result;
  }
  v28 = v11[1];
  v16 = v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
  sub_1A55034B8(v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)v8, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v17 = sub_1A594A74C();
  v27 = sub_1A594C018();
  if (!os_log_type_enabled(v17, (os_log_type_t)v27))
  {

    swift_release_n();
    goto LABEL_17;
  }
  v26 = v17;
  v18 = swift_slowAlloc();
  v25 = swift_slowAlloc();
  v30 = v25;
  *(_DWORD *)v18 = 68158722;
  LODWORD(v29) = 2;
  sub_1A594C3CC();
  *(_WORD *)(v18 + 8) = 256;
  v19 = v16 + *(int *)(v6 + 20);
  LOBYTE(v29) = *(_BYTE *)v19;
  sub_1A594C3CC();
  *(_WORD *)(v18 + 11) = 2082;
  v20 = ConnectionID.debugDescription.getter(*(unsigned int *)(v19 + 4));
  v29 = sub_1A589167C(v20, v21, &v30);
  sub_1A594C3CC();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v18 + 21) = 2048;
  v29 = v28;
  result = sub_1A594C3CC();
  *(_WORD *)(v18 + 31) = 2048;
  v22 = round(v15);
  if ((~*(_QWORD *)&v22 & 0x7FF0000000000000) == 0)
    goto LABEL_21;
  if (v22 > -9.22337204e18)
  {
    if (v22 < 9.22337204e18)
    {
      v29 = (uint64_t)v22;
      sub_1A594C3CC();
      v23 = v26;
      _os_log_impl(&dword_1A4F90000, v26, (os_log_type_t)v27, "[%.*hhx-%{public}s] Connection was throttled by server (%ld commands in %ld seconds).", (uint8_t *)v18, 0x29u);
      v24 = v25;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v24, -1, -1);
      MEMORY[0x1A85B1964](v18, -1, -1);

LABEL_17:
      result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      goto LABEL_2;
    }
    goto LABEL_23;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1A58A5984()
{
  sub_1A58A5A38();
  sub_1A594B6DC();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  return 7876668;
}

uint64_t sub_1A58A5A18()
{
  return sub_1A58A5984();
}

unint64_t sub_1A58A5A38()
{
  unint64_t result;

  result = qword_1EE7A47E8;
  if (!qword_1EE7A47E8)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EE7A47E8);
  }
  return result;
}

BOOL sub_1A58A5A7C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  _BOOL8 result;

  if (a3 == 1)
    return a6 == 1;
  result = 0;
  if (a6 != 1 && a4 == a1)
  {
    if (a3)
    {
      if (a6)
      {
        if (a2 == a5 && a3 == a6)
          return 1;
        if ((sub_1A594CD38() & 1) != 0)
          return 1;
      }
    }
    else if (!a6)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

void sub_1A58A5B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v12 = sub_1A594ACEC();
  MEMORY[0x1E0C80A78](v12);
  v4 = type metadata accessor for ConnectionEvent.FailureReason(0);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAD10);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 + *(int *)(v8 + 48) - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(a1, (uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ConnectionEvent.FailureReason);
  sub_1A55034B8(a2, (uint64_t)v9, type metadata accessor for ConnectionEvent.FailureReason);
  v10 = (char *)sub_1A58A5C54 + 4 * byte_1A59DE810[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A58A5C54()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  char v3;
  char v4;

  sub_1A55034B8(v0, (uint64_t)v2, type metadata accessor for ConnectionEvent.FailureReason);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1A5510284(v0, &qword_1EE7AAD10);
    v4 = 0;
  }
  else
  {
    v3 = *v2 ^ *v1;
    sub_1A55034FC(v0, type metadata accessor for ConnectionEvent.FailureReason);
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1A58A5DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD v20[5];
  uint64_t v21;
  char *v22;

  v21 = a1;
  v22 = (char *)a2;
  v2 = type metadata accessor for ConnectionEvent.FailureReason(0);
  MEMORY[0x1E0C80A78](v2);
  v20[1] = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A594AA40();
  v20[2] = *(_QWORD *)(v4 - 8);
  v20[3] = v4;
  MEMORY[0x1E0C80A78](v4);
  v20[0] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ConnectionEvent(0);
  MEMORY[0x1E0C80A78](v6);
  v20[4] = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAD18);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)&v16[*(int *)(v17 + 48)];
  sub_1A55034B8(v21, (uint64_t)v16, type metadata accessor for ConnectionEvent);
  sub_1A55034B8((uint64_t)v22, v18, type metadata accessor for ConnectionEvent);
  v22 = v16;
  v19 = (char *)sub_1A58A5FBC + 4 * byte_1A59DE814[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A58A5FBC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v3 = v0[6];
  sub_1A55034B8(v3, v2, type metadata accessor for ConnectionEvent);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(uint64_t, uint64_t))(v0[2] + 8))(v2, v0[3]);
    sub_1A5510284(v3, &qword_1EE7AAD18);
    v4 = 0;
  }
  else
  {
    v5 = v0[2];
    v6 = *v0;
    v7 = v1;
    v8 = v0[3];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(*v0, v7, v8);
    v4 = MEMORY[0x1A85ACEAC](v2, v6);
    v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v9(v6, v8);
    v9(v2, v8);
    sub_1A55034FC(v3, type metadata accessor for ConnectionEvent);
  }
  return v4 & 1;
}

uint64_t sub_1A58A6444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v27;

  v4 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OutboundContent(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7AAD00);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v15[*(int *)(v16 + 48)];
  sub_1A55034B8(a1, (uint64_t)v15, type metadata accessor for OutboundContent);
  sub_1A55034B8(a2, v17, type metadata accessor for OutboundContent);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1A55034B8((uint64_t)v15, (uint64_t)v12, type metadata accessor for OutboundContent);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1A54E3394(v17, (uint64_t)v6, type metadata accessor for ClientCommand);
      v25 = static ClientCommand.__derived_enum_equals(_:_:)(v12, v6);
      sub_1A55034FC((uint64_t)v6, type metadata accessor for ClientCommand);
      sub_1A55034FC((uint64_t)v12, type metadata accessor for ClientCommand);
      goto LABEL_12;
    }
    sub_1A55034FC((uint64_t)v12, type metadata accessor for ClientCommand);
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1A55034B8((uint64_t)v15, (uint64_t)v9, type metadata accessor for OutboundContent);
    v19 = *(_QWORD *)v9;
    v20 = *((_QWORD *)v9 + 1);
    v21 = v9[16];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = *(_QWORD *)v17;
      v23 = *(_QWORD *)(v17 + 8);
      v24 = *(unsigned __int8 *)(v17 + 16);
      v25 = sub_1A58CDA10(v19, v20, v21, v22, v23, v24);
      sub_1A585C500(v22, v23, v24);
      sub_1A585C500(v19, v20, v21);
LABEL_12:
      sub_1A55034FC((uint64_t)v15, type metadata accessor for OutboundContent);
      return v25 & 1;
    }
    sub_1A585C500(v19, v20, v21);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_10:
    sub_1A5510284((uint64_t)v15, (uint64_t *)&unk_1EE7AAD00);
    v25 = 0;
    return v25 & 1;
  }
  sub_1A55034FC((uint64_t)v15, type metadata accessor for OutboundContent);
  v25 = 1;
  return v25 & 1;
}

uint64_t sub_1A58A66EC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A58A6710(uint64_t a1)
{
  uint64_t v1;

  return sub_1A58A3240(a1, v1, (void (*)(uint64_t))sub_1A58A32AC);
}

uint64_t type metadata accessor for ConnectionEvent(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE798038);
}

uint64_t type metadata accessor for ConnectionEvent.FailureReason(uint64_t a1)
{
  return sub_1A55A1A0C(a1, qword_1EE798020);
}

unint64_t sub_1A58A6758()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE795E78;
  if (!qword_1EE795E78)
  {
    v1 = sub_1A594ACEC();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CCEB28], v1);
    atomic_store(result, (unint64_t *)&qword_1EE795E78);
  }
  return result;
}

uint64_t sub_1A58A67A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s6LoggerVMa_0() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A58A683C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(_s6LoggerVMa_0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A589E674(a1, (_QWORD *)(v1 + v4), *(char **)(v1 + v5), *(char **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A58A6898(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1A58A68A8(uint64_t a1)
{
  uint64_t v1;

  return sub_1A58A3240(a1, v1, (void (*)(uint64_t))sub_1A58A2140);
}

uint64_t sub_1A58A68C8(char a1)
{
  return sub_1A58A2B1C(a1);
}

uint64_t sub_1A58A68D0(char a1)
{
  return sub_1A58A2E2C(a1);
}

uint64_t sub_1A58A68D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A58A6920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A58A41B8(a1, a2, a3, a4);
}

uint64_t sub_1A58A6928()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A58A694C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1A58C31D0(a1, a2, a3, a4, a5, *(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))(v5 + 16));
}

uint64_t sub_1A58A6954(uint64_t a1)
{
  sub_1A58A69C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_WORD *)(a1 + 176),
    *(_BYTE *)(a1 + 178));
  return a1;
}

void sub_1A58A69C4(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23,char a24)
{
  unsigned __int8 v24;

  v24 = a6;
  switch(a24)
  {
    case 0:
      sub_1A58A6B04(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
      break;
    case 1:
      sub_1A58A6D8C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 2:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5892368(a3, a4, a5, v24);
      break;
    case 3:
      sub_1A5862270(a1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 4:
      swift_retain();
      break;
    default:
      return;
  }
}

uint64_t sub_1A58A6B04(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, char a14)
{
  switch(a14 & 0xE | (a12 >> 63))
  {
    case 0uLL:
      return sub_1A58A6C4C(result, a2, a3, a4);
    case 1uLL:
      return sub_1A58A6C80(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 0x7FFFFFFFFFFFFFFFLL, a13, a14 & 0xF1);
    case 2uLL:
      return sub_1A58A6D54(result, a2);
    case 3uLL:
    case 4uLL:
      goto LABEL_9;
    case 5uLL:
      swift_retain();
      swift_retain();
      goto LABEL_7;
    case 6uLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_7:
      result = swift_retain();
      break;
    case 7uLL:
      swift_retain();
LABEL_9:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 8uLL:
      result = sub_1A56E0E38(result, a2, a3);
      break;
    case 9uLL:
      result = sub_1A5523B84();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A58A6C4C(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 4u)
  {
    sub_1A5862270(result);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A58A6C80(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  switch(a14 >> 4)
  {
    case 0:
    case 3:
    case 5:
    case 9:
      goto LABEL_5;
    case 1:
    case 2:
      swift_retain();
      swift_retain();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_5;
    case 4:
      sub_1A55235F0(result, a2);
      goto LABEL_5;
    case 8:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_5:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A58A6D54(uint64_t result, unint64_t a2)
{
  switch((a2 >> 37) & 7)
  {
    case 1uLL:
    case 2uLL:
      result = sub_1A54E4334(result, a2, BYTE4(a2) & 0x1F);
      break;
    case 3uLL:
    case 4uLL:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1A58A6D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  int v23;

  v23 = (a23 >> 9) & 7;
  switch(v23)
  {
    case 4:
      swift_retain();
      break;
    case 3:
      sub_1A56DDDA4(a1, a2, a3, a4, a5);
      break;
    case 2:
      sub_1A58A6E38(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23 & 0xF1FF);
      break;
  }
}

void sub_1A58A6E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  switch(a23 >> 12)
  {
    case 0:
    case 6:
    case 0xB:
    case 0xC:
      goto LABEL_4;
    case 1:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_4:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 5:
      sub_1A5523694(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 7:
      sub_1A56DDDA4(a1, a2, a3, a4, a5);
      break;
    default:
      return;
  }
}

uint64_t sub_1A58A6FB8(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return swift_release();
  sub_1A5862B80(a1);
  return swift_bridgeObjectRelease();
}

void sub_1A58A6FE4(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23,char a24)
{
  unsigned __int8 v24;

  v24 = a6;
  switch(a24)
  {
    case 0:
      sub_1A58A7124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
      break;
    case 1:
      sub_1A58A73C8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 2:
      swift_bridgeObjectRelease();
      sub_1A58921EC(a3, a4, a5, v24);
      break;
    case 3:
      sub_1A5862B80(a1);
      swift_bridgeObjectRelease();
      break;
    case 4:
      swift_release();
      break;
    default:
      return;
  }
}

uint64_t sub_1A58A7124(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, char a14)
{
  switch(a14 & 0xE | (a12 >> 63))
  {
    case 0uLL:
      return sub_1A58A7284(result, a2, a3, a4);
    case 1uLL:
      return sub_1A58A72B8(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 0x7FFFFFFFFFFFFFFFLL, a13, a14 & 0xF1);
    case 2uLL:
      return sub_1A58A7390(result, a2);
    case 3uLL:
    case 4uLL:
      goto LABEL_9;
    case 5uLL:
      swift_release();
      swift_release();
      goto LABEL_7;
    case 6uLL:
      swift_bridgeObjectRelease();
LABEL_7:
      result = swift_release();
      break;
    case 7uLL:
      swift_release();
LABEL_9:
      result = swift_bridgeObjectRelease();
      break;
    case 8uLL:
      result = sub_1A56E0EA0(result, a2, a3);
      break;
    case 9uLL:
      result = sub_1A552466C();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A58A7284(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 4u)
  {
    sub_1A5862B80(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A58A72B8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  switch(a14 >> 4)
  {
    case 0:
    case 3:
    case 5:
    case 9:
      goto LABEL_5;
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      return swift_release();
    case 4:
      sub_1A55240D4(result, a2);
      goto LABEL_5;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A58A7390(uint64_t result, unint64_t a2)
{
  switch((a2 >> 37) & 7)
  {
    case 1uLL:
    case 2uLL:
      result = sub_1A54E3458(result, a2, BYTE4(a2) & 0x1F);
      break;
    case 3uLL:
    case 4uLL:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1A58A73C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  int v23;

  v23 = (a23 >> 9) & 7;
  switch(v23)
  {
    case 4:
      swift_release();
      break;
    case 3:
      sub_1A5683854(a1, a2, a3, a4, a5);
      break;
    case 2:
      sub_1A58A7474(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23 & 0xF1FF);
      break;
  }
}

void sub_1A58A7474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  switch(a23 >> 12)
  {
    case 0:
    case 6:
    case 0xB:
    case 0xC:
      goto LABEL_4;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    case 5:
      sub_1A5524178(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 7:
      sub_1A5683854(a1, a2, a3, a4, a5);
      break;
    default:
      return;
  }
}

uint64_t sub_1A58A75EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A58A7634(uint64_t a1)
{
  unsigned int v1;

  v1 = *(_DWORD *)(a1 + 193);
  if (v1 > 0x80000000)
    return -v1;
  else
    return 0;
}

#error "1A58A7720: call analysis failed (funcsize=62)"

#error "1A58A7AC8: call analysis failed (funcsize=231)"

#error "1A58A7E2C: call analysis failed (funcsize=223)"

uint64_t sub_1A58A7E68(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1A56EFB98(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(unsigned __int16 *)(a1 + 176) | (*(unsigned __int8 *)(a1 + 178) << 16),
    a2,
    a3);
  return a1;
}

uint64_t sub_1A58A7EE4(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return swift_retain();
  sub_1A5862270(a1);
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

unint64_t sub_1A58A7F10()
{
  unint64_t result;

  result = qword_1EE7990A0;
  if (!qword_1EE7990A0)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EE7990A0);
  }
  return result;
}

uint64_t sub_1A58A7F54(uint64_t a1, __n128 *a2)
{
  unsigned __int32 v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  unsigned __int8 v21;
  __int128 v22;

  sub_1A5868834((__n128 *)a1, &v16);
  sub_1A5868834(a2, &v15);
  sub_1A5868834(&v16, &v17);
  v4 = v17.n128_u32[0];
  if (!(v17.n128_u64[0] >> 62))
  {
    v17.n128_u64[0] &= 0x3FFFFFFFFFFFFFFFuLL;
    v5 = v17.n128_u64[1];
    v6 = v18;
    sub_1A5868834(&v15, (__n128 *)&v19);
    if (v19 >> 62 || v4 != (_DWORD)v19)
      return 0;
    v8 = *((_QWORD *)&v20 + 1);
    if (v6)
      goto LABEL_6;
LABEL_14:
    if (v8)
      return 0;
    goto LABEL_19;
  }
  if (v17.n128_u64[0] >> 62 != 1)
  {
    sub_1A5868834(&v15, (__n128 *)&v19);
    if (v19 >> 62 != 2)
      return 0;
    result = 0;
    if (v19 != 0x8000000000000000 || v20 != 0)
      return result;
    goto LABEL_19;
  }
  v17.n128_u64[0] &= 0x3FFFFFFFFFFFFFFFuLL;
  v5 = v17.n128_u64[1];
  v6 = v18;
  sub_1A5868834(&v15, (__n128 *)&v19);
  v7 = v19;
  if (v19 >> 62 != 1)
    return 0;
  v19 &= 0x3FFFFFFFFFFFFFFFuLL;
  if (v4 != v7)
    return 0;
  v8 = *((_QWORD *)&v20 + 1);
  if (!v6)
    goto LABEL_14;
LABEL_6:
  if (!v8)
    return 0;
  if (v5 == (_QWORD)v20 && v6 == v8 || (v9 = sub_1A594CD38(), result = 0, (v9 & 1) != 0))
  {
LABEL_19:
    sub_1A58687F8((__n128 *)(a1 + 24), &v14);
    v12 = a2[1].n128_u64[1];
    v11 = a2[2].n128_u64[0];
    v13 = a2[2].n128_u64[1];
    sub_1A58687F8(&v14, (__n128 *)&v21);
    if (*((_QWORD *)&v22 + 1) == 1)
    {
      if (v13 == 1)
        return 1;
    }
    else if (v13 != 1 && v21 == v12)
    {
      if (*((_QWORD *)&v22 + 1))
      {
        if (v13 && (v22 == __PAIR128__(v13, v11) || (sub_1A594CD38() & 1) != 0))
          return 1;
      }
      else if (!v13)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A58A8138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  void (*v20)(__int128 *, _QWORD);
  _QWORD *v21;
  uint64_t result;
  uint64_t v23;
  __int128 v24;
  __int128 v25;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798838);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  sub_1A594AB24();
  swift_allocObject();
  sub_1A594AB18();
  sub_1A594AB0C();
  v10 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 28));
  if ((v10 & 0xC0) == 0x40)
  {
    v11 = v10 & 0x3F;
    sub_1A594AB00();
    sub_1A58EF56C(a1, v11, a2);
  }
  else
  {
    sub_1A594AB00();
  }
  swift_retain();
  v12 = sub_1A594AAE8();
  if (qword_1EE798238 != -1)
    swift_once();
  sub_1A594ABF0();
  swift_allocObject();
  swift_retain();
  v13 = sub_1A594ABE4();
  v14 = a2 + *(int *)(_s6LoggerVMa_0() + 20);
  v15 = *(_DWORD *)(v14 + 4);
  v16 = *(_BYTE *)v14;
  *((_QWORD *)&v25 + 1) = &type metadata for ConnectionLoggerID;
  LOBYTE(v24) = v16;
  DWORD1(v24) = v15;
  sub_1A594AC08();
  OSSignpostID.init(engine:kind:connectionID:)();
  v17 = sub_1A594A62C();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
  sub_1A54E330C((uint64_t)v9, (uint64_t)v6, &qword_1EE798838);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v6, 1, v17) == 1)
  {
    sub_1A5510284((uint64_t)v6, &qword_1EE798838);
    v24 = 0u;
    v25 = 0u;
  }
  else
  {
    *((_QWORD *)&v25 + 1) = v17;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v24);
    (*(void (**)(uint64_t *, char *, uint64_t))(v18 + 32))(boxed_opaque_existential_1, v6, v17);
  }
  sub_1A594AC08();
  sub_1A5510284((uint64_t)v9, &qword_1EE798838);
  sub_1A594AAB8();
  swift_retain();
  v20 = (void (*)(__int128 *, _QWORD))sub_1A594AAAC();
  if (*v21 >> 62
    && (_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0(),
        v23 = sub_1A594CA38(),
        result = swift_bridgeObjectRelease(),
        v23 < 0))
  {
    __break(1u);
  }
  else
  {
    sub_1A589239C(0, 0, v13);
    v20(&v24, 0);
    swift_release();
    swift_release();
    swift_release();
    return v12;
  }
  return result;
}

unint64_t destroy for ConnectionConfiguration.TLSRequirement(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 16);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if (v2 - 1 < 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s15IMAP2Connection23ConnectionConfigurationV14TLSRequirementOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 16);
  if ((int)v4 - 1 < 0)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v3;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  }
  return a1;
}

uint64_t assignWithCopy for ConnectionConfiguration.TLSRequirement(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  __int128 v8;

  LODWORD(v4) = -1;
  if (*(_QWORD *)(a1 + 16) >= 0xFFFFFFFFuLL)
    LODWORD(v5) = -1;
  else
    v5 = *(_QWORD *)(a1 + 16);
  v6 = v5 - 1;
  if (*((_QWORD *)a2 + 2) < 0xFFFFFFFFuLL)
    v4 = *((_QWORD *)a2 + 2);
  v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    v8 = *a2;
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_OWORD *)a1 = v8;
    return a1;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithTake for ConnectionConfiguration.TLSRequirement(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    v6 = *(_QWORD *)(a2 + 16);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF)
      v7 = *(_QWORD *)(a2 + 16);
    if ((int)v7 - 1 < 0)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectionConfiguration.TLSRequirement(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  if ((v4 + 1) >= 2)
    return v4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ConnectionConfiguration.TLSRequirement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2 + 1;
  }
  return result;
}

uint64_t sub_1A58A8710(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_1A58A8734(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    result[1] = 0;
    result[2] = 0;
    *result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[2] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionConfiguration.TLSRequirement()
{
  return &type metadata for ConnectionConfiguration.TLSRequirement;
}

uint64_t *sub_1A58A8774(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1A594ACEC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_1A58A8828(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_1A594ACEC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *sub_1A58A8874(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1A594ACEC();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1A58A8900(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for ConnectionEvent.FailureReason);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1A594ACEC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_1A58A89A4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1A594ACEC();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1A58A8A30(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for ConnectionEvent.FailureReason);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1A594ACEC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A58A8AD4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594ACEC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1A58A8B44(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_1A594AA40();
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v26 = type metadata accessor for ConnectionEvent.FailureReason(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v27 = sub_1A594ACEC();
          (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v91 = a2[9];
        v92 = a2[8];
        v89 = a2[11];
        v90 = a2[10];
        v87 = a2[13];
        v88 = a2[12];
        v85 = a2[15];
        v86 = a2[14];
        v83 = a2[17];
        v84 = a2[16];
        v81 = a2[19];
        v82 = a2[18];
        v79 = a2[21];
        v80 = a2[20];
        v77 = a2[23];
        v78 = a2[22];
        v75 = a2[25];
        v76 = a2[24];
        v73 = a2[27];
        v74 = a2[26];
        v72 = a2[28];
        v71 = a2[29];
        v70 = a2[30];
        v69 = a2[31];
        v68 = a2[32];
        v67 = a2[33];
        v66 = a2[34];
        v65 = a2[35];
        v64 = a2[36];
        v63 = a2[37];
        v62 = a2[38];
        v61 = a2[39];
        v60 = a2[40];
        v59 = a2[41];
        v58 = a2[42];
        v57 = a2[43];
        v56 = a2[44];
        v55 = a2[45];
        v28 = a2[46];
        v29 = a2[47];
        v30 = a2[48];
        v31 = a2[49];
        v32 = a2[50];
        v33 = a2[51];
        v34 = a2[52];
        v35 = a2[53];
        v36 = a2[54];
        v37 = a2[55];
        v38 = a2[56];
        v39 = a2[57];
        v40 = a2[58];
        v41 = a2[59];
        v42 = a2[60];
        v43 = a2[61];
        v44 = a2[62];
        v45 = a2[63];
        v46 = a2[64];
        v47 = a2[65];
        v48 = a2[66];
        v49 = a2[67];
        v50 = a2[68];
        v51 = a2[69];
        v52 = a2[70];
        v53 = a2[71];
        v54 = a2[72];
        v10 = *a2;
        v11 = *a2;
        v12 = a2[1];
        v13 = a2[2];
        v14 = a2[3];
        v15 = a2[4];
        v16 = a2[5];
        v17 = a2[6];
        v18 = a2[7];
        sub_1A586238C(v11, v12, v13, v14, v15, v16, v17, v18, v92, v91, v90, v89, v88, v87, v86, v85, v84, v83, v82,
          v81,
          v80,
          v79,
          v78,
          v77,
          v76,
          v75,
          v74,
          v73,
          v72,
          v71,
          v70,
          v69,
          v68,
          v67,
          v66,
          v65,
          v64,
          v63,
          v62,
          v61,
          v60,
          v59,
          v58,
          v57,
          v56,
          v55,
          v28,
          v29,
          v30,
          v31,
          v32,
          v33,
          v34,
          v35,
          v36,
          v37,
          v38,
          v39,
          v40,
          v41,
          v42,
          v43,
          v44);
        *a1 = v10;
        a1[1] = v12;
        a1[2] = v13;
        a1[3] = v14;
        a1[4] = v15;
        a1[5] = v16;
        a1[6] = v17;
        a1[7] = v18;
        a1[8] = v92;
        a1[9] = v91;
        a1[10] = v90;
        a1[11] = v89;
        a1[12] = v88;
        a1[13] = v87;
        a1[14] = v86;
        a1[15] = v85;
        a1[16] = v84;
        a1[17] = v83;
        a1[18] = v82;
        a1[19] = v81;
        a1[20] = v80;
        a1[21] = v79;
        a1[22] = v78;
        a1[23] = v77;
        a1[24] = v76;
        a1[25] = v75;
        a1[26] = v74;
        a1[27] = v73;
        a1[28] = v72;
        a1[29] = v71;
        a1[30] = v70;
        a1[31] = v69;
        a1[32] = v68;
        a1[33] = v67;
        a1[34] = v66;
        a1[35] = v65;
        a1[36] = v64;
        a1[37] = v63;
        a1[38] = v62;
        a1[39] = v61;
        a1[40] = v60;
        a1[41] = v59;
        a1[42] = v58;
        a1[43] = v57;
        a1[44] = v56;
        a1[45] = v55;
        a1[46] = v28;
        a1[47] = v29;
        a1[48] = v30;
        a1[49] = v31;
        a1[50] = v32;
        a1[51] = v33;
        a1[52] = v34;
        a1[53] = v35;
        a1[54] = v36;
        a1[55] = v37;
        a1[56] = v38;
        a1[57] = v39;
        a1[58] = v40;
        a1[59] = v41;
        a1[60] = v42;
        a1[61] = v43;
        a1[62] = v44;
        a1[63] = v45;
        a1[64] = v46;
        a1[65] = v47;
        a1[66] = v48;
        a1[67] = v49;
        a1[68] = v50;
        a1[69] = v51;
        a1[70] = v52;
        a1[71] = v53;
        a1[72] = v54;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v19 = *a2;
        v20 = a2[1];
        v21 = a2[2];
        v22 = *((_BYTE *)a2 + 24);
        sub_1A5892368(*a2, v20, v21, v22);
        *a1 = v19;
        a1[1] = v20;
        a1[2] = v21;
        *((_BYTE *)a1 + 24) = v22;
        *(uint64_t *)((char *)a1 + 28) = *(_QWORD *)((char *)a2 + 28);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v23 = *a2;
        v24 = a2[1];
        v25 = *((_BYTE *)a2 + 16);
        sub_1A5862C1C(v23, v24, v25);
        *a1 = v23;
        a1[1] = v24;
        *((_BYTE *)a1 + 16) = v25;
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *a1 = *a2;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1A58A9318(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_1A594AA40();
      goto LABEL_5;
    case 1:
      type metadata accessor for ConnectionEvent.FailureReason(0);
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 1)
      {
        v3 = sub_1A594ACEC();
LABEL_5:
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      }
      break;
    case 2:
      v20 = *(_OWORD *)(a1 + 480);
      v18 = *(_OWORD *)(a1 + 448);
      v19 = *(_OWORD *)(a1 + 464);
      v16 = *(_OWORD *)(a1 + 416);
      v17 = *(_OWORD *)(a1 + 432);
      v14 = *(_OWORD *)(a1 + 384);
      v15 = *(_OWORD *)(a1 + 400);
      v12 = *(_OWORD *)(a1 + 352);
      v13 = *(_OWORD *)(a1 + 368);
      v10 = *(_OWORD *)(a1 + 320);
      v11 = *(_OWORD *)(a1 + 336);
      v8 = *(_OWORD *)(a1 + 288);
      v9 = *(_OWORD *)(a1 + 304);
      v6 = *(_OWORD *)(a1 + 256);
      v7 = *(_OWORD *)(a1 + 272);
      v4 = *(_OWORD *)(a1 + 224);
      v5 = *(_OWORD *)(a1 + 240);
      result = sub_1A5862784(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
                 *(_QWORD *)(a1 + 152),
                 *(_QWORD *)(a1 + 160),
                 *(_QWORD *)(a1 + 168),
                 *(_QWORD *)(a1 + 176),
                 *(_QWORD *)(a1 + 184),
                 *(_OWORD *)(a1 + 192),
                 *(_QWORD *)(a1 + 200),
                 *(_QWORD *)(a1 + 208),
                 *(_QWORD *)(a1 + 216),
                 v4,
                 *((uint64_t *)&v4 + 1),
                 v5,
                 *((uint64_t *)&v5 + 1),
                 v6,
                 *((uint64_t *)&v6 + 1),
                 v7,
                 *((uint64_t *)&v7 + 1),
                 v8,
                 *((uint64_t *)&v8 + 1),
                 v9,
                 *((uint64_t *)&v9 + 1),
                 v10,
                 *((uint64_t *)&v10 + 1),
                 v11,
                 *((uint64_t *)&v11 + 1),
                 v12,
                 *((uint64_t *)&v12 + 1),
                 v13,
                 *((uint64_t *)&v13 + 1),
                 v14,
                 *((uint64_t *)&v14 + 1),
                 v15,
                 *((uint64_t *)&v15 + 1),
                 v16,
                 *((uint64_t *)&v16 + 1),
                 v17,
                 *((uint64_t *)&v17 + 1),
                 v18,
                 *((uint64_t *)&v18 + 1),
                 v19,
                 *((uint64_t *)&v19 + 1),
                 v20,
                 *((uint64_t *)&v20 + 1),
                 *(_QWORD *)(a1 + 496));
      break;
    case 3:
      result = sub_1A58921EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
      break;
    case 4:
      result = sub_1A585C500(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
      break;
    case 5:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *sub_1A58A94C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_1A594AA40();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_11;
    case 1u:
      v7 = type metadata accessor for ConnectionEvent.FailureReason(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v8 = sub_1A594ACEC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      goto LABEL_11;
    case 2u:
      v89 = a2[9];
      v90 = a2[8];
      v87 = a2[11];
      v88 = a2[10];
      v85 = a2[13];
      v86 = a2[12];
      v83 = a2[15];
      v84 = a2[14];
      v81 = a2[17];
      v82 = a2[16];
      v79 = a2[19];
      v80 = a2[18];
      v77 = a2[21];
      v78 = a2[20];
      v75 = a2[23];
      v76 = a2[22];
      v73 = a2[25];
      v74 = a2[24];
      v71 = a2[27];
      v72 = a2[26];
      v70 = a2[28];
      v69 = a2[29];
      v68 = a2[30];
      v67 = a2[31];
      v66 = a2[32];
      v65 = a2[33];
      v64 = a2[34];
      v63 = a2[35];
      v62 = a2[36];
      v61 = a2[37];
      v60 = a2[38];
      v59 = a2[39];
      v58 = a2[40];
      v57 = a2[41];
      v56 = a2[42];
      v55 = a2[43];
      v54 = a2[44];
      v27 = a2[45];
      v28 = a2[46];
      v29 = a2[47];
      v30 = a2[48];
      v31 = a2[49];
      v32 = a2[50];
      v33 = a2[51];
      v34 = a2[52];
      v35 = a2[53];
      v36 = a2[54];
      v37 = a2[55];
      v38 = a2[56];
      v39 = a2[57];
      v40 = a2[58];
      v41 = a2[59];
      v9 = a2[60];
      v42 = a2[61];
      v43 = a2[62];
      v44 = a2[63];
      v45 = a2[64];
      v46 = a2[65];
      v47 = a2[66];
      v48 = a2[67];
      v49 = a2[68];
      v50 = a2[69];
      v51 = a2[70];
      v52 = a2[71];
      v53 = a2[72];
      v10 = *a2;
      v11 = *a2;
      v12 = a2[1];
      v13 = a2[2];
      v14 = a2[3];
      v15 = a2[4];
      v16 = a2[5];
      v17 = a2[6];
      v18 = a2[7];
      sub_1A586238C(v11, v12, v13, v14, v15, v16, v17, v18, v90, v89, v88, v87, v86, v85, v84, v83, v82, v81, v80,
        v79,
        v78,
        v77,
        v76,
        v75,
        v74,
        v73,
        v72,
        v71,
        v70,
        v69,
        v68,
        v67,
        v66,
        v65,
        v64,
        v63,
        v62,
        v61,
        v60,
        v59,
        v58,
        v57,
        v56,
        v55,
        v54,
        v27,
        v28,
        v29,
        v30,
        v31,
        v32,
        v33,
        v34,
        v35,
        v36,
        v37,
        v38,
        v39,
        v40,
        v41,
        v9,
        v42,
        v43);
      *a1 = v10;
      a1[1] = v12;
      a1[2] = v13;
      a1[3] = v14;
      a1[4] = v15;
      a1[5] = v16;
      a1[6] = v17;
      a1[7] = v18;
      a1[8] = v90;
      a1[9] = v89;
      a1[10] = v88;
      a1[11] = v87;
      a1[12] = v86;
      a1[13] = v85;
      a1[14] = v84;
      a1[15] = v83;
      a1[16] = v82;
      a1[17] = v81;
      a1[18] = v80;
      a1[19] = v79;
      a1[20] = v78;
      a1[21] = v77;
      a1[22] = v76;
      a1[23] = v75;
      a1[24] = v74;
      a1[25] = v73;
      a1[26] = v72;
      a1[27] = v71;
      a1[28] = v70;
      a1[29] = v69;
      a1[30] = v68;
      a1[31] = v67;
      a1[32] = v66;
      a1[33] = v65;
      a1[34] = v64;
      a1[35] = v63;
      a1[36] = v62;
      a1[37] = v61;
      a1[38] = v60;
      a1[39] = v59;
      a1[40] = v58;
      a1[41] = v57;
      a1[42] = v56;
      a1[43] = v55;
      a1[44] = v54;
      a1[45] = v27;
      a1[46] = v28;
      a1[47] = v29;
      a1[48] = v30;
      a1[49] = v31;
      a1[50] = v32;
      a1[51] = v33;
      a1[52] = v34;
      a1[53] = v35;
      a1[54] = v36;
      a1[55] = v37;
      a1[56] = v38;
      a1[57] = v39;
      a1[58] = v40;
      a1[59] = v41;
      a1[60] = v9;
      a1[61] = v42;
      a1[62] = v43;
      a1[63] = v44;
      a1[64] = v45;
      a1[65] = v46;
      a1[66] = v47;
      a1[67] = v48;
      a1[68] = v49;
      a1[69] = v50;
      a1[70] = v51;
      a1[71] = v52;
      a1[72] = v53;
      goto LABEL_11;
    case 3u:
      v19 = *a2;
      v20 = a2[1];
      v21 = a2[2];
      v22 = *((_BYTE *)a2 + 24);
      sub_1A5892368(*a2, v20, v21, v22);
      *a1 = v19;
      a1[1] = v20;
      a1[2] = v21;
      *((_BYTE *)a1 + 24) = v22;
      *(uint64_t *)((char *)a1 + 28) = *(uint64_t *)((char *)a2 + 28);
      goto LABEL_11;
    case 4u:
      v23 = *a2;
      v24 = a2[1];
      v25 = *((_BYTE *)a2 + 16);
      sub_1A5862C1C(v23, v24, v25);
      *a1 = v23;
      a1[1] = v24;
      *((_BYTE *)a1 + 16) = v25;
      goto LABEL_11;
    case 5u:
      *a1 = *a2;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *sub_1A58A9C54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for ConnectionEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1A594AA40();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_12;
      case 1u:
        v7 = type metadata accessor for ConnectionEvent.FailureReason(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v8 = sub_1A594ACEC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        }
        goto LABEL_12;
      case 2u:
        v89 = a2[9];
        v90 = a2[8];
        v87 = a2[11];
        v88 = a2[10];
        v85 = a2[13];
        v86 = a2[12];
        v83 = a2[15];
        v84 = a2[14];
        v81 = a2[17];
        v82 = a2[16];
        v79 = a2[19];
        v80 = a2[18];
        v77 = a2[21];
        v78 = a2[20];
        v75 = a2[23];
        v76 = a2[22];
        v73 = a2[25];
        v74 = a2[24];
        v71 = a2[27];
        v72 = a2[26];
        v70 = a2[28];
        v69 = a2[29];
        v68 = a2[30];
        v67 = a2[31];
        v66 = a2[32];
        v65 = a2[33];
        v64 = a2[34];
        v63 = a2[35];
        v62 = a2[36];
        v61 = a2[37];
        v60 = a2[38];
        v59 = a2[39];
        v58 = a2[40];
        v57 = a2[41];
        v56 = a2[42];
        v55 = a2[43];
        v54 = a2[44];
        v27 = a2[45];
        v28 = a2[46];
        v29 = a2[47];
        v30 = a2[48];
        v31 = a2[49];
        v32 = a2[50];
        v33 = a2[51];
        v34 = a2[52];
        v35 = a2[53];
        v36 = a2[54];
        v37 = a2[55];
        v38 = a2[56];
        v39 = a2[57];
        v40 = a2[58];
        v41 = a2[59];
        v42 = a2[60];
        v43 = a2[61];
        v44 = a2[62];
        v45 = a2[63];
        v9 = a2[64];
        v46 = a2[65];
        v47 = a2[66];
        v48 = a2[67];
        v49 = a2[68];
        v50 = a2[69];
        v51 = a2[70];
        v52 = a2[71];
        v53 = a2[72];
        v10 = *a2;
        v11 = *a2;
        v12 = a2[1];
        v13 = a2[2];
        v14 = a2[3];
        v15 = a2[4];
        v16 = a2[5];
        v17 = a2[6];
        v18 = a2[7];
        sub_1A586238C(v11, v12, v13, v14, v15, v16, v17, v18, v90, v89, v88, v87, v86, v85, v84, v83, v82, v81, v80,
          v79,
          v78,
          v77,
          v76,
          v75,
          v74,
          v73,
          v72,
          v71,
          v70,
          v69,
          v68,
          v67,
          v66,
          v65,
          v64,
          v63,
          v62,
          v61,
          v60,
          v59,
          v58,
          v57,
          v56,
          v55,
          v54,
          v27,
          v28,
          v29,
          v30,
          v31,
          v32,
          v33,
          v34,
          v35,
          v36,
          v37,
          v38,
          v39,
          v40,
          v41,
          v42,
          v43,
          v44);
        *a1 = v10;
        a1[1] = v12;
        a1[2] = v13;
        a1[3] = v14;
        a1[4] = v15;
        a1[5] = v16;
        a1[6] = v17;
        a1[7] = v18;
        a1[8] = v90;
        a1[9] = v89;
        a1[10] = v88;
        a1[11] = v87;
        a1[12] = v86;
        a1[13] = v85;
        a1[14] = v84;
        a1[15] = v83;
        a1[16] = v82;
        a1[17] = v81;
        a1[18] = v80;
        a1[19] = v79;
        a1[20] = v78;
        a1[21] = v77;
        a1[22] = v76;
        a1[23] = v75;
        a1[24] = v74;
        a1[25] = v73;
        a1[26] = v72;
        a1[27] = v71;
        a1[28] = v70;
        a1[29] = v69;
        a1[30] = v68;
        a1[31] = v67;
        a1[32] = v66;
        a1[33] = v65;
        a1[34] = v64;
        a1[35] = v63;
        a1[36] = v62;
        a1[37] = v61;
        a1[38] = v60;
        a1[39] = v59;
        a1[40] = v58;
        a1[41] = v57;
        a1[42] = v56;
        a1[43] = v55;
        a1[44] = v54;
        a1[45] = v27;
        a1[46] = v28;
        a1[47] = v29;
        a1[48] = v30;
        a1[49] = v31;
        a1[50] = v32;
        a1[51] = v33;
        a1[52] = v34;
        a1[53] = v35;
        a1[54] = v36;
        a1[55] = v37;
        a1[56] = v38;
        a1[57] = v39;
        a1[58] = v40;
        a1[59] = v41;
        a1[60] = v42;
        a1[61] = v43;
        a1[62] = v44;
        a1[63] = v45;
        a1[64] = v9;
        a1[65] = v46;
        a1[66] = v47;
        a1[67] = v48;
        a1[68] = v49;
        a1[69] = v50;
        a1[70] = v51;
        a1[71] = v52;
        a1[72] = v53;
        goto LABEL_12;
      case 3u:
        v19 = *a2;
        v20 = a2[1];
        v21 = a2[2];
        v22 = *((_BYTE *)a2 + 24);
        sub_1A5892368(*a2, v20, v21, v22);
        *a1 = v19;
        a1[1] = v20;
        a1[2] = v21;
        *((_BYTE *)a1 + 24) = v22;
        *(uint64_t *)((char *)a1 + 28) = *(uint64_t *)((char *)a2 + 28);
        goto LABEL_12;
      case 4u:
        v23 = *a2;
        v24 = a2[1];
        v25 = *((_BYTE *)a2 + 16);
        sub_1A5862C1C(v23, v24, v25);
        *a1 = v23;
        a1[1] = v24;
        *((_BYTE *)a1 + 16) = v25;
        goto LABEL_12;
      case 5u:
        *a1 = *a2;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *sub_1A58AA3F8(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for ConnectionEvent.FailureReason(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_1A594ACEC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_1A594AA40();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void *sub_1A58AA500(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for ConnectionEvent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for ConnectionEvent.FailureReason(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v9 = sub_1A594ACEC();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_1A594AA40();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1A58AA620()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A594AA40();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ConnectionEvent.FailureReason(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1A58AA6D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1A594AE60();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    v9 = type metadata accessor for ClientCommand.Encoded();
    *(_QWORD *)&v6[*(int *)(v9 + 20)] = *(_QWORD *)&v7[*(int *)(v9 + 20)];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v3;
}

uint64_t sub_1A58AA774(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for ClientCommand.Encoded();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1A58AA7C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A594AE60();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  v8 = type metadata accessor for ClientCommand.Encoded();
  *(_QWORD *)&v5[*(int *)(v8 + 20)] = *(_QWORD *)&v6[*(int *)(v8 + 20)];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A58AA834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  v8 = type metadata accessor for ClientCommand.Encoded();
  *(_QWORD *)(v5 + *(int *)(v8 + 20)) = *(_QWORD *)(v6 + *(int *)(v8 + 20));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1A58AA8BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A594AE60();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  v8 = type metadata accessor for ClientCommand.Encoded();
  *(_QWORD *)&v5[*(int *)(v8 + 20)] = *(_QWORD *)&v6[*(int *)(v8 + 20)];
  return a1;
}

uint64_t sub_1A58AA92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  v8 = type metadata accessor for ClientCommand.Encoded();
  *(_QWORD *)(v5 + *(int *)(v8 + 20)) = *(_QWORD *)(v6 + *(int *)(v8 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A58AA9AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58AA9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = type metadata accessor for ClientCommand.Encoded();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1A58AA9F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58AAA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = type metadata accessor for ClientCommand.Encoded();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t type metadata accessor for ConnectionCommand(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7980D8);
}

uint64_t sub_1A58AAA5C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ClientCommand.Encoded();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A58AAAD0(uint64_t result)
{
  if ((result & 0x8000000000000000) == 0)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t destroy for TransportLayerSecurity(uint64_t *a1)
{
  uint64_t result;

  sub_1A5867DDC(*a1);
  result = a1[5];
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for TransportLayerSecurity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  sub_1A58AAAD0(*(_QWORD *)a2);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  if (v7 == 1)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  }
  else
  {
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v7;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

uint64_t assignWithCopy for TransportLayerSecurity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  sub_1A58AAAD0(*(_QWORD *)a2);
  v7 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  sub_1A5867DDC(v7);
  v8 = (__int128 *)(a1 + 24);
  v9 = (__int128 *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) == 1)
  {
    if (v10 == 1)
    {
      v11 = *v9;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *v8 = v11;
    }
    else
    {
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
  }
  else if (v10 == 1)
  {
    sub_1A5510284(a1 + 24, &qword_1EE7AAD20);
    v12 = *(_QWORD *)(a2 + 40);
    *v8 = *v9;
    *(_QWORD *)(a1 + 40) = v12;
  }
  else
  {
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t assignWithTake for TransportLayerSecurity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  sub_1A5867DDC(v5);
  if (*(_QWORD *)(a1 + 40) != 1)
  {
    v6 = *(_QWORD *)(a2 + 40);
    if (v6 != 1)
    {
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1A5510284(a1 + 24, &qword_1EE7AAD20);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransportLayerSecurity(uint64_t a1, int a2)
{
  unsigned int v2;
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  HIDWORD(v3) = *(_DWORD *)(a1 + 4);
  LODWORD(v3) = HIDWORD(v3);
  v2 = v3 >> 30;
  if (v2 > 0x80000000)
    v4 = ~v2;
  else
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TransportLayerSecurity(uint64_t result, int a2, int a3)
{
  unint64_t v3;

  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      HIDWORD(v3) = -a2;
      LODWORD(v3) = -a2;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)result = (unint64_t)(v3 >> 2) << 32;
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportLayerSecurity()
{
  return &type metadata for TransportLayerSecurity;
}

unint64_t destroy for ConnectionAction(unint64_t *a1)
{
  return sub_1A5894020(*a1);
}

unint64_t *initializeWithCopy for ConnectionAction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_1A5893FE8(*a2);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

unint64_t *assignWithCopy for ConnectionAction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_1A5893FE8(*a2);
  v7 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_1A5894020(v7);
  return a1;
}

uint64_t assignWithTake for ConnectionAction(uint64_t a1, _OWORD *a2)
{
  unint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)a1;
  v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  sub_1A5894020(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectionAction(uint64_t a1, int a2)
{
  unsigned int v2;
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  HIDWORD(v3) = *(_DWORD *)(a1 + 4);
  LODWORD(v3) = HIDWORD(v3);
  v2 = v3 >> 30;
  if (v2 > 0x80000000)
    v4 = ~v2;
  else
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionAction(uint64_t result, int a2, int a3)
{
  unint64_t v3;

  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      HIDWORD(v3) = -a2;
      LODWORD(v3) = -a2;
      *(_QWORD *)result = (unint64_t)(v3 >> 2) << 32;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = 0;
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A58AAFB0(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return *a1 + 2;
}

unint64_t *sub_1A58AAFC8(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *result = *(unsigned int *)result | (unint64_t)(a2 << 62);
  }
  else
  {
    result[1] = 0;
    result[2] = 0;
    result[3] = 0;
    *result = (a2 - 2) | 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAction()
{
  return &type metadata for ConnectionAction;
}

uint64_t sub_1A58AB004(uint64_t a1, uint64_t a2)
{
  return sub_1A58AB020(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_1A58AB020(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;

  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      if (a5 >> 62 == 1)
        return static PushRegistrationResponse.__derived_struct_equals(_:_:)(a1, a2, a3, a4, a5, a6, a7, a8);
    }
    else
    {
      v9 = a3 | a2 | a4;
      if (a1 != 0x8000000000000000 || v9)
      {
        if (a1 != 0x8000000000000001 || v9)
        {
          if (a1 != 0x8000000000000002 || v9)
          {
            if (a1 != 0x8000000000000003 || v9)
            {
              if (a5 >> 62 == 2 && a5 == 0x8000000000000004 && !(a7 | a6 | a8))
                return 1;
            }
            else if (a5 >> 62 == 2 && a5 == 0x8000000000000003 && !(a7 | a6 | a8))
            {
              return 1;
            }
          }
          else if (a5 >> 62 == 2 && a5 == 0x8000000000000002 && !(a7 | a6 | a8))
          {
            return 1;
          }
        }
        else if (a5 >> 62 == 2 && a5 == 0x8000000000000001 && !(a7 | a6 | a8))
        {
          return 1;
        }
      }
      else if (a5 >> 62 == 2 && a5 == 0x8000000000000000 && !(a7 | a6 | a8))
      {
        return 1;
      }
    }
  }
  else if (!(a5 >> 62))
  {
    return ((a5 ^ a1) & 0x101FFLL) == 0;
  }
  return 0;
}

void ConnectionState.isClosed.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v1);
  sub_1A55034B8(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1A58AB218 + 4 * byte_1A59DEBD0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A58AB218()
{
  uint64_t v0;

  sub_1A55034FC(v0, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  return 0;
}

uint64_t type metadata accessor for ConnectionState()
{
  uint64_t result;

  result = qword_1EE7980B0;
  if (!qword_1EE7980B0)
    return swift_getSingletonMetadata();
  return result;
}

BOOL ConnectionState.selectMailbox(name:)(uint64_t a1, unsigned int a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  void *v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  __int128 v19[5];
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  char v26;
  uint64_t v27;
  int v28;
  char v29;
  int v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  _QWORD v35[44];
  _QWORD v36[44];
  _BYTE v37[176];

  v5 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8((uint64_t)v2, (uint64_t)v7, v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    return EnumCaseMultiPayload == 2;
  }
  memcpy(v36, v7, 0x15AuLL);
  sub_1A5891E0C((__int128 *)&v36[23], (uint64_t)v37);
  if (!sub_1A5891E48((uint64_t)v37))
  {
    sub_1A5892220((uint64_t)v37);
LABEL_8:
    sub_1A55034FC((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    v18 = 1;
    v17 = 1;
    v16 = 1;
    v15 = 1;
    v14 = 1;
    v13 = v2;
    v11 = v36[0];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55425D8((uint64_t)&v36[1]);
    sub_1A5891E54((uint64_t)v36);
    *(_QWORD *)&v19[0] = a1;
    DWORD2(v19[0]) = a2;
    memset(&v19[1], 0, 64);
    v20 = 0;
    v21 = 0x800000;
    v23 = 0;
    v22 = 0;
    v24 = v18;
    v25 = 0;
    v26 = v17;
    v27 = 0;
    v28 = 0;
    v29 = v16;
    v30 = 0;
    v31 = v15;
    v32 = 0;
    v33 = 0;
    v34 = v14;
    sub_1A58AB53C((uint64_t)v19);
    v35[0] = v11;
    *(_OWORD *)&v35[15] = *(_OWORD *)&v36[15];
    *(_OWORD *)&v35[17] = *(_OWORD *)&v36[17];
    *(_OWORD *)&v35[19] = *(_OWORD *)&v36[19];
    *(_OWORD *)&v35[21] = *(_OWORD *)&v36[21];
    *(_OWORD *)&v35[7] = *(_OWORD *)&v36[7];
    *(_OWORD *)&v35[9] = *(_OWORD *)&v36[9];
    *(_OWORD *)&v35[11] = *(_OWORD *)&v36[11];
    *(_OWORD *)&v35[13] = *(_OWORD *)&v36[13];
    *(_OWORD *)&v35[1] = *(_OWORD *)&v36[1];
    *(_OWORD *)&v35[3] = *(_OWORD *)&v36[3];
    *(_OWORD *)&v35[5] = *(_OWORD *)&v36[5];
    sub_1A5891E0C(v19, (uint64_t)&v35[23]);
    memcpy(v13, v35, 0x15AuLL);
    swift_storeEnumTagMultiPayload();
    return EnumCaseMultiPayload == 2;
  }
  v10 = sub_1A5892220((uint64_t)v37);
  if ((*(unsigned int *)(v10 + 8) | ((unint64_t)*(unsigned int *)(v10 + 8) << 32)) != (a2 | ((unint64_t)a2 << 32))
    || !sub_1A54FF30C(*(_QWORD *)v10, a1))
  {
    goto LABEL_8;
  }
  sub_1A5891E54((uint64_t)v36);
  return EnumCaseMultiPayload == 2;
}

int8x16_t sub_1A58AB53C(uint64_t a1)
{
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  int8x16_t result;

  v1 = *(_WORD *)(a1 + 160);
  v2 = *(_QWORD *)(a1 + 72) & 0x1FFFFFFFFLL;
  v3 = *(_QWORD *)(a1 + 88) & 0x1E101FFLL;
  *(_QWORD *)(a1 + 48) &= 0x1FFFFFFFFuLL;
  *(_QWORD *)(a1 + 72) = v2;
  *(_QWORD *)(a1 + 88) = v3;
  *(int8x16_t *)(a1 + 112) = vandq_s8(*(int8x16_t *)(a1 + 112), (int8x16_t)xmmword_1A59AC060);
  result = vandq_s8(*(int8x16_t *)(a1 + 136), (int8x16_t)vdupq_n_s64(0x1FFFFFFFFuLL));
  *(int8x16_t *)(a1 + 136) = result;
  *(_WORD *)(a1 + 160) = v1 & 0x1FF | 0x4000;
  return result;
}

uint64_t ConnectionState.mailboxSelectionPayload(old:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  int v33;
  int v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[168];
  _QWORD v52[44];
  _BYTE v53[176];

  v2 = v1;
  v4 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v32 - v8;
  sub_1A55034B8(a1, (uint64_t)v32 - v8, v10);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
LABEL_12:
    v12 = 0;
    v22 = 0;
    v18 = 0;
    v49 = 0;
    v50 = 0;
    v47 = 0;
    v48 = 0;
    v21 = 0;
    goto LABEL_13;
  }
  memcpy(v52, v9, 0x15AuLL);
  sub_1A5891E0C((__int128 *)&v52[23], (uint64_t)v53);
  if (sub_1A5891E48((uint64_t)v53) != 2)
  {
    sub_1A5891E54((uint64_t)v52);
    goto LABEL_12;
  }
  v11 = sub_1A5892220((uint64_t)v53);
  v12 = *(_QWORD *)v11;
  v45 = *(unsigned int *)(v11 + 8);
  v13 = *(_QWORD *)(v11 + 24);
  v14 = *(unsigned int *)(v11 + 32);
  v46 = *(_QWORD *)(v11 + 16);
  v47 = v14;
  v15 = *(unsigned __int8 *)(v11 + 36);
  v49 = *(_QWORD *)(v11 + 40);
  v50 = v13;
  v41 = *(unsigned int *)(v11 + 48);
  v16 = *(unsigned __int8 *)(v11 + 52);
  v43 = *(unsigned int *)(v11 + 56);
  v48 = *(_QWORD *)(v11 + 64);
  LODWORD(v44) = *(unsigned __int8 *)(v11 + 72);
  LODWORD(v40) = *(unsigned __int8 *)(v11 + 73);
  v42 = *(unsigned __int8 *)(v11 + 74);
  sub_1A5891E0C((__int128 *)&v52[23], (uint64_t)v51);
  sub_1A5892220((uint64_t)v51);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5891E54((uint64_t)v52);
  v17 = v15 == 0;
  v18 = v46;
  if (v17)
    v19 = 0;
  else
    v19 = 0x100000000;
  v47 |= v19;
  if (v16)
    v20 = 0x100000000;
  else
    v20 = 0;
  v21 = v20 | v41;
  v22 = v45;
LABEL_13:
  sub_1A55034B8(v2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    if (!v12)
      return 0xF000000000000007;
LABEL_20:
    sub_1A5503320(v12);
    return 0x8000000000000000;
  }
  v46 = v18;
  v23 = v22;
  memcpy(v52, v6, 0x15AuLL);
  sub_1A5891E0C((__int128 *)&v52[23], (uint64_t)v53);
  if (sub_1A5891E48((uint64_t)v53) != 2)
  {
    sub_1A5891E54((uint64_t)v52);
    if (!v12)
      return 0xF000000000000007;
    goto LABEL_20;
  }
  v32[1] = v21;
  v24 = sub_1A5892220((uint64_t)v53);
  v25 = *(_QWORD *)v24;
  v26 = *(unsigned int *)(v24 + 8);
  v27 = *(_QWORD *)(v24 + 16);
  v43 = *(_QWORD *)(v24 + 24);
  v44 = v27;
  v42 = *(_DWORD *)(v24 + 32);
  LODWORD(v41) = *(unsigned __int8 *)(v24 + 36);
  v40 = *(_QWORD *)(v24 + 40);
  LODWORD(v27) = *(_DWORD *)(v24 + 48);
  v38 = *(unsigned __int8 *)(v24 + 52);
  v39 = v27;
  LODWORD(v27) = *(_DWORD *)(v24 + 56);
  v36 = *(unsigned __int8 *)(v24 + 60);
  v37 = v27;
  v35 = *(_QWORD *)(v24 + 64);
  LODWORD(v27) = *(unsigned __int8 *)(v24 + 72);
  v33 = *(unsigned __int8 *)(v24 + 73);
  v34 = v27;
  LODWORD(v45) = *(unsigned __int8 *)(v24 + 74);
  sub_1A5891E0C((__int128 *)&v52[23], (uint64_t)v51);
  sub_1A5892220((uint64_t)v51);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5891E54((uint64_t)v52);
  if (v12)
  {
    if ((v23 | (v23 << 32)) == (v26 | (v26 << 32)))
    {
      v28 = sub_1A54FF30C(v12, v25);
      sub_1A5503320(v12);
      if (v28)
      {
        sub_1A5894370((uint64_t)&v52[23], (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A5891FDC);
        return 0xF000000000000007;
      }
    }
    else
    {
      sub_1A5503320(v12);
    }
  }
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v25;
  *(_DWORD *)(v30 + 24) = v26;
  v31 = v43;
  *(_QWORD *)(v30 + 32) = v44;
  *(_QWORD *)(v30 + 40) = v31;
  *(_DWORD *)(v30 + 48) = v42;
  *(_BYTE *)(v30 + 52) = v41;
  *(_QWORD *)(v30 + 56) = v40;
  *(_DWORD *)(v30 + 64) = v39;
  *(_BYTE *)(v30 + 68) = v38;
  *(_DWORD *)(v30 + 72) = v37;
  *(_BYTE *)(v30 + 76) = v36;
  *(_QWORD *)(v30 + 80) = v35;
  *(_BYTE *)(v30 + 88) = v34;
  *(_BYTE *)(v30 + 89) = v33;
  result = v30 | 0x2000000000000000;
  *(_BYTE *)(v30 + 90) = v45;
  return result;
}

uint64_t sub_1A58ABA94(uint64_t a1, unint64_t a2, char a3, uint64_t a4, void (*a5)(unint64_t, uint64_t, uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __int128 *v23;
  unint64_t v24;
  unsigned __int8 v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  unint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v43 = a8;
  v40 = a5;
  v41 = a6;
  v38 = a1;
  v39 = a2;
  v37 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v37);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A594A764();
  v44 = *(_QWORD *)(v13 - 8);
  v45 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for UnauthenticatedStateWithTasks();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(a7, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1A54E3394((uint64_t)v18, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
    v22 = v42;
    v23 = sub_1A58FD6C8(v38, v39, a3 & 1, v40, v41, a4);
    if (!v22)
    {
      v34 = (uint64_t)v23;
      v35 = v24;
      v36 = v25;
      sub_1A55034FC(a7, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      sub_1A55034B8((uint64_t)v21, a7, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
      swift_storeEnumTagMultiPayload();
      if (v36 != 0xFF)
      {
        sub_1A58B7D40(v34, v35, v36);
        sub_1A5882BF8(v34, v35, v36 & 1);
        CommandConnection.flush()();
        sub_1A58B7D58(v34, v35, v36);
        sub_1A58B7D58(v34, v35, v36);
      }
    }
    sub_1A55034FC((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
  }
  else
  {
    sub_1A55034FC((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v15, a4, v45);
    sub_1A55034B8(a4, (uint64_t)v12, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v26 = sub_1A594A74C();
    v27 = sub_1A594C018();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v47 = v29;
      *(_DWORD *)v28 = 68158210;
      LODWORD(v46) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v28 + 8) = 256;
      v30 = &v12[*(int *)(v37 + 20)];
      LOBYTE(v46) = *v30;
      sub_1A594C3CC();
      *(_WORD *)(v28 + 11) = 2082;
      v31 = ConnectionID.debugDescription.getter(*((unsigned int *)v30 + 1));
      v46 = sub_1A589167C(v31, v32, &v47);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v12, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      _os_log_impl(&dword_1A4F90000, v26, v27, "[%.*hhx-%{public}s] Received HandshakeQuery, but not in unauthenticated state.", (uint8_t *)v28, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v29, -1, -1);
      MEMORY[0x1A85B1964](v28, -1, -1);
    }
    else
    {
      sub_1A55034FC((uint64_t)v12, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    }

    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v45);
    sub_1A58B7CFC();
    swift_allocError();
    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1A58ABEE0(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594A764();
  v25 = *(_QWORD *)(v8 - 8);
  v26 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UnauthenticatedStateWithTasks();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v2;
  sub_1A54E3394(v2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1A54E3394((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
    sub_1A58FD8A8(a1, a2);
    sub_1A54E3394((uint64_t)v16, v27, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
  }
  else
  {
    sub_1A55034FC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v10, a2, v26);
    sub_1A55034B8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v17 = sub_1A594A74C();
    v18 = sub_1A594C018();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v29 = v20;
      *(_DWORD *)v19 = 68158210;
      LODWORD(v28) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v19 + 8) = 256;
      v21 = &v7[*(int *)(v5 + 20)];
      LOBYTE(v28) = *v21;
      sub_1A594C3CC();
      *(_WORD *)(v19 + 11) = 2082;
      v22 = ConnectionID.debugDescription.getter(*((unsigned int *)v21 + 1));
      v28 = sub_1A589167C(v22, v23, &v29);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      _os_log_impl(&dword_1A4F90000, v17, v18, "[%.*hhx-%{public}s] Received did-start-TLS, but not in unauthenticated state.", (uint8_t *)v19, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v20, -1, -1);
      MEMORY[0x1A85B1964](v19, -1, -1);
    }
    else
    {
      sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    }

    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v26);
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A58AC268(uint64_t a1)
{
  __uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t result;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  int v15;
  __uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7980C8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8((uint64_t)v1, (uint64_t)v8, v9);
  result = swift_getEnumCaseMultiPayload();
  if (result >= 3)
  {
    if ((result - 3) < 2)
      return result;
  }
  else
  {
    sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  }
  v11 = &v5[*(int *)(v3 + 48)];
  sub_1A55034B8((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  v12 = sub_1A594AA40();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v14(v11, a1, v12);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v11, v12);
  if (v15 == *MEMORY[0x1E0CCE5C0])
    goto LABEL_5;
  if (v15 == *MEMORY[0x1E0CCE5B0])
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1A55034FC((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      v16 = static MonotonicTime.now()();
      *(__uint64_t *)((char *)v1 + *(int *)(type metadata accessor for UnauthenticatedStateWithTasks() + 24)) = MEMORY[0x1E0DEE9D8];
      *v1 = v16;
      type metadata accessor for UnauthenticatedState();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      v17 = (uint64_t)v5;
      goto LABEL_13;
    }
  }
  else if (v15 == *MEMORY[0x1E0CCE5D0])
  {
LABEL_5:
    sub_1A55034FC((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    return sub_1A55034FC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  }
  if (swift_getEnumCaseMultiPayload())
    return sub_1A5510284((uint64_t)v5, &qword_1EE7980C8);
  sub_1A55034FC((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  v14((char *)v1, a1, v12);
  swift_storeEnumTagMultiPayload();
  v17 = (uint64_t)v5;
LABEL_13:
  sub_1A55034FC(v17, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v11, v12);
}

BOOL ConnectionState.isReadyForCommands.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  unsigned int EnumCaseMultiPayload;
  _BOOL8 v6;
  uint64_t v8;

  v1 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(v0, (uint64_t)v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v6 = 0;
  if (EnumCaseMultiPayload - 3 >= 3)
  {
    v6 = EnumCaseMultiPayload >= 2;
    sub_1A55034FC((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  }
  return v6;
}

unint64_t sub_1A58AC5F8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __uint64_t *v6;
  __uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(_QWORD);
  __uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  const void *v36;
  unint64_t v37;
  _QWORD v38[4];
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _OWORD v47[10];
  __int16 v48;
  _BYTE v49[352];
  _QWORD v50[44];
  _OWORD v51[10];
  __int16 v52;
  __int128 v53[10];
  __int16 v54;
  _BYTE v55[168];
  _QWORD v56[44];
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int16 v67;
  _QWORD v68[44];
  _BYTE v69[168];
  _QWORD v70[46];

  v7 = v6;
  v44 = a4;
  v45 = a5;
  v42 = a2;
  v43 = a3;
  v46 = a1;
  v9 = type metadata accessor for UnauthenticatedStateWithTasks();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v38 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v38 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v38 - v22;
  sub_1A55034B8((uint64_t)v7, (uint64_t)v38 - v22, v24);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1A55034FC((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  }
  else
  {
    sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    sub_1A55034FC((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    v25 = static MonotonicTime.now()();
    *(__uint64_t *)((char *)v7 + *(int *)(v9 + 24)) = MEMORY[0x1E0DEE9D8];
    *v7 = v25;
    type metadata accessor for UnauthenticatedState();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  sub_1A55034B8((uint64_t)v7, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    v26 = sub_1A54E3394((uint64_t)v20, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
    MEMORY[0x1E0C80A78](v26);
    v27 = v43;
    v38[-2] = v42;
    v38[-1] = v27;
    sub_1A58FD380(v46);
    sub_1A54E3394((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
    return swift_storeEnumTagMultiPayload();
  }
  sub_1A55034FC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  sub_1A55034B8((uint64_t)v7, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1A55034FC((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
LABEL_12:
    v37 = v46;
    sub_1A5893E60(v46);
    sub_1A58B6350((uint64_t)v7, v37);
    return sub_1A5893E90(v37);
  }
  memcpy(v68, v17, 0x15AuLL);
  memcpy(v70, v17, 0x15AuLL);
  sub_1A5891E0C((__int128 *)&v68[23], (uint64_t)v69);
  if (sub_1A5891E48((uint64_t)v69) != 1)
  {
    sub_1A5891E54((uint64_t)v68);
    goto LABEL_12;
  }
  v29 = sub_1A5892220((uint64_t)v69);
  v39 = v14;
  v40 = a6;
  v38[0] = v68[0];
  v38[1] = v68[10];
  v41 = v68[12];
  v42 = v68[14];
  v43 = v68[16];
  v44 = v68[18];
  v45 = v68[20];
  v38[2] = v68[2];
  v38[3] = v68[22];
  sub_1A5894370((uint64_t)&v68[23], (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v30 = v38[0];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  v31 = *(_OWORD *)(v29 + 144);
  v65 = *(_OWORD *)(v29 + 128);
  v66 = v31;
  v67 = *(_WORD *)(v29 + 160);
  v32 = *(_OWORD *)(v29 + 80);
  v61 = *(_OWORD *)(v29 + 64);
  v62 = v32;
  v33 = *(_OWORD *)(v29 + 96);
  v64 = *(_OWORD *)(v29 + 112);
  v63 = v33;
  v34 = *(_OWORD *)(v29 + 16);
  v57 = *(_OWORD *)v29;
  v58 = v34;
  v35 = *(_OWORD *)(v29 + 32);
  v60 = *(_OWORD *)(v29 + 48);
  v59 = v35;
  sub_1A58D0594(v46, v40);
  v51[8] = v65;
  v51[9] = v66;
  v51[4] = v61;
  v51[5] = v62;
  v51[7] = v64;
  v51[6] = v63;
  v51[0] = v57;
  v51[1] = v58;
  v51[2] = v59;
  v51[3] = v60;
  v53[8] = v65;
  v53[9] = v66;
  v53[4] = v61;
  v53[5] = v62;
  v53[7] = v64;
  v53[6] = v63;
  v53[0] = v57;
  v53[1] = v58;
  v52 = v67;
  v54 = v67;
  v53[3] = v60;
  v53[2] = v59;
  sub_1A58AB53C((uint64_t)v53);
  sub_1A5891E0C((__int128 *)&v70[23], (uint64_t)v55);
  sub_1A5892230((uint64_t)v51);
  sub_1A5892230((uint64_t)v51);
  sub_1A5894370((uint64_t)v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A5891FDC);
  sub_1A5891E0C(v53, (uint64_t)&v70[23]);
  v56[0] = v30;
  *(_OWORD *)&v56[15] = *(_OWORD *)&v68[15];
  *(_OWORD *)&v56[17] = *(_OWORD *)&v68[17];
  *(_OWORD *)&v56[19] = *(_OWORD *)&v68[19];
  *(_OWORD *)&v56[21] = *(_OWORD *)&v68[21];
  *(_OWORD *)&v56[7] = *(_OWORD *)&v68[7];
  *(_OWORD *)&v56[9] = *(_OWORD *)&v68[9];
  *(_OWORD *)&v56[11] = *(_OWORD *)&v68[11];
  *(_OWORD *)&v56[13] = *(_OWORD *)&v68[13];
  *(_OWORD *)&v56[1] = *(_OWORD *)&v68[1];
  *(_OWORD *)&v56[3] = *(_OWORD *)&v68[3];
  *(_OWORD *)&v56[5] = *(_OWORD *)&v68[5];
  sub_1A5891E0C(v53, (uint64_t)&v56[23]);
  sub_1A58B8000((uint64_t)v56);
  sub_1A58B8188((uint64_t)v51);
  v36 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v7, v56, 0x15AuLL);
  swift_storeEnumTagMultiPayload();
  sub_1A55034B8((uint64_t)v7, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    memcpy(v50, v36, 0x15AuLL);
    sub_1A58B0880((__int128 *)&v50[23]);
    memcpy(v7, v50, 0x15AuLL);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1A55034FC((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  }
  v47[8] = v65;
  v47[9] = v66;
  v48 = v67;
  v47[4] = v61;
  v47[5] = v62;
  v47[6] = v63;
  v47[7] = v64;
  v47[0] = v57;
  v47[1] = v58;
  v47[2] = v59;
  v47[3] = v60;
  sub_1A58B8188((uint64_t)v47);
  memcpy(v49, v70, 0x15AuLL);
  return sub_1A5891E54((uint64_t)v49);
}

uint64_t ConnectionState.hasMailboxSelected.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  _QWORD v8[44];
  _BYTE v9[168];

  v1 = v0;
  v2 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(v1, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    memcpy(v8, v4, 0x15AuLL);
    sub_1A5891E0C((__int128 *)&v8[23], (uint64_t)v9);
    if (sub_1A5891E48((uint64_t)v9) == 2)
    {
      sub_1A5892220((uint64_t)v9);
      sub_1A5891E54((uint64_t)v8);
      return 1;
    }
    sub_1A5891E54((uint64_t)v8);
  }
  else
  {
    sub_1A55034FC((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  }
  return 0;
}

uint64_t static AuthenticatedState.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  unint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char v38;
  uint64_t v39;
  int v40;
  char v41;
  int v42;
  char v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _OWORD v52[8];
  __int128 v53[10];
  __int128 v54[10];
  _OWORD v55[11];
  _OWORD v56[11];
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int16 v67;
  _OWORD v68[10];
  __int16 v69;
  _BYTE v70[176];

  if ((sub_1A5894DB8(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v4 = *(_OWORD *)(a1 + 120);
  v5 = *(_OWORD *)(a1 + 152);
  v56[8] = *(_OWORD *)(a1 + 136);
  v56[9] = v5;
  v56[10] = *(_OWORD *)(a1 + 168);
  v6 = *(_OWORD *)(a1 + 56);
  v7 = *(_OWORD *)(a1 + 88);
  v56[4] = *(_OWORD *)(a1 + 72);
  v56[5] = v7;
  v56[6] = *(_OWORD *)(a1 + 104);
  v56[7] = v4;
  v8 = *(_OWORD *)(a1 + 24);
  v56[0] = *(_OWORD *)(a1 + 8);
  v56[1] = v8;
  v56[2] = *(_OWORD *)(a1 + 40);
  v56[3] = v6;
  v9 = *(_OWORD *)(a2 + 120);
  v10 = *(_OWORD *)(a2 + 152);
  v55[8] = *(_OWORD *)(a2 + 136);
  v55[9] = v10;
  v55[10] = *(_OWORD *)(a2 + 168);
  v11 = *(_OWORD *)(a2 + 56);
  v12 = *(_OWORD *)(a2 + 88);
  v55[4] = *(_OWORD *)(a2 + 72);
  v55[5] = v12;
  v55[6] = *(_OWORD *)(a2 + 104);
  v55[7] = v9;
  v13 = *(_OWORD *)(a2 + 24);
  v55[0] = *(_OWORD *)(a2 + 8);
  v55[1] = v13;
  v55[2] = *(_OWORD *)(a2 + 40);
  v55[3] = v11;
  if ((static ServerID.__derived_struct_equals(_:_:)(v56, v55) & 1) == 0)
    return 0;
  sub_1A5891E0C((__int128 *)(a1 + 184), (uint64_t)v54);
  sub_1A5891E0C((__int128 *)(a2 + 184), (uint64_t)v53);
  sub_1A5891E0C(v54, (uint64_t)v70);
  v14 = sub_1A5891E48((uint64_t)v70);
  if (v14)
  {
    if (v14 != 1)
    {
      v31 = (__int128 *)sub_1A5892220((uint64_t)v70);
      v50 = v31[1];
      v51 = v31[2];
      v52[0] = v31[3];
      *(_OWORD *)((char *)v52 + 11) = *(__int128 *)((char *)v31 + 59);
      v49 = *v31;
      sub_1A5891E0C(v53, (uint64_t)v68);
      if (sub_1A5891E48((uint64_t)v68) != 2)
        return 0;
      v32 = sub_1A5892220((uint64_t)v68);
      v33 = *(_QWORD *)v32;
      v34 = *(_DWORD *)(v32 + 8);
      v35 = *(_QWORD *)(v32 + 16);
      v36 = *(_QWORD *)(v32 + 24);
      v37 = *(_DWORD *)(v32 + 32);
      v38 = *(_BYTE *)(v32 + 36);
      v39 = *(_QWORD *)(v32 + 40);
      v40 = *(_DWORD *)(v32 + 48);
      v41 = *(_BYTE *)(v32 + 52);
      v42 = *(_DWORD *)(v32 + 56);
      v43 = *(_BYTE *)(v32 + 60);
      v44 = *(_QWORD *)(v32 + 64);
      v45 = *(_BYTE *)(v32 + 72);
      v46 = *(_BYTE *)(v32 + 73);
      LOBYTE(v32) = *(_BYTE *)(v32 + 74);
      *(_QWORD *)&v57 = v33;
      DWORD2(v57) = v34;
      *(_QWORD *)&v58 = v35;
      *((_QWORD *)&v58 + 1) = v36;
      LODWORD(v59) = v37;
      BYTE4(v59) = v38;
      *((_QWORD *)&v59 + 1) = v39;
      LODWORD(v60) = v40;
      BYTE4(v60) = v41;
      DWORD2(v60) = v42;
      BYTE12(v60) = v43;
      *(_QWORD *)&v61 = v44;
      BYTE8(v61) = v45;
      BYTE9(v61) = v46;
      BYTE10(v61) = v32;
      return (_s15IMAP2Connection15SelectedMailboxV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)&v49, (uint64_t)&v57) & 1) != 0;
    }
    v15 = sub_1A5892220((uint64_t)v70);
    v64 = *(_OWORD *)(v15 + 112);
    v65 = *(_OWORD *)(v15 + 128);
    v66 = *(_OWORD *)(v15 + 144);
    v67 = *(_WORD *)(v15 + 160);
    v60 = *(_OWORD *)(v15 + 48);
    v61 = *(_OWORD *)(v15 + 64);
    v62 = *(_OWORD *)(v15 + 80);
    v63 = *(_OWORD *)(v15 + 96);
    v57 = *(_OWORD *)v15;
    v58 = *(_OWORD *)(v15 + 16);
    v59 = *(_OWORD *)(v15 + 32);
    sub_1A5891E0C(v53, (uint64_t)&v49);
    if (sub_1A5891E48((uint64_t)&v49) == 1)
    {
      v16 = sub_1A5892220((uint64_t)&v49);
      v68[7] = *(_OWORD *)(v16 + 112);
      v68[8] = *(_OWORD *)(v16 + 128);
      v68[9] = *(_OWORD *)(v16 + 144);
      v69 = *(_WORD *)(v16 + 160);
      v68[3] = *(_OWORD *)(v16 + 48);
      v68[4] = *(_OWORD *)(v16 + 64);
      v68[5] = *(_OWORD *)(v16 + 80);
      v68[6] = *(_OWORD *)(v16 + 96);
      v68[0] = *(_OWORD *)v16;
      v68[1] = *(_OWORD *)(v16 + 16);
      v68[2] = *(_OWORD *)(v16 + 32);
      sub_1A5894370((uint64_t)v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
      sub_1A5894370((uint64_t)v54, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
      sub_1A58D15C4((uint64_t)&v57, (uint64_t)v68);
      goto LABEL_11;
    }
  }
  else
  {
    v18 = (unint64_t *)sub_1A5892220((uint64_t)v70);
    v20 = *v18;
    v19 = v18[1];
    v22 = v18[2];
    v21 = v18[3];
    v23 = v18[4];
    sub_1A5891E0C(v53, (uint64_t)v68);
    if (!sub_1A5891E48((uint64_t)v68))
    {
      v24 = (unint64_t *)sub_1A5892220((uint64_t)v68);
      v26 = *v24;
      v25 = v24[1];
      v28 = v24[2];
      v27 = v24[3];
      v29 = v24[4];
      if (v20)
      {
        if (v26)
        {
          *(_QWORD *)&v49 = v20;
          DWORD2(v49) = v19;
          *(_QWORD *)&v50 = v22;
          *((_QWORD *)&v50 + 1) = v21;
          *(_QWORD *)&v51 = v23;
          *(_QWORD *)&v57 = v26;
          DWORD2(v57) = v25;
          *(_QWORD *)&v58 = v28;
          *((_QWORD *)&v58 + 1) = v27;
          *(_QWORD *)&v59 = v29;
          sub_1A5894370((uint64_t)v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
          sub_1A5894370((uint64_t)v54, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
          v17 = _s15IMAP2Connection23MailboxSelectionFailureV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)&v49, (uint64_t)&v57);
LABEL_11:
          v30 = v17;
          sub_1A5894370((uint64_t)v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A5891FDC);
          sub_1A5894370((uint64_t)v54, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A5891FDC);
          return v30;
        }
        sub_1A5891E0C(v53, (uint64_t)&v57);
        v48 = sub_1A5892220((uint64_t)&v57);
        sub_1A58942B4(*(_QWORD *)v48, *(_QWORD *)(v48 + 8), *(_QWORD *)(v48 + 16), *(_QWORD *)(v48 + 24), *(_QWORD *)(v48 + 32));
      }
      else if (!v26)
      {
        return 1;
      }
      sub_1A5894370((uint64_t)v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
      sub_1A5894370((uint64_t)v54, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
      sub_1A5892104(v20, v19, v22, v21, v23);
      sub_1A5892104(v26, v25, v28, v27, v29);
    }
  }
  return 0;
}

void ConnectionState.kind.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v1);
  sub_1A55034B8(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1A58AD330 + 4 * byte_1A59DEBD6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_1A58AD330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL8 v3;

  v1 = sub_1A594AA40();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned int (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1) == *MEMORY[0x1E0CCE5C8];
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  return v3;
}

BOOL static ConnectionState.Kind.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t ConnectionState.Kind.hash(into:)()
{
  return sub_1A594CE88();
}

uint64_t ConnectionState.Kind.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

void ConnectionState.nonSensitiveShortLogDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  char *v10;
  _QWORD v11[68];

  v1 = type metadata accessor for UnauthenticatedState();
  MEMORY[0x1E0C80A78](v1);
  v11[0] = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UnauthenticatedStateWithTasks();
  MEMORY[0x1E0C80A78](v3);
  v11[1] = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594AA40();
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v7);
  sub_1A55034B8(v0, (uint64_t)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v10 = (char *)sub_1A58AD5C8 + 4 * word_1A59DEBDC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_1A58AD5C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;

  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v6 == *MEMORY[0x1E0CCE5C8])
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    return 0xD000000000000013;
  }
  else if (v6 == *MEMORY[0x1E0CCE5C0])
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    return 0xD000000000000012;
  }
  else
  {
    v7 = 0xD000000000000011;
    if (v6 != *MEMORY[0x1E0CCE5B8])
    {
      if (v6 != *MEMORY[0x1E0CCE5D8])
      {
        if (v6 == *MEMORY[0x1E0CCE5B0])
          return v7;
        if (v6 != *MEMORY[0x1E0CCE5D0])
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
          *(_QWORD *)(v0 + 16) = 0x697463656E6E6F63;
          *(_QWORD *)(v0 + 24) = 0xEB0000000028676ELL;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v4, v3);
          sub_1A594B490();
          sub_1A594B5F8();
          swift_bridgeObjectRelease();
          sub_1A594B5F8();
          v7 = *(_QWORD *)(v0 + 16);
          (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v3);
          return v7;
        }
      }
      return 0xD000000000000015;
    }
  }
  return v7;
}

uint64_t sub_1A58ADCAC(__int128 *a1, __int128 *a2)
{
  __int128 v4[10];
  __int128 v5[10];

  sub_1A5891E0C(a1, (uint64_t)v4);
  sub_1A5891E0C(a2, (uint64_t)v5);
  return sub_1A58B15F0(v4, v5) & 1;
}

uint64_t sub_1A58ADCF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  __int128 v17[10];
  __int128 v18[10];
  _OWORD v19[11];
  _OWORD v20[11];

  v3 = *(_QWORD *)a1;
  v4 = *(_OWORD *)(a1 + 120);
  v5 = *(_OWORD *)(a1 + 152);
  v19[8] = *(_OWORD *)(a1 + 136);
  v19[9] = v5;
  v19[10] = *(_OWORD *)(a1 + 168);
  v6 = *(_OWORD *)(a1 + 56);
  v7 = *(_OWORD *)(a1 + 88);
  v19[4] = *(_OWORD *)(a1 + 72);
  v19[5] = v7;
  v19[6] = *(_OWORD *)(a1 + 104);
  v19[7] = v4;
  v8 = *(_OWORD *)(a1 + 24);
  v19[0] = *(_OWORD *)(a1 + 8);
  v19[1] = v8;
  v19[2] = *(_OWORD *)(a1 + 40);
  v19[3] = v6;
  sub_1A5891E0C((__int128 *)(a1 + 184), (uint64_t)v17);
  v9 = *(_QWORD *)a2;
  v10 = *(_OWORD *)(a2 + 120);
  v11 = *(_OWORD *)(a2 + 152);
  v20[8] = *(_OWORD *)(a2 + 136);
  v20[9] = v11;
  v20[10] = *(_OWORD *)(a2 + 168);
  v12 = *(_OWORD *)(a2 + 56);
  v13 = *(_OWORD *)(a2 + 88);
  v20[4] = *(_OWORD *)(a2 + 72);
  v20[5] = v13;
  v20[6] = *(_OWORD *)(a2 + 104);
  v20[7] = v10;
  v14 = *(_OWORD *)(a2 + 24);
  v20[0] = *(_OWORD *)(a2 + 8);
  v20[1] = v14;
  v20[2] = *(_OWORD *)(a2 + 40);
  v20[3] = v12;
  sub_1A5891E0C((__int128 *)(a2 + 184), (uint64_t)v18);
  if ((sub_1A5894DB8(v3, v9) & 1) != 0 && (static ServerID.__derived_struct_equals(_:_:)(v19, v20) & 1) != 0)
    v15 = sub_1A58B15F0(v17, v18);
  else
    v15 = 0;
  return v15 & 1;
}

uint64_t MailboxSelectionFailure.mailbox.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MailboxSelectionFailure.mailbox.setter(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)v2 = a1;
  *(_DWORD *)(v2 + 8) = a2;
  return result;
}

double (*MailboxSelectionFailure.mailbox.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t MailboxSelectionFailure.response.getter()
{
  _QWORD *v0;
  unint64_t v1;

  v1 = v0[2];
  sub_1A58942F8(v1, v0[3], v0[4]);
  return v1;
}

unint64_t MailboxSelectionFailure.response.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t result;

  result = sub_1A5892148(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = a3;
  return result;
}

double (*MailboxSelectionFailure.response.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL sub_1A58ADF08(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return _s15IMAP2Connection23MailboxSelectionFailureV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v5, (uint64_t)v7);
}

uint64_t AuthenticatedState.mailboxSelection.getter()
{
  uint64_t v0;
  __int128 v2[10];
  _BYTE v3[176];

  sub_1A5891E0C((__int128 *)(v0 + 184), (uint64_t)v2);
  sub_1A5891E0C(v2, (uint64_t)v3);
  if (sub_1A5891E48((uint64_t)v3))
  {
    sub_1A5892220((uint64_t)v3);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    sub_1A5892220((uint64_t)v3);
    return 0;
  }
}

uint64_t ConnectionState.isClosedOrCancelled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  unsigned int EnumCaseMultiPayload;
  _BOOL8 v9;
  uint64_t v11;

  v1 = type metadata accessor for ConnectionState();
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - v5;
  sub_1A55034B8(v0, (uint64_t)&v11 - v5, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 3)
  {
    sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
LABEL_5:
    sub_1A55034B8(v0, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    v9 = swift_getEnumCaseMultiPayload() == 5;
    sub_1A55034FC((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    return v9;
  }
  if (EnumCaseMultiPayload - 3 >= 2)
    goto LABEL_5;
  return 1;
}

BOOL ConnectionState.isConnectingOrAuthenticating.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  unsigned int EnumCaseMultiPayload;
  _BOOL8 v6;
  uint64_t v8;

  v1 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(v0, (uint64_t)v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload - 3 < 3)
    return 0;
  v6 = EnumCaseMultiPayload < 2;
  sub_1A55034FC((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  return v6;
}

uint64_t ConnectionState.isActivelyConnectingOrAuthenticating.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  unsigned int EnumCaseMultiPayload;
  _BOOL8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for ConnectionState();
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v13 - v5;
  sub_1A55034B8(v0, (uint64_t)&v13 - v5, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload - 3 < 3)
    return 0;
  if (EnumCaseMultiPayload >= 2)
  {
    sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    return 0;
  }
  else
  {
    sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    sub_1A55034B8(v0, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1A55034FC((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      return 1;
    }
    else
    {
      v10 = sub_1A594AA40();
      v11 = *(_QWORD *)(v10 - 8);
      v9 = (*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v4, v10) != *MEMORY[0x1E0CCE5C8];
      (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v10);
    }
  }
  return v9;
}

BOOL ConnectionState.canRunCommand(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  unsigned int EnumCaseMultiPayload;
  _BOOL8 v6;
  uint64_t v8;

  v1 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(v0, (uint64_t)v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v6 = 0;
  if (EnumCaseMultiPayload - 3 >= 3)
  {
    v6 = EnumCaseMultiPayload >= 2;
    sub_1A55034FC((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  }
  return v6;
}

BOOL ConnectionState.hasMailboxSelectedOrSelectionIsInProgress(_:)(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[168];
  _QWORD v26[44];
  _BYTE v27[176];

  v3 = v2;
  v6 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - v13;
  sub_1A55034B8(v3, (uint64_t)&v22 - v13, v15);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1A55034FC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
LABEL_9:
    sub_1A55034B8(v3, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
LABEL_10:
    sub_1A55034B8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      memcpy(v26, v8, 0x15AuLL);
      sub_1A5891E0C((__int128 *)&v26[23], (uint64_t)v27);
      if (sub_1A5891E48((uint64_t)v27) == 1)
      {
        v20 = sub_1A5892220((uint64_t)v27);
        if ((*(unsigned int *)(v20 + 8) | ((unint64_t)*(unsigned int *)(v20 + 8) << 32)) == (a2 | ((unint64_t)a2 << 32)))
        {
          v19 = sub_1A54FF30C(*(_QWORD *)v20, a1);
          sub_1A5891E54((uint64_t)v26);
          goto LABEL_17;
        }
      }
      sub_1A5891E54((uint64_t)v26);
    }
    else
    {
      sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    }
    v19 = 0;
    goto LABEL_17;
  }
  memcpy(v26, v14, 0x15AuLL);
  sub_1A5891E0C((__int128 *)&v26[23], (uint64_t)v27);
  if (sub_1A5891E48((uint64_t)v27) != 2)
  {
    sub_1A5891E54((uint64_t)v26);
    goto LABEL_9;
  }
  v23 = a1;
  v16 = sub_1A5892220((uint64_t)v27);
  v17 = *(_QWORD *)v16;
  v24 = *(unsigned int *)(v16 + 8);
  sub_1A5891E0C((__int128 *)&v26[23], (uint64_t)v25);
  sub_1A5892220((uint64_t)v25);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5891E54((uint64_t)v26);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5894370((uint64_t)&v26[23], (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A5891FDC);
  if ((v24 | (v24 << 32)) != (a2 | ((unint64_t)a2 << 32)))
  {
    swift_bridgeObjectRelease();
    a1 = v23;
    goto LABEL_9;
  }
  a1 = v23;
  v18 = sub_1A54FF30C(v17, v23);
  swift_bridgeObjectRelease();
  sub_1A55034B8(v3, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if (!v18)
    goto LABEL_10;
  v19 = 1;
LABEL_17:
  sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  return v19;
}

BOOL ConnectionState.hasMailboxSelected(_:)(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  _BYTE v15[168];
  _QWORD v16[44];
  _BYTE v17[168];

  v3 = v2;
  v6 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A55034B8(v3, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    return 0;
  }
  memcpy(v16, v8, 0x15AuLL);
  sub_1A5891E0C((__int128 *)&v16[23], (uint64_t)v17);
  if (sub_1A5891E48((uint64_t)v17) != 2)
  {
    sub_1A5891E54((uint64_t)v16);
    return 0;
  }
  v10 = sub_1A5892220((uint64_t)v17);
  v11 = *(_QWORD *)v10;
  v12 = *(unsigned int *)(v10 + 8);
  sub_1A5891E0C((__int128 *)&v16[23], (uint64_t)v15);
  sub_1A5892220((uint64_t)v15);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5891E54((uint64_t)v16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5894370((uint64_t)&v16[23], (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A5891FDC);
  if ((v12 | (v12 << 32)) != (a2 | ((unint64_t)a2 << 32)))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v13 = sub_1A54FF30C(v11, a1);
  swift_bridgeObjectRelease();
  return v13;
}

BOOL ConnectionState.mailboxSelectionIsInProgress(_:)(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  BOOL v11;
  _QWORD v14[44];
  _BYTE v15[168];

  v3 = v2;
  v6 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(v3, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    return 0;
  }
  memcpy(v14, v8, 0x15AuLL);
  sub_1A5891E0C((__int128 *)&v14[23], (uint64_t)v15);
  if (sub_1A5891E48((uint64_t)v15) != 1
    || (v10 = sub_1A5892220((uint64_t)v15),
        (*(unsigned int *)(v10 + 8) | ((unint64_t)*(unsigned int *)(v10 + 8) << 32)) != (a2 | ((unint64_t)a2 << 32))))
  {
    sub_1A5891E54((uint64_t)v14);
    return 0;
  }
  v11 = sub_1A54FF30C(*(_QWORD *)v10, a1);
  sub_1A5891E54((uint64_t)v14);
  return v11;
}

uint64_t ConnectionState.selectedMailbox.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  _BYTE v38[168];
  _QWORD v39[44];
  _BYTE v40[176];

  v2 = v1;
  v4 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    result = sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
LABEL_20:
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v21 = 0;
    v14 = 0;
    v23 = 0;
    v24 = 0;
    v17 = 0;
    v28 = 0;
    goto LABEL_21;
  }
  memcpy(v39, v6, 0x15AuLL);
  sub_1A5891E0C((__int128 *)&v39[23], (uint64_t)v40);
  if (sub_1A5891E48((uint64_t)v40) != 2)
  {
    result = sub_1A5891E54((uint64_t)v39);
    goto LABEL_20;
  }
  v8 = sub_1A5892220((uint64_t)v40);
  v9 = *(_QWORD *)v8;
  v10 = *(unsigned int *)(v8 + 8);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = *(_QWORD *)(v8 + 24);
  v36 = *(unsigned int *)(v8 + 32);
  v13 = *(unsigned __int8 *)(v8 + 36);
  v14 = *(_QWORD *)(v8 + 40);
  v33 = *(unsigned int *)(v8 + 48);
  v15 = *(unsigned __int8 *)(v8 + 52);
  v29 = v13;
  v30 = v15;
  v35 = *(unsigned int *)(v8 + 56);
  v16 = *(unsigned __int8 *)(v8 + 60);
  v17 = *(_QWORD *)(v8 + 64);
  v37 = *(unsigned __int8 *)(v8 + 72);
  v31 = *(unsigned __int8 *)(v8 + 73);
  v32 = v16;
  v34 = *(unsigned __int8 *)(v8 + 74);
  sub_1A5891E0C((__int128 *)&v39[23], (uint64_t)v38);
  sub_1A5892220((uint64_t)v38);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A5891E54((uint64_t)v39);
  v19 = 0x100000000;
  if (v29)
    v20 = 0x100000000;
  else
    v20 = 0;
  v21 = v20 | v36;
  if (v30)
    v22 = 0x100000000;
  else
    v22 = 0;
  v23 = v22 | v33;
  if (!v32)
    v19 = 0;
  v24 = v19 | v35;
  if (v31)
    v25 = 256;
  else
    v25 = 0;
  v26 = v25 | v37;
  if (v34)
    v27 = 0x10000;
  else
    v27 = 0;
  v28 = v26 | v27;
LABEL_21:
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = v12;
  *(_QWORD *)(a1 + 32) = v21;
  *(_QWORD *)(a1 + 40) = v14;
  *(_QWORD *)(a1 + 48) = v23;
  *(_QWORD *)(a1 + 56) = v24;
  *(_QWORD *)(a1 + 64) = v17;
  *(_WORD *)(a1 + 72) = v28;
  *(_BYTE *)(a1 + 74) = BYTE2(v28);
  return result;
}

uint64_t ConnectionState.anyMailboxSelectionIsInProgress.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  _QWORD v8[44];
  _BYTE v9[168];

  v1 = v0;
  v2 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(v1, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    memcpy(v8, v4, 0x15AuLL);
    sub_1A5891E0C((__int128 *)&v8[23], (uint64_t)v9);
    if (sub_1A5891E48((uint64_t)v9) == 1)
    {
      sub_1A5892220((uint64_t)v9);
      sub_1A5891E54((uint64_t)v8);
      return 1;
    }
    sub_1A5891E54((uint64_t)v8);
  }
  else
  {
    sub_1A55034FC((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  }
  return 0;
}

uint64_t ConnectionState.isReadyForCommandsWithoutMailboxSelection.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  int v6;
  char v7;
  _QWORD v10[44];
  _BYTE v11[168];

  v1 = v0;
  v2 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(v1, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    memcpy(v10, v4, 0x15AuLL);
    sub_1A5891E0C((__int128 *)&v10[23], (uint64_t)v11);
    v6 = sub_1A5891E48((uint64_t)v11);
    sub_1A5892220((uint64_t)v11);
    sub_1A5891E54((uint64_t)v10);
    if (v6)
      v7 = 0;
    else
      v7 = -1;
  }
  else
  {
    sub_1A55034FC((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    v7 = 0;
  }
  return v7 & 1;
}

double sub_1A58AEDD0@<D0>(void (*a1)(_OWORD *__return_ptr)@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;

  a1(v5);
  v3 = v5[1];
  *a2 = v5[0];
  a2[1] = v3;
  result = *(double *)&v6;
  a2[2] = v6;
  return result;
}

__uint64_t sub_1A58AEE10(void (*a1)(_QWORD *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _BYTE *v37;
  _QWORD *v38;
  __uint64_t result;
  char *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  int v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  unsigned __int8 *v58;
  unint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  double v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  os_log_type_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(char *, uint64_t);
  char *v112;
  uint64_t v113;
  __int128 *v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  NSObject *v131;
  os_log_type_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  void (*v149)(_QWORD *__return_ptr, uint64_t);
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  __int128 v163[2];
  uint64_t v164;
  __int128 v165[22];
  _OWORD v166[12];
  __int128 v167[12];
  _BYTE v168[192];
  _BYTE v169[192];
  _QWORD v170[3];
  __n128 v171;
  __int128 v172[12];
  __int128 v173[12];
  __int128 v174[12];
  _OWORD v175[12];
  __n128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  char v188;
  __int128 v189;

  v6 = v5;
  v162 = a5;
  v158 = a3;
  v159 = a4;
  v148 = a2;
  v149 = a1;
  v153 = _s6LoggerVMa_0();
  v157 = *(_QWORD *)(v153 - 8);
  v7 = *(_QWORD *)(v157 + 64);
  MEMORY[0x1E0C80A78](v153);
  v8 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v150 = (uint64_t)&v143 - v10;
  MEMORY[0x1E0C80A78](v11);
  v154 = (char *)&v143 - v12;
  MEMORY[0x1E0C80A78](v13);
  v144 = (uint64_t)&v143 - v14;
  MEMORY[0x1E0C80A78](v15);
  v143 = (uint64_t)&v143 - v16;
  MEMORY[0x1E0C80A78](v17);
  v151 = (uint64_t)&v143 - v18;
  v156 = sub_1A594A764();
  v160 = *(_QWORD *)(v156 - 8);
  MEMORY[0x1E0C80A78](v156);
  v152 = (char *)&v143 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v155 = (char *)&v143 - v21;
  MEMORY[0x1E0C80A78](v22);
  v146 = (char *)&v143 - v23;
  MEMORY[0x1E0C80A78](v24);
  v145 = (char *)&v143 - v25;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v143 - v27;
  v29 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v29);
  v147 = (char *)&v143 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v143 - v32;
  v34 = type metadata accessor for UnauthenticatedStateWithTasks();
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v143 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(v6, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  v161 = v29;
  if (swift_getEnumCaseMultiPayload() != 1)
    return sub_1A55034FC((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  sub_1A55034FC(v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  sub_1A54E3394((uint64_t)v33, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
  sub_1A5879254((uint64_t)v169);
  sub_1A5879E38((uint64_t)v169, (uint64_t)v168);
  sub_1A5879E38((uint64_t)v169, (uint64_t)v173);
  v37 = (_BYTE *)v6;
  v38 = v36;
  if (sub_1A58B7D70((uint64_t)v173) == 1
    || (sub_1A5879EAC(v173, v174), sub_1A5879EAC(v174, v175), sub_1A587A60C((uint64_t)v175)))
  {
    if (*(_QWORD *)(*(_QWORD *)&v36[*(int *)(v34 + 24)] + 16))
    {
      sub_1A58B7EFC((uint64_t)v169, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A58B7D84);
LABEL_8:
      v43 = v162;
      sub_1A55034B8(v162, (uint64_t)v8, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      v44 = (*(unsigned __int8 *)(v157 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80);
      v45 = swift_allocObject();
      sub_1A54E3394((uint64_t)v8, v45 + v44, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      v46 = (_QWORD *)(v45 + ((v7 + v44 + 7) & 0xFFFFFFFFFFFFFFF8));
      v47 = v159;
      *v46 = v158;
      v46[1] = v47;
      sub_1A58FEAA4(v43, (uint64_t (*)(_QWORD *))sub_1A58B7E7C, v45);
      sub_1A54E3394((uint64_t)v38, (uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
      swift_storeEnumTagMultiPayload();
      return swift_release();
    }
    v40 = v28;
    sub_1A5879E38((uint64_t)v169, (uint64_t)v172);
    v41 = sub_1A58B7D70((uint64_t)v172);
    v42 = v160;
    if (v41 == 1)
      goto LABEL_8;
    sub_1A5879EAC(v172, v165);
    sub_1A5879EAC(v165, v167);
  }
  else
  {
    nullsub_1(v175);
    sub_1A5879E38((uint64_t)v168, (uint64_t)v165);
    sub_1A58B7EFC((uint64_t)v165, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5879F18);
    sub_1A5879EAC(v165, v167);
    v42 = v160;
    v40 = v28;
  }
  sub_1A5879EAC(v167, v166);
  v48 = sub_1A587A60C((uint64_t)v166);
  v49 = v155;
  v50 = v156;
  v51 = (uint64_t)v154;
  if (!v48)
  {
    v57 = nullsub_1(v166);
    LODWORD(v59) = *v58;
    v60 = v162;
    (*(void (**)(char *, uint64_t, uint64_t, double))(v42 + 16))(v49, v162, v50, v57);
    sub_1A55034B8(v60, v51, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v61 = sub_1A594A74C();
    v62 = sub_1A594C018();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = swift_slowAlloc();
      v162 = swift_slowAlloc();
      *(_QWORD *)&v165[0] = v162;
      *(_DWORD *)v63 = 68158466;
      LODWORD(v177) = 2;
      v159 = v38;
      sub_1A594C3CC();
      *(_WORD *)(v63 + 8) = 256;
      v64 = v51 + *(int *)(v153 + 20);
      LOBYTE(v177) = *(_BYTE *)v64;
      sub_1A594C3CC();
      *(_WORD *)(v63 + 11) = 2082;
      v65 = v59;
      v66 = ConnectionID.debugDescription.getter(*(unsigned int *)(v64 + 4));
      *(_QWORD *)&v177 = sub_1A589167C(v66, v67, (uint64_t *)v165);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v51, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      *(_WORD *)(v63 + 21) = 2080;
      if ((_DWORD)v59)
        v68 = 0x726568746FLL;
      else
        v68 = 0x6F7571207265766FLL;
      if ((_DWORD)v59)
        v59 = 0xE500000000000000;
      else
        v59 = 0xEA00000000006174;
      *(_QWORD *)&v177 = sub_1A589167C(v68, v59, (uint64_t *)v165);
      sub_1A594C3CC();
      LOBYTE(v59) = v65;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v61, v62, "[%.*hhx-%{public}s] Authentication failed: %s", (uint8_t *)v63, 0x1Fu);
      v69 = v162;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v69, -1, -1);
      MEMORY[0x1A85B1964](v63, -1, -1);

      (*(void (**)(char *, uint64_t))(v160 + 8))(v155, v156);
      v70 = (uint64_t)v159;
    }
    else
    {

      sub_1A55034FC(v51, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v49, v50);
      v70 = (uint64_t)v38;
    }
    sub_1A55034FC(v70, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
    *v37 = v59;
    return swift_storeEnumTagMultiPayload();
  }
  if (v48 != 1)
  {
    v71 = v152;
    v72 = v162;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v152, v162, v156);
    v73 = v150;
    sub_1A55034B8(v72, v150, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v74 = sub_1A594A74C();
    v75 = sub_1A594C018();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = swift_slowAlloc();
      v77 = swift_slowAlloc();
      *(_QWORD *)&v165[0] = v77;
      *(_DWORD *)v76 = 68158210;
      LODWORD(v177) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v76 + 8) = 256;
      v78 = v37;
      v79 = v73 + *(int *)(v153 + 20);
      LOBYTE(v177) = *(_BYTE *)v79;
      sub_1A594C3CC();
      *(_WORD *)(v76 + 11) = 2082;
      v80 = ConnectionID.debugDescription.getter(*(unsigned int *)(v79 + 4));
      *(_QWORD *)&v177 = sub_1A589167C(v80, v81, (uint64_t *)v165);
      sub_1A594C3CC();
      v37 = v78;
      swift_bridgeObjectRelease();
      sub_1A55034FC(v73, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      _os_log_impl(&dword_1A4F90000, v74, v75, "[%.*hhx-%{public}s] All authentication mechanism failed.", (uint8_t *)v76, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v77, -1, -1);
      MEMORY[0x1A85B1964](v76, -1, -1);

      (*(void (**)(char *, uint64_t))(v160 + 8))(v152, v156);
    }
    else
    {

      sub_1A55034FC(v73, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v71, v50);
    }
    sub_1A55034FC((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
    *v37 = 1;
    return swift_storeEnumTagMultiPayload();
  }
  nullsub_1(v166);
  v53 = v52;
  v54 = *(_QWORD *)v52;
  v184 = *(_OWORD *)(v52 + 120);
  v185 = *(_OWORD *)(v52 + 136);
  v186 = *(_OWORD *)(v52 + 152);
  v187 = *(_OWORD *)(v52 + 168);
  v180 = *(_OWORD *)(v52 + 56);
  v181 = *(_OWORD *)(v52 + 72);
  v182 = *(_OWORD *)(v52 + 88);
  v183 = *(_OWORD *)(v52 + 104);
  v177 = *(_OWORD *)(v52 + 8);
  v178 = *(_OWORD *)(v52 + 24);
  v179 = *(_OWORD *)(v52 + 40);
  result = static MonotonicTime.now()();
  v55 = *v38;
  v56 = result - *v38;
  if (result < *v38)
  {
    if ((uint64_t)(v55 - result) < 0)
    {
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    v56 = result - v55;
LABEL_27:
    v82 = (double)v56 / 1000000000.0;
    if ((~*(_QWORD *)&v82 & 0x7FF0000000000000) != 0)
    {
      if (v82 > -9.22337204e18)
      {
        if (v82 < 9.22337204e18)
        {
          v157 = (uint64_t)v82;
          v83 = ServerID.logDescription.getter();
          v158 = v54;
          if (v84)
          {
            v85 = v84;
            v150 = v83;
            v86 = v162;
            (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v40, v162, v50);
            sub_1A55034B8(v86, v151, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v87 = sub_1A594A74C();
            v88 = sub_1A594C030();
            v154 = v40;
            v89 = v88;
            if (os_log_type_enabled(v87, v88))
            {
              v90 = swift_slowAlloc();
              v152 = v53;
              v91 = v90;
              v92 = swift_slowAlloc();
              *(_QWORD *)&v165[0] = v92;
              *(_DWORD *)v91 = 68158722;
              LODWORD(v163[0]) = 2;
              v159 = v38;
              sub_1A594C3CC();
              *(_WORD *)(v91 + 8) = 256;
              v93 = v151;
              v94 = v151 + *(int *)(v153 + 20);
              LOBYTE(v163[0]) = *(_BYTE *)v94;
              sub_1A594C3CC();
              *(_WORD *)(v91 + 11) = 2082;
              v155 = v37;
              v95 = ConnectionID.debugDescription.getter(*(unsigned int *)(v94 + 4));
              *(_QWORD *)&v163[0] = sub_1A589167C(v95, v96, (uint64_t *)v165);
              sub_1A594C3CC();
              v50 = v156;
              swift_bridgeObjectRelease();
              sub_1A55034FC(v93, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
              *(_WORD *)(v91 + 21) = 2082;
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              *(_QWORD *)&v163[0] = sub_1A589167C(v150, v85, (uint64_t *)v165);
              v37 = v155;
              sub_1A594C3CC();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v91 + 31) = 2048;
              *(_QWORD *)&v163[0] = v157;
              v38 = v159;
              sub_1A594C3CC();
              _os_log_impl(&dword_1A4F90000, v87, v89, "[%.*hhx-%{public}s] Authentication completed with server %{public}s (took %ld s)", (uint8_t *)v91, 0x29u);
              swift_arrayDestroy();
              v97 = v92;
              v42 = v160;
              MEMORY[0x1A85B1964](v97, -1, -1);
              v98 = v91;
              v53 = v152;
              MEMORY[0x1A85B1964](v98, -1, -1);

            }
            else
            {
              sub_1A55034FC(v151, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

              swift_bridgeObjectRelease_n();
            }
            v111 = *(uint64_t (**)(char *, uint64_t))(v42 + 8);
            v112 = v154;
          }
          else
          {
            v99 = v145;
            v100 = v162;
            (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v145, v162, v50);
            v101 = v143;
            sub_1A55034B8(v100, v143, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            v102 = sub_1A594A74C();
            v103 = sub_1A594C030();
            if (os_log_type_enabled(v102, v103))
            {
              v104 = swift_slowAlloc();
              v105 = swift_slowAlloc();
              v152 = v53;
              v106 = v105;
              *(_QWORD *)&v165[0] = v105;
              *(_DWORD *)v104 = 68158466;
              LODWORD(v163[0]) = 2;
              v155 = v37;
              sub_1A594C3CC();
              *(_WORD *)(v104 + 8) = 256;
              v107 = v101 + *(int *)(v153 + 20);
              LOBYTE(v163[0]) = *(_BYTE *)v107;
              sub_1A594C3CC();
              *(_WORD *)(v104 + 11) = 2082;
              v108 = ConnectionID.debugDescription.getter(*(unsigned int *)(v107 + 4));
              *(_QWORD *)&v163[0] = sub_1A589167C(v108, v109, (uint64_t *)v165);
              sub_1A594C3CC();
              v42 = v160;
              swift_bridgeObjectRelease();
              sub_1A55034FC(v101, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
              *(_WORD *)(v104 + 21) = 2048;
              v50 = v156;
              *(_QWORD *)&v163[0] = v157;
              v37 = v155;
              sub_1A594C3CC();
              _os_log_impl(&dword_1A4F90000, v102, v103, "[%.*hhx-%{public}s] Authentication completed (took %ld s).", (uint8_t *)v104, 0x1Fu);
              swift_arrayDestroy();
              v110 = v106;
              v53 = v152;
              MEMORY[0x1A85B1964](v110, -1, -1);
              MEMORY[0x1A85B1964](v104, -1, -1);

              v111 = *(uint64_t (**)(char *, uint64_t))(v42 + 8);
              v112 = v145;
            }
            else
            {
              sub_1A55034FC(v101, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

              v111 = *(uint64_t (**)(char *, uint64_t))(v42 + 8);
              v112 = v99;
            }
          }
          v157 = (uint64_t)v111;
          v113 = v111(v112, v50);
          v114 = (__int128 *)(v53 + 8);
          v149(v170, v113);
          sub_1A58687F8(&v171, &v176);
          v115 = v170[0];
          v116 = v170[1];
          v117 = v170[2];
          sub_1A58687F8(&v176, (__n128 *)&v188);
          if (*((_QWORD *)&v189 + 1) == 1)
          {
            sub_1A5867DDC(v115);
LABEL_45:
            v118 = sub_1A58B67E4(v158);
            swift_bridgeObjectRelease();
            sub_1A55034FC((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
            memset(v163, 0, sizeof(v163));
            v164 = 0;
            sub_1A58B7C30((uint64_t)v163);
            *(_QWORD *)&v165[0] = v118;
            v120 = v114[1];
            v119 = v114[2];
            *(__int128 *)((char *)v165 + 8) = *v114;
            *(__int128 *)((char *)&v165[1] + 8) = v120;
            *(__int128 *)((char *)&v165[2] + 8) = v119;
            v121 = v114[5];
            v122 = v114[6];
            v123 = v114[4];
            *(__int128 *)((char *)&v165[3] + 8) = v114[3];
            *(__int128 *)((char *)&v165[6] + 8) = v122;
            *(__int128 *)((char *)&v165[5] + 8) = v121;
            *(__int128 *)((char *)&v165[4] + 8) = v123;
            v124 = v114[9];
            v125 = v114[10];
            v126 = v114[8];
            *(__int128 *)((char *)&v165[7] + 8) = v114[7];
            *(__int128 *)((char *)&v165[10] + 8) = v125;
            *(__int128 *)((char *)&v165[9] + 8) = v124;
            *(__int128 *)((char *)&v165[8] + 8) = v126;
            sub_1A5891E0C(v163, (uint64_t)&v165[11] + 8);
            v127 = (uint64_t)v147;
            memcpy(v147, v165, 0x15AuLL);
            swift_storeEnumTagMultiPayload();
            return sub_1A54E3394(v127, (uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
          }
          if (v115 >> 62 != 1)
            goto LABEL_60;
          if (!*((_QWORD *)&v189 + 1))
          {
            if ((v188 == 1 || (unsigned __int16)v115 != 771) && (unsigned __int16)v115 != 772)
              goto LABEL_60;
LABEL_59:
            sub_1A5867DDC(v115);
            sub_1A5893070((uint64_t *)&v176);
            goto LABEL_45;
          }
          if (v188 == 1)
          {
            if ((unsigned __int16)v115 != 772)
              goto LABEL_60;
          }
          else if ((unsigned __int16)v115 - 773 < 0xFFFFFFFE)
          {
            goto LABEL_60;
          }
          if (v117 && (v189 == __PAIR128__(v117, v116) || (sub_1A594CD38() & 1) != 0))
            goto LABEL_59;
LABEL_60:
          swift_bridgeObjectRelease();
          sub_1A55426A4((uint64_t)v114);
          v128 = v146;
          v129 = v162;
          (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v146, v162, v50);
          v130 = v144;
          sub_1A55034B8(v129, v144, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          sub_1A58AAAD0(v115);
          sub_1A58B7ED0((uint64_t *)&v176);
          v131 = sub_1A594A74C();
          v132 = sub_1A594C018();
          LODWORD(v162) = v132;
          if (os_log_type_enabled(v131, v132))
          {
            v133 = swift_slowAlloc();
            v160 = swift_slowAlloc();
            *(_QWORD *)&v165[0] = v160;
            *(_DWORD *)v133 = 68158466;
            LODWORD(v163[0]) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v133 + 8) = 256;
            v134 = *(int *)(v153 + 20);
            v155 = v37;
            v135 = v130 + v134;
            LOBYTE(v163[0]) = *(_BYTE *)(v130 + v134);
            sub_1A594C3CC();
            *(_WORD *)(v133 + 11) = 2082;
            v136 = ConnectionID.debugDescription.getter(*(unsigned int *)(v135 + 4));
            v159 = v38;
            *(_QWORD *)&v163[0] = sub_1A589167C(v136, v137, (uint64_t *)v165);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A55034FC(v130, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
            *(_WORD *)(v133 + 21) = 2082;
            sub_1A58AAAD0(v115);
            v138 = sub_1A58F842C(v115);
            v140 = v139;
            sub_1A5867DDC(v115);
            *(_QWORD *)&v163[0] = sub_1A589167C(v138, v140, (uint64_t *)v165);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A5867DDC(v115);
            sub_1A5893070((uint64_t *)&v176);
            sub_1A5867DDC(v115);
            sub_1A5893070((uint64_t *)&v176);
            _os_log_impl(&dword_1A4F90000, v131, (os_log_type_t)v162, "[%.*hhx-%{public}s] Did authenticate, but connection (%{public}s) does not fulfil TLS requirements.", (uint8_t *)v133, 0x1Fu);
            v141 = v160;
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v141, -1, -1);
            MEMORY[0x1A85B1964](v133, -1, -1);

            ((void (*)(char *, uint64_t))v157)(v146, v156);
            v142 = (uint64_t)v159;
          }
          else
          {

            sub_1A5867DDC(v115);
            sub_1A5893070((uint64_t *)&v176);
            sub_1A5867DDC(v115);
            sub_1A5893070((uint64_t *)&v176);
            sub_1A55034FC(v130, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
            ((void (*)(char *, uint64_t))v157)(v128, v50);
            v142 = (uint64_t)v38;
          }
          sub_1A55034FC(v142, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
          return swift_storeEnumTagMultiPayload();
        }
        goto LABEL_66;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  if ((uint64_t)(result - *v38) >= 0)
    goto LABEL_27;
LABEL_68:
  __break(1u);
  return result;
}

uint64_t sub_1A58B01A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A594A764();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v19;
  v37 = v18;
  (*(void (**)(char *, uint64_t, double))(v19 + 16))(v17, a2, v15);
  sub_1A55034B8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A58B7FB4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5869AD8);
  sub_1A58B7FB4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5869AD8);
  v20 = sub_1A594A74C();
  v21 = sub_1A594C000();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v34 = a4;
    v23 = v22;
    v33 = swift_slowAlloc();
    v39 = v33;
    *(_DWORD *)v23 = 68158466;
    LODWORD(v38) = 2;
    v35 = a3;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 8) = 256;
    v24 = &v13[*(int *)(v11 + 20)];
    LOBYTE(v38) = *v24;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 11) = 2082;
    v25 = ConnectionID.debugDescription.getter(*((unsigned int *)v24 + 1));
    v38 = sub_1A589167C(v25, v26, &v39);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v13, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    *(_WORD *)(v23 + 21) = 2082;
    sub_1A58EB5CC();
    v38 = sub_1A589167C(v27, v28, &v39);
    a3 = v35;
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A58B7FB4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A58640B0);
    sub_1A58B7FB4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A58640B0);
    _os_log_impl(&dword_1A4F90000, v20, v21, "[%.*hhx-%{public}s] Authentication is sending %{public}s.", (uint8_t *)v23, 0x1Fu);
    v29 = v33;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v29, -1, -1);
    MEMORY[0x1A85B1964](v23, -1, -1);
  }
  else
  {
    sub_1A55034FC((uint64_t)v13, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    sub_1A58B7FB4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A58640B0);
    sub_1A58B7FB4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A58640B0);
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v37);
  sub_1A58B7FB4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5869AD8);
  sub_1A58B0540(a1);
  v30 = a3(v10);
  sub_1A55034FC((uint64_t)v10, type metadata accessor for ClientCommand);
  return v30;
}

void sub_1A58B0540(uint64_t a1)
{
  _QWORD v1[8];

  sub_1A586A180(a1, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1A58B0590()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A58B7FB4(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A58640B0);
  *v0 = v2;
  v0[1] = v4;
  v0[2] = v5;
  v0[3] = v6;
  type metadata accessor for ClientCommand(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A58B0748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD v14[44];

  v1 = v0;
  v2 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(v1, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1A55034FC((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    return MEMORY[0x1E0DEE9E8];
  }
  memcpy(v14, v4, 0x15AuLL);
  v6 = v14[0];
  v7 = Capability.condStore.unsafeMutableAddressor();
  v8 = *v7;
  v9 = v7[1];
  v10 = v7[2];
  v11 = *((_BYTE *)v7 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  LOBYTE(v6) = sub_1A54EA9BC(v8, v9, v10, v11, v6);
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    sub_1A5891E54((uint64_t)v14);
    return MEMORY[0x1E0DEE9E8];
  }
  v12 = sub_1A58E0D78((uint64_t)&unk_1E4E73210);
  sub_1A5891E54((uint64_t)v14);
  return v12;
}

uint64_t sub_1A58B0880(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char *v6;
  uint64_t v7;
  __int128 v8[10];
  _BYTE v9[176];

  v7 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  sub_1A5891E0C(a1, (uint64_t)v8);
  sub_1A5891E0C(v8, (uint64_t)v9);
  result = sub_1A5891E48((uint64_t)v9);
  if ((_DWORD)result == 1)
  {
    v6 = (char *)&loc_1A58B09D0 + 4 * word_1A59DEC0C[*(unsigned __int8 *)(sub_1A5892220((uint64_t)v9) + 90) >> 5];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1A58B1420()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

BOOL _s15IMAP2Connection23MailboxSelectionFailureV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v13;
  char v14;
  char v15;

  if ((*(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned int *)(a1 + 8) << 32)) != (*(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned int *)(a2 + 8) << 32))
    || !sub_1A54FF30C(*(_QWORD *)a1, *(_QWORD *)a2))
  {
    return 0;
  }
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = (v4 | v5) == 0;
  if (v4 && v5)
  {
    v7 = *(_QWORD *)(a1 + 16);
    v8 = *(_QWORD *)(a1 + 24);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = v9 & 0xF000000000000007;
    sub_1A58942F8(v7, v8, v4);
    sub_1A58942F8(v7, v8, v4);
    sub_1A58942F8(v9, v10, v5);
    if ((~v7 & 0xF000000000000007) != 0)
    {
      if (v11 == 0xF000000000000007)
        goto LABEL_15;
      sub_1A5862270(v9);
      sub_1A5862270(v7);
      static ResponseTextCode.__derived_enum_equals(_:_:)(v7);
      v14 = v13;
      sub_1A5862B80(v9);
      sub_1A5862B80(v7);
      if ((v14 & 1) != 0)
      {
LABEL_7:
        if (v8 == v10 && v4 == v5)
        {
          sub_1A5862B80(v9);
          v6 = 1;
LABEL_16:
          swift_bridgeObjectRelease();
          sub_1A5862B80(v7);
          swift_bridgeObjectRelease();
          sub_1A5892148(v7, v8, v4);
          return v6;
        }
        v15 = sub_1A594CD38();
        sub_1A5862B80(v9);
        if ((v15 & 1) != 0)
        {
          v6 = 1;
          goto LABEL_16;
        }
LABEL_15:
        v6 = 0;
        goto LABEL_16;
      }
    }
    else if (v11 == 0xF000000000000007)
    {
      goto LABEL_7;
    }
    sub_1A5862B80(v9);
    goto LABEL_15;
  }
  return v6;
}

uint64_t sub_1A58B15F0(__int128 *a1, __int128 *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  unint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v21;
  __int128 *v22;
  __int128 *v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  __int128 v28[10];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _OWORD v32[8];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _OWORD v36[7];
  __int16 v37;
  _BYTE v38[168];
  _OWORD v39[10];
  __int16 v40;
  __int128 v41[11];

  sub_1A5891E0C(a2, (uint64_t)v28);
  sub_1A5891E0C(v28, (uint64_t)v41);
  sub_1A5891E0C(a1, (uint64_t)v38);
  v4 = sub_1A5891E48((uint64_t)v38);
  if (!v4)
  {
    v9 = (unint64_t *)sub_1A5892220((uint64_t)v38);
    v11 = *v9;
    v10 = v9[1];
    v13 = v9[2];
    v12 = v9[3];
    v14 = v9[4];
    sub_1A5891E0C(a2, (uint64_t)v39);
    if (sub_1A5891E48((uint64_t)v39))
      goto LABEL_16;
    v15 = (unint64_t *)sub_1A5892220((uint64_t)v39);
    v16 = *v15;
    v17 = v15[1];
    v19 = v15[2];
    v18 = v15[3];
    v20 = v15[4];
    if (v11)
    {
      if (v16)
      {
        *(_QWORD *)&v29 = v11;
        DWORD2(v29) = v10;
        *(_QWORD *)&v30 = v13;
        *((_QWORD *)&v30 + 1) = v12;
        *(_QWORD *)&v31 = v14;
        *(_QWORD *)&v33 = v16;
        DWORD2(v33) = v17;
        *(_QWORD *)&v34 = v19;
        *((_QWORD *)&v34 + 1) = v18;
        *(_QWORD *)&v35 = v20;
        sub_1A5894370((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
        sub_1A5894370((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
        v21 = _s15IMAP2Connection23MailboxSelectionFailureV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)&v29, (uint64_t)&v33);
        sub_1A5894370((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A5891FDC);
        sub_1A5894370((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A5891FDC);
        if (!v21)
          goto LABEL_16;
LABEL_13:
        v8 = 1;
        return v8 & 1;
      }
      v26 = v15[2];
      v27 = v15[3];
      sub_1A5891E0C(v41, (uint64_t)&v33);
      v24 = sub_1A5892220((uint64_t)&v33);
      sub_1A58942B4(*(_QWORD *)v24, *(_QWORD *)(v24 + 8), *(_QWORD *)(v24 + 16), *(_QWORD *)(v24 + 24), *(_QWORD *)(v24 + 32));
    }
    else
    {
      v26 = v15[2];
      v27 = v15[3];
      if (!v16)
        goto LABEL_13;
    }
    sub_1A5894370((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
    sub_1A5894370((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
    sub_1A5892104(v11, v10, v13, v12, v14);
    sub_1A5892104(v16, v17, v26, v27, v20);
    goto LABEL_16;
  }
  if (v4 != 1)
  {
    v22 = (__int128 *)sub_1A5892220((uint64_t)v38);
    v34 = v22[1];
    v35 = v22[2];
    v36[0] = v22[3];
    *(_OWORD *)((char *)v36 + 11) = *(__int128 *)((char *)v22 + 59);
    v33 = *v22;
    sub_1A5891E0C(a2, (uint64_t)v39);
    if (sub_1A5891E48((uint64_t)v39) == 2)
    {
      v23 = (__int128 *)sub_1A5892220((uint64_t)v39);
      v30 = v23[1];
      v31 = v23[2];
      v32[0] = v23[3];
      *(_OWORD *)((char *)v32 + 11) = *(__int128 *)((char *)v23 + 59);
      v29 = *v23;
      v8 = _s15IMAP2Connection15SelectedMailboxV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)&v33, (uint64_t)&v29);
      return v8 & 1;
    }
LABEL_16:
    v8 = 0;
    return v8 & 1;
  }
  v5 = sub_1A5892220((uint64_t)v38);
  v39[7] = *(_OWORD *)(v5 + 112);
  v39[8] = *(_OWORD *)(v5 + 128);
  v39[9] = *(_OWORD *)(v5 + 144);
  v40 = *(_WORD *)(v5 + 160);
  v39[3] = *(_OWORD *)(v5 + 48);
  v39[4] = *(_OWORD *)(v5 + 64);
  v39[5] = *(_OWORD *)(v5 + 80);
  v39[6] = *(_OWORD *)(v5 + 96);
  v39[0] = *(_OWORD *)v5;
  v39[1] = *(_OWORD *)(v5 + 16);
  v39[2] = *(_OWORD *)(v5 + 32);
  sub_1A5891E0C(a2, (uint64_t)&v29);
  if (sub_1A5891E48((uint64_t)&v29) != 1)
    goto LABEL_16;
  v6 = sub_1A5892220((uint64_t)&v29);
  v36[4] = *(_OWORD *)(v6 + 112);
  v36[5] = *(_OWORD *)(v6 + 128);
  v36[6] = *(_OWORD *)(v6 + 144);
  v37 = *(_WORD *)(v6 + 160);
  v36[0] = *(_OWORD *)(v6 + 48);
  v36[1] = *(_OWORD *)(v6 + 64);
  v36[2] = *(_OWORD *)(v6 + 80);
  v36[3] = *(_OWORD *)(v6 + 96);
  v33 = *(_OWORD *)v6;
  v34 = *(_OWORD *)(v6 + 16);
  v35 = *(_OWORD *)(v6 + 32);
  sub_1A5894370((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
  sub_1A5894370((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
  sub_1A58D15C4((uint64_t)v39, (uint64_t)&v33);
  v8 = v7;
  sub_1A5894370((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A5891FDC);
  sub_1A5894370((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A5891FDC);
  return v8 & 1;
}

void _s15IMAP2Connection0B5StateO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  _QWORD v15[5];
  uint64_t v16;

  v16 = a2;
  v3 = type metadata accessor for UnauthenticatedStateWithTasks();
  MEMORY[0x1E0C80A78](v3);
  v15[2] = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594AA40();
  v15[3] = *(_QWORD *)(v5 - 8);
  v15[4] = v5;
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7980D0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v15 + *(int *)(v12 + 48) - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(a1, (uint64_t)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  sub_1A55034B8(v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  v14 = (char *)sub_1A58B1B44 + 4 * byte_1A59DEC16[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A58B1B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  sub_1A55034B8(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 24) + 8))(v1, *(_QWORD *)(v0 + 32));
    sub_1A5510284(v4, &qword_1EE7980D0);
    v5 = 0;
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 24);
    v8 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v2, v3, v8);
    v5 = MEMORY[0x1A85ACEAC](v1, v2);
    v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v9(v2, v8);
    v9(v1, v8);
    sub_1A55034FC(v4, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  }
  return v5 & 1;
}

uint64_t sub_1A58B229C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A58B2374(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1A58B2484()
{
  unint64_t result;

  result = qword_1EE7AAD28;
  if (!qword_1EE7AAD28)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ConnectionState.Kind, &type metadata for ConnectionState.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7AAD28);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ConnectionState(_QWORD *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  unsigned int (*v37)(char *, uint64_t, int *);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, _QWORD, uint64_t, int *);
  unsigned __int16 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v10 = *((_QWORD *)a2 + 1);
        *a1 = *(_QWORD *)a2;
        a1[1] = v10;
        v11 = *((_QWORD *)a2 + 3);
        a1[2] = *((_QWORD *)a2 + 2);
        a1[3] = v11;
        v12 = *((_QWORD *)a2 + 5);
        a1[4] = *((_QWORD *)a2 + 4);
        a1[5] = v12;
        v13 = *((_QWORD *)a2 + 7);
        a1[6] = *((_QWORD *)a2 + 6);
        a1[7] = v13;
        v14 = *((_QWORD *)a2 + 9);
        a1[8] = *((_QWORD *)a2 + 8);
        a1[9] = v14;
        v15 = *((_QWORD *)a2 + 11);
        a1[10] = *((_QWORD *)a2 + 10);
        a1[11] = v15;
        v16 = *((_QWORD *)a2 + 13);
        a1[12] = *((_QWORD *)a2 + 12);
        a1[13] = v16;
        v17 = *((_QWORD *)a2 + 15);
        a1[14] = *((_QWORD *)a2 + 14);
        a1[15] = v17;
        v18 = *((_QWORD *)a2 + 17);
        a1[16] = *((_QWORD *)a2 + 16);
        a1[17] = v18;
        v19 = *((_QWORD *)a2 + 19);
        a1[18] = *((_QWORD *)a2 + 18);
        a1[19] = v19;
        v20 = *((_QWORD *)a2 + 21);
        a1[20] = *((_QWORD *)a2 + 20);
        a1[21] = v20;
        v21 = *((_QWORD *)a2 + 23);
        a1[22] = *((_QWORD *)a2 + 22);
        v78 = *((_QWORD *)a2 + 24);
        v80 = v21;
        v74 = *((_QWORD *)a2 + 26);
        v76 = *((_QWORD *)a2 + 25);
        v71 = *((_QWORD *)a2 + 28);
        v72 = *((_QWORD *)a2 + 27);
        v69 = *((_QWORD *)a2 + 30);
        v70 = *((_QWORD *)a2 + 29);
        v68 = *((_QWORD *)a2 + 31);
        v89 = *((_QWORD *)a2 + 33);
        v92 = *((_QWORD *)a2 + 32);
        v85 = *((_QWORD *)a2 + 35);
        v87 = *((_QWORD *)a2 + 34);
        v22 = *((_QWORD *)a2 + 37);
        v83 = *((_QWORD *)a2 + 36);
        v23 = *((_QWORD *)a2 + 38);
        v24 = *((_QWORD *)a2 + 39);
        v25 = *((_QWORD *)a2 + 40);
        v26 = *((_QWORD *)a2 + 41);
        v27 = *((_QWORD *)a2 + 42);
        v67 = *((_WORD *)a2 + 172);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A58943DC(v80, v78, v76, v74, v72, v71, v70, v69, v68, v92, v89, v87, v85, v83, v22, v23, v24, v25, v26,
          v27,
          v67);
        a1[23] = v80;
        a1[24] = v78;
        a1[25] = v76;
        a1[26] = v74;
        a1[27] = v72;
        a1[28] = v71;
        a1[29] = v70;
        a1[30] = v69;
        a1[31] = v68;
        a1[32] = v92;
        a1[33] = v89;
        a1[34] = v87;
        a1[35] = v85;
        a1[36] = v83;
        a1[37] = v22;
        a1[38] = v23;
        a1[39] = v24;
        a1[40] = v25;
        a1[41] = v26;
        a1[42] = v27;
        *((_WORD *)a1 + 172) = v67;
        goto LABEL_23;
      case 1:
        *a1 = *(_QWORD *)a2;
        v28 = type metadata accessor for UnauthenticatedStateWithTasks();
        v29 = *(int *)(v28 + 20);
        v30 = (char *)a1 + v29;
        v31 = &a2[v29];
        v32 = type metadata accessor for UnauthenticatedState();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
            *(_QWORD *)v30 = *(_QWORD *)v31;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            swift_storeEnumTagMultiPayload();
            break;
          case 2u:
            v93 = v28;
            *(_QWORD *)v30 = *(_QWORD *)v31;
            v30[8] = v31[8];
            *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
            v33 = *(int *)(type metadata accessor for Authenticator() + 28);
            v34 = &v30[v33];
            v35 = &v31[v33];
            v36 = (int *)type metadata accessor for AuthenticationTask();
            v90 = *((_QWORD *)v36 - 1);
            v37 = *(unsigned int (**)(char *, uint64_t, int *))(v90 + 48);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            if (v37(v35, 1, v36))
            {
              v38 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
              memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
            }
            else
            {
              v57 = *(_OWORD *)(v35 + 24);
              *(_OWORD *)(v34 + 24) = v57;
              (**(void (***)(char *, char *))(v57 - 8))(v34, v35);
              v58 = *((_QWORD *)v35 + 5);
              v59 = *((_QWORD *)v35 + 6);
              sub_1A585C524(v58, v59);
              *((_QWORD *)v34 + 5) = v58;
              *((_QWORD *)v34 + 6) = v59;
              v60 = v36[5];
              v61 = &v34[v60];
              v62 = &v35[v60];
              v63 = sub_1A594A764();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
              v64 = _s6LoggerVMa_0();
              *(_QWORD *)&v61[*(int *)(v64 + 20)] = *(_QWORD *)&v62[*(int *)(v64 + 20)];
              v34[v36[6]] = v35[v36[6]];
              *(_QWORD *)&v34[v36[7]] = *(_QWORD *)&v35[v36[7]];
              v34[v36[8]] = v35[v36[8]];
              v65 = *(void (**)(char *, _QWORD, uint64_t, int *))(v90 + 56);
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v65(v34, 0, 1, v36);
            }
            swift_storeEnumTagMultiPayload();
            v28 = v93;
            break;
          case 4u:
          case 5u:
          case 6u:
          case 8u:
            v39 = *((_QWORD *)v31 + 1);
            *(_QWORD *)v30 = *(_QWORD *)v31;
            *((_QWORD *)v30 + 1) = v39;
            v40 = *((_QWORD *)v31 + 3);
            *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
            *((_QWORD *)v30 + 3) = v40;
            v41 = *((_QWORD *)v31 + 5);
            *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
            *((_QWORD *)v30 + 5) = v41;
            v42 = *((_QWORD *)v31 + 7);
            *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
            *((_QWORD *)v30 + 7) = v42;
            v43 = *((_QWORD *)v31 + 9);
            *((_QWORD *)v30 + 8) = *((_QWORD *)v31 + 8);
            *((_QWORD *)v30 + 9) = v43;
            v44 = *((_QWORD *)v31 + 11);
            *((_QWORD *)v30 + 10) = *((_QWORD *)v31 + 10);
            *((_QWORD *)v30 + 11) = v44;
            v45 = *((_QWORD *)v31 + 13);
            *((_QWORD *)v30 + 12) = *((_QWORD *)v31 + 12);
            *((_QWORD *)v30 + 13) = v45;
            v46 = *((_QWORD *)v31 + 15);
            *((_QWORD *)v30 + 14) = *((_QWORD *)v31 + 14);
            *((_QWORD *)v30 + 15) = v46;
            v47 = *((_QWORD *)v31 + 17);
            *((_QWORD *)v30 + 16) = *((_QWORD *)v31 + 16);
            *((_QWORD *)v30 + 17) = v47;
            v48 = *((_QWORD *)v31 + 19);
            *((_QWORD *)v30 + 18) = *((_QWORD *)v31 + 18);
            *((_QWORD *)v30 + 19) = v48;
            v49 = *((_QWORD *)v31 + 21);
            *((_QWORD *)v30 + 20) = *((_QWORD *)v31 + 20);
            *((_QWORD *)v30 + 21) = v49;
            *((_QWORD *)v30 + 22) = *((_QWORD *)v31 + 22);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            swift_storeEnumTagMultiPayload();
            break;
          case 7u:
            *(_DWORD *)v30 = *(_DWORD *)v31;
            v50 = *((_QWORD *)v31 + 2);
            *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
            *((_QWORD *)v30 + 2) = v50;
            v51 = *((_QWORD *)v31 + 4);
            *((_QWORD *)v30 + 3) = *((_QWORD *)v31 + 3);
            *((_QWORD *)v30 + 4) = v51;
            v52 = *((_QWORD *)v31 + 6);
            *((_QWORD *)v30 + 5) = *((_QWORD *)v31 + 5);
            *((_QWORD *)v30 + 6) = v52;
            v91 = *((_QWORD *)v31 + 8);
            *((_QWORD *)v30 + 7) = *((_QWORD *)v31 + 7);
            *((_QWORD *)v30 + 8) = v91;
            v88 = *((_QWORD *)v31 + 10);
            *((_QWORD *)v30 + 9) = *((_QWORD *)v31 + 9);
            *((_QWORD *)v30 + 10) = v88;
            v86 = *((_QWORD *)v31 + 12);
            *((_QWORD *)v30 + 11) = *((_QWORD *)v31 + 11);
            *((_QWORD *)v30 + 12) = v86;
            v53 = *((_QWORD *)v31 + 14);
            *((_QWORD *)v30 + 13) = *((_QWORD *)v31 + 13);
            *((_QWORD *)v30 + 14) = v53;
            v84 = *((_QWORD *)v31 + 16);
            *((_QWORD *)v30 + 15) = *((_QWORD *)v31 + 15);
            *((_QWORD *)v30 + 16) = v84;
            v82 = *((_QWORD *)v31 + 18);
            *((_QWORD *)v30 + 17) = *((_QWORD *)v31 + 17);
            *((_QWORD *)v30 + 18) = v82;
            v81 = *((_QWORD *)v31 + 20);
            *((_QWORD *)v30 + 19) = *((_QWORD *)v31 + 19);
            *((_QWORD *)v30 + 20) = v81;
            v79 = *((_QWORD *)v31 + 22);
            *((_QWORD *)v30 + 21) = *((_QWORD *)v31 + 21);
            *((_QWORD *)v30 + 22) = v79;
            v77 = *((_QWORD *)v31 + 24);
            *((_QWORD *)v30 + 23) = *((_QWORD *)v31 + 23);
            *((_QWORD *)v30 + 24) = v77;
            v75 = *((_QWORD *)v31 + 26);
            *((_QWORD *)v30 + 25) = *((_QWORD *)v31 + 25);
            *((_QWORD *)v30 + 26) = v75;
            v73 = *((_QWORD *)v31 + 28);
            *((_QWORD *)v30 + 27) = *((_QWORD *)v31 + 27);
            *((_QWORD *)v30 + 28) = v73;
            v54 = *((_QWORD *)v31 + 29);
            v55 = *((_QWORD *)v31 + 30);
            *((_QWORD *)v30 + 29) = v54;
            *((_QWORD *)v30 + 30) = v55;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            swift_storeEnumTagMultiPayload();
            break;
          case 9u:
            v56 = *((_QWORD *)v31 + 1);
            if ((unint64_t)(v56 - 1) >= 0xA)
            {
              *(_QWORD *)v30 = *(_QWORD *)v31;
              *((_QWORD *)v30 + 1) = v56;
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            }
            else
            {
              *(_OWORD *)v30 = *(_OWORD *)v31;
            }
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
            break;
        }
        *(_QWORD *)((char *)a1 + *(int *)(v28 + 24)) = *(_QWORD *)&a2[*(int *)(v28 + 24)];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_23;
      case 0:
        v8 = sub_1A594AA40();
        (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

unint64_t destroy for ConnectionState(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = *(_QWORD *)(a1 + 184);
      v5 = *(_QWORD *)(a1 + 192);
      v6 = a1 + 184;
      return sub_1A5891FDC(v4, v5, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_QWORD *)(v6 + 72), *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), *(_QWORD *)(v6 + 96), *(_QWORD *)(v6 + 104), *(_QWORD *)(v6 + 112), *(_QWORD *)(v6 + 120), *(_QWORD *)(v6 + 128), *(_QWORD *)(v6 + 136), *(_QWORD *)(v6 + 144),
               *(_QWORD *)(v6 + 152),
               *(_WORD *)(v6 + 160));
    case 1:
      v7 = a1 + *(int *)(type metadata accessor for UnauthenticatedStateWithTasks() + 20);
      type metadata accessor for UnauthenticatedState();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
          goto LABEL_13;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v8 = v7 + *(int *)(type metadata accessor for Authenticator() + 28);
          v9 = type metadata accessor for AuthenticationTask();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
            goto LABEL_14;
          __swift_destroy_boxed_opaque_existential_1(v8);
          sub_1A585C57C(*(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48));
          v10 = v8 + *(int *)(v9 + 20);
          v11 = sub_1A594A764();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
LABEL_13:
          swift_bridgeObjectRelease();
LABEL_14:
          result = swift_bridgeObjectRelease();
          break;
        case 4u:
        case 5u:
        case 6u:
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_13;
        case 7u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_13;
        case 9u:
          if ((unint64_t)(*(_QWORD *)(v7 + 8) - 1) >= 0xA)
            goto LABEL_13;
          goto LABEL_14;
        default:
          goto LABEL_14;
      }
      break;
    case 0:
      v3 = sub_1A594AA40();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *initializeWithCopy for ConnectionState(_QWORD *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int *v34;
  unsigned int (*v35)(char *, uint64_t, int *);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, _QWORD, uint64_t, int *);
  unsigned __int16 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v8 = *((_QWORD *)a2 + 1);
      *a1 = *(_QWORD *)a2;
      a1[1] = v8;
      v9 = *((_QWORD *)a2 + 3);
      a1[2] = *((_QWORD *)a2 + 2);
      a1[3] = v9;
      v10 = *((_QWORD *)a2 + 5);
      a1[4] = *((_QWORD *)a2 + 4);
      a1[5] = v10;
      v11 = *((_QWORD *)a2 + 7);
      a1[6] = *((_QWORD *)a2 + 6);
      a1[7] = v11;
      v12 = *((_QWORD *)a2 + 9);
      a1[8] = *((_QWORD *)a2 + 8);
      a1[9] = v12;
      v13 = *((_QWORD *)a2 + 11);
      a1[10] = *((_QWORD *)a2 + 10);
      a1[11] = v13;
      v14 = *((_QWORD *)a2 + 13);
      a1[12] = *((_QWORD *)a2 + 12);
      a1[13] = v14;
      v15 = *((_QWORD *)a2 + 15);
      a1[14] = *((_QWORD *)a2 + 14);
      a1[15] = v15;
      v16 = *((_QWORD *)a2 + 17);
      a1[16] = *((_QWORD *)a2 + 16);
      a1[17] = v16;
      v17 = *((_QWORD *)a2 + 19);
      a1[18] = *((_QWORD *)a2 + 18);
      a1[19] = v17;
      v18 = *((_QWORD *)a2 + 21);
      a1[20] = *((_QWORD *)a2 + 20);
      a1[21] = v18;
      v19 = *((_QWORD *)a2 + 23);
      a1[22] = *((_QWORD *)a2 + 22);
      v76 = *((_QWORD *)a2 + 24);
      v78 = v19;
      v72 = *((_QWORD *)a2 + 26);
      v74 = *((_QWORD *)a2 + 25);
      v69 = *((_QWORD *)a2 + 28);
      v70 = *((_QWORD *)a2 + 27);
      v67 = *((_QWORD *)a2 + 30);
      v68 = *((_QWORD *)a2 + 29);
      v66 = *((_QWORD *)a2 + 31);
      v87 = *((_QWORD *)a2 + 33);
      v90 = *((_QWORD *)a2 + 32);
      v83 = *((_QWORD *)a2 + 35);
      v85 = *((_QWORD *)a2 + 34);
      v20 = *((_QWORD *)a2 + 37);
      v81 = *((_QWORD *)a2 + 36);
      v21 = *((_QWORD *)a2 + 38);
      v22 = *((_QWORD *)a2 + 39);
      v23 = *((_QWORD *)a2 + 40);
      v24 = *((_QWORD *)a2 + 41);
      v25 = *((_QWORD *)a2 + 42);
      v65 = *((_WORD *)a2 + 172);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A58943DC(v78, v76, v74, v72, v70, v69, v68, v67, v66, v90, v87, v85, v83, v81, v20, v21, v22, v23, v24,
        v25,
        v65);
      a1[23] = v78;
      a1[24] = v76;
      a1[25] = v74;
      a1[26] = v72;
      a1[27] = v70;
      a1[28] = v69;
      a1[29] = v68;
      a1[30] = v67;
      a1[31] = v66;
      a1[32] = v90;
      a1[33] = v87;
      a1[34] = v85;
      a1[35] = v83;
      a1[36] = v81;
      a1[37] = v20;
      a1[38] = v21;
      a1[39] = v22;
      a1[40] = v23;
      a1[41] = v24;
      a1[42] = v25;
      *((_WORD *)a1 + 172) = v65;
      goto LABEL_21;
    case 1:
      *a1 = *(_QWORD *)a2;
      v26 = type metadata accessor for UnauthenticatedStateWithTasks();
      v27 = *(int *)(v26 + 20);
      v28 = (char *)a1 + v27;
      v29 = &a2[v27];
      v30 = type metadata accessor for UnauthenticatedState();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
          *(_QWORD *)v28 = *(_QWORD *)v29;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
          v91 = v26;
          *(_QWORD *)v28 = *(_QWORD *)v29;
          v28[8] = v29[8];
          *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
          v31 = *(int *)(type metadata accessor for Authenticator() + 28);
          v32 = &v28[v31];
          v33 = &v29[v31];
          v34 = (int *)type metadata accessor for AuthenticationTask();
          v88 = *((_QWORD *)v34 - 1);
          v35 = *(unsigned int (**)(char *, uint64_t, int *))(v88 + 48);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          if (v35(v33, 1, v34))
          {
            v36 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
            memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          }
          else
          {
            v55 = *(_OWORD *)(v33 + 24);
            *(_OWORD *)(v32 + 24) = v55;
            (**(void (***)(char *, char *))(v55 - 8))(v32, v33);
            v56 = *((_QWORD *)v33 + 5);
            v57 = *((_QWORD *)v33 + 6);
            sub_1A585C524(v56, v57);
            *((_QWORD *)v32 + 5) = v56;
            *((_QWORD *)v32 + 6) = v57;
            v58 = v34[5];
            v59 = &v32[v58];
            v60 = &v33[v58];
            v61 = sub_1A594A764();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
            v62 = _s6LoggerVMa_0();
            *(_QWORD *)&v59[*(int *)(v62 + 20)] = *(_QWORD *)&v60[*(int *)(v62 + 20)];
            v32[v34[6]] = v33[v34[6]];
            *(_QWORD *)&v32[v34[7]] = *(_QWORD *)&v33[v34[7]];
            v32[v34[8]] = v33[v34[8]];
            v63 = *(void (**)(char *, _QWORD, uint64_t, int *))(v88 + 56);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v63(v32, 0, 1, v34);
          }
          swift_storeEnumTagMultiPayload();
          v26 = v91;
          break;
        case 4u:
        case 5u:
        case 6u:
        case 8u:
          v37 = *((_QWORD *)v29 + 1);
          *(_QWORD *)v28 = *(_QWORD *)v29;
          *((_QWORD *)v28 + 1) = v37;
          v38 = *((_QWORD *)v29 + 3);
          *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
          *((_QWORD *)v28 + 3) = v38;
          v39 = *((_QWORD *)v29 + 5);
          *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
          *((_QWORD *)v28 + 5) = v39;
          v40 = *((_QWORD *)v29 + 7);
          *((_QWORD *)v28 + 6) = *((_QWORD *)v29 + 6);
          *((_QWORD *)v28 + 7) = v40;
          v41 = *((_QWORD *)v29 + 9);
          *((_QWORD *)v28 + 8) = *((_QWORD *)v29 + 8);
          *((_QWORD *)v28 + 9) = v41;
          v42 = *((_QWORD *)v29 + 11);
          *((_QWORD *)v28 + 10) = *((_QWORD *)v29 + 10);
          *((_QWORD *)v28 + 11) = v42;
          v43 = *((_QWORD *)v29 + 13);
          *((_QWORD *)v28 + 12) = *((_QWORD *)v29 + 12);
          *((_QWORD *)v28 + 13) = v43;
          v44 = *((_QWORD *)v29 + 15);
          *((_QWORD *)v28 + 14) = *((_QWORD *)v29 + 14);
          *((_QWORD *)v28 + 15) = v44;
          v45 = *((_QWORD *)v29 + 17);
          *((_QWORD *)v28 + 16) = *((_QWORD *)v29 + 16);
          *((_QWORD *)v28 + 17) = v45;
          v46 = *((_QWORD *)v29 + 19);
          *((_QWORD *)v28 + 18) = *((_QWORD *)v29 + 18);
          *((_QWORD *)v28 + 19) = v46;
          v47 = *((_QWORD *)v29 + 21);
          *((_QWORD *)v28 + 20) = *((_QWORD *)v29 + 20);
          *((_QWORD *)v28 + 21) = v47;
          *((_QWORD *)v28 + 22) = *((_QWORD *)v29 + 22);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_storeEnumTagMultiPayload();
          break;
        case 7u:
          *(_DWORD *)v28 = *(_DWORD *)v29;
          v48 = *((_QWORD *)v29 + 2);
          *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
          *((_QWORD *)v28 + 2) = v48;
          v49 = *((_QWORD *)v29 + 4);
          *((_QWORD *)v28 + 3) = *((_QWORD *)v29 + 3);
          *((_QWORD *)v28 + 4) = v49;
          v50 = *((_QWORD *)v29 + 6);
          *((_QWORD *)v28 + 5) = *((_QWORD *)v29 + 5);
          *((_QWORD *)v28 + 6) = v50;
          v89 = *((_QWORD *)v29 + 8);
          *((_QWORD *)v28 + 7) = *((_QWORD *)v29 + 7);
          *((_QWORD *)v28 + 8) = v89;
          v86 = *((_QWORD *)v29 + 10);
          *((_QWORD *)v28 + 9) = *((_QWORD *)v29 + 9);
          *((_QWORD *)v28 + 10) = v86;
          v84 = *((_QWORD *)v29 + 12);
          *((_QWORD *)v28 + 11) = *((_QWORD *)v29 + 11);
          *((_QWORD *)v28 + 12) = v84;
          v51 = *((_QWORD *)v29 + 14);
          *((_QWORD *)v28 + 13) = *((_QWORD *)v29 + 13);
          *((_QWORD *)v28 + 14) = v51;
          v82 = *((_QWORD *)v29 + 16);
          *((_QWORD *)v28 + 15) = *((_QWORD *)v29 + 15);
          *((_QWORD *)v28 + 16) = v82;
          v80 = *((_QWORD *)v29 + 18);
          *((_QWORD *)v28 + 17) = *((_QWORD *)v29 + 17);
          *((_QWORD *)v28 + 18) = v80;
          v79 = *((_QWORD *)v29 + 20);
          *((_QWORD *)v28 + 19) = *((_QWORD *)v29 + 19);
          *((_QWORD *)v28 + 20) = v79;
          v77 = *((_QWORD *)v29 + 22);
          *((_QWORD *)v28 + 21) = *((_QWORD *)v29 + 21);
          *((_QWORD *)v28 + 22) = v77;
          v75 = *((_QWORD *)v29 + 24);
          *((_QWORD *)v28 + 23) = *((_QWORD *)v29 + 23);
          *((_QWORD *)v28 + 24) = v75;
          v73 = *((_QWORD *)v29 + 26);
          *((_QWORD *)v28 + 25) = *((_QWORD *)v29 + 25);
          *((_QWORD *)v28 + 26) = v73;
          v71 = *((_QWORD *)v29 + 28);
          *((_QWORD *)v28 + 27) = *((_QWORD *)v29 + 27);
          *((_QWORD *)v28 + 28) = v71;
          v52 = *((_QWORD *)v29 + 29);
          v53 = *((_QWORD *)v29 + 30);
          *((_QWORD *)v28 + 29) = v52;
          *((_QWORD *)v28 + 30) = v53;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_storeEnumTagMultiPayload();
          break;
        case 9u:
          v54 = *((_QWORD *)v29 + 1);
          if ((unint64_t)(v54 - 1) >= 0xA)
          {
            *(_QWORD *)v28 = *(_QWORD *)v29;
            *((_QWORD *)v28 + 1) = v54;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          }
          else
          {
            *(_OWORD *)v28 = *(_OWORD *)v29;
          }
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          break;
      }
      *(_QWORD *)((char *)a1 + *(int *)(v26 + 24)) = *(_QWORD *)&a2[*(int *)(v26 + 24)];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_21;
    case 0:
      v7 = sub_1A594AA40();
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_21:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for ConnectionState(_QWORD *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  unsigned int (*v23)(char *, uint64_t, int *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, int *);
  unsigned __int16 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  if (a1 != (_QWORD *)a2)
  {
    sub_1A55034FC((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *a1 = *(_QWORD *)a2;
        a1[1] = *((_QWORD *)a2 + 1);
        a1[2] = *((_QWORD *)a2 + 2);
        a1[3] = *((_QWORD *)a2 + 3);
        a1[4] = *((_QWORD *)a2 + 4);
        a1[5] = *((_QWORD *)a2 + 5);
        a1[6] = *((_QWORD *)a2 + 6);
        a1[7] = *((_QWORD *)a2 + 7);
        a1[8] = *((_QWORD *)a2 + 8);
        a1[9] = *((_QWORD *)a2 + 9);
        a1[10] = *((_QWORD *)a2 + 10);
        a1[11] = *((_QWORD *)a2 + 11);
        a1[12] = *((_QWORD *)a2 + 12);
        a1[13] = *((_QWORD *)a2 + 13);
        a1[14] = *((_QWORD *)a2 + 14);
        a1[15] = *((_QWORD *)a2 + 15);
        a1[16] = *((_QWORD *)a2 + 16);
        a1[17] = *((_QWORD *)a2 + 17);
        a1[18] = *((_QWORD *)a2 + 18);
        a1[19] = *((_QWORD *)a2 + 19);
        a1[20] = *((_QWORD *)a2 + 20);
        a1[21] = *((_QWORD *)a2 + 21);
        a1[22] = *((_QWORD *)a2 + 22);
        v43 = *((_QWORD *)a2 + 24);
        v44 = *((_QWORD *)a2 + 23);
        v41 = *((_QWORD *)a2 + 26);
        v42 = *((_QWORD *)a2 + 25);
        v39 = *((_QWORD *)a2 + 28);
        v40 = *((_QWORD *)a2 + 27);
        v37 = *((_QWORD *)a2 + 30);
        v38 = *((_QWORD *)a2 + 29);
        v36 = *((_QWORD *)a2 + 31);
        v48 = *((_QWORD *)a2 + 33);
        v50 = *((_QWORD *)a2 + 32);
        v46 = *((_QWORD *)a2 + 35);
        v47 = *((_QWORD *)a2 + 34);
        v8 = *((_QWORD *)a2 + 37);
        v45 = *((_QWORD *)a2 + 36);
        v9 = *((_QWORD *)a2 + 38);
        v10 = *((_QWORD *)a2 + 39);
        v11 = *((_QWORD *)a2 + 40);
        v12 = *((_QWORD *)a2 + 41);
        v13 = *((_QWORD *)a2 + 42);
        v35 = *((_WORD *)a2 + 172);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A58943DC(v44, v43, v42, v41, v40, v39, v38, v37, v36, v50, v48, v47, v46, v45, v8, v9, v10, v11, v12,
          v13,
          v35);
        a1[23] = v44;
        a1[24] = v43;
        a1[25] = v42;
        a1[26] = v41;
        a1[27] = v40;
        a1[28] = v39;
        a1[29] = v38;
        a1[30] = v37;
        a1[31] = v36;
        a1[32] = v50;
        a1[33] = v48;
        a1[34] = v47;
        a1[35] = v46;
        a1[36] = v45;
        a1[37] = v8;
        a1[38] = v9;
        a1[39] = v10;
        a1[40] = v11;
        a1[41] = v12;
        a1[42] = v13;
        *((_WORD *)a1 + 172) = v35;
        goto LABEL_22;
      case 1:
        *a1 = *(_QWORD *)a2;
        v14 = type metadata accessor for UnauthenticatedStateWithTasks();
        v15 = *(int *)(v14 + 20);
        v16 = (char *)a1 + v15;
        v17 = &a2[v15];
        v18 = type metadata accessor for UnauthenticatedState();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
            *(_QWORD *)v16 = *(_QWORD *)v17;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            swift_storeEnumTagMultiPayload();
            break;
          case 2u:
            v51 = v14;
            *(_QWORD *)v16 = *(_QWORD *)v17;
            v16[8] = v17[8];
            *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
            v19 = *(int *)(type metadata accessor for Authenticator() + 28);
            v20 = &v16[v19];
            v21 = &v17[v19];
            v22 = (int *)type metadata accessor for AuthenticationTask();
            v49 = *((_QWORD *)v22 - 1);
            v23 = *(unsigned int (**)(char *, uint64_t, int *))(v49 + 48);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            if (v23(v21, 1, v22))
            {
              v24 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
              memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
            }
            else
            {
              v25 = *((_QWORD *)v21 + 3);
              *((_QWORD *)v20 + 3) = v25;
              *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
              (**(void (***)(char *, char *))(v25 - 8))(v20, v21);
              v26 = *((_QWORD *)v21 + 5);
              v27 = *((_QWORD *)v21 + 6);
              sub_1A585C524(v26, v27);
              *((_QWORD *)v20 + 5) = v26;
              *((_QWORD *)v20 + 6) = v27;
              v28 = v22[5];
              v29 = &v20[v28];
              v30 = &v21[v28];
              v31 = sub_1A594A764();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
              v32 = _s6LoggerVMa_0();
              *(_QWORD *)&v29[*(int *)(v32 + 20)] = *(_QWORD *)&v30[*(int *)(v32 + 20)];
              v20[v22[6]] = v21[v22[6]];
              *(_QWORD *)&v20[v22[7]] = *(_QWORD *)&v21[v22[7]];
              v20[v22[8]] = v21[v22[8]];
              v33 = *(void (**)(char *, _QWORD, uint64_t, int *))(v49 + 56);
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v33(v20, 0, 1, v22);
            }
            v14 = v51;
            swift_storeEnumTagMultiPayload();
            break;
          case 4u:
          case 5u:
          case 6u:
          case 8u:
            *(_QWORD *)v16 = *(_QWORD *)v17;
            *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
            *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
            *((_QWORD *)v16 + 3) = *((_QWORD *)v17 + 3);
            *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
            *((_QWORD *)v16 + 5) = *((_QWORD *)v17 + 5);
            *((_QWORD *)v16 + 6) = *((_QWORD *)v17 + 6);
            *((_QWORD *)v16 + 7) = *((_QWORD *)v17 + 7);
            *((_QWORD *)v16 + 8) = *((_QWORD *)v17 + 8);
            *((_QWORD *)v16 + 9) = *((_QWORD *)v17 + 9);
            *((_QWORD *)v16 + 10) = *((_QWORD *)v17 + 10);
            *((_QWORD *)v16 + 11) = *((_QWORD *)v17 + 11);
            *((_QWORD *)v16 + 12) = *((_QWORD *)v17 + 12);
            *((_QWORD *)v16 + 13) = *((_QWORD *)v17 + 13);
            *((_QWORD *)v16 + 14) = *((_QWORD *)v17 + 14);
            *((_QWORD *)v16 + 15) = *((_QWORD *)v17 + 15);
            *((_QWORD *)v16 + 16) = *((_QWORD *)v17 + 16);
            *((_QWORD *)v16 + 17) = *((_QWORD *)v17 + 17);
            *((_QWORD *)v16 + 18) = *((_QWORD *)v17 + 18);
            *((_QWORD *)v16 + 19) = *((_QWORD *)v17 + 19);
            *((_QWORD *)v16 + 20) = *((_QWORD *)v17 + 20);
            *((_QWORD *)v16 + 21) = *((_QWORD *)v17 + 21);
            *((_QWORD *)v16 + 22) = *((_QWORD *)v17 + 22);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            swift_storeEnumTagMultiPayload();
            break;
          case 7u:
            *(_DWORD *)v16 = *(_DWORD *)v17;
            *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
            *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
            *((_QWORD *)v16 + 3) = *((_QWORD *)v17 + 3);
            *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
            *((_QWORD *)v16 + 5) = *((_QWORD *)v17 + 5);
            *((_QWORD *)v16 + 6) = *((_QWORD *)v17 + 6);
            *((_QWORD *)v16 + 7) = *((_QWORD *)v17 + 7);
            *((_QWORD *)v16 + 8) = *((_QWORD *)v17 + 8);
            *((_QWORD *)v16 + 9) = *((_QWORD *)v17 + 9);
            *((_QWORD *)v16 + 10) = *((_QWORD *)v17 + 10);
            *((_QWORD *)v16 + 11) = *((_QWORD *)v17 + 11);
            *((_QWORD *)v16 + 12) = *((_QWORD *)v17 + 12);
            *((_QWORD *)v16 + 13) = *((_QWORD *)v17 + 13);
            *((_QWORD *)v16 + 14) = *((_QWORD *)v17 + 14);
            *((_QWORD *)v16 + 15) = *((_QWORD *)v17 + 15);
            *((_QWORD *)v16 + 16) = *((_QWORD *)v17 + 16);
            *((_QWORD *)v16 + 17) = *((_QWORD *)v17 + 17);
            *((_QWORD *)v16 + 18) = *((_QWORD *)v17 + 18);
            *((_QWORD *)v16 + 19) = *((_QWORD *)v17 + 19);
            *((_QWORD *)v16 + 20) = *((_QWORD *)v17 + 20);
            *((_QWORD *)v16 + 21) = *((_QWORD *)v17 + 21);
            *((_QWORD *)v16 + 22) = *((_QWORD *)v17 + 22);
            *((_QWORD *)v16 + 23) = *((_QWORD *)v17 + 23);
            *((_QWORD *)v16 + 24) = *((_QWORD *)v17 + 24);
            *((_QWORD *)v16 + 25) = *((_QWORD *)v17 + 25);
            *((_QWORD *)v16 + 26) = *((_QWORD *)v17 + 26);
            *((_QWORD *)v16 + 27) = *((_QWORD *)v17 + 27);
            *((_QWORD *)v16 + 28) = *((_QWORD *)v17 + 28);
            *((_QWORD *)v16 + 29) = *((_QWORD *)v17 + 29);
            *((_QWORD *)v16 + 30) = *((_QWORD *)v17 + 30);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            swift_storeEnumTagMultiPayload();
            break;
          case 9u:
            if ((unint64_t)(*((_QWORD *)v17 + 1) - 1) >= 0xA)
            {
              *(_QWORD *)v16 = *(_QWORD *)v17;
              *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            }
            else
            {
              *(_OWORD *)v16 = *(_OWORD *)v17;
            }
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
            break;
        }
        *(_QWORD *)((char *)a1 + *(int *)(v14 + 24)) = *(_QWORD *)&a2[*(int *)(v14 + 24)];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 0:
        v7 = sub_1A594AA40();
        (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_22:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *initializeWithTake for ConnectionState(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  char *v26;
  uint64_t v27;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v8 = type metadata accessor for UnauthenticatedStateWithTasks();
    v9 = *(int *)(v8 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for UnauthenticatedState();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      v10[8] = v11[8];
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      v13 = *(int *)(type metadata accessor for Authenticator() + 28);
      v14 = &v10[v13];
      v15 = &v11[v13];
      v16 = (int *)type metadata accessor for AuthenticationTask();
      v17 = *((_QWORD *)v16 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v19 = *((_OWORD *)v15 + 1);
        *(_OWORD *)v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v19;
        *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
        *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
        v20 = v16[5];
        v27 = v17;
        v21 = &v14[v20];
        v25 = &v15[v20];
        v26 = &v14[v20];
        v22 = sub_1A594A764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, v25, v22);
        v23 = _s6LoggerVMa_0();
        *(_QWORD *)&v26[*(int *)(v23 + 20)] = *(_QWORD *)&v25[*(int *)(v23 + 20)];
        v14[v16[6]] = v15[v16[6]];
        *(_QWORD *)&v14[v16[7]] = *(_QWORD *)&v15[v16[7]];
        v14[v16[8]] = v15[v16[8]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v14, 0, 1, v16);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    *(_QWORD *)((char *)a1 + *(int *)(v8 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 24));
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_1A594AA40();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithTake for ConnectionState(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  char *v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v8 = type metadata accessor for UnauthenticatedStateWithTasks();
      v9 = *(int *)(v8 + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for UnauthenticatedState();
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(_QWORD *)v10 = *(_QWORD *)v11;
        v10[8] = v11[8];
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        v13 = *(int *)(type metadata accessor for Authenticator() + 28);
        v14 = &v10[v13];
        v15 = &v11[v13];
        v16 = (int *)type metadata accessor for AuthenticationTask();
        v17 = *((_QWORD *)v16 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          v19 = *((_OWORD *)v15 + 1);
          *(_OWORD *)v14 = *(_OWORD *)v15;
          *((_OWORD *)v14 + 1) = v19;
          *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
          *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
          v20 = v16[5];
          v27 = v17;
          v21 = &v14[v20];
          v25 = &v15[v20];
          v26 = &v14[v20];
          v22 = sub_1A594A764();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, v25, v22);
          v23 = _s6LoggerVMa_0();
          *(_QWORD *)&v26[*(int *)(v23 + 20)] = *(_QWORD *)&v25[*(int *)(v23 + 20)];
          v14[v16[6]] = v15[v16[6]];
          *(_QWORD *)&v14[v16[7]] = *(_QWORD *)&v15[v16[7]];
          v14[v16[8]] = v15[v16[8]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v14, 0, 1, v16);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      *(_QWORD *)((char *)a1 + *(int *)(v8 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 24));
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_1A594AA40();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1A58B4EC0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A594AA40();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for UnauthenticatedStateWithTasks();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ConnectionState.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1A58B4FA0 + 4 * byte_1A59DEC67[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1A58B4FD4 + 4 * byte_1A59DEC62[v4]))();
}

uint64_t sub_1A58B4FD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58B4FDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58B4FE4);
  return result;
}

uint64_t sub_1A58B4FF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58B4FF8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1A58B4FFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58B5004(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionState.Kind()
{
  return &type metadata for ConnectionState.Kind;
}

unint64_t destroy for AuthenticatedState(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 184);
  v3 = *(_QWORD *)(a1 + 192);
  a1 += 184;
  return sub_1A5891FDC(v2, v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_WORD *)(a1 + 160));
}

uint64_t initializeWithCopy for AuthenticatedState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  v10 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v10;
  v11 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v11;
  v12 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v12;
  v13 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v13;
  v14 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v30 = *(_QWORD *)(a2 + 192);
  v31 = v14;
  v28 = *(_QWORD *)(a2 + 208);
  v29 = *(_QWORD *)(a2 + 200);
  v26 = *(_QWORD *)(a2 + 224);
  v27 = *(_QWORD *)(a2 + 216);
  v24 = *(_QWORD *)(a2 + 240);
  v25 = *(_QWORD *)(a2 + 232);
  v23 = *(_QWORD *)(a2 + 248);
  v35 = *(_QWORD *)(a2 + 264);
  v36 = *(_QWORD *)(a2 + 256);
  v33 = *(_QWORD *)(a2 + 280);
  v34 = *(_QWORD *)(a2 + 272);
  v15 = *(_QWORD *)(a2 + 296);
  v32 = *(_QWORD *)(a2 + 288);
  v16 = *(_QWORD *)(a2 + 304);
  v17 = *(_QWORD *)(a2 + 312);
  v18 = *(_QWORD *)(a2 + 320);
  v19 = *(_QWORD *)(a2 + 328);
  v20 = *(_QWORD *)(a2 + 336);
  v21 = *(_WORD *)(a2 + 344);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A58943DC(v31, v30, v29, v28, v27, v26, v25, v24, v23, v36, v35, v34, v33, v32, v15, v16, v17, v18, v19, v20, v21);
  *(_QWORD *)(a1 + 184) = v31;
  *(_QWORD *)(a1 + 192) = v30;
  *(_QWORD *)(a1 + 200) = v29;
  *(_QWORD *)(a1 + 208) = v28;
  *(_QWORD *)(a1 + 216) = v27;
  *(_QWORD *)(a1 + 224) = v26;
  *(_QWORD *)(a1 + 232) = v25;
  *(_QWORD *)(a1 + 240) = v24;
  *(_QWORD *)(a1 + 248) = v23;
  *(_QWORD *)(a1 + 256) = v36;
  *(_QWORD *)(a1 + 264) = v35;
  *(_QWORD *)(a1 + 272) = v34;
  *(_QWORD *)(a1 + 280) = v33;
  *(_QWORD *)(a1 + 288) = v32;
  *(_QWORD *)(a1 + 296) = v15;
  *(_QWORD *)(a1 + 304) = v16;
  *(_QWORD *)(a1 + 312) = v17;
  *(_QWORD *)(a1 + 320) = v18;
  *(_QWORD *)(a1 + 328) = v19;
  *(_QWORD *)(a1 + 336) = v20;
  *(_WORD *)(a1 + 344) = v21;
  return a1;
}

uint64_t assignWithCopy for AuthenticatedState(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int16 v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = v2[1];
  *(_QWORD *)(a1 + 16) = v2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = v2[3];
  *(_QWORD *)(a1 + 32) = v2[4];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = v2[5];
  *(_QWORD *)(a1 + 48) = v2[6];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = v2[7];
  *(_QWORD *)(a1 + 64) = v2[8];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = v2[9];
  *(_QWORD *)(a1 + 80) = v2[10];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = v2[11];
  *(_QWORD *)(a1 + 96) = v2[12];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = v2[13];
  *(_QWORD *)(a1 + 112) = v2[14];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = v2[15];
  *(_QWORD *)(a1 + 128) = v2[16];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = v2[17];
  *(_QWORD *)(a1 + 144) = v2[18];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = v2[19];
  *(_QWORD *)(a1 + 160) = v2[20];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = v2[21];
  *(_QWORD *)(a1 + 176) = v2[22];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = v2[23];
  v5 = v2[24];
  v6 = v2[25];
  v7 = v2[26];
  v8 = v2[27];
  v9 = v2[28];
  v10 = v2[29];
  v11 = v2[30];
  v29 = v2[31];
  v30 = v2[32];
  v31 = v2[33];
  v32 = v2[34];
  v33 = v2[35];
  v34 = v2[36];
  v35 = v2[37];
  v36 = v2[38];
  v37 = v2[39];
  v38 = v2[40];
  v39 = v2[41];
  v40 = v2[42];
  LOWORD(v2) = *((_WORD *)v2 + 172);
  sub_1A58943DC(v4, v5, v6, v7, v8, v9, v10, v11, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    (unsigned __int16)v2);
  v12 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 184) = v4;
  v13 = *(_QWORD *)(a1 + 192);
  v14 = *(_QWORD *)(a1 + 200);
  *(_QWORD *)(a1 + 192) = v5;
  *(_QWORD *)(a1 + 200) = v6;
  v15 = *(_QWORD *)(a1 + 208);
  v16 = *(_QWORD *)(a1 + 216);
  *(_QWORD *)(a1 + 208) = v7;
  *(_QWORD *)(a1 + 216) = v8;
  v17 = *(_QWORD *)(a1 + 224);
  v18 = *(_QWORD *)(a1 + 232);
  *(_QWORD *)(a1 + 224) = v9;
  *(_QWORD *)(a1 + 232) = v10;
  v19 = *(_QWORD *)(a1 + 240);
  v20 = *(_OWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 240) = v11;
  *(_QWORD *)(a1 + 248) = v29;
  *(_QWORD *)(a1 + 256) = v30;
  v21 = *(_OWORD *)(a1 + 264);
  v22 = *(_OWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 264) = v31;
  *(_QWORD *)(a1 + 272) = v32;
  *(_QWORD *)(a1 + 280) = v33;
  *(_QWORD *)(a1 + 288) = v34;
  v23 = *(_OWORD *)(a1 + 296);
  v24 = *(_OWORD *)(a1 + 312);
  *(_QWORD *)(a1 + 296) = v35;
  *(_QWORD *)(a1 + 304) = v36;
  *(_QWORD *)(a1 + 312) = v37;
  v25 = *(_QWORD *)(a1 + 328);
  v26 = *(_QWORD *)(a1 + 336);
  *(_QWORD *)(a1 + 320) = v38;
  *(_QWORD *)(a1 + 328) = v39;
  *(_QWORD *)(a1 + 336) = v40;
  v27 = *(_WORD *)(a1 + 344);
  *(_WORD *)(a1 + 344) = (_WORD)v2;
  sub_1A5891FDC(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, DWORD2(v21), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    v26,
    v27);
  return a1;
}

void *__swift_memcpy346_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x15AuLL);
}

uint64_t assignWithTake for AuthenticatedState(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int16 v33;
  __int128 v34;
  __int128 v35;

  v4 = (__int128 *)(a1 + 264);
  v5 = (__int128 *)(a2 + 264);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_WORD *)(a2 + 344);
  v18 = *(_QWORD *)(a1 + 184);
  v19 = *(_QWORD *)(a1 + 192);
  v20 = *(_QWORD *)(a1 + 200);
  v21 = *(_QWORD *)(a1 + 208);
  v22 = *(_QWORD *)(a1 + 216);
  v23 = *(_QWORD *)(a1 + 224);
  v24 = *(_QWORD *)(a1 + 232);
  v25 = *(_QWORD *)(a1 + 240);
  v26 = *(_OWORD *)(a1 + 248);
  v27 = *v4;
  v28 = v4[1];
  v29 = v4[2];
  v30 = v4[3];
  v31 = *((_QWORD *)v4 + 8);
  v32 = *(_QWORD *)(a1 + 336);
  v33 = *(_WORD *)(a1 + 344);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v34 = v5[1];
  *v4 = *v5;
  v4[1] = v34;
  v35 = v5[3];
  v4[2] = v5[2];
  v4[3] = v35;
  v4[4] = v5[4];
  *(_WORD *)(a1 + 344) = v17;
  sub_1A5891FDC(v18, v19, v20, v21, v22, v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27, DWORD2(v27), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31,
    v32,
    v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticatedState(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 346))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticatedState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 344) = 0;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 346) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 346) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticatedState()
{
  return &type metadata for AuthenticatedState;
}

uint64_t destroy for MailboxSelectionFailure(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
  {
    v3 = *(_QWORD *)(a1 + 16);
    if ((~v3 & 0xF000000000000007) != 0)
      sub_1A5862B94(v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MailboxSelectionFailure(uint64_t a1, uint64_t a2)
{
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = (unint64_t *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v5)
  {
    v6 = *v4;
    if ((~v6 & 0xF000000000000007) != 0)
      sub_1A5862284(v6);
    v7 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v5;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
    *(_QWORD *)(a1 + 32) = v4[2];
  }
  return a1;
}

uint64_t assignWithCopy for MailboxSelectionFailure(uint64_t a1, uint64_t a2)
{
  unint64_t *v4;
  unint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  unint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = (unint64_t *)(a1 + 16);
  v5 = (unint64_t *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      v7 = *v5;
      v8 = *v5 & 0xF000000000000007;
      if ((~*v4 & 0xF000000000000007) != 0)
      {
        if (v8 == 0xF000000000000007)
        {
          sub_1A56F4088((unint64_t *)(a1 + 16));
          *v4 = *v5;
        }
        else
        {
          sub_1A5862284(*v5);
          v12 = *v4;
          *v4 = v7;
          sub_1A5862B94(v12);
        }
      }
      else
      {
        if (v8 != 0xF000000000000007)
          sub_1A5862284(*v5);
        *v4 = v7;
      }
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A58B5AFC((unint64_t *)(a1 + 16));
      v10 = *(_QWORD *)(a2 + 32);
      *(_OWORD *)v4 = *(_OWORD *)v5;
      *(_QWORD *)(a1 + 32) = v10;
    }
  }
  else if (v6)
  {
    v9 = *v5;
    if ((~*v5 & 0xF000000000000007) != 0)
      sub_1A5862284(*v5);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v11 = *(_OWORD *)v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_OWORD *)v4 = v11;
  }
  return a1;
}

unint64_t *sub_1A58B5AFC(unint64_t *a1)
{
  destroy for ResponseText(a1);
  return a1;
}

__n128 __swift_memcpy40_8_4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MailboxSelectionFailure(uint64_t a1, uint64_t a2)
{
  unint64_t *v4;
  unint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = (unint64_t *)(a1 + 16);
  v5 = (unint64_t *)(a2 + 16);
  if (*(_QWORD *)(a1 + 32))
  {
    v6 = *(_QWORD *)(a2 + 32);
    if (v6)
    {
      v7 = *v4;
      v8 = *v5;
      if ((~*v4 & 0xF000000000000007) != 0)
      {
        if ((~v8 & 0xF000000000000007) != 0)
        {
          *v4 = v8;
          sub_1A5862B94(v7);
          goto LABEL_10;
        }
        sub_1A56F4088((unint64_t *)(a1 + 16));
      }
      *v4 = v8;
LABEL_10:
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1A58B5AFC((unint64_t *)(a1 + 16));
  }
  *(_OWORD *)v4 = *(_OWORD *)v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for MailboxSelectionFailure()
{
  return &type metadata for MailboxSelectionFailure;
}

uint64_t sub_1A58B5C1C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t destroy for AuthenticatedState.MailboxSelection(uint64_t a1)
{
  return sub_1A58B5C44(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
}

uint64_t sub_1A58B5C44(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s15IMAP2Connection18AuthenticatedStateV16MailboxSelectionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_DWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 12);
  sub_1A58B5C1C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 12) = v5;
  return a1;
}

uint64_t assignWithCopy for AuthenticatedState.MailboxSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_DWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 12);
  sub_1A58B5C1C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v5;
  sub_1A58B5C44(v6, v7, v8);
  return a1;
}

_QWORD *__swift_memcpy13_8_2(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)((char *)result + 5) = *(uint64_t *)((char *)a2 + 5);
  *result = v2;
  return result;
}

uint64_t assignWithTake for AuthenticatedState.MailboxSelection(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *a2;
  v4 = *((_DWORD *)a2 + 2);
  v5 = *((_BYTE *)a2 + 12);
  v6 = *(_QWORD *)a1;
  v7 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v5;
  sub_1A58B5C44(v6, v7, v8);
  return a1;
}

ValueMetadata *type metadata accessor for AuthenticatedState.MailboxSelection()
{
  return &type metadata for AuthenticatedState.MailboxSelection;
}

unint64_t destroy for AuthenticatedState.Selection(uint64_t a1)
{
  return sub_1A5891FDC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_WORD *)(a1 + 160));
}

uint64_t initializeWithCopy for AuthenticatedState.Selection(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int16 v24;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_WORD *)(a2 + 160);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)a2;
  v11 = *(_QWORD *)(a2 + 8);
  sub_1A58943DC(*(_QWORD *)a2, v11, v3, v4, v5, v6, v7, v8, v9, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24);
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v11;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_WORD *)(a1 + 160) = v24;
  return a1;
}

uint64_t assignWithCopy for AuthenticatedState.Selection(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int16 v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int16 v40;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v29 = *(_QWORD *)(a2 + 72);
  v30 = *(_QWORD *)(a2 + 80);
  v31 = *(_QWORD *)(a2 + 88);
  v32 = *(_QWORD *)(a2 + 96);
  v33 = *(_QWORD *)(a2 + 104);
  v34 = *(_QWORD *)(a2 + 112);
  v35 = *(_QWORD *)(a2 + 120);
  v36 = *(_QWORD *)(a2 + 128);
  v37 = *(_QWORD *)(a2 + 136);
  v38 = *(_QWORD *)(a2 + 144);
  v39 = *(_QWORD *)(a2 + 152);
  v40 = *(_WORD *)(a2 + 160);
  sub_1A58943DC(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38,
    v39,
    v40);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v29;
  *(_QWORD *)(a1 + 80) = v30;
  *(_QWORD *)(a1 + 88) = v31;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v32;
  *(_QWORD *)(a1 + 104) = v33;
  *(_QWORD *)(a1 + 112) = v34;
  *(_QWORD *)(a1 + 120) = v35;
  v24 = *(_OWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v36;
  *(_QWORD *)(a1 + 136) = v37;
  v25 = *(_QWORD *)(a1 + 144);
  v26 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = v38;
  *(_QWORD *)(a1 + 152) = v39;
  v27 = *(_WORD *)(a1 + 160);
  *(_WORD *)(a1 + 160) = v40;
  sub_1A5891FDC(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, DWORD2(v21), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    v26,
    v27);
  return a1;
}

__n128 __swift_memcpy162_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_WORD *)(a1 + 160) = *((_WORD *)a2 + 80);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for AuthenticatedState.Selection(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v3 = *(_WORD *)(a2 + 160);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a1 + 128);
  v17 = *(_QWORD *)(a1 + 144);
  v18 = *(_QWORD *)(a1 + 152);
  v19 = *(_WORD *)(a1 + 160);
  v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v20;
  v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v21;
  v22 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v22;
  v23 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v23;
  v24 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v24;
  *(_WORD *)(a1 + 160) = v3;
  sub_1A5891FDC(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, DWORD2(v13), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    v18,
    v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticatedState.Selection(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 162))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = (*(_QWORD *)(a1 + 72) >> 2) & 0x80000000 | (*(_QWORD *)(a1 + 48) >> 33);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for AuthenticatedState.Selection(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 152) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_WORD *)(a1 + 160) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 162) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 48) = (unint64_t)-a2 << 33;
      *(_QWORD *)(a1 + 56) = 0;
      *(_QWORD *)(a1 + 64) = 0;
      *(_QWORD *)(a1 + 72) = 0x200000000;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_WORD *)(a1 + 160) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 162) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

int8x16_t sub_1A58B6244(uint64_t a1, __int16 a2)
{
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  int8x16_t result;

  v2 = *(_QWORD *)(a1 + 72) & 0x1FFFFFFFFLL;
  v3 = *(_QWORD *)(a1 + 88) & 0x1E101FFLL;
  v4 = *(_WORD *)(a1 + 160) & 0x1FF | (a2 << 14);
  *(_QWORD *)(a1 + 48) &= 0x1FFFFFFFFuLL;
  *(_QWORD *)(a1 + 72) = v2;
  *(_QWORD *)(a1 + 88) = v3;
  *(int8x16_t *)(a1 + 112) = vandq_s8(*(int8x16_t *)(a1 + 112), (int8x16_t)xmmword_1A59AC060);
  result = vandq_s8(*(int8x16_t *)(a1 + 136), (int8x16_t)vdupq_n_s64(0x1FFFFFFFFuLL));
  *(int8x16_t *)(a1 + 136) = result;
  *(_WORD *)(a1 + 160) = v4;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticatedState.Selection()
{
  return &type metadata for AuthenticatedState.Selection;
}

uint64_t sub_1A58B62BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A58B8280();
  result = sub_1A594BBD4();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A58DABE0(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1A58B6350(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  uint64_t v12;
  void *v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char v45;
  uint64_t v46;
  int v47;
  char v48;
  int v49;
  char v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  _QWORD v55[44];
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  char v61;
  uint64_t v62;
  int v63;
  char v64;
  int v65;
  char v66;
  uint64_t v67;
  char v68;
  char v69;
  char v70;
  _QWORD v71[44];
  _BYTE v72[176];

  v40 = a2;
  v3 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(a1, (uint64_t)v5, v6);
  if (swift_getEnumCaseMultiPayload() != 2)
    return sub_1A55034FC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  memcpy(v71, v5, 0x15AuLL);
  sub_1A5891E0C((__int128 *)&v71[23], (uint64_t)v72);
  if (sub_1A5891E48((uint64_t)v72) == 2)
  {
    v7 = sub_1A5892220((uint64_t)v72);
    v28 = *(_QWORD *)v7;
    v27 = *(_DWORD *)(v7 + 8);
    v8 = *(_QWORD *)(v7 + 16);
    v25 = *(_QWORD *)(v7 + 24);
    v26 = v8;
    LODWORD(v8) = *(_DWORD *)(v7 + 32);
    v23 = *(unsigned __int8 *)(v7 + 36);
    v24 = v8;
    v22 = *(_QWORD *)(v7 + 40);
    LODWORD(v8) = *(_DWORD *)(v7 + 48);
    v20 = *(unsigned __int8 *)(v7 + 52);
    v21 = v8;
    LODWORD(v8) = *(_DWORD *)(v7 + 56);
    v18 = *(unsigned __int8 *)(v7 + 60);
    v19 = v8;
    v17 = *(_QWORD *)(v7 + 64);
    LODWORD(v8) = *(unsigned __int8 *)(v7 + 72);
    v15 = *(unsigned __int8 *)(v7 + 73);
    v16 = v8;
    v14 = *(unsigned __int8 *)(v7 + 74);
    v29 = v71[0];
    v31 = v71[2];
    v32 = v71[4];
    v35 = v3;
    v33 = v71[6];
    v34 = v71[8];
    v13 = (void *)a1;
    v37 = v71[16];
    v38 = v71[18];
    v39 = v71[20];
    v30 = &v71[23];
    v36 = v71[22];
    sub_1A5894370((uint64_t)&v71[23], (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A58943DC);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v9 = v13;
    sub_1A55034FC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    v56 = v28;
    v57 = v27;
    v58 = v26;
    v59 = v25;
    v60 = v24;
    v61 = v23;
    v62 = v22;
    v63 = v21;
    v64 = v20;
    v65 = v19;
    v66 = v18;
    v67 = v17;
    v68 = v16;
    v69 = v15;
    v70 = v14;
    sub_1A58E43CC(v40);
    *(_QWORD *)&v41 = v56;
    DWORD2(v41) = v57;
    v42 = v58;
    v43 = v59;
    v44 = v60;
    v45 = v61;
    v46 = v62;
    v47 = v63;
    v48 = v64;
    v49 = v65;
    v50 = v66;
    v51 = v67;
    v52 = v68;
    v53 = v69;
    v54 = v70;
    sub_1A58B7C94((uint64_t)&v41);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5894370((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1A5891FDC);
    v55[0] = v29;
    *(_OWORD *)&v55[15] = *(_OWORD *)&v71[15];
    *(_OWORD *)&v55[17] = *(_OWORD *)&v71[17];
    *(_OWORD *)&v55[19] = *(_OWORD *)&v71[19];
    *(_OWORD *)&v55[21] = *(_OWORD *)&v71[21];
    *(_OWORD *)&v55[7] = *(_OWORD *)&v71[7];
    *(_OWORD *)&v55[9] = *(_OWORD *)&v71[9];
    *(_OWORD *)&v55[11] = *(_OWORD *)&v71[11];
    *(_OWORD *)&v55[13] = *(_OWORD *)&v71[13];
    *(_OWORD *)&v55[1] = *(_OWORD *)&v71[1];
    *(_OWORD *)&v55[3] = *(_OWORD *)&v71[3];
    *(_OWORD *)&v55[5] = *(_OWORD *)&v71[5];
    sub_1A5891E0C(&v41, (uint64_t)&v55[23]);
    sub_1A58B8000((uint64_t)v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v9, v55, 0x15AuLL);
    swift_storeEnumTagMultiPayload();
    v10 = v55;
  }
  else
  {
    v10 = v71;
  }
  return sub_1A5891E54((uint64_t)v10);
}

uint64_t sub_1A58B67E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  _BYTE v9[8];
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A58B7F70();
  result = sub_1A594BBD4();
  v10 = result;
  if (v2)
  {
    v4 = (char *)(a1 + 56);
    do
    {
      v5 = *((_QWORD *)v4 - 3);
      v6 = *((_QWORD *)v4 - 2);
      v7 = *((_QWORD *)v4 - 1);
      v8 = *v4;
      v4 += 32;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A58DAE08((uint64_t)v9, v5, v6, v7, v8);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_1A58B688C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;

  v61 = a6;
  v55 = a5;
  v60 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v60);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v53 - v16;
  v18 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v53 - v22;
  v58 = v27;
  v59 = a2;
  v57 = v24;
  if (a2 < 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v24 + 16))(v20, a4, v23, v25);
    sub_1A55034B8(a4, (uint64_t)v14, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_bridgeObjectRetain_n();
    v40 = sub_1A594A74C();
    v41 = sub_1A594C030();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc();
      v56 = a3;
      v43 = v42;
      v55 = swift_slowAlloc();
      v64 = v55;
      *(_DWORD *)v43 = 68158723;
      LODWORD(v62) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v43 + 8) = 256;
      v44 = &v14[*(int *)(v12 + 20)];
      LOBYTE(v62) = *v44;
      sub_1A594C3CC();
      *(_WORD *)(v43 + 11) = 2082;
      v45 = ConnectionID.debugDescription.getter(*((unsigned int *)v44 + 1));
      v62 = sub_1A589167C(v45, v46, &v64);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v14, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      *(_WORD *)(v43 + 21) = 2160;
      v62 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v43 + 31) = 2085;
      v62 = a1;
      v47 = v59;
      v63 = v59;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v48 = sub_1A594B4A8();
      v62 = sub_1A589167C(v48, v49, &v64);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v40, v41, "[%.*hhx-%{public}s] Mailbox selection: Requesting mailbox status '%{sensitive,mask.mailbox}s'.", (uint8_t *)v43, 0x29u);
      v50 = v55;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v50, -1, -1);
      a3 = v56;
      MEMORY[0x1A85B1964](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v20, v58);
    }
    else
    {
      sub_1A55034FC((uint64_t)v14, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v20, v58);
      v47 = v59;
    }
    *(_QWORD *)v11 = a1;
    *((_DWORD *)v11 + 2) = v47;
    *((_QWORD *)v11 + 2) = a3;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    v56 = a3;
    (*(void (**)(char *, uint64_t, uint64_t, double))(v24 + 16))((char *)&v53 - v22, a4, v23, v25);
    sub_1A55034B8(a4, (uint64_t)v17, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_bridgeObjectRetain_n();
    v28 = sub_1A594A74C();
    v29 = sub_1A594C030();
    v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      v31 = swift_slowAlloc();
      v54 = v30;
      v32 = v31;
      v53 = swift_slowAlloc();
      v64 = v53;
      *(_DWORD *)v32 = 68158723;
      LODWORD(v62) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v32 + 8) = 256;
      v33 = &v17[*(int *)(v12 + 20)];
      LOBYTE(v62) = *v33;
      sub_1A594C3CC();
      *(_WORD *)(v32 + 11) = 2082;
      v34 = ConnectionID.debugDescription.getter(*((unsigned int *)v33 + 1));
      v62 = sub_1A589167C(v34, v35, &v64);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v17, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      *(_WORD *)(v32 + 21) = 2160;
      v62 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v32 + 31) = 2085;
      v62 = a1;
      v36 = v59;
      v63 = v59;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v37 = sub_1A594B4A8();
      v62 = sub_1A589167C(v37, v38, &v64);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A58B7BF8(a1, v36);
      sub_1A58B7BF8(a1, v36);
      _os_log_impl(&dword_1A4F90000, v28, (os_log_type_t)v54, "[%.*hhx-%{public}s] Selecting mailbox '%{sensitive,mask.mailbox}s'.", (uint8_t *)v32, 0x29u);
      v39 = v53;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v39, -1, -1);
      MEMORY[0x1A85B1964](v32, -1, -1);
    }
    else
    {
      sub_1A55034FC((uint64_t)v17, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      v36 = v59;
      sub_1A58B7BF8(a1, v59);
      sub_1A58B7BF8(a1, v36);
    }

    (*(void (**)(char *, uint64_t))(v57 + 8))(v26, v58);
    *(_QWORD *)v11 = a1;
    *((_DWORD *)v11 + 2) = v36;
    *((_QWORD *)v11 + 2) = v55;
    swift_storeEnumTagMultiPayload();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v51 = CommandConnection.send(_:)((uint64_t)v11);
  CommandConnection.flush()();
  sub_1A55034FC((uint64_t)v11, type metadata accessor for ClientCommand);
  return v51;
}

uint64_t sub_1A58B6F80(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1A58B7698(a1, a2, a3, sub_1A58B688C, (uint64_t)&unk_1E4E731C0);
}

uint64_t sub_1A58B6F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;

  v61 = a6;
  v55 = a5;
  v60 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v60);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v53 - v16;
  v18 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v53 - v22;
  v58 = v27;
  v59 = a2;
  v57 = v24;
  if (a2 < 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v24 + 16))(v20, a4, v23, v25);
    sub_1A55034B8(a4, (uint64_t)v14, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_bridgeObjectRetain_n();
    v40 = sub_1A594A74C();
    v41 = sub_1A594C030();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc();
      v56 = a3;
      v43 = v42;
      v55 = swift_slowAlloc();
      v64 = v55;
      *(_DWORD *)v43 = 68158723;
      LODWORD(v62) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v43 + 8) = 256;
      v44 = &v14[*(int *)(v12 + 20)];
      LOBYTE(v62) = *v44;
      sub_1A594C3CC();
      *(_WORD *)(v43 + 11) = 2082;
      v45 = ConnectionID.debugDescription.getter(*((unsigned int *)v44 + 1));
      v62 = sub_1A589167C(v45, v46, &v64);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v14, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      *(_WORD *)(v43 + 21) = 2160;
      v62 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v43 + 31) = 2085;
      v62 = a1;
      v47 = v59;
      v63 = v59;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v48 = sub_1A594B4A8();
      v62 = sub_1A589167C(v48, v49, &v64);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v40, v41, "[%.*hhx-%{public}s] Mailbox selection: Requesting mailbox status '%{sensitive,mask.mailbox}s'.", (uint8_t *)v43, 0x29u);
      v50 = v55;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v50, -1, -1);
      a3 = v56;
      MEMORY[0x1A85B1964](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v20, v58);
    }
    else
    {
      sub_1A55034FC((uint64_t)v14, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v20, v58);
      v47 = v59;
    }
    *(_QWORD *)v11 = a1;
    *((_DWORD *)v11 + 2) = v47;
    *((_QWORD *)v11 + 2) = a3;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    v56 = a3;
    (*(void (**)(char *, uint64_t, uint64_t, double))(v24 + 16))((char *)&v53 - v22, a4, v23, v25);
    sub_1A55034B8(a4, (uint64_t)v17, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_bridgeObjectRetain_n();
    v28 = sub_1A594A74C();
    v29 = sub_1A594C030();
    v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      v31 = swift_slowAlloc();
      v54 = v30;
      v32 = v31;
      v53 = swift_slowAlloc();
      v64 = v53;
      *(_DWORD *)v32 = 68158723;
      LODWORD(v62) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v32 + 8) = 256;
      v33 = &v17[*(int *)(v12 + 20)];
      LOBYTE(v62) = *v33;
      sub_1A594C3CC();
      *(_WORD *)(v32 + 11) = 2082;
      v34 = ConnectionID.debugDescription.getter(*((unsigned int *)v33 + 1));
      v62 = sub_1A589167C(v34, v35, &v64);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v17, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      *(_WORD *)(v32 + 21) = 2160;
      v62 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v32 + 31) = 2085;
      v62 = a1;
      v36 = v59;
      v63 = v59;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v37 = sub_1A594B4A8();
      v62 = sub_1A589167C(v37, v38, &v64);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A58B7BF8(a1, v36);
      sub_1A58B7BF8(a1, v36);
      _os_log_impl(&dword_1A4F90000, v28, (os_log_type_t)v54, "[%.*hhx-%{public}s] Selecting mailbox '%{sensitive,mask.mailbox}s'.", (uint8_t *)v32, 0x29u);
      v39 = v53;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v39, -1, -1);
      MEMORY[0x1A85B1964](v32, -1, -1);
    }
    else
    {
      sub_1A55034FC((uint64_t)v17, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      v36 = v59;
      sub_1A58B7BF8(a1, v59);
      sub_1A58B7BF8(a1, v36);
    }

    (*(void (**)(char *, uint64_t))(v57 + 8))(v26, v58);
    *(_QWORD *)v11 = a1;
    *((_DWORD *)v11 + 2) = v36;
    *((_QWORD *)v11 + 2) = v55;
    swift_storeEnumTagMultiPayload();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v51 = CommandConnection.send(_:)((uint64_t)v11);
  sub_1A55034FC((uint64_t)v11, type metadata accessor for ClientCommand);
  return v51;
}

uint64_t sub_1A58B7684(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1A58B7698(a1, a2, a3, sub_1A58B6F94, (uint64_t)&unk_1E4E731E8);
}

uint64_t sub_1A58B7698(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  __int128 *v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  char v44;
  char v45;
  int v46;
  char v47;
  int v48;
  char v49;
  uint64_t v50;
  int v51;
  char v52;
  char v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  __int128 v75[10];
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87[10];
  _BYTE v88[168];
  _OWORD v89[23];

  v67 = a4;
  v9 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v55 - v13;
  swift_retain_n();
  v15 = sub_1A58B0748();
  sub_1A55034B8((uint64_t)a2, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1A55034FC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v68 = v15;
  v69 = a1;
  sub_1A55034FC((uint64_t)a2, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  v66 = *(_QWORD *)v14;
  v16 = *(_OWORD *)(v14 + 120);
  v17 = *(_OWORD *)(v14 + 152);
  v84 = *(_OWORD *)(v14 + 136);
  v85 = v17;
  v86 = *(_OWORD *)(v14 + 168);
  v18 = *(_OWORD *)(v14 + 56);
  v19 = *(_OWORD *)(v14 + 88);
  v80 = *(_OWORD *)(v14 + 72);
  v81 = v19;
  v82 = *(_OWORD *)(v14 + 104);
  v83 = v16;
  v20 = *(_OWORD *)(v14 + 24);
  v76 = *(_OWORD *)(v14 + 8);
  v77 = v20;
  v78 = *(_OWORD *)(v14 + 40);
  v79 = v18;
  sub_1A5891E0C((__int128 *)(v14 + 184), (uint64_t)v87);
  sub_1A5891E0C(v87, (uint64_t)v88);
  if (sub_1A5891E48((uint64_t)v88) == 1)
  {
    v21 = sub_1A5892220((uint64_t)v88);
    v22 = *(_QWORD *)v21;
    v23 = *(unsigned int *)(v21 + 8);
    v25 = *(_QWORD *)(v21 + 16);
    v24 = *(_QWORD *)(v21 + 24);
    v26 = *(_QWORD *)(v21 + 32);
    v27 = *(_QWORD *)(v21 + 40);
    v28 = *(_QWORD *)(v21 + 48);
    v29 = *(_QWORD *)(v21 + 56);
    v30 = *(_QWORD *)(v21 + 64);
    v31 = *(_QWORD *)(v21 + 72);
    v32 = *(_QWORD *)(v21 + 80);
    v33 = *(unsigned __int16 *)(v21 + 88) | (*(unsigned __int8 *)(v21 + 90) << 16);
    v64 = v31;
    v65 = v30;
    v63 = v32;
    if ((v33 & 0xE00000) == 0x800000)
    {
      v34 = v28 | v29 | v30;
      if (!(v26 | v24 | v25 | v27 | v34 | v31 | v32) && v33 == 0x800000)
      {
        v62 = v25;
        v55 = v29;
        v56 = v28;
        v57 = v27;
        v58 = v26;
        v59 = v24;
        v35 = v23;
        swift_retain();
        v60 = v22;
        v61 = v35;
        v36 = v67(v22, v35, 0, v69, v68, a3);
        v38 = v37;
        swift_release();
        if ((v38 & 1) == 0)
        {
          v24 = 0;
          v26 = 0;
          v27 = 0;
          v28 = 0;
          v29 = 0;
          v64 = 0;
          v65 = 0;
          v62 = v36;
          v63 = 0;
          v33 = 0;
LABEL_15:
          v22 = v60;
          LODWORD(v23) = v61;
LABEL_20:
          v43 = *(_QWORD *)(v21 + 152);
          v44 = *(_BYTE *)(v21 + 160);
          v45 = *(_BYTE *)(v21 + 161);
          v46 = *(_DWORD *)(v21 + 144);
          v47 = *(_BYTE *)(v21 + 148);
          v48 = *(_DWORD *)(v21 + 136);
          v49 = *(_BYTE *)(v21 + 140);
          v50 = *(_QWORD *)(v21 + 128);
          v51 = *(_DWORD *)(v21 + 116);
          v52 = *(_BYTE *)(v21 + 120);
          v53 = *(_BYTE *)(v21 + 91);
          v74 = *(_BYTE *)(v21 + 112);
          v73 = v52;
          v72 = v49;
          v71 = v47;
          v70 = v45;
          *(_QWORD *)&v89[0] = v22;
          DWORD2(v89[0]) = v23;
          *(_QWORD *)&v89[1] = v62;
          *((_QWORD *)&v89[1] + 1) = v24;
          *(_QWORD *)&v89[2] = v26;
          *((_QWORD *)&v89[2] + 1) = v27;
          *(_QWORD *)&v89[3] = v28;
          *((_QWORD *)&v89[3] + 1) = v29;
          *(_QWORD *)&v89[4] = v65;
          *((_QWORD *)&v89[4] + 1) = v64;
          *(_QWORD *)&v89[5] = v63;
          BYTE10(v89[5]) = BYTE2(v33);
          WORD4(v89[5]) = v33;
          BYTE11(v89[5]) = v53;
          v89[6] = *(_OWORD *)(v21 + 96);
          LOBYTE(v89[7]) = v74;
          DWORD1(v89[7]) = v51;
          BYTE8(v89[7]) = v52;
          *(_QWORD *)&v89[8] = v50;
          DWORD2(v89[8]) = v48;
          BYTE12(v89[8]) = v49;
          LODWORD(v89[9]) = v46;
          BYTE4(v89[9]) = v47;
          *((_QWORD *)&v89[9] + 1) = v43;
          LOBYTE(v89[10]) = v44;
          BYTE1(v89[10]) = v45;
          sub_1A58AB53C((uint64_t)v89);
          v39 = v89;
          goto LABEL_21;
        }
        v33 = 0x800000;
        goto LABEL_19;
      }
      if (v33 == 0x800000 && v25 == 1 && !(v26 | v24 | v27 | v34 | v31 | v32))
      {
        v55 = v29;
        v56 = v28;
        v57 = v27;
        v58 = v26;
        v59 = v24;
        v61 = v23;
        v62 = v23 | 0x8000000000000000;
        swift_retain();
        v40 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v62 = v67(v40, v62, a5, v69, v68, a3);
        v42 = v41;
        v60 = v22;
        swift_bridgeObjectRelease();
        swift_release();
        if ((v42 & 1) == 0)
        {
          v24 = 0;
          v26 = 0;
          v27 = 0;
          v28 = 0;
          v29 = 0;
          v64 = 0;
          v65 = 0;
          v63 = 0;
          v33 = 0x200000;
          goto LABEL_15;
        }
        v33 = 0x800000;
        v62 = 1;
LABEL_19:
        v22 = v60;
        LODWORD(v23) = v61;
        v26 = v58;
        v24 = v59;
        v28 = v56;
        v27 = v57;
        v29 = v55;
        goto LABEL_20;
      }
    }
    v62 = v25;
    goto LABEL_20;
  }
  v39 = v87;
LABEL_21:
  sub_1A5891E0C(v39, (uint64_t)v75);
  *(_OWORD *)((char *)&v89[7] + 8) = v83;
  *(_OWORD *)((char *)&v89[8] + 8) = v84;
  *(_OWORD *)((char *)&v89[9] + 8) = v85;
  *(_OWORD *)((char *)&v89[10] + 8) = v86;
  *(_OWORD *)((char *)&v89[3] + 8) = v79;
  *(_OWORD *)((char *)&v89[4] + 8) = v80;
  *(_OWORD *)((char *)&v89[5] + 8) = v81;
  *(_OWORD *)((char *)&v89[6] + 8) = v82;
  *(_OWORD *)((char *)v89 + 8) = v76;
  *(_OWORD *)((char *)&v89[1] + 8) = v77;
  *(_QWORD *)&v89[0] = v66;
  *(_OWORD *)((char *)&v89[2] + 8) = v78;
  sub_1A5891E0C(v75, (uint64_t)&v89[11] + 8);
  memcpy(a2, v89, 0x15AuLL);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
LABEL_22:
  sub_1A55034B8((uint64_t)a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1A55034FC((uint64_t)a2, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    memcpy(v89, v11, 0x15AuLL);
    sub_1A58B0880((_OWORD *)((char *)&v89[11] + 8));
    memcpy(a2, v89, 0x15AuLL);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  }
  return swift_release_n();
}

uint64_t sub_1A58B7BF8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (a2 < 0)
    return swift_bridgeObjectRelease();
  return result;
}

int8x16_t sub_1A58B7C30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  int8x16_t result;

  v1 = *(_QWORD *)(a1 + 72) & 0x1FFFFFFFFLL;
  v2 = *(_QWORD *)(a1 + 88) & 0x1E101FFLL;
  v3 = *(_WORD *)(a1 + 160) & 0x1FF;
  *(_QWORD *)(a1 + 48) &= 0x1FFFFFFFFuLL;
  *(_QWORD *)(a1 + 72) = v1;
  *(_QWORD *)(a1 + 88) = v2;
  *(int8x16_t *)(a1 + 112) = vandq_s8(*(int8x16_t *)(a1 + 112), (int8x16_t)xmmword_1A59AC060);
  result = vandq_s8(*(int8x16_t *)(a1 + 136), (int8x16_t)vdupq_n_s64(0x1FFFFFFFFuLL));
  *(int8x16_t *)(a1 + 136) = result;
  *(_WORD *)(a1 + 160) = v3;
  return result;
}

int8x16_t sub_1A58B7C94(uint64_t a1)
{
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  int8x16_t result;

  v1 = *(_WORD *)(a1 + 160);
  v2 = *(_QWORD *)(a1 + 72) & 0x1FFFFFFFFLL;
  v3 = *(_QWORD *)(a1 + 88) & 0x1E101FFLL;
  *(_QWORD *)(a1 + 48) &= 0x1FFFFFFFFuLL;
  *(_QWORD *)(a1 + 72) = v2;
  *(_QWORD *)(a1 + 88) = v3;
  *(int8x16_t *)(a1 + 112) = vandq_s8(*(int8x16_t *)(a1 + 112), (int8x16_t)xmmword_1A59AC060);
  result = vandq_s8(*(int8x16_t *)(a1 + 136), (int8x16_t)vdupq_n_s64(0x1FFFFFFFFuLL));
  *(int8x16_t *)(a1 + 136) = result;
  *(_WORD *)(a1 + 160) = v1 & 0x1FF | 0x8000;
  return result;
}

unint64_t sub_1A58B7CFC()
{
  unint64_t result;

  result = qword_1EE7AAD30;
  if (!qword_1EE7AAD30)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DEE60, &type metadata for ConnectionState.AlreadyAuthenticatedWhenReceivingHandshakeQuery);
    atomic_store(result, (unint64_t *)&qword_1EE7AAD30);
  }
  return result;
}

uint64_t sub_1A58B7D40(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1A5862C1C(result, a2, a3 & 1);
  return result;
}

uint64_t sub_1A58B7D58(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1A585C500(result, a2, a3 & 1);
  return result;
}

uint64_t sub_1A58B7D70(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 184);
  if (v1 > 2)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1A58B7D84(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned __int8 a24)
{
  if (a24 != 255)
    return sub_1A587A070(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24);
  return result;
}

uint64_t sub_1A58B7E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s6LoggerVMa_0() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1A58B7E7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(_s6LoggerVMa_0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1A58B01A0(a1, v1 + v4, *(uint64_t (**)(_QWORD))v5, *(_QWORD *)(v5 + 8));
}

uint64_t *sub_1A58B7ED0(uint64_t *a1)
{
  sub_1A562FDC0(*a1, a1[1], a1[2]);
  return a1;
}

uint64_t sub_1A58B7EFC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 184);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    v4);
  return a1;
}

unint64_t sub_1A58B7F70()
{
  unint64_t result;

  result = qword_1EE7967F8;
  if (!qword_1EE7967F8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Capability, &type metadata for Capability);
    atomic_store(result, (unint64_t *)&qword_1EE7967F8);
  }
  return result;
}

uint64_t sub_1A58B7FB4(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 64);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v4);
  return a1;
}

uint64_t sub_1A58B8000(uint64_t a1)
{
  uint64_t v2;
  unsigned __int16 v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v17 = *(_QWORD *)(a1 + 192);
  v18 = *(_QWORD *)(a1 + 184);
  v15 = *(_QWORD *)(a1 + 208);
  v16 = *(_QWORD *)(a1 + 200);
  v13 = *(_QWORD *)(a1 + 224);
  v14 = *(_QWORD *)(a1 + 216);
  v11 = *(_QWORD *)(a1 + 240);
  v12 = *(_QWORD *)(a1 + 232);
  v10 = *(_OWORD *)(a1 + 248);
  v9 = *(_OWORD *)(a1 + 264);
  v7 = *(_OWORD *)(a1 + 296);
  v8 = *(_OWORD *)(a1 + 280);
  v6 = *(_OWORD *)(a1 + 312);
  v2 = *(_QWORD *)(a1 + 336);
  v5 = *(_QWORD *)(a1 + 328);
  v3 = *(_WORD *)(a1 + 344);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A58943DC(v18, v17, v16, v15, v14, v13, v12, v11, v10, *((uint64_t *)&v10 + 1), v9, DWORD2(v9), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5,
    v2,
    v3);
  return a1;
}

uint64_t sub_1A58B8188(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v9 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  swift_bridgeObjectRelease();
  sub_1A5892174(v12, v11, v2, v3, v4, v5, v6, v8, v7, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

double sub_1A58B8240@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;

  (*(void (**)(_OWORD *__return_ptr))(v1 + 16))(v5);
  v3 = v5[1];
  *a1 = v5[0];
  a1[1] = v3;
  result = *(double *)&v6;
  a1[2] = v6;
  return result;
}

unint64_t sub_1A58B8280()
{
  unint64_t result;

  result = qword_1EE796970;
  if (!qword_1EE796970)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for PermanentFlag, &type metadata for PermanentFlag);
    atomic_store(result, (unint64_t *)&qword_1EE796970);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionState.AlreadyAuthenticatedWhenReceivingHandshakeQuery()
{
  return &type metadata for ConnectionState.AlreadyAuthenticatedWhenReceivingHandshakeQuery;
}

uint64_t ConnectionUsage.mailboxesUsage.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

double (*ConnectionUsage.mailboxesUsage.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t ConnectionUsage.nonMailboxUsage.getter(uint64_t a1, unint64_t a2)
{
  sub_1A54E7028(a2);
  return a2;
}

unint64_t ConnectionUsage.nonMailboxUsage.setter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A54E7074(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

double (*ConnectionUsage.nonMailboxUsage.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL static ConnectionUsage.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((_s15IMAP2Connection23MailboxesSelectionUsageV23__derived_struct_equalsySbAC_ACtFZ_0(a1, a3) & 1) == 0)
    return 0;
  if (a2)
  {
    if (a2 == 1)
    {
      if (a4 != 1)
        return 0;
    }
    else if (a4 < 2 || (sub_1A589507C(a2, a4) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  return !a4;
}

uint64_t static ConnectionUsage.NonMailboxUsage.__derived_enum_equals(_:_:)(uint64_t a1, unint64_t a2)
{
  if (!a1)
    return !a2;
  if (a1 == 1)
    return a2 == 1;
  if (a2 < 2)
    return 0;
  return sub_1A589507C();
}

BOOL sub_1A58B8420(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((_s15IMAP2Connection23MailboxesSelectionUsageV23__derived_struct_equalsySbAC_ACtFZ_0(*a1, *a2) & 1) == 0)
    return 0;
  if (v2)
  {
    if (v2 == 1)
    {
      if (v3 != 1)
        return 0;
    }
    else if (v3 < 2 || (sub_1A589507C(v2, v3) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  return !v3;
}

uint64_t ConnectionUsage.init()()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t static ConnectionUsage.empty.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A58B84B4(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = *a2;
  if (!v2)
    return !v3;
  if (v2 == 1)
    return v3 == 1;
  if (v3 < 2)
    return 0;
  return sub_1A589507C();
}

uint64_t ConnectionUsage.usage(_:)(uint64_t result, uint64_t a2, unint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;

  v4 = result;
  if (a3 >= 2)
  {
    result = sub_1A5894990(result, a3);
    if ((result & 1) != 0)
      return 1;
  }
  v5 = *(_QWORD *)(a2 + 16);
  if (!v5)
    return 0;
  if (*(_DWORD *)(a2 + 32) == v4)
  {
    v6 = a2 + 56;
    return *(_QWORD *)v6;
  }
  else if (v5 == 1)
  {
    return 0;
  }
  else
  {
    v7 = a2 + 104;
    for (i = 1; ; ++i)
    {
      v9 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (*(_DWORD *)(v7 - 32) == v4)
      {
        v6 = v7 - 8;
        return *(_QWORD *)v6;
      }
      v7 += 40;
      if (v9 == v5)
        return 0;
    }
    __break(1u);
  }
  return result;
}

BOOL ConnectionUsage.needsToHoldOntoSingleConnection.getter(uint64_t a1, uint64_t a2)
{
  return a2 != 0;
}

uint64_t _s15IMAP2Connection07CommandB0C12RecentErrorsV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  BOOL v18;
  uint64_t v20;

  v4 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v20 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_14:
    v16 = 0;
    return v16 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v14 = v11 - 1;
    while (1)
    {
      sub_1A58B8EEC(a1 + v12, (uint64_t)v10);
      sub_1A58B8EEC(a2 + v12, (uint64_t)v6);
      if (*v10 != *v6)
        break;
      _s15IMAP2Connection07CommandB0C12RecentErrorsV5ErrorV4KindO21__derived_enum_equalsySbAI_AItFZ_0((uint64_t)v10 + *(int *)(v4 + 20), (uint64_t)v6 + *(int *)(v4 + 20));
      v16 = v15;
      sub_1A58B8F30((uint64_t)v6);
      sub_1A58B8F30((uint64_t)v10);
      v18 = v14-- != 0;
      if ((v16 & 1) != 0)
      {
        v12 += v13;
        if (v18)
          continue;
      }
      return v16 & 1;
    }
    sub_1A58B8F30((uint64_t)v6);
    sub_1A58B8F30((uint64_t)v10);
    goto LABEL_14;
  }
  v16 = 1;
  return v16 & 1;
}

uint64_t sub_1A58B8728(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  BOOL v9;
  _OWORD v11[5];
  _QWORD v12[10];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v7 = 1;
    }
    else
    {
      v3 = a1 + 32;
      v4 = a2 + 32;
      v5 = v2 - 1;
      do
      {
        sub_1A5868528(v3, (uint64_t)v11);
        sub_1A5868528(v4, (uint64_t)v12);
        sub_1A58687AC(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5868564);
        sub_1A58687AC(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5868564);
        static Credentials.__derived_enum_equals(_:_:)(v11);
        v7 = v6;
        sub_1A58687AC(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5868664);
        sub_1A58687AC(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5868664);
        v9 = v5-- != 0;
        if ((v7 & 1) == 0)
          break;
        v3 += 80;
        v4 += 80;
      }
      while (v9);
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1A58B8814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t _s15IMAP2Connection23MailboxesSelectionUsageV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  BOOL v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    if (*(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32)
      && (*(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned int *)(a1 + 48) << 32)) == (*(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned int *)(a2 + 48) << 32)))
    {
      v5 = *(_QWORD *)(a1 + 56);
      v6 = *(_BYTE *)(a1 + 64);
      v7 = *(_QWORD *)(a2 + 56);
      v8 = *(unsigned __int8 *)(a2 + 64);
      if (sub_1A54FF30C(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40)))
      {
        v9 = 0;
        while (1)
        {
          if ((v6 & 1) == 0)
          {
            if (v8 & 1 | (v5 != v7))
              return 0;
            goto LABEL_21;
          }
          if (v5)
          {
            if (v5 != 1)
            {
              if ((v8 & (v7 > 1)) != 1)
                return 0;
              goto LABEL_21;
            }
            v10 = v7 == 1;
          }
          else
          {
            v10 = v7 == 0;
          }
          v11 = v10;
          if ((v8 & v11 & 1) == 0)
            return 0;
LABEL_21:
          if (!--v2)
            return 1;
          v12 = a1 + v9;
          v13 = a2 + v9;
          if (*(_DWORD *)(a1 + v9 + 72) != *(_DWORD *)(a2 + v9 + 72)
            || (*(unsigned int *)(v12 + 88) | ((unint64_t)*(unsigned int *)(v12 + 88) << 32)) != (*(unsigned int *)(v13 + 88) | ((unint64_t)*(unsigned int *)(v13 + 88) << 32)))
          {
            return 0;
          }
          v9 += 40;
          v5 = *(_QWORD *)(v12 + 96);
          v6 = *(_BYTE *)(v12 + 104);
          v7 = *(_QWORD *)(v13 + 96);
          v8 = *(unsigned __int8 *)(v13 + 104);
          v14 = sub_1A54FF30C(*(_QWORD *)(v12 + 80), *(_QWORD *)(v13 + 80));
          result = 0;
          if (!v14)
            return result;
        }
      }
    }
    return 0;
  }
  return 1;
}

unint64_t destroy for ConnectionUsage(uint64_t a1)
{
  unint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 8);
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *_s15IMAP2Connection15ConnectionUsageVwCP_0(_QWORD *a1, _QWORD *a2)
{
  unint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v3 >= 2)
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1[1] = v3;
  return a1;
}

_QWORD *assignWithCopy for ConnectionUsage(_QWORD *a1, _QWORD *a2)
{
  unint64_t *v4;
  unint64_t v5;

  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = a1 + 1;
  v5 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v5 >= 2)
    {
      *v4 = v5;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A58B8BF0((uint64_t)(a1 + 1));
      *v4 = a2[1];
    }
  }
  else
  {
    *v4 = v5;
    if (v5 >= 2)
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

uint64_t sub_1A58B8BF0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAD38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *assignWithTake for ConnectionUsage(_QWORD *a1, _QWORD *a2)
{
  unint64_t *v4;
  unint64_t v5;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a1 + 1;
  v5 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v5 >= 2)
    {
      *v4 = v5;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1A58B8BF0((uint64_t)(a1 + 1));
  }
  *v4 = v5;
  return a1;
}

ValueMetadata *type metadata accessor for ConnectionUsage()
{
  return &type metadata for ConnectionUsage;
}

_QWORD *__swift_memcpy8_8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionUsage.NonMailboxUsage()
{
  return &type metadata for ConnectionUsage.NonMailboxUsage;
}

uint64_t sub_1A58B8CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[21];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unint64_t *)(a2 + 56);
    v4 = (unint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v8 = *(v4 - 1);
      v7 = *v4;
      v9 = v4[4];
      v10 = *(v3 - 3);
      v11 = *(v3 - 2);
      v12 = *(v3 - 1);
      v13 = *v3;
      v14 = v3[4];
      if ((v9 & 0x1000000000000000) != 0)
      {
        v20 = v4[1];
        v19 = v4[2];
        v21 = v4[3];
        v23 = v4[5];
        v22 = v4[6];
        v24 = v3[1];
        v25 = v3[2];
        v26 = v3[3];
        v27 = v3[5];
        v28 = v3[6];
        v51[0] = *(v4 - 3);
        v51[1] = v6;
        v51[2] = v8;
        v51[3] = v7;
        v51[4] = v20;
        v51[5] = v19;
        v51[6] = v21;
        v51[7] = v9 & 0xEFFFFFFFFFFFFFFFLL;
        v51[8] = v23;
        v51[9] = v22;
        if ((v14 & 0x1000000000000000) == 0)
          return 0;
        v51[10] = v10;
        v51[11] = v11;
        v51[12] = v12;
        v51[13] = v13;
        v51[14] = v24;
        v51[15] = v25;
        v51[16] = v26;
        v51[17] = v14 & 0xEFFFFFFFFFFFFFFFLL;
        v51[18] = v27;
        v51[19] = v28;
        v35 = v27;
        v49 = v14;
        v50 = v2;
        v29 = v5;
        v46 = v12;
        v47 = v27;
        v30 = v14;
        v31 = v6;
        v48 = v6;
        v37 = v19;
        v38 = v7;
        v44 = v24;
        v45 = v13;
        v42 = v26;
        v43 = v25;
        v36 = v9;
        v39 = v10;
        v40 = v11;
        sub_1A586418C(v10, v11, v12, v13, v24, v25, v26, v30, v35, v28);
        sub_1A586418C(v29, v31, v8, v38, v20, v37, v21, v36, v23, v22);
        sub_1A586B68C((uint64_t)v51);
        v41 = v32;
        sub_1A5862344(v39, v40, v46, v45, v44, v43, v42, v49, v47, v28);
        v33 = v29;
        v2 = v50;
        sub_1A5862344(v33, v48, v8, v38, v20, v37, v21, v36, v23, v22);
        if ((v41 & 1) == 0)
          return 0;
      }
      else
      {
        if ((v14 & 0x1000000000000000) != 0)
          return 0;
        if (v5 != v10 || v6 != v11)
        {
          v15 = *(v3 - 1);
          v16 = *v4;
          v17 = *v3;
          v18 = sub_1A594CD38();
          v13 = v17;
          v12 = v15;
          v7 = v16;
          if ((v18 & 1) == 0)
            return 0;
        }
        if ((v8 != v12 || v7 != v13) && (sub_1A594CD38() & 1) == 0)
          return 0;
      }
      v3 += 10;
      v4 += 10;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1A58B8EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A58B8F30(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL static CommandConnection.Constraint.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t CommandConnection.Constraint.hash(into:)()
{
  return sub_1A594CE88();
}

uint64_t CommandConnection.Constraint.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

unint64_t sub_1A58B8FE8()
{
  unint64_t result;

  result = qword_1EE7AAD40;
  if (!qword_1EE7AAD40)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for CommandConnection.Constraint, &type metadata for CommandConnection.Constraint);
    atomic_store(result, (unint64_t *)&qword_1EE7AAD40);
  }
  return result;
}

uint64_t _s10ConstraintOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A58B9078 + 4 * byte_1A59DEF2D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A58B90AC + 4 * asc_1A59DEF28[v4]))();
}

uint64_t sub_1A58B90AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58B90B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58B90BCLL);
  return result;
}

uint64_t sub_1A58B90C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58B90D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A58B90D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58B90DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CommandConnection.Constraint()
{
  return &type metadata for CommandConnection.Constraint;
}

uint64_t sub_1A58B90F8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t result;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = sub_1A594AA40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594AED8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = (void *)v1[4];
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v7 + 104))(v10, *MEMORY[0x1E0DEF740], v6, v8);
  v12 = v11;
  LOBYTE(v11) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v1[9])
    return result;
  sub_1A594AA58();
  v14 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  v15 = *MEMORY[0x1E0CCE5B8];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v14 != v15)
  {
LABEL_7:
    result = sub_1A594C9C0();
    __break(1u);
    return result;
  }
  v16 = sub_1A594A9F8();
  v1[8] = static MonotonicTime.now()();
  v1[9] = v16;
  return swift_release();
}

uint64_t sub_1A58B92A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = sub_1A594AED8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v0 + 32);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x1E0DEF740], v2, v4);
  v8 = v7;
  v9 = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v9 & 1) != 0)
  {
    v11 = *(_QWORD *)(v1 + 72);
    if (v11)
    {
      v12 = *(_QWORD *)(v1 + 64);
      v13 = *(_DWORD *)(v1 + 24);
      v15 = *(_QWORD *)(v1 + 40);
      v14 = *(_QWORD *)(v1 + 48);
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = v12;
      *(_QWORD *)(v16 + 24) = v11;
      *(_QWORD *)(v16 + 32) = v15;
      *(_QWORD *)(v16 + 40) = v14;
      *(_DWORD *)(v16 + 48) = v13;
      swift_retain_n();
      swift_retain();
      sub_1A594AA04();
      swift_release_n();
      swift_release();
    }
    v17 = sub_1A594A9F8();
    *(_QWORD *)(v1 + 64) = static MonotonicTime.now()();
    *(_QWORD *)(v1 + 72) = v17;
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A58B9400(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;

  v6 = v5;
  v22 = a5;
  v11 = sub_1A594AA40();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v21 - v16;
  *(_BYTE *)(v6 + 56) = 0;
  *(_QWORD *)(v6 + 64) = 0;
  *(_QWORD *)(v6 + 72) = 0;
  sub_1A594AA58();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0CCE5B8], v11);
  v18 = MEMORY[0x1A85ACEAC](v17, v14);
  v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v14, v11);
  result = ((uint64_t (*)(char *, uint64_t))v19)(v17, v11);
  if ((v18 & 1) != 0)
  {
    *(_QWORD *)(v6 + 16) = a1;
    *(_DWORD *)(v6 + 24) = a2;
    *(_QWORD *)(v6 + 32) = a3;
    *(_QWORD *)(v6 + 40) = a4;
    *(_QWORD *)(v6 + 48) = v22;
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A58B9524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 72);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 64);
    v4 = *(_DWORD *)(v1 + 24);
    v6 = *(_QWORD *)(v1 + 40);
    v5 = *(_QWORD *)(v1 + 48);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v3;
    *(_QWORD *)(v7 + 24) = v2;
    *(_QWORD *)(v7 + 32) = v6;
    *(_QWORD *)(v7 + 40) = v5;
    *(_DWORD *)(v7 + 48) = v4;
    swift_retain_n();
    swift_retain();
    sub_1A594AA04();
    swift_release_n();
    swift_release();
  }
  swift_release();

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A58B95FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(int *), uint64_t a5, int a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t (*v29)(int *);
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v28[1] = a5;
  v29 = a4;
  v9 = sub_1A594A9B0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v28 - v14;
  v16 = sub_1A594A9C8();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16))(v20, a1, v16, v18);
  sub_1A594A9BC();
  v22 = v21;
  sub_1A594A98C();
  v23 = sub_1A594A9A4();
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v15, v9);
  v25 = v23 & ~(v23 >> 63);
  sub_1A594A98C();
  v26 = sub_1A594A998();
  v24(v12, v9);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  v30 = a6;
  v31 = a2;
  v32 = v22;
  v33 = v25;
  v34 = v26 & ~(v26 >> 63);
  return v29(&v30);
}

uint64_t DataTransferReport.connection.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t DataTransferReport.connection.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*DataTransferReport.connection.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t DataTransferReport.start.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t DataTransferReport.start.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*DataTransferReport.start.modify())(_QWORD)
{
  return nullsub_1;
}

double DataTransferReport.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void DataTransferReport.duration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

double (*DataTransferReport.duration.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t DataTransferReport.receivedTransportByteCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t DataTransferReport.sentTransportByteCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t DataTransferReport.init(connection:start:duration:receivedTransportByteCount:sentTransportByteCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  *(_DWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(double *)(a5 + 16) = a6;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  return result;
}

BOOL static DataTransferReport.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2
      && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
      && *(double *)(a1 + 16) == *(double *)(a2 + 16)
      && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32);
}

BOOL sub_1A58B988C(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2
      && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
      && *(double *)(a1 + 16) == *(double *)(a2 + 16)
      && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32);
}

unint64_t DataTransferReport.receivedApplicationBitrate.getter()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  double v3;
  double v4;
  BOOL v6;
  unint64_t v7;
  unint64_t result;

  v1 = *(double *)(v0 + 16);
  if (v1 <= 0.0)
    return 0;
  v2 = *(_QWORD *)(v0 + 24);
  if ((unint64_t)(v2 - 0x1000000000000000) >> 61 == 7)
  {
    v3 = (double)(8 * v2) / v1;
    v4 = round(v3);
    v6 = v4 >= 9.22337204e18 || v4 <= -9.22337204e18;
    v7 = llround(v3);
    if (v6)
      return 0;
    else
      return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t DataTransferReport.sentApplicationBitrate.getter()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  double v3;
  double v4;
  BOOL v6;
  unint64_t v7;
  unint64_t result;

  v1 = *(double *)(v0 + 16);
  if (v1 <= 0.0)
    return 0;
  v2 = *(_QWORD *)(v0 + 32);
  if ((unint64_t)(v2 - 0x1000000000000000) >> 61 == 7)
  {
    v3 = (double)(8 * v2) / v1;
    v4 = round(v3);
    v6 = v4 >= 9.22337204e18 || v4 <= -9.22337204e18;
    v7 = llround(v3);
    if (v6)
      return 0;
    else
      return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _s27DataTransferReportCollectorCMa()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for DataTransferReport(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DataTransferReport(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

_QWORD *_s27DataTransferReportCollectorC7PendingVwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

_QWORD *_s27DataTransferReportCollectorC7PendingVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *_s27DataTransferReportCollectorC7PendingVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *_s27DataTransferReportCollectorC7PendingVMa()
{
  return &_s27DataTransferReportCollectorC7PendingVN;
}

uint64_t objectdestroyTm_4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A58B9B1C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A58B95FC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(int *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_DWORD *)(v1 + 48));
}

uint64_t sub_1A58B9B30()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t result;
  uint64_t v4;

  type metadata accessor for Deflate.Stream();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_DWORD *)(v1 + 104) = 0;
  *(_QWORD *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = 0;
  *(_BYTE *)(v1 + 128) = 0;
  swift_beginAccess();
  v2 = deflateInit2_((z_streamp)(v1 + 16), 1, 8, -15, 8, 4, "1.2.12", 112);
  swift_endAccess();
  if (v2)
  {
    sub_1A58BCCA4();
    swift_allocError();
    *(_QWORD *)v4 = "deflateInit2";
    *(_QWORD *)(v4 + 8) = 12;
    *(_BYTE *)(v4 + 16) = 2;
    *(_DWORD *)(v4 + 20) = v2;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v1;
    *(_BYTE *)(v0 + 24) = 0;
    return v0;
  }
  return result;
}

int *sub_1A58B9C5C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *result;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _QWORD *v49;
  int EnumCaseMultiPayload;
  uLong v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uLong v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char v80;
  void (*v81)(void);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  char *v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t *v102;
  uint64_t (*v103)(char);
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  _QWORD *v112;
  void (*v113)(void);
  void (*v114)(char *, uint64_t, uint64_t);
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t *v119;
  char *v120;
  _QWORD *v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD v134[6];

  v5 = v4;
  v6 = v3;
  LODWORD(v129) = a2;
  v131 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAD68);
  MEMORY[0x1E0C80A78](v131);
  v120 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v106 - v11;
  v125 = type metadata accessor for Deflate.PartialResult(0);
  MEMORY[0x1E0C80A78](v125);
  v14 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v124 = (uint64_t)&v106 - v16;
  v133 = type metadata accessor for Deflate.InputBuffer(0);
  MEMORY[0x1E0C80A78](v133);
  v109 = (uint64_t)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v119 = (uint64_t *)((char *)&v106 - v19);
  MEMORY[0x1E0C80A78](v20);
  v112 = (uint64_t *)((char *)&v106 - v21);
  MEMORY[0x1E0C80A78](v22);
  v121 = (uint64_t *)((char *)&v106 - v23);
  MEMORY[0x1E0C80A78](v24);
  v122 = (uint64_t *)((char *)&v106 - v25);
  MEMORY[0x1E0C80A78](v26);
  v123 = (uint64_t *)((char *)&v106 - v27);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v106 - v29;
  v31 = sub_1A594AE60();
  v132 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v108 = (char *)&v106 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v130 = (char *)&v106 - v34;
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v106 - v36;
  v110 = a1;
  if (sub_1A58BA68C())
  {
    sub_1A594AE24();
    v38 = *(_QWORD *)(v6 + 16);
    swift_beginAccess();
    v39 = *(_QWORD *)(v38 + 32);
    if (v39 < 0)
    {
LABEL_59:
      __break(1u);
    }
    else
    {
      v40 = a3;
      v41 = *(_QWORD *)(v38 + 56);
      if ((v41 & 0x8000000000000000) == 0)
      {
        result = (int *)type metadata accessor for Deflate.Result(0);
        v43 = 0;
        v44 = (_QWORD *)(v40 + result[5]);
        *v44 = 0;
        v44[1] = 0;
LABEL_5:
        v45 = (_QWORD *)(v40 + result[6]);
        *v45 = v39;
        v45[1] = v41;
        *(_QWORD *)(v40 + result[7]) = v43;
        return result;
      }
    }
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v107 = a3;
  result = (int *)sub_1A58BA7CC(v129 & 1, (uint64_t)v37);
  if (v4)
    return result;
  v46 = v6;
  sub_1A58BC0B4(v110, (uint64_t)v30);
  v47 = 1;
  v129 = (uint64_t)v12;
  v116 = v14;
  v115 = v31;
  v118 = v37;
  v111 = v30;
  v117 = v46;
  while (1)
  {
    v49 = v123;
    sub_1A58BC0B4((uint64_t)v30, (uint64_t)v123);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v128 = v47;
    if (EnumCaseMultiPayload == 1)
    {
      if (!*v49)
      {
        v51 = 0;
        goto LABEL_16;
      }
      v51 = v49[1] - *v49;
    }
    else
    {
      v52 = v132;
      v53 = v130;
      (*(void (**)(char *, _QWORD *, uint64_t))(v132 + 32))(v130, v49, v31);
      v51 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v31);
    }
    if ((v51 & 0x8000000000000000) != 0)
      goto LABEL_63;
LABEL_16:
    v54 = *(_QWORD *)(v46 + 16);
    swift_beginAccess();
    swift_retain();
    v55 = deflateBound((z_streamp)(v54 + 16), v51);
    swift_endAccess();
    v56 = swift_release();
    if ((v55 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    v57 = __OFADD__(v55, 20);
    v58 = v55 + 20;
    if (v57)
      goto LABEL_54;
    if (qword_1EE7AAA08 != -1)
      v56 = swift_once();
    if (qword_1EE7AAD50 >= 0)
      v59 = qword_1EE7AAD50;
    else
      v59 = qword_1EE7AAD50 + 1;
    v60 = v129;
    if (v58 >= v59 >> 1)
    {
      if (!qword_1EE7AAD50)
        goto LABEL_57;
      v61 = (uint64_t)((unint64_t)v58 >> 1) / qword_1EE7AAD50 + 1;
      v58 = qword_1EE7AAD50 * v61;
      if ((unsigned __int128)(qword_1EE7AAD50 * (__int128)v61) >> 64 != (qword_1EE7AAD50 * v61) >> 63)
        goto LABEL_58;
    }
    v62 = *(_QWORD *)(v46 + 16);
    v134[0] = 0;
    MEMORY[0x1E0C80A78](v56);
    *(&v106 - 6) = (uint64_t)v30;
    *(&v106 - 5) = v62;
    v103 = sub_1A58BC9A0;
    v104 = v46;
    v105 = v134;
    swift_retain_n();
    v63 = sub_1A58BC450(v60, v58, v62, (uint64_t (*)(uint64_t))sub_1A58BC9B8);
    if (v5)
    {
      swift_release();
      sub_1A55034FC((uint64_t)v30, type metadata accessor for Deflate.InputBuffer);
      return (int *)(*(uint64_t (**)(char *, uint64_t))(v132 + 8))(v118, v31);
    }
    v64 = *(int *)(v131 + 48);
    v127 = v63 & 1;
    *(_BYTE *)(v60 + v64) = v63 & 1;
    v65 = v134[0];
    v66 = v121;
    sub_1A58BC0B4((uint64_t)v30, (uint64_t)v121);
    v67 = swift_getEnumCaseMultiPayload();
    v126 = 0;
    if (v67 != 1)
    {
      v69 = v132;
      v70 = v130;
      (*(void (**)(char *, _QWORD *, uint64_t))(v132 + 32))(v130, v66, v31);
      v68 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v31);
LABEL_31:
      if (v65 == v68)
        goto LABEL_32;
      goto LABEL_35;
    }
    if (*v66)
    {
      v68 = v66[1] - *v66;
      goto LABEL_31;
    }
    if (!v65)
    {
LABEL_32:
      v71 = v122;
      sub_1A594AE24();
      swift_storeEnumTagMultiPayload();
      goto LABEL_42;
    }
LABEL_35:
    v72 = v112;
    sub_1A58BC0B4((uint64_t)v30, (uint64_t)v112);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (*v72)
        v73 = v72[1] - *v72;
      else
        v73 = 0;
    }
    else
    {
      v74 = v132;
      v75 = v130;
      (*(void (**)(char *, _QWORD *, uint64_t))(v132 + 32))(v130, v72, v31);
      v73 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v31);
    }
    v71 = v122;
    if (v73 < v65)
      goto LABEL_56;
    v30 = v111;
    sub_1A58BBDA4(v65, v73, v122);
LABEL_42:
    v76 = v132;
    v77 = *(int *)(v131 + 48);
    v78 = v120;
    v79 = v129;
    v114 = *(void (**)(char *, uint64_t, uint64_t))(v132 + 16);
    v114(v120, v129, v31);
    v80 = v127;
    v78[v77] = v127;
    sub_1A58BC9CC(v79);
    v81 = *(void (**)(void))(v76 + 32);
    v82 = v31;
    v83 = v124;
    ((void (*)(uint64_t, char *, uint64_t))v81)(v124, v78, v82);
    v84 = v125;
    v85 = v83 + *(int *)(v125 + 20);
    sub_1A54E3394((uint64_t)v71, v85, type metadata accessor for Deflate.InputBuffer);
    swift_release();
    *(_BYTE *)(v83 + *(int *)(v84 + 24)) = v80;
    sub_1A594AE30();
    sub_1A55034FC((uint64_t)v30, type metadata accessor for Deflate.InputBuffer);
    sub_1A58BC0B4(v85, (uint64_t)v30);
    v86 = v119;
    sub_1A58BC0B4((uint64_t)v30, (uint64_t)v119);
    v87 = swift_getEnumCaseMultiPayload();
    v113 = v81;
    if (v87 == 1)
    {
      v88 = *v86;
      v89 = (uint64_t)v116;
      if (*v86)
      {
        v90 = v86[1];
        sub_1A54E3394(v124, (uint64_t)v116, type metadata accessor for Deflate.PartialResult);
        if (v90 != v88)
          goto LABEL_47;
      }
      else
      {
        sub_1A54E3394(v124, (uint64_t)v116, type metadata accessor for Deflate.PartialResult);
      }
    }
    else
    {
      v91 = v130;
      ((void (*)(char *, uint64_t *, uint64_t))v81)(v130, v86, v82);
      sub_1A5899084();
      sub_1A594BD60();
      sub_1A594BDB4();
      v92 = v134[0];
      v93 = v134[5];
      (*(void (**)(char *, uint64_t))(v132 + 8))(v91, v82);
      v89 = (uint64_t)v116;
      sub_1A54E3394(v83, (uint64_t)v116, type metadata accessor for Deflate.PartialResult);
      if (v92 != v93)
      {
LABEL_47:
        sub_1A55034FC(v89, type metadata accessor for Deflate.PartialResult);
        v46 = v117;
        goto LABEL_10;
      }
    }
    v48 = *(_BYTE *)(v89 + *(int *)(v125 + 24));
    sub_1A55034FC(v89, type metadata accessor for Deflate.PartialResult);
    v46 = v117;
    if ((v48 & 1) == 0)
      break;
LABEL_10:
    v47 = v128 + 1;
    v5 = v126;
    v31 = v115;
    if (__OFADD__(v128, 1))
      goto LABEL_55;
  }
  v94 = v118;
  v95 = v115;
  v96 = (void (*)(char *, char *, uint64_t))v114;
  v114(v130, (uint64_t)v118, v115);
  v97 = v109;
  sub_1A58BC0B4(v110, v109);
  v98 = v108;
  v96(v108, v94, v95);
  v133 = sub_1A58BAB50();
  v99 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  v100 = *(void (**)(char *, uint64_t))(v132 + 8);
  v100(v98, v95);
  sub_1A55034FC(v97, type metadata accessor for Deflate.InputBuffer);
  sub_1A55034FC((uint64_t)v30, type metadata accessor for Deflate.InputBuffer);
  v100(v94, v95);
  v101 = *(_QWORD *)(v46 + 16);
  swift_beginAccess();
  v39 = *(_QWORD *)(v101 + 32);
  if (v39 < 0)
    goto LABEL_61;
  v41 = *(_QWORD *)(v101 + 56);
  if ((v41 & 0x8000000000000000) == 0)
  {
    v40 = v107;
    v113();
    result = (int *)type metadata accessor for Deflate.Result(0);
    v102 = (uint64_t *)(v40 + result[5]);
    *v102 = v133;
    v102[1] = v99;
    v43 = v128;
    goto LABEL_5;
  }
LABEL_62:
  __break(1u);
LABEL_63:
  LODWORD(v105) = 0;
  v104 = 3451;
  LOBYTE(v103) = 2;
  result = (int *)sub_1A594C9B4();
  __break(1u);
  return result;
}

BOOL sub_1A58BA68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _BOOL8 v9;
  _QWORD v11[2];

  v1 = v0;
  v2 = sub_1A594AE60();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Deflate.InputBuffer(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A58BC0B4(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    return !*v8 || v8[1] == *v8;
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1A5899084();
    sub_1A594BD60();
    sub_1A594BDB4();
    v9 = v11[1] == v11[0];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v9;
}

uint64_t sub_1A58BA7CC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int pending;
  _QWORD aBlock[7];

  v4 = v2;
  aBlock[6] = *MEMORY[0x1E0C80C00];
  v7 = sub_1A594ADB8();
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  MEMORY[0x1E0C80A78](v7);
  v34 = (uint64_t *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAD68);
  MEMORY[0x1E0C80A78](v33);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A594AE60();
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v4 + 24)) & 1) != 0)
    return sub_1A594AE24();
  v30 = v13;
  v31 = v12;
  v29 = a2;
  *(_BYTE *)(v4 + 24) = a1 & 1;
  sub_1A594AE24();
  v32 = *MEMORY[0x1E0DEF5D0];
  v17 = v4;
  while (1)
  {
    v18 = *(_QWORD *)(v17 + 16);
    pending = 0;
    swift_beginAccess();
    swift_retain();
    v19 = deflatePending((z_streamp)(v18 + 16), &pending, 0);
    swift_endAccess();
    swift_release();
    if (v19)
      v20 = 1044;
    else
      v20 = pending + 21;
    v21 = *(_QWORD *)(v17 + 16);
    swift_retain();
    swift_retain();
    v22 = swift_slowAlloc();
    v23 = sub_1A58BC21C((BOOL *)&pending, v22, v22 + v20, v21, v17);
    if (v3)
    {
      MEMORY[0x1A85B1964](v22, -1, -1);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v31);
      return swift_release();
    }
    if (v23 < 0 || v20 < v23)
      break;
    v24 = *(int *)(v33 + 48);
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v22;
    *(_QWORD *)(v25 + 24) = v22 + v20;
    aBlock[4] = sub_1A58BDCA0;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A587D408;
    aBlock[3] = &block_descriptor_7;
    v26 = _Block_copy(aBlock);
    v28 = v34;
    v27 = v35;
    *v34 = 0;
    v28[1] = v26;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v27 + 104))(v28, v32, v36);
    sub_1A594ADC4();
    swift_release();
    swift_release();
    LOBYTE(v28) = pending;
    v10[v24] = pending;
    sub_1A594AE30();
    sub_1A58BC9CC((uint64_t)v10);
    if ((v28 & 1) == 0)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(v29, v15, v31);
  }
  result = sub_1A594C9C0();
  __break(1u);
  return result;
}

uint64_t sub_1A58BAB50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_1A594AE60();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Deflate.InputBuffer(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A58BC0B4(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (*v8)
      return v8[1] - *v8;
    else
      return 0;
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v3 + 32))(v5, v8, v2);
    v9 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v9;
}

uint64_t sub_1A58BAC5C(char a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = a1 & 1;
  swift_beginAccess();
  swift_retain();
  v4 = deflate((z_streamp)(v2 + 16), v3);
  swift_endAccess();
  if (v4 && v4 != -5)
  {
    sub_1A58BCCA4();
    swift_allocError();
    *(_QWORD *)v5 = "deflate";
    *(_QWORD *)(v5 + 8) = 7;
    *(_BYTE *)(v5 + 16) = 2;
    *(_DWORD *)(v5 + 20) = v4;
    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1A58BAD24(uint64_t a1)
{
  uint64_t v2;
  int v3;
  BOOL v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  swift_retain();
  v3 = deflate((z_streamp)(v2 + 16), 5);
  swift_endAccess();
  if (v3)
    v4 = v3 == -5;
  else
    v4 = 1;
  if (!v4)
  {
    sub_1A58BCCA4();
    swift_allocError();
    *(_QWORD *)v8 = "deflate";
    v9 = 7;
LABEL_14:
    *(_QWORD *)(v8 + 8) = v9;
    *(_BYTE *)(v8 + 16) = 2;
    *(_DWORD *)(v8 + 20) = v3;
    swift_willThrow();
    return swift_release();
  }
  swift_release();
  v5 = *(_QWORD *)(a1 + 16);
  if (*(_BYTE *)(a1 + 24))
    v6 = 5;
  else
    v6 = 1;
  if (*(_BYTE *)(a1 + 24))
    v7 = 0;
  else
    v7 = 4;
  swift_beginAccess();
  swift_retain();
  v3 = deflateParams((z_streamp)(v5 + 16), v6, v7);
  swift_endAccess();
  if (v3)
  {
    sub_1A58BCCA4();
    swift_allocError();
    *(_QWORD *)v8 = "deflateParams";
    v9 = 13;
    goto LABEL_14;
  }
  return swift_release();
}

uint64_t sub_1A58BAE90()
{
  return sub_1A58BBA7C();
}

uint64_t type metadata accessor for Deflate.Compressor()
{
  return objc_opt_self();
}

uint64_t sub_1A58BAEB8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t result;
  uint64_t v4;

  type metadata accessor for Deflate.Stream();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_DWORD *)(v1 + 104) = 0;
  *(_QWORD *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = 0;
  *(_BYTE *)(v1 + 128) = 1;
  swift_beginAccess();
  v2 = inflateInit2_((z_streamp)(v1 + 16), -15, "1.2.12", 112);
  swift_endAccess();
  if (v2)
  {
    sub_1A58BCCA4();
    swift_allocError();
    *(_QWORD *)v4 = "inflateInit2";
    *(_QWORD *)(v4 + 8) = 12;
    *(_BYTE *)(v4 + 16) = 2;
    *(_DWORD *)(v4 + 20) = v2;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v1;
    return v0;
  }
  return result;
}

int *sub_1A58BAFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int *result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  _QWORD *v67;
  int EnumCaseMultiPayload;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  void (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  uint64_t *v108;
  _QWORD *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  void (*v114)(void);
  void (*v115)(char *, uint64_t, uint64_t);
  _QWORD *v116;
  char *v117;
  uint64_t *v118;
  char *v119;
  _QWORD *v120;
  _QWORD *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD v136[6];

  v3 = v2;
  v113 = a2;
  v132 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAD68);
  MEMORY[0x1E0C80A78](v132);
  v119 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v124 = (uint64_t)&v110 - v7;
  v127 = type metadata accessor for Deflate.PartialResult(0);
  MEMORY[0x1E0C80A78](v127);
  v9 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v126 = (uint64_t)&v110 - v11;
  v12 = type metadata accessor for Deflate.InputBuffer(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v118 = (uint64_t *)((char *)&v110 - v16);
  MEMORY[0x1E0C80A78](v17);
  v122 = (char *)&v110 - v18;
  MEMORY[0x1E0C80A78](v19);
  v121 = (char **)((char *)&v110 - v20);
  MEMORY[0x1E0C80A78](v21);
  v120 = (char **)((char *)&v110 - v22);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char **)((char *)&v110 - v24);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v110 - v27;
  v29 = sub_1A594AE60();
  v135 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v112 = (char *)&v110 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v128 = (char *)&v110 - v32;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v110 - v34;
  if (sub_1A58BA68C())
  {
    v36 = v113;
    sub_1A594AE24();
    v37 = *(_QWORD *)(v125 + 16);
    result = (int *)swift_beginAccess();
    v39 = *(_QWORD *)(v37 + 32);
    if (v39 < 0)
    {
LABEL_66:
      __break(1u);
    }
    else
    {
      v40 = *(_QWORD *)(v37 + 56);
      if ((v40 & 0x8000000000000000) == 0)
      {
        result = (int *)type metadata accessor for Deflate.Result(0);
        v41 = 0;
        v42 = (_QWORD *)(v36 + result[5]);
        *v42 = 0;
        v42[1] = 0;
LABEL_57:
        v109 = (_QWORD *)(v36 + result[6]);
        *v109 = v39;
        v109[1] = v40;
        *(_QWORD *)(v36 + result[7]) = v41;
        return result;
      }
    }
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  v133 = v29;
  v110 = v14;
  sub_1A594AE24();
  v111 = a1;
  sub_1A58BC0B4(a1, (uint64_t)v28);
  v43 = 1;
  v123 = v28;
  v134 = v12;
  v131 = v35;
  v116 = v25;
  v44 = (uint64_t)v28;
  v117 = v9;
  while (1)
  {
    v130 = v43;
    sub_1A58BC0B4(v44, (uint64_t)v25);
    result = (int *)swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 1)
    {
      if (*v25)
        v47 = v25[1] - *v25;
      else
        v47 = 0;
    }
    else
    {
      v48 = v44;
      v49 = v135;
      v50 = v128;
      v51 = v133;
      (*(void (**)(char *, _QWORD *, uint64_t))(v135 + 32))(v128, v25, v133);
      v47 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      v52 = *(uint64_t (**)(char *, uint64_t))(v49 + 8);
      v44 = v48;
      result = (int *)v52(v50, v51);
    }
    v53 = (unsigned __int128)(v47 * (__int128)3) >> 64;
    v54 = 3 * v47;
    if (v53 != v54 >> 63)
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    if (qword_1EE7AAA08 != -1)
      result = (int *)swift_once();
    if (qword_1EE7AAD50 >= 0)
      v55 = qword_1EE7AAD50;
    else
      v55 = qword_1EE7AAD50 + 1;
    if (v54 >= v55 >> 1)
    {
      v57 = v54 + qword_1EE7AAD50;
      if (__OFADD__(v54, qword_1EE7AAD50))
        goto LABEL_61;
      v58 = __OFSUB__(v57, 1);
      v59 = v57 - 1;
      if (v58)
        goto LABEL_62;
      if (!qword_1EE7AAD50)
        goto LABEL_63;
      if (qword_1EE7AAD50 == -1 && v59 == 0x8000000000000000)
        goto LABEL_65;
      v60 = v59 / qword_1EE7AAD50;
      if (v60 >= 4)
        v60 = 4;
      v56 = v60 * qword_1EE7AAD50;
      if ((unsigned __int128)(v60 * (__int128)qword_1EE7AAD50) >> 64 != (v60 * qword_1EE7AAD50) >> 63)
        goto LABEL_64;
    }
    else if (v54 <= 20)
    {
      v56 = 20;
    }
    else
    {
      v56 = v54;
    }
    v61 = *(_QWORD *)(v125 + 16);
    v136[0] = 0;
    MEMORY[0x1E0C80A78](result);
    *(&v110 - 6) = (char *)v44;
    *(&v110 - 5) = (char *)v61;
    *(&v110 - 4) = (char *)sub_1A58BCCF8;
    *(&v110 - 3) = (char *)v62;
    *(&v110 - 2) = (char *)v136;
    swift_retain_n();
    v63 = v124;
    v64 = sub_1A58BC450(v124, v56, v61, (uint64_t (*)(uint64_t))sub_1A58BC9B8);
    if (v3)
    {
      swift_release();
      sub_1A55034FC(v44, type metadata accessor for Deflate.InputBuffer);
      return (int *)(*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v131, v133);
    }
    v65 = v64 & 1;
    *(_BYTE *)(v63 + *(int *)(v132 + 48)) = v64 & 1;
    v66 = v136[0];
    v67 = v121;
    sub_1A58BC0B4(v44, (uint64_t)v121);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v129 = 0;
    if (EnumCaseMultiPayload != 1)
    {
      v73 = v135;
      v74 = v67;
      v75 = v128;
      v76 = v133;
      (*(void (**)(char *, _QWORD *, uint64_t))(v135 + 32))(v128, v74, v133);
      v72 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v76);
      v71 = v122;
LABEL_37:
      v44 = (uint64_t)v123;
      if (v66 == v72)
        goto LABEL_38;
      goto LABEL_40;
    }
    v69 = *v67;
    v70 = v67;
    v71 = v122;
    if (v69)
    {
      v72 = v70[1] - v69;
      goto LABEL_37;
    }
    if (!v66)
    {
LABEL_38:
      v77 = v120;
      sub_1A594AE24();
      swift_storeEnumTagMultiPayload();
      goto LABEL_47;
    }
LABEL_40:
    sub_1A58BC0B4(v44, (uint64_t)v71);
    result = (int *)swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 1)
    {
      if (*v71)
        v78 = v71[1] - *v71;
      else
        v78 = 0;
    }
    else
    {
      v79 = v135;
      v80 = v128;
      v81 = v133;
      (*(void (**)(char *, _QWORD *, uint64_t))(v135 + 32))(v128, v71, v133);
      v78 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      v82 = *(uint64_t (**)(char *, uint64_t))(v79 + 8);
      v44 = (uint64_t)v123;
      result = (int *)v82(v80, v81);
    }
    v77 = v120;
    if (v78 < v66)
      goto LABEL_60;
    sub_1A58BBDA4(v66, v78, v120);
LABEL_47:
    v83 = v133;
    v84 = *(int *)(v132 + 48);
    v85 = v135;
    v86 = v119;
    v115 = *(void (**)(char *, uint64_t, uint64_t))(v135 + 16);
    v115(v119, v63, v133);
    v86[v84] = v65;
    sub_1A58BC9CC(v63);
    v87 = *(void (**)(void))(v85 + 32);
    v88 = v126;
    ((void (*)(uint64_t, char *, uint64_t))v87)(v126, v86, v83);
    v89 = v127;
    v90 = v88 + *(int *)(v127 + 20);
    sub_1A54E3394((uint64_t)v77, v90, type metadata accessor for Deflate.InputBuffer);
    swift_release();
    *(_BYTE *)(v88 + *(int *)(v89 + 24)) = v65;
    sub_1A594AE30();
    sub_1A55034FC(v44, type metadata accessor for Deflate.InputBuffer);
    sub_1A58BC0B4(v90, v44);
    v91 = v118;
    sub_1A58BC0B4(v44, (uint64_t)v118);
    v92 = swift_getEnumCaseMultiPayload();
    v114 = v87;
    if (v92 == 1)
    {
      v93 = *v91;
      v94 = (uint64_t)v117;
      v25 = v116;
      if (*v91)
      {
        v95 = v91[1];
        sub_1A54E3394(v126, (uint64_t)v117, type metadata accessor for Deflate.PartialResult);
        v45 = v131;
        if (v95 != v93)
          goto LABEL_52;
      }
      else
      {
        sub_1A54E3394(v126, (uint64_t)v117, type metadata accessor for Deflate.PartialResult);
        v45 = v131;
      }
    }
    else
    {
      v96 = v128;
      ((void (*)(char *, uint64_t *, uint64_t))v87)(v128, v91, v83);
      sub_1A5899084();
      sub_1A594BD60();
      sub_1A594BDB4();
      v97 = v136[0];
      v98 = v136[5];
      (*(void (**)(char *, uint64_t))(v135 + 8))(v96, v83);
      v94 = (uint64_t)v117;
      sub_1A54E3394(v88, (uint64_t)v117, type metadata accessor for Deflate.PartialResult);
      v45 = v131;
      v25 = v116;
      if (v97 != v98)
      {
LABEL_52:
        result = (int *)sub_1A55034FC(v94, type metadata accessor for Deflate.PartialResult);
        goto LABEL_8;
      }
    }
    v46 = *(_BYTE *)(v94 + *(int *)(v127 + 24));
    result = (int *)sub_1A55034FC(v94, type metadata accessor for Deflate.PartialResult);
    if ((v46 & 1) == 0)
      break;
LABEL_8:
    v3 = v129;
    v43 = v130 + 1;
    if (__OFADD__(v130, 1))
      goto LABEL_59;
  }
  v99 = v44;
  v100 = v133;
  v101 = (void (*)(char *, char *, uint64_t))v115;
  v115(v128, (uint64_t)v45, v133);
  v102 = (uint64_t)v110;
  sub_1A58BC0B4(v111, (uint64_t)v110);
  v103 = v112;
  v101(v112, v45, v100);
  v104 = sub_1A58BAB50();
  v105 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  v106 = *(void (**)(char *, uint64_t))(v135 + 8);
  v106(v103, v100);
  sub_1A55034FC(v102, type metadata accessor for Deflate.InputBuffer);
  sub_1A55034FC(v99, type metadata accessor for Deflate.InputBuffer);
  v106(v45, v100);
  v107 = *(_QWORD *)(v125 + 16);
  result = (int *)swift_beginAccess();
  v39 = *(_QWORD *)(v107 + 32);
  if (v39 < 0)
    goto LABEL_68;
  v40 = *(_QWORD *)(v107 + 56);
  if ((v40 & 0x8000000000000000) == 0)
  {
    v36 = v113;
    v114();
    result = (int *)type metadata accessor for Deflate.Result(0);
    v108 = (uint64_t *)(v36 + result[5]);
    *v108 = v104;
    v108[1] = v105;
    v41 = v130;
    goto LABEL_57;
  }
LABEL_69:
  __break(1u);
  return result;
}

uint64_t sub_1A58BB9B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  swift_retain();
  v3 = inflate((z_streamp)(v2 + 16), 2);
  swift_endAccess();
  if (v3 && v3 != -5)
  {
    sub_1A58BCCA4();
    swift_allocError();
    *(_QWORD *)v4 = "inflate";
    *(_QWORD *)(v4 + 8) = 7;
    *(_BYTE *)(v4 + 16) = 2;
    *(_DWORD *)(v4 + 20) = v3;
    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1A58BBA74()
{
  return sub_1A58BBA7C();
}

uint64_t sub_1A58BBA7C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Deflate.Decompressor()
{
  return objc_opt_self();
}

uint64_t sub_1A58BBACC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  uint64_t v45;
  uint64_t (*v46)(_QWORD);
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;

  v42 = a4;
  v43 = a5;
  v8 = sub_1A594AE60();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = type metadata accessor for Deflate.InputBuffer(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v36 - v18);
  v41 = a2;
  v45 = a2;
  v46 = a3;
  v20 = v42;
  v38 = a3;
  v21 = a1;
  v47 = v42;
  v48 = v43;
  v22 = v43;
  sub_1A58BC0B4(v21, (uint64_t)&v36 - v18);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v26 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v9 + 32))(v13, v19, v8);
    v50 = 0;
    MEMORY[0x1E0C80A78](v26);
    *(&v36 - 4) = (uint64_t)v13;
    *(&v36 - 3) = (uint64_t)sub_1A58BCA60;
    *(&v36 - 2) = (uint64_t)&v44;
    *(&v36 - 1) = (uint64_t)&v50;
    sub_1A594ADDC();
    if (v50)
      swift_willThrow();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
    return swift_release();
  }
  v23 = *v19;
  v37 = v19[1];
  sub_1A58BC0B4(v21, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!*v16)
      return swift_release();
    v25 = v40;
    v24 = v41;
    if (v16[1] == *v16)
      return swift_release();
  }
  else
  {
    v27 = v39;
    (*(void (**)(char *, _QWORD *, uint64_t))(v9 + 32))(v39, v16, v8);
    sub_1A5899084();
    sub_1A594BD60();
    sub_1A594BDB4();
    v28 = v50;
    v29 = v49;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v27, v8);
    v30 = v28 == v29;
    v25 = v40;
    v24 = v41;
    if (v30)
      return swift_release();
  }
  v31 = v37;
  result = sub_1A58BCBAC(v23, v37, v24, v38, v20, 1);
  if (v25)
    return swift_release();
  v33 = v31 - v23;
  if (!v23)
    v33 = 0;
  v34 = __OFSUB__(v33, result);
  v35 = v33 - result;
  if (!v34)
  {
    *v22 = v35;
    return swift_release();
  }
  __break(1u);
  return result;
}

void sub_1A58BBDA4(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7 = sub_1A594AE60();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Deflate.InputBuffer(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  v14 = (uint64_t *)((char *)&v18 - v13);
  v15 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if (v15 < 1)
  {
    sub_1A594AE24();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1A58BC0B4(v3, (uint64_t)&v18 - v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = *v14 + a1;
      if (*v14)
        v17 = v16 + v15;
      else
        v17 = 0;
      if (!*v14)
        v16 = 0;
      *a3 = v16;
      a3[1] = v17;
    }
    else
    {
      (*(void (**)(char *, _QWORD *, uint64_t))(v8 + 32))(v10, v14, v7);
      sub_1A594AE3C();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_1A58BBF38()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 128) & 1) != 0)
  {
    swift_beginAccess();
    inflateEnd((z_streamp)(v0 + 16));
  }
  else
  {
    swift_beginAccess();
    deflateEnd((z_streamp)(v0 + 16));
  }
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Deflate.Stream()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for Deflate.Stream.Kind()
{
  return &type metadata for Deflate.Stream.Kind;
}

ValueMetadata *type metadata accessor for Deflate.InputKind()
{
  return &type metadata for Deflate.InputKind;
}

ValueMetadata *type metadata accessor for Deflate()
{
  return &type metadata for Deflate;
}

unint64_t sub_1A58BC000()
{
  unint64_t result;

  result = qword_1EE7AAD58;
  if (!qword_1EE7AAD58)
  {
    result = MEMORY[0x1A85B1874]("ѽS?Po\n", &type metadata for Deflate.InputKind);
    atomic_store(result, (unint64_t *)&qword_1EE7AAD58);
  }
  return result;
}

unint64_t sub_1A58BC048()
{
  unint64_t result;

  result = qword_1EE7AAD60;
  if (!qword_1EE7AAD60)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DF178, &type metadata for Deflate.Stream.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7AAD60);
  }
  return result;
}

uint64_t type metadata accessor for Deflate.PartialResult(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7AAD80);
}

uint64_t type metadata accessor for Deflate.InputBuffer(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7982A8);
}

uint64_t sub_1A58BC0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Deflate.InputBuffer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A58BC0F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, _QWORD *a5)
{
  if (sub_1A58BA68C())
  {
    swift_beginAccess();
    *(_QWORD *)(a2 + 16) = 0;
    *(_DWORD *)(a2 + 24) = 0;
    return a3(1);
  }
  else
  {
    swift_retain();
    return sub_1A58BBACC(a1, a2, a3, a4, a5);
  }
}

uint64_t sub_1A58BC19C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t (*a6)(_QWORD), uint64_t a7, _QWORD *a8)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1A58BCBAC(a1, a2, a5, a6, a7, a4);
  if (v8)
    return v14;
  v15 = a2 - a1;
  if (!a1)
    v15 = 0;
  v16 = __OFADD__(a3, v15);
  v17 = a3 + v15;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    v16 = __OFSUB__(v17, result);
    v18 = v17 - result;
    if (!v16)
    {
      *a8 = v18;
      return result != 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A58BC21C(BOOL *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  int v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  swift_beginAccess();
  *(_QWORD *)(a4 + 40) = a2;
  if (a2)
  {
    v12 = a3 - a2;
    if (a3 - a2 < 0x100000000)
      goto LABEL_5;
    swift_release();
    sub_1A594C9B4();
    __break(1u);
  }
  v12 = 0;
LABEL_5:
  *(_DWORD *)(a4 + 48) = v12;
  result = sub_1A58BAD24(a5);
  if (v5)
  {
LABEL_11:
    *(_QWORD *)(a4 + 40) = 0;
    *(_DWORD *)(a4 + 48) = 0;
    swift_release();
    return v6;
  }
  if (a2)
    v14 = a3 - a2;
  else
    v14 = 0;
  v15 = *(unsigned int *)(a4 + 48);
  v6 = v14 - v15;
  if (!__OFSUB__(v14, v15))
  {
    *a1 = (_DWORD)v15 == 0;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A58BC344(BOOL *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v11;
  int v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v11 = swift_beginAccess();
  *(_QWORD *)(a4 + 40) = a2;
  if (a2)
  {
    v12 = a3 - a2;
    if (a3 - a2 < 0x100000000)
      goto LABEL_5;
    v11 = sub_1A594C9B4();
    __break(1u);
  }
  v12 = 0;
LABEL_5:
  *(_DWORD *)(a4 + 48) = v12;
  result = a5(v11);
  if (v5)
  {
LABEL_11:
    *(_QWORD *)(a4 + 40) = 0;
    *(_DWORD *)(a4 + 48) = 0;
    return result;
  }
  if (a2)
    v14 = a3 - a2;
  else
    v14 = 0;
  v15 = *(unsigned int *)(a4 + 48);
  result = v14 - v15;
  if (!__OFSUB__(v14, v15))
  {
    *a1 = (_DWORD)v15 == 0;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A58BC450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  void *v16;
  _QWORD v17[2];
  _QWORD aBlock[6];
  BOOL v19;

  v17[0] = a1;
  v7 = sub_1A594ADB8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = swift_slowAlloc();
  v12 = v17[1];
  v13 = sub_1A58BC344(&v19, v11, v11 + a2, a3, a4);
  if (v12)
  {
    MEMORY[0x1A85B1964](v11, -1, -1);
    swift_willThrow();
    return swift_release();
  }
  if (a2 < 0)
  {
    __break(1u);
LABEL_9:
    swift_release();
    result = sub_1A594C9C0();
    __break(1u);
    return result;
  }
  if (v13 < 0 || v13 > a2)
    goto LABEL_9;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v11;
  *(_QWORD *)(v15 + 24) = v11 + a2;
  aBlock[4] = sub_1A58BCA30;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A587D408;
  aBlock[3] = &block_descriptor_29;
  v16 = _Block_copy(aBlock);
  *v10 = 0;
  v10[1] = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF5D0], v7);
  sub_1A594ADC4();
  swift_release();
  swift_release();
  return v19;
}

unint64_t sub_1A58BC64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A594C720();
  swift_bridgeObjectRelease();
  sub_1A594C744();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A58BC770(a1, a2, a3 & 0xFFFFFFFF000000FFLL);
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  return 0xD000000000000017;
}

uint64_t sub_1A58BC770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v4;

  result = 1263492954;
  switch(HIDWORD(a3))
  {
    case 0xFFFFFFFA:
      result = 0x4F49535245565F5ALL;
      break;
    case 0xFFFFFFFB:
      v4 = 0x5F4655425F5ALL;
      goto LABEL_6;
    case 0xFFFFFFFC:
      v4 = 0x5F4D454D5F5ALL;
LABEL_6:
      result = v4 & 0xFFFFFFFFFFFFLL | 0x5245000000000000;
      break;
    case 0xFFFFFFFD:
      result = 0x455F415441445F5ALL;
      break;
    case 0xFFFFFFFE:
    case 1:
      result = 0x4D41455254535F5ALL;
      break;
    case 0xFFFFFFFF:
      result = 0x4F4E5252455F5ALL;
      break;
    case 0:
      return result;
    case 2:
      result = 0x445F4445454E5F5ALL;
      break;
    default:
      result = sub_1A594CC9C();
      break;
  }
  return result;
}

unint64_t sub_1A58BC8C0()
{
  uint64_t v0;

  return sub_1A58BC64C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned __int8 *)(v0 + 16) | ((unint64_t)*(unsigned int *)(v0 + 20) << 32));
}

uint64_t sub_1A58BC8D4(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, BOOL))
{
  uint64_t result;
  uint64_t v12;

  result = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  if (__OFADD__(a2, a3))
  {
    __break(1u);
  }
  else
  {
    if (a1)
      v12 = a1 + a2;
    else
      v12 = 0;
    result = a6(a1, v12, a3, a2 + a3 >= result);
    if ((result & 1) != 0)
      *a4 = 1;
  }
  return result;
}

uint64_t sub_1A58BC984()
{
  uint64_t result;

  result = sub_1A58BCA7C();
  qword_1EE7AAD50 = result;
  return result;
}

uint64_t sub_1A58BC9A0(char a1)
{
  uint64_t v1;

  return sub_1A58BAC5C(a1, v1);
}

uint64_t sub_1A58BC9B8()
{
  return sub_1A58BCD10();
}

uint64_t sub_1A58BC9CC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAD68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for Deflate.Result(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7982F8);
}

uint64_t sub_1A58BCA20()
{
  return swift_deallocObject();
}

uint64_t sub_1A58BCA30()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + 16);
  if (result)
    JUMPOUT(0x1A85B1964);
  return result;
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A58BCA60(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return sub_1A58BC19C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(uint64_t (**)(_QWORD))(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD **)(v4 + 40));
}

uint64_t sub_1A58BCA7C()
{
  uint64_t result;
  uint64_t v1;
  size_t v2;
  int v3;
  _QWORD v4[2];

  v4[1] = *MEMORY[0x1E0C80C00];
  v4[0] = 0x700000006;
  v3 = 0;
  v2 = 4;
  if (!sysctl((int *)v4, 2u, &v3, &v2, 0, 0))
    return v3;
  sub_1A594C720();
  v1 = swift_bridgeObjectRelease();
  MEMORY[0x1A85ACCC0](v1);
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  result = sub_1A594C9C0();
  __break(1u);
  return result;
}

uint64_t sub_1A58BCBAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5, char a6)
{
  uint64_t v6;
  int v12;
  uint64_t result;

  swift_beginAccess();
  *(_QWORD *)(a3 + 16) = a1;
  if (a1)
  {
    v12 = a2 - a1;
    if (a2 - a1 < 0x100000000)
      goto LABEL_5;
    sub_1A594C9B4();
    __break(1u);
  }
  v12 = 0;
LABEL_5:
  *(_DWORD *)(a3 + 24) = v12;
  result = a4(a6 & 1);
  if (!v6)
    result = *(unsigned int *)(a3 + 24);
  *(_QWORD *)(a3 + 16) = 0;
  *(_DWORD *)(a3 + 24) = 0;
  return result;
}

uint64_t sub_1A58BCC98(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;

  return sub_1A58BC8D4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, BOOL))(v4 + 24));
}

unint64_t sub_1A58BCCA4()
{
  unint64_t result;

  result = qword_1EE7AAD70;
  if (!qword_1EE7AAD70)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DF29C, &type metadata for Deflate.Error);
    atomic_store(result, (unint64_t *)&qword_1EE7AAD70);
  }
  return result;
}

uint64_t sub_1A58BCCE8()
{
  return swift_deallocObject();
}

uint64_t sub_1A58BCCF8(uint64_t a1)
{
  uint64_t v1;

  return sub_1A58BB9B0(a1, v1);
}

uint64_t sub_1A58BCD10()
{
  uint64_t v0;

  return sub_1A58BC0F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD **)(v0 + 48));
}

ValueMetadata *type metadata accessor for Deflate.Error()
{
  return &type metadata for Deflate.Error;
}

char *sub_1A58BCD40(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594AE60();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for Deflate.InputBuffer(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      swift_storeEnumTagMultiPayload();
    }
    a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  }
  return a1;
}

uint64_t sub_1A58BCE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  void (*v7)(uint64_t, uint64_t);

  v4 = sub_1A594AE60();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v7(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  type metadata accessor for Deflate.InputBuffer(0);
  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v4);
  return result;
}

char *sub_1A58BCED0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = sub_1A594AE60();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Deflate.InputBuffer(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    swift_storeEnumTagMultiPayload();
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_1A58BCFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;

  v6 = sub_1A594AE60();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_1A55034FC(a1 + v8, type metadata accessor for Deflate.InputBuffer);
    v11 = type metadata accessor for Deflate.InputBuffer(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v9, v10, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_1A58BD08C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = sub_1A594AE60();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Deflate.InputBuffer(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    swift_storeEnumTagMultiPayload();
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_1A58BD15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;

  v6 = sub_1A594AE60();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_1A55034FC(a1 + v8, type metadata accessor for Deflate.InputBuffer);
    v11 = type metadata accessor for Deflate.InputBuffer(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1A58BD248()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58BD254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = sub_1A594AE60();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for Deflate.InputBuffer(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

uint64_t sub_1A58BD2F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58BD304(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1A594AE60();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for Deflate.InputBuffer(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t sub_1A58BD3A8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A594AE60();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Deflate.InputBuffer(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t _s15IMAP2Connection7DeflateO9InputKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A58BD480 + 4 * byte_1A59DF05E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A58BD4B4 + 4 * byte_1A59DF059[v4]))();
}

uint64_t sub_1A58BD4B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58BD4BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58BD4C4);
  return result;
}

uint64_t sub_1A58BD4D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58BD4D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A58BD4DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58BD4E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Deflate.Stream.OutputStatus()
{
  return &type metadata for Deflate.Stream.OutputStatus;
}

uint64_t *sub_1A58BD500(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594AE60();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
    *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_1A58BD59C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1A58BD60C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1A58BD6A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1A58BD710(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1A58BD780()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58BD78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1A58BD7C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58BD7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1A58BD814()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594AE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A58BD894(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v8 = sub_1A594AE60();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A58BD944(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    v3 = sub_1A594AE60();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *sub_1A58BD98C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1A594AE60();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1A58BDA14(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for Deflate.InputBuffer);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1A594AE60();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_1A58BDAB4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1A594AE60();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1A58BDB3C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for Deflate.InputBuffer);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1A594AE60();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A58BDBDC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594AE60();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1A58BDC4C()
{
  unint64_t result;

  result = qword_1EE7AAD90;
  if (!qword_1EE7AAD90)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DF24C, &type metadata for Deflate.Stream.OutputStatus);
    atomic_store(result, (unint64_t *)&qword_1EE7AAD90);
  }
  return result;
}

ValueMetadata *type metadata accessor for Deflate.Statistics()
{
  return &type metadata for Deflate.Statistics;
}

uint64_t sub_1A58BDCAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a1;
  v22 = type metadata accessor for Deflate.InputBuffer(0);
  MEMORY[0x1E0C80A78](v22);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Deflate.Result(0);
  MEMORY[0x1E0C80A78](v4);
  v23 = (uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7982C8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s12OutputHelperV5ChunkVMa(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s12OutputHelperVMa(0);
  v14 = v1 + *(int *)(v13 + 24);
  sub_1A58BDF88(v14, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A58BDFD0((uint64_t)v8);
  }
  else
  {
    sub_1A58BE010((uint64_t)v8, (uint64_t)v12);
    v15 = sub_1A594AE60();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v3, v12, v15);
    swift_storeEnumTagMultiPayload();
    v16 = v25;
    sub_1A58B9C5C((uint64_t)v3, v12[*(int *)(v9 + 20)], v23);
    if (v16)
    {
      sub_1A55034FC((uint64_t)v3, type metadata accessor for Deflate.InputBuffer);
      sub_1A58BDFD0(v14);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v14, 1, 1, v9);
      return sub_1A55034FC((uint64_t)v12, _s12OutputHelperV5ChunkVMa);
    }
    v25 = 0;
    sub_1A55034FC((uint64_t)v3, type metadata accessor for Deflate.InputBuffer);
    v18 = v23;
    sub_1A594AE30();
    sub_1A55034FC(v18, type metadata accessor for Deflate.Result);
    sub_1A58BDFD0(v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v14, 1, 1, v9);
    sub_1A55034FC((uint64_t)v12, _s12OutputHelperV5ChunkVMa);
  }
  v19 = v1 + *(int *)(v13 + 20);
  v20 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v24, v19, v20);
}

uint64_t _s12OutputHelperV5ChunkVMa(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7982B8);
}

uint64_t _s12OutputHelperVMa(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7982E8);
}

uint64_t sub_1A58BDF88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7982C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A58BDFD0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7982C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A58BE010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s12OutputHelperV5ChunkVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

