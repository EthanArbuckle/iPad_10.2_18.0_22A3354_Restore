uint64_t *sub_1A556C274(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[5];
  v3 = a1[6];
  sub_1A556BD18(a1[1], a1[2]);
  sub_1A556BD18(v2, v3);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A556C2DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 120);
  v12 = *(_QWORD *)(a1 + 160);
  v13 = *(_QWORD *)(a1 + 152);
  v9 = *(_BYTE *)(a1 + 104);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5539BC0(v2, v3, v4, v5, v6, v7, v9);
  sub_1A556BD18(v11, v8);
  sub_1A556BD18(v13, v12);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t *sub_1A556C3F4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[5];
  v3 = a1[6];
  sub_1A556C08C(a1[1], a1[2]);
  sub_1A556C08C(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A556C45C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  return a1;
}

uint64_t sub_1A556C498(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 120);
  v12 = *(_QWORD *)(a1 + 160);
  v13 = *(_QWORD *)(a1 + 152);
  v9 = *(_BYTE *)(a1 + 104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5539C24(v2, v3, v4, v5, v6, v7, v9);
  sub_1A556C08C(v11, v8);
  sub_1A556C08C(v13, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A556C5B4(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, unint64_t))
{
  sub_1A5529F7C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int8 *)(a1 + 60) << 32), a2);
  return a1;
}

unint64_t sub_1A556C604()
{
  unint64_t result;

  result = qword_1EE797590;
  if (!qword_1EE797590)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A642C, &_s13CapturedStateV16UnknownMailboxesVN);
    atomic_store(result, (unint64_t *)&qword_1EE797590);
  }
  return result;
}

unint64_t sub_1A556C648()
{
  unint64_t result;

  result = qword_1EE79B450;
  if (!qword_1EE79B450)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEDEA0], MEMORY[0x1E0DEDE70]);
    atomic_store(result, (unint64_t *)&qword_1EE79B450);
  }
  return result;
}

uint64_t sub_1A556C68C(uint64_t a1)
{
  sub_1A55212D0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A556C6E4(uint64_t a1)
{
  sub_1A54E8FCC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A556C73C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for RunningTask.Task(a2, a1);
  return a2;
}

uint64_t sub_1A556C778(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A556C7A8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A556C7D8(uint64_t a1)
{
  destroy for RunningTask.Task(a1);
  return a1;
}

uint64_t _s13CapturedStateV17MailboxesToSelectV12UsageElementVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s13CapturedStateV17MailboxesToSelectV12UsageElementVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *_s13CapturedStateV17MailboxesToSelectV12UsageElementVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s13CapturedStateV17MailboxesToSelectV12UsageElementVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13CapturedStateV17MailboxesToSelectV12UsageElementVMa()
{
  return &_s13CapturedStateV17MailboxesToSelectV12UsageElementVN;
}

uint64_t destroy for RunningTasksCapturedValue.CapturedTask(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 64);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for RunningTasksCapturedValue.CapturedTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v6)
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v6;
    v7 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v7;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v8;
  }
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for RunningTasksCapturedValue.CapturedTask(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = (_OWORD *)(a1 + 56);
  v5 = (_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A556CC64(a1 + 56);
      v7 = *(_OWORD *)(a2 + 72);
      *v4 = *v5;
      *(_OWORD *)(a1 + 72) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 72);
    *v4 = *v5;
    *(_OWORD *)(a1 + 72) = v8;
  }
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  return a1;
}

uint64_t sub_1A556CC64(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy90_8_0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 74) = *(_OWORD *)(a2 + 74);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for RunningTasksCapturedValue.CapturedTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  if (!*(_QWORD *)(a1 + 64))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 64);
  if (!v5)
  {
    sub_1A556CC64(a1 + 56);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v7;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for RunningTasksCapturedValue.CapturedTask(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 90))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RunningTasksCapturedValue.CapturedTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 90) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 90) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue.CapturedTask()
{
  return &type metadata for RunningTasksCapturedValue.CapturedTask;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue.CapturedTask.MailboxTask()
{
  return &type metadata for RunningTasksCapturedValue.CapturedTask.MailboxTask;
}

_QWORD *_s13CapturedStateV16UnknownMailboxesVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV16UnknownMailboxesVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV16UnknownMailboxesVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s13CapturedStateV16UnknownMailboxesVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *_s13CapturedStateV16UnknownMailboxesVMa()
{
  return &_s13CapturedStateV16UnknownMailboxesVN;
}

ValueMetadata *_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadV10CodingKeysON;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1A556D0A4 + 4 * byte_1A59A5C69[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1A556D0D8 + 4 * byte_1A59A5C64[v4]))();
}

uint64_t sub_1A556D0D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A556D0E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A556D0E8);
  return result;
}

uint64_t sub_1A556D0F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A556D0FCLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1A556D100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A556D108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV16MailboxSyncStateV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV16MailboxSyncStateV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteV9NamespaceV10CodingKeysOMa()
{
  return &_s13CapturedStateV14CapturedRemoteV9NamespaceV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteV10CodingKeysOMa()
{
  return &_s13CapturedStateV14CapturedRemoteV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV7MailboxV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV10CodingKeysON;
}

uint64_t _s18PipeliningBehaviorOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13CapturedStateV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A556D240 + 4 * byte_1A59A5C73[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A556D274 + 4 * byte_1A59A5C6E[v4]))();
}

uint64_t sub_1A556D274(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A556D27C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A556D284);
  return result;
}

uint64_t sub_1A556D290(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A556D298);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A556D29C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A556D2A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13CapturedStateV10CodingKeysOMa()
{
  return &_s13CapturedStateV10CodingKeysON;
}

uint64_t _s13CapturedStateV14CapturedRemoteV7MailboxVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s13CapturedStateV14CapturedRemoteV7MailboxVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *_s13CapturedStateV14CapturedRemoteV7MailboxVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s13CapturedStateV14CapturedRemoteV7MailboxVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV14CapturedRemoteV7MailboxVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13CapturedStateV14CapturedRemoteV7MailboxVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteV7MailboxVMa()
{
  return &_s13CapturedStateV14CapturedRemoteV7MailboxVN;
}

uint64_t _s13CapturedStateV14CapturedRemoteV6ServerVwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[4])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  if (v3 >= 2)
    v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v4 = -2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s13CapturedStateV14CapturedRemoteV6ServerVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteV6ServerVMa()
{
  return &_s13CapturedStateV14CapturedRemoteV6ServerVN;
}

uint64_t _s13CapturedStateV7MailboxV21UserInitiatedDownloadVwxx(uint64_t a1)
{
  sub_1A54E46E8(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedStateV7MailboxV21UserInitiatedDownloadVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1A54E42B4(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV21UserInitiatedDownloadVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1A54E42B4(v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  sub_1A54E46E8(v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV21UserInitiatedDownloadVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1A54E46E8(v4, v5);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV21UserInitiatedDownloadVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13CapturedStateV7MailboxV21UserInitiatedDownloadVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV21UserInitiatedDownloadVMa()
{
  return &_s13CapturedStateV7MailboxV21UserInitiatedDownloadVN;
}

uint64_t _s13CapturedStateV7MailboxV17MailboxOfInterestVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV17MailboxOfInterestVwca(uint64_t a1, int *a2)
{
  int v4;
  uint64_t v5;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v5 = *((_QWORD *)a2 + 3);
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s13CapturedStateV7MailboxV17MailboxOfInterestVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV17MailboxOfInterestVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s13CapturedStateV7MailboxV17MailboxOfInterestVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV17MailboxOfInterestVMa()
{
  return &_s13CapturedStateV7MailboxV17MailboxOfInterestVN;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_WORD *)(a1 + 68) = *(_WORD *)(a2 + 68);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVwca(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v5 = *(_DWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v5;
  *(_BYTE *)(a1 + 69) = *(_BYTE *)(a2 + 69);
  return a1;
}

__n128 __swift_memcpy70_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 62) = *(_QWORD *)(a2 + 62);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_WORD *)(a1 + 68) = *(_WORD *)(a2 + 68);
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 70))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 68) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 70) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 70) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVMa()
{
  return &_s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVN;
}

uint64_t destroy for OpaquePersistedMessageIdentifier(uint64_t a1)
{
  return sub_1A54E46E8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_1A54E42B4(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_1A54E42B4(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  sub_1A54E46E8(v6, v7);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1A54E46E8(v4, v5);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVMa()
{
  return &_s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVN;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue()
{
  return &type metadata for RunningTasksCapturedValue;
}

ValueMetadata *_s13CapturedStateV17MailboxesToSelectVMa()
{
  return &_s13CapturedStateV17MailboxesToSelectVN;
}

uint64_t _s13CapturedStateV19CapturedSyncRequestVwca(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV19CapturedSyncRequestVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TaskLoggerID(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s21LocationAndExtensionsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13CapturedStateV19CapturedSyncRequestVMa()
{
  return &_s13CapturedStateV19CapturedSyncRequestVN;
}

uint64_t _s13CapturedStateV14PathAttributesVwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  if (v6 >= 2)
    v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v7 = -2;
  if (v7 < 0)
    v7 = -1;
  return (v7 + 1);
}

uint64_t _s13CapturedStateV14PathAttributesVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A556E048 + 4 * byte_1A59A5C7D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A556E07C + 4 * byte_1A59A5C78[v4]))();
}

uint64_t sub_1A556E07C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A556E084(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A556E08CLL);
  return result;
}

uint64_t sub_1A556E098(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A556E0A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A556E0A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A556E0AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13CapturedStateV14PathAttributesVMa()
{
  return &_s13CapturedStateV14PathAttributesVN;
}

uint64_t _s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVwxx(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 48) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v5;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v4;
    v6 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v6;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v7 = *(_QWORD *)(a2 + 48);
  if (v7 == 1)
  {
    v8 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v8;
  }
  else
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v7;
    v9 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v9;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v4 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16) == 1)
  {
    if (v6 == 1)
    {
      v7 = *(_OWORD *)(a2 + 24);
      *v4 = *v5;
      *(_OWORD *)(a1 + 24) = v7;
    }
    else
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
  }
  else if (v6 == 1)
  {
    sub_1A556CC64(a1 + 8);
    v8 = v5[1];
    *v4 = *v5;
    v4[1] = v8;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
  }
  v9 = (_OWORD *)(a1 + 40);
  v10 = (_OWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48) == 1)
  {
    if (v11 == 1)
    {
      v12 = *(_OWORD *)(a2 + 56);
      *v9 = *v10;
      *(_OWORD *)(a1 + 56) = v12;
    }
    else
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
  }
  else if (v11 == 1)
  {
    sub_1A556CC64(a1 + 40);
    v13 = *(_OWORD *)(a2 + 56);
    *v9 = *v10;
    *(_OWORD *)(a1 + 56) = v13;
  }
  else
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8_0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVwta(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v4 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 16) == 1)
    goto LABEL_4;
  v6 = *(_QWORD *)(a2 + 16);
  if (v6 == 1)
  {
    sub_1A556CC64((uint64_t)v4);
LABEL_4:
    v7 = v5[1];
    *v4 = *v5;
    v4[1] = v7;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  if (*(_QWORD *)(a1 + 48) != 1)
  {
    v9 = *(_QWORD *)(a2 + 48);
    if (v9 != 1)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v9;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1A556CC64(a1 + 40);
  }
  v10 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v10;
LABEL_11:
  v12 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 88))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 80);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 88) = 0;
    if (a2)
      *(_QWORD *)(result + 80) = a2;
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVMa()
{
  return &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVN;
}

unint64_t sub_1A556E59C()
{
  unint64_t result;

  result = qword_1EE7A8A08;
  if (!qword_1EE7A8A08)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5FF4, &_s13CapturedStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A08);
  }
  return result;
}

unint64_t sub_1A556E5E4()
{
  unint64_t result;

  result = qword_1EE7A8A10;
  if (!qword_1EE7A8A10)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A60AC, &_s13CapturedStateV7MailboxV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A10);
  }
  return result;
}

unint64_t sub_1A556E62C()
{
  unint64_t result;

  result = qword_1EE7A8A18;
  if (!qword_1EE7A8A18)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6164, &_s13CapturedStateV14CapturedRemoteV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A18);
  }
  return result;
}

unint64_t sub_1A556E674()
{
  unint64_t result;

  result = qword_1EE7A8A20;
  if (!qword_1EE7A8A20)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A621C, &_s13CapturedStateV14CapturedRemoteV9NamespaceV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A20);
  }
  return result;
}

unint64_t sub_1A556E6BC()
{
  unint64_t result;

  result = qword_1EE7A8A28;
  if (!qword_1EE7A8A28)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A62D4, &_s13CapturedStateV7MailboxV16MailboxSyncStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A28);
  }
  return result;
}

unint64_t sub_1A556E704()
{
  unint64_t result;

  result = qword_1EE7A8A30;
  if (!qword_1EE7A8A30)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A638C, &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A30);
  }
  return result;
}

unint64_t sub_1A556E74C()
{
  unint64_t result;

  result = qword_1EE7976A8;
  if (!qword_1EE7976A8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A62FC, &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7976A8);
  }
  return result;
}

unint64_t sub_1A556E794()
{
  unint64_t result;

  result = qword_1EE7976A0;
  if (!qword_1EE7976A0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6324, &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7976A0);
  }
  return result;
}

unint64_t sub_1A556E7DC()
{
  unint64_t result;

  result = qword_1EE797608;
  if (!qword_1EE797608)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6244, &_s13CapturedStateV7MailboxV16MailboxSyncStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797608);
  }
  return result;
}

unint64_t sub_1A556E824()
{
  unint64_t result;

  result = qword_1EE797600;
  if (!qword_1EE797600)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A626C, &_s13CapturedStateV7MailboxV16MailboxSyncStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797600);
  }
  return result;
}

unint64_t sub_1A556E86C()
{
  unint64_t result;

  result = qword_1EE7A0438;
  if (!qword_1EE7A0438)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A618C, &_s13CapturedStateV14CapturedRemoteV9NamespaceV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A0438);
  }
  return result;
}

unint64_t sub_1A556E8B4()
{
  unint64_t result;

  result = qword_1EE7A0430;
  if (!qword_1EE7A0430)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A61B4, &_s13CapturedStateV14CapturedRemoteV9NamespaceV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A0430);
  }
  return result;
}

unint64_t sub_1A556E8FC()
{
  unint64_t result;

  result = qword_1EE7974E8;
  if (!qword_1EE7974E8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A60D4, &_s13CapturedStateV14CapturedRemoteV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7974E8);
  }
  return result;
}

unint64_t sub_1A556E944()
{
  unint64_t result;

  result = qword_1EE7974E0;
  if (!qword_1EE7974E0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A60FC, &_s13CapturedStateV14CapturedRemoteV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7974E0);
  }
  return result;
}

unint64_t sub_1A556E98C()
{
  unint64_t result;

  result = qword_1EE797670;
  if (!qword_1EE797670)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A601C, &_s13CapturedStateV7MailboxV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797670);
  }
  return result;
}

unint64_t sub_1A556E9D4()
{
  unint64_t result;

  result = qword_1EE797668;
  if (!qword_1EE797668)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6044, &_s13CapturedStateV7MailboxV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797668);
  }
  return result;
}

unint64_t sub_1A556EA1C()
{
  unint64_t result;

  result = qword_1EE797550;
  if (!qword_1EE797550)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5F64, &_s13CapturedStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797550);
  }
  return result;
}

unint64_t sub_1A556EA64()
{
  unint64_t result;

  result = qword_1EE797548;
  if (!qword_1EE797548)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5F8C, &_s13CapturedStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797548);
  }
  return result;
}

uint64_t sub_1A556EAA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D614E676F6CLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656E69676E65 && a2 == 0xE800000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A5A0E510 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A5A0E530 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A5A0E550 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A5A0E570 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x736B736174 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

unint64_t sub_1A556EDD8()
{
  unint64_t result;

  result = qword_1EE797558;
  if (!qword_1EE797558)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7744, &_s13CapturedStateV14PathAttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797558);
  }
  return result;
}

unint64_t sub_1A556EE1C()
{
  unint64_t result;

  result = qword_1EE7974B8;
  if (!qword_1EE7974B8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A76F4, &_s13CapturedStateV19CapturedSyncRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7974B8);
  }
  return result;
}

unint64_t sub_1A556EE60()
{
  unint64_t result;

  result = qword_1EE797598;
  if (!qword_1EE797598)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A76A4, &_s13CapturedStateV17MailboxesToSelectV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797598);
  }
  return result;
}

unint64_t sub_1A556EEA4()
{
  unint64_t result;

  result = qword_1EE7975C8;
  if (!qword_1EE7975C8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6404, &_s13CapturedStateV17MailboxesToSelectV12UsageElementVN);
    atomic_store(result, (unint64_t *)&qword_1EE7975C8);
  }
  return result;
}

unint64_t sub_1A556EEE8()
{
  unint64_t result;

  result = qword_1EE797C28;
  if (!qword_1EE797C28)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7654, &type metadata for RunningTasksCapturedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797C28);
  }
  return result;
}

uint64_t sub_1A556EF2C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(a2);
    v7 = a3();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF10], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A556EF90()
{
  unint64_t result;

  result = qword_1EE797C20;
  if (!qword_1EE797C20)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A63DC, &type metadata for RunningTasksCapturedValue.CapturedTask);
    atomic_store(result, (unint64_t *)&qword_1EE797C20);
  }
  return result;
}

uint64_t sub_1A556EFD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x697463656E6E6F63 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x786F626C69616DLL && a2 == 0xE700000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6567617375 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A556F12C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65786F626C69616DLL && a2 == 0xE900000000000073;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617375 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A556F220(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A556F2E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7374726F70707573 && a2 == 0xEC00000065766F4DLL;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A5A0E6B0 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A5A0E6D0 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001A5A0E6F0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A556F49C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6170655368746170 && a2 == 0xED0000726F746172 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x556C616963657073 && a2 == 0xEA00000000006573)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A556F678(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x786966657270 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F74617261706573 && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A556F76C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726576726573 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65786F626C69616DLL && a2 == 0xE900000000000073 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A5A0E610 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63617073656D616ELL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A556F924(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x53676E69646E6570 && a2 == 0xEB00000000636E79;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6552686372616573 && a2 == 0xEE00737473657571 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A5A0E810)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A556FAB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64696C6156646975 && a2 == 0xEB00000000797469;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5764656863746566 && a2 == 0xED0000776F646E69 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4D74736568676968 && a2 == 0xED0000716553646FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A556FC64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A556FD90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6580597 && a2 == 0xE300000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A556FEAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E697373696DLL && a2 == 0xE700000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701736292 && a2 == 0xE400000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A5A0E7D0 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5564656972657571 && a2 == 0xEB00000000734449 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A5A0E7F0 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1A5570194(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x436567617373656DLL && a2 == 0xEC000000746E756FLL;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449557478656ELL && a2 == 0xE700000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64696C6156646975 && a2 == 0xEB00000000797469 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4D74736568676968 && a2 == 0xED0000716553646FLL || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x70657453636E7973 && a2 == 0xE900000000000073 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A5A0E630 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A5A0E650 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001A5A0E670 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001A5A0E690 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x4D676E697373696DLL && a2 == 0xEF73656761737365)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1A5570600(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E69646E6570 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701736292 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A55706E0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001A5A0E710 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A5A0E730 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A5A0E750 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001A5A0E770 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001A5A0E790 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A5A0E7B0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1A5570924(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A5A0E590 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A5A0E5B0 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74617453636E7973 && a2 == 0xE900000000000065 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x75716552636E7973 && a2 == 0xEC00000073747365 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A5A0E5D0 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A5A0E5F0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

unint64_t sub_1A5570BF8()
{
  unint64_t result;

  result = qword_1EE7975D8;
  if (!qword_1EE7975D8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7604, &_s13CapturedStateV7MailboxV17MailboxOfInterestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7975D8);
  }
  return result;
}

unint64_t sub_1A5570C3C()
{
  unint64_t result;

  result = qword_1EE797678;
  if (!qword_1EE797678)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A75B4, &_s13CapturedStateV7MailboxV21UserInitiatedDownloadV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797678);
  }
  return result;
}

unint64_t sub_1A5570C80()
{
  unint64_t result;

  result = qword_1EE7974F0;
  if (!qword_1EE7974F0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7564, &_s13CapturedStateV14CapturedRemoteV6ServerV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7974F0);
  }
  return result;
}

unint64_t sub_1A5570CC4()
{
  unint64_t result;

  result = qword_1EE797518;
  if (!qword_1EE797518)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7514, &_s13CapturedStateV14CapturedRemoteV7MailboxV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797518);
  }
  return result;
}

unint64_t sub_1A5570D08()
{
  unint64_t result;

  result = qword_1EE7976C0;
  if (!qword_1EE7976C0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A74C4, &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7976C0);
  }
  return result;
}

unint64_t sub_1A5570D4C()
{
  unint64_t result;

  result = qword_1EE7976B0;
  if (!qword_1EE7976B0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5D5C, &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadVN);
    atomic_store(result, (unint64_t *)&qword_1EE7976B0);
  }
  return result;
}

unint64_t sub_1A5570D90()
{
  unint64_t result;

  result = qword_1EE797610;
  if (!qword_1EE797610)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7474, &_s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797610);
  }
  return result;
}

unint64_t sub_1A5570DD4()
{
  unint64_t result;

  result = qword_1EE797630;
  if (!qword_1EE797630)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7424, &_s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797630);
  }
  return result;
}

unint64_t sub_1A5570E18()
{
  unint64_t result;

  result = qword_1EE797578;
  if (!qword_1EE797578)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A73D4, &_s13CapturedStateV16UnknownMailboxesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797578);
  }
  return result;
}

unint64_t sub_1A5570E5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EE7992B0;
  if (!qword_1EE7992B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7992A8);
    v2 = sub_1A556B9D0(&qword_1EE799DD8, &qword_1EE799DD0, MEMORY[0x1E0DEE100]);
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EE7992B0);
  }
  return result;
}

unint64_t sub_1A5570EE0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EE7992A0;
  if (!qword_1EE7992A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE799298);
    v2 = sub_1A556EF2C(&qword_1EE799600, &qword_1EE7995F8, (uint64_t (*)(void))sub_1A556B7F4);
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EE7992A0);
  }
  return result;
}

unint64_t sub_1A5570F64()
{
  unint64_t result;

  result = qword_1EE7975B0;
  if (!qword_1EE7975B0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7384, &_s13CapturedStateV17MailboxesToSelectV12UsageElementV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7975B0);
  }
  return result;
}

unint64_t sub_1A5570FA8()
{
  unint64_t result;

  result = qword_1EE797BE8;
  if (!qword_1EE797BE8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7334, &type metadata for RunningTasksCapturedValue.CapturedTask.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797BE8);
  }
  return result;
}

unint64_t sub_1A5570FEC()
{
  unint64_t result;

  result = qword_1EE797C18;
  if (!qword_1EE797C18)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A730C, &type metadata for RunningTasksCapturedValue.CapturedTask.History);
    atomic_store(result, (unint64_t *)&qword_1EE797C18);
  }
  return result;
}

unint64_t sub_1A5571030()
{
  unint64_t result;

  result = qword_1EE797BD8;
  if (!qword_1EE797BD8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A63B4, &type metadata for RunningTasksCapturedValue.CapturedTask.MailboxTask);
    atomic_store(result, (unint64_t *)&qword_1EE797BD8);
  }
  return result;
}

unint64_t sub_1A5571074()
{
  unint64_t result;

  result = qword_1EE797BC0;
  if (!qword_1EE797BC0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A72BC, &type metadata for RunningTasksCapturedValue.CapturedTask.MailboxTask.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797BC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue.CapturedTask.MailboxTask.CodingKeys()
{
  return &type metadata for RunningTasksCapturedValue.CapturedTask.MailboxTask.CodingKeys;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue.CapturedTask.CodingKeys()
{
  return &type metadata for RunningTasksCapturedValue.CapturedTask.CodingKeys;
}

ValueMetadata *_s13CapturedStateV17MailboxesToSelectV12UsageElementV10CodingKeysOMa()
{
  return &_s13CapturedStateV17MailboxesToSelectV12UsageElementV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV16UnknownMailboxesV10CodingKeysOMa()
{
  return &_s13CapturedStateV16UnknownMailboxesV10CodingKeysON;
}

uint64_t _s13CapturedStateV7MailboxV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1A5571154 + 4 * byte_1A59A5C87[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1A5571188 + 4 * byte_1A59A5C82[v4]))();
}

uint64_t sub_1A5571188(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5571190(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5571198);
  return result;
}

uint64_t sub_1A55711A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A55711ACLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1A55711B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55711B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedV10CodingKeysON;
}

uint64_t getEnumTagSinglePayload for ConnectionStatus.Error.Kind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13IMAP2Behavior25RunningTasksCapturedValueV12CapturedTaskV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A55712C0 + 4 * byte_1A59A5C91[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A55712F4 + 4 * byte_1A59A5C8C[v4]))();
}

uint64_t sub_1A55712F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55712FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5571304);
  return result;
}

uint64_t sub_1A5571310(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5571318);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A557131C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5571324(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteV7MailboxV10CodingKeysOMa()
{
  return &_s13CapturedStateV14CapturedRemoteV7MailboxV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteV6ServerV10CodingKeysOMa()
{
  return &_s13CapturedStateV14CapturedRemoteV6ServerV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV7MailboxV21UserInitiatedDownloadV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV21UserInitiatedDownloadV10CodingKeysON;
}

uint64_t _s13CapturedStateV17MailboxesToSelectV12UsageElementV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A55713BC + 4 * byte_1A59A5C9B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A55713F0 + 4 * byte_1A59A5C96[v4]))();
}

uint64_t sub_1A55713F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55713F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5571400);
  return result;
}

uint64_t sub_1A557140C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5571414);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A5571418(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5571420(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV17MailboxOfInterestV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV17MailboxOfInterestV10CodingKeysON;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue.CodingKeys()
{
  return &type metadata for RunningTasksCapturedValue.CodingKeys;
}

ValueMetadata *_s13CapturedStateV17MailboxesToSelectV10CodingKeysOMa()
{
  return &_s13CapturedStateV17MailboxesToSelectV10CodingKeysON;
}

uint64_t _s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A55714AC + 4 * byte_1A59A5CA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A55714E0 + 4 * byte_1A59A5CA0[v4]))();
}

uint64_t sub_1A55714E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55714E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A55714F0);
  return result;
}

uint64_t sub_1A55714FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5571504);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5571508(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5571510(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13CapturedStateV19CapturedSyncRequestV10CodingKeysOMa()
{
  return &_s13CapturedStateV19CapturedSyncRequestV10CodingKeysON;
}

uint64_t _s13IMAP2Behavior25RunningTasksCapturedValueV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A557156C + 4 * byte_1A59A5CAA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A557158C + 4 * byte_1A59A5CAF[v4]))();
}

_BYTE *sub_1A557156C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A557158C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5571594(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A557159C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A55715A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A55715AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s13CapturedStateV14PathAttributesV10CodingKeysOMa()
{
  return &_s13CapturedStateV14PathAttributesV10CodingKeysON;
}

uint64_t initializeWithCopy for RunningTasksCapturedValue.CapturedTask.History(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for RunningTasksCapturedValue.CapturedTask.History(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

_OWORD *assignWithTake for RunningTasksCapturedValue.CapturedTask.History(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for RunningTasksCapturedValue.CapturedTask.History(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RunningTasksCapturedValue.CapturedTask.History(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue.CapturedTask.History()
{
  return &type metadata for RunningTasksCapturedValue.CapturedTask.History;
}

unint64_t sub_1A5571778()
{
  unint64_t result;

  result = qword_1EE7A8A38;
  if (!qword_1EE7A8A38)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6884, &_s13CapturedStateV14PathAttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A38);
  }
  return result;
}

unint64_t sub_1A55717C0()
{
  unint64_t result;

  result = qword_1EE7A8A40;
  if (!qword_1EE7A8A40)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A693C, &_s13CapturedStateV19CapturedSyncRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A40);
  }
  return result;
}

unint64_t sub_1A5571808()
{
  unint64_t result;

  result = qword_1EE7A8A48;
  if (!qword_1EE7A8A48)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A69F4, &_s13CapturedStateV17MailboxesToSelectV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A48);
  }
  return result;
}

unint64_t sub_1A5571850()
{
  unint64_t result;

  result = qword_1EE7A8A50;
  if (!qword_1EE7A8A50)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6AAC, &type metadata for RunningTasksCapturedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A50);
  }
  return result;
}

unint64_t sub_1A5571898()
{
  unint64_t result;

  result = qword_1EE7A8A58;
  if (!qword_1EE7A8A58)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6B64, &_s13CapturedStateV7MailboxV17MailboxOfInterestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A58);
  }
  return result;
}

unint64_t sub_1A55718E0()
{
  unint64_t result;

  result = qword_1EE7A8A60;
  if (!qword_1EE7A8A60)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6C1C, &_s13CapturedStateV7MailboxV21UserInitiatedDownloadV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A60);
  }
  return result;
}

unint64_t sub_1A5571928()
{
  unint64_t result;

  result = qword_1EE7A8A68;
  if (!qword_1EE7A8A68)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6CD4, &_s13CapturedStateV14CapturedRemoteV6ServerV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A68);
  }
  return result;
}

unint64_t sub_1A5571970()
{
  unint64_t result;

  result = qword_1EE7A8A70;
  if (!qword_1EE7A8A70)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6D8C, &_s13CapturedStateV14CapturedRemoteV7MailboxV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A70);
  }
  return result;
}

unint64_t sub_1A55719B8()
{
  unint64_t result;

  result = qword_1EE7A8A78;
  if (!qword_1EE7A8A78)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6E44, &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A78);
  }
  return result;
}

unint64_t sub_1A5571A00()
{
  unint64_t result;

  result = qword_1EE7A8A80;
  if (!qword_1EE7A8A80)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6EFC, &_s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A80);
  }
  return result;
}

unint64_t sub_1A5571A48()
{
  unint64_t result;

  result = qword_1EE7A8A88;
  if (!qword_1EE7A8A88)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6FB4, &_s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A88);
  }
  return result;
}

unint64_t sub_1A5571A90()
{
  unint64_t result;

  result = qword_1EE7A8A90;
  if (!qword_1EE7A8A90)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A706C, &_s13CapturedStateV16UnknownMailboxesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A90);
  }
  return result;
}

unint64_t sub_1A5571AD8()
{
  unint64_t result;

  result = qword_1EE7A8A98;
  if (!qword_1EE7A8A98)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7124, &_s13CapturedStateV17MailboxesToSelectV12UsageElementV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8A98);
  }
  return result;
}

unint64_t sub_1A5571B20()
{
  unint64_t result;

  result = qword_1EE7A8AA0;
  if (!qword_1EE7A8AA0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A71DC, &type metadata for RunningTasksCapturedValue.CapturedTask.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A8AA0);
  }
  return result;
}

unint64_t sub_1A5571B68()
{
  unint64_t result;

  result = qword_1EE7A8AA8;
  if (!qword_1EE7A8AA8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7294, &type metadata for RunningTasksCapturedValue.CapturedTask.MailboxTask.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A8AA8);
  }
  return result;
}

unint64_t sub_1A5571BB0()
{
  unint64_t result;

  result = qword_1EE797BD0;
  if (!qword_1EE797BD0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7204, &type metadata for RunningTasksCapturedValue.CapturedTask.MailboxTask.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797BD0);
  }
  return result;
}

unint64_t sub_1A5571BF8()
{
  unint64_t result;

  result = qword_1EE797BC8;
  if (!qword_1EE797BC8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A722C, &type metadata for RunningTasksCapturedValue.CapturedTask.MailboxTask.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797BC8);
  }
  return result;
}

unint64_t sub_1A5571C40()
{
  unint64_t result;

  result = qword_1EE797BF8;
  if (!qword_1EE797BF8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A714C, &type metadata for RunningTasksCapturedValue.CapturedTask.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797BF8);
  }
  return result;
}

unint64_t sub_1A5571C88()
{
  unint64_t result;

  result = qword_1EE797BF0;
  if (!qword_1EE797BF0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7174, &type metadata for RunningTasksCapturedValue.CapturedTask.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797BF0);
  }
  return result;
}

unint64_t sub_1A5571CD0()
{
  unint64_t result;

  result = qword_1EE7975C0;
  if (!qword_1EE7975C0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7094, &_s13CapturedStateV17MailboxesToSelectV12UsageElementV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7975C0);
  }
  return result;
}

unint64_t sub_1A5571D18()
{
  unint64_t result;

  result = qword_1EE7975B8;
  if (!qword_1EE7975B8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A70BC, &_s13CapturedStateV17MailboxesToSelectV12UsageElementV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7975B8);
  }
  return result;
}

unint64_t sub_1A5571D60()
{
  unint64_t result;

  result = qword_1EE797588;
  if (!qword_1EE797588)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6FDC, &_s13CapturedStateV16UnknownMailboxesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797588);
  }
  return result;
}

unint64_t sub_1A5571DA8()
{
  unint64_t result;

  result = qword_1EE797580;
  if (!qword_1EE797580)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7004, &_s13CapturedStateV16UnknownMailboxesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797580);
  }
  return result;
}

unint64_t sub_1A5571DF0()
{
  unint64_t result;

  result = qword_1EE797640;
  if (!qword_1EE797640)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6F24, &_s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797640);
  }
  return result;
}

unint64_t sub_1A5571E38()
{
  unint64_t result;

  result = qword_1EE797638;
  if (!qword_1EE797638)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6F4C, &_s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797638);
  }
  return result;
}

unint64_t sub_1A5571E80()
{
  unint64_t result;

  result = qword_1EE797620;
  if (!qword_1EE797620)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6E6C, &_s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797620);
  }
  return result;
}

unint64_t sub_1A5571EC8()
{
  unint64_t result;

  result = qword_1EE797618;
  if (!qword_1EE797618)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6E94, &_s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797618);
  }
  return result;
}

unint64_t sub_1A5571F10()
{
  unint64_t result;

  result = qword_1EE7976D0;
  if (!qword_1EE7976D0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6DB4, &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7976D0);
  }
  return result;
}

unint64_t sub_1A5571F58()
{
  unint64_t result;

  result = qword_1EE7976C8;
  if (!qword_1EE7976C8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6DDC, &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7976C8);
  }
  return result;
}

unint64_t sub_1A5571FA0()
{
  unint64_t result;

  result = qword_1EE797528;
  if (!qword_1EE797528)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6CFC, &_s13CapturedStateV14CapturedRemoteV7MailboxV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797528);
  }
  return result;
}

unint64_t sub_1A5571FE8()
{
  unint64_t result;

  result = qword_1EE797520;
  if (!qword_1EE797520)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6D24, &_s13CapturedStateV14CapturedRemoteV7MailboxV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797520);
  }
  return result;
}

unint64_t sub_1A5572030()
{
  unint64_t result;

  result = qword_1EE797500;
  if (!qword_1EE797500)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6C44, &_s13CapturedStateV14CapturedRemoteV6ServerV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797500);
  }
  return result;
}

unint64_t sub_1A5572078()
{
  unint64_t result;

  result = qword_1EE7974F8;
  if (!qword_1EE7974F8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6C6C, &_s13CapturedStateV14CapturedRemoteV6ServerV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7974F8);
  }
  return result;
}

unint64_t sub_1A55720C0()
{
  unint64_t result;

  result = qword_1EE797688;
  if (!qword_1EE797688)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6B8C, &_s13CapturedStateV7MailboxV21UserInitiatedDownloadV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797688);
  }
  return result;
}

unint64_t sub_1A5572108()
{
  unint64_t result;

  result = qword_1EE797680;
  if (!qword_1EE797680)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6BB4, &_s13CapturedStateV7MailboxV21UserInitiatedDownloadV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797680);
  }
  return result;
}

unint64_t sub_1A5572150()
{
  unint64_t result;

  result = qword_1EE7975E8;
  if (!qword_1EE7975E8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6AD4, &_s13CapturedStateV7MailboxV17MailboxOfInterestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7975E8);
  }
  return result;
}

unint64_t sub_1A5572198()
{
  unint64_t result;

  result = qword_1EE7975E0;
  if (!qword_1EE7975E0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6AFC, &_s13CapturedStateV7MailboxV17MailboxOfInterestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7975E0);
  }
  return result;
}

unint64_t sub_1A55721E0()
{
  unint64_t result;

  result = qword_1EE797C38;
  if (!qword_1EE797C38)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6A1C, &type metadata for RunningTasksCapturedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797C38);
  }
  return result;
}

unint64_t sub_1A5572228()
{
  unint64_t result;

  result = qword_1EE797C30;
  if (!qword_1EE797C30)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6A44, &type metadata for RunningTasksCapturedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797C30);
  }
  return result;
}

unint64_t sub_1A5572270()
{
  unint64_t result;

  result = qword_1EE7975A8;
  if (!qword_1EE7975A8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6964, &_s13CapturedStateV17MailboxesToSelectV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7975A8);
  }
  return result;
}

unint64_t sub_1A55722B8()
{
  unint64_t result;

  result = qword_1EE7975A0;
  if (!qword_1EE7975A0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A698C, &_s13CapturedStateV17MailboxesToSelectV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7975A0);
  }
  return result;
}

unint64_t sub_1A5572300()
{
  unint64_t result;

  result = qword_1EE7974C8;
  if (!qword_1EE7974C8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A68AC, &_s13CapturedStateV19CapturedSyncRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7974C8);
  }
  return result;
}

unint64_t sub_1A5572348()
{
  unint64_t result;

  result = qword_1EE7974C0;
  if (!qword_1EE7974C0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A68D4, &_s13CapturedStateV19CapturedSyncRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7974C0);
  }
  return result;
}

unint64_t sub_1A5572390()
{
  unint64_t result;

  result = qword_1EE797568;
  if (!qword_1EE797568)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A67F4, &_s13CapturedStateV14PathAttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797568);
  }
  return result;
}

unint64_t sub_1A55723D8()
{
  unint64_t result;

  result = qword_1EE797560;
  if (!qword_1EE797560)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A681C, &_s13CapturedStateV14PathAttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797560);
  }
  return result;
}

uint64_t sub_1A557241C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x43676E696E6E7572 && a2 == 0xEF73646E616D6D6FLL;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x41676E696E6E7572 && a2 == 0xEE00736E6F697463 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A5A0E850 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A5A0E870)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A5572610(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x786F626C69616DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697463656E6E6F63 && a2 == 0xEA00000000006E6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A557270C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79726F74736968 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A5A0E830 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x54786F626C69616DLL && a2 == 0xEB000000006B7361 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

unint64_t sub_1A5572988()
{
  unint64_t result;

  result = qword_1EE797C00;
  if (!qword_1EE797C00)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A784C, &type metadata for RunningTasksCapturedValue.CapturedTask.History.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797C00);
  }
  return result;
}

uint64_t _s13CapturedStateV14CapturedRemoteV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A5572A18 + 4 * byte_1A59A5CB9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A5572A4C + 4 * byte_1A59A5CB4[v4]))();
}

uint64_t sub_1A5572A4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5572A54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5572A5CLL);
  return result;
}

uint64_t sub_1A5572A68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5572A70);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A5572A74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5572A7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue.CapturedTask.History.CodingKeys()
{
  return &type metadata for RunningTasksCapturedValue.CapturedTask.History.CodingKeys;
}

unint64_t sub_1A5572A9C()
{
  unint64_t result;

  result = qword_1EE7A8AB0;
  if (!qword_1EE7A8AB0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7824, &type metadata for RunningTasksCapturedValue.CapturedTask.History.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A8AB0);
  }
  return result;
}

unint64_t sub_1A5572AE4()
{
  unint64_t result;

  result = qword_1EE797C10;
  if (!qword_1EE797C10)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7794, &type metadata for RunningTasksCapturedValue.CapturedTask.History.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797C10);
  }
  return result;
}

unint64_t sub_1A5572B2C()
{
  unint64_t result;

  result = qword_1EE797C08;
  if (!qword_1EE797C08)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A77BC, &type metadata for RunningTasksCapturedValue.CapturedTask.History.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797C08);
  }
  return result;
}

uint64_t sub_1A5572B78(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1A54F4B4C(0, v1, 0);
  v2 = v27;
  result = sub_1A558A248(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v23 = v1;
  v24 = v5;
  v25 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_26;
    v26 = v7;
    result = sub_1A594CC9C();
    v12 = result;
    v14 = v13;
    v16 = *(_QWORD *)(v27 + 16);
    v15 = *(_QWORD *)(v27 + 24);
    if (v16 >= v15 >> 1)
      result = sub_1A54F4B4C(v15 > 1, v16 + 1, 1);
    *(_QWORD *)(v27 + 16) = v16 + 1;
    v17 = v27 + 16 * v16;
    *(_QWORD *)(v17 + 32) = v12;
    *(_QWORD *)(v17 + 40) = v14;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_27;
    v8 = a1 + 64;
    v18 = *(_QWORD *)(v25 + 8 * v11);
    if ((v18 & (1 << v6)) == 0)
      goto LABEL_28;
    v5 = v24;
    if (*(_DWORD *)(a1 + 36) != v24)
      goto LABEL_29;
    v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v23;
    }
    else
    {
      v20 = v11 + 1;
      v21 = (unint64_t)(v9 + 63) >> 6;
      v10 = v23;
      if (v11 + 1 < v21)
      {
        v22 = *(_QWORD *)(v25 + 8 * v20);
        if (!v22)
        {
          v20 = v11 + 2;
          if (v11 + 2 >= v21)
            goto LABEL_4;
          v22 = *(_QWORD *)(v25 + 8 * v20);
          if (!v22)
          {
            while (v21 - 3 != v11)
            {
              v22 = *(_QWORD *)(a1 + 88 + 8 * v11++);
              if (v22)
              {
                v20 = v11 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        v9 = __clz(__rbit64(v22)) + (v20 << 6);
      }
    }
LABEL_4:
    v7 = v26 + 1;
    v6 = v9;
    if (v26 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_1A5572DBC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  char v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABC0);
  v2 = (_QWORD *)sub_1A594CA5C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (char *)(a1 + 65);
  while (1)
  {
    v5 = *(_QWORD *)(v4 - 33);
    v6 = *(_QWORD *)(v4 - 25);
    v7 = *(_DWORD *)(v4 - 17);
    v8 = *(_QWORD *)(v4 - 9);
    v9 = *(v4 - 1);
    v10 = *v4;
    sub_1A54E42B4(v5, v6);
    result = sub_1A54FDD58(v5, v6);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 16 * result);
    *v13 = v5;
    v13[1] = v6;
    v14 = v2[7] + 24 * result;
    *(_DWORD *)v14 = v7;
    *(_QWORD *)(v14 + 8) = v8;
    *(_BYTE *)(v14 + 16) = v9;
    *(_BYTE *)(v14 + 17) = v10;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v2[2] = v17;
    v4 += 40;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1A5572F04(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (*(_QWORD *)(a1 + 16)
    && (__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB90),
        v2 = (_QWORD *)sub_1A594CA5C(),
        (v3 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v4 = (_BYTE *)(a1 + 56);
    while (1)
    {
      v5 = *((_QWORD *)v4 - 3);
      v6 = *((_QWORD *)v4 - 2);
      v7 = *((_QWORD *)v4 - 1);
      v8 = *v4;
      sub_1A54FA300(v5, v6);
      sub_1A54FDDD4(v5, v6);
      if ((v10 & 1) != 0)
        break;
      *(_QWORD *)((char *)v2 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
      v11 = (uint64_t *)(v2[6] + 24 * v9);
      *v11 = v5;
      v11[1] = v6;
      v11[2] = v7;
      *(_BYTE *)(v2[7] + v9) = v8;
      v12 = v2[2];
      v13 = __OFADD__(v12, 1);
      v14 = v12 + 1;
      if (v13)
        goto LABEL_10;
      v4 += 32;
      v2[2] = v14;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

void sub_1A557303C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 16)
    && (__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB98),
        v2 = (_QWORD *)sub_1A594CA5C(),
        (v3 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v4 = (uint64_t *)(a1 + 40);
    while (1)
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54FDEE8(v6);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
      v9 = 8 * v7;
      *(_QWORD *)(v2[6] + v9) = v6;
      *(_QWORD *)(v2[7] + v9) = v5;
      v10 = v2[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v2[2] = v12;
      v4 += 2;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1A5573144(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB88);
  v2 = (_QWORD *)sub_1A594CA5C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (char *)(a1 + 60);
  while (1)
  {
    v15 = *(_OWORD *)(v4 - 28);
    v5 = *(_QWORD *)(v4 - 12);
    v6 = *((unsigned int *)v4 - 1);
    v7 = *v4;
    v8 = *(_QWORD *)(v4 - 28);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v5, v6, v7);
    result = sub_1A54FE0C4(v8, *((uint64_t *)&v15 + 1));
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v15;
    v11 = v2[7] + 16 * result;
    *(_QWORD *)v11 = v5;
    *(_DWORD *)(v11 + 8) = v6;
    *(_BYTE *)(v11 + 12) = v7;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 32;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A55732A4(uint64_t a1, uint64_t a2)
{
  return sub_1A55736C8(a1, a2, (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
}

uint64_t sub_1A55732B0(uint64_t result, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = result;
  v6 = 0;
  v15 = a4;
  v7 = result + 32;
  while (1)
  {
LABEL_6:
    v11 = *(_QWORD *)(v5 + 16);
    if (v6 == v11)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    if (v6 >= v11)
      break;
    v14 = *(_QWORD *)(v7 + 8 * v6);
    swift_retain();
    a2(&v13, &v14);
    swift_release();
    v12 = v13;
    result = swift_bridgeObjectRelease();
    ++v6;
    if (v12)
    {
      v8 = *(_QWORD *)(v12 + 16);
      if (v8)
      {
        v9 = 0;
        while (v9 < v8)
        {
          v10 = v9 + 1;
          result = sub_1A54F4038(&v14, *(unsigned int *)(v12 + 32 + 4 * v9));
          v8 = *(_QWORD *)(v12 + 16);
          v9 = v10;
          if (v10 == v8)
            goto LABEL_6;
        }
        __break(1u);
        break;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A55733CC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F2C18(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A5573548(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = *(_QWORD *)(v2 + 48) + 16 * v10;
    v12 = *(_QWORD *)v11;
    v13 = *(_DWORD *)(v11 + 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F2A14((uint64_t)&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A55736C8(uint64_t result, uint64_t a2, uint64_t (*a3)(_BYTE *, _QWORD))
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _BYTE v16[4];
  uint64_t v17;

  v4 = result;
  v5 = 0;
  v17 = a2;
  v6 = result + 56;
  v7 = 1 << *(_BYTE *)(result + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(result + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v10)
      goto LABEL_23;
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        goto LABEL_23;
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          goto LABEL_23;
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
        {
          v5 = v13 + 3;
          if (v13 + 3 >= v10)
            goto LABEL_23;
          v14 = *(_QWORD *)(v6 + 8 * v5);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    result = a3(v16, *(unsigned int *)(*(_QWORD *)(v4 + 48) + 4 * v12));
  }
  v15 = v13 + 4;
  if (v15 >= v10)
  {
LABEL_23:
    swift_release();
    return v17;
  }
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      goto LABEL_23;
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A557382C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18[2];
  uint64_t v19;

  v2 = result;
  v3 = 0;
  v5 = result + 56;
  v4 = *(_QWORD *)(result + 56);
  v19 = a2;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v4;
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    v15 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v9)
      goto LABEL_23;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    ++v3;
    if (!v16)
    {
      v3 = v15 + 1;
      if (v15 + 1 >= v9)
        goto LABEL_23;
      v16 = *(_QWORD *)(v5 + 8 * v3);
      if (!v16)
      {
        v3 = v15 + 2;
        if (v15 + 2 >= v9)
          goto LABEL_23;
        v16 = *(_QWORD *)(v5 + 8 * v3);
        if (!v16)
        {
          v3 = v15 + 3;
          if (v15 + 3 >= v9)
            goto LABEL_23;
          v16 = *(_QWORD *)(v5 + 8 * v3);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v3 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 24 * v11);
    v13 = *v12;
    v14 = v12[1];
    sub_1A54FA300(*v12, v14);
    sub_1A54F4044((uint64_t)v18, v13, v14);
    result = sub_1A54FA2A8(v18[0], v18[1]);
  }
  v17 = v15 + 4;
  if (v17 >= v9)
  {
LABEL_23:
    swift_release();
    return v19;
  }
  v16 = *(_QWORD *)(v5 + 8 * v17);
  if (v16)
  {
    v3 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v3 >= v9)
      goto LABEL_23;
    v16 = *(_QWORD *)(v5 + 8 * v3);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1A55739C8(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v8 = sub_1A551790C();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v9 = sub_1A55732B0(a1, a2, a3, a4);
  if (*(_QWORD *)(v8 + 16) <= *(_QWORD *)(v9 + 16) >> 3)
  {
    v13 = v9;
    sub_1A5588D50(v8, (uint64_t (*)(_QWORD))sub_1A554BAB8);
    swift_bridgeObjectRelease();
    v10 = v13;
    if (*(_QWORD *)(v13 + 16))
      goto LABEL_3;
  }
  else
  {
    v10 = sub_1A5586C64(v8, v9, &qword_1EE79A718);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v10 + 16))
    {
LABEL_3:
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = v10;
      return v11 | 0x9000000000000006;
    }
  }
  swift_bridgeObjectRelease();
  return 0xF000000000000007;
}

double StateWithTasks.init(windowOfInterest:environment:mailboxFilter:fetchedMessageMetadata:tracingID:logName:)@<D0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  unint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  char v30;

  v24 = a8 & 1;
  v25 = a7 & 1;
  _s30MailboxesToSelectLoggingHelperCMa();
  v15 = (_QWORD *)swift_allocObject();
  v15[3] = 0;
  v15[4] = 0;
  v15[2] = 0;
  v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v17 = sub_1A558B5B8(MEMORY[0x1E0DEE9D8]);
  v23 = sub_1A558AE18((uint64_t)v16);
  v22 = sub_1A558AD04((uint64_t)v16);
  v18 = sub_1A558AF30(v16);
  v30 = a2 & 1;
  type metadata accessor for State.Logger();
  v19 = swift_allocObject();
  sub_1A594A758();
  *(_BYTE *)(v19 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id) = a10;
  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 8) = v30;
  *(_BYTE *)(a9 + 9) = v25;
  *(_BYTE *)(a9 + 10) = v24;
  *(_BYTE *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 17) = BYTE1(a3) & 1;
  *(_BYTE *)(a9 + 18) = BYTE2(a3) & 1;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = a5;
  v20 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = v20;
  *(_QWORD *)(a9 + 56) = v17;
  *(_QWORD *)(a9 + 64) = 2;
  *(_QWORD *)(a9 + 72) = 0;
  *(_QWORD *)(a9 + 80) = 0;
  *(_BYTE *)(a9 + 88) = 0;
  *(_QWORD *)(a9 + 96) = 0;
  *(_QWORD *)(a9 + 104) = 0;
  *(_BYTE *)(a9 + 112) = 1;
  *(_BYTE *)(a9 + 113) = 0;
  *(_QWORD *)(a9 + 120) = 0;
  *(_QWORD *)(a9 + 128) = 0;
  *(_QWORD *)(a9 + 136) = 0;
  *(_QWORD *)(a9 + 144) = v23;
  *(_QWORD *)(a9 + 152) = v16;
  *(_QWORD *)(a9 + 160) = v16;
  *(_BYTE *)(a9 + 168) = 0;
  *(_QWORD *)(a9 + 176) = v18;
  *(_QWORD *)(a9 + 184) = v22;
  *(_QWORD *)(a9 + 192) = v16;
  result = -4.175838e-234;
  *(_OWORD *)(a9 + 200) = xmmword_1A59ABD90;
  *(_DWORD *)(a9 + 216) = 0;
  *(_QWORD *)(a9 + 224) = v16;
  *(_BYTE *)(a9 + 232) = a10;
  *(_QWORD *)(a9 + 240) = v16;
  *(_DWORD *)(a9 + 248) = 0;
  *(_QWORD *)(a9 + 256) = a11;
  *(_QWORD *)(a9 + 264) = a12;
  *(_QWORD *)(a9 + 272) = v19;
  *(_QWORD *)(a9 + 280) = v15;
  return result;
}

uint64_t StateWithTasks.environment.getter()
{
  unsigned __int8 *v0;

  return v0[16] | ((v0[17] & 1) << 8) | ((v0[18] & 1) << 16);
}

uint64_t StateWithTasks.update(updates:send:persist:)(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  _OWORD *v5;
  _OWORD *v6;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v74;
  uint64_t v75;
  _OWORD *v76;
  _OWORD *v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t);
  unint64_t *v80;
  uint64_t v81;
  uint64_t (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  _OWORD v84[3];
  _OWORD v85[34];
  _OWORD v86[37];
  _OWORD v87[3];
  _OWORD v88[2];
  __int128 v89;
  __int128 v90;
  __int128 v91;
  _OWORD v92[2];
  __int128 v93;
  __int128 v94;
  __int128 v95;
  _OWORD v96[3];

  v6 = v5;
  v76 = v5 + 9;
  v12 = v5[12];
  v87[2] = v5[11];
  v88[0] = v12;
  *(_OWORD *)((char *)v88 + 12) = *(_OWORD *)((char *)v5 + 204);
  v13 = v5[9];
  v87[1] = v5[10];
  v87[0] = v13;
  v74 = sub_1A5516C7C();
  v75 = sub_1A551790C();
  v14 = *(_QWORD *)(a1 + 16);
  v77 = v5;
  v79 = a4;
  if (!v14)
  {
    sub_1A556C68C((uint64_t)v87);
    sub_1A557539C(a2, a3, a4, a5);
    v17 = MEMORY[0x1E0DEE9E8];
    goto LABEL_44;
  }
  v82 = a2;
  v83 = a3;
  v15 = (unint64_t *)(a1 + 32);
  sub_1A556C68C((uint64_t)v87);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v16 = 0;
  v17 = MEMORY[0x1E0DEE9E8];
  v78 = a5;
  v80 = v15;
  v81 = v14;
  do
  {
    v19 = v15[v16];
    v20 = *((unsigned __int8 *)v6 + 232);
    swift_retain();
    v21 = (id)*tracingLog.unsafeMutableAddressor();
    v22 = sub_1A594C318();

    v23 = v19 >> 62;
    if ((v22 & 1) != 0)
    {
      if ((_DWORD)v23)
      {
        if ((_DWORD)v23 == 1)
        {
          v24 = *(_QWORD *)((v19 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          v25 = *(_BYTE *)((v19 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
          sub_1A5524688(v24, v25);
          sub_1A56414E8(v20, v24, v25);
          sub_1A552469C(v24, v25);
        }
      }
      else
      {
        v26 = *(unsigned int *)(v19 + 16);
        v27 = *(_QWORD *)(v19 + 24);
        sub_1A5541A18(v27);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5649C04(v20, v26, v27);
        sub_1A5541AA0(v27);
        a5 = v78;
        swift_bridgeObjectRelease();
        a4 = v79;
        swift_bridgeObjectRelease();
      }
    }
    sub_1A5574518(v19, (uint64_t (*)(char *, _QWORD *))v82, v83, (void (*)(unint64_t))a4, a5);
    if (v23 != 1
      || (*(_BYTE *)((v19 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) & 1) == 0
      || (v28 = *(_QWORD *)((v19 & 0x3FFFFFFFFFFFFFFFLL) + 0x10),
          ((v28 >> 59) & 0x1E | (v28 >> 2) & 1) != 0x11))
    {
      swift_release();
      goto LABEL_4;
    }
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
    {
      *(_QWORD *)&v86[0] = MEMORY[0x1E0DEE9D8];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F4D0C(0, v30, 0);
      v31 = *(_QWORD *)&v86[0];
      v32 = *(_QWORD *)(*(_QWORD *)&v86[0] + 16);
      v33 = 32;
      do
      {
        v34 = *(_DWORD *)(v29 + v33);
        *(_QWORD *)&v86[0] = v31;
        v35 = *(_QWORD *)(v31 + 24);
        if (v32 >= v35 >> 1)
        {
          sub_1A54F4D0C(v35 > 1, v32 + 1, 1);
          v31 = *(_QWORD *)&v86[0];
        }
        *(_QWORD *)(v31 + 16) = v32 + 1;
        *(_DWORD *)(v31 + 4 * v32 + 32) = v34;
        v33 += 24;
        ++v32;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease();
      v6 = v77;
      a5 = v78;
      v36 = *(_QWORD *)(v31 + 16);
      if (!v36)
      {
LABEL_31:
        swift_release();
        swift_bridgeObjectRelease();
        a4 = v79;
        goto LABEL_4;
      }
    }
    else
    {
      v31 = MEMORY[0x1E0DEE9D8];
      v36 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (!v36)
        goto LABEL_31;
    }
    v37 = 0;
    do
    {
      v39 = v17 + 56;
      while (1)
      {
        v40 = *(unsigned int *)(v31 + 32 + 4 * v37++);
        sub_1A594CE64();
        sub_1A594CEAC();
        v41 = sub_1A594CED0();
        v42 = -1 << *(_BYTE *)(v17 + 32);
        v43 = v41 & ~v42;
        if (((*(_QWORD *)(v39 + ((v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
          break;
        v44 = *(_QWORD *)(v17 + 48);
        if (*(_DWORD *)(v44 + 4 * v43) != (_DWORD)v40)
        {
          v45 = ~v42;
          do
          {
            v43 = (v43 + 1) & v45;
            if (((*(_QWORD *)(v39 + ((v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
              goto LABEL_20;
          }
          while (*(_DWORD *)(v44 + 4 * v43) != (_DWORD)v40);
        }
        if (v37 == v36)
          goto LABEL_29;
      }
LABEL_20:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v86[0] = v17;
      sub_1A557BD08(v40, v43, isUniquelyReferenced_nonNull_native, &qword_1EE79A710);
      swift_bridgeObjectRelease();
    }
    while (v37 != v36);
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    v6 = v77;
    a5 = v78;
    a4 = v79;
LABEL_4:
    v15 = v80;
    v18 = v81;
    ++v16;
  }
  while (v16 != v81);
  swift_bridgeObjectRelease();
  sub_1A557539C(v82, v83, a4, a5);
  while (1)
  {
    v47 = *v15++;
    v46 = v47;
    v48 = v47 >> 62;
    if (!(v47 >> 62))
      break;
    if ((_DWORD)v48 == 1
      && (*(_BYTE *)(v46 + 24) & 1) != 0
      && ((*(_QWORD *)((v46 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) >> 59) & 0x1C | (*(_QWORD *)((v46 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) >> 2) & 1 | 2) == 3)
    {
      goto LABEL_42;
    }
LABEL_33:
    if (!--v18)
      goto LABEL_44;
  }
  v49 = *(_QWORD *)(v46 + 24);
  if (v49 >> 60 != 3)
    goto LABEL_33;
  sub_1A552316C((const void *)((v49 & 0xFFFFFFFFFFFFFFFLL) + 16), v84);
  sub_1A552316C(v84, v86);
  if (sub_1A5523B90((uint64_t)v86) != 7)
    goto LABEL_33;
  sub_1A5524678((uint64_t)v86);
LABEL_42:
  v50 = v6[7];
  v86[2] = v6[6];
  v86[3] = v50;
  v86[4] = v6[8];
  v51 = v6[5];
  v86[0] = v6[4];
  v86[1] = v51;
  v52 = sub_1A5540478();
  sub_1A551A2B0(v52);
  swift_bridgeObjectRelease();
LABEL_44:
  v53 = v76[3];
  v84[2] = v76[2];
  v85[0] = v53;
  *(_OWORD *)((char *)v85 + 12) = *(_OWORD *)((char *)v76 + 60);
  v54 = v76[1];
  v84[0] = *v76;
  v84[1] = v54;
  v55 = sub_1A55736C8(v17, v74, (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F402C);
  v56 = sub_1A5516BB0(v55);
  swift_bridgeObjectRelease();
  if ((~v56 & 0xF000000000000007) != 0)
  {
    v57 = *((_QWORD *)v6 + 34);
    swift_retain();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v58 = sub_1A594A74C();
    v59 = sub_1A594C000();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = swift_slowAlloc();
      *(_DWORD *)v60 = 68157952;
      LODWORD(v93) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v60 + 8) = 256;
      LOBYTE(v93) = *(_BYTE *)(v57 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
      v6 = v77;
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, v58, v59, "[%.*hhx] Updating running search requests.", (uint8_t *)v60, 0xBu);
      v61 = v60;
      a4 = v79;
      MEMORY[0x1A85B1964](v61, -1, -1);
    }
    else
    {
      swift_release();
    }

    a4(v56);
    sub_1A558B6D8(v56);
  }
  v62 = v76[3];
  v95 = v76[2];
  v96[0] = v62;
  *(_OWORD *)((char *)v96 + 12) = *(_OWORD *)((char *)v76 + 60);
  v63 = v76[1];
  v93 = *v76;
  v94 = v63;
  v64 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v65 = sub_1A55739C8(v64, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1A5519DB8, 0, v75);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~v65 & 0xF000000000000007) != 0)
  {
    v66 = *((_QWORD *)v6 + 34);
    swift_retain();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v67 = sub_1A594A74C();
    v68 = sub_1A594C000();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = swift_slowAlloc();
      *(_DWORD *)v69 = 68157952;
      LODWORD(v89) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v69 + 8) = 256;
      LOBYTE(v89) = *(_BYTE *)(v66 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, v67, v68, "[%.*hhx] Updating running download requests.", (uint8_t *)v69, 0xBu);
      v70 = v69;
      a4 = v79;
      MEMORY[0x1A85B1964](v70, -1, -1);
    }
    else
    {
      swift_release();
    }

    a4(v65);
    sub_1A558B6D8(v65);
  }
  v71 = v76[3];
  v91 = v76[2];
  v92[0] = v71;
  *(_OWORD *)((char *)v92 + 12) = *(_OWORD *)((char *)v76 + 60);
  v72 = v76[1];
  v89 = *v76;
  v90 = v72;
  sub_1A551EF88(*((unsigned __int8 *)v6 + 232), (uint64_t)v87);
  return sub_1A556C6E4((uint64_t)v87);
}

uint64_t sub_1A5574518(unint64_t a1, uint64_t (*a2)(char *, _QWORD *), uint64_t a3, void (*a4)(unint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t result;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  id v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *KeyPath;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  char *v80;
  NSObject *v81;
  char v82;
  unint64_t v83;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  NSObject *v112;
  os_log_type_t v113;
  unint64_t v114;
  _QWORD *v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  char v121;
  unint64_t v122;
  uint64_t v123;
  _BOOL8 v124;
  uint64_t v125;
  char v126;
  unint64_t v127;
  char v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  BOOL v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(unint64_t);
  unint64_t v139;
  uint64_t v140;
  char *v141;
  _OWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  __int128 v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  _OWORD v155[3];
  __int128 v156;
  __int128 v157;
  __int128 v158;
  char v159;
  _QWORD v160[37];

  v6 = v5;
  v137 = a5;
  v11 = 0;
  v12 = type metadata accessor for TaskHistory.Running(0);
  v140 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v137 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for RunningTask();
  v146 = *(_QWORD *)(v143 - 8);
  v15 = MEMORY[0x1E0C80A78](v143);
  v150 = (uint64_t)&v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v152 = (uint64_t)&v137 - v18;
  MEMORY[0x1E0C80A78](v17);
  v141 = (char *)&v137 - v19;
  v144 = v6;
  v147 = a1;
  v138 = a4;
  v139 = a1 >> 62;
  if (a1 >> 62 == 1)
  {
    if (*(_BYTE *)(a1 + 24) == 1)
    {
      v36 = *(_QWORD *)(a1 + 16);
      if (((v36 >> 59) & 0x1E | (v36 >> 2) & 1) == 3)
      {
        v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
        v38 = *(_QWORD *)(v144 + 272);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        v39 = sub_1A5547BBC(v37, v38);
        v6 = v144;
        swift_release();
        swift_bridgeObjectRelease();
        memcpy(v160, (const void *)v6, 0x120uLL);
        v40 = sub_1A54E6958();
        sub_1A558CEA0(v39, v6, a2, a3, v40, v42, v41 & 1);
        a1 = v147;
        swift_bridgeObjectRelease();
      }
    }
    goto LABEL_22;
  }
  if (a1 >> 62)
  {
LABEL_22:
    v21 = (uint64_t)v141;
    goto LABEL_23;
  }
  v20 = *(_QWORD *)(a1 + 24);
  v21 = (uint64_t)v141;
  if (v20 >> 60 != 1)
  {
LABEL_23:
    v48 = *(_QWORD *)(v6 + 272);
    swift_retain();
    sub_1A5548260(a1, v48);
    result = swift_release();
    v145 = *(_QWORD *)(*(_QWORD *)(v6 + 240) + 16);
    if (v145)
    {
      v50 = 0;
      v142 = (_OWORD *)(v21 + 8);
      v51 = v152;
      while (1)
      {
        v52 = *(_QWORD *)(v6 + 240);
        if (v50 >= *(_QWORD *)(v52 + 16))
          break;
        v154 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
        v153 = *(_QWORD *)(v146 + 72) * v50;
        sub_1A55034B8(v52 + v154 + v153, v21, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
        sub_1A5592EC4(a1, v6);
        if (v11)
        {
          sub_1A556C73C(v21, (uint64_t)&v156);
          if (v159)
          {
            if (v159 == 1)
            {
              v155[1] = v157;
              v155[2] = v158;
              v155[0] = v156;
              v53 = v21 + *(int *)(v143 + 28);
              v54 = *((_QWORD *)&v157 + 1);
              v55 = v158;
              __swift_project_boxed_opaque_existential_1_0(v155, *((uint64_t *)&v157 + 1));
              v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 128);
              v57 = v54;
              v51 = v152;
              v58 = v55;
              v6 = v144;
              v56(v144, v53, v57, v58);
              sub_1A550E928((uint64_t)v155);
              sub_1A556C7D8(v21);
              *(_QWORD *)v21 = 1;
              v59 = v142;
              *v142 = 0u;
              v59[1] = 0u;
              *(_OWORD *)((char *)v59 + 29) = 0u;
              *(_BYTE *)(v21 + 53) = 2;
            }
          }
          else
          {
            sub_1A556C7D8(v21);
            *(_QWORD *)v21 = 1;
            v60 = v142;
            *v142 = 0u;
            v60[1] = 0u;
            *(_OWORD *)((char *)v60 + 29) = 0u;
            *(_BYTE *)(v21 + 53) = 2;
            sub_1A556C7D8((uint64_t)&v156);
          }

        }
        sub_1A55034B8(v21, v51, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
        v61 = *(_QWORD *)(v6 + 240);
        v62 = v150;
        if (v50 >= *(_QWORD *)(v61 + 16))
          goto LABEL_78;
        v151 = 0;
        v63 = *(unsigned __int8 *)(v6 + 232);
        sub_1A55034B8(v61 + v154 + v153, v150, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
        v64 = (id)*tracingLog.unsafeMutableAddressor();
        v65 = sub_1A594C318();

        if ((v65 & 1) != 0)
        {
          v66 = *(_QWORD *)(v152 + 56);
          v67 = *(_QWORD *)(v62 + 56);
          *(_QWORD *)&v156 = MEMORY[0x1E0DEE9D8];
          *((_QWORD *)&v156 + 1) = MEMORY[0x1E0DEE9D8];
          KeyPath = (_QWORD *)swift_getKeyPath();
          *(_QWORD *)&v149 = &v137;
          v69 = MEMORY[0x1E0C80A78](KeyPath);
          MEMORY[0x1E0C80A78](v69);
          v70 = sub_1A558E0EC();
          Array.findAppendOnlyDiff<A>(from:id:added:removed:update:)(v67, KeyPath, (uint64_t)sub_1A558E0DC, (uint64_t)(&v137 - 4), (void (*)(char *))sub_1A558E0E4, (uint64_t)(&v137 - 4), (void (*)(char *, char *))nullsub_1, 0, v66, v70);
          swift_release();
          v71 = *((_QWORD *)&v156 + 1);
          v72 = *(_QWORD *)(v156 + 16);
          v148 = *((_QWORD *)&v156 + 1);
          *(_QWORD *)&v149 = v156;
          if (v72)
          {
            v73 = *(int *)(v143 + 32);
            v74 = v140;
            v75 = v156 + ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80));
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v76 = *(_QWORD *)(v74 + 72);
            v77 = v152;
            do
            {
              sub_1A55034B8(v75, (uint64_t)v14, type metadata accessor for TaskHistory.Running);
              sub_1A55983A0(v63, *(_DWORD *)(v77 + v73));
              sub_1A55034FC((uint64_t)v14, type metadata accessor for TaskHistory.Running);
              v75 += v76;
              --v72;
            }
            while (v72);
            swift_bridgeObjectRelease();
            v21 = (uint64_t)v141;
            v71 = v148;
          }
          v78 = *(_QWORD *)(v71 + 16);
          v6 = v144;
          v62 = v150;
          if (v78)
          {
            v79 = *(_DWORD *)(v152 + *(int *)(v143 + 32));
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v80 = (char *)(v71 + 40);
            do
            {
              v81 = *((_QWORD *)v80 - 1);
              v82 = *v80;
              v80 += 12;
              sub_1A5599084(v63, v79, v81, v82);
              --v78;
            }
            while (v78);
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        a1 = v147;
        v11 = v151;
        sub_1A55034FC(v62, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
        v83 = *(_QWORD *)(v6 + 240);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v6 + 240) = v83;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v83 = sub_1A554B70C(v83);
          *(_QWORD *)(v6 + 240) = v83;
        }
        v51 = v152;
        if (v50 >= *(_QWORD *)(v83 + 16))
          goto LABEL_79;
        ++v50;
        sub_1A558DF9C(v152, v83 + v154 + v153);
        sub_1A55034FC(v51, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
        result = sub_1A55034FC(v21, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
        if (v50 == v145)
          goto LABEL_48;
      }
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
      goto LABEL_82;
    }
LABEL_48:
    if ((_DWORD)v139 != 1)
      return result;
    if (*(_BYTE *)(a1 + 24) != 1)
      return result;
    v85 = *(_QWORD *)(a1 + 16);
    if (((v85 >> 59) & 0x1E | (v85 >> 2) & 1) != 1)
      return result;
    v86 = v85 & 0xFFFFFFFFFFFFFFBLL;
    v87 = v6;
    v88 = *(_BYTE *)(v86 + 24);
    v89 = *(_QWORD *)(v86 + 32);
    v90 = *(_QWORD *)(v87 + 144);
    v91 = *(_QWORD *)(v87 + 152);
    v92 = *(_QWORD *)(v87 + 160);
    if (*(_BYTE *)(v87 + 168) == 1)
    {
      v93 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7961B8);
      *((_QWORD *)&v157 + 1) = v93;
      *(_QWORD *)&v158 = sub_1A54E2E30((unint64_t *)&unk_1EE79A938, (uint64_t *)&unk_1EE7961B8, MEMORY[0x1E0DEC858]);
      v94 = (_QWORD *)swift_allocObject();
      *(_QWORD *)&v156 = v94;
      v94[2] = v90;
      v94[3] = sub_1A54E1C54;
      v94[4] = 0;
      v94[5] = sub_1A54E1CBC;
      v94[6] = 0;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55212D0(v90, v91, v92, 1);
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55212D0(v90, v91, v92, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v93 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799620);
      *((_QWORD *)&v157 + 1) = v93;
      *(_QWORD *)&v158 = sub_1A54E2E30(&qword_1EE799628, &qword_1EE799620, MEMORY[0x1E0DEAF38]);
      *(_QWORD *)&v156 = MEMORY[0x1E0DEE9D8];
    }
    v95 = __swift_project_boxed_opaque_existential_1_0(&v156, v93);
    MEMORY[0x1E0C80A78](v95);
    v98 = (*(uint64_t (**)(char *))(v97 + 16))((char *)&v137 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0));
    MEMORY[0x1E0C80A78](v98);
    LOBYTE(v135) = v88;
    v136 = v89;
    v99 = sub_1A594B7C0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v156);
    v100 = *(_QWORD *)(v99 + 16);
    if (!v100)
      return swift_bridgeObjectRelease();
    v101 = *(_QWORD *)(v144 + 272);
    v153 = v101 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_l;
    v150 = OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v147 = v99;
    v102 = v99 + 48;
    *(_QWORD *)&v103 = 68158467;
    v149 = v103;
    v148 = MEMORY[0x1E0DEE9B8] + 8;
    v154 = v100;
    do
    {
      v110 = *(_QWORD *)(v102 - 16);
      v111 = *(_DWORD *)(v102 - 8);
      swift_retain_n();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v112 = sub_1A594A74C();
      v113 = sub_1A594C000();
      if (os_log_type_enabled(v112, v113))
      {
        v104 = swift_slowAlloc();
        LODWORD(v151) = v111;
        v105 = v104;
        v152 = swift_slowAlloc();
        *(_QWORD *)&v155[0] = v152;
        *(_DWORD *)v105 = v149;
        *(_DWORD *)(v105 + 4) = 2;
        *(_WORD *)(v105 + 8) = 256;
        v106 = *(_BYTE *)(v101 + v150);
        swift_release();
        *(_BYTE *)(v105 + 10) = v106;
        swift_release();
        *(_WORD *)(v105 + 11) = 2160;
        *(_QWORD *)(v105 + 13) = 0x786F626C69616DLL;
        *(_WORD *)(v105 + 21) = 2085;
        *(_QWORD *)&v156 = v110;
        DWORD2(v156) = (_DWORD)v151;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v107 = sub_1A594B4A8();
        *(_QWORD *)(v105 + 23) = sub_1A55791B0(v107, v108, (uint64_t *)v155);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v112, v113, "[%.*hhx] Notifying persistence that %{sensitive,mask.mailbox}s is already synced.", (uint8_t *)v105, 0x1Fu);
        v109 = v152;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v109, -1, -1);
        MEMORY[0x1A85B1964](v105, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        swift_release_n();
      }
      v102 += 48;
      --v100;
    }
    while (v100);
    v114 = v147;
    swift_bridgeObjectRelease();
    v115 = (_QWORD *)sub_1A558B6F4(MEMORY[0x1E0DEE9D8]);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v116 = (uint64_t *)(v114 + 56);
    while (1)
    {
      v119 = *(v116 - 1);
      v118 = *v116;
      swift_bridgeObjectRetain_n();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v120 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v156 = v115;
      v122 = sub_1A54FDC94(v119, v118);
      v123 = v115[2];
      v124 = (v121 & 1) == 0;
      v125 = v123 + v124;
      if (__OFADD__(v123, v124))
        goto LABEL_80;
      v126 = v121;
      if (v115[3] >= v125)
      {
        if ((v120 & 1) != 0)
        {
          v115 = (_QWORD *)v156;
          if ((v121 & 1) == 0)
            goto LABEL_70;
        }
        else
        {
          sub_1A5550510();
          v115 = (_QWORD *)v156;
          if ((v126 & 1) == 0)
            goto LABEL_70;
        }
      }
      else
      {
        sub_1A55837D8(v125, v120);
        v127 = sub_1A54FDC94(v119, v118);
        if ((v126 & 1) != (v128 & 1))
          goto LABEL_83;
        v122 = v127;
        v115 = (_QWORD *)v156;
        if ((v126 & 1) == 0)
        {
LABEL_70:
          v115[(v122 >> 6) + 8] |= 1 << v122;
          v129 = (uint64_t *)(v115[6] + 16 * v122);
          *v129 = v119;
          v129[1] = v118;
          v130 = v115[7] + 24 * v122;
          *(_DWORD *)v130 = 0;
          *(_BYTE *)(v130 + 4) = 1;
          *(_QWORD *)(v130 + 8) = 0;
          *(_BYTE *)(v130 + 16) = 1;
          v131 = v115[2];
          v132 = __OFADD__(v131, 1);
          v133 = v131 + 1;
          if (v132)
            goto LABEL_81;
          v115[2] = v133;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_62;
        }
      }
      v117 = v115[7] + 24 * v122;
      *(_DWORD *)v117 = 0;
      *(_BYTE *)(v117 + 4) = 1;
      *(_QWORD *)(v117 + 8) = 0;
      *(_BYTE *)(v117 + 16) = 1;
LABEL_62:
      v116 += 6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if (!--v154)
      {
        swift_bridgeObjectRelease_n();
        v134 = swift_allocObject();
        *(_QWORD *)(v134 + 16) = v115;
        v138(v134 | 0x8000000000000006);
        return swift_release();
      }
    }
  }
  v22 = *(unsigned __int8 *)(v6 + 168);
  v23 = *(_DWORD *)(a1 + 16);
  v24 = *(_DWORD *)(v20 + 24);
  v25 = v6;
  v26 = *(_QWORD *)(v20 + 32);
  v27 = *(_QWORD *)(v20 + 40);
  if (v22 && (v28 = *(_QWORD *)(v25 + 144), (v29 = *(_QWORD *)(v28 + 16)) != 0))
  {
    LODWORD(v154) = v24;
    v30 = (_QWORD *)(v28 + 128);
    v31 = v30;
    do
    {
      v33 = *v31;
      v31 += 22;
      v32 = v33;
      if (v33)
      {
        v34 = *((_DWORD *)v30 - 18);
        v35 = *(v30 - 10);
        swift_beginAccess();
        if (*(_DWORD *)(v32 + 16) == v23)
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_16;
        }
      }
      v30 = v31;
      --v29;
    }
    while (v29);
    v35 = 0;
    v34 = 0;
LABEL_16:
    v24 = v154;
  }
  else
  {
    v35 = 0;
    v34 = 0;
  }
  LODWORD(v160[0]) = v23;
  v160[1] = v35;
  LODWORD(v160[2]) = v34;
  LODWORD(v160[3]) = v24;
  v160[4] = v26;
  v160[5] = v27;
  v43 = v144;
  v44 = (unint64_t *)(v144 + 240);
  v45 = *(_QWORD *)(v144 + 272);
  v11 = *(void **)(*(_QWORD *)(v144 + 240) + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_retain();
  sub_1A559F7C0((unsigned int *)v160, v45);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  sub_1A55A0530(v43 + 232, (int *)v160, v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  v11 = 0;
  v46 = sub_1A55802EC(v44, (char *)(v43 + 232));
  v47 = *(_QWORD *)(*(_QWORD *)(v43 + 240) + 16);
  if (v47 >= v46)
  {
    sub_1A558CCF8(v46, v47);
    swift_bridgeObjectRelease();
    swift_release();
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v144;
    a1 = v147;
    goto LABEL_22;
  }
LABEL_82:
  __break(1u);
LABEL_83:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

uint64_t sub_1A557539C(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  const char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  _OWORD *v71;
  _OWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  int v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int64_t v104;
  unint64_t v105;
  unint64_t v106;
  _QWORD *v107;
  unint64_t v108;
  BOOL v109;
  unint64_t v110;
  int64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  int v136;
  _QWORD *v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  BOOL v143;
  unsigned __int8 *v144;
  uint64_t v145;
  unsigned __int8 *v146;
  int v147;
  int v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  _QWORD *v160;
  uint64_t v161;
  int v162;
  _QWORD *v163;
  int v164;
  unint64_t v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  NSObject *v169;
  int v170;
  uint64_t v171;
  char v172;
  char v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char isUniquelyReferenced_nonNull_native;
  char v183;
  unint64_t v184;
  uint64_t v185;
  _BOOL8 v186;
  uint64_t v187;
  char v188;
  unint64_t v189;
  char v190;
  _QWORD *v191;
  BOOL v192;
  uint64_t v193;
  char v194;
  BOOL v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  __uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  unint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  _QWORD *v214;
  uint64_t v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  int v238;
  char v239;
  uint64_t v240;
  char v241;
  uint64_t v242;
  uint64_t v243;
  char v244;
  uint64_t v245;
  uint64_t v246;
  char v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  void *v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  char v260;
  uint64_t v261;
  NSObject *v262;
  os_log_type_t v263;
  uint64_t v264;
  uint64_t result;
  __int128 v266;
  void *v267;
  uint64_t v268;
  __int128 v269;
  char *v270;
  char *v271;
  char *v272;
  _QWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  void (*v279)(void);
  uint64_t v280;
  char *v281;
  uint64_t *v282;
  int v283;
  unint64_t v284;
  int v285;
  uint64_t v286;
  unint64_t v287;
  unint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  int v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t (*v299)(uint64_t);
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  unint64_t v304;
  unint64_t v305;
  _QWORD *v306;
  uint64_t v307;
  uint64_t v308;
  int64_t v309;
  uint64_t *v310;
  _OWORD *v311;
  uint64_t v312;
  int64_t v313;
  char *v314;
  _QWORD *v315;
  _OWORD v316[18];
  uint64_t v317;
  _OWORD v318[3];
  unsigned __int8 v319;
  _OWORD v320[3];
  uint64_t v321;
  __int128 v322;
  uint64_t v323;
  int v324;
  __int128 v325;
  __int128 v326;
  char v327;
  __int128 v328;
  uint64_t v329;
  __int128 v330;
  int v331;
  _QWORD v332[2];
  char v333;
  uint64_t v334;
  unint64_t v335;
  _QWORD v336[36];
  __int128 v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  uint64_t v351;
  _OWORD v352[14];
  uint64_t v353;
  __int128 v354[3];
  _OWORD v355[2];
  _OWORD v356[18];
  uint64_t v357;
  int64_t v358;
  char v359;
  uint64_t v360;
  unint64_t v361;
  _BYTE v362[288];
  uint64_t v363;
  char v364;
  char v365;
  char v366;
  int v367;
  char v368;
  char v369;
  char v370;
  char v371;
  int v372;
  char v373;
  uint64_t v374;
  char v375;
  _BYTE v376[7];
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  char v383;
  _BYTE v384[7];
  _QWORD *v385;
  uint64_t v386;
  char v387;
  char v388;
  int v389;
  __int16 v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  unsigned __int8 v397;
  _BYTE v398[7];
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  int v404;
  uint64_t v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  __int128 v414;
  _OWORD v415[5];
  uint64_t v416;
  _OWORD v417[2];
  __int128 v418;
  _OWORD v419[3];

  v5 = v4;
  v299 = a3;
  v300 = a4;
  v302 = type metadata accessor for RunningTask();
  v307 = *(_QWORD *)(v302 - 8);
  v8 = MEMORY[0x1E0C80A78](v302);
  v276 = (uint64_t)&v266 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v281 = (char *)&v266 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v266 - v13;
  MEMORY[0x1E0C80A78](v12);
  v301 = (uint64_t)&v266 - v15;
  v16 = type metadata accessor for Command();
  MEMORY[0x1E0C80A78](v16);
  v19 = v5[8];
  v20 = "UpdateLocalFlags";
  v310 = v5;
  v279 = (void (*)(void))a1;
  v280 = a2;
  v267 = 0;
  if (v19 == 2)
  {
    v21 = *((_BYTE *)v5 + 88);
    v23 = v5[9];
    v22 = v5[10];
    v314 = (char *)&v266 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_storeEnumTagMultiPayload();
    v312 = sub_1A555D71C(MEMORY[0x1E0DEE9D8]);
    v313 = v24;
    v315 = v25;
    v26 = *v5;
    v27 = *((_BYTE *)v5 + 8);
    v28 = *((_BYTE *)v5 + 9);
    LOBYTE(v320[0]) = *((_BYTE *)v5 + 112);
    v367 = v417[0];
    v368 = BYTE4(v417[0]);
    v372 = v354[0];
    v373 = BYTE4(v354[0]);
    *(_DWORD *)&v376[3] = *(_DWORD *)((char *)v316 + 3);
    *(_DWORD *)v376 = v316[0];
    *(_DWORD *)v384 = v406;
    *(_DWORD *)&v384[3] = *(_DWORD *)((char *)&v406 + 3);
    v389 = v337;
    v390 = WORD2(v337);
    *(_DWORD *)v398 = v352[0];
    *(_DWORD *)&v398[3] = *(_DWORD *)((char *)v352 + 3);
    LODWORD(v24) = *((unsigned __int8 *)v5 + 10);
    v363 = v26;
    *(_QWORD *)&v356[0] = v26;
    LODWORD(v25) = *((unsigned __int8 *)v5 + 17);
    LOBYTE(v326) = v27;
    v364 = v27;
    BYTE8(v356[0]) = v27;
    v29 = *((_BYTE *)v5 + 18);
    v365 = v28;
    BYTE9(v356[0]) = v28;
    HIBYTE(v356[0]) = BYTE4(v417[0]);
    v30 = v5[3];
    v371 = v29;
    *(_DWORD *)((char *)v356 + 11) = v417[0];
    BYTE2(v356[1]) = v29;
    BYTE7(v356[1]) = BYTE4(v354[0]);
    v31 = v5[6];
    v292 = v5[5];
    *(_DWORD *)((char *)&v356[1] + 3) = v354[0];
    DWORD1(v356[2]) = *(_DWORD *)((char *)v316 + 3);
    v379 = v5[7];
    *(_DWORD *)((char *)&v356[2] + 1) = v316[0];
    *((_QWORD *)&v356[3] + 1) = v379;
    v32 = v5[13];
    v306 = (_QWORD *)v5[12];
    v380 = v19;
    *(_QWORD *)&v356[4] = v19;
    v33 = *((_BYTE *)v5 + 113);
    v381 = v23;
    v382 = v22;
    *((_QWORD *)&v356[4] + 1) = v23;
    *(_QWORD *)&v356[5] = v22;
    v34 = v5[15];
    v35 = v5[16];
    v383 = v21;
    BYTE8(v356[5]) = v21;
    HIDWORD(v356[5]) = *(_DWORD *)((char *)&v406 + 3);
    v36 = v5[17];
    v296 = v5[18];
    v385 = v306;
    v386 = v32;
    *(_DWORD *)((char *)&v356[5] + 9) = v406;
    v387 = v320[0];
    *(_QWORD *)&v356[6] = v306;
    *((_QWORD *)&v356[6] + 1) = v32;
    LOBYTE(v356[7]) = v320[0];
    v38 = v5[19];
    v37 = v5[20];
    v388 = v33;
    BYTE1(v356[7]) = v33;
    WORD3(v356[7]) = WORD2(v337);
    v39 = *((_BYTE *)v5 + 168);
    LODWORD(v305) = v39;
    v391 = v34;
    *(_DWORD *)((char *)&v356[7] + 2) = v337;
    *((_QWORD *)&v356[7] + 1) = v34;
    v40 = v5[22];
    v41 = v5[23];
    LOBYTE(v318[0]) = v39;
    v392 = v35;
    v393 = v36;
    *(_QWORD *)&v356[8] = v35;
    v397 = v39;
    *((_QWORD *)&v356[8] + 1) = v36;
    BYTE8(v356[10]) = v39;
    v42 = v5[24];
    v43 = v5[25];
    HIDWORD(v356[10]) = *(_DWORD *)((char *)v352 + 3);
    v44 = v5[26];
    *(_DWORD *)((char *)&v356[10] + 9) = v352[0];
    LODWORD(v36) = *((_DWORD *)v5 + 54);
    v399 = v40;
    *(_QWORD *)&v356[11] = v40;
    v45 = v5[28];
    *(_QWORD *)&v356[12] = v42;
    v401 = v42;
    v46 = *((_BYTE *)v5 + 32);
    v402 = v43;
    *((_QWORD *)&v356[12] + 1) = v43;
    v47 = *((unsigned __int8 *)v5 + 16);
    LODWORD(v297) = v24;
    v366 = v24;
    v369 = v47;
    v294 = (int)v25;
    v370 = (char)v25;
    v293 = v30;
    v374 = v30;
    v375 = v46;
    v377 = v292;
    v378 = v31;
    v394 = v296;
    v395 = v38;
    v396 = v37;
    v295 = v37;
    v400 = v41;
    v403 = v44;
    v404 = v36;
    v405 = v45;
    *(_QWORD *)&v356[13] = v44;
    v304 = v5[30];
    DWORD2(v356[13]) = v36;
    *(_QWORD *)&v356[14] = v45;
    v48 = v5[32];
    *(_OWORD *)((char *)&v356[16] + 8) = *(_OWORD *)(v5 + 33);
    v49 = v5[35];
    *(_QWORD *)&v356[16] = v48;
    LODWORD(v303) = *((_DWORD *)v5 + 62);
    BYTE10(v356[0]) = v24;
    *((_QWORD *)&v356[17] + 1) = v49;
    LODWORD(v298) = *((unsigned __int8 *)v5 + 232);
    LOBYTE(v356[1]) = v47;
    BYTE1(v356[1]) = (_BYTE)v25;
    *((_QWORD *)&v356[1] + 1) = v30;
    LOBYTE(v356[2]) = v46;
    *((_QWORD *)&v356[2] + 1) = v292;
    *(_QWORD *)&v356[3] = v31;
    *(_QWORD *)&v356[9] = v296;
    *((_QWORD *)&v356[9] + 1) = v38;
    *(_QWORD *)&v356[10] = v37;
    *((_QWORD *)&v356[11] + 1) = v41;
    BYTE8(v356[14]) = v298;
    *(_QWORD *)&v356[15] = v304;
    DWORD2(v356[15]) = v303;
    memcpy(v362, v356, sizeof(v362));
    sub_1A55675E8((uint64_t)v356);
    v308 = sub_1A54E6958();
    v309 = v50;
    LODWORD(v311) = v51;
    sub_1A55676F0((uint64_t)v356);
    sub_1A55675E8((uint64_t)v356);
    v52 = sub_1A5544FE8();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v53 = sub_1A558E3A4();
    v54 = v47;
    v55 = v31;
    v56 = v312;
    v57 = v313;
    v58 = sub_1A558E7E0(v54, v294, v293, v46, v292, v297, v55, v53);
    sub_1A5525B50(v296, v38, v295, v305, (uint64_t)v306, v52, BYTE4(v58) & 1, v41);
    v60 = v59;
    swift_bridgeObjectRelease();
    v61 = sub_1A558A2F8(v60);
    swift_release();
    swift_release();
    swift_release();
    v62 = sub_1A559E788(v298, v304);
    sub_1A55676F0((uint64_t)v356);
    v336[0] = v56;
    v336[1] = v57;
    swift_retain();
    swift_retain();
    v63 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795DE8);
    sub_1A54E2E30((unint64_t *)&unk_1EE798680, &qword_1EE795DE8, MEMORY[0x1E0D12E20]);
    v64 = MailboxesSelectionUsage.removing<A>(notContainedIn:)((uint64_t)v336, (uint64_t)v61, v63);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v357 = v308;
    v358 = v309;
    v359 = v311 & 1;
    v360 = v64;
    v361 = v62;
    v65 = (uint64_t)v314;
    v66 = v267;
    v279();
    if (v66)
    {
      swift_bridgeObjectRelease();
      sub_1A54E7074(v62);
      sub_1A55034FC(v65, (uint64_t (*)(_QWORD))type metadata accessor for Command);
      swift_release();
      swift_release();
      swift_release();

      v267 = 0;
      v20 = "UpdateLocalFlags";
    }
    else
    {
      v267 = 0;
      swift_bridgeObjectRelease();
      sub_1A54E7074(v62);
      sub_1A55034FC(v65, (uint64_t (*)(_QWORD))type metadata accessor for Command);
      swift_release();
      swift_release();
      swift_release();
      v67 = v5[34];
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v68 = sub_1A594A74C();
      v69 = sub_1A594C00C();
      v20 = "UpdateLocalFlags";
      if (os_log_type_enabled(v68, v69))
      {
        v70 = swift_slowAlloc();
        *(_DWORD *)v70 = 68157952;
        LODWORD(v336[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v70 + 8) = 256;
        LOBYTE(v336[0]) = *(_BYTE *)(v67 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
        sub_1A594C3CC();
        swift_release();
        _os_log_impl(&dword_1A4F90000, v68, v69, "[%.*hhx] Creating initial connection to get capabilities.", (uint8_t *)v70, 0xBu);
        MEMORY[0x1A85B1964](v70, -1, -1);
      }
      else
      {
        swift_release();
      }

    }
  }
  v71 = v310;
  v282 = v310 + 29;
  v72 = v415;
  v306 = v310 + 19;
  v270 = (char *)v316 + 1;
  v271 = (char *)v316 + 4;
  v272 = (char *)v316 + 8;
  v273 = (_QWORD *)&v326 + 1;
  v274 = (_OWORD *)((char *)&v316[16] + 8);
  v275 = v310 + 33;
  *(_QWORD *)&v18 = *((_QWORD *)v20 + 470);
  v266 = v18;
  *(_QWORD *)&v18 = 68158723;
  v269 = v18;
  v268 = MEMORY[0x1E0DEE9B8] + 8;
  v311 = v415;
  while (2)
  {
    memcpy(v356, v71, sizeof(v356));
    v73 = *(_QWORD *)&v356[17];
    v74 = sub_1A54E6958();
    v77 = sub_1A5555D84(v74, v76, v75 & 1);
    v79 = v78;
    v81 = v80;
    v415[3] = v356[12];
    v415[4] = v356[13];
    v315 = (_QWORD *)*((_QWORD *)&v356[17] + 1);
    v416 = *(_QWORD *)&v356[14];
    v414 = v356[8];
    v415[0] = v356[9];
    v415[2] = v356[11];
    v415[1] = v356[10];
    v410 = v356[4];
    v411 = v356[5];
    v413 = v356[7];
    v412 = v356[6];
    v406 = v356[0];
    v407 = v356[1];
    v409 = v356[3];
    v408 = v356[2];
    v82 = v72[3];
    v418 = v72[2];
    v419[0] = v82;
    *(_OWORD *)((char *)v419 + 12) = *(_OWORD *)((char *)v72 + 60);
    v83 = v72[1];
    v417[0] = *v72;
    v417[1] = v83;
    v354[2] = v418;
    v355[0] = v82;
    *(_OWORD *)((char *)v355 + 12) = *(_OWORD *)((char *)v419 + 12);
    v354[1] = v83;
    v354[0] = v417[0];
    sub_1A556C68C((uint64_t)v417);
    sub_1A555E640(v77, v79, v81, v73, v315, v354);
    sub_1A556C6E4((uint64_t)v417);
    swift_retain();
    v303 = v79;
    v304 = v77;
    v286 = v81;
    sub_1A559E5B4(v77, v79, v81);
    swift_release();
    v283 = 0;
    while (2)
    {
      v85 = v71[13];
      v352[12] = v71[12];
      v352[13] = v85;
      v353 = *((_QWORD *)v71 + 28);
      v86 = v71[9];
      v352[8] = v71[8];
      v352[9] = v86;
      v87 = v71[10];
      v352[11] = v71[11];
      v352[10] = v87;
      v88 = v71[5];
      v352[4] = v71[4];
      v352[5] = v88;
      v89 = v71[6];
      v352[7] = v71[7];
      v352[6] = v89;
      v90 = v71[1];
      v352[0] = *v71;
      v352[1] = v90;
      v91 = v71[2];
      v352[3] = v71[3];
      v352[2] = v91;
      v92 = *((_QWORD *)v71 + 30);
      v93 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v94 = sub_1A558D714(v93);
      v96 = v95;
      v98 = v97;
      swift_bridgeObjectRelease();
      v99 = *((unsigned __int8 *)v71 + 232);
      swift_bridgeObjectRetain_n();
      sub_1A5546144(v94, v96, v98, v304, v303, v286, (uint64_t)v352, v320, v92);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A558DC24((uint64_t)v320, (uint64_t)v318);
      if (v319 == 255)
      {
        sub_1A5510284((uint64_t)v318, &qword_1EE797CA8);
      }
      else
      {
        sub_1A5552FE0((uint64_t)v318, (uint64_t)v316);
        sub_1A555301C((uint64_t)v316, (uint64_t)v318);
        v100 = v301;
        sub_1A5592494((uint64_t)v318, v99, v301);
        sub_1A55A1090(v100 + *(int *)(v302 + 28));
        sub_1A559EC54(v100);
        sub_1A55034FC(v100, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
        sub_1A5553058((uint64_t)v316);
        v283 = 1;
      }
      v305 = sub_1A558B6F4(MEMORY[0x1E0DEE9D8]);
      v101 = *(_QWORD *)(v321 + 56);
      v308 = v321 + 56;
      v102 = 1 << *(_BYTE *)(v321 + 32);
      if (v102 < 64)
        v103 = ~(-1 << v102);
      else
        v103 = -1;
      v315 = (_QWORD *)(v103 & v101);
      v309 = (unint64_t)(v102 + 63) >> 6;
      v312 = v321;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v104 = 0;
      v71 = v310;
      v72 = v311;
      v105 = (unint64_t)v315;
      if (v315)
      {
LABEL_20:
        v106 = __clz(__rbit64(v105));
        v107 = (_QWORD *)((v105 - 1) & v105);
        v108 = v106 | (v104 << 6);
        goto LABEL_34;
      }
      while (1)
      {
        v109 = __OFADD__(v104++, 1);
        if (v109)
        {
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          swift_release();
          swift_release();
          return swift_release();
        }
        if (v104 >= v309)
          goto LABEL_117;
        v110 = *(_QWORD *)(v308 + 8 * v104);
        if (!v110)
          break;
LABEL_33:
        v107 = (_QWORD *)((v110 - 1) & v110);
        v108 = __clz(__rbit64(v110)) + (v104 << 6);
LABEL_34:
        v313 = v104;
        v112 = *(_QWORD *)(v312 + 48) + 16 * v108;
        v113 = *(_QWORD *)v112;
        v314 = (char *)*(unsigned int *)(v112 + 8);
        v315 = v107;
        v114 = *((_QWORD *)v71 + 30);
        v115 = MEMORY[0x1E0DEE9E8];
        v317 = MEMORY[0x1E0DEE9E8];
        v116 = *(_QWORD *)(v114 + 16);
        if (v116)
        {
          v117 = v307;
          v118 = v114 + ((*(unsigned __int8 *)(v307 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v307 + 80));
          swift_bridgeObjectRetain_n();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v119 = *(_QWORD *)(v117 + 72);
          do
          {
            sub_1A55034B8(v118, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
            sub_1A556C73C((uint64_t)v14, (uint64_t)v316);
            if (BYTE5(v316[3]))
            {
              if (BYTE5(v316[3]) == 1)
              {
                v318[1] = v316[1];
                v318[2] = v316[2];
                v318[0] = v316[0];
                v120 = *((_QWORD *)&v316[1] + 1);
                v121 = *(_QWORD *)&v316[2];
                __swift_project_boxed_opaque_existential_1_0(v318, *((uint64_t *)&v316[1] + 1));
                (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v121 + 32))(&v322, v120, v121);
                sub_1A550E928((uint64_t)v318);
                v122 = v323;
                LODWORD(v120) = v324;
                v325 = v322;
                sub_1A54F81BC((uint64_t)&v325);
                sub_1A54F2A14((uint64_t)v316, v122, v120);
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              sub_1A556C7D8((uint64_t)v316);
            }
            sub_1A55034FC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
            v118 += v119;
            --v116;
          }
          while (v116);
          swift_bridgeObjectRelease_n();
          v123 = v317;
          v71 = v310;
        }
        else
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v123 = v115;
        }
        v124 = (unint64_t)v314;
        if (*(_QWORD *)(v123 + 16))
        {
          sub_1A594CE64();
          sub_1A594CE88();
          v125 = sub_1A594CED0();
          v126 = -1 << *(_BYTE *)(v123 + 32);
          v127 = v125 & ~v126;
          if (((*(_QWORD *)(v123 + 56 + ((v127 >> 3) & 0xFFFFFFFFFFFFF8)) >> v127) & 1) != 0)
          {
            v128 = ~v126;
            while (1)
            {
              v129 = *(_QWORD *)(v123 + 48) + 16 * v127;
              if ((*(unsigned int *)(v129 + 8) | ((unint64_t)*(unsigned int *)(v129 + 8) << 32)) == (v124 | (v124 << 32)))
              {
                v130 = *(_QWORD *)v129;
                v131 = *(_QWORD *)(v130 + 16);
                if (v131 == *(_QWORD *)(v113 + 16))
                {
                  if (!v131 || v130 == v113)
                    goto LABEL_84;
                  if (*(unsigned __int8 *)(v130 + 32) == *(unsigned __int8 *)(v113 + 32))
                  {
                    if (v131 == 1)
                      goto LABEL_84;
                    if (*(unsigned __int8 *)(v130 + 33) == *(unsigned __int8 *)(v113 + 33))
                    {
                      if (v131 == 2)
                        goto LABEL_84;
                      if (*(unsigned __int8 *)(v130 + 34) == *(unsigned __int8 *)(v113 + 34))
                      {
                        if (v131 == 3)
                          goto LABEL_84;
                        if (*(unsigned __int8 *)(v130 + 35) == *(unsigned __int8 *)(v113 + 35))
                          break;
                      }
                    }
                  }
                }
              }
LABEL_47:
              v127 = (v127 + 1) & v128;
              if (((*(_QWORD *)(v123 + 56 + ((v127 >> 3) & 0xFFFFFFFFFFFFF8)) >> v127) & 1) == 0)
                goto LABEL_63;
            }
            v132 = 0;
            v133 = v130 + 36;
            v134 = v131 - 4;
            while (v134 != v132)
            {
              v135 = *(unsigned __int8 *)(v133 + v132);
              v136 = *(unsigned __int8 *)(v113 + v132++ + 36);
              if (v135 != v136)
                goto LABEL_47;
            }
LABEL_84:
            swift_bridgeObjectRelease();
LABEL_21:
            swift_bridgeObjectRelease();
            v72 = v311;
            goto LABEL_22;
          }
        }
LABEL_63:
        swift_bridgeObjectRelease();
        if (*((_BYTE *)v71 + 168) != 1)
          goto LABEL_21;
        v137 = (_QWORD *)*((_QWORD *)v71 + 18);
        v138 = v137[2];
        if (!v138)
          goto LABEL_21;
        v139 = 0;
        while (1)
        {
          v140 = (uint64_t)&v137[22 * v139 + 4];
          if ((*(unsigned int *)(v140 + 24) | ((unint64_t)*(unsigned int *)(v140 + 24) << 32)) == (v124 | (v124 << 32)))
          {
            v141 = *(_QWORD *)(v140 + 16);
            v142 = *(_QWORD *)(v141 + 16);
            if (v142 == *(_QWORD *)(v113 + 16))
            {
              if (v142)
                v143 = v141 == v113;
              else
                v143 = 1;
              if (v143)
                goto LABEL_85;
              if (*(unsigned __int8 *)(v141 + 32) == *(unsigned __int8 *)(v113 + 32))
              {
                if (v142 == 1)
                  goto LABEL_85;
                if (*(unsigned __int8 *)(v141 + 33) == *(unsigned __int8 *)(v113 + 33))
                {
                  if (v142 == 2)
                    goto LABEL_85;
                  if (*(unsigned __int8 *)(v141 + 34) == *(unsigned __int8 *)(v113 + 34))
                  {
                    if (v142 == 3)
                      goto LABEL_85;
                    if (*(unsigned __int8 *)(v141 + 35) == *(unsigned __int8 *)(v113 + 35))
                      break;
                  }
                }
              }
            }
          }
LABEL_66:
          if (++v139 == v138)
            goto LABEL_21;
        }
        v144 = (unsigned __int8 *)(v141 + 36);
        v145 = v142 - 4;
        v146 = (unsigned __int8 *)(v113 + 36);
        while (v145)
        {
          v148 = *v144++;
          v147 = v148;
          v149 = *v146++;
          --v145;
          if (v147 != v149)
            goto LABEL_66;
        }
LABEL_85:
        v150 = *((_QWORD *)v71 + 19);
        v151 = *((_QWORD *)v71 + 20);
        sub_1A55212D0(*((_QWORD *)v71 + 18), v150, v151, 1);
        v152 = v137;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v152 = sub_1A554B6F8(v137);
        if (v139 >= v152[2])
          goto LABEL_144;
        v153 = (uint64_t)&v152[22 * v139 + 4];
        v155 = *(_QWORD *)(v153 + 136);
        v154 = (_QWORD *)(v153 + 136);
        if (*(_QWORD *)(v155 + 16))
        {
          swift_bridgeObjectRelease();
          v157 = (uint64_t)&v152[22 * v139 + 4];
          *v154 = MEMORY[0x1E0DEE9E8];
          v158 = *(_QWORD *)v157;
          v298 = *(_QWORD *)(v157 + 8);
          LODWORD(v297) = *(_DWORD *)(v157 + 104);
          v159 = *(_BYTE *)(v157 + 108);
          v296 = v158;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54E8FCC((uint64_t)v137, v150, v151, 1);
          v71 = v310;
          v310[18] = (uint64_t)v152;
          v160 = v306;
          *v306 = 0;
          v160[1] = 0;
          *((_BYTE *)v71 + 168) = 1;
          v161 = *((_QWORD *)v71 + 24);
          v162 = *((_DWORD *)v71 + 54);
          *(_QWORD *)&v326 = v152;
          v163 = v273;
          *v273 = 0;
          v163[1] = 0;
          v327 = 1;
          v328 = v71[11];
          v329 = v161;
          v330 = *(_OWORD *)((char *)v71 + 200);
          v331 = v162;
          v164 = (int)v314;
          v165 = sub_1A551306C(v113, v314, &v326);
          v294 = v166;
          if ((v166 & 0x100) != 0)
            v167 = 0;
          else
            v167 = v165;
          v295 = v167;
          v168 = *((_QWORD *)v71 + 34);
          swift_retain_n();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v169 = sub_1A594A74C();
          v170 = sub_1A594C030();
          if (os_log_type_enabled(v169, (os_log_type_t)v170))
          {
            LODWORD(v293) = v170;
            v171 = swift_slowAlloc();
            v292 = swift_slowAlloc();
            *(_QWORD *)&v318[0] = v292;
            *(_DWORD *)v171 = v269;
            LODWORD(v316[0]) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v171 + 8) = 256;
            v172 = v159;
            v173 = *(_BYTE *)(v168 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
            swift_release();
            LOBYTE(v316[0]) = v173;
            sub_1A594C3CC();
            swift_release();
            *(_WORD *)(v171 + 11) = 2160;
            *(_QWORD *)&v316[0] = 0x786F626C69616DLL;
            sub_1A594C3CC();
            *(_WORD *)(v171 + 21) = 2085;
            *(_QWORD *)&v316[0] = v113;
            DWORD2(v316[0]) = v164;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v174 = sub_1A594B4A8();
            *(_QWORD *)&v316[0] = sub_1A55791B0(v174, v175, (uint64_t *)v318);
            sub_1A594C3CC();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v171 + 31) = 2080;
            if ((v159 & 1) != 0)
            {
              v176 = 0xE100000000000000;
              v177 = 45;
            }
            else
            {
              LODWORD(v316[0]) = v297;
              v177 = sub_1A594B490();
              v176 = v179;
            }
            v72 = v311;
            v178 = v296;
            *(_QWORD *)&v316[0] = sub_1A55791B0(v177, v176, (uint64_t *)v318);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1A4F90000, v169, (os_log_type_t)v293, "[%.*hhx] No new and no running tasks for '%{sensitive,mask.mailbox}s' with change ID %s. Marking as done.", (uint8_t *)v171, 0x29u);
            v180 = v292;
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v180, -1, -1);
            MEMORY[0x1A85B1964](v171, -1, -1);

            v71 = v310;
          }
          else
          {
            v172 = v159;
            swift_bridgeObjectRelease_n();

            swift_release_n();
            v72 = v311;
            v178 = v296;
          }
          v181 = v305;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v316[0] = v181;
          v184 = sub_1A54FDC94(v178, v298);
          v185 = *(_QWORD *)(v181 + 16);
          v186 = (v183 & 1) == 0;
          v187 = v185 + v186;
          if (__OFADD__(v185, v186))
            goto LABEL_151;
          v188 = v183;
          if (*(_QWORD *)(v181 + 24) >= v187)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_1A5550510();
          }
          else
          {
            sub_1A55837D8(v187, isUniquelyReferenced_nonNull_native);
            v189 = sub_1A54FDC94(v178, v298);
            if ((v188 & 1) != (v190 & 1))
              goto LABEL_153;
            v184 = v189;
          }
          v191 = *(_QWORD **)&v316[0];
          v305 = *(_QWORD *)&v316[0];
          v192 = (v294 & 0x101) == 0;
          if ((v188 & 1) != 0)
          {
            v193 = *(_QWORD *)(*(_QWORD *)&v316[0] + 56) + 24 * v184;
            *(_DWORD *)v193 = v297;
            v194 = !v192;
            *(_BYTE *)(v193 + 4) = v172;
            *(_QWORD *)(v193 + 8) = v295;
            *(_BYTE *)(v193 + 16) = v194;
          }
          else
          {
            v195 = (v294 & 0x101) != 0;
            *(_QWORD *)(*(_QWORD *)&v316[0] + 8 * (v184 >> 6) + 64) |= 1 << v184;
            v196 = (uint64_t *)(v191[6] + 16 * v184);
            v197 = v298;
            *v196 = v178;
            v196[1] = v197;
            v198 = v191[7] + 24 * v184;
            *(_DWORD *)v198 = v297;
            *(_BYTE *)(v198 + 4) = v172;
            *(_QWORD *)(v198 + 8) = v295;
            *(_BYTE *)(v198 + 16) = v195;
            v199 = v191[2];
            v109 = __OFADD__(v199, 1);
            v200 = v199 + 1;
            if (v109)
              goto LABEL_152;
            v191[2] = v200;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v283 = 1;
        }
        else
        {
          sub_1A54E8FCC((uint64_t)v137, v150, v151, 1);
          swift_bridgeObjectRelease();
          v71 = v310;
          v72 = v311;
          v310[18] = (uint64_t)v152;
          v156 = v306;
          *v306 = 0;
          v156[1] = 0;
          *((_BYTE *)v71 + 168) = 1;
        }
LABEL_22:
        v104 = v313;
        v105 = (unint64_t)v315;
        if (v315)
          goto LABEL_20;
      }
      v111 = v104 + 1;
      if (v104 + 1 >= v309)
        goto LABEL_117;
      v110 = *(_QWORD *)(v308 + 8 * v111);
      if (v110)
        goto LABEL_32;
      v111 = v104 + 2;
      if (v104 + 2 >= v309)
        goto LABEL_117;
      v110 = *(_QWORD *)(v308 + 8 * v111);
      if (v110)
      {
LABEL_32:
        v104 = v111;
        goto LABEL_33;
      }
      v111 = v104 + 3;
      if (v104 + 3 < v309)
      {
        v110 = *(_QWORD *)(v308 + 8 * v111);
        if (!v110)
        {
          while (1)
          {
            v104 = v111 + 1;
            if (__OFADD__(v111, 1))
              goto LABEL_145;
            if (v104 >= v309)
              goto LABEL_117;
            v110 = *(_QWORD *)(v308 + 8 * v104);
            ++v111;
            if (v110)
              goto LABEL_33;
          }
        }
        goto LABEL_32;
      }
LABEL_117:
      swift_release();
      if (*(_QWORD *)(v305 + 16))
      {
        v201 = v305;
        v202 = swift_allocObject();
        *(_QWORD *)(v202 + 16) = v201;
        v299(v202 | 0x8000000000000006);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_1A558DC24((uint64_t)v320, (uint64_t)v316);
      sub_1A558DC6C((uint64_t)v320);
      v84 = LOBYTE(v316[3]);
      sub_1A5510284((uint64_t)v316, &qword_1EE797CA8);
      if (v84 != 255)
        continue;
      break;
    }
    v203 = v304;
    swift_retain();
    v204 = v303;
    swift_retain();
    v205 = static MonotonicTime.now()();
    v206 = *((_QWORD *)v71 + 30);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v207 = sub_1A5578B38(v205, v206, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1A559EB70, 0, v203, v204);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v208 = *(_QWORD *)(v207 + 16);
    v209 = v281;
    if (!v208)
    {
LABEL_135:
      swift_bridgeObjectRelease();
      if ((sub_1A55771BC() & 1) != 0 || (v283 & 1) != 0)
      {
        swift_release();
        swift_release();
        swift_release();
        continue;
      }
      if (*(_QWORD *)(*((_QWORD *)v71 + 30) + 16) || !*(_QWORD *)(*((_QWORD *)v71 + 28) + 16))
        goto LABEL_146;
      v261 = *((_QWORD *)v71 + 34);
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v262 = sub_1A594A74C();
      v263 = sub_1A594C00C();
      if (os_log_type_enabled(v262, v263))
      {
        v264 = swift_slowAlloc();
        *(_DWORD *)v264 = v266;
        LODWORD(v316[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v264 + 8) = 256;
        LOBYTE(v316[0]) = *(_BYTE *)(v261 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
        sub_1A594C3CC();
        swift_release();
        _os_log_impl(&dword_1A4F90000, v262, v263, "[%.*hhx] Re-starting blocked non-mailbox tasks.", (uint8_t *)v264, 0xBu);
        MEMORY[0x1A85B1964](v264, -1, -1);
      }
      else
      {
        swift_release();
      }
      swift_release();
      swift_release();

      swift_release();
      swift_bridgeObjectRelease();
      *((_QWORD *)v71 + 28) = MEMORY[0x1E0DEE9D8];
      continue;
    }
    break;
  }
  v210 = *(_QWORD *)(v207 + 32);
  if ((v210 & 0x8000000000000000) != 0)
  {
LABEL_147:
    __break(1u);
  }
  else
  {
    v211 = 0;
    v277 = v207;
    v278 = v208 - 1;
    while (1)
    {
      v212 = (_QWORD *)*((_QWORD *)v71 + 30);
      if (v210 >= v212[2])
        break;
      v289 = v211;
      v288 = (*(unsigned __int8 *)(v307 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v307 + 80);
      v213 = *(_QWORD *)(v307 + 72);
      v314 = (char *)v210;
      v315 = v212;
      v287 = v213 * v210;
      v290 = (uint64_t)v212 + v288 + v213 * v210;
      v214 = v212;
      sub_1A55034B8(v290, (uint64_t)v209, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      v215 = *(int *)(v302 + 36);
      v217 = v71[3];
      v216 = v71[4];
      v218 = v216;
      v342 = v71[5];
      v341 = v216;
      v219 = v71[1];
      v220 = v71[3];
      v339 = v71[2];
      v221 = v339;
      v340 = v220;
      v223 = v71[7];
      v222 = v71[8];
      v224 = v222;
      v346 = v71[9];
      v345 = v222;
      v225 = v71[5];
      v226 = v71[7];
      v343 = v71[6];
      v344 = v226;
      v228 = v71[11];
      v227 = v71[12];
      v229 = v227;
      v350 = v71[13];
      v349 = v227;
      v230 = v71[9];
      v231 = v71[11];
      v347 = v71[10];
      v348 = v231;
      v232 = v71[1];
      v337 = *v71;
      v338 = v232;
      v233 = v71[13];
      v316[12] = v229;
      v316[13] = v233;
      v316[8] = v224;
      v316[9] = v230;
      v316[10] = v347;
      v316[11] = v228;
      v316[4] = v218;
      v316[5] = v225;
      v316[6] = v343;
      v316[7] = v223;
      v316[0] = v337;
      v316[1] = v219;
      v234 = (char *)v209 + v215;
      v312 = (uint64_t)v209 + v215;
      v284 = *(_QWORD *)((char *)v209 + v215);
      v285 = *((unsigned __int8 *)v209 + v215 + 8);
      *(_QWORD *)v234 = 0;
      v234[8] = 1;
      v351 = *((_QWORD *)v71 + 28);
      *(_QWORD *)&v316[14] = *((_QWORD *)v71 + 28);
      v316[2] = v221;
      v316[3] = v217;
      LODWORD(v313) = *((unsigned __int8 *)v71 + 232);
      LODWORD(v298) = *((_DWORD *)v71 + 62);
      v235 = *((_QWORD *)v71 + 32);
      v236 = *((_QWORD *)v71 + 35);
      BYTE8(v316[14]) = v313;
      *(_QWORD *)&v316[15] = v214;
      DWORD2(v316[15]) = v298;
      *v274 = *v275;
      *(_QWORD *)&v316[16] = v235;
      *((_QWORD *)&v316[17] + 1) = v236;
      memcpy(v336, v316, sizeof(v336));
      sub_1A55675E8((uint64_t)v316);
      v305 = sub_1A54E6958();
      v308 = v237;
      LODWORD(v309) = v238;
      sub_1A55676F0((uint64_t)v316);
      v295 = *((_QWORD *)&v346 + 1);
      v296 = v347;
      v297 = *((_QWORD *)&v348 + 1);
      v294 = BYTE8(v347) & 1;
      v292 = v346;
      v293 = v343;
      sub_1A55675E8((uint64_t)v316);
      v291 = sub_1A5544FE8();
      v239 = BYTE1(v338);
      v240 = *((_QWORD *)&v338 + 1);
      v241 = BYTE10(v337);
      v242 = *((_QWORD *)&v339 + 1);
      v243 = v340;
      v244 = v339;
      v245 = v338;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v246 = sub_1A558E3A4();
      v247 = v239 & 1;
      v71 = v310;
      v248 = sub_1A558E7E0(v245, v247, v240, v244, v242, v241, v243, v246);
      sub_1A5525B50(v292, v295, v296, v294, v293, v291, BYTE4(v248) & 1, v297);
      v250 = v249;
      swift_bridgeObjectRelease();
      v251 = sub_1A558A2F8(v250);
      swift_release();
      v209 = v281;
      swift_release();
      swift_release();
      v252 = sub_1A559E788(v313, (uint64_t)v315);
      sub_1A55676F0((uint64_t)v316);
      *(_QWORD *)&v320[0] = v304;
      *((_QWORD *)&v320[0] + 1) = v303;
      swift_retain();
      swift_retain();
      v253 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795DE8);
      sub_1A54E2E30((unint64_t *)&unk_1EE798680, &qword_1EE795DE8, MEMORY[0x1E0D12E20]);
      v254 = MailboxesSelectionUsage.removing<A>(notContainedIn:)((uint64_t)v320, (uint64_t)v251, v253);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      v332[0] = v305;
      v332[1] = v308;
      v333 = v309 & 1;
      v334 = v254;
      v335 = v252;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E7028(v252);
      sub_1A559BEF8((uint64_t)v71, v299, v300, v209, (uint64_t)v71, (uint64_t (*)(uint64_t, uint64_t))v279, v280, (uint64_t)v332);
      swift_bridgeObjectRelease();
      sub_1A54E7074(v252);
      swift_bridgeObjectRelease();
      sub_1A54E7074(v252);
      v255 = v312;
      if ((*(_BYTE *)(v312 + 8) & 1) == 0 && (v285 & 1) == 0)
      {
        v256 = *(_QWORD *)v312;
        if (v284 < *(_QWORD *)v312)
          v256 = v284;
        *(_QWORD *)v312 = v256;
        *(_BYTE *)(v255 + 8) = 0;
      }
      v257 = v276;
      sub_1A55034B8((uint64_t)v209, v276, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      if ((unint64_t)v314 >= v315[2])
        goto LABEL_149;
      v258 = v301;
      sub_1A55034B8(v290, v301, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      sub_1A5599638(v313, v258);
      sub_1A55034FC(v258, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      v259 = *((_QWORD *)v71 + 30);
      v260 = swift_isUniquelyReferenced_nonNull_native();
      *((_QWORD *)v71 + 30) = v259;
      if ((v260 & 1) == 0)
      {
        v259 = sub_1A554B70C(v259);
        *((_QWORD *)v71 + 30) = v259;
      }
      v72 = v311;
      if ((unint64_t)v314 >= *(_QWORD *)(v259 + 16))
        goto LABEL_150;
      sub_1A558DF9C(v257, v259 + v288 + v287);
      sub_1A55034FC(v257, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      sub_1A55034FC((uint64_t)v209, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      if (v278 == v289)
        goto LABEL_135;
      v210 = *(_QWORD *)(v277 + 8 * v289 + 40);
      v211 = v289 + 1;
      if ((v210 & 0x8000000000000000) != 0)
        goto LABEL_147;
    }
  }
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

uint64_t sub_1A557702C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);

  v18 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DC0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ClientCommand(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A54E34B4();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1A5510284((uint64_t)v9, &qword_1EE797DC0);
    return v18(a1, a5);
  }
  sub_1A54E3394((uint64_t)v9, (uint64_t)v13, type metadata accessor for ClientCommand);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A559E258((uint64_t)v13);
  v15 = v14;
  swift_bridgeObjectRelease();
  sub_1A55034FC((uint64_t)v13, type metadata accessor for ClientCommand);
  if ((v15 & 1) != 0)
    return v18(a1, a5);
  return 0;
}

uint64_t sub_1A55771BC()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 240);
  v1 = (unint64_t *)(v0 + 240);
  v3 = *(_QWORD *)(v2 + 16);
  swift_retain_n();
  result = sub_1A55802EC(v1, (char *)v1 - 8);
  v5 = *(_QWORD *)(*v1 + 16);
  if (v5 < result)
  {
    __break(1u);
  }
  else
  {
    sub_1A558CCF8(result, v5);
    v6 = *(_QWORD *)(*v1 + 16);
    if (v3 == v6)
    {
      swift_release();
    }
    else
    {
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v7 = sub_1A594A74C();
      v8 = sub_1A594C000();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = swift_slowAlloc();
        *(_DWORD *)v9 = 68158208;
        sub_1A594C3CC();
        *(_WORD *)(v9 + 8) = 256;
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v9 + 11) = 2048;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v7, v8, "[%.*hhx] Pruned %ld completed tasks.", (uint8_t *)v9, 0x15u);
        MEMORY[0x1A85B1964](v9, -1, -1);
        swift_release();
      }
      else
      {
        swift_release_n();
      }

    }
    return v3 != v6;
  }
  return result;
}

Swift::Void __swiftcall StateWithTasks.logForDidCreateFirstConnection()()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  char v62;
  char v63;
  char v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  int64_t v78;
  uint64_t v79;
  int64_t v80;
  int v81;
  int v82;
  char v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  int64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  char v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  os_log_type_t v112;
  NSObject *log;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  os_log_type_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  _OWORD v154[2];
  __int128 v155;
  __int128 v156;
  __int128 v157;
  _OWORD v158[2];
  _QWORD v159[3];

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_OWORD *)(v0 + 176);
  v152 = *(_OWORD *)(v0 + 160);
  v153 = v2;
  v154[0] = *(_OWORD *)(v0 + 192);
  *(_OWORD *)((char *)v154 + 12) = *(_OWORD *)(v0 + 204);
  v3 = *(_OWORD *)(v0 + 112);
  v148 = *(_OWORD *)(v0 + 96);
  v149 = v3;
  v4 = *(_OWORD *)(v0 + 144);
  v150 = *(_OWORD *)(v0 + 128);
  v151 = v4;
  v5 = *(_OWORD *)(v0 + 80);
  v146 = *(_OWORD *)(v0 + 64);
  v147 = v5;
  v159[0] = v1;
  v6 = 1 << *(_BYTE *)(v1 + 32);
  v7 = -1;
  *(_QWORD *)&v133 = MEMORY[0x1E0DEE9E8];
  v8 = v1 + 64;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v9 = v7 & *(_QWORD *)(v1 + 64);
  v10 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_84;
    if (v14 >= v10)
      goto LABEL_25;
    v15 = *(_QWORD *)(v8 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_25;
      v15 = *(_QWORD *)(v8 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_25;
        v15 = *(_QWORD *)(v8 + 8 * v11);
        if (!v15)
        {
          v11 = v14 + 3;
          if (v14 + 3 >= v10)
            goto LABEL_25;
          v15 = *(_QWORD *)(v8 + 8 * v11);
          if (!v15)
          {
            v11 = v14 + 4;
            if (v14 + 4 >= v10)
              goto LABEL_25;
            v15 = *(_QWORD *)(v8 + 8 * v11);
            if (!v15)
              break;
          }
        }
      }
    }
LABEL_24:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_5:
    sub_1A54F28F8(&v155, *(unsigned __int8 *)(*(_QWORD *)(v1 + 56) + 24 * v13));
  }
  v16 = v14 + 5;
  if (v16 >= v10)
    goto LABEL_25;
  v15 = *(_QWORD *)(v8 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      goto LABEL_89;
    if (v11 >= v10)
      break;
    v15 = *(_QWORD *)(v8 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_24;
  }
LABEL_25:
  swift_release();
  sub_1A54F81BC((uint64_t)v159);
  v17 = v133;
  v18 = v121;
  v19 = *(_QWORD *)(v121 + 272);
  sub_1A55675E8(v121);
  sub_1A55675E8(v121);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  swift_bridgeObjectRetain_n();
  sub_1A54FCA28((uint64_t)v159);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v20 = sub_1A594A74C();
  v21 = sub_1A594C030();
  if (os_log_type_enabled(v20, v21))
  {
    v125 = v21;
    v22 = swift_slowAlloc();
    v123 = swift_slowAlloc();
    *(_QWORD *)&v155 = v123;
    *(_DWORD *)v22 = 68158722;
    sub_1A594C3CC();
    *(_WORD *)(v22 + 8) = 256;
    sub_1A55676F0(v121);
    sub_1A594C3CC();
    sub_1A55676F0(v121);
    *(_WORD *)(v22 + 11) = 2048;
    sub_1A54F81BC((uint64_t)v159);
    sub_1A594C3CC();
    sub_1A54F81BC((uint64_t)v159);
    *(_WORD *)(v22 + 21) = 2082;
    sub_1A5572B78(v1);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
    sub_1A54E2E30((unint64_t *)&qword_1EE795F80, &qword_1EE799A38, MEMORY[0x1E0DEAF20]);
    v23 = sub_1A594B268();
    v25 = v24;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v133 = sub_1A55791B0(v23, v25, (uint64_t *)&v155);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A54F81BC((uint64_t)v159);
    sub_1A54F81BC((uint64_t)v159);
    *(_WORD *)(v22 + 31) = 2080;
    v26 = *(_QWORD *)(v17 + 16);
    if (v26)
    {
      v144 = MEMORY[0x1E0DEE9D8];
      sub_1A54F4B4C(0, v26, 0);
      v27 = sub_1A558A0BC(v17);
      if (v27 < 0 || v27 >= 1 << *(_BYTE *)(v17 + 32))
        goto LABEL_85;
      if (((*(_QWORD *)(v17 + 56 + (((unint64_t)v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
        goto LABEL_86;
      if (*(_DWORD *)(v17 + 36) == v28)
      {
        v29 = *(unsigned __int8 *)(*(_QWORD *)(v17 + 48) + v27);
        *(_QWORD *)&v133 = 0;
        *((_QWORD *)&v133 + 1) = 0xE000000000000000;
        __asm { BR              X9 }
      }
      goto LABEL_87;
    }
    v30 = sub_1A594B268();
    v32 = v31;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v133 = sub_1A55791B0(v30, v32, (uint64_t *)&v155);
    sub_1A594C3CC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v20, v125, "[%.*hhx] [1st connection] Running sync requests %ld: {%{public}s}, kinds: %s", (uint8_t *)v22, 0x29u);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v123, -1, -1);
    MEMORY[0x1A85B1964](v22, -1, -1);
    sub_1A54F81BC((uint64_t)v159);

    v18 = v121;
  }
  else
  {
    sub_1A54F81BC((uint64_t)v159);
    sub_1A55676F0(v121);
    sub_1A54F81BC((uint64_t)v159);

    sub_1A55676F0(v121);
    sub_1A54F81BC((uint64_t)v159);
    sub_1A54F81BC((uint64_t)v159);
    sub_1A54F81BC((uint64_t)v159);
    swift_bridgeObjectRelease_n();
  }
  v155 = v151;
  v156 = v152;
  v157 = v153;
  v158[0] = v154[0];
  *(_OWORD *)((char *)v158 + 12) = *(_OWORD *)((char *)v154 + 12);
  if (BYTE8(v152) == 1)
  {
    v34 = *((_QWORD *)&v155 + 1);
    v33 = v155;
    v35 = v156;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v36 = sub_1A54E6958();
    v39 = sub_1A5555D84(v36, v38, v37 & 1);
    v41 = v40;
    v43 = v42;
    v44 = *(_QWORD **)(v18 + 280);
    sub_1A556C68C((uint64_t)&v155);
    sub_1A555E640(v39, v41, v43, v19, v44, &v155);
    sub_1A556C6E4((uint64_t)&v155);
    v145 = 0;
    v45 = *(_QWORD *)(v33 + 16);
    if (v45)
    {
      v108 = v35;
      v114 = v19;
      v46 = v41 + 32;
      v110 = OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id;
      v127 = v33 + 32;
      swift_beginAccess();
      v47 = 0;
      v48 = 0;
      v126 = (_QWORD *)(v39 + 16);
      v115 = v34;
      v116 = v33;
      v118 = v41;
      v119 = v39;
      v117 = v45;
      v120 = v41 + 32;
      while (1)
      {
        v128 = v48;
        v50 = (__int128 *)(v127 + 176 * v48);
        v51 = *v50;
        v52 = v50[2];
        v134 = v50[1];
        v135 = v52;
        v133 = v51;
        v53 = v50[3];
        v54 = v50[4];
        v55 = v50[6];
        v138 = v50[5];
        v139 = v55;
        v136 = v53;
        v137 = v54;
        v56 = v50[7];
        v57 = v50[8];
        v58 = v50[10];
        v142 = v50[9];
        v143 = v58;
        v140 = v56;
        v141 = v57;
        v59 = v134;
        v60 = DWORD2(v134);
        v61 = *(_QWORD *)(v41 + 16);
        if (v39)
        {
          sub_1A557FFE0(v134, DWORD2(v134), v46, v61, v126);
          v63 = v62;
          if ((v62 & 1) != 0)
            goto LABEL_44;
        }
        else
        {
          sub_1A557FEEC(v134, DWORD2(v134), v46, v61);
          v63 = v64;
          if ((v64 & 1) != 0)
          {
LABEL_44:
            if (v47 > 7)
              goto LABEL_38;
          }
        }
        v124 = *((_QWORD *)&v141 + 1);
        v65 = *(_QWORD *)(*((_QWORD *)&v141 + 1) + 16);
        if (v65 || *(_QWORD *)(v142 + 16) || *(_QWORD *)(*((_QWORD *)&v142 + 1) + 16) || (v63 & 1) == 0)
        {
          if (__OFADD__(v145, 1))
            goto LABEL_88;
          v122 = ++v145;
          v66 = v65 == 0;
          v67 = 82;
          if (v66)
            v67 = 0;
          if (v66)
            v68 = 0xE000000000000000;
          else
            v68 = 0xE100000000000000;
          v131 = v67;
          v132 = v68;
          sub_1A54E3150((uint64_t)&v133);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A594B5F8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A594B5F8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A594B5F8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v69 = v131;
          v70 = v132;
          sub_1A55675E8(v121);
          sub_1A55675E8(v121);
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          sub_1A54E3150((uint64_t)&v133);
          sub_1A54E3150((uint64_t)&v133);
          sub_1A54E3150((uint64_t)&v133);
          sub_1A54E3150((uint64_t)&v133);
          sub_1A54E3150((uint64_t)&v133);
          sub_1A54E3150((uint64_t)&v133);
          sub_1A54E3150((uint64_t)&v133);
          sub_1A54E3150((uint64_t)&v133);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v71 = sub_1A594A74C();
          v72 = sub_1A594C030();
          if (os_log_type_enabled(v71, v72))
          {
            v112 = v72;
            log = v71;
            v73 = swift_slowAlloc();
            v111 = swift_slowAlloc();
            v130 = v111;
            *(_DWORD *)v73 = 68159747;
            LODWORD(v131) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v73 + 8) = 256;
            v74 = *(_BYTE *)(v114 + v110);
            sub_1A55676F0(v121);
            LOBYTE(v131) = v74;
            sub_1A594C3CC();
            sub_1A55676F0(v121);
            *(_WORD *)(v73 + 11) = 2048;
            v122 = v145;
            v131 = v145;
            sub_1A594C3CC();
            *(_WORD *)(v73 + 21) = 2160;
            v131 = 0x786F626C69616DLL;
            sub_1A594C3CC();
            *(_WORD *)(v73 + 31) = 2085;
            v131 = v59;
            LODWORD(v132) = v60;
            v75 = v73;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v76 = sub_1A594B4A8();
            v131 = sub_1A55791B0(v76, v77, &v130);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A54E31EC((uint64_t)&v133);
            sub_1A54E31EC((uint64_t)&v133);
            *(_WORD *)(v73 + 41) = 2082;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v131 = sub_1A55791B0(v69, v70, &v130);
            sub_1A594C3CC();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v73 + 51) = 2082;
            v78 = *(_QWORD *)(v124 + 16);
            if (v78)
            {
              v109 = v73;
              v131 = MEMORY[0x1E0DEE9D8];
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              sub_1A54F4B4C(0, v78, 0);
              v79 = v131;
              v80 = sub_1A558A0BC(v124);
              v82 = v81;
              v84 = v83 & 1;
              while ((v80 & 0x8000000000000000) == 0 && v80 < 1 << *(_BYTE *)(v124 + 32))
              {
                if (((*(_QWORD *)(v124 + 56 + (((unint64_t)v80 >> 3) & 0xFFFFFFFFFFFFF8)) >> v80) & 1) == 0)
                  goto LABEL_82;
                if (*(_DWORD *)(v124 + 36) != v82)
                  goto LABEL_83;
                v85 = sub_1A594CC9C();
                v87 = v86;
                v131 = v79;
                v89 = *(_QWORD *)(v79 + 16);
                v88 = *(_QWORD *)(v79 + 24);
                v90 = v79;
                if (v89 >= v88 >> 1)
                {
                  sub_1A54F4B4C(v88 > 1, v89 + 1, 1);
                  v90 = v131;
                }
                *(_QWORD *)(v90 + 16) = v89 + 1;
                v91 = v90 + 16 * v89;
                *(_QWORD *)(v91 + 32) = v85;
                *(_QWORD *)(v91 + 40) = v87;
                v92 = sub_1A558A160(v80, v82, v84 & 1, v124);
                v80 = v92;
                v82 = v93;
                v84 = v94 & 1;
                --v78;
                v79 = v90;
                if (!v78)
                {
                  sub_1A5529B00(v92, v93, v94 & 1);
                  swift_bridgeObjectRelease();
                  v75 = v109;
                  goto LABEL_69;
                }
              }
              __break(1u);
LABEL_82:
              __break(1u);
LABEL_83:
              __break(1u);
LABEL_84:
              __break(1u);
LABEL_85:
              __break(1u);
LABEL_86:
              __break(1u);
LABEL_87:
              __break(1u);
LABEL_88:
              __break(1u);
LABEL_89:
              __break(1u);
              JUMPOUT(0x1A5578404);
            }
            v79 = MEMORY[0x1E0DEE9D8];
LABEL_69:
            v95 = BYTE12(v139);
            v129 = *((_QWORD *)&v140 + 1);
            v96 = v141;
            v131 = v79;
            __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
            sub_1A54E2E30((unint64_t *)&qword_1EE795F80, &qword_1EE799A38, MEMORY[0x1E0DEAF20]);
            v97 = 0xE100000000000000;
            v98 = sub_1A594B268();
            v100 = v99;
            swift_bridgeObjectRelease();
            v131 = sub_1A55791B0(v98, v100, &v130);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A54E31EC((uint64_t)&v133);
            sub_1A54E31EC((uint64_t)&v133);
            *(_WORD *)(v75 + 61) = 2082;
            if ((v95 & 1) != 0)
            {
              v101 = 47;
            }
            else
            {
              v131 = 0;
              v132 = 0xE000000000000000;
              sub_1A594C924();
              v101 = v131;
              v97 = v132;
            }
            v33 = v116;
            v49 = v128;
            v131 = sub_1A55791B0(v101, v97, &v130);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A54E31EC((uint64_t)&v133);
            sub_1A54E31EC((uint64_t)&v133);
            *(_WORD *)(v75 + 71) = 2082;
            v41 = v118;
            if ((v96 & 1) != 0)
            {
              v102 = 0xE100000000000000;
              v103 = 47;
            }
            else
            {
              v131 = v129;
              v103 = sub_1A594CC9C();
              v102 = v104;
            }
            v34 = v115;
            v131 = sub_1A55791B0(v103, v102, &v130);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A54E31EC((uint64_t)&v133);
            sub_1A54E31EC((uint64_t)&v133);
            _os_log_impl(&dword_1A4F90000, log, v112, "[%.*hhx] {%ld} [1st connection] Mailbox: '%{sensitive,mask.mailbox}s' %{public}s {%{public}s} last sync:  {local: %{public}s, remote: %{public}s}", (uint8_t *)v75, 0x51u);
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v111, -1, -1);
            MEMORY[0x1A85B1964](v75, -1, -1);

            sub_1A54E31EC((uint64_t)&v133);
            v39 = v119;
            v45 = v117;
            v46 = v120;
          }
          else
          {
            sub_1A55676F0(v121);

            sub_1A54E31EC((uint64_t)&v133);
            sub_1A55676F0(v121);
            sub_1A54E31EC((uint64_t)&v133);
            sub_1A54E31EC((uint64_t)&v133);
            swift_bridgeObjectRelease_n();
            sub_1A54E31EC((uint64_t)&v133);
            sub_1A54E31EC((uint64_t)&v133);
            sub_1A54E31EC((uint64_t)&v133);
            sub_1A54E31EC((uint64_t)&v133);
            sub_1A54E31EC((uint64_t)&v133);
            sub_1A54E31EC((uint64_t)&v133);
            v34 = v115;
            v33 = v116;
            v41 = v118;
            v39 = v119;
            v45 = v117;
            v46 = v120;
            v49 = v128;
          }
          v47 = v122;
          goto LABEL_39;
        }
        v46 = v120;
LABEL_38:
        v49 = v128;
LABEL_39:
        v48 = v49 + 1;
        if (v48 == v45)
        {
          v105 = v33;
          v106 = v34;
          v107 = v108;
          goto LABEL_79;
        }
      }
    }
    v105 = v33;
    v106 = v34;
    v107 = v35;
LABEL_79:
    sub_1A54E8FCC(v105, v106, v107, 1);
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t StateWithTasks.selectedMailboxes.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  result = MEMORY[0x1E0DEE9E8];
  if ((*(_BYTE *)(v0 + 168) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 144);
    v3 = *(_QWORD *)(v0 + 152);
    v4 = *(_QWORD *)(v0 + 160);
    v30 = MEMORY[0x1E0DEE9E8];
    v5 = *(_QWORD *)(v2 + 16);
    if (v5)
    {
      v6 = (__int128 *)(v2 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      for (i = v5 - 1; ; --i)
      {
        v8 = *v6;
        v9 = v6[2];
        v20 = v6[1];
        v21 = v9;
        v19 = v8;
        v10 = v6[3];
        v11 = v6[4];
        v12 = v6[6];
        v24 = v6[5];
        v25 = v12;
        v22 = v10;
        v23 = v11;
        v13 = v6[7];
        v14 = v6[8];
        v15 = v6[10];
        v28 = v6[9];
        v29 = v15;
        v26 = v13;
        v27 = v14;
        if ((_QWORD)v25)
        {
          v16 = v20;
          v17 = DWORD2(v20);
          sub_1A54E3150((uint64_t)&v19);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54F2A14((uint64_t)&v18, v16, v17);
          swift_bridgeObjectRelease();
          sub_1A54E31EC((uint64_t)&v19);
        }
        if (!i)
          break;
        v6 += 11;
      }
      sub_1A54E8FCC(v2, v3, v4, 1);
      return v30;
    }
  }
  return result;
}

uint64_t StateWithTasks.failOldBackgroundSyncRequests()()
{
  __uint64_t v0;

  v0 = static MonotonicTime.now()();
  return sub_1A5549364(v0);
}

Swift::Void __swiftcall StateWithTasks.logSyncRequests()()
{
  uint64_t v0;

  sub_1A55498F0(*(_QWORD *)(v0 + 272));
}

uint64_t StateWithTasks.logLongRunningSyncRequests(now:)(unint64_t a1)
{
  uint64_t v1;

  return sub_1A554A9F4(a1, *(_QWORD *)(v1 + 272));
}

uint64_t sub_1A5578610(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  _QWORD *v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  _QWORD v47[2];
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unsigned int v53;
  uint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  unsigned int v92;
  __int128 v93;

  v2 = type metadata accessor for RunningTask();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v8 = (char *)v47 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    return MEMORY[0x1E0DEE9E0];
  v10 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v11 = *(_QWORD *)(v6 + 72);
  v47[1] = a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v55 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v54 = v11;
  while (1)
  {
    sub_1A55034B8(v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
    sub_1A55034B8((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
    sub_1A556C73C((uint64_t)v5, (uint64_t)&v73);
    sub_1A55034FC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
    if (BYTE5(v76) != 1)
    {
      sub_1A556C7D8((uint64_t)&v73);
      v58 = 0u;
      v59 = 0u;
      v60 = 0u;
LABEL_4:
      sub_1A5510284((uint64_t)&v58, &qword_1EE7974B0);
      goto LABEL_5;
    }
    v58 = v73;
    v59 = v74;
    v60 = v75;
    if (!*((_QWORD *)&v74 + 1))
      goto LABEL_4;
    v87 = v58;
    v88 = v59;
    v89 = v60;
    sub_1A54FBF7C((uint64_t)&v87, (uint64_t)&v72);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7971D8);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7973B0);
    if (swift_dynamicCast())
    {
      v83 = v68;
      v84 = v69;
      v85 = v70;
      v86 = v71;
      v79 = v64;
      v80 = v65;
      v81 = v66;
      v82 = v67;
      v75 = v60;
      v76 = v61;
      v77 = v62;
      v78 = v63;
      v73 = v58;
      v74 = v59;
      v12 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v13 = sub_1A55FDDC0(v12);
      v15 = v14;
      v16 = v13;
      sub_1A5510284((uint64_t)&v73, &qword_1EE7973B0);
    }
    else
    {
      v71 = 0;
      v69 = 0u;
      v70 = 0u;
      v67 = 0u;
      v68 = 0u;
      v65 = 0u;
      v66 = 0u;
      v63 = 0u;
      v64 = 0u;
      v61 = 0u;
      v62 = 0u;
      v59 = 0u;
      v60 = 0u;
      v58 = 0u;
      sub_1A5510284((uint64_t)&v58, &qword_1EE7973B8);
      v17 = sub_1A54E3414();
      v16 = MessageIdentifierSet.init()(&type metadata for UID, v17);
      v15 = v18;
    }
    v56 = sub_1A54E3414();
    v57 = v57 & 0xFFFFFF0000000000 | v15 & 0xFFFFFFFFFFLL;
    if (MessageIdentifierSet.isEmpty.getter(v16, v57))
    {
      sub_1A550E928((uint64_t)&v87);
      sub_1A54E3458(v16, v15, SBYTE4(v15));
      v11 = v54;
      goto LABEL_5;
    }
    v50 = HIDWORD(v15);
    v51 = v16;
    v52 = v15;
    v19 = *((_QWORD *)&v88 + 1);
    v20 = v89;
    __swift_project_boxed_opaque_existential_1_0(&v87, *((uint64_t *)&v88 + 1));
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v20 + 32))(&v90, v19, v20);
    v21 = v91;
    v22 = v92;
    v93 = v90;
    sub_1A54F81BC((uint64_t)&v93);
    v23 = v55;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v73 = v23;
    v25 = v21;
    v53 = v22;
    v27 = sub_1A54FDC30(v21, v22);
    v28 = v23[2];
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      break;
    v31 = v26;
    if (v23[3] >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1A55506E0();
    }
    else
    {
      sub_1A5583AF4(v30, isUniquelyReferenced_nonNull_native);
      v32 = sub_1A54FDC30(v25, v53);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_27;
      v27 = v32;
    }
    v34 = (_QWORD *)v73;
    swift_bridgeObjectRelease();
    v35 = 16 * v27;
    v49 = v25;
    if ((v31 & 1) == 0)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v36 = MessageIdentifierSet.init()(&type metadata for UID, v56);
      v34[(v27 >> 6) + 8] |= 1 << v27;
      v37 = v34[6] + v35;
      *(_QWORD *)v37 = v25;
      *(_DWORD *)(v37 + 8) = v53;
      v38 = v34[7] + v35;
      *(_QWORD *)v38 = v36;
      *(_DWORD *)(v38 + 8) = v39;
      *(_BYTE *)(v38 + 12) = v40;
      v41 = v34[2];
      v42 = __OFADD__(v41, 1);
      v43 = v41 + 1;
      if (v42)
        goto LABEL_26;
      v34[2] = v43;
    }
    v44 = v52;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v55 = v34;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
    v45 = v51;
    v48 = v44 & 0xFFFFFFFFFFLL | v48 & 0xFFFFFF0000000000;
    MessageIdentifierSet.formUnion(_:)(v51, v48);
    sub_1A54E3458(v45, v44, v50);
    swift_bridgeObjectRelease();
    sub_1A550E928((uint64_t)&v87);
    v11 = v54;
LABEL_5:
    sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
    v10 += v11;
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v55;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

uint64_t sub_1A5578B38(unint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  _QWORD *v15;

  v15 = (_QWORD *)sub_1A5578C40(a1, a2, a3, a4, a5, a6);
  sub_1A5578E84(&v15);
  v6 = v15;
  v7 = v15[2];
  if (v7)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F4BD8(0, v7, 0);
    v8 = v14;
    v9 = *(_QWORD *)(v14 + 16);
    v10 = 4;
    do
    {
      v11 = v6[v10];
      v12 = *(_QWORD *)(v14 + 24);
      if (v9 >= v12 >> 1)
        sub_1A54F4BD8(v12 > 1, v9 + 1, 1);
      *(_QWORD *)(v14 + 16) = v9 + 1;
      *(_QWORD *)(v14 + 8 * v9 + 32) = v11;
      v10 += 2;
      ++v9;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v8;
}

uint64_t sub_1A5578C40(unint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  int64_t v15;
  _BYTE *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;

  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  v12 = sub_1A558BEA8(a2, a3, a4, a5, a6, a1);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  result = swift_release();
  v14 = *(_QWORD *)(v12 + 16);
  if (v14)
  {
    v15 = v14 + 1;
    v16 = (_BYTE *)(v12 + 48);
    v17 = 0.0;
    v18 = 1;
    do
    {
      if ((*v16 & 1) != 0)
      {
        v17 = v17 + 1.0;
        if (v14 == v18)
          goto LABEL_11;
      }
      else
      {
        v19 = *((_QWORD *)v16 - 1);
        v20 = __OFSUB__(v15, v19);
        v21 = v15 - v19;
        if (v20)
        {
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        v17 = v17 + (double)v21;
        if (v14 == v18)
          goto LABEL_11;
      }
      v16 += 32;
      v20 = __OFADD__(v18++, 1);
    }
    while (!v20);
    __break(1u);
LABEL_11:
    v33 = MEMORY[0x1E0DEE9D8];
    result = sub_1A54F4EE8(0, v14, 0);
    v22 = v33;
    v23 = (uint64_t *)(v12 + 56);
    do
    {
      v25 = *(v23 - 3);
      v24 = *(v23 - 2);
      v26 = *v23;
      if (*v23 <= a1)
      {
        v27 = a1 - v26;
        if ((uint64_t)(a1 - v26) < 0)
          goto LABEL_27;
      }
      else
      {
        if ((uint64_t)(*v23 - a1) < 0)
          goto LABEL_26;
        v27 = a1 - *v23;
      }
      v28 = 1.0;
      if ((*(_BYTE *)(v23 - 1) & 1) == 0)
      {
        v20 = __OFSUB__(v15, v24);
        v29 = v15 - v24;
        if (v20)
          goto LABEL_28;
        v28 = (double)v29;
      }
      v31 = *(_QWORD *)(v33 + 16);
      v30 = *(_QWORD *)(v33 + 24);
      if (v31 >= v30 >> 1)
        result = sub_1A54F4EE8(v30 > 1, v31 + 1, 1);
      v23 += 4;
      *(_QWORD *)(v33 + 16) = v31 + 1;
      v32 = v33 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v25;
      *(double *)(v32 + 40) = (double)v27 / 1000000000.0 + v28 * 5.0 / v17;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v22;
}

uint64_t sub_1A5578E84(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A554B734(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1A55891E0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A5578EF0()
{
  return swift_slowAlloc();
}

uint64_t sub_1A5578EF8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_1A5578F2C()
{
  JUMPOUT(0x1A85B1964);
}

uint64_t sub_1A5578F38(void (*a1)(void))
{
  a1();
  return sub_1A594B4A8();
}

uint64_t sub_1A5578F78@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1A5578FA0@<X0>(uint64_t (*a1)(void)@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

_BYTE **sub_1A5578FC8(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1A5578FDC(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  a4(&v7);
  v5 = *a1 + 1;
  result = sub_1A594C3CC();
  *a1 = v5;
  return result;
}

uint64_t sub_1A5579034(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  a4(&v7);
  v5 = *a1 + 2;
  result = sub_1A594C3CC();
  *a1 = v5;
  return result;
}

uint64_t sub_1A5579090(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  a4(&v7);
  v5 = *a1 + 4;
  result = sub_1A594C3CC();
  *a1 = v5;
  return result;
}

uint64_t sub_1A55790E8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  a4(&v7);
  v5 = *a1 + 8;
  result = sub_1A594C3CC();
  *a1 = v5;
  return result;
}

uint64_t sub_1A5579140(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1A55791B0(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1A594C3CC();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1A55791B0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1A5579280(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1A558CC98((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1A558CC98((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1A5579280(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A594C420();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1A5579438(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1A594C7D4();
  if (!v8)
  {
    sub_1A594C9B4();
    __break(1u);
LABEL_17:
    result = sub_1A594CA68();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1A5579438(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1A55794CC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A557971C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1A557971C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A55794CC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1A5579640(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1A594C72C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1A594C9B4();
      __break(1u);
LABEL_10:
      v2 = sub_1A594B640();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1A594CA68();
    __break(1u);
LABEL_14:
    result = sub_1A594C9B4();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1A5579640(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B340);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size_0(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A55796A4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1A594B694();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1A85ADAD0](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_1A557971C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B340);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5579868()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796178);
  result = sub_1A594C6CC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_31;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_31;
          v16 = v6[v5];
          if (!v16)
          {
            v17 = v15 + 2;
            if (v17 >= v10)
            {
LABEL_31:
              v26 = 1 << *(_BYTE *)(v2 + 32);
              if (v26 > 63)
                bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v6 = -1 << v26;
              v1 = v0;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                v5 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_37;
                if (v5 >= v10)
                  goto LABEL_31;
                v16 = v6[v5];
                ++v17;
                if (v16)
                  goto LABEL_21;
              }
            }
            v5 = v17;
          }
        }
LABEL_21:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A5579AFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796160);
  result = sub_1A594C6CC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v29 = (_QWORD *)(v2 + 56);
    v6 = 1 << *(_BYTE *)(v2 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v6 + 63) >> 6;
    v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        result = v2 + 56;
        if (v15 >= v9)
          goto LABEL_31;
        v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v9)
            goto LABEL_31;
          v16 = v29[v5];
          if (!v16)
          {
            v17 = v15 + 2;
            if (v17 >= v9)
            {
LABEL_31:
              v28 = 1 << *(_BYTE *)(v2 + 32);
              if (v28 > 63)
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v29 = -1 << v28;
              v1 = v0;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v29[v17];
            if (!v16)
            {
              while (1)
              {
                v5 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_37;
                if (v5 >= v9)
                  goto LABEL_31;
                v16 = v29[v5];
                ++v17;
                if (v16)
                  goto LABEL_21;
              }
            }
            v5 = v17;
          }
        }
LABEL_21:
        v8 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(v2 + 48) + 16 * v14;
      v19 = *(_QWORD *)v18;
      v20 = *(_DWORD *)(v18 + 8);
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 16 * v11;
      *(_QWORD *)v12 = v19;
      *(_DWORD *)(v12 + 8) = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A5579DA4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796180);
  result = sub_1A594C6CC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v29 = (_QWORD *)(v2 + 56);
    v6 = 1 << *(_BYTE *)(v2 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v6 + 63) >> 6;
    v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9)
          goto LABEL_33;
        v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v9)
            goto LABEL_33;
          v16 = v29[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v9)
              goto LABEL_33;
            v16 = v29[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v28;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v9)
                    goto LABEL_33;
                  v16 = v29[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v8 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
      v19 = *v18;
      v20 = v18[1];
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v11);
      *v12 = v19;
      v12[1] = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A557A070()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A690);
  v3 = sub_1A594C6CC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1A594CE64();
      sub_1A594B4B4();
      sub_1A594B1D8();
      swift_bridgeObjectRelease();
      result = sub_1A594CED0();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A557A368()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8AC0);
  v3 = sub_1A594C6CC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_35;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_35;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_35;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_35:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_41;
                  if (v11 >= v8)
                    goto LABEL_35;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v21 = *v19;
      v20 = v19[1];
      sub_1A594CE64();
      sub_1A594CE88();
      if (v20)
      {
        sub_1A594B4B4();
        sub_1A594B1D8();
        swift_bridgeObjectRelease();
      }
      result = sub_1A594CED0();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v21;
      v13[1] = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A557A67C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6B0);
  result = sub_1A594C6CC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A557A924()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A720);
  v3 = sub_1A594C6CC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1A594CE64();
      sub_1A54E42B4(v20, v21);
      sub_1A5949F9C();
      sub_1A54E46E8(v20, v21);
      result = sub_1A594CED0();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_1A557AC18()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6A8);
  v3 = sub_1A594C6CC();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return;
        }
        if (v12 >= v8)
          goto LABEL_22;
        v13 = v5[v12];
        ++v9;
        if (!v13)
        {
          v9 = v12 + 1;
          if (v12 + 1 >= v8)
            goto LABEL_22;
          v13 = v5[v9];
          if (!v13)
          {
            v9 = v12 + 2;
            if (v12 + 2 >= v8)
              goto LABEL_22;
            v13 = v5[v9];
            if (!v13)
            {
              v14 = v12 + 3;
              if (v14 >= v8)
              {
LABEL_22:
                swift_release();
                v15 = 1 << *(_BYTE *)(v2 + 32);
                if (v15 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v15 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v5 = -1 << v15;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v13 = v5[v14];
              if (!v13)
              {
                while (1)
                {
                  v9 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_28;
                  if (v9 >= v8)
                    goto LABEL_22;
                  v13 = v5[v9];
                  ++v14;
                  if (v13)
                    goto LABEL_21;
                }
              }
              v9 = v14;
            }
          }
        }
LABEL_21:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v9 << 6);
      }
      sub_1A54F47AC(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v11));
    }
  }
  swift_release();
  *v1 = v3;
}

uint64_t sub_1A557ADE0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  __int128 *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8AB8);
  v2 = sub_1A594C6CC();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v27 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v7 = (unint64_t)(v4 + 63) >> 6;
    v8 = v2 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v6)
      {
        v13 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v7)
          goto LABEL_33;
        v16 = v27[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v7)
            goto LABEL_33;
          v16 = v27[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v7)
              goto LABEL_33;
            v16 = v27[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v7)
              {
LABEL_33:
                swift_release();
                v26 = 1 << *(_BYTE *)(v1 + 32);
                if (v26 > 63)
                  bzero(v27, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v27 = -1 << v26;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v16 = v27[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v7)
                    goto LABEL_33;
                  v16 = v27[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v6 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = (__int128 *)(*(_QWORD *)(v1 + 48) + 48 * v14);
      v28 = *v18;
      v29 = v18[1];
      v30 = v18[2];
      sub_1A594CE64();
      sub_1A594C6A8();
      result = sub_1A594CED0();
      v19 = -1 << *(_BYTE *)(v3 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_OWORD *)(*(_QWORD *)(v3 + 48) + 48 * v11);
      *v12 = v28;
      v12[1] = v29;
      v12[2] = v30;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

void sub_1A557B0DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6A0);
  v3 = sub_1A594C6CC();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return;
        }
        if (v12 >= v8)
          goto LABEL_22;
        v13 = v5[v12];
        ++v9;
        if (!v13)
        {
          v9 = v12 + 1;
          if (v12 + 1 >= v8)
            goto LABEL_22;
          v13 = v5[v9];
          if (!v13)
          {
            v9 = v12 + 2;
            if (v12 + 2 >= v8)
              goto LABEL_22;
            v13 = v5[v9];
            if (!v13)
            {
              v14 = v12 + 3;
              if (v14 >= v8)
              {
LABEL_22:
                swift_release();
                v15 = 1 << *(_BYTE *)(v2 + 32);
                if (v15 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v15 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v5 = -1 << v15;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v13 = v5[v14];
              if (!v13)
              {
                while (1)
                {
                  v9 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_28;
                  if (v9 >= v8)
                    goto LABEL_22;
                  v13 = v5[v9];
                  ++v14;
                  if (v13)
                    goto LABEL_21;
                }
              }
              v9 = v14;
            }
          }
        }
LABEL_21:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v9 << 6);
      }
      sub_1A54F4960(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 24 * v11), *(_QWORD *)(*(_QWORD *)(v2 + 48) + 24 * v11 + 8));
    }
  }
  swift_release();
  *v1 = v3;
}

uint64_t sub_1A557B2B0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(a2);
  result = sub_1A594C6CC();
  v6 = result;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 0;
    v8 = (_QWORD *)(v4 + 56);
    v9 = 1 << *(_BYTE *)(v4 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v4 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12)
          goto LABEL_33;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_33;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_33;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                v28 = 1 << *(_BYTE *)(v4 + 32);
                if (v28 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v28;
                v3 = v2;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_39;
                  if (v7 >= v12)
                    goto LABEL_33;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_23;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_23:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v16);
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      v21 = -1 << *(_BYTE *)(v6 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_DWORD *)(*(_QWORD *)(v6 + 48) + 4 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1A557B554(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1A5579868();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1A557D178();
      goto LABEL_14;
    }
    sub_1A557E3C0();
  }
  v8 = *v3;
  sub_1A594CE64();
  sub_1A594CE88();
  result = sub_1A594CED0();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      result = sub_1A594CDEC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v10 + a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1A557B6A0(uint64_t result, unsigned int a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  unsigned __int8 *v17;
  uint64_t v18;
  unsigned __int8 *v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0)
    goto LABEL_28;
  if ((a4 & 1) != 0)
  {
    sub_1A5579AFC();
  }
  else
  {
    if (v9 > v8)
    {
      result = (uint64_t)sub_1A557D2F4();
      goto LABEL_28;
    }
    sub_1A557E624();
  }
  v10 = *v4;
  sub_1A594CE64();
  sub_1A594CE88();
  result = sub_1A594CED0();
  v11 = -1 << *(_BYTE *)(v10 + 32);
  a3 = result & ~v11;
  if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v12 = ~v11;
    while (1)
    {
      v13 = *(_QWORD *)(v10 + 48) + 16 * a3;
      if ((*(unsigned int *)(v13 + 8) | ((unint64_t)*(unsigned int *)(v13 + 8) << 32)) == (a2 | ((unint64_t)a2 << 32)))
      {
        v14 = *(_QWORD *)v13;
        v15 = *(_QWORD *)(v14 + 16);
        if (v15 == *(_QWORD *)(v7 + 16))
        {
          if (v15)
            v16 = v14 == v7;
          else
            v16 = 1;
          if (v16)
            goto LABEL_31;
          if (*(unsigned __int8 *)(v14 + 32) == *(unsigned __int8 *)(v7 + 32))
          {
            if (v15 == 1)
              goto LABEL_31;
            if (*(unsigned __int8 *)(v14 + 33) == *(unsigned __int8 *)(v7 + 33))
            {
              if (v15 == 2)
                goto LABEL_31;
              if (*(unsigned __int8 *)(v14 + 34) == *(unsigned __int8 *)(v7 + 34))
              {
                if (v15 == 3)
                  goto LABEL_31;
                if (*(unsigned __int8 *)(v14 + 35) == *(unsigned __int8 *)(v7 + 35))
                  break;
              }
            }
          }
        }
      }
LABEL_10:
      a3 = (a3 + 1) & v12;
      if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
        goto LABEL_28;
    }
    v17 = (unsigned __int8 *)(v14 + 36);
    v18 = v15 - 4;
    v19 = (unsigned __int8 *)(v7 + 36);
    while (v18)
    {
      v21 = *v17++;
      v20 = v21;
      v22 = *v19++;
      --v18;
      if (v20 != v22)
        goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_28:
  v23 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v24 = *(_QWORD *)(v23 + 48) + 16 * a3;
  *(_QWORD *)v24 = v7;
  *(_DWORD *)(v24 + 8) = a2;
  v25 = *(_QWORD *)(v23 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (!v26)
  {
    *(_QWORD *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_31:
  result = sub_1A594CDEC();
  __break(1u);
  return result;
}

uint64_t sub_1A557B8AC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  unsigned __int8 *v17;
  uint64_t v18;
  unsigned __int8 *v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0)
    goto LABEL_28;
  if ((a4 & 1) != 0)
  {
    sub_1A5579DA4();
  }
  else
  {
    if (v9 > v8)
    {
      result = (uint64_t)sub_1A557D498();
      goto LABEL_28;
    }
    sub_1A557E8A8();
  }
  v10 = *v4;
  sub_1A594CE64();
  sub_1A594CE88();
  result = sub_1A594CED0();
  v11 = -1 << *(_BYTE *)(v10 + 32);
  a3 = result & ~v11;
  if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v12 = ~v11;
    while (1)
    {
      v13 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * a3);
      if (v13[1] == a2)
      {
        v14 = *v13;
        v15 = *(_QWORD *)(v14 + 16);
        if (v15 == *(_QWORD *)(v7 + 16))
        {
          if (v15)
            v16 = v14 == v7;
          else
            v16 = 1;
          if (v16)
            goto LABEL_31;
          if (*(unsigned __int8 *)(v14 + 32) == *(unsigned __int8 *)(v7 + 32))
          {
            if (v15 == 1)
              goto LABEL_31;
            if (*(unsigned __int8 *)(v14 + 33) == *(unsigned __int8 *)(v7 + 33))
            {
              if (v15 == 2)
                goto LABEL_31;
              if (*(unsigned __int8 *)(v14 + 34) == *(unsigned __int8 *)(v7 + 34))
              {
                if (v15 == 3)
                  goto LABEL_31;
                if (*(unsigned __int8 *)(v14 + 35) == *(unsigned __int8 *)(v7 + 35))
                  break;
              }
            }
          }
        }
      }
LABEL_10:
      a3 = (a3 + 1) & v12;
      if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
        goto LABEL_28;
    }
    v17 = (unsigned __int8 *)(v14 + 36);
    v18 = v15 - 4;
    v19 = (unsigned __int8 *)(v7 + 36);
    while (v18)
    {
      v21 = *v17++;
      v20 = v21;
      v22 = *v19++;
      --v18;
      if (v20 != v22)
        goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_28:
  v23 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v24 = (uint64_t *)(*(_QWORD *)(v23 + 48) + 16 * a3);
  *v24 = v7;
  v24[1] = a2;
  v25 = *(_QWORD *)(v23 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (!v26)
  {
    *(_QWORD *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_31:
  result = sub_1A594CDEC();
  __break(1u);
  return result;
}

uint64_t sub_1A557BAA0(uint64_t a1, unint64_t a2, char a3)
{
  return sub_1A557BD08(a1, a2, a3, (uint64_t *)&unk_1EE79A6B8);
}

uint64_t sub_1A557BAB4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1A557A070();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1A557D648();
LABEL_22:
      v26 = *v5;
      *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
      v27 = (uint64_t *)(*(_QWORD *)(v26 + 48) + 16 * a3);
      *v27 = v8;
      v27[1] = a2;
      v28 = *(_QWORD *)(v26 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (!v29)
      {
        *(_QWORD *)(v26 + 16) = v30;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1A557EB44();
  }
  v11 = *v4;
  sub_1A594CE64();
  sub_1A594B4B4();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  result = sub_1A594CED0();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
    goto LABEL_22;
  v13 = sub_1A594B4B4();
  v15 = v14;
  if (v13 == sub_1A594B4B4() && v15 == v16)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v18 = sub_1A594CD38();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
    v19 = ~v12;
    do
    {
      a3 = (a3 + 1) & v19;
      if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
        goto LABEL_22;
      v20 = sub_1A594B4B4();
      v22 = v21;
      if (v20 == sub_1A594B4B4() && v22 == v23)
        goto LABEL_25;
      v25 = sub_1A594CD38();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v25 & 1) == 0);
  }
LABEL_26:
  result = sub_1A594CDEC();
  __break(1u);
  return result;
}

uint64_t sub_1A557BCF4(uint64_t a1, unint64_t a2, char a3)
{
  return sub_1A557BD08(a1, a2, a3, &qword_1EE79A700);
}

uint64_t sub_1A557BD08(uint64_t result, unint64_t a2, char a3, uint64_t *a4)
{
  uint64_t *v4;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v6 = result;
  v7 = *(_QWORD *)(*v4 + 16);
  v8 = *(_QWORD *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1A557B2B0(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1A557E234(a4);
      goto LABEL_14;
    }
    sub_1A557FC78(v9, a4);
  }
  v10 = *v4;
  sub_1A594CE64();
  sub_1A594CEAC();
  result = sub_1A594CED0();
  v11 = -1 << *(_BYTE *)(v10 + 32);
  a2 = result & ~v11;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v10 + 48);
    if (*(_DWORD *)(v12 + 4 * a2) == v6)
    {
LABEL_13:
      result = sub_1A594CDEC();
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_DWORD *)(v12 + 4 * a2) == v6)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(_QWORD *)(v14 + 48) + 4 * a2) = v6;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
  return result;
}

uint64_t sub_1A557BE60(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_1A557A368();
    }
    else
    {
      if (v10 > v9)
      {
        result = (uint64_t)sub_1A557D804();
        goto LABEL_22;
      }
      sub_1A557EE24();
    }
    v11 = *v4;
    sub_1A594CE64();
    sub_1A594CE88();
    if (a2)
    {
      sub_1A594B4B4();
      sub_1A594B1D8();
      swift_bridgeObjectRelease();
    }
    result = sub_1A594CED0();
    v12 = -1 << *(_BYTE *)(v11 + 32);
    a3 = result & ~v12;
    if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
    {
      v13 = ~v12;
      do
      {
        if (*(_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * a3 + 8))
        {
          if (a2)
          {
            v14 = sub_1A594B4B4();
            v16 = v15;
            if (v14 == sub_1A594B4B4() && v16 == v17)
              goto LABEL_25;
            v19 = sub_1A594CD38();
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
            if ((v19 & 1) != 0)
              goto LABEL_26;
          }
        }
        else if (!a2)
        {
          goto LABEL_26;
        }
        a3 = (a3 + 1) & v13;
      }
      while (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
LABEL_25:
    swift_bridgeObjectRelease_n();
LABEL_26:
    result = sub_1A594CDEC();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1A557C06C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1A557A67C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1A557D9B0();
      goto LABEL_14;
    }
    sub_1A557F120();
  }
  v8 = *v3;
  sub_1A594CE64();
  sub_1A594CE88();
  result = sub_1A594CED0();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      result = sub_1A594CDEC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v10 + a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1A557C1B8(uint64_t result, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t *v16;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 <= v8 || (a4 & 1) == 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_1A557A924();
    }
    else
    {
      if (v9 > v8)
      {
        result = (uint64_t)sub_1A557DB40();
        goto LABEL_10;
      }
      sub_1A557F398();
    }
    v10 = *v4;
    sub_1A594CE64();
    sub_1A54E42B4(v7, a2);
    sub_1A5949F9C();
    sub_1A54E46E8(v7, a2);
    result = sub_1A594CED0();
    a3 = result & ~(-1 << *(_BYTE *)(v10 + 32));
    if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
      __asm { BR              X8 }
  }
LABEL_10:
  v11 = *v16;
  *(_QWORD *)(*v16 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v12 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * a3);
  *v12 = v7;
  v12[1] = a2;
  v13 = *(_QWORD *)(v11 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
    JUMPOUT(0x1A557C698);
  }
  *(_QWORD *)(v11 + 16) = v15;
  return result;
}

void *sub_1A557C704(void *result, unint64_t a2, char a3)
{
  uint64_t v3;
  void *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;

  v5 = result;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1A557AC18();
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_1A557F660();
LABEL_8:
      sub_1A594CE64();
      swift_beginAccess();
      __asm { BR              X10 }
    }
    result = sub_1A557DCF0();
  }
  v8 = *v12;
  *(_QWORD *)(*v12 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * a2) = v5;
  v9 = *(_QWORD *)(v8 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x1A557CC1CLL);
  }
  *(_QWORD *)(v8 + 16) = v11;
  return result;
}

uint64_t sub_1A557CC50(uint64_t a1, unint64_t a2, char a3)
{
  return sub_1A557BD08(a1, a2, a3, &qword_1EE79A710);
}

uint64_t sub_1A557CC64(uint64_t a1, unint64_t a2, char a3)
{
  return sub_1A557BD08(a1, a2, a3, &qword_1EE79A718);
}

void *sub_1A557CC78(void *result, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  uint64_t v5;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v17;
  void *v18;

  v7 = result;
  v8 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  v9 = *(_QWORD *)(*(_QWORD *)v5 + 24);
  if (v9 <= v8 || (a5 & 1) == 0)
  {
    v17 = a2;
    v18 = result;
    if ((a5 & 1) != 0)
    {
      sub_1A557B0DC();
      goto LABEL_8;
    }
    if (v9 <= v8)
    {
      sub_1A557FAAC();
LABEL_8:
      sub_1A594CE64();
      __asm { BR              X9 }
    }
    result = sub_1A557E078();
    a2 = v17;
    v7 = v18;
  }
  v10 = *v15;
  *(_QWORD *)(*v15 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v11 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 24 * a4);
  *v11 = v7;
  v11[1] = a2;
  v11[2] = a3;
  v12 = *(_QWORD *)(v10 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
    JUMPOUT(0x1A557D120);
  }
  *(_QWORD *)(v10 + 16) = v14;
  return result;
}

uint64_t sub_1A557D150(uint64_t a1, unint64_t a2, char a3)
{
  return sub_1A557BD08(a1, a2, a3, &qword_1EE7A1010);
}

uint64_t sub_1A557D164(uint64_t a1, unint64_t a2, char a3)
{
  return sub_1A557BD08(a1, a2, a3, &qword_1EE7A8AC8);
}

void *sub_1A557D178()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796178);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v13)
      goto LABEL_26;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_26;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
        break;
    }
LABEL_25:
    v19 = __clz(__rbit64(v17));
    v12 = (v17 - 1) & v17;
    v15 = v19 + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 2;
  if (v18 >= v13)
    goto LABEL_26;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A557D2F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796160);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    v19 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v19 = v18;
    *(_DWORD *)(v19 + 8) = v17;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A557D498()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796180);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_28;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
      {
        v9 = v21 + 2;
        if (v21 + 2 >= v13)
          goto LABEL_28;
        v22 = *(_QWORD *)(v6 + 8 * v9);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v18;
    v20[1] = v19;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v23 = v21 + 3;
  if (v23 >= v13)
    goto LABEL_28;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A557D648()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A690);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A557D7F8()
{
  return sub_1A557E234(&qword_1EE79A700);
}

void *sub_1A557D804()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8AC0);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A557D9B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6B0);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A557DB40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A720);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_1A54E42B4(v17, *((unint64_t *)&v17 + 1));
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A557DCF0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6A8);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A557DE98()
{
  return sub_1A557E234(&qword_1EE79A710);
}

void *sub_1A557DEA4()
{
  return sub_1A557E234(&qword_1EE79A718);
}

void *sub_1A557DEB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[3];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8AB8);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 48 * v15;
    result = (void *)sub_1A55530FC(*(_QWORD *)(v2 + 48) + 48 * v15, (uint64_t)v23);
    v17 = (_OWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v18 = v23[0];
    v19 = v23[2];
    v17[1] = v23[1];
    v17[2] = v19;
    *v17 = v18;
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A557E078()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6A0);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = v17[2];
    v21 = (uint64_t *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v19;
    v21[2] = v20;
    result = (void *)sub_1A54FA300(v18, v19);
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A557E234(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName_0(a1);
  v3 = *v1;
  v4 = sub_1A594C6C0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v16) = *(_DWORD *)(*(_QWORD *)(v3 + 48) + 4 * v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A557E3C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796178);
  result = sub_1A594C6CC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_33:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v15 >= v10)
      goto LABEL_31;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_31;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
        break;
    }
LABEL_21:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_22:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 2;
  if (v17 >= v10)
  {
LABEL_31:
    result = swift_release();
    v1 = v0;
    goto LABEL_33;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_31;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_21;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1A557E624()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796160);
  result = sub_1A594C6CC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_33:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v28 = (unint64_t)(v7 + 63) >> 6;
  v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v15 >= v28)
      goto LABEL_31;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v28)
        goto LABEL_31;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
        break;
    }
LABEL_21:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_22:
    v18 = *(_QWORD *)(v2 + 48) + 16 * v14;
    v19 = *(_QWORD *)v18;
    v20 = *(_DWORD *)(v18 + 8);
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 16 * v11;
    *(_QWORD *)v12 = v19;
    *(_DWORD *)(v12 + 8) = v20;
    ++*(_QWORD *)(v4 + 16);
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v17 = v15 + 2;
  if (v17 >= v28)
  {
LABEL_31:
    result = swift_release();
    v1 = v0;
    goto LABEL_33;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v28)
      goto LABEL_31;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_21;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1A557E8A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796180);
  result = sub_1A594C6CC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v28 = (unint64_t)(v7 + 63) >> 6;
  v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v28)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v28)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v28)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
    v19 = *v18;
    v20 = v18[1];
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v11);
    *v12 = v19;
    v12[1] = v20;
    ++*(_QWORD *)(v4 + 16);
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v28)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A557EB44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A690);
  v3 = sub_1A594C6CC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v29)
      goto LABEL_33;
    v16 = *(_QWORD *)(v28 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v29)
        goto LABEL_33;
      v16 = *(_QWORD *)(v28 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v29)
          goto LABEL_33;
        v16 = *(_QWORD *)(v28 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
    v19 = *v18;
    v20 = v18[1];
    sub_1A594CE64();
    sub_1A594B4B4();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    swift_bridgeObjectRelease();
    result = sub_1A594CED0();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v8 + 8 * v23);
      }
      while (v27 == -1);
      v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v11);
    *v12 = v19;
    v12[1] = v20;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v28 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v29)
      goto LABEL_33;
    v16 = *(_QWORD *)(v28 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A557EE24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8AC0);
  v3 = sub_1A594C6CC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v29)
      goto LABEL_35;
    v16 = *(_QWORD *)(v28 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v29)
        goto LABEL_35;
      v16 = *(_QWORD *)(v28 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v29)
          goto LABEL_35;
        v16 = *(_QWORD *)(v28 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    sub_1A594CE64();
    sub_1A594CE88();
    if (v19)
    {
      sub_1A594B4B4();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594B1D8();
      swift_bridgeObjectRelease();
    }
    result = sub_1A594CED0();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v8 + 8 * v23);
      }
      while (v27 == -1);
      v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v11);
    *v12 = v20;
    v12[1] = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v29)
  {
LABEL_35:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_37;
  }
  v16 = *(_QWORD *)(v28 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v29)
      goto LABEL_35;
    v16 = *(_QWORD *)(v28 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1A557F120()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6B0);
  result = sub_1A594C6CC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A557F398()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A720);
  v3 = sub_1A594C6CC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1A594CE64();
    sub_1A54E42B4(v20, v21);
    sub_1A54E42B4(v20, v21);
    sub_1A5949F9C();
    sub_1A54E46E8(v20, v21);
    result = sub_1A594CED0();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1A557F660()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6A8);
  v3 = sub_1A594C6CC();
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_23:
    swift_release();
    *v1 = v3;
    return;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_6;
    }
    v11 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_22;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v9;
    if (!v12)
    {
      v9 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_22;
      v12 = *(_QWORD *)(v5 + 8 * v9);
      if (!v12)
      {
        v9 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_22;
        v12 = *(_QWORD *)(v5 + 8 * v9);
        if (!v12)
          break;
      }
    }
LABEL_21:
    v7 = (v12 - 1) & v12;
LABEL_6:
    v10 = swift_retain();
    sub_1A54F47AC(v10);
  }
  v13 = v11 + 3;
  if (v13 >= v8)
  {
LABEL_22:
    swift_release();
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v9 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v9 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v9 >= v8)
      goto LABEL_22;
    v12 = *(_QWORD *)(v5 + 8 * v9);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1A557F7F0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  _OWORD v28[3];

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8AB8);
  v2 = sub_1A594C6CC();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v5 = v1 + 56;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v1 + 56);
  v27 = (unint64_t)(v4 + 63) >> 6;
  v8 = v2 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v15 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_24;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v27)
      goto LABEL_33;
    v18 = *(_QWORD *)(v5 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v27)
        goto LABEL_33;
      v18 = *(_QWORD *)(v5 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v27)
          goto LABEL_33;
        v18 = *(_QWORD *)(v5 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_23:
    v7 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_24:
    sub_1A55530FC(*(_QWORD *)(v1 + 48) + 48 * v16, (uint64_t)v28);
    sub_1A594CE64();
    sub_1A594C6A8();
    result = sub_1A594CED0();
    v20 = -1 << *(_BYTE *)(v3 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_OWORD *)(*(_QWORD *)(v3 + 48) + 48 * v11);
    v13 = v28[0];
    v14 = v28[2];
    v12[1] = v28[1];
    v12[2] = v14;
    *v12 = v13;
    ++*(_QWORD *)(v3 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v27)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v5 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v27)
      goto LABEL_33;
    v18 = *(_QWORD *)(v5 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1A557FAAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6A0);
  v3 = sub_1A594C6CC();
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_23:
    swift_release();
    *v1 = v3;
    return;
  }
  v18 = v1;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_6;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v8)
      goto LABEL_22;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v8)
        goto LABEL_22;
      v16 = *(_QWORD *)(v5 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v8)
          goto LABEL_22;
        v16 = *(_QWORD *)(v5 + 8 * v9);
        if (!v16)
          break;
      }
    }
LABEL_21:
    v7 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_6:
    v12 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 24 * v11);
    v13 = *v12;
    v14 = v12[1];
    sub_1A54FA300(*v12, v14);
    sub_1A54F4960(v13, v14);
  }
  v17 = v15 + 3;
  if (v17 >= v8)
  {
LABEL_22:
    swift_release();
    v1 = v18;
    goto LABEL_23;
  }
  v16 = *(_QWORD *)(v5 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v8)
      goto LABEL_22;
    v16 = *(_QWORD *)(v5 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1A557FC78(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(a2);
  result = sub_1A594C6CC();
  v6 = result;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v7 = 0;
  v8 = v4 + 56;
  v9 = 1 << *(_BYTE *)(v4 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_33;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_33;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_23:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    v20 = *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v16);
    sub_1A594CE64();
    sub_1A594CEAC();
    result = sub_1A594CED0();
    v21 = -1 << *(_BYTE *)(v6 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_DWORD *)(*(_QWORD *)(v6 + 48) + 4 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    result = swift_release();
    v3 = v2;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A557FEEC(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  int v13;
  int v14;

  if (!a4)
    return 0;
  result = 0;
  while (1)
  {
    v6 = (uint64_t *)(a3 + 16 * result);
    if ((*((unsigned int *)v6 + 2) | ((unint64_t)*((unsigned int *)v6 + 2) << 32)) == (a2 | ((unint64_t)a2 << 32)))
    {
      v7 = *v6;
      v8 = *(_QWORD *)(v7 + 16);
      if (v8 == *(_QWORD *)(a1 + 16))
      {
        if (!v8 || v7 == a1)
          return result;
        if (*(unsigned __int8 *)(v7 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v8 == 1)
            return result;
          if (*(unsigned __int8 *)(v7 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v8 == 2)
              return result;
            if (*(unsigned __int8 *)(v7 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v8 == 3)
                return result;
              if (*(unsigned __int8 *)(v7 + 35) == *(unsigned __int8 *)(a1 + 35))
                break;
            }
          }
        }
      }
    }
LABEL_3:
    if (++result == a4)
      return 0;
  }
  v9 = (unsigned __int8 *)(v7 + 36);
  v10 = v8 - 4;
  v11 = (unsigned __int8 *)(a1 + 36);
  while (v10)
  {
    v13 = *v9++;
    v12 = v13;
    v14 = *v11++;
    --v10;
    if (v12 != v14)
      goto LABEL_3;
  }
  return result;
}

uint64_t sub_1A557FFE0(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t result;
  char v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  int v18;
  int v19;
  int v20;

  sub_1A594CE64();
  sub_1A594CE88();
  result = sub_1A594CED0();
  if (__OFSUB__(1 << *a5, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1A594A3D4();
    result = sub_1A594A3F8();
    if ((v10 & 1) == 0)
    {
      while (1)
      {
        v12 = (uint64_t *)(a3 + 16 * result);
        if ((*((unsigned int *)v12 + 2) | ((unint64_t)*((unsigned int *)v12 + 2) << 32)) == (a2 | ((unint64_t)a2 << 32)))
        {
          v13 = *v12;
          v14 = *(_QWORD *)(v13 + 16);
          if (v14 == *(_QWORD *)(a1 + 16))
          {
            if (!v14 || v13 == a1)
              return result;
            if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a1 + 32))
            {
              if (v14 == 1)
                return result;
              if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a1 + 33))
              {
                if (v14 == 2)
                  return result;
                if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a1 + 34))
                {
                  if (v14 == 3)
                    return result;
                  if (*(unsigned __int8 *)(v13 + 35) == *(unsigned __int8 *)(a1 + 35))
                    break;
                }
              }
            }
          }
        }
LABEL_4:
        sub_1A594A410();
        result = sub_1A594A3F8();
        if ((v11 & 1) != 0)
          return result;
      }
      v15 = (unsigned __int8 *)(v13 + 36);
      v16 = v14 - 4;
      v17 = (unsigned __int8 *)(a1 + 36);
      while (v16)
      {
        v19 = *v15++;
        v18 = v19;
        v20 = *v17++;
        --v16;
        if (v18 != v20)
          goto LABEL_4;
      }
    }
  }
  return result;
}

uint64_t sub_1A55801B8(int a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  char v8;
  char v9;

  sub_1A594CE64();
  sub_1A594CEAC();
  result = sub_1A594CED0();
  if (__OFSUB__(1 << *a4, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1A594A3D4();
    result = sub_1A594A3F8();
    if ((v8 & 1) == 0 && *(_DWORD *)(a2 + 4 * result) != a1)
    {
      do
      {
        sub_1A594A410();
        result = sub_1A594A3F8();
      }
      while ((v9 & 1) == 0 && *(_DWORD *)(a2 + 4 * result) != a1);
    }
  }
  return result;
}

uint64_t sub_1A55802EC(unint64_t *a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v5 = type metadata accessor for RunningTask();
  v6 = MEMORY[0x1E0C80A78](v5);
  v33 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v32 = (uint64_t)&v30 - v9;
  MEMORY[0x1E0C80A78](v8);
  v34 = (uint64_t)&v30 - v11;
  v12 = *a1;
  v13 = *(_QWORD *)(*a1 + 16);
  if (!v13)
  {
    v16 = 0;
    goto LABEL_11;
  }
  v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v10 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v16 = 0;
  v31 = v14;
  while (1)
  {
    v17 = sub_1A559EDCC(v12 + v14, a2);
    if (v2)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((v17 & 1) != 0)
      break;
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(v12 + 16);
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  if (__OFADD__(v16, 1))
  {
LABEL_38:
    __break(1u);
    return result;
  }
  v19 = *(_QWORD *)(v12 + 16);
  if (v16 + 1 != v19)
  {
    v20 = v15 + v14;
    v21 = v16 + 1;
    v30 = a1;
    while (v21 < v19)
    {
      v36 = v21;
      v22 = a1;
      v35 = v20;
      v23 = v34;
      sub_1A55034B8(v12 + v20, v34, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      v24 = sub_1A559EDCC(v23, a2);
      result = sub_1A55034FC(v23, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      if ((v24 & 1) != 0)
      {
        a1 = v22;
        v25 = v36;
      }
      else
      {
        v25 = v36;
        a1 = v22;
        if (v36 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v26 = *v22;
          v27 = *(_QWORD *)(*v22 + 16);
          if (v16 >= v27)
            goto LABEL_34;
          result = sub_1A55034B8(v26 + v31 + v16 * v15, v32, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
          if (v36 >= v27)
            goto LABEL_35;
          sub_1A55034B8(v26 + v35, v33, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
          result = swift_isUniquelyReferenced_nonNull_native();
          a1 = v30;
          *v30 = v26;
          if ((result & 1) == 0)
          {
            result = sub_1A554B70C(v26);
            v26 = result;
            *a1 = result;
          }
          if (v16 >= *(_QWORD *)(v26 + 16))
            goto LABEL_36;
          result = sub_1A558DFE0(v33, v26 + v31 + v16 * v15);
          if (v36 >= *(_QWORD *)(*a1 + 16))
            goto LABEL_37;
          result = sub_1A558DFE0(v32, *a1 + v35);
          v25 = v36;
        }
        if (__OFADD__(v16++, 1))
          goto LABEL_32;
      }
      v29 = v25 + 1;
      if (__OFADD__(v25, 1))
        goto LABEL_31;
      v12 = *a1;
      v19 = *(_QWORD *)(*a1 + 16);
      v21 = v25 + 1;
      v20 = v35 + v15;
      if (v29 == v19)
        goto LABEL_11;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_11:
  swift_release();
  return v16;
}

uint64_t sub_1A5580630(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  char v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  char v42;
  __int128 v43;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABC0);
  v42 = a2;
  v6 = sub_1A594CA50();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_33;
      v24 = v40[v13];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v24 = v40[v13];
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v31 = *(_QWORD *)(v5 + 56) + 24 * v21;
    v32 = *(_DWORD *)v31;
    v33 = *(_QWORD *)(v31 + 8);
    v34 = *(_BYTE *)(v31 + 16);
    v35 = *(_BYTE *)(v31 + 17);
    v43 = v30;
    v36 = *((_QWORD *)&v30 + 1);
    if ((v42 & 1) == 0)
      sub_1A54E42B4(v30, *((unint64_t *)&v30 + 1));
    sub_1A594CE64();
    sub_1A54E42B4(v43, v36);
    sub_1A5949F9C();
    sub_1A54E46E8(v43, v36);
    result = sub_1A594CED0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      v18 = v43;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      v18 = v43;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_OWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17) = v18;
    v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
    *(_DWORD *)v19 = v32;
    *(_QWORD *)(v19 + 8) = v33;
    *(_BYTE *)(v19 + 16) = v34;
    *(_BYTE *)(v19 + 17) = v35;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A558099C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  int64_t v34;
  _QWORD *v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8828);
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v8 = 0;
    v35 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v34)
          goto LABEL_31;
        v18 = v35[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v34)
            goto LABEL_31;
          v18 = v35[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v34)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v35 = -1 << v32;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v35[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v34)
                  goto LABEL_31;
                v18 = v35[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_QWORD *)(v5 + 56) + 16 * v16;
      v21 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v16);
      v22 = *(_BYTE *)(v20 + 9);
      v23 = *(_BYTE *)(v20 + 8);
      v24 = *(_QWORD *)v20;
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v13) = v21;
      v14 = *(_QWORD *)(v7 + 56) + 16 * v13;
      *(_QWORD *)v14 = v24;
      *(_BYTE *)(v14 + 8) = v23;
      *(_BYTE *)(v14 + 9) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1A5580C80(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  char v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABB0);
  v34 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_33;
        v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_33;
          v21 = v33[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v32)
                  goto LABEL_33;
                v21 = v33[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v19);
      v29 = *v27;
      v28 = v27[1];
      v30 = *(_WORD *)(*(_QWORD *)(v5 + 56) + 2 * v19);
      if ((v34 & 1) == 0)
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v16);
      *v17 = v29;
      v17[1] = v28;
      *(_WORD *)(*(_QWORD *)(v7 + 56) + 2 * v16) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A5580F64(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  char v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8868);
  v39 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v38 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v21 = v20 | (v8 << 6);
      }
      else
      {
        v22 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v8;
        if (!v23)
        {
          v8 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v8];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v36 = 1 << *(_BYTE *)(v5 + 32);
              if (v36 >= 64)
                bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v38 = -1 << v36;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v8 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v8 >= v37)
                  goto LABEL_33;
                v23 = v38[v8];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v8 = v24;
          }
        }
LABEL_30:
        v11 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v8 << 6);
      }
      v29 = 16 * v21;
      v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v29);
      v32 = *v30;
      v31 = v30[1];
      v33 = *(_QWORD *)(v5 + 56) + v29;
      v34 = *(_QWORD *)v33;
      v35 = *(_DWORD *)(v33 + 8);
      if ((v39 & 1) == 0)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v15 == v26;
          if (v15 == v26)
            v15 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v28 == -1);
        v16 = __clz(__rbit64(~v28)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 16 * v16;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v17);
      *v18 = v32;
      v18[1] = v31;
      v19 = *(_QWORD *)(v7 + 56) + v17;
      *(_QWORD *)v19 = v34;
      *(_DWORD *)(v19 + 8) = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A5581268(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;
  char v33;

  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8878);
  v33 = a2;
  result = sub_1A594CA50();
  v6 = result;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 0;
    v32 = (_QWORD *)(v4 + 64);
    v8 = 1 << *(_BYTE *)(v4 + 32);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 64);
    v31 = (unint64_t)(v8 + 63) >> 6;
    v11 = result + 64;
    while (1)
    {
      if (v10)
      {
        v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v18 = v17 | (v7 << 6);
      }
      else
      {
        v19 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v4 + 64;
        if (v19 >= v31)
          goto LABEL_33;
        v20 = v32[v19];
        ++v7;
        if (!v20)
        {
          v7 = v19 + 1;
          if (v19 + 1 >= v31)
            goto LABEL_33;
          v20 = v32[v7];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v31)
            {
LABEL_33:
              if ((v33 & 1) != 0)
              {
                v30 = 1 << *(_BYTE *)(v4 + 32);
                if (v30 >= 64)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v4 + 16) = 0;
              }
              break;
            }
            v20 = v32[v21];
            if (!v20)
            {
              while (1)
              {
                v7 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v7 >= v31)
                  goto LABEL_33;
                v20 = v32[v7];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v7 = v21;
          }
        }
LABEL_30:
        v10 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v7 << 6);
      }
      v26 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v18);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v18);
      if ((v33 & 1) == 0)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v12 = -1 << *(_BYTE *)(v6 + 32);
      v13 = result & ~v12;
      v14 = v13 >> 6;
      if (((-1 << v13) & ~*(_QWORD *)(v11 + 8 * (v13 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v11 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v12) >> 6;
        do
        {
          if (++v14 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v24 = v14 == v23;
          if (v14 == v23)
            v14 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v14);
        }
        while (v25 == -1);
        v15 = __clz(__rbit64(~v25)) + (v14 << 6);
      }
      *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v15);
      *v16 = v28;
      v16[1] = v27;
      *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v15) = v29;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v2 = v6;
  return result;
}

uint64_t sub_1A5581554(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  int v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8860);
  v39 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v37 = (_QWORD *)(v5 + 64);
    v38 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v21 >= v36)
          goto LABEL_33;
        v22 = v37[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v36)
            goto LABEL_33;
          v22 = v37[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_33:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v35 = 1 << *(_BYTE *)(v5 + 32);
              if (v35 >= 64)
                bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v35;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v36)
                  goto LABEL_33;
                v22 = v37[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v11 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
      v30 = *v28;
      v29 = v28[1];
      v31 = *(_QWORD *)(v5 + 56) + 32 * v20;
      v32 = *(_QWORD *)v31;
      v33 = *(_DWORD *)(v31 + 8);
      v34 = *(_QWORD *)(v31 + 16);
      v40 = *(_DWORD *)(v31 + 24);
      if ((v39 & 1) == 0)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v15 == v25;
          if (v15 == v25)
            v15 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v27 == -1);
        v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v16);
      *v17 = v30;
      v17[1] = v29;
      v18 = *(_QWORD *)(v7 + 56) + 32 * v16;
      *(_QWORD *)v18 = v32;
      *(_DWORD *)(v18 + 8) = v33;
      *(_QWORD *)(v18 + 16) = v34;
      *(_DWORD *)(v18 + 24) = v40;
      ++*(_QWORD *)(v7 + 16);
      v5 = v38;
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A5581878(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  __int128 v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  int v48;
  int v49;
  uint64_t v50;
  __int128 v51;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79AB28);
  v41 = a2;
  result = sub_1A594CA50();
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v39 = (_QWORD *)(v5 + 64);
    v40 = v5;
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v38 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v22 >= v38)
          goto LABEL_33;
        v23 = v39[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_33;
          v23 = v39[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v41 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v37 = 1 << *(_BYTE *)(v5 + 32);
              if (v37 >= 64)
                bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v37;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v9 >= v38)
                  goto LABEL_33;
                v23 = v39[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(_QWORD *)(v5 + 56);
      v30 = *(_QWORD *)(v5 + 48) + 16 * v21;
      v31 = *(_QWORD *)v30;
      v32 = *(_DWORD *)(v30 + 8);
      v33 = (uint64_t *)(v29 + 96 * v21);
      v34 = *v33;
      v50 = v33[1];
      v35 = v33[2];
      v48 = *((_DWORD *)v33 + 8);
      v49 = *((_DWORD *)v33 + 6);
      v47 = *((_BYTE *)v33 + 36);
      v46 = v33[5];
      v45 = *((_BYTE *)v33 + 48);
      v44 = v33[7];
      v36 = v33[9];
      *(_QWORD *)&v7 = v33[10];
      v51 = v7;
      v42 = *((_BYTE *)v33 + 88);
      v43 = *((_BYTE *)v33 + 64);
      if ((v41 & 1) == 0)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54E31DC(v36);
      }
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = *(_QWORD *)(v8 + 48) + 16 * v17;
      *(_QWORD *)v18 = v31;
      *(_DWORD *)(v18 + 8) = v32;
      v19 = *(_QWORD *)(v8 + 56) + 96 * v17;
      *(_QWORD *)v19 = v34;
      *(_QWORD *)(v19 + 8) = v50;
      *(_QWORD *)(v19 + 16) = v35;
      *(_DWORD *)(v19 + 24) = v49;
      *(_DWORD *)(v19 + 32) = v48;
      *(_BYTE *)(v19 + 36) = v47;
      *(_QWORD *)(v19 + 40) = v46;
      *(_BYTE *)(v19 + 48) = v45;
      *(_QWORD *)(v19 + 56) = v44;
      *(_BYTE *)(v19 + 64) = v43;
      *(_QWORD *)(v19 + 72) = v36;
      *((_QWORD *)&v7 + 1) = *((_QWORD *)&v51 + 1);
      *(_QWORD *)(v19 + 80) = v51;
      *(_BYTE *)(v19 + 88) = v42;
      ++*(_QWORD *)(v8 + 16);
      v5 = v40;
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v8;
  return result;
}

uint64_t sub_1A5581C3C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  char v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABA8);
  v34 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_33;
        v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_33;
          v21 = v33[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v32)
                  goto LABEL_33;
                v21 = v33[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v19);
      v28 = *(_QWORD *)(v5 + 56) + 16 * v19;
      v29 = *(_BYTE *)v28;
      v30 = *(_QWORD *)(v28 + 8);
      if ((v34 & 1) == 0)
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 16 * v16;
      *(_BYTE *)v17 = v29;
      *(_QWORD *)(v17 + 8) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A5581F28(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB80);
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = a2;
    v8 = 0;
    v36 = (_QWORD *)(v5 + 64);
    v37 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = (uint64_t)v36;
        if (v17 >= v35)
          goto LABEL_31;
        v18 = v36[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v35)
            goto LABEL_31;
          v18 = v36[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v35)
            {
LABEL_31:
              if ((v34 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v33 = 1 << *(_BYTE *)(v5 + 32);
              if (v33 >= 64)
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v36 = -1 << v33;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v36[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v35)
                  goto LABEL_31;
                v18 = v36[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v16);
      v21 = *(_QWORD *)(v5 + 56) + 24 * v16;
      v22 = *(_BYTE *)(v21 + 17);
      v23 = *(_BYTE *)(v21 + 16);
      v24 = *(_QWORD *)(v21 + 8);
      v25 = *(_DWORD *)v21;
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      v26 = -1 << *(_BYTE *)(v7 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v13 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v13) = v20;
      v14 = *(_QWORD *)(v7 + 56) + 24 * v13;
      *(_DWORD *)v14 = v25;
      *(_QWORD *)(v14 + 8) = v24;
      *(_BYTE *)(v14 + 16) = v23;
      *(_BYTE *)(v14 + 17) = v22;
      ++*(_QWORD *)(v7 + 16);
      v5 = v37;
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1A5582220(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t *v32;
  uint64_t v33;
  int v34;
  char v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  char v44;
  __int16 v45;
  __int128 v46;
  __int128 v47;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7961E8);
  v40 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v38 = (_QWORD *)(v5 + 64);
    v39 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v38;
        if (v21 >= v37)
          goto LABEL_33;
        v22 = v38[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v37)
            goto LABEL_33;
          v22 = v38[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_33:
              if ((v40 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v36 = 1 << *(_BYTE *)(v5 + 32);
              if (v36 >= 64)
                bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v38 = -1 << v36;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v37)
                  goto LABEL_33;
                v22 = v38[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v11 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = *(_QWORD *)(v5 + 56);
      v29 = *(_QWORD *)(v5 + 48) + 16 * v20;
      v30 = *(_QWORD *)v29;
      v31 = *(_DWORD *)(v29 + 8);
      v32 = (uint64_t *)(v28 + 72 * v20);
      v33 = *v32;
      v34 = *((_DWORD *)v32 + 2);
      v35 = *((_BYTE *)v32 + 12);
      v44 = *((_BYTE *)v32 + 16);
      v45 = *((_WORD *)v32 + 7);
      v46 = *(_OWORD *)(v32 + 5);
      v47 = *(_OWORD *)(v32 + 3);
      v43 = v32[7];
      v41 = *((_BYTE *)v32 + 65);
      v42 = *((_BYTE *)v32 + 64);
      if ((v40 & 1) == 0)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v15 == v25;
          if (v15 == v25)
            v15 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v27 == -1);
        v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = *(_QWORD *)(v7 + 48) + 16 * v16;
      *(_QWORD *)v17 = v30;
      *(_DWORD *)(v17 + 8) = v31;
      v18 = *(_QWORD *)(v7 + 56) + 72 * v16;
      *(_QWORD *)v18 = v33;
      *(_DWORD *)(v18 + 8) = v34;
      *(_BYTE *)(v18 + 12) = v35;
      *(_WORD *)(v18 + 14) = v45;
      *(_BYTE *)(v18 + 16) = v44;
      *(_OWORD *)(v18 + 24) = v47;
      *(_OWORD *)(v18 + 40) = v46;
      *(_QWORD *)(v18 + 56) = v43;
      *(_BYTE *)(v18 + 64) = v42;
      *(_BYTE *)(v18 + 65) = v41;
      ++*(_QWORD *)(v7 + 16);
      v5 = v39;
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A55825A0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  char v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8710);
  v34 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_33;
        v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_33;
          v21 = v33[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v32)
                  goto LABEL_33;
                v21 = v33[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(v5 + 48) + 16 * v19;
      v28 = *(_QWORD *)v27;
      v29 = *(_DWORD *)(v27 + 8);
      v30 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v19);
      if ((v34 & 1) == 0)
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = *(_QWORD *)(v7 + 48) + 16 * v16;
      *(_QWORD *)v17 = v28;
      *(_DWORD *)(v17 + 8) = v29;
      *(_BYTE *)(*(_QWORD *)(v7 + 56) + v16) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A5582888(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A10B0);
  v40 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v38 = (_QWORD *)(v5 + 64);
    v39 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v38;
        if (v21 >= v37)
          goto LABEL_33;
        v22 = v38[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v37)
            goto LABEL_33;
          v22 = v38[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_33:
              if ((v40 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v36 = 1 << *(_BYTE *)(v5 + 32);
              if (v36 >= 64)
                bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v38 = -1 << v36;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v37)
                  goto LABEL_33;
                v22 = v38[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v11 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = *(_QWORD *)(v5 + 48) + 16 * v20;
      v29 = *(_QWORD *)v28;
      v30 = *(_DWORD *)(v28 + 8);
      v31 = *(_QWORD *)(v5 + 56) + 48 * v20;
      v32 = *(_QWORD *)v31;
      v33 = *(_QWORD *)(v31 + 8);
      v42 = *(_QWORD *)(v31 + 16);
      v34 = *(_BYTE *)(v31 + 24);
      v35 = *(_QWORD *)(v31 + 32);
      v41 = *(_BYTE *)(v31 + 40);
      if ((v40 & 1) == 0)
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v15 == v25;
          if (v15 == v25)
            v15 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v27 == -1);
        v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = *(_QWORD *)(v7 + 48) + 16 * v16;
      *(_QWORD *)v17 = v29;
      *(_DWORD *)(v17 + 8) = v30;
      v18 = *(_QWORD *)(v7 + 56) + 48 * v16;
      *(_QWORD *)v18 = v32;
      *(_QWORD *)(v18 + 8) = v33;
      *(_QWORD *)(v18 + 16) = v42;
      *(_BYTE *)(v18 + 24) = v34;
      *(_QWORD *)(v18 + 32) = v35;
      *(_BYTE *)(v18 + 40) = v41;
      ++*(_QWORD *)(v7 + 16);
      v5 = v39;
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A5582BC8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  char v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB50);
  v34 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_33;
        v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_33;
          v21 = v33[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v32)
                  goto LABEL_33;
                v21 = v33[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(v5 + 48) + 16 * v19;
      v28 = *(_QWORD *)v27;
      v29 = *(_DWORD *)(v27 + 8);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
      if ((v34 & 1) == 0)
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = *(_QWORD *)(v7 + 48) + 16 * v16;
      *(_QWORD *)v17 = v28;
      *(_DWORD *)(v17 + 8) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A5582EB0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;
  char v33;
  __int128 v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7961F0);
  v33 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v32 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v31 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v31)
          goto LABEL_33;
        v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v31)
            goto LABEL_33;
          v21 = v32[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v32 = -1 << v30;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v31)
                  goto LABEL_33;
                v21 = v32[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v19);
      v28 = *(_QWORD *)(v5 + 56) + 24 * v19;
      v29 = *(_BYTE *)v28;
      v34 = *(_OWORD *)(v28 + 8);
      if ((v33 & 1) == 0)
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 24 * v16;
      *(_BYTE *)v17 = v29;
      *(_OWORD *)(v17 + 8) = v34;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A55831A8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABD8);
  v37 = a2;
  v6 = sub_1A594CA50();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594CE64();
    sub_1A594B1D8();
    result = sub_1A594CED0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A55834B0(uint64_t a1, char a2)
{
  return sub_1A55834C8(a1, a2, &qword_1EE7A1388);
}

uint64_t sub_1A55834BC(uint64_t a1, char a2)
{
  return sub_1A55834C8(a1, a2, &qword_1EE7A10E8);
}

uint64_t sub_1A55834C8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName_0(a3);
  v37 = a2;
  v7 = sub_1A594CA50();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    sub_1A594CE64();
    sub_1A594B1D8();
    result = sub_1A594CED0();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1A55837D8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  char v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A10D0);
  v39 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v37 = (_QWORD *)(v5 + 64);
    v38 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v21 >= v36)
          goto LABEL_33;
        v22 = v37[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v36)
            goto LABEL_33;
          v22 = v37[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_33:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v35 = 1 << *(_BYTE *)(v5 + 32);
              if (v35 >= 64)
                bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v35;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v36)
                  goto LABEL_33;
                v22 = v37[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v11 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
      v30 = *v28;
      v29 = v28[1];
      v31 = *(_QWORD *)(v5 + 56) + 24 * v20;
      v32 = *(_DWORD *)v31;
      v33 = *(_BYTE *)(v31 + 4);
      v34 = *(_QWORD *)(v31 + 8);
      v40 = *(_BYTE *)(v31 + 16);
      if ((v39 & 1) == 0)
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v15 == v25;
          if (v15 == v25)
            v15 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v27 == -1);
        v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v16);
      *v17 = v30;
      v17[1] = v29;
      v18 = *(_QWORD *)(v7 + 56) + 24 * v16;
      *(_DWORD *)v18 = v32;
      *(_BYTE *)(v18 + 4) = v33;
      *(_QWORD *)(v18 + 8) = v34;
      *(_BYTE *)(v18 + 16) = v40;
      ++*(_QWORD *)(v7 + 16);
      v5 = v38;
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A5583AF4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB40);
  v42 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v40 = (_QWORD *)(v5 + 64);
    v41 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v39 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v21 = v20 | (v8 << 6);
      }
      else
      {
        v22 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v40;
        if (v22 >= v39)
          goto LABEL_33;
        v23 = v40[v22];
        ++v8;
        if (!v23)
        {
          v8 = v22 + 1;
          if (v22 + 1 >= v39)
            goto LABEL_33;
          v23 = v40[v8];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_33:
              if ((v42 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v38 = 1 << *(_BYTE *)(v5 + 32);
              if (v38 >= 64)
                bzero(v40, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v40 = -1 << v38;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                v8 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v8 >= v39)
                  goto LABEL_33;
                v23 = v40[v8];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v8 = v24;
          }
        }
LABEL_30:
        v11 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v8 << 6);
      }
      v29 = 16 * v21;
      v30 = *(_QWORD *)(v5 + 56);
      v31 = *(_QWORD *)(v5 + 48) + v29;
      v32 = *(_QWORD *)v31;
      v33 = *(_DWORD *)(v31 + 8);
      v34 = v30 + v29;
      v35 = *(_QWORD *)v34;
      v36 = *(unsigned int *)(v34 + 8);
      v37 = *(_BYTE *)(v34 + 12);
      if ((v42 & 1) == 0)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54E4334(v35, v36, v37);
      }
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v15 == v26;
          if (v15 == v26)
            v15 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v28 == -1);
        v16 = __clz(__rbit64(~v28)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 16 * v16;
      v18 = *(_QWORD *)(v7 + 48) + v17;
      *(_QWORD *)v18 = v32;
      *(_DWORD *)(v18 + 8) = v33;
      v19 = *(_QWORD *)(v7 + 56) + v17;
      *(_QWORD *)v19 = v35;
      *(_DWORD *)(v19 + 8) = v36;
      *(_BYTE *)(v19 + 12) = v37;
      ++*(_QWORD *)(v7 + 16);
      v5 = v41;
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A5583E18(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  char v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB48);
  v34 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_33;
        v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_33;
          v21 = v33[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v32)
                  goto LABEL_33;
                v21 = v33[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(v5 + 48) + 16 * v19;
      v28 = *(_QWORD *)v27;
      v29 = *(_DWORD *)(v27 + 8);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
      if ((v34 & 1) == 0)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = *(_QWORD *)(v7 + 48) + 16 * v16;
      *(_QWORD *)v17 = v28;
      *(_DWORD *)(v17 + 8) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A558410C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  char v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABB8);
  v34 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_33;
        v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_33;
          v21 = v33[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v32)
                  goto LABEL_33;
                v21 = v33[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v19);
      v29 = *v27;
      v28 = v27[1];
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
      if ((v34 & 1) == 0)
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v16);
      *v17 = v29;
      v17[1] = v28;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

void sub_1A55843F0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *v22;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB90);
  v6 = sub_1A594CA50();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v21 = v3;
    v22 = (_QWORD *)(v5 + 64);
    v8 = -1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    v9 = v8 & *(_QWORD *)(v5 + 64);
    v10 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v12 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v13 = v12 | (v11 << 6);
      }
      else
      {
        v14 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v14 >= v10)
          goto LABEL_22;
        v15 = v22[v14];
        ++v11;
        if (!v15)
        {
          v11 = v14 + 1;
          if (v14 + 1 >= v10)
            goto LABEL_22;
          v15 = v22[v11];
          if (!v15)
          {
            v16 = v14 + 2;
            if (v16 >= v10)
            {
LABEL_22:
              swift_release();
              v3 = v21;
              if ((a2 & 1) != 0)
              {
                v20 = 1 << *(_BYTE *)(v5 + 32);
                if (v20 > 63)
                  bzero(v22, ((unint64_t)(v20 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v22 = -1 << v20;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v15 = v22[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_29;
                if (v11 >= v10)
                  goto LABEL_22;
                v15 = v22[v11];
                ++v16;
                if (v15)
                  goto LABEL_19;
              }
            }
            v11 = v16;
          }
        }
LABEL_19:
        v9 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v11 << 6);
      }
      v17 = *(_QWORD *)(v5 + 48) + 24 * v13;
      v19 = *(_QWORD *)v17;
      v18 = *(_QWORD *)(v17 + 8);
      if ((a2 & 1) == 0)
        sub_1A54FA300(*(_QWORD *)v17, *(_QWORD *)(v17 + 8));
      sub_1A5585D04(v19, v18);
    }
  }
  swift_release();
  *v3 = v6;
}

uint64_t sub_1A5584600(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A10B8);
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A55848D0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t i;
  char v47;
  uint64_t v48;
  char v49;
  __int128 v50;
  __int128 v51;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABA0);
  v47 = a2;
  v6 = sub_1A594CA50();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v45 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v43 = v2;
  v44 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v7; ; ++*(_QWORD *)(i + 16))
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v13;
      v22 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v44)
      break;
    v24 = v45;
    v25 = v45[v23];
    v26 = v13 + 1;
    if (!v25)
    {
      v26 = v23 + 1;
      if (v23 + 1 >= v44)
        goto LABEL_33;
      v25 = v45[v26];
      if (!v25)
      {
        v27 = v23 + 2;
        if (v27 >= v44)
        {
LABEL_33:
          swift_release();
          v3 = v43;
          v7 = i;
          if ((v47 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = v45[v27];
        if (!v25)
        {
          while (1)
          {
            v26 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_42;
            if (v26 >= v44)
              goto LABEL_33;
            v25 = v45[v26];
            ++v27;
            if (v25)
              goto LABEL_30;
          }
        }
        v26 = v27;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v21 = v26;
    v22 = __clz(__rbit64(v25)) + (v26 << 6);
LABEL_31:
    v32 = *(_QWORD *)(v5 + 56);
    v33 = v5;
    v34 = *(_QWORD *)(v5 + 48) + 40 * v22;
    v35 = *(_BYTE *)v34;
    v36 = *(_DWORD *)(v34 + 4);
    v37 = *(_QWORD *)(v34 + 8);
    v38 = *(_DWORD *)(v34 + 16);
    v40 = *(_QWORD *)(v34 + 24);
    v39 = *(_QWORD *)(v34 + 32);
    v41 = (uint64_t *)(v32 + 12 * v22);
    v48 = *v41;
    v49 = *((_BYTE *)v41 + 8);
    if ((v47 & 1) == 0)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E42B4(v40, v39);
    }
    LOBYTE(v50) = v35;
    DWORD1(v50) = v36;
    *((_QWORD *)&v50 + 1) = v37;
    LODWORD(v51) = v38;
    *((_QWORD *)&v51 + 1) = v40;
    v7 = i;
    sub_1A594CE64();
    MoveOrCopy.hash(into:)();
    result = sub_1A594CED0();
    v14 = -1 << *(_BYTE *)(i + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      v5 = v33;
      v13 = v21;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v14) >> 6;
      v5 = v33;
      v13 = v21;
      do
      {
        if (++v16 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v30 = v16 == v29;
        if (v16 == v29)
          v16 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v31 == -1);
      v17 = __clz(__rbit64(~v31)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = *(_QWORD *)(i + 48) + 40 * v17;
    *(_OWORD *)v18 = v50;
    *(_OWORD *)(v18 + 16) = v51;
    *(_QWORD *)(v18 + 32) = v39;
    v19 = *(_QWORD *)(i + 56) + 12 * v17;
    *(_QWORD *)v19 = v48;
    *(_BYTE *)(v19 + 8) = v49;
  }
  swift_release();
  v3 = v43;
  v24 = v45;
  if ((v47 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v42 = 1 << *(_BYTE *)(v5 + 32);
  if (v42 >= 64)
    bzero(v24, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v42;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1A5584C70(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB98);
  v6 = sub_1A594CA50();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v15 >= v11)
          goto LABEL_22;
        v16 = v8[v15];
        ++v12;
        if (!v16)
        {
          v12 = v15 + 1;
          if (v15 + 1 >= v11)
            goto LABEL_22;
          v16 = v8[v12];
          if (!v16)
          {
            v17 = v15 + 2;
            if (v17 >= v11)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v19 = 1 << *(_BYTE *)(v5 + 32);
                if (v19 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v19;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v16 = v8[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_29;
                if (v12 >= v11)
                  goto LABEL_22;
                v16 = v8[v12];
                ++v17;
                if (v16)
                  goto LABEL_19;
              }
            }
            v12 = v17;
          }
        }
LABEL_19:
        v10 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v12 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v14);
      if ((a2 & 1) == 0)
      {
        swift_retain();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      sub_1A5585E74(v18);
    }
  }
  swift_release();
  *v3 = v6;
}

uint64_t sub_1A5584E5C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  char v35;
  __int128 v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB70);
  v35 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v32;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v19);
      v28 = *(_QWORD *)(v5 + 56) + 40 * v19;
      v29 = *(_BYTE *)v28;
      v30 = *(_QWORD *)(v28 + 8);
      v36 = *(_OWORD *)(v28 + 16);
      v31 = *(_BYTE *)(v28 + 32);
      if ((v35 & 1) == 0)
        sub_1A54E42B4(v30, v36);
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 40 * v16;
      *(_BYTE *)v17 = v29;
      *(_QWORD *)(v17 + 8) = v30;
      *(_OWORD *)(v17 + 16) = v36;
      *(_BYTE *)(v17 + 32) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A5585174(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8880);
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v29 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v12)
          goto LABEL_33;
        v21 = v29[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v12)
            goto LABEL_33;
          v21 = v29[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v29 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v29[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_33;
                v21 = v29[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v19);
      v30 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      if ((a2 & 1) == 0)
        sub_1A54E42B4(v30, *((unint64_t *)&v30 + 1));
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v17) = v27;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v17) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A558544C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB68);
  v35 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v32;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v19);
      v28 = *(_QWORD *)(v5 + 56) + 24 * v19;
      v29 = *(_BYTE *)v28;
      v30 = *(_QWORD *)(v28 + 8);
      v31 = *(_QWORD *)(v28 + 16);
      if ((v35 & 1) == 0)
        sub_1A54E42B4(v30, v31);
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 24 * v16;
      *(_BYTE *)v17 = v29;
      *(_QWORD *)(v17 + 8) = v30;
      *(_QWORD *)(v17 + 16) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A5585748(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB78);
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v29 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v12)
          goto LABEL_33;
        v21 = v29[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v12)
            goto LABEL_33;
          v21 = v29[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v29 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v29[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_33;
                v21 = v29[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v19);
      v30 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      if ((a2 & 1) == 0)
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v17) = v27;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v17) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

unint64_t sub_1A5585A1C(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  _QWORD *v29;
  char v30;
  __int128 v31;
  _BYTE v32[72];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB88);
  v30 = a2;
  v6 = sub_1A594CA50();
  v7 = (_QWORD *)v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v29 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v28 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v17 >= v28)
          goto LABEL_23;
        v18 = v29[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v28)
            goto LABEL_23;
          v18 = v29[v13];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v28)
            {
LABEL_23:
              swift_release();
              if ((v30 & 1) != 0)
              {
                v27 = 1 << *(_BYTE *)(v5 + 32);
                if (v27 > 63)
                  bzero(v29, ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v27;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v18 = v29[v19];
            if (!v18)
            {
              while (1)
              {
                v13 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_30;
                if (v13 >= v28)
                  goto LABEL_23;
                v18 = v29[v13];
                ++v19;
                if (v18)
                  goto LABEL_20;
              }
            }
            v13 = v19;
          }
        }
LABEL_20:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = 16 * v16;
      v21 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + v20);
      v22 = *(_QWORD *)(v5 + 56) + v20;
      v23 = *(_QWORD *)v22;
      v24 = *(unsigned int *)(v22 + 8);
      v25 = *(_BYTE *)(v22 + 12);
      v31 = v21;
      v26 = *((_QWORD *)&v21 + 1);
      if ((v30 & 1) == 0)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54E4334(v23, v24, v25);
      }
      sub_1A594CE64();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F55DC((uint64_t)v32, v31);
      swift_bridgeObjectRelease();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F55DC((uint64_t)v32, v26);
      swift_bridgeObjectRelease();
      sub_1A594CED0();
      result = sub_1A594C5DC();
      *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(_OWORD *)(v7[6] + 16 * result) = v31;
      v14 = v7[7] + 16 * result;
      *(_QWORD *)v14 = v23;
      *(_DWORD *)(v14 + 8) = v24;
      *(_BYTE *)(v14 + 12) = v25;
      ++v7[2];
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1A5585D04(uint64_t a1, uint64_t a2)
{
  sub_1A594CE64();
  __asm { BR              X10 }
}

unint64_t sub_1A5585D58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t result;
  uint64_t *v6;
  uint64_t v7;

  sub_1A594CE88();
  sub_1A54E3414();
  MessageIdentifierSet.hash(into:)((uint64_t)&v7, v3, v2 & 0xFFFFFFFFFFLL);
  sub_1A594CED0();
  result = sub_1A594C5DC();
  *(_QWORD *)((char *)v0 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  v6 = (uint64_t *)(v0[6] + 24 * result);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v1;
  *(_BYTE *)(v0[7] + result) = v4 & 1;
  ++v0[2];
  return result;
}

void sub_1A5585E74(uint64_t a1)
{
  sub_1A594CE64();
  swift_beginAccess();
  __asm { BR              X10 }
}

unint64_t sub_1A5585EE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  sub_1A594CE88();
  sub_1A54E4334(v4, v3, SBYTE4(v3));
  sub_1A54E3414();
  MessageIdentifierSet.hash(into:)((uint64_t)&v7, v4, v3 & 0xFFFFFFFFFFLL);
  sub_1A54FA2A8(v4, v3);
  sub_1A594CED0();
  result = sub_1A594C5DC();
  *(_QWORD *)((char *)v0 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  v6 = 8 * result;
  *(_QWORD *)(v0[6] + v6) = v2;
  *(_QWORD *)(v0[7] + v6) = v1;
  ++v0[2];
  return result;
}

uint64_t sub_1A5586038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;

  v2 = a2;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v20 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v19 = (unint64_t)(63 - v3) >> 6;
  v6 = a2 + 56;
  v7 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8 = 0;
  v21 = v7;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v22 = v8;
      v10 = v9 | (v8 << 6);
      goto LABEL_22;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      JUMPOUT(0x1A5586B74);
    }
    if (v11 >= v19)
      goto LABEL_29;
    v12 = *(_QWORD *)(v20 + 8 * v11);
    if (!v12)
      break;
LABEL_21:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v11 << 6);
    v22 = v11;
LABEL_22:
    v14 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v10);
    v16 = *v14;
    v15 = v14[1];
    sub_1A594CE64();
    sub_1A54E42B4(v16, v15);
    sub_1A54E42B4(v16, v15);
    sub_1A5949F9C();
    sub_1A54E46E8(v16, v15);
    v17 = sub_1A594CED0() & ~(-1 << *(_BYTE *)(v2 + 32));
    if (((*(_QWORD *)(v6 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
      __asm { BR              X8 }
    sub_1A54E46E8(v16, v15);
    v7 = v21;
    v8 = v22;
  }
  v13 = v8 + 2;
  if (v8 + 2 >= v19)
    goto LABEL_29;
  v12 = *(_QWORD *)(v20 + 8 * v13);
  if (v12)
    goto LABEL_20;
  v13 = v8 + 3;
  if (v8 + 3 >= v19)
    goto LABEL_29;
  v12 = *(_QWORD *)(v20 + 8 * v13);
  if (v12)
    goto LABEL_20;
  v13 = v8 + 4;
  if (v8 + 4 >= v19)
    goto LABEL_29;
  v12 = *(_QWORD *)(v20 + 8 * v13);
  if (v12)
    goto LABEL_20;
  v13 = v8 + 5;
  if (v8 + 5 >= v19)
    goto LABEL_29;
  v12 = *(_QWORD *)(v20 + 8 * v13);
  if (v12)
  {
LABEL_20:
    v11 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v11 = v13 + 1;
    if (__OFADD__(v13, 1))
      __break(1u);
    if (v11 >= v19)
      break;
    v12 = *(_QWORD *)(v20 + 8 * v11);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_29:
  sub_1A550F72C();
  return v2;
}

uint64_t sub_1A5586C18(uint64_t a1, uint64_t a2)
{
  return sub_1A5586C64(a1, a2, &qword_1EE79A710);
}

uint64_t sub_1A5586C64(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  size_t v25;
  uint64_t isStackAllocationSafe;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t *v32;
  uint64_t v33;
  _QWORD v34[6];

  v3 = a2;
  v34[5] = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v5 = 0;
    v7 = a1 + 56;
    v6 = *(_QWORD *)(a1 + 56);
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v32 = a3;
    v33 = ~v8;
    if (-v8 < 64)
      v9 = ~(-1 << -(char)v8);
    else
      v9 = -1;
    v10 = v9 & v6;
    v11 = (unint64_t)(63 - v8) >> 6;
    v12 = a2 + 56;
    while (1)
    {
      do
      {
        if (v10)
        {
          v13 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          v14 = v13 | (v5 << 6);
        }
        else
        {
          v15 = v5 + 1;
          if (__OFADD__(v5, 1))
          {
            __break(1u);
            goto LABEL_37;
          }
          if (v15 >= v11)
            goto LABEL_35;
          v16 = *(_QWORD *)(v7 + 8 * v15);
          v17 = v5 + 1;
          if (!v16)
          {
            v17 = v5 + 2;
            if (v5 + 2 >= v11)
              goto LABEL_35;
            v16 = *(_QWORD *)(v7 + 8 * v17);
            if (!v16)
            {
              v17 = v5 + 3;
              if (v5 + 3 >= v11)
                goto LABEL_35;
              v16 = *(_QWORD *)(v7 + 8 * v17);
              if (!v16)
              {
                v17 = v5 + 4;
                if (v5 + 4 >= v11)
                  goto LABEL_35;
                v16 = *(_QWORD *)(v7 + 8 * v17);
                if (!v16)
                {
                  v18 = v5 + 5;
                  if (v5 + 5 >= v11)
                  {
LABEL_35:
                    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                    sub_1A550F72C();
                    return v3;
                  }
                  v16 = *(_QWORD *)(v7 + 8 * v18);
                  if (!v16)
                  {
                    while (1)
                    {
                      v17 = v18 + 1;
                      if (__OFADD__(v18, 1))
                        break;
                      if (v17 >= v11)
                        goto LABEL_35;
                      v16 = *(_QWORD *)(v7 + 8 * v17);
                      ++v18;
                      if (v16)
                        goto LABEL_23;
                    }
LABEL_37:
                    __break(1u);
                  }
                  v17 = v5 + 5;
                }
              }
            }
          }
LABEL_23:
          v10 = (v16 - 1) & v16;
          v14 = __clz(__rbit64(v16)) + (v17 << 6);
          v5 = v17;
        }
        v19 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * v14);
        sub_1A594CE64();
        sub_1A594CEAC();
        v20 = sub_1A594CED0();
        v21 = -1 << *(_BYTE *)(v3 + 32);
        v22 = v20 & ~v21;
      }
      while (((*(_QWORD *)(v12 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0);
      v23 = *(_QWORD *)(v3 + 48);
      if (*(_DWORD *)(v23 + 4 * v22) == v19)
        break;
      while (1)
      {
        v22 = (v22 + 1) & ~v21;
        if (((*(_QWORD *)(v12 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
          break;
        if (*(_DWORD *)(v23 + 4 * v22) == v19)
          goto LABEL_28;
      }
    }
LABEL_28:
    v34[0] = a1;
    v34[1] = v7;
    v34[2] = v33;
    v34[3] = v5;
    v34[4] = v10;
    v24 = (unint64_t)(63 - v21) >> 6;
    v25 = 8 * v24;
    isStackAllocationSafe = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v24 < 0x81 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      v28 = (char *)&v32 - v27;
      memcpy((char *)&v32 - v27, (const void *)(v3 + 56), v25);
      v29 = sub_1A5587E7C((uint64_t)v28, v24, v3, v22, v34, v32);
      swift_release();
      sub_1A550F72C();
    }
    else
    {
      v30 = (void *)swift_slowAlloc();
      memcpy(v30, (const void *)(v3 + 56), v25);
      v29 = sub_1A5587E7C((uint64_t)v30, v24, v3, v22, v34, v32);
      swift_release();
      sub_1A550F72C();
      MEMORY[0x1A85B1964](v30, -1, -1);
    }
    return v29;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1A5587014(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t isStackAllocationSafe;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  unsigned __int8 *v30;
  uint64_t v31;
  unsigned __int8 *v32;
  int v33;
  int v34;
  int v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void *v40;
  uint64_t v42;
  int64_t v43;
  _QWORD v44[6];

  v2 = a2;
  v44[5] = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v5 = a1 + 56;
    v4 = *(_QWORD *)(a1 + 56);
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v42 = ~v6;
    if (-v6 < 64)
      v7 = ~(-1 << -(char)v6);
    else
      v7 = -1;
    v8 = v7 & v4;
    v43 = (unint64_t)(63 - v6) >> 6;
    v9 = a2 + 56;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v10 = 0;
    do
    {
LABEL_6:
      if (v8)
      {
        v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v12 = v11 | (v10 << 6);
      }
      else
      {
        v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          goto LABEL_53;
        }
        if (v13 >= v43)
          goto LABEL_51;
        v14 = *(_QWORD *)(v5 + 8 * v13);
        v15 = v10 + 1;
        if (!v14)
        {
          v15 = v10 + 2;
          if (v10 + 2 >= v43)
            goto LABEL_51;
          v14 = *(_QWORD *)(v5 + 8 * v15);
          if (!v14)
          {
            v15 = v10 + 3;
            if (v10 + 3 >= v43)
              goto LABEL_51;
            v14 = *(_QWORD *)(v5 + 8 * v15);
            if (!v14)
            {
              v15 = v10 + 4;
              if (v10 + 4 >= v43)
                goto LABEL_51;
              v14 = *(_QWORD *)(v5 + 8 * v15);
              if (!v14)
              {
                v16 = v10 + 5;
                if (v10 + 5 >= v43)
                {
LABEL_51:
                  sub_1A550F72C();
                  return v2;
                }
                v14 = *(_QWORD *)(v5 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    v15 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      break;
                    if (v15 >= v43)
                      goto LABEL_51;
                    v14 = *(_QWORD *)(v5 + 8 * v15);
                    ++v16;
                    if (v14)
                      goto LABEL_23;
                  }
LABEL_53:
                  __break(1u);
                }
                v15 = v10 + 5;
              }
            }
          }
        }
LABEL_23:
        v8 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v15 << 6);
        v10 = v15;
      }
      v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
      v19 = *v17;
      v18 = v17[1];
      sub_1A594CE64();
      sub_1A594CE88();
      isStackAllocationSafe = sub_1A594CED0();
      v21 = *(_BYTE *)(v2 + 32);
      v22 = -1 << v21;
      v23 = isStackAllocationSafe & ~(-1 << v21);
    }
    while (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0);
    v24 = v21 & 0x3F;
    v25 = ~v22;
    while (1)
    {
      v26 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v23);
      if (v26[1] == v18)
      {
        v27 = *v26;
        v28 = *(_QWORD *)(v27 + 16);
        if (v28 == *(_QWORD *)(v19 + 16))
        {
          if (v28)
            v29 = v27 == v19;
          else
            v29 = 1;
          if (v29)
            goto LABEL_44;
          if (*(unsigned __int8 *)(v27 + 32) == *(unsigned __int8 *)(v19 + 32))
          {
            if (v28 == 1)
              goto LABEL_44;
            if (*(unsigned __int8 *)(v27 + 33) == *(unsigned __int8 *)(v19 + 33))
            {
              if (v28 == 2)
                goto LABEL_44;
              if (*(unsigned __int8 *)(v27 + 34) == *(unsigned __int8 *)(v19 + 34))
              {
                if (v28 == 3)
                  goto LABEL_44;
                if (*(unsigned __int8 *)(v27 + 35) == *(unsigned __int8 *)(v19 + 35))
                  break;
              }
            }
          }
        }
      }
LABEL_26:
      v23 = (v23 + 1) & v25;
      if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
        goto LABEL_6;
    }
    v30 = (unsigned __int8 *)(v27 + 36);
    v31 = v28 - 4;
    v32 = (unsigned __int8 *)(v19 + 36);
    while (v31)
    {
      v34 = *v30++;
      v33 = v34;
      v35 = *v32++;
      --v31;
      if (v33 != v35)
        goto LABEL_26;
    }
LABEL_44:
    v44[0] = a1;
    v44[1] = v5;
    v44[2] = v42;
    v44[3] = v10;
    v44[4] = v8;
    v36 = (unint64_t)((1 << v24) + 63) >> 6;
    if (v24 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      v38 = (char *)&v42 - v37;
      memcpy((char *)&v42 - v37, (const void *)(v2 + 56), 8 * v36);
      v39 = sub_1A55880DC((uint64_t)v38, v36, v2, v23, v44);
      swift_release();
      sub_1A550F72C();
    }
    else
    {
      v40 = (void *)swift_slowAlloc();
      memcpy(v40, (const void *)(v2 + 56), 8 * v36);
      v39 = sub_1A55880DC((uint64_t)v40, v36, v2, v23, v44);
      swift_release();
      sub_1A550F72C();
      MEMORY[0x1A85B1964](v40, -1, -1);
    }
    return v39;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1A558747C(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v22;
  _QWORD *v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a3 + 16);
  v24 = a5;
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v25 = a3 + 56;
  v22 = v6 - 1;
  while (1)
  {
    v8 = a5[3];
    v7 = a5[4];
    if (v7)
    {
      v9 = (v7 - 1) & v7;
      v10 = __clz(__rbit64(v7)) | (v8 << 6);
      goto LABEL_21;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      JUMPOUT(0x1A5587DECLL);
    }
    v12 = (unint64_t)(a5[2] + 64) >> 6;
    if (v11 >= v12)
    {
      v11 = a5[3];
      goto LABEL_24;
    }
    v13 = a5[1];
    v14 = *(_QWORD *)(v13 + 8 * v11);
    if (!v14)
      break;
LABEL_20:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v11 << 6);
    v8 = v11;
LABEL_21:
    v16 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v10);
    v17 = *v16;
    v18 = v16[1];
    a5[3] = v8;
    a5[4] = v9;
    sub_1A594CE64();
    sub_1A54E42B4(v17, v18);
    sub_1A54E42B4(v17, v18);
    sub_1A5949F9C();
    sub_1A54E46E8(v17, v18);
    v19 = sub_1A594CED0() & ~(-1 << *(_BYTE *)(a3 + 32));
    if (((*(_QWORD *)(v25 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
      __asm { BR              X8 }
    sub_1A54E46E8(v17, v18);
    a5 = v24;
  }
  if (v8 + 2 >= v12)
    goto LABEL_24;
  v14 = *(_QWORD *)(v13 + 8 * (v8 + 2));
  if (v14)
  {
    v11 = v8 + 2;
    goto LABEL_20;
  }
  if (v8 + 3 >= v12)
  {
    v11 = v8 + 2;
    goto LABEL_24;
  }
  v14 = *(_QWORD *)(v13 + 8 * (v8 + 3));
  if (v14)
  {
    v11 = v8 + 3;
    goto LABEL_20;
  }
  v11 = v8 + 4;
  if (v8 + 4 >= v12)
  {
    v11 = v8 + 3;
    goto LABEL_24;
  }
  v14 = *(_QWORD *)(v13 + 8 * v11);
  if (v14)
    goto LABEL_20;
  v11 = v12 - 1;
  v15 = v8 + 5;
  while (v12 != v15)
  {
    v14 = *(_QWORD *)(v13 + 8 * v15++);
    if (v14)
    {
      v11 = v15 - 1;
      goto LABEL_20;
    }
  }
LABEL_24:
  a5[3] = v11;
  a5[4] = 0;
  swift_retain();
  return sub_1A55883F0(a1, a2, v22, a3);
}

uint64_t sub_1A5587E7C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5, uint64_t *a6)
{
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t i;
  unint64_t v31;

  v8 = (unint64_t *)result;
  v9 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v10 = v9 - 1;
  v11 = a3 + 56;
  while (1)
  {
    v16 = a5[3];
    v17 = a5[4];
    if (!v17)
      break;
    v18 = (v17 - 1) & v17;
    v19 = __clz(__rbit64(v17)) | (v16 << 6);
LABEL_22:
    v26 = *(_DWORD *)(*(_QWORD *)(*a5 + 48) + 4 * v19);
    a5[3] = v16;
    a5[4] = v18;
    sub_1A594CE64();
    sub_1A594CEAC();
    result = sub_1A594CED0();
    v27 = -1 << *(_BYTE *)(a3 + 32);
    v28 = result & ~v27;
    v12 = v28 >> 6;
    v13 = 1 << v28;
    if (((1 << v28) & *(_QWORD *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      v29 = *(_QWORD *)(a3 + 48);
      if (*(_DWORD *)(v29 + 4 * v28) == v26)
      {
LABEL_3:
        v14 = v12;
        v15 = v8[v12];
        v8[v14] = v15 & ~v13;
        if ((v13 & v15) != 0)
        {
          if (__OFSUB__(v10--, 1))
            goto LABEL_34;
          if (!v10)
            return MEMORY[0x1E0DEE9E8];
        }
      }
      else
      {
        for (i = v28 + 1; ; i = v31 + 1)
        {
          v31 = i & ~v27;
          if (((*(_QWORD *)(v11 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
            break;
          if (*(_DWORD *)(v29 + 4 * v31) == v26)
          {
            v12 = v31 >> 6;
            v13 = 1 << v31;
            goto LABEL_3;
          }
        }
      }
    }
  }
  v20 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    v21 = (unint64_t)(a5[2] + 64) >> 6;
    v22 = a5[3];
    if (v20 >= v21)
      goto LABEL_31;
    v23 = a5[1];
    v24 = *(_QWORD *)(v23 + 8 * v20);
    if (!v24)
    {
      v22 = v16 + 1;
      if (v16 + 2 >= v21)
        goto LABEL_31;
      v24 = *(_QWORD *)(v23 + 8 * (v16 + 2));
      if (v24)
      {
        v20 = v16 + 2;
      }
      else
      {
        v22 = v16 + 2;
        if (v16 + 3 >= v21)
          goto LABEL_31;
        v24 = *(_QWORD *)(v23 + 8 * (v16 + 3));
        if (v24)
        {
          v20 = v16 + 3;
        }
        else
        {
          v20 = v16 + 4;
          v22 = v16 + 3;
          if (v16 + 4 >= v21)
            goto LABEL_31;
          v24 = *(_QWORD *)(v23 + 8 * v20);
          if (!v24)
          {
            v22 = v21 - 1;
            v25 = v16 + 5;
            while (v21 != v25)
            {
              v24 = *(_QWORD *)(v23 + 8 * v25++);
              if (v24)
              {
                v20 = v25 - 1;
                goto LABEL_21;
              }
            }
LABEL_31:
            a5[3] = v22;
            a5[4] = 0;
            swift_retain();
            return sub_1A55886A0(v8, a2, v10, a3, a6);
          }
        }
      }
    }
LABEL_21:
    v18 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v20 << 6);
    v16 = v20;
    goto LABEL_22;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A55880DC(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned __int8 *v36;
  int v37;
  int v38;
  int v39;
  int64_t v40;
  uint64_t v42;

  v7 = (unint64_t *)result;
  v8 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v9 = v8 - 1;
  v10 = a3 + 56;
  while (2)
  {
    v42 = v9;
    while (1)
    {
LABEL_4:
      v14 = a5[3];
      v15 = a5[4];
      if (!v15)
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        v19 = (unint64_t)(a5[2] + 64) >> 6;
        v20 = a5[3];
        if (v18 >= v19)
          goto LABEL_47;
        v21 = a5[1];
        v22 = *(_QWORD *)(v21 + 8 * v18);
        if (v22)
          goto LABEL_15;
        v23 = v14 + 2;
        v20 = v14 + 1;
        if (v14 + 2 >= v19)
          goto LABEL_47;
        v22 = *(_QWORD *)(v21 + 8 * v23);
        if (!v22)
        {
          v20 = v14 + 2;
          if (v14 + 3 >= v19)
            goto LABEL_47;
          v22 = *(_QWORD *)(v21 + 8 * (v14 + 3));
          if (v22)
          {
            v18 = v14 + 3;
            goto LABEL_15;
          }
          v23 = v14 + 4;
          v20 = v14 + 3;
          if (v14 + 4 >= v19)
            goto LABEL_47;
          v22 = *(_QWORD *)(v21 + 8 * v23);
          if (!v22)
          {
            v18 = v14 + 5;
            v20 = v14 + 4;
            if (v14 + 5 >= v19)
              goto LABEL_47;
            v22 = *(_QWORD *)(v21 + 8 * v18);
            if (!v22)
            {
              v20 = v19 - 1;
              v40 = v14 + 6;
              while (v19 != v40)
              {
                v22 = *(_QWORD *)(v21 + 8 * v40++);
                if (v22)
                {
                  v18 = v40 - 1;
                  goto LABEL_15;
                }
              }
LABEL_47:
              a5[3] = v20;
              a5[4] = 0;
              swift_retain();
              return sub_1A5588904(v7, a2, v42, a3);
            }
            goto LABEL_15;
          }
        }
        v18 = v23;
LABEL_15:
        v16 = (v22 - 1) & v22;
        v17 = __clz(__rbit64(v22)) + (v18 << 6);
        v14 = v18;
        goto LABEL_16;
      }
      v16 = (v15 - 1) & v15;
      v17 = __clz(__rbit64(v15)) | (v14 << 6);
LABEL_16:
      v24 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v17);
      v25 = *v24;
      v26 = v24[1];
      a5[3] = v14;
      a5[4] = v16;
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v27 = -1 << *(_BYTE *)(a3 + 32);
      v28 = result & ~v27;
      if (((*(_QWORD *)(v10 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) != 0)
      {
        v29 = ~v27;
        while (1)
        {
          v30 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v28);
          if (v30[1] == v26)
          {
            v31 = *v30;
            v32 = *(_QWORD *)(v31 + 16);
            if (v32 == *(_QWORD *)(v25 + 16))
            {
              if (v32)
                v33 = v31 == v25;
              else
                v33 = 1;
              if (v33)
                goto LABEL_3;
              if (*(unsigned __int8 *)(v31 + 32) == *(unsigned __int8 *)(v25 + 32))
              {
                if (v32 == 1)
                  goto LABEL_3;
                if (*(unsigned __int8 *)(v31 + 33) == *(unsigned __int8 *)(v25 + 33))
                {
                  if (v32 == 2)
                    goto LABEL_3;
                  if (*(unsigned __int8 *)(v31 + 34) == *(unsigned __int8 *)(v25 + 34))
                  {
                    if (v32 == 3)
                      goto LABEL_3;
                    if (*(unsigned __int8 *)(v31 + 35) == *(unsigned __int8 *)(v25 + 35))
                      break;
                  }
                }
              }
            }
          }
LABEL_18:
          v28 = (v28 + 1) & v29;
          if (((*(_QWORD *)(v10 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
            goto LABEL_4;
        }
        v34 = (unsigned __int8 *)(v31 + 36);
        v35 = v32 - 4;
        v36 = (unsigned __int8 *)(v25 + 36);
        while (v35)
        {
          v38 = *v34++;
          v37 = v38;
          v39 = *v36++;
          --v35;
          if (v37 != v39)
            goto LABEL_18;
        }
LABEL_3:
        v11 = (v28 >> 3) & 0x1FFFFFFFFFFFFFF8;
        v12 = 1 << v28;
        v13 = *(unint64_t *)((char *)v7 + v11);
        *(unint64_t *)((char *)v7 + v11) = v13 & ~v12;
        if ((v13 & v12) != 0)
          break;
      }
    }
    v9 = v42 - 1;
    if (__OFSUB__(v42, 1))
    {
LABEL_49:
      __break(1u);
      return result;
    }
    if (v42 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1A55883F0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A720);
  result = sub_1A594C6E4();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_1A594CE64();
    sub_1A54E42B4(v18, v19);
    sub_1A54E42B4(v18, v19);
    sub_1A5949F9C();
    sub_1A54E46E8(v18, v19);
    result = sub_1A594CED0();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A55886A0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  v5 = a4;
  if (!a3)
  {
    v10 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v10;
  }
  v6 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v5;
  __swift_instantiateConcreteTypeFromMangledName_0(a5);
  result = sub_1A594C6E4();
  v10 = result;
  v29 = a1;
  if (a2 < 1)
    v11 = 0;
  else
    v11 = *a1;
  v12 = 0;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_39;
    if (v16 >= a2)
      goto LABEL_36;
    v17 = v29[v16];
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= a2)
        goto LABEL_36;
      v17 = v29[v12];
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= a2)
          goto LABEL_36;
        v17 = v29[v12];
        if (!v17)
          break;
      }
    }
LABEL_23:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v15);
    sub_1A594CE64();
    sub_1A594CEAC();
    result = sub_1A594CED0();
    v20 = -1 << *(_BYTE *)(v10 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v13 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v13 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v13 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_DWORD *)(*(_QWORD *)(v10 + 48) + 4 * v23) = v19;
    ++*(_QWORD *)(v10 + 16);
    if (__OFSUB__(v6--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v6)
      goto LABEL_36;
  }
  v18 = v16 + 3;
  if (v18 >= a2)
    goto LABEL_36;
  v17 = v29[v18];
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= a2)
      goto LABEL_36;
    v17 = v29[v12];
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A5588904(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796180);
  result = sub_1A594C6E4();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_1A5588B94(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;

  if (!a3)
  {
LABEL_27:
    swift_release();
    return;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6A0);
    sub_1A594C6E4();
    if (a2 < 1)
      v8 = 0;
    else
      v8 = *a1;
    v9 = 0;
    while (1)
    {
      if (v8)
      {
        v10 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
          goto LABEL_29;
        if (v12 >= a2)
          goto LABEL_27;
        v13 = a1[v12];
        ++v9;
        if (!v13)
        {
          v9 = v12 + 1;
          if (v12 + 1 >= a2)
            goto LABEL_27;
          v13 = a1[v9];
          if (!v13)
          {
            v9 = v12 + 2;
            if (v12 + 2 >= a2)
              goto LABEL_27;
            v13 = a1[v9];
            if (!v13)
            {
              v14 = v12 + 3;
              if (v14 >= a2)
                goto LABEL_27;
              v13 = a1[v14];
              if (!v13)
              {
                while (1)
                {
                  v9 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    break;
                  if (v9 >= a2)
                    goto LABEL_27;
                  v13 = a1[v9];
                  ++v14;
                  if (v13)
                    goto LABEL_24;
                }
LABEL_30:
                __break(1u);
                return;
              }
              v9 = v14;
            }
          }
        }
LABEL_24:
        v8 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v9 << 6);
      }
      v15 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 24 * v11);
      v16 = *v15;
      v17 = v15[1];
      sub_1A54FA300(*v15, v17);
      sub_1A54F4960(v16, v17);
      if (__OFSUB__(v5--, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (!v5)
        goto LABEL_27;
    }
  }
}

uint64_t sub_1A5588D44(uint64_t a1)
{
  return sub_1A5588D50(a1, (uint64_t (*)(_QWORD))sub_1A554B97C);
}

uint64_t sub_1A5588D50(uint64_t result, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  if (!*(_QWORD *)(*(_QWORD *)v2 + 16))
    return result;
  v4 = result;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_6;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v13 >= v9)
      return swift_release();
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v9)
        return swift_release();
      v14 = *(_QWORD *)(v5 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v9)
          return swift_release();
        v14 = *(_QWORD *)(v5 + 8 * v10);
        if (!v14)
        {
          v10 = v13 + 3;
          if (v13 + 3 >= v9)
            return swift_release();
          v14 = *(_QWORD *)(v5 + 8 * v10);
          if (!v14)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_6:
    result = a2(*(unsigned int *)(*(_QWORD *)(v4 + 48) + 4 * v12));
  }
  v15 = v13 + 4;
  if (v15 >= v9)
    return swift_release();
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v9)
      return swift_release();
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A5588EC0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v8;
    if (!v14)
    {
      v8 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v8);
      if (!v14)
      {
        v8 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v8);
        if (!v14)
        {
          v8 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v8);
          if (!v14)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_6:
    v11 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v10 + 8);
    v12 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A554BAC4(v12, v11);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v8 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v8);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

char *sub_1A5589050(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_1A54EFA24(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A03B8);
  result = (char *)swift_arrayDestroy();
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *(_QWORD *)v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55891E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  double v29;
  uint64_t v30;
  double *v31;
  double v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double *__dst;

  v3 = a1[1];
  result = sub_1A594CC78();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v84 = *a1;
      v85 = *a1 + 8;
      v86 = -1;
      for (i = 1; i != v3; ++i)
      {
        v88 = *(double *)(v84 + 16 * i + 8);
        v89 = v86;
        v90 = v85;
        do
        {
          if (*(double *)v90 >= v88)
            break;
          if (!v84)
            goto LABEL_141;
          v91 = *(_QWORD *)(v90 + 8);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 8);
          *(_QWORD *)(v90 - 8) = v91;
          *(double *)v90 = v88;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (double *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v93 = v12;
      v103 = v9;
      if (v13 >= 2)
      {
        v94 = *v101;
        do
        {
          v95 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v94)
            goto LABEL_145;
          v96 = v93;
          v97 = *(_QWORD *)&v93[16 * v95 + 32];
          v98 = *(_QWORD *)&v93[16 * v13 + 24];
          sub_1A55898B8((double *)(v94 + 16 * v97), (double *)(v94 + 16 * *(_QWORD *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1)
            break;
          if (v98 < v97)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_1A558A0A4((uint64_t)v96);
          if (v95 >= *((_QWORD *)v96 + 2))
            goto LABEL_134;
          v99 = &v96[16 * v95 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v96 + 2);
          if (v13 > v100)
            goto LABEL_135;
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          v93 = v96;
          *((_QWORD *)v96 + 2) = v100 - 1;
          v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v103 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1A594BA18();
    *(_QWORD *)(v8 + 16) = v7;
    v103 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 + 40;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v104 = v6;
  v105 = v3;
  v106 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 16 * v10 + 8);
      v16 = *(double *)(v11 + 16 * v14 + 8);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v102 + 16 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v16 < v15 == v19 >= *v17)
            break;
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 16 * v10;
          v21 = 16 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v20;
              v25 = *(_QWORD *)(v11 + v21);
              v26 = *(_QWORD *)(v11 + v21 + 8);
              *(_OWORD *)(v11 + v21) = *(_OWORD *)(v11 + v20 - 16);
              *(_QWORD *)(v24 - 16) = v25;
              *(_QWORD *)(v24 - 8) = v26;
            }
            ++v23;
            v20 -= 16;
            v21 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v27 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v27 >= v3)
      v27 = v3;
    if (v27 < v14)
      break;
    if (v10 != v27)
    {
      v28 = (double *)(v11 + 16 * v10);
      do
      {
        v29 = *(double *)(v11 + 16 * v10 + 8);
        v30 = v14;
        v31 = v28;
        do
        {
          if (*(v31 - 1) >= v29)
            break;
          if (!v11)
            goto LABEL_142;
          v32 = *v31;
          *(_OWORD *)v31 = *((_OWORD *)v31 - 1);
          *(v31 - 1) = v29;
          *(v31 - 2) = v32;
          v31 -= 2;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 2;
      }
      while (v10 != v27);
      v10 = v27;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A5589B40(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v34 = *((_QWORD *)v12 + 2);
    v33 = *((_QWORD *)v12 + 3);
    v13 = v34 + 1;
    v11 = v106;
    if (v34 >= v33 >> 1)
    {
      v83 = sub_1A5589B40((char *)(v33 > 1), v34 + 1, 1, v12);
      v11 = v106;
      v12 = v83;
    }
    *((_QWORD *)v12 + 2) = v13;
    v35 = v12 + 32;
    v36 = &v12[16 * v34 + 32];
    *(_QWORD *)v36 = v14;
    *((_QWORD *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        v37 = v13 - 1;
        if (v13 >= 4)
        {
          v42 = &v35[16 * v13];
          v43 = *((_QWORD *)v42 - 8);
          v44 = *((_QWORD *)v42 - 7);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_120;
          v47 = *((_QWORD *)v42 - 6);
          v46 = *((_QWORD *)v42 - 5);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_121;
          v49 = v13 - 2;
          v50 = &v35[16 * v13 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_123;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_126;
          if (v54 >= v45)
          {
            v72 = &v35[16 * v37];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_130;
            v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v66 = *((_QWORD *)v12 + 4);
            v67 = *((_QWORD *)v12 + 5);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_77;
          }
          v39 = *((_QWORD *)v12 + 4);
          v38 = *((_QWORD *)v12 + 5);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_122;
        v49 = v13 - 2;
        v55 = &v35[16 * v13 - 32];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_125;
        v61 = &v35[16 * v37];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_128;
        if (__OFADD__(v59, v64))
          goto LABEL_129;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_83:
          if (v65)
            v37 = v49;
          goto LABEL_85;
        }
LABEL_77:
        if ((v60 & 1) != 0)
          goto LABEL_124;
        v68 = &v35[16 * v37];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_127;
        if (v71 < v59)
          goto LABEL_15;
LABEL_85:
        v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v77 = v12;
        v78 = &v35[16 * v76];
        v79 = *(_QWORD *)v78;
        v80 = &v35[16 * v37];
        v81 = *((_QWORD *)v80 + 1);
        sub_1A55898B8((double *)(v11 + 16 * *(_QWORD *)v78), (double *)(v11 + 16 * *(_QWORD *)v80), v11 + 16 * v81, __dst);
        if (v1)
          goto LABEL_93;
        if (v81 < v79)
          goto LABEL_117;
        if (v37 > *((_QWORD *)v77 + 2))
          goto LABEL_118;
        *(_QWORD *)v78 = v79;
        *(_QWORD *)&v35[16 * v76 + 8] = v81;
        v82 = *((_QWORD *)v77 + 2);
        if (v37 >= v82)
          goto LABEL_119;
        v12 = v77;
        v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((_QWORD *)v77 + 2) = v82 - 1;
        v11 = v106;
        if (v82 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v104;
    v3 = v105;
    if (v10 >= v105)
    {
      v9 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t sub_1A55898B8(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double *v20;
  double *v21;
  uint64_t result;
  char *v23;
  double *v24;
  double *v25;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v25 = __src;
  v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v18 = &v4[2 * v13];
      v23 = (char *)v18;
      v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v19 = (double *)(a3 - 16);
        do
        {
          v20 = v19 + 2;
          if (*(v6 - 1) >= *(v18 - 1))
          {
            v23 = (char *)(v18 - 2);
            if (v20 < v18 || v19 >= v18 || v20 != v18)
              *(_OWORD *)v19 = *((_OWORD *)v18 - 1);
            v21 = v6;
            v18 -= 2;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 2;
            if (v20 != v6 || v19 >= v6)
              *(_OWORD *)v19 = *(_OWORD *)v21;
            v25 = v6 - 2;
            if (v21 <= v7)
              break;
          }
          v19 -= 2;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_1A5589E44((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[2 * v10];
    v23 = (char *)v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v15 = v4;
      while (1)
      {
        if (v15[1] >= v6[1])
        {
          v4 = v15 + 2;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 2;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v15 += 2;
          }
        }
        else
        {
          v16 = v6 + 2;
          v17 = v6;
          if (v7 == v6 && v7 < v16)
            goto LABEL_22;
        }
        *(_OWORD *)v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 2;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v24 = v4;
        v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

char *sub_1A5589B40(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B300);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A5589C38(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1A594CA68();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1A5589CE4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    result = (char *)sub_1A594CA68();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = 24 * (v4 / 24);
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1A5589D9C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 3;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -4)
  {
    result = (char *)sub_1A594CA68();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 2;
    if (result != v3 || result >= &v3[4 * v7])
      return (char *)memmove(result, v3, 4 * v7);
  }
  return result;
}

char *sub_1A5589E44(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1A594CA68();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1A5589EEC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_1A594CA68();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

uint64_t sub_1A5589F94(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799EE8);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_1A594CA68();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_1A558A0A4(uint64_t a1)
{
  return sub_1A5589B40(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A558A0BC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1A558A160(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1A558A248(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void *sub_1A558A2F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  int v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  int v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  int v45;
  int v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t i;
  unsigned int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unsigned __int8 *v62;
  uint64_t v63;
  unsigned __int8 *v64;
  int v65;
  int v66;
  int v67;
  char v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  IMAP2Connection::MailboxesSelectionUsage v78;

  v2 = v1;
  v78.elements._rawValue = MailboxesSelectionUsage.init()().elements._rawValue;
  v3 = *(_QWORD *)(v1 + 144);
  v73 = *(_QWORD *)(v1 + 160);
  v74 = *(_QWORD *)(v1 + 152);
  v75 = v3;
  v76 = *(_BYTE *)(v1 + 168);
  if ((v76 & 1) == 0 || (v4 = *(_QWORD *)(v3 + 16)) == 0)
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v15 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v15)
      goto LABEL_20;
    goto LABEL_17;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v5 = v3 + 168;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v8 = *(_QWORD *)(v5 - 40);
    if (*(_QWORD *)(*(_QWORD *)v5 + 16))
      v9 = v8 == 0;
    else
      v9 = 1;
    if (!v9)
    {
      v10 = *(_QWORD *)(v5 - 120);
      v11 = *(_DWORD *)(v5 - 112);
      swift_beginAccess();
      v12 = *(_DWORD *)(v8 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1A54EFB30(0, v6[2] + 1, 1, v6);
      v14 = v6[2];
      v13 = v6[3];
      if (v14 >= v13 >> 1)
        v6 = sub_1A54EFB30((_QWORD *)(v13 > 1), v14 + 1, 1, v6);
      v6[2] = v14 + 1;
      v7 = &v6[3 * v14];
      *((_DWORD *)v7 + 8) = v12;
      v7[5] = v10;
      *((_DWORD *)v7 + 12) = v11;
    }
    v5 += 176;
    --v4;
  }
  while (v4);
  v3 = v75;
  sub_1A54E8FCC(v75, v74, v73, 1);
  v15 = v6[2];
  if (v15)
  {
LABEL_17:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v16 = v6 + 6;
    do
    {
      v17 = *((_DWORD *)v16 - 4);
      v16 += 3;
      MailboxesSelectionUsage.Value.init(mailbox:usage:)();
      v19 = v18;
      v21 = v20;
      v23 = v22 & 1;
      v25 = v24;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      MailboxesSelectionUsage.subscript.setter(v19, v25, v21, v23, v17);
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    v3 = v75;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  v26 = sub_1A559E954(*(unsigned __int8 *)(v2 + 232), *(_QWORD *)(v2 + 240));
  v27 = v26[2];
  if (v27)
  {
    v28 = v26 + 6;
    do
    {
      v29 = *((_DWORD *)v28 - 4);
      v28 += 3;
      MailboxesSelectionUsage.Value.init(mailbox:usage:)();
      v31 = v30;
      v33 = v32;
      v35 = v34 & 1;
      v37 = v36;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      MailboxesSelectionUsage.subscript.setter(v31, v37, v33, v35, v29);
      --v27;
    }
    while (v27);
  }
  swift_bridgeObjectRelease();
  if ((v76 & 1) != 0 && (v38 = *(_QWORD *)(v3 + 16)) != 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v39 = v3 + 168;
    v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v42 = *(_QWORD *)(v39 - 40);
      if (*(_QWORD *)(*(_QWORD *)v39 + 16))
        v43 = 1;
      else
        v43 = v42 == 0;
      if (!v43)
      {
        v44 = *(_QWORD *)(v39 - 120);
        v45 = *(_DWORD *)(v39 - 112);
        swift_beginAccess();
        v46 = *(_DWORD *)(v42 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v40 = sub_1A54EFB30(0, v40[2] + 1, 1, v40);
        v48 = v40[2];
        v47 = v40[3];
        if (v48 >= v47 >> 1)
          v40 = sub_1A54EFB30((_QWORD *)(v47 > 1), v48 + 1, 1, v40);
        v40[2] = v48 + 1;
        v41 = &v40[3 * v48];
        *((_DWORD *)v41 + 8) = v46;
        v41[5] = v44;
        *((_DWORD *)v41 + 12) = v45;
      }
      v39 += 176;
      --v38;
    }
    while (v38);
    sub_1A54E8FCC(v3, v74, v73, 1);
    v49 = v40[2];
    if (!v49)
      goto LABEL_64;
  }
  else
  {
    v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v49 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v49)
    {
LABEL_64:
      swift_bridgeObjectRelease();
      return v78.elements._rawValue;
    }
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  for (i = 0; i != v49; ++i)
  {
    v51 = (unsigned int *)&v40[3 * i + 4];
    v52 = *v51;
    v53 = *((_QWORD *)v51 + 1);
    v54 = v51[4];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v55 = MailboxesSelectionUsage.subscript.getter(v52, (uint64_t)v78.elements._rawValue);
    swift_bridgeObjectRelease();
    if (v55)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v56 = *(_QWORD *)(a1 + 16);
      if (v56)
      {
        v57 = 0;
        while (1)
        {
          v58 = a1 + 32 + 16 * v57;
          if ((*(unsigned int *)(v58 + 8) | ((unint64_t)*(unsigned int *)(v58 + 8) << 32)) == (v54 | (v54 << 32)))
          {
            v59 = *(_QWORD *)v58;
            v60 = *(_QWORD *)(v59 + 16);
            if (v60 == *(_QWORD *)(v53 + 16))
            {
              if (v60)
                v61 = v59 == v53;
              else
                v61 = 1;
              if (v61)
                goto LABEL_61;
              if (*(unsigned __int8 *)(v59 + 32) == *(unsigned __int8 *)(v53 + 32))
              {
                if (v60 == 1)
                  goto LABEL_61;
                if (*(unsigned __int8 *)(v59 + 33) == *(unsigned __int8 *)(v53 + 33))
                {
                  if (v60 == 2)
                    goto LABEL_61;
                  if (*(unsigned __int8 *)(v59 + 34) == *(unsigned __int8 *)(v53 + 34))
                  {
                    if (v60 == 3)
                      goto LABEL_61;
                    if (*(unsigned __int8 *)(v59 + 35) == *(unsigned __int8 *)(v53 + 35))
                      break;
                  }
                }
              }
            }
          }
LABEL_43:
          if (++v57 == v56)
            goto LABEL_61;
        }
        v62 = (unsigned __int8 *)(v59 + 36);
        v63 = v60 - 4;
        v64 = (unsigned __int8 *)(v53 + 36);
        while (v63)
        {
          v66 = *v62++;
          v65 = v66;
          v67 = *v64++;
          --v63;
          if (v65 != v67)
            goto LABEL_43;
        }
      }
LABEL_61:
      MailboxesSelectionUsage.Value.init(mailbox:usage:)();
      MailboxesSelectionUsage.subscript.setter(v69, v70, v71, v68 & 1, v52);
    }
  }
  swift_bridgeObjectRelease_n();
  return v78.elements._rawValue;
}

uint64_t sub_1A558A820(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1A54EFC70(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[6 * a2 + 4];
    if (a1 != a2 || &v4[6 * a1 + 4] >= (_QWORD *)&v16[48 * v15])
      result = (uint64_t)memmove(&v4[6 * a1 + 4], v16, 48 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

unint64_t sub_1A558A994(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char *i;
  unsigned int v5;
  int v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB80);
    v3 = (_QWORD *)sub_1A594CA5C();
    for (i = (char *)(a1 + 57); ; i += 32)
    {
      v5 = *(_DWORD *)(i - 25);
      v6 = *(_DWORD *)(i - 17);
      v7 = *(_QWORD *)(i - 9);
      v8 = *(i - 1);
      v9 = *i;
      result = sub_1A54FDC2C(v5);
      if ((v11 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      v12 = v3[7] + 24 * result;
      *(_DWORD *)v12 = v6;
      *(_QWORD *)(v12 + 8) = v7;
      *(_BYTE *)(v12 + 16) = v8;
      *(_BYTE *)(v12 + 17) = v9;
      v13 = v3[2];
      v14 = __OFADD__(v13, 1);
      v15 = v13 + 1;
      if (v14)
        goto LABEL_10;
      v3[2] = v15;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

uint64_t sub_1A558AA90(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1A54F00CC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[4 * a2 + 4];
    if (a1 != a2 || &v4[4 * a1 + 4] >= (_QWORD *)&v16[32 * v15])
      result = (uint64_t)memmove(&v4[4 * a1 + 4], v16, 32 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

unint64_t sub_1A558ABF8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB78);
  v3 = (_QWORD *)sub_1A594CA5C();
  LODWORD(v4) = *(_DWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  result = sub_1A54FDC2C(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return (unint64_t)v3;
  }
  v9 = (uint64_t *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v6;
    v10[1] = v5;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *((unsigned int *)v9 - 4);
    v6 = *(v9 - 1);
    v15 = *v9;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A54FDC2C(v4);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A558AD04(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  unint64_t result;
  char v8;
  _WORD *v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _WORD *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABB0);
  v3 = (_QWORD *)sub_1A594CA5C();
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_WORD *)(a1 + 48);
  result = sub_1A54FDC94(v4, v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return (unint64_t)v3;
  }
  v9 = (_WORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v3[6] + 16 * result);
    *v10 = v4;
    v10[1] = v5;
    *(_WORD *)(v3[7] + 2 * result) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 12;
    v15 = *((_QWORD *)v9 - 2);
    v5 = *((_QWORD *)v9 - 1);
    v6 = *v9;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A54FDC94(v15, v5);
    v9 = v14;
    v4 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A558AE18(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABA8);
  v3 = (_QWORD *)sub_1A594CA5C();
  LODWORD(v4) = *(_DWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  result = sub_1A54FDC2C(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return (unint64_t)v3;
  }
  v9 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    v10 = v3[7] + 16 * result;
    *(_BYTE *)v10 = v5;
    *(_QWORD *)(v10 + 8) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *((unsigned int *)v9 - 4);
    v5 = *((_BYTE *)v9 - 8);
    v15 = *v9;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A54FDC2C(v4);
    v9 = v14;
    v6 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A558AF30(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8878);
  v3 = (_QWORD *)sub_1A594CA5C();
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  result = sub_1A54FDC94(v4, v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return (unint64_t)v3;
  }
  v9 = a1 + 9;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v3[6] + 16 * result);
    *v10 = v4;
    v10[1] = v5;
    *(_QWORD *)(v3[7] + 8 * result) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v15 = *(v9 - 2);
    v5 = *(v9 - 1);
    v16 = *v9;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A54FDC94(v15, v5);
    v9 = v14;
    v6 = v16;
    v4 = v15;
    if ((v17 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A558B058(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t result;
  char v9;
  _DWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8868);
  v3 = (_QWORD *)sub_1A594CA5C();
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_DWORD *)(a1 + 56);
  result = sub_1A54FDC94(v4, v5);
  if ((v9 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return (unint64_t)v3;
  }
  v10 = (_DWORD *)(a1 + 88);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v4;
    v11[1] = v5;
    v12 = v3[7] + 16 * result;
    *(_QWORD *)v12 = v6;
    *(_DWORD *)(v12 + 8) = v7;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      break;
    v3[2] = v15;
    if (!--v1)
      goto LABEL_8;
    v16 = v10 + 8;
    v17 = *((_QWORD *)v10 - 3);
    v5 = *((_QWORD *)v10 - 2);
    v18 = *((_QWORD *)v10 - 1);
    v7 = *v10;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A54FDC94(v17, v5);
    v10 = v16;
    v6 = v18;
    v4 = v17;
    if ((v19 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A558B194(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  unint64_t result;
  char v11;
  _DWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _DWORD *v22;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8860);
  v3 = (_QWORD *)sub_1A594CA5C();
  v5 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_DWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_DWORD *)(a1 + 72);
  result = sub_1A54FDC94(v5, v4);
  if ((v11 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return (unint64_t)v3;
  }
  v12 = (_DWORD *)(a1 + 120);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v3[6] + 16 * result);
    *v13 = v5;
    v13[1] = v4;
    v14 = v3[7] + 32 * result;
    *(_QWORD *)v14 = v6;
    *(_DWORD *)(v14 + 8) = v7;
    *(_QWORD *)(v14 + 16) = v8;
    *(_DWORD *)(v14 + 24) = v9;
    v15 = v3[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      break;
    v3[2] = v17;
    if (!--v1)
      goto LABEL_8;
    v18 = *((_QWORD *)v12 - 5);
    v4 = *((_QWORD *)v12 - 4);
    v21 = *((_QWORD *)v12 - 3);
    v22 = v12 + 12;
    v7 = *(v12 - 4);
    v19 = *((_QWORD *)v12 - 1);
    v9 = *v12;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A54FDC94(v18, v4);
    v6 = v21;
    v12 = v22;
    v8 = v19;
    v5 = v18;
    if ((v20 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A558B308(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB50);
  v3 = (_QWORD *)sub_1A594CA5C();
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_DWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  result = sub_1A54FDC30(v4, v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return (unint64_t)v3;
  }
  v9 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = v3[6] + 16 * result;
    *(_QWORD *)v10 = v4;
    *(_DWORD *)(v10 + 8) = v5;
    *(_QWORD *)(v3[7] + 8 * result) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v15 = *(v9 - 2);
    v5 = *((_DWORD *)v9 - 2);
    v6 = *v9;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A54FDC30(v15, v5);
    v9 = v14;
    v4 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A558B428(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char *i;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  __int16 v10;
  char v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7961E8);
    v3 = (_QWORD *)sub_1A594CA5C();
    for (i = (char *)(a1 + 113); ; i += 88)
    {
      v20 = v1;
      v5 = *(_QWORD *)(i - 81);
      v6 = *(_DWORD *)(i - 73);
      v7 = *(_QWORD *)(i - 65);
      v8 = *(_DWORD *)(i - 57);
      v9 = *(i - 53);
      v10 = *(_WORD *)(i - 51);
      v11 = *(i - 49);
      v12 = *(_QWORD *)(i - 33);
      v25 = *(_QWORD *)(i - 25);
      v26 = *(_QWORD *)(i - 41);
      v23 = *(_QWORD *)(i - 9);
      v24 = *(_QWORD *)(i - 17);
      v21 = *i;
      v22 = *(i - 1);
      result = sub_1A54FDC30(v5, v6);
      if ((v14 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v15 = v3[6] + 16 * result;
      *(_QWORD *)v15 = v5;
      *(_DWORD *)(v15 + 8) = v6;
      v16 = v3[7] + 72 * result;
      *(_QWORD *)v16 = v7;
      *(_DWORD *)(v16 + 8) = v8;
      *(_BYTE *)(v16 + 12) = v9;
      *(_WORD *)(v16 + 14) = v10;
      *(_BYTE *)(v16 + 16) = v11;
      *(_QWORD *)(v16 + 24) = v26;
      *(_QWORD *)(v16 + 32) = v12;
      *(_QWORD *)(v16 + 40) = v25;
      *(_QWORD *)(v16 + 48) = v24;
      *(_QWORD *)(v16 + 56) = v23;
      *(_BYTE *)(v16 + 64) = v22;
      *(_BYTE *)(v16 + 65) = v21;
      v17 = v3[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v3[2] = v19;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v1 = v20 - 1;
      if (v20 == 1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1A558B5B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  unint64_t result;
  char v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _OWORD *v13;
  char v14;
  __int128 v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7961F0);
  v3 = (_QWORD *)sub_1A594CA5C();
  LODWORD(v4) = *(_DWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v15 = *(_OWORD *)(a1 + 48);
  result = sub_1A54FDC2C(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return (unint64_t)v3;
  }
  v8 = (_OWORD *)(a1 + 80);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    v9 = v3[7] + 24 * result;
    *(_BYTE *)v9 = v5;
    *(_OWORD *)(v9 + 8) = v15;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v4 = *((unsigned int *)v8 - 4);
    v5 = *((_BYTE *)v8 - 8);
    v15 = *v8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A54FDC2C(v4);
    v8 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A558B6D8(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

unint64_t sub_1A558B6F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  _BYTE *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  char v20;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A10D0);
  v3 = (_QWORD *)sub_1A594CA5C();
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_DWORD *)(a1 + 48);
  v7 = *(_BYTE *)(a1 + 52);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_BYTE *)(a1 + 64);
  result = sub_1A54FDC94(v4, v5);
  if ((v11 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return (unint64_t)v3;
  }
  v12 = (_BYTE *)(a1 + 104);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v3[6] + 16 * result);
    *v13 = v4;
    v13[1] = v5;
    v14 = v3[7] + 24 * result;
    *(_DWORD *)v14 = v6;
    *(_BYTE *)(v14 + 4) = v7 & 1;
    *(_QWORD *)(v14 + 8) = v8;
    *(_BYTE *)(v14 + 16) = v9 & 1;
    v15 = v3[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      break;
    v3[2] = v17;
    if (!--v1)
      goto LABEL_8;
    v18 = v12 + 40;
    v19 = *((_QWORD *)v12 - 4);
    v5 = *((_QWORD *)v12 - 3);
    v6 = *((_DWORD *)v12 - 4);
    v7 = *(v12 - 12);
    v8 = *((_QWORD *)v12 - 1);
    v9 = *v12;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A54FDC94(v19, v5);
    v12 = v18;
    v4 = v19;
    if ((v20 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A558B84C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unsigned int v5;
  char v6;
  unint64_t result;
  char v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8710);
  v3 = (_QWORD *)sub_1A594CA5C();
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_DWORD *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 44);
  result = sub_1A54FDC30(v4, v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return (unint64_t)v3;
  }
  v9 = (_BYTE *)(a1 + 60);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = v3[6] + 16 * result;
    *(_QWORD *)v10 = v4;
    *(_DWORD *)(v10 + 8) = v5;
    *(_BYTE *)(v3[7] + result) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 16;
    v15 = *(_QWORD *)(v9 - 12);
    v5 = *((_DWORD *)v9 - 1);
    v6 = *v9;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A54FDC30(v15, v5);
    v9 = v14;
    v4 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A558B96C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A10B8);
  v3 = (_QWORD *)sub_1A594CA5C();
  LODWORD(v4) = *(_DWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_1A54FDC2C(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return (unint64_t)v3;
  }
  v8 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((unsigned int *)v8 - 2);
    v13 = *v8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A54FDC2C(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A558BA6C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t result;
  char v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB40);
  v3 = (_QWORD *)sub_1A594CA5C();
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_DWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(unsigned int *)(a1 + 56);
  v8 = *(_BYTE *)(a1 + 60);
  result = sub_1A54FDC30(v4, v5);
  if ((v10 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x1E0DEE9E0];
  }
  v11 = (char *)(a1 + 92);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = v3[6] + 16 * result;
    *(_QWORD *)v12 = v4;
    *(_DWORD *)(v12 + 8) = v5;
    v13 = v3[7] + 16 * result;
    *(_QWORD *)v13 = v6;
    *(_DWORD *)(v13 + 8) = v7;
    *(_BYTE *)(v13 + 12) = v8;
    v14 = v3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      break;
    v3[2] = v16;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v6, v7, v8);
    if (!--v1)
      return (unint64_t)v3;
    v4 = *(_QWORD *)(v11 - 28);
    v5 = *((_DWORD *)v11 - 5);
    v6 = *(_QWORD *)(v11 - 12);
    v7 = *((unsigned int *)v11 - 1);
    v8 = *v11;
    result = sub_1A54FDC30(v4, v5);
    v11 += 32;
    if ((v17 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A558BBAC(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1A54F07A8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[22 * a2 + 4];
    if (a1 != a2 || &v4[22 * a1 + 4] >= (_QWORD *)&v16[176 * v15])
      result = (uint64_t)memmove(&v4[22 * a1 + 4], v16, 176 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A558BD20(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1A54F00B8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_23;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_29;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[7 * a2 + 4];
    v17 = 56 * v15;
    if (56 * a1 < 56 * a2 || (&v4[7 * a1 + 4] < (_QWORD *)&v16[v17] ? (v18 = a1 == a2) : (v18 = 0), !v18))
      result = (uint64_t)memmove(&v4[7 * a1 + 4], v16, v17);
    v19 = v4[2];
    v14 = __OFADD__(v19, v8);
    v20 = v19 - v7;
    if (!v14)
    {
      v4[2] = v20;
LABEL_23:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_30;
  }
LABEL_31:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A558BEA8(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t *__return_ptr, uint64_t);
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;

  v52 = a6;
  v54 = a2;
  v57 = type metadata accessor for RunningTask();
  v10 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v53 = (uint64_t)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0420);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v44 - v16;
  v63 = MEMORY[0x1E0DEE9D8];
  sub_1A54F4F04(0, 0, 0);
  v18 = v63;
  v19 = *(_QWORD *)(a1 + 16);
  v48 = a4;
  v49 = a5;
  v46 = a1;
  v47 = a5 + 32;
  v44[2] = a4 + 32;
  v45 = (_QWORD *)(a4 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v56 = a3;
  result = swift_retain();
  v21 = 0;
  v22 = 0;
  v55 = v19;
  v50 = v15;
  v51 = v17;
  v23 = v19 == 0;
  if (v19)
    goto LABEL_3;
LABEL_2:
  v24 = 1;
  for (i = v19; ; i = v22 + 1)
  {
    v26 = v57;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v17, v24, 1, v57);
    sub_1A558E024((uint64_t)v17, (uint64_t)v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v26) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v18;
    }
    v58 = i;
    v27 = v53;
    sub_1A54E3394((uint64_t)v15, v53, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
    v54(&v59, v27);
    v28 = v59;
    v29 = v60;
    v30 = v61;
    v31 = v62;
    result = sub_1A55034FC(v27, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
    if (__OFADD__(v21, 1))
      break;
    v32 = v21;
    v33 = v10;
    if (!v28
      || ((v34 = *(_QWORD *)(v49 + 16), !v48)
        ? (v35 = sub_1A557FEEC(v28, v29, v47, v34))
        : (v35 = sub_1A557FFE0(v28, v29, v47, v34, v45)),
          v37 = v35,
          v38 = v36,
          swift_bridgeObjectRelease(),
          (v38 & 1) != 0))
    {
      v37 = 0;
      v39 = 1;
    }
    else
    {
      v39 = 0;
    }
    if (v31)
      v40 = v52;
    else
      v40 = v30;
    v18 = v63;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1A54F4F04(0, *(_QWORD *)(v18 + 16) + 1, 1);
      v18 = v63;
    }
    v19 = v55;
    v42 = *(_QWORD *)(v18 + 16);
    v41 = *(_QWORD *)(v18 + 24);
    if (v42 >= v41 >> 1)
    {
      result = sub_1A54F4F04(v41 > 1, v42 + 1, 1);
      v19 = v55;
      v18 = v63;
    }
    *(_QWORD *)(v18 + 16) = v42 + 1;
    v43 = v18 + 32 * v42;
    *(_QWORD *)(v43 + 32) = v32;
    *(_QWORD *)(v43 + 40) = v37;
    *(_BYTE *)(v43 + 48) = v39;
    *(_QWORD *)(v43 + 56) = v40;
    v21 = v32 + 1;
    v10 = v33;
    v15 = v50;
    v17 = v51;
    v22 = v58;
    v23 = v58 >= v19;
    if (v58 == v19)
      goto LABEL_2;
LABEL_3:
    if (v23)
      goto LABEL_25;
    sub_1A55034B8(v46+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v22, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
    v24 = 0;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A558C204(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1A54F0308(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[4 * a2 + 4];
    if (a1 != a2 || &v4[4 * a1 + 4] >= (_QWORD *)&v16[32 * v15])
      result = (uint64_t)memmove(&v4[4 * a1 + 4], v16, 32 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A558C36C(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1A54F01E4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[3 * a2 + 4];
    if (a1 != a2 || &v4[3 * a1 + 4] >= (_QWORD *)&v16[24 * v15])
      result = (uint64_t)memmove(&v4[3 * a1 + 4], v16, 24 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t destroy for StateWithTasks(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1A54E8FCC(*(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_BYTE *)(a1 + 168));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for StateWithTasks(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 64) = v6;
  v8 = a2 + 120;
  v7 = *(_QWORD *)(a2 + 120);
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v7)
  {
    v10 = *(_QWORD *)(a2 + 128);
    v11 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 120) = v7;
    *(_QWORD *)(a1 + 128) = v10;
    *(_QWORD *)(a1 + 136) = v11;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v8;
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(v8 + 16);
  }
  v12 = *(_QWORD *)(a2 + 144);
  v13 = *(_QWORD *)(a2 + 152);
  v14 = *(_QWORD *)(a2 + 160);
  v15 = *(_BYTE *)(a2 + 168);
  sub_1A55212D0(v12, v13, v14, v15);
  *(_QWORD *)(a1 + 144) = v12;
  *(_QWORD *)(a1 + 152) = v13;
  *(_QWORD *)(a1 + 160) = v14;
  *(_BYTE *)(a1 + 168) = v15;
  v16 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v16;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  v17 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v17;
  v19 = *(_QWORD *)(a2 + 272);
  v18 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = v19;
  *(_QWORD *)(a1 + 280) = v18;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for StateWithTasks(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  *(_BYTE *)(a1 + 10) = *((_BYTE *)a2 + 10);
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
  *(_BYTE *)(a1 + 18) = *((_BYTE *)a2 + 18);
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = a2[6];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = a2[7];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v5 = *((_OWORD *)a2 + 4);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)((char *)a2 + 73);
  *(_OWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 96) = a2[12];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v6 = a2[13];
  v7 = (_OWORD *)(a1 + 120);
  v8 = *(_QWORD *)(a1 + 120);
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_QWORD *)(a1 + 104) = v6;
  *(_BYTE *)(a1 + 113) = *((_BYTE *)a2 + 113);
  v10 = a2 + 15;
  v9 = a2[15];
  if (v8)
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 120) = v9;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 128) = a2[16];
      *(_QWORD *)(a1 + 136) = a2[17];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A5542C34(a1 + 120);
      v11 = a2[17];
      *v7 = *v10;
      *(_QWORD *)(a1 + 136) = v11;
    }
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 120) = v9;
    *(_QWORD *)(a1 + 128) = a2[16];
    *(_QWORD *)(a1 + 136) = a2[17];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v12 = *v10;
    *(_QWORD *)(a1 + 136) = a2[17];
    *v7 = v12;
  }
  v13 = a2[18];
  v14 = a2[19];
  v15 = a2[20];
  v16 = *((_BYTE *)a2 + 168);
  sub_1A55212D0(v13, v14, v15, v16);
  v17 = *(_QWORD *)(a1 + 144);
  v18 = *(_QWORD *)(a1 + 152);
  v19 = *(_QWORD *)(a1 + 160);
  v20 = *(_BYTE *)(a1 + 168);
  *(_QWORD *)(a1 + 144) = v13;
  *(_QWORD *)(a1 + 152) = v14;
  *(_QWORD *)(a1 + 160) = v15;
  *(_BYTE *)(a1 + 168) = v16;
  sub_1A54E8FCC(v17, v18, v19, v20);
  *(_QWORD *)(a1 + 176) = a2[22];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = a2[23];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = a2[24];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = a2[25];
  *(_QWORD *)(a1 + 208) = a2[26];
  *(_DWORD *)(a1 + 216) = *((_DWORD *)a2 + 54);
  *(_QWORD *)(a1 + 224) = a2[28];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 232) = *((_BYTE *)a2 + 232);
  *(_QWORD *)(a1 + 240) = a2[30];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 248) = *((_DWORD *)a2 + 62);
  *(_QWORD *)(a1 + 256) = a2[32];
  *(_QWORD *)(a1 + 264) = a2[33];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = a2[34];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 280) = a2[35];
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy288_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t assignWithTake for StateWithTasks(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 120);
  v6 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  if (!v6)
    goto LABEL_5;
  if (!v5)
  {
    sub_1A5542C34(a1 + 120);
LABEL_5:
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 120) = v5;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  v8 = *(_QWORD *)(a2 + 160);
  v9 = *(_BYTE *)(a2 + 168);
  v10 = *(_QWORD *)(a1 + 144);
  v11 = *(_QWORD *)(a1 + 152);
  v12 = *(_QWORD *)(a1 + 160);
  v13 = *(_BYTE *)(a1 + 168);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = v8;
  *(_BYTE *)(a1 + 168) = v9;
  sub_1A54E8FCC(v10, v11, v12, v13);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  v14 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_release();
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for StateWithTasks(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 288))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StateWithTasks(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 288) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 288) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StateWithTasks()
{
  return &type metadata for StateWithTasks;
}

uint64_t sub_1A558CC98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1A558CCD4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A558CCF8(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1A54F11B8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(type metadata accessor for RunningTask() - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A558CEA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, _QWORD *), uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  __int128 v19;
  unint64_t i;
  BOOL v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  os_log_t v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  int64_t v51;
  _QWORD v52[2];
  __int128 v53;
  unsigned int *v54;
  char *v55;
  char *v56;
  int v57;
  os_log_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  unint64_t *v67;
  int v68;
  uint64_t v69;
  uint64_t (*v70)(char *, _QWORD *);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79[2];
  _QWORD v80[2];
  char v81;
  uint64_t v82;
  unint64_t v83;

  v72 = a5;
  v73 = a6;
  v70 = a3;
  v71 = a4;
  v69 = type metadata accessor for Command();
  MEMORY[0x1E0C80A78](v69);
  v11 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a2 + 272);
  v13 = *(_QWORD *)(a1 + 56);
  v62 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v64 = v12 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_l;
  v61 = OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id;
  v63 = (unint64_t)(v14 + 63) >> 6;
  v68 = a7 & 1;
  v56 = (char *)&v77 + 4;
  v55 = (char *)&v77 + 1;
  v54 = &v78;
  v66 = (char *)(a2 + 232);
  v67 = (unint64_t *)(a2 + 240);
  swift_retain();
  v74 = a1;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18 = 0;
  *(_QWORD *)&v19 = 68158723;
  v53 = v19;
  v52[1] = MEMORY[0x1E0DEE9B8] + 8;
  *(_QWORD *)&v19 = 68158467;
  v60 = v19;
  v65 = v11;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v75 = (v16 - 1) & v16;
  v76 = v18;
  for (i = __clz(__rbit64(v16)) | (v18 << 6); ; i = __clz(__rbit64(v23)) + (v22 << 6))
  {
    v25 = *(_QWORD *)(v74 + 48) + 16 * i;
    v26 = *(_QWORD *)v25;
    v27 = *(_DWORD *)(v25 + 8);
    *(_QWORD *)v11 = *(_QWORD *)v25;
    *((_DWORD *)v11 + 2) = v27;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain_n();
    v28 = static ConnectionUsage.empty.getter();
    v30 = v29;
    v80[0] = v72;
    v80[1] = v73;
    v81 = v68;
    v82 = v28;
    v83 = v29;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E7028(v30);
    v31 = v70(v11, v80);
    v33 = v32;
    swift_bridgeObjectRelease();
    sub_1A54E7074(v30);
    sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Command);
    swift_bridgeObjectRelease();
    sub_1A54E7074(v30);
    if ((v33 & 1) == 0)
    {
      swift_retain_n();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_bridgeObjectRetain_n();
      v34 = sub_1A594A74C();
      v35 = sub_1A594C030();
      v36 = v35;
      if (os_log_type_enabled(v34, v35))
      {
        v37 = swift_slowAlloc();
        v58 = v34;
        v38 = v37;
        v59 = swift_slowAlloc();
        v79[0] = v59;
        *(_DWORD *)v38 = v53;
        LODWORD(v77) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v38 + 8) = 256;
        v57 = v36;
        v39 = *(_BYTE *)(v12 + v61);
        swift_release();
        LOBYTE(v77) = v39;
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v38 + 11) = 2160;
        v77 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v38 + 21) = 2085;
        v77 = v26;
        v78 = v27;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v40 = sub_1A594B4A8();
        v77 = sub_1A55791B0(v40, v41, v79);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 31) = 2082;
        v42 = ConnectionID.debugDescription.getter(v31);
        v77 = sub_1A55791B0(v42, v43, v79);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        v44 = v58;
        _os_log_impl(&dword_1A4F90000, v58, (os_log_type_t)v57, "[%.*hhx] De-selected '%{sensitive,mask.mailbox}s' on %{public}s", (uint8_t *)v38, 0x29u);
        v45 = v59;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v45, -1, -1);
        MEMORY[0x1A85B1964](v38, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n();

        swift_release_n();
      }
    }
    v46 = v67;
    v47 = *v67;
    v48 = *(_QWORD *)(*v67 + 16);
    if (v48)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1A554B70C(v47);
        v47 = result;
      }
      v49 = 0;
      while (v49 < *(_QWORD *)(v47 + 16))
      {
        type metadata accessor for RunningTask();
        result = sub_1A559587C(v26, v27, a2);
        if (v48 == ++v49)
        {
          *v46 = v47;
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
LABEL_24:
    v11 = v65;
    swift_retain();
    result = sub_1A55802EC(v46, v66);
    v50 = *(_QWORD *)(*v46 + 16);
    if (v50 < result)
      goto LABEL_36;
    sub_1A558CCF8(result, v50);
    result = swift_bridgeObjectRelease();
    v16 = v75;
    v18 = v76;
    if (v75)
      goto LABEL_4;
LABEL_5:
    v21 = __OFADD__(v18, 1);
    v22 = v18 + 1;
    if (v21)
      goto LABEL_37;
    if (v22 >= v63)
      goto LABEL_34;
    v23 = *(_QWORD *)(v62 + 8 * v22);
    if (!v23)
    {
      v24 = v22 + 1;
      if (v22 + 1 >= v63)
        goto LABEL_34;
      v23 = *(_QWORD *)(v62 + 8 * v24);
      if (v23)
        goto LABEL_12;
      v24 = v22 + 2;
      if (v22 + 2 >= v63)
        goto LABEL_34;
      v23 = *(_QWORD *)(v62 + 8 * v24);
      if (v23)
      {
LABEL_12:
        v22 = v24;
        goto LABEL_13;
      }
      v51 = v22 + 3;
      if (v22 + 3 >= v63)
      {
LABEL_34:
        swift_release();
        return swift_release();
      }
      v23 = *(_QWORD *)(v62 + 8 * v51);
      v22 += 3;
      if (!v23)
        break;
    }
LABEL_13:
    v75 = (v23 - 1) & v23;
    v76 = v22;
  }
  while (1)
  {
    v22 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    if (v22 >= v63)
      goto LABEL_34;
    v23 = *(_QWORD *)(v62 + 8 * v22);
    ++v51;
    if (v23)
      goto LABEL_13;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1A558D714(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char v54;
  __int128 v55;
  uint64_t v56;
  unsigned int v57;
  __int128 v58;

  v2 = type metadata accessor for RunningTask();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v46 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v42 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)&v48 = MEMORY[0x1E0DEE9D8];
  sub_1A54F4ECC(0, v8, 0);
  v44 = a1;
  v45 = v3;
  if (v8)
  {
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD **)(v3 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v11 = v8;
    v47 = v10;
    do
    {
      sub_1A55034B8(v9, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      sub_1A55530FC((uint64_t)(v7 + 72), (uint64_t)&v51);
      sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      v12 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A54F4ECC(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v10 = v47;
        v12 = v48;
      }
      v14 = *(_QWORD *)(v12 + 16);
      v13 = *(_QWORD *)(v12 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1A54F4ECC(v13 > 1, v14 + 1, 1);
        v10 = v47;
        v12 = v48;
      }
      *(_QWORD *)(v12 + 16) = v14 + 1;
      v15 = (_OWORD *)(v12 + 48 * v14);
      v16 = v51;
      v17 = v53;
      v15[3] = v52;
      v15[4] = v17;
      v15[2] = v16;
      v9 += (uint64_t)v10;
      --v11;
    }
    while (v11);
  }
  else
  {
    v12 = v48;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v18 = v44;
  swift_bridgeObjectRelease();
  v19 = sub_1A5552880(v12);
  swift_release();
  if (!v8)
  {
LABEL_36:
    sub_1A5578610(v18);
    return v19;
  }
  v42 = v19;
  v20 = v18 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
  v21 = *(_QWORD *)(v45 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v47 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v22 = (uint64_t)v46;
  while (1)
  {
    sub_1A55034B8(v20, v22, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
    sub_1A556C73C(v22, (uint64_t)&v51);
    if (v54)
      break;
    sub_1A556C7D8((uint64_t)&v51);
LABEL_13:
    sub_1A55034FC(v22, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
    v20 += v21;
    if (!--v8)
    {
      v18 = v44;
      swift_bridgeObjectRelease();
      v19 = v42;
      goto LABEL_36;
    }
  }
  if (v54 != 1)
    goto LABEL_13;
  v49 = v52;
  v50 = v53;
  v48 = v51;
  v23 = *((_QWORD *)&v52 + 1);
  v24 = v53;
  __swift_project_boxed_opaque_existential_1_0(&v48, *((uint64_t *)&v52 + 1));
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v24 + 32))(&v55, v23, v24);
  sub_1A550E928((uint64_t)&v48);
  v25 = v56;
  v26 = v57;
  v58 = v55;
  sub_1A54F81BC((uint64_t)&v58);
  sub_1A556C73C(v22, (uint64_t)&v51);
  if (!v54)
  {
    sub_1A556C7D8((uint64_t)&v51);
LABEL_34:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (v54 != 1)
    goto LABEL_34;
  v49 = v52;
  v50 = v53;
  v48 = v51;
  v27 = *((_QWORD *)&v53 + 1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550E928((uint64_t)&v48);
  v28 = *(_QWORD *)(v27 + 16);
  swift_bridgeObjectRelease();
  if (!v28)
    goto LABEL_34;
  sub_1A556C73C(v22, (uint64_t)&v51);
  if (v54)
  {
    if (v54 == 1)
    {
      v49 = v52;
      v50 = v53;
      v48 = v51;
      v45 = *((_QWORD *)&v53 + 1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A550E928((uint64_t)&v48);
      goto LABEL_25;
    }
  }
  else
  {
    sub_1A556C7D8((uint64_t)&v51);
  }
  v45 = MEMORY[0x1E0DEE9E8];
LABEL_25:
  v29 = v47;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v51 = v29;
  v32 = sub_1A54FDC30(v25, v26);
  v33 = v29[2];
  v34 = (v31 & 1) == 0;
  v35 = v33 + v34;
  if (!__OFADD__(v33, v34))
  {
    v36 = v31;
    v37 = v29[3];
    v43 = v26;
    if (v37 >= v35)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1A55508C0();
    }
    else
    {
      sub_1A5583E18(v35, isUniquelyReferenced_nonNull_native);
      v38 = sub_1A54FDC30(v25, v26);
      if ((v36 & 1) != (v39 & 1))
        goto LABEL_38;
      v32 = v38;
    }
    v22 = (uint64_t)v46;
    v40 = (_QWORD *)v51;
    swift_bridgeObjectRelease();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((v36 & 1) == 0)
    {
      sub_1A55B2590(v32, v25, v43, MEMORY[0x1E0DEE9E8], v40);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    v47 = v40;
    swift_bridgeObjectRelease();
    sub_1A5511AB4(v45);
    goto LABEL_34;
  }
  __break(1u);
LABEL_38:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

uint64_t sub_1A558DC24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A558DC6C(uint64_t a1)
{
  destroy for State.NextTask(a1);
  return a1;
}

uint64_t sub_1A558DCA0(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1A54F1A54(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_23;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_29;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[30 * a2 + 4];
    v17 = 240 * v15;
    if (240 * a1 < 240 * a2 || (&v4[30 * a1 + 4] < (_QWORD *)&v16[v17] ? (v18 = a1 == a2) : (v18 = 0), !v18))
      result = (uint64_t)memmove(&v4[30 * a1 + 4], v16, v17);
    v19 = v4[2];
    v14 = __OFADD__(v19, v8);
    v20 = v19 - v7;
    if (!v14)
    {
      v4[2] = v20;
LABEL_23:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_30;
  }
LABEL_31:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A558DE28(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1A54F20E4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[3 * a2 + 4];
    if (a1 != a2 || &v4[3 * a1 + 4] >= (_QWORD *)&v16[24 * v15])
      result = (uint64_t)memmove(&v4[3 * a1 + 4], v16, 24 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A558DF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RunningTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A558DFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RunningTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A558E024(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A558E06C(uint64_t a1)
{
  uint64_t v1;

  return SyncRequest.includes(_:)(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_1A558E0A4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A558E0DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1A55A4210(a1, *(unint64_t **)(v1 + 16));
}

uint64_t sub_1A558E0E4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A55A4324(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1A558E0EC()
{
  unint64_t result;

  result = qword_1EE797220;
  if (!qword_1EE797220)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8860, &type metadata for TaskHistory.RemovedID);
    atomic_store(result, (unint64_t *)&qword_1EE797220);
  }
  return result;
}

uint64_t sub_1A558E134@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  int v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;

  v2 = result;
  if ((result & 0x1000000) == 0)
  {
    v4 = MEMORY[0x1E0DEE9D8];
    if ((result & 0xFF0000) != 0)
      goto LABEL_14;
    goto LABEL_9;
  }
  result = (uint64_t)sub_1A54F0414(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v4 = result;
  v6 = *(_QWORD *)(result + 16);
  v5 = *(_QWORD *)(result + 24);
  v7 = v5 >> 1;
  v8 = v6 + 1;
  if (v5 >> 1 <= v6)
  {
    result = (uint64_t)sub_1A54F0414((char *)(v5 > 1), v6 + 1, 1, (char *)result);
    v4 = result;
    v5 = *(_QWORD *)(result + 24);
    v7 = v5 >> 1;
  }
  *(_QWORD *)(v4 + 16) = v8;
  *(_BYTE *)(v4 + v6 + 32) = 2;
  v9 = v6 + 2;
  if (v7 < v9)
  {
    result = (uint64_t)sub_1A54F0414((char *)(v5 > 1), v9, 1, (char *)v4);
    v4 = result;
  }
  *(_QWORD *)(v4 + 16) = v9;
  *(_BYTE *)(v4 + v8 + 32) = 4;
  if ((*(_QWORD *)&v2 & 0xFF0000) == 0)
  {
LABEL_9:
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A54F0414(0, *(_QWORD *)(v4 + 16) + 1, 1, (char *)v4);
      v4 = result;
    }
    v11 = *(_QWORD *)(v4 + 16);
    v10 = *(_QWORD *)(v4 + 24);
    if (v11 >= v10 >> 1)
    {
      result = (uint64_t)sub_1A54F0414((char *)(v10 > 1), v11 + 1, 1, (char *)v4);
      v4 = result;
    }
    *(_QWORD *)(v4 + 16) = v11 + 1;
    *(_BYTE *)(v4 + v11 + 32) = 10;
  }
LABEL_14:
  *a2 = v4;
  return result;
}

void sub_1A558E298(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4E66FC8;
}

BOOL sub_1A558E2A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = a2[3];
  v12 = a2[4];
  v13 = a2[5];
  v14 = a2[6];
  if (a1[6])
    v15 = 0x1000000000000;
  else
    v15 = 0;
  if (v7)
    v16 = 0x10000000000;
  else
    v16 = 0;
  if (v6)
    v17 = 0x100000000;
  else
    v17 = 0;
  v18 = v5 == 0;
  v19 = 0x1000000;
  if (v18)
    v20 = 0;
  else
    v20 = 0x1000000;
  v21 = (v2 | (v3 << 8) | v20 | (v4 << 16) | v17 | v16) + v15;
  if (v14)
    v22 = 0x1000000000000;
  else
    v22 = 0;
  if (v13)
    v23 = 0x10000000000;
  else
    v23 = 0;
  if (v12)
    v24 = 0x100000000;
  else
    v24 = 0;
  if (!v11)
    v19 = 0;
  return sub_1A558EA48(v21, (v8 | (v9 << 8) | v19 | (v10 << 16) | v24 | v23) + v22);
}

uint64_t sub_1A558E364()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0x746C7561666564;
}

uint64_t sub_1A558E3A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 56);
  v16 = v1;
  v15 = MEMORY[0x1E0DEE9E8];
  v2 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v6)
      goto LABEL_25;
    v12 = *(_QWORD *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v6)
        goto LABEL_25;
      v12 = *(_QWORD *)(v2 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v6)
          goto LABEL_25;
        v12 = *(_QWORD *)(v2 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v6)
            goto LABEL_25;
          v12 = *(_QWORD *)(v2 + 8 * v8);
          if (!v12)
          {
            v8 = v11 + 4;
            if (v11 + 4 >= v6)
              goto LABEL_25;
            v12 = *(_QWORD *)(v2 + 8 * v8);
            if (!v12)
              break;
          }
        }
      }
    }
LABEL_24:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_5:
    result = sub_1A54F28F8(&v14, *(unsigned __int8 *)(*(_QWORD *)(v1 + 56) + 24 * v10));
  }
  v13 = v11 + 5;
  if (v13 >= v6)
  {
LABEL_25:
    swift_release();
    sub_1A54F81BC((uint64_t)&v16);
    return v15;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      goto LABEL_25;
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A558E540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;

  if (!*(_QWORD *)(a2 + 16))
    return 1;
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 1;
  v4 = a2 + 56;
  while (1)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      sub_1A594CE64();
      sub_1A594CE88();
      v5 = sub_1A594CED0() & ~(-1 << *(_BYTE *)(a2 + 32));
      if (((*(_QWORD *)(v4 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
        break;
    }
    if (!--v2)
      return 1;
  }
  return 0;
}

uint64_t sub_1A558E5F0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (!*(_QWORD *)(a2 + 16))
    return 1;
  v3 = result;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  while (1)
  {
    while (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      if (*(_QWORD *)(a2 + 16))
      {
LABEL_25:
        v16 = *(_DWORD *)(*(_QWORD *)(v3 + 48) + 4 * v12);
        sub_1A594CE64();
        sub_1A594CEAC();
        result = sub_1A594CED0();
        v17 = -1 << *(_BYTE *)(a2 + 32);
        v18 = result & ~v17;
        if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
        {
          v19 = *(_QWORD *)(a2 + 48);
          if (v16 == *(_DWORD *)(v19 + 4 * v18))
            return 0;
          v20 = ~v17;
          while (1)
          {
            v18 = (v18 + 1) & v20;
            if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
              break;
            if (v16 == *(_DWORD *)(v19 + 4 * v18))
              return 0;
          }
        }
      }
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return 1;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
        {
          v4 = v13 + 3;
          if (v13 + 3 >= v9)
            return 1;
          v14 = *(_QWORD *)(v5 + 8 * v4);
          if (!v14)
            break;
        }
      }
    }
LABEL_24:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
    if (*(_QWORD *)(a2 + 16))
      goto LABEL_25;
  }
  v15 = v13 + 4;
  if (v15 >= v9)
    return 1;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_24;
  }
LABEL_34:
  __break(1u);
  return result;
}

unint64_t sub_1A558E7E0(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  char v13;

  if ((a3 & 0xFFFFFFFFFFFFFFFELL) != 2)
  {
    sub_1A54E9E50(3, a8);
    sub_1A558E540((uint64_t)&unk_1E4E66FF0, a7);
    sub_1A54E9E50(3, a8);
    v13 = sub_1A54F5CD4(a7);
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0 && (a2 & 1) != 0)
      sub_1A54E9E50(3, a8);
    swift_bridgeObjectRelease();
    __asm { BR              X12 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return ((unint64_t)(a6 & 1) << 48) | 0x101000201;
}

BOOL sub_1A558EA48(uint64_t a1, uint64_t a2)
{
  return ((a1 ^ a2) & 1 | (((a2 ^ a1) & 0xFF00) != 0) | (((a2 ^ a1) & 0xFF0000) != 0) | BYTE3(a1) & 1 ^ BYTE3(a2) & 1 | BYTE4(a1) & 1 ^ BYTE4(a2) & 1 | BYTE5(a1) & 1 ^ BYTE5(a2) & 1 | BYTE6(a1) & 1 ^ BYTE6(a2) & 1) == 0;
}

ValueMetadata *type metadata accessor for SyncBehavior.MailboxSync()
{
  return &type metadata for SyncBehavior.MailboxSync;
}

unint64_t sub_1A558EACC()
{
  unint64_t result;

  result = qword_1EE7A8AD0;
  if (!qword_1EE7A8AD0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A79E8, &type metadata for SyncBehavior.MailboxSync);
    atomic_store(result, (unint64_t *)&qword_1EE7A8AD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncBehavior.PurgeMessages()
{
  return &type metadata for SyncBehavior.PurgeMessages;
}

ValueMetadata *type metadata accessor for SyncBehavior.DetectChangesToMessages()
{
  return &type metadata for SyncBehavior.DetectChangesToMessages;
}

ValueMetadata *type metadata accessor for SyncBehavior.DownloadBehavior()
{
  return &type metadata for SyncBehavior.DownloadBehavior;
}

uint64_t _s13IMAP2Behavior12SyncBehaviorV13FetchMessagesOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A558EB90 + 4 * byte_1A59A7989[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A558EBC4 + 4 * byte_1A59A7984[v4]))();
}

uint64_t sub_1A558EBC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A558EBCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A558EBD4);
  return result;
}

uint64_t sub_1A558EBE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A558EBE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A558EBEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A558EBF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncBehavior.FetchMessages()
{
  return &type metadata for SyncBehavior.FetchMessages;
}

_DWORD *__swift_memcpy7_1(_DWORD *result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_DWORD *)((char *)result + 3) = *(int *)((char *)a2 + 3);
  *result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SyncBehavior(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[7])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncBehavior(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 6) = 0;
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 7) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 7) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncBehavior()
{
  return &type metadata for SyncBehavior;
}

uint64_t _s13IMAP2Behavior12SyncBehaviorV19MessageBodyDownloadOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A558ED0C + 4 * byte_1A59A7993[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A558ED40 + 4 * byte_1A59A798E[v4]))();
}

uint64_t sub_1A558ED40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A558ED48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A558ED50);
  return result;
}

uint64_t sub_1A558ED5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A558ED64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A558ED68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A558ED70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncBehavior.MessageBodyDownload()
{
  return &type metadata for SyncBehavior.MessageBodyDownload;
}

unint64_t sub_1A558ED90()
{
  unint64_t result;

  result = qword_1EE7A8AD8;
  if (!qword_1EE7A8AD8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7AB4, &type metadata for SyncBehavior.MessageBodyDownload);
    atomic_store(result, (unint64_t *)&qword_1EE7A8AD8);
  }
  return result;
}

unint64_t sub_1A558EDD8()
{
  unint64_t result;

  result = qword_1EE7A8AE0;
  if (!qword_1EE7A8AE0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7B44, &type metadata for SyncBehavior.FetchMessages);
    atomic_store(result, (unint64_t *)&qword_1EE7A8AE0);
  }
  return result;
}

unint64_t sub_1A558EE20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A8AE8;
  if (!qword_1EE7A8AE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7A8AF0);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7A8AE8);
  }
  return result;
}

unint64_t sub_1A558EE70()
{
  unint64_t result;

  result = qword_1EE7A8AF8;
  if (!qword_1EE7A8AF8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7BE4, &type metadata for SyncBehavior.DownloadBehavior);
    atomic_store(result, (unint64_t *)&qword_1EE7A8AF8);
  }
  return result;
}

unint64_t sub_1A558EEB8()
{
  unint64_t result;

  result = qword_1EE7A8B00;
  if (!qword_1EE7A8B00)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7C4C, &type metadata for SyncBehavior.DetectChangesToMessages);
    atomic_store(result, (unint64_t *)&qword_1EE7A8B00);
  }
  return result;
}

unint64_t sub_1A558EF00()
{
  unint64_t result;

  result = qword_1EE7A8B08;
  if (!qword_1EE7A8B08)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7CB4, &type metadata for SyncBehavior.PurgeMessages);
    atomic_store(result, (unint64_t *)&qword_1EE7A8B08);
  }
  return result;
}

uint64_t sub_1A558EF44()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A558EF4C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A558EFC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v4;
}

uint64_t sub_1A558F084(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A558F0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A558F13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A558F1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A558F21C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A558F290(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A558F30C + 4 * byte_1A59A7D20[v10]))();
  }
}

void sub_1A558F390(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1A558F484()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1A558F4FCLL);
}

void sub_1A558F48C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1A558F494);
  JUMPOUT(0x1A558F4FCLL);
}

void sub_1A558F4D4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A558F4FCLL);
}

void sub_1A558F4DC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A558F4FCLL);
}

uint64_t sub_1A558F4E4(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1A558F4FCLL);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1A558F4F8);
    JUMPOUT(0x1A558F4F0);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t type metadata accessor for AnyAuthenticatedTask.Box(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAuthenticatedTask.Box);
}

uint64_t initializeWithCopy for AnyAuthenticatedTask(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for AnyAuthenticatedTask(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t assignWithTake for AnyAuthenticatedTask(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for AnyAuthenticatedTask()
{
  return &type metadata for AnyAuthenticatedTask;
}

uint64_t sub_1A558F5C8()
{
  swift_getDynamicType();
  swift_getMetatypeMetadata();
  return sub_1A594B490();
}

uint64_t sub_1A558F624(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 48))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_1A558F630()
{
  return sub_1A594CC9C();
}

uint64_t sub_1A558F640(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  nullsub_1(a1);
  v3 = v2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v3;
}

uint64_t sub_1A558F778(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(a2 + 24) + 56))(a1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_1A558F784()
{
  return sub_1A558F5C8();
}

uint64_t sub_1A558F78C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v28 = a1;
  v31 = a4;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v30 = type metadata accessor for ClientCommand(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = sub_1A594C354();
  v22 = *(_QWORD *)(v10 - 8);
  v23 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v26 = AssociatedTypeWitness;
  v29 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v13);
  v24 = (char *)&v22 - v14;
  sub_1A558F640(a2);
  v15 = *(void (**)(void))(v7 + 64);
  v25 = v4;
  v27 = v6;
  v15();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v12, 1, TupleTypeMetadata2) != 1)
  {
    v16 = (uint64_t)&v12[*(int *)(TupleTypeMetadata2 + 48)];
    v17 = v26;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v24, v12, v26);
    sub_1A54E68A0(v16, v31);
    v18 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v20 = swift_getAssociatedConformanceWitness();
    v32 = v17;
    v33 = v18;
    v34 = AssociatedConformanceWitness;
    v35 = v20;
    type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap();
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v23);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v31, 1, 1);
}

unint64_t sub_1A558FA34(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v27 = a1;
  v5 = *(_QWORD *)(a4 + 16);
  v6 = *(_QWORD *)(a4 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = sub_1A594C354();
  v22 = *(_QWORD *)(v9 - 8);
  v23 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  v25 = AssociatedTypeWitness;
  v28 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v12);
  v24 = (char *)&v21 - v13;
  sub_1A558F640(a2);
  v14 = *(void (**)(void))(v6 + 72);
  v26 = v5;
  v14();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v11, 1, TupleTypeMetadata2) != 1)
  {
    v15 = v11;
    v16 = v25;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v24, v15, v25);
    v17 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v19 = swift_getAssociatedConformanceWitness();
    v29 = v17;
    v30 = v16;
    v31 = AssociatedConformanceWitness;
    v32 = v19;
    type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap();
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v23);
  return 0xF000000000000007;
}

uint64_t sub_1A558FC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A558F640(a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a4 + 24) + 80))(a1, v6, v7, v8, v9, *(_QWORD *)(a4 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A558FD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A558F640(a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a4 + 24) + 88))(a1, v6, v7, v8, v9, *(_QWORD *)(a4 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1A558FDC4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[8];
  uint64_t v12;
  int v13;
  int v14;

  v11[6] = a5;
  v11[7] = a7;
  v13 = a6;
  v14 = a1;
  v11[4] = a3;
  v11[5] = a4;
  swift_getAssociatedTypeWitness();
  v8 = sub_1A594C354();
  v11[1] = *(_QWORD *)(v8 - 8);
  v11[2] = v8;
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v11[3] = (char *)v11 - v10;
  v12 = v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_1A55A7FD4();
}

uint64_t sub_1A558FF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v0) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 152) + 8))(v4, *(_QWORD *)(v5 - 144));
    sub_1A5590298();
    swift_allocError();
    *(_DWORD *)v6 = *(_DWORD *)(v5 - 68);
    *(_BYTE *)(v6 + 4) = 0;
    return swift_willThrow();
  }
  else
  {
    v8 = *(_QWORD *)(v5 - 136);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v8, v4, v0);
    (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v1 + 96))(v8, *(_QWORD *)(v5 - 128), *(_QWORD *)(v5 - 120), *(_QWORD *)(v5 - 112), *(unsigned int *)(v5 - 72), *(_QWORD *)(v5 - 104), v3, v1);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v8, v0);
  }
}

uint64_t sub_1A558FFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a3 + 24) + 112))(a1, a2, *(_QWORD *)(a3 + 16));
}

void sub_1A559001C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  sub_1A558FDC4(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1A5590030(int a1)
{
  sub_1A559007C(a1);
}

uint64_t sub_1A5590050(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1A85B1874](&unk_1A59A7DB8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1A559007C(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[4];
  uint64_t v6;
  int v7;

  v7 = a1;
  swift_getAssociatedTypeWitness();
  v2 = sub_1A594C354();
  v5[1] = *(_QWORD *)(v2 - 8);
  v5[2] = v2;
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v5[3] = (char *)v5 - v4;
  v6 = v1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_1A55A816C();
}

uint64_t sub_1A55901C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v0) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 120) + 8))(v4, *(_QWORD *)(v5 - 112));
    sub_1A5590298();
    swift_allocError();
    *(_DWORD *)v6 = *(_DWORD *)(v5 - 68);
    *(_BYTE *)(v6 + 4) = 1;
    return swift_willThrow();
  }
  else
  {
    v8 = *(_QWORD *)(v5 - 104);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v8, v4, v0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 104))(v8, v2, v1);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v8, v0);
  }
}

unint64_t sub_1A5590298()
{
  unint64_t result;

  result = qword_1EE7A8B10;
  if (!qword_1EE7A8B10)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7E04, &type metadata for AnyAuthenticatedTask.Error);
    atomic_store(result, (unint64_t *)&qword_1EE7A8B10);
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1A85B17CC](a1, v6, a5);
}

uint64_t getEnumTagSinglePayload for AnyAuthenticatedTask.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyAuthenticatedTask.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5590394(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 4);
}

uint64_t sub_1A559039C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 4) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AnyAuthenticatedTask.Error()
{
  return &type metadata for AnyAuthenticatedTask.Error;
}

uint64_t sub_1A55903B8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A559042C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A55904A8 + 4 * byte_1A59A7E50[v10]))();
  }
}

void sub_1A559052C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1A5590620()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1A5590698);
}

void sub_1A5590628(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1A5590630);
  JUMPOUT(0x1A5590698);
}

void sub_1A5590670()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A5590698);
}

void sub_1A5590678()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A5590698);
}

uint64_t sub_1A5590680(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1A5590698);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1A5590694);
    JUMPOUT(0x1A559068CLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t type metadata accessor for AnyMailboxTask.Box(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyMailboxTask.Box);
}

uint64_t destroy for AnyMailboxTask(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AnyMailboxTask(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t *assignWithCopy for AnyMailboxTask(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AnyMailboxTask(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AnyMailboxTask()
{
  return &type metadata for AnyMailboxTask;
}

uint64_t destroy for MailboxTaskMailbox()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MailboxTaskMailbox(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MailboxTaskMailbox(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy36_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MailboxTaskMailbox(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxTaskMailbox(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 36))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxTaskMailbox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 36) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 36) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxTaskMailbox()
{
  return &type metadata for MailboxTaskMailbox;
}

uint64_t sub_1A55909AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_getDynamicType();
  swift_getMetatypeMetadata();
  v4 = sub_1A594B490();
  (*(void (**)(uint64_t, uint64_t))(a2 + 96))(a1, a2);
  if (v5)
  {
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1A5590A70()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CEA0();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A5590ADC()
{
  sub_1A594CE88();
  sub_1A594CEA0();
  return sub_1A594CE88();
}

uint64_t sub_1A5590B24()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CEA0();
  sub_1A594CE88();
  return sub_1A594CED0();
}

BOOL sub_1A5590B8C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  int v6;
  _OWORD v7[2];
  int v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_DWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_DWORD *)(a2 + 32);
  return sub_1A5592064((uint64_t)v5, (uint64_t)v7);
}

unint64_t sub_1A5590BD8()
{
  unint64_t result;

  result = qword_1EE7A8B18;
  if (!qword_1EE7A8B18)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7EF4, &type metadata for MailboxTaskMailbox);
    atomic_store(result, (unint64_t *)&qword_1EE7A8B18);
  }
  return result;
}

uint64_t sub_1A5590C1C@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD v25[2];
  __int128 v26;

  v22 = a1;
  v23 = a3;
  v5 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5592008(a1, (uint64_t)v10);
  v11 = *((_QWORD *)a2 + 3);
  v12 = *((_DWORD *)a2 + 8);
  v13 = *((_WORD *)a2 + 8);
  v14 = sub_1A594A764();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v10, v14);
  v15 = &v10[*(int *)(v8 + 20)];
  v17 = *((_QWORD *)v15 + 1);
  v16 = *((_QWORD *)v15 + 2);
  v18 = *v15;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MailboxTaskLoggerID.init(id:name:counter:mailbox:)(v18, v17, v16, v13, v11, v12, (uint64_t)&v24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55034FC((uint64_t)v10, type metadata accessor for Task.Logger);
  v19 = &v7[*(int *)(v5 + 20)];
  v20 = v25[0];
  *(_OWORD *)v19 = v24;
  *((_OWORD *)v19 + 1) = v20;
  *(_OWORD *)(v19 + 28) = *(_OWORD *)((char *)v25 + 12);
  sub_1A54E3394((uint64_t)v7, v23, type metadata accessor for MailboxTaskLogger);
  v26 = *a2;
  sub_1A54F81BC((uint64_t)&v26);
  swift_bridgeObjectRelease();
  return sub_1A55034FC(v22, type metadata accessor for Task.Logger);
}

uint64_t sub_1A5590DB4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 56))(*(_QWORD *)(a1 + 16));
}

double sub_1A5590DC0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  _OWORD v5[2];
  int v6;

  (*(void (**)(_OWORD *__return_ptr, _QWORD))(*(_QWORD *)(a1 + 24) + 64))(v5, *(_QWORD *)(a1 + 16));
  result = *(double *)v5;
  v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(_DWORD *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_1A5590E08(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 80))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_1A5590E14(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 88))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_1A5590E20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  nullsub_1(a1);
  v3 = v2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v3;
}

uint64_t sub_1A5590F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  __int128 v15[2];

  v4 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5592008(a1, (uint64_t)v6);
  v12 = a2 + 16;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(v12 + 8);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v11 + 64))(v15, v10, v11);
  sub_1A5590C1C((uint64_t)v6, v15, (uint64_t)v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 104))(v9, v10, v11);
  return sub_1A55034FC((uint64_t)v9, type metadata accessor for MailboxTaskLogger);
}

uint64_t sub_1A5591054(uint64_t a1)
{
  return sub_1A55909AC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_1A5591060@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t AssociatedConformanceWitness;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t TupleTypeMetadata2;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56[3];

  v47 = a4;
  v48 = a3;
  v43 = a1;
  v51 = a6;
  v8 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v8);
  v46 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v10);
  v45 = (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a5 + 16);
  v12 = *(_QWORD *)(a5 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v50 = type metadata accessor for ClientCommand(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v39 = sub_1A594C354();
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v16 = (char *)&v38 - v15;
  v42 = AssociatedTypeWitness;
  v49 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v17);
  v40 = (char *)&v38 - v18;
  v41 = a5;
  v19 = sub_1A5590E20(a2);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v26 = v46;
  sub_1A5592008(v47, v46);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v12 + 64))(v56, v13, v12);
  v27 = v45;
  v28 = v26;
  v29 = TupleTypeMetadata2;
  sub_1A5590C1C(v28, v56, v45);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 112);
  v31 = v48;
  v48 = v13;
  v30(v19, v21, v23, v25, v31, v27, v13, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A55034FC(v27, type metadata accessor for MailboxTaskLogger);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v16, 1, v29) != 1)
  {
    v32 = (uint64_t)&v16[*(int *)(v29 + 48)];
    v33 = v42;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v40, v16, v42);
    sub_1A54E3394(v32, v51, type metadata accessor for ClientCommand);
    v34 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v36 = swift_getAssociatedConformanceWitness();
    v52 = v33;
    v53 = v34;
    v54 = AssociatedConformanceWitness;
    v55 = v36;
    type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap();
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v39);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v51, 1, 1);
}

unint64_t sub_1A5591400(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t AssociatedConformanceWitness;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t TupleTypeMetadata2;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55[3];

  v48 = a5;
  v49 = a4;
  v44 = a1;
  v8 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v8);
  v47 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v10);
  v46 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a6 + 16);
  v13 = *(_QWORD *)(a6 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v15 = sub_1A594C354();
  v39 = *(_QWORD *)(v15 - 8);
  v40 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v39 - v16;
  v43 = AssociatedTypeWitness;
  v50 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v18);
  v41 = (char *)&v39 - v19;
  v42 = a6;
  v20 = sub_1A5590E20(a2);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v27 = v47;
  sub_1A5592008(v48, v47);
  v28 = v12;
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v13 + 64))(v55, v12, v13);
  v29 = v46;
  v30 = v27;
  v31 = TupleTypeMetadata2;
  sub_1A5590C1C(v30, v55, v46);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 120);
  v33 = v49;
  v49 = v13;
  v32(v20, v22, v24, v26, v33, v29, v28, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A55034FC(v29, type metadata accessor for MailboxTaskLogger);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v17, 1, v31) != 1)
  {
    v34 = v43;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v41, v17, v43);
    v35 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v37 = swift_getAssociatedConformanceWitness();
    v51 = v35;
    v52 = v34;
    v53 = AssociatedConformanceWitness;
    v54 = v37;
    type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap();
  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v40);
  return 0xF000000000000007;
}

uint64_t sub_1A5591744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  __int128 v28[2];

  v27 = a4;
  v10 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A5590E20(a2);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  sub_1A5592008(a5, (uint64_t)v12);
  v25 = a6 + 16;
  v23 = *(_QWORD *)(a6 + 16);
  v24 = *(_QWORD *)(v25 + 8);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v24 + 64))(v28, v23, v24);
  sub_1A5590C1C((uint64_t)v12, v28, (uint64_t)v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v24 + 128))(a1, v16, v18, v20, v22, v27, v15, v23, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1A55034FC((uint64_t)v15, type metadata accessor for MailboxTaskLogger);
}

uint64_t sub_1A55918B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  __int128 v27[2];

  v9 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A5590E20(a2);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  sub_1A5592008(a4, (uint64_t)v11);
  v24 = a5 + 16;
  v22 = *(_QWORD *)(a5 + 16);
  v23 = *(_QWORD *)(v24 + 8);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v23 + 64))(v27, v22, v23);
  sub_1A5590C1C((uint64_t)v11, v27, (uint64_t)v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v23 + 136))(a1, v15, v17, v19, v21, v14, v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1A55034FC((uint64_t)v14, type metadata accessor for MailboxTaskLogger);
}

void sub_1A5591A20(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[10];
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;

  v18[4] = a8;
  v18[8] = a5;
  v18[9] = a7;
  v21 = a6;
  v22 = a1;
  v18[6] = a3;
  v18[7] = a4;
  v10 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v10);
  v18[3] = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v12);
  v18[5] = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v14 = sub_1A594C354();
  v18[0] = *(_QWORD *)(v14 - 8);
  v18[1] = v14;
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  v18[2] = (char *)v18 - v16;
  v17 = *(int *)(a9 + 36);
  v19 = v9;
  v20 = *(_QWORD *)(v9 + v17 + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_1A55A7FD4();
}

uint64_t sub_1A5591BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v0, 1, v4) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 224) + 8))(v0, *(_QWORD *)(v5 - 216));
    sub_1A55923D0();
    swift_allocError();
    *(_DWORD *)v6 = *(_DWORD *)(v5 - 68);
    *(_BYTE *)(v6 + 4) = 0;
    return swift_willThrow();
  }
  else
  {
    v8 = *(_QWORD *)(v5 - 208);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v8, v0, v4);
    v9 = *(_QWORD *)(v5 - 200);
    sub_1A5592008(*(_QWORD *)(v5 - 192), v9);
    (*(void (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
    v10 = *(_QWORD *)(v5 - 184);
    sub_1A5590C1C(v9, (__int128 *)(v5 - 120), v10);
    (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v2 + 144))(v8, *(_QWORD *)(v5 - 176), *(_QWORD *)(v5 - 168), *(_QWORD *)(v5 - 160), *(unsigned int *)(v5 - 72), *(_QWORD *)(v5 - 152), v10, v1, v2);
    sub_1A55034FC(v10, type metadata accessor for MailboxTaskLogger);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v8, v4);
  }
}

uint64_t sub_1A5591D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  __int128 v17[2];

  v6 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5592008(a2, (uint64_t)v8);
  v14 = a3 + 16;
  v12 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(v14 + 8);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v13 + 64))(v17, v12, v13);
  sub_1A5590C1C((uint64_t)v8, v17, (uint64_t)v11);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v13 + 160))(a1, v11, v12, v13);
  return sub_1A55034FC((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
}

uint64_t sub_1A5591E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  __int128 v17[2];

  v6 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5592008(a2, (uint64_t)v8);
  v14 = a3 + 16;
  v12 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(v14 + 8);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v13 + 64))(v17, v12, v13);
  sub_1A5590C1C((uint64_t)v8, v17, (uint64_t)v11);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v13 + 168))(a1, v11, v12, v13);
  return sub_1A55034FC((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
}

double sub_1A5591F30@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  _OWORD v5[2];
  int v6;

  sub_1A5590DC0(a1, (uint64_t)v5);
  result = *(double *)v5;
  v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(_DWORD *)(a2 + 32) = v6;
  return result;
}

void sub_1A5591F90(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1A5591A20(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1A5591FB4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A55920E8(a1, a3, a4, a5);
}

uint64_t sub_1A5591FDC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1A85B1874](&unk_1A59A7F5C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A5592008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Task.Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A559204C()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t OUTLINED_FUNCTION_2_2()
{
  return 0;
}

BOOL sub_1A5592064(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
      && sub_1A54FF30C(*(_QWORD *)a1, *(_QWORD *)a2)
      && *(unsigned __int16 *)(a1 + 16) == *(unsigned __int16 *)(a2 + 16)
      && (*(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned int *)(a1 + 32) << 32)) == (*(unsigned int *)(a2 + 32) | ((unint64_t)*(unsigned int *)(a2 + 32) << 32))
      && sub_1A54FF30C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24));
}

void sub_1A55920E8(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[8];
  uint64_t v15;
  uint64_t v16;
  int v17;

  v14[5] = a3;
  v14[7] = a2;
  v17 = a1;
  v6 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v6);
  v14[4] = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v8);
  v14[6] = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v10 = sub_1A594C354();
  v14[1] = *(_QWORD *)(v10 - 8);
  v14[2] = v10;
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v14[3] = (char *)v14 - v12;
  v13 = *(int *)(a4 + 36);
  v15 = v4;
  v16 = *(_QWORD *)(v4 + v13 + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_1A55A816C();
}

uint64_t sub_1A55922B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 200) + 8))(v3, *(_QWORD *)(v5 - 192));
    sub_1A55923D0();
    swift_allocError();
    *(_DWORD *)v6 = *(_DWORD *)(v5 - 68);
    *(_BYTE *)(v6 + 4) = 1;
    return swift_willThrow();
  }
  else
  {
    v8 = *(_QWORD *)(v5 - 184);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v8, v3, v2);
    v9 = *(_QWORD *)(v5 - 176);
    sub_1A5592008(*(_QWORD *)(v5 - 168), v9);
    (*(void (**)(uint64_t, uint64_t))(v4 + 64))(v0, v4);
    v10 = *(_QWORD *)(v5 - 160);
    sub_1A5590C1C(v9, (__int128 *)(v5 - 120), v10);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v4 + 152))(v8, *(_QWORD *)(v5 - 152), v10, v0, v4);
    sub_1A55034FC(v10, type metadata accessor for MailboxTaskLogger);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v8, v2);
  }
}

unint64_t sub_1A55923D0()
{
  unint64_t result;

  result = qword_1EE7A8B20;
  if (!qword_1EE7A8B20)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A7FA8, &type metadata for AnyMailboxTask.Error);
    atomic_store(result, (unint64_t *)&qword_1EE7A8B20);
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyMailboxTask.Error()
{
  return &type metadata for AnyMailboxTask.Error;
}

uint64_t sub_1A5592424(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  return sub_1A5516874(a4, a2, a3);
}

uint64_t sub_1A5592448(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return sub_1A5512C14(a2, a3, (void (*)(uint64_t *__return_ptr, _QWORD *))sub_1A5599AD8);
}

uint64_t sub_1A5592494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t (**v12)(uint64_t, uint64_t, unsigned int, uint64_t);
  uint64_t (**v13)(uint64_t, uint64_t, unsigned int);
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t result;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  char v31;

  v6 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a3 + 56) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a3 + 64) = v9;
  v10 = (int *)type metadata accessor for RunningTask();
  v11 = a3 + v10[9];
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = (uint64_t (**)(uint64_t, uint64_t, unsigned int, uint64_t))(a3 + v10[12]);
  *v12 = sub_1A5592424;
  v12[1] = 0;
  v13 = (uint64_t (**)(uint64_t, uint64_t, unsigned int))(a3 + v10[13]);
  *v13 = sub_1A5592448;
  v13[1] = 0;
  sub_1A555301C(a1, (uint64_t)&v28);
  if ((v31 & 1) != 0)
  {
    v25 = v28;
    v26 = v29;
    v27 = v30;
    sub_1A550EF18((uint64_t)&v25, a3);
    *(_DWORD *)(a3 + 48) = 0;
    *(_WORD *)(a3 + 52) = 257;
    v14 = *((_QWORD *)&v26 + 1);
    v15 = v27;
    __swift_project_boxed_opaque_existential_1_0(&v25, *((uint64_t *)&v26 + 1));
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v15 + 16))(&v22, v14, v15);
    sub_1A550E928((uint64_t)&v25);
    v16 = v23;
    *(_OWORD *)(a3 + 72) = v22;
    *(_OWORD *)(a3 + 88) = v16;
    v17 = v24;
  }
  else
  {
    v22 = v28;
    v23 = v29;
    *(_QWORD *)&v24 = v30;
    sub_1A5599A9C((uint64_t)&v22, a3);
    *(_BYTE *)(a3 + 53) = 0;
    v18 = *((_QWORD *)&v23 + 1);
    v19 = v24;
    __swift_project_boxed_opaque_existential_1_0(&v22, *((uint64_t *)&v23 + 1));
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v19 + 16))(&v25, v18, v19);
    sub_1A5592E90((uint64_t)&v22);
    v20 = v26;
    *(_OWORD *)(a3 + 72) = v25;
    *(_OWORD *)(a3 + 88) = v20;
    v17 = v27;
  }
  *(_OWORD *)(a3 + 104) = v17;
  sub_1A555301C(a1, (uint64_t)&v28);
  sub_1A55A0DAC((uint64_t)&v28, a2, (uint64_t)v8);
  sub_1A5553058(a1);
  result = sub_1A54E3394((uint64_t)v8, a3 + v10[7], type metadata accessor for Task.Logger);
  *(_DWORD *)(a3 + v10[8]) = 0;
  *(_DWORD *)(a3 + v10[10]) = 1;
  *(_DWORD *)(a3 + v10[11]) = 1;
  return result;
}

uint64_t sub_1A55926B0()
{
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  return 35;
}

uint64_t sub_1A5592714()
{
  uint64_t v0;
  uint64_t v1;
  int8x16_t v2;
  __int128 v4;
  int8x16_t v5;
  int8x16_t v6;
  __int128 v7;
  int8x16_t v8;
  int8x16_t v9;
  unsigned int v10;
  unsigned __int8 v11;
  char v12;

  sub_1A556C73C(v0, (uint64_t)&v7);
  if (v12)
  {
    if (v12 == 1)
    {
      v5 = v8;
      v6 = v9;
      v4 = v7;
      if ((v11 & 1) != 0)
      {
        __swift_project_boxed_opaque_existential_1_0(&v4, v8.i64[1]);
        v1 = sub_1A594CC9C();
      }
      else
      {
        __swift_project_boxed_opaque_existential_1_0(&v4, v8.i64[1]);
        v1 = sub_1A594CC9C();
        sub_1A594C720();
        sub_1A594B5F8();
        sub_1A594C924();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A594B5F8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1A550E928((uint64_t)&v4);
    }
    else
    {
      v2 = vorrq_s8(v8, v9);
      if (v10 | ((unint64_t)v11 << 32) | *((_QWORD *)&v7 + 1) | *(_QWORD *)&vorr_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL)) | (unint64_t)v7)return 0x64656C696146;
      else
        return 0x6574656C706D6F43;
    }
  }
  else
  {
    v4 = v7;
    v5 = v8;
    v6.i64[0] = v9.i64[0];
    __swift_project_boxed_opaque_existential_1_0(&v4, v8.i64[1]);
    v1 = sub_1A594CC9C();
    sub_1A5592E90((uint64_t)&v4);
  }
  return v1;
}

uint64_t sub_1A5592950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int v37;
  _DWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[2];

  v1 = type metadata accessor for TaskHistory.Running(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (_DWORD *)((char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v52 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v52 - v8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v52 - v12;
  v57 = v0;
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v14 + 16);
  v59 = v1;
  v55 = v11;
  if (v15)
  {
    v53 = v14;
    v54 = v6;
    v56 = (unint64_t)v3;
    v16 = v14 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v17 = *(_QWORD *)(v11 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v58 = v17;
    do
    {
      sub_1A55034B8(v16, (uint64_t)v13, type metadata accessor for TaskHistory.Running);
      sub_1A55034B8((uint64_t)v13, (uint64_t)v9, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A55034FC((uint64_t)v9, type metadata accessor for TaskHistory.Running);
        sub_1A55034FC((uint64_t)v13, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        v19 = *v9;
        v20 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
        sub_1A55034FC((uint64_t)v9 + *(int *)(v20 + 64), type metadata accessor for ClientCommand);
        v21 = CommandID.tag.getter(v19);
        LOBYTE(v60[0]) = v21;
        HIDWORD(v60[0]) = HIDWORD(v21);
        v22 = sub_1A594B490();
        v24 = v23;
        sub_1A55034FC((uint64_t)v13, type metadata accessor for TaskHistory.Running);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_1A54EFEA0(0, v18[2] + 1, 1, v18);
        v26 = v18[2];
        v25 = v18[3];
        if (v26 >= v25 >> 1)
          v18 = sub_1A54EFEA0((_QWORD *)(v25 > 1), v26 + 1, 1, v18);
        v18[2] = v26 + 1;
        v27 = &v18[2 * v26];
        v27[4] = v22;
        v27[5] = v24;
        v17 = v58;
      }
      v16 += v17;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    v3 = (_DWORD *)v56;
    v6 = v54;
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v60[0] = v18;
  v28 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
  v56 = sub_1A54F70C0();
  v29 = sub_1A594B268();
  v31 = v30;
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v57 + 56);
  v33 = *(_QWORD *)(v32 + 16);
  if (v33)
  {
    v52 = v28;
    v53 = v29;
    v34 = v32 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
    v35 = *(_QWORD *)(v55 + 72);
    v54 = v31;
    v55 = v32;
    swift_bridgeObjectRetain_n();
    v36 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v58 = v35;
    do
    {
      sub_1A55034B8(v34, (uint64_t)v6, type metadata accessor for TaskHistory.Running);
      sub_1A55034B8((uint64_t)v6, (uint64_t)v3, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v37 = *v3;
        v38 = v3;
        swift_release();
        LODWORD(v60[0]) = v37;
        sub_1A5528CCC();
        v39 = sub_1A594B6DC();
        v40 = (uint64_t)v6;
        v41 = v39;
        v43 = v42;
        v44 = (char *)v40;
        sub_1A55034FC(v40, type metadata accessor for TaskHistory.Running);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v36 = sub_1A54EFEA0(0, v36[2] + 1, 1, v36);
        v46 = v36[2];
        v45 = v36[3];
        if (v46 >= v45 >> 1)
          v36 = sub_1A54EFEA0((_QWORD *)(v45 > 1), v46 + 1, 1, v36);
        v36[2] = v46 + 1;
        v47 = &v36[2 * v46];
        v47[4] = v41;
        v47[5] = v43;
        v3 = v38;
        v6 = v44;
        v35 = v58;
      }
      else
      {
        sub_1A55034FC((uint64_t)v3, type metadata accessor for TaskHistory.Running);
        sub_1A55034FC((uint64_t)v6, type metadata accessor for TaskHistory.Running);
      }
      v34 += v35;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v36 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v60[0] = v36;
  sub_1A594B268();
  swift_bridgeObjectRelease();
  v48 = sub_1A5592714();
  v50 = v49;
  v60[0] = 0;
  v60[1] = 0xE000000000000000;
  sub_1A594C720();
  swift_bridgeObjectRelease();
  strcpy((char *)v60, " commands: {");
  BYTE5(v60[1]) = 0;
  HIWORD(v60[1]) = -5120;
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  v60[0] = v48;
  v60[1] = v50;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v60[0];
}

uint64_t sub_1A5592E90(uint64_t a1)
{
  destroy for AnyAuthenticatedTask();
  return a1;
}

unint64_t sub_1A5592EC4(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  unint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t);
  unint64_t v39;
  uint64_t v40;
  void (*v41)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t);
  void (*v42)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  _BYTE v50[592];
  uint64_t v51;

  v3 = v2;
  v6 = type metadata accessor for Task.Logger(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = ((char *)&v38 - v11);
  result = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v38 - v14;
  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      v16 = *(_QWORD *)(a1 + 16);
      if ((*(_BYTE *)(a1 + 24) & 1) != 0)
      {
        sub_1A556C73C(v3, (uint64_t)&v43);
        if (v46)
        {
          swift_retain();
          sub_1A556C7D8((uint64_t)&v43);
        }
        else
        {
          v47 = v43;
          v48 = v44;
          v20 = v45;
          v49 = v45;
          v21 = *(_QWORD *)(v3 + 56);
          v51 = *(_QWORD *)(v3 + 64);
          v22 = *((_QWORD *)&v44 + 1);
          __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)&v47, *((uint64_t *)&v44 + 1));
          v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 64);
          swift_retain();
          v42(v16, v21, v51, v22, v20);
          sub_1A556C7D8(v3);
          v23 = v48;
          *(_OWORD *)v3 = v47;
          *(_OWORD *)(v3 + 16) = v23;
          *(_QWORD *)(v3 + 32) = v49;
          *(_BYTE *)(v3 + 53) = 0;
        }
        v24 = type metadata accessor for RunningTask();
        v25 = sub_1A55034B8(v3 + *(int *)(v24 + 28), (uint64_t)v15, type metadata accessor for Task.Logger);
        MEMORY[0x1E0C80A78](v25);
        *(&v38 - 2) = (void (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))v16;
        *(&v38 - 1) = (void (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))v15;
        sub_1A5593D5C(a1, (void (*)(__int128 *, uint64_t, uint64_t, unint64_t))sub_1A559C270, (uint64_t)(&v38 - 4));
        sub_1A55034FC((uint64_t)v15, type metadata accessor for Task.Logger);
        return sub_1A552469C(v16, 1);
      }
      else
      {
        v19 = type metadata accessor for RunningTask();
        sub_1A55034B8(v3 + *(int *)(v19 + 28), (uint64_t)v9, type metadata accessor for Task.Logger);
        sub_1A5594F3C((uint64_t)v9, v16, a1, a2);
        return sub_1A55034FC((uint64_t)v9, type metadata accessor for Task.Logger);
      }
    }
  }
  else
  {
    v17 = *(_QWORD *)(a1 + 24);
    v18 = *(_QWORD *)(a1 + 40);
    if (((1 << (v17 >> 60)) & 0x1E7) == 0)
    {
      v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 48);
      v51 = v18;
      v41 = (void (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))a2;
      if (v17 >> 60 == 3)
      {
        sub_1A552316C((const void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 16), v50);
        sub_1A556C73C(v3, (uint64_t)&v43);
        if (v46)
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A5541A18(v17);
          sub_1A5523B9C(v50, sub_1A55231A8);
          sub_1A556C7D8((uint64_t)&v43);
        }
        else
        {
          v47 = v43;
          v48 = v44;
          v32 = v45;
          v49 = v45;
          v33 = *(_QWORD *)(v3 + 56);
          v39 = *(_QWORD *)(v3 + 64);
          v40 = v33;
          v34 = *((_QWORD *)&v44 + 1);
          __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)&v47, *((uint64_t *)&v44 + 1));
          v38 = *(void (**)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))(v32 + 56);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A5541A18(v17);
          sub_1A5523B9C(v50, sub_1A55231A8);
          v38(v50, v40, v39, v34, v32);
          sub_1A556C7D8(v3);
          v35 = v48;
          *(_OWORD *)v3 = v47;
          *(_OWORD *)(v3 + 16) = v35;
          *(_QWORD *)(v3 + 32) = v49;
          *(_BYTE *)(v3 + 53) = 0;
        }
        v36 = type metadata accessor for RunningTask();
        v37 = sub_1A55034B8(v3 + *(int *)(v36 + 28), (uint64_t)v15, type metadata accessor for Task.Logger);
        MEMORY[0x1E0C80A78](v37);
        *(&v38 - 4) = v41;
        *(&v38 - 3) = (void (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))v50;
        *(&v38 - 2) = (void (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))v15;
        sub_1A5593D5C(a1, (void (*)(__int128 *, uint64_t, uint64_t, unint64_t))sub_1A559C350, (uint64_t)(&v38 - 6));
        sub_1A5523B9C(v50, sub_1A5523C88);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v31 = (uint64_t)v15;
      }
      else
      {
        v26 = *(_QWORD *)(v17 + 24);
        v38 = *(void (**)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))(v17 + 16);
        v39 = v26;
        v28 = *(_QWORD *)(v17 + 32);
        v27 = *(_QWORD *)(v17 + 40);
        LODWORD(v40) = *(unsigned __int8 *)(v17 + 48);
        v29 = type metadata accessor for RunningTask();
        sub_1A55034B8(v3 + *(int *)(v29 + 28), (uint64_t)v12, type metadata accessor for Task.Logger);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5541A18(v17);
        v30 = v26;
        LODWORD(v26) = v40;
        sub_1A559C2E8(v30, v28, v27, v40);
        sub_1A559444C(v12, (uint64_t)v38, v39, v28, v27, v26, a1, (uint64_t)v41);
        sub_1A559C31C(v39, v28, v27, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v31 = (uint64_t)v12;
      }
      sub_1A55034FC(v31, type metadata accessor for Task.Logger);
      return sub_1A5541AA0(v17);
    }
  }
  return result;
}

_QWORD *sub_1A55933B8(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  int i;
  uint64_t v25;
  BOOL v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  __int128 *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  _BYTE v48[440];
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  unsigned int v62;
  __int128 v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;

  if ((a4 & 0x100000000) != 0)
    return result;
  v9 = a4;
  v10 = (uint64_t)result;
  v66 = a6;
  v11 = result[3];
  v12 = result[4];
  __swift_project_boxed_opaque_existential_1_0(result, v11);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v12 + 32))(&v60, v11, v12);
  v64 = v61;
  v65 = v62;
  v63 = v60;
  sub_1A54F81BC((uint64_t)&v63);
  if (*(_BYTE *)(a5 + 168) != 1)
    return (_QWORD *)sub_1A54F81BC((uint64_t)&v64);
  v13 = *(_QWORD *)(a5 + 144);
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
    return (_QWORD *)sub_1A54F81BC((uint64_t)&v64);
  v45 = a7;
  v15 = v13 + 32;
  v16 = v65 | ((unint64_t)v65 << 32);
  v17 = *(_OWORD *)(v13 + 160);
  v56 = *(_OWORD *)(v13 + 144);
  v57 = v17;
  v18 = *(_OWORD *)(v13 + 192);
  v58 = *(_OWORD *)(v13 + 176);
  v59 = v18;
  v19 = *(_OWORD *)(v13 + 96);
  v52 = *(_OWORD *)(v13 + 80);
  v53 = v19;
  v20 = *(_OWORD *)(v13 + 128);
  v54 = *(_OWORD *)(v13 + 112);
  v55 = v20;
  v21 = *(_OWORD *)(v13 + 48);
  v49 = *(_OWORD *)(v13 + 32);
  v50 = v21;
  v51 = *(_OWORD *)(v13 + 64);
  v22 = 1;
  v23 = v55;
  if (!(_QWORD)v55)
    goto LABEL_6;
LABEL_5:
  swift_beginAccess();
  for (i = *(_DWORD *)(v23 + 16); ; i = 0)
  {
    if ((DWORD2(v50) | ((unint64_t)DWORD2(v50) << 32)) == v16)
    {
      v25 = *(_QWORD *)(v50 + 16);
      if (v25 == *(_QWORD *)(v64 + 16))
      {
        if (v25)
          v26 = (_QWORD)v50 == v64;
        else
          v26 = 1;
        if (!v26)
        {
          if (*(unsigned __int8 *)(v50 + 32) != *(unsigned __int8 *)(v64 + 32))
            goto LABEL_25;
          if (v25 != 1)
          {
            if (*(unsigned __int8 *)(v50 + 33) != *(unsigned __int8 *)(v64 + 33))
              goto LABEL_25;
            if (v25 != 2)
            {
              if (*(unsigned __int8 *)(v50 + 34) != *(unsigned __int8 *)(v64 + 34))
                goto LABEL_25;
              v27 = (unsigned __int8 *)(v50 + 35);
              v28 = (unsigned __int8 *)(v64 + 35);
              v29 = v25 - 3;
              while (v29)
              {
                v31 = *v27++;
                v30 = v31;
                v32 = *v28++;
                --v29;
                if (v30 != v32)
                  goto LABEL_25;
              }
            }
          }
        }
        if (v23 && i == v9)
          break;
      }
    }
LABEL_25:
    if (v22 == v14)
      return (_QWORD *)sub_1A54F81BC((uint64_t)&v64);
    v33 = (__int128 *)(v15 + 176 * v22);
    v34 = *v33;
    v35 = v33[2];
    v50 = v33[1];
    v51 = v35;
    v49 = v34;
    v36 = v33[3];
    v37 = v33[4];
    v38 = v33[6];
    v54 = v33[5];
    v55 = v38;
    v52 = v36;
    v53 = v37;
    v39 = v33[7];
    v40 = v33[8];
    v41 = v33[10];
    v58 = v33[9];
    v59 = v41;
    v56 = v39;
    v57 = v40;
    ++v22;
    v23 = v55;
    if ((_QWORD)v55)
      goto LABEL_5;
LABEL_6:
    ;
  }
  swift_beginAccess();
  sub_1A54E30E0(v23 + 24, (uint64_t)v48);
  v42 = *(_QWORD *)(v10 + 24);
  v43 = *(_QWORD *)(v10 + 32);
  __swift_mutable_project_boxed_opaque_existential_1_0(v10, v42);
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t))(v43 + 88);
  sub_1A54E3150((uint64_t)&v49);
  swift_retain();
  v44(v66, a2, a3, v48, v45, v42, v43);
  sub_1A54E311C((uint64_t)v48);
  swift_release();
  sub_1A54E31EC((uint64_t)&v49);
  return (_QWORD *)sub_1A54F81BC((uint64_t)&v64);
}

uint64_t sub_1A5593674(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *, _BYTE *, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  __int128 v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void (*v65)(_QWORD *, _BYTE *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  unsigned int v74;
  unsigned __int8 v75;
  char v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;

  v65 = a4;
  v66 = a5;
  v64 = a3;
  v67 = a2;
  v6 = type metadata accessor for TaskHistory.Running(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v48 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (uint64_t *)((char *)&v48 - v15);
  result = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v48 - v18;
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1)
      return result;
    v20 = v67;
    sub_1A556C73C(v67, (uint64_t)&v71);
    v21 = v80;
    if (v76 == 1)
    {
      v22 = v74;
      v23 = v75;
      v68 = v71;
      v69 = v72;
      v70 = v73;
      v24 = *(_QWORD *)(v20 + 56);
      v25 = *(_QWORD *)(v20 + 64);
      LOBYTE(v71) = v75;
      sub_1A5597844(&v68, v24, v25, v74 | ((unint64_t)v75 << 32), v64, v65, v66);
      if (v21)
        return sub_1A550E928((uint64_t)&v68);
      result = sub_1A556C7D8(v20);
      v36 = v69;
      *(_OWORD *)v20 = v68;
      *(_OWORD *)(v20 + 16) = v36;
      *(_OWORD *)(v20 + 32) = v70;
      *(_DWORD *)(v20 + 48) = v22;
      *(_BYTE *)(v20 + 52) = v23;
      *(_BYTE *)(v20 + 53) = 1;
      return result;
    }
    return sub_1A556C7D8((uint64_t)&v71);
  }
  v62 = *(unsigned int *)(a1 + 16);
  v63 = *(_QWORD *)(a1 + 24);
  v26 = *(_QWORD *)(a1 + 40);
  v60 = *(_QWORD *)(a1 + 48);
  v61 = v26;
  v27 = v67;
  sub_1A556C73C(v67, (uint64_t)&v71);
  if (v76 != 1)
    return sub_1A556C7D8((uint64_t)&v71);
  v77 = v71;
  v78 = v72;
  v79 = v73;
  if ((v75 & 1) != 0 || (_DWORD)v62 != v74)
    return sub_1A550E928((uint64_t)&v77);
  v28 = *(_QWORD *)(v27 + 56);
  v58 = *(_QWORD *)(v27 + 64);
  v59 = v28;
  if (v63 >> 60 != 3
    || (sub_1A552316C((const void *)((v63 & 0xFFFFFFFFFFFFFFFLL) + 16), &v68),
        sub_1A552316C(&v68, &v71),
        sub_1A5523B90((uint64_t)&v71) != 12))
  {
    sub_1A5541A18(v63);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v40 = v80;
LABEL_27:
    v41 = v62;
    LOBYTE(v71) = 0;
    sub_1A5597844(&v77, v59, v58, v62, v64, v65, v66);
    if (v40)
    {
      sub_1A5541AA0(v63);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1A550E928((uint64_t)&v77);
    }
    else
    {
      sub_1A556C7D8(v27);
      v42 = v78;
      *(_OWORD *)v27 = v77;
      *(_OWORD *)(v27 + 16) = v42;
      *(_OWORD *)(v27 + 32) = v79;
      sub_1A5541AA0(v63);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *(_DWORD *)(v27 + 48) = v41;
      *(_WORD *)(v27 + 52) = 256;
    }
    return result;
  }
  v29 = sub_1A5524678((uint64_t)&v71);
  v30 = *(_QWORD *)(v29 + 8);
  if (!v30)
  {
    v43 = v63;
    sub_1A5541A18(v63);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_32:
    sub_1A550E928((uint64_t)&v77);
    sub_1A5541AA0(v43);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v55 = *(_QWORD *)v29;
  v31 = *(_QWORD *)(v29 + 24);
  v53 = *(_QWORD *)(v29 + 16);
  v52 = *(unsigned __int8 *)(v29 + 32);
  sub_1A55235F0(v55, v30);
  sub_1A5541A18(v63);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v50 = v31;
  sub_1A55235F0(v55, v30);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5523B9C(&v68, sub_1A55231A8);
  v32 = Tag.init(_:)(v55, v30);
  if ((v33 & 1) != 0 || (v57 = *(_QWORD *)(v59 + 16)) == 0)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A55240D4(v55, v30);
    sub_1A5523B9C(&v68, sub_1A5523C88);
    v43 = v63;
    goto LABEL_32;
  }
  v49 = v30;
  v54 = v32;
  v51 = (unint64_t)v32 >> 32;
  v34 = v59 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v56 = *(_QWORD *)(v7 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v35 = 0;
  while (1)
  {
    sub_1A55034B8(v34, (uint64_t)v19, type metadata accessor for TaskHistory.Running);
    sub_1A55034B8((uint64_t)v19, (uint64_t)v16, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55034FC((uint64_t)v16, type metadata accessor for TaskHistory.Running);
LABEL_21:
    sub_1A55034FC((uint64_t)v19, type metadata accessor for TaskHistory.Running);
    swift_bridgeObjectRelease();
    ++v35;
    v34 += v56;
    if (v57 == v35)
      goto LABEL_25;
  }
  v37 = *v16;
  v38 = (uint64_t)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55034FC(v38, type metadata accessor for ClientCommand);
  v39 = CommandID.tag.getter(v37);
  if (__PAIR64__(HIDWORD(v39), v39) != __PAIR64__(v51, v54))
    goto LABEL_21;
  sub_1A55034FC((uint64_t)v19, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  if (v57 == v35)
  {
LABEL_25:
    v30 = v49;
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  if (v35 >= v57)
  {
    __break(1u);
    goto LABEL_38;
  }
  sub_1A55034B8(v34, (uint64_t)v13, type metadata accessor for TaskHistory.Running);
  sub_1A55034B8((uint64_t)v13, (uint64_t)v10, type metadata accessor for TaskHistory.Running);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
LABEL_38:
    sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Running);
    goto LABEL_39;
  }
  v44 = *v10;
  v45 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
  sub_1A55034FC((uint64_t)v10 + *(int *)(v45 + 64), type metadata accessor for ClientCommand);
  v46 = CommandID.tag.getter(v44);
  v27 = v67;
  if (__PAIR64__(HIDWORD(v46), v46) == __PAIR64__(v51, v54))
  {
    sub_1A55034FC((uint64_t)v13, type metadata accessor for TaskHistory.Running);
    v47 = v49;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A55240D4(v55, v47);
    sub_1A5523B9C(&v68, sub_1A5523C88);
    v40 = v80;
    goto LABEL_27;
  }
LABEL_39:
  result = sub_1A55034FC((uint64_t)v13, type metadata accessor for TaskHistory.Running);
  __break(1u);
  return result;
}

uint64_t sub_1A5593D5C(unint64_t a1, void (*a2)(__int128 *, uint64_t, uint64_t, unint64_t), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void (*v65)(__int128 *, uint64_t, uint64_t, unint64_t);
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  unsigned int v73;
  unsigned __int8 v74;
  char v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;

  v65 = a2;
  v64 = a3;
  v4 = type metadata accessor for TaskHistory.Running(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v47 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (uint64_t *)((char *)&v47 - v13);
  result = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v47 - v16;
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1)
      return result;
    v18 = v66;
    sub_1A556C73C(v66, (uint64_t)&v70);
    v19 = v79;
    if (v75 == 1)
    {
      v20 = v73;
      v21 = v74;
      v67 = v70;
      v68 = v71;
      v69 = v72;
      v22 = *(_QWORD *)(v18 + 56);
      v23 = *(_QWORD *)(v18 + 64);
      LOBYTE(v70) = v74;
      v65(&v67, v22, v23, v73 | ((unint64_t)v74 << 32));
      if (v19)
        return sub_1A550E928((uint64_t)&v67);
      result = sub_1A556C7D8(v18);
      v35 = v68;
      *(_OWORD *)v18 = v67;
      *(_OWORD *)(v18 + 16) = v35;
      *(_OWORD *)(v18 + 32) = v69;
      *(_DWORD *)(v18 + 48) = v20;
      *(_BYTE *)(v18 + 52) = v21;
      *(_BYTE *)(v18 + 53) = 1;
      return result;
    }
    return sub_1A556C7D8((uint64_t)&v70);
  }
  v63 = *(unsigned int *)(a1 + 16);
  v24 = *(_QWORD *)(a1 + 24);
  v61 = *(_QWORD *)(a1 + 40);
  v62 = v24;
  v60 = *(_QWORD *)(a1 + 48);
  v25 = v66;
  sub_1A556C73C(v66, (uint64_t)&v70);
  if (v75 != 1)
    return sub_1A556C7D8((uint64_t)&v70);
  v76 = v70;
  v77 = v71;
  v78 = v72;
  if ((v74 & 1) != 0 || (_DWORD)v63 != v73)
    return sub_1A550E928((uint64_t)&v76);
  v26 = *(_QWORD *)(v25 + 56);
  v58 = *(_QWORD *)(v25 + 64);
  v59 = v26;
  v27 = v62;
  if (v62 >> 60 != 3)
  {
    sub_1A5541A18(v62);
    goto LABEL_28;
  }
  sub_1A552316C((const void *)((v62 & 0xFFFFFFFFFFFFFFFLL) + 16), &v67);
  sub_1A552316C(&v67, &v70);
  if (sub_1A5523B90((uint64_t)&v70) != 12)
  {
    sub_1A5541A18(v27);
LABEL_28:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_29:
    v38 = v63;
    LOBYTE(v70) = 0;
    v39 = v79;
    v65(&v76, v59, v58, v63);
    if (v39)
    {
      sub_1A5541AA0(v62);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1A550E928((uint64_t)&v76);
    }
    else
    {
      v40 = v66;
      sub_1A556C7D8(v66);
      v41 = v77;
      *(_OWORD *)v40 = v76;
      *(_OWORD *)(v40 + 16) = v41;
      *(_OWORD *)(v40 + 32) = v78;
      sub_1A5541AA0(v62);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *(_DWORD *)(v40 + 48) = v38;
      *(_WORD *)(v40 + 52) = 256;
    }
    return result;
  }
  v28 = sub_1A5524678((uint64_t)&v70);
  v29 = *(_QWORD *)(v28 + 8);
  if (!v29)
  {
    sub_1A5541A18(v27);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v42 = v27;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_34;
  }
  v53 = *(_QWORD *)v28;
  v30 = *(_QWORD *)(v28 + 16);
  v50 = *(_QWORD *)(v28 + 24);
  v51 = v30;
  v49 = *(unsigned __int8 *)(v28 + 32);
  sub_1A55235F0(v53, v29);
  sub_1A5541A18(v27);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55235F0(v53, v29);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5523B9C(&v67, sub_1A55231A8);
  v31 = Tag.init(_:)(v53, v29);
  if ((v32 & 1) != 0 || (v57 = *(_QWORD *)(v59 + 16)) == 0)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A55240D4(v53, v29);
    sub_1A5523B9C(&v67, sub_1A5523C88);
    v42 = v62;
LABEL_34:
    sub_1A550E928((uint64_t)&v76);
    sub_1A5541AA0(v42);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v52 = v31;
  v47 = v29;
  v48 = (unint64_t)v31 >> 32;
  v33 = v59 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v56 = *(_QWORD *)(v5 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v34 = 0;
  v55 = v11;
  while (1)
  {
    sub_1A55034B8(v33, (uint64_t)v17, type metadata accessor for TaskHistory.Running);
    sub_1A55034B8((uint64_t)v17, (uint64_t)v14, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55034FC((uint64_t)v14, type metadata accessor for TaskHistory.Running);
LABEL_21:
    sub_1A55034FC((uint64_t)v17, type metadata accessor for TaskHistory.Running);
    v11 = v55;
    swift_bridgeObjectRelease();
    ++v34;
    v33 += v56;
    if (v57 == v34)
      goto LABEL_25;
  }
  v54 = *v14;
  v36 = (uint64_t)v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55034FC(v36, type metadata accessor for ClientCommand);
  v37 = CommandID.tag.getter(v54);
  if (__PAIR64__(HIDWORD(v37), v37) != __PAIR64__(v48, v52))
    goto LABEL_21;
  sub_1A55034FC((uint64_t)v17, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  if (v57 == v34)
  {
LABEL_25:
    v29 = v47;
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  if (v34 >= v57)
  {
    __break(1u);
    goto LABEL_40;
  }
  sub_1A55034B8(v33, (uint64_t)v11, type metadata accessor for TaskHistory.Running);
  sub_1A55034B8((uint64_t)v11, (uint64_t)v8, type metadata accessor for TaskHistory.Running);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
LABEL_40:
    sub_1A55034FC((uint64_t)v8, type metadata accessor for TaskHistory.Running);
    goto LABEL_41;
  }
  v43 = *v8;
  v44 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
  sub_1A55034FC((uint64_t)v8 + *(int *)(v44 + 64), type metadata accessor for ClientCommand);
  v45 = CommandID.tag.getter(v43);
  if (__PAIR64__(HIDWORD(v45), v45) == __PAIR64__(v48, v52))
  {
    sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Running);
    v46 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A55240D4(v53, v46);
    sub_1A5523B9C(&v67, sub_1A5523C88);
    goto LABEL_29;
  }
LABEL_41:
  result = sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Running);
  __break(1u);
  return result;
}

uint64_t sub_1A559444C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_t v32;
  NSObject *v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  void (*isa)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  NSObject *v49;
  uint64_t v50;
  int v51;
  char *v52;
  NSObject *v53;
  os_log_type_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  NSObject *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  __int128 v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  os_log_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  os_log_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  NSObject *v113;
  char v114;
  __int128 v115;
  __int128 v116;
  NSObject *v117;
  uint64_t v118;

  v103 = a7;
  v104 = a8;
  LODWORD(v105) = a6;
  v109 = a4;
  v110 = a5;
  v108 = a3;
  v106 = a1;
  v102 = sub_1A594A764();
  v101 = *(_QWORD *)(v102 - 8);
  v10 = MEMORY[0x1E0C80A78](v102);
  v12 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v96 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7971E0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (_DWORD *)((char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = type metadata accessor for ClientCommand(0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = ((char *)&v96 - v23);
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v96 - v25;
  v107 = v8;
  sub_1A55A2E14(a2, v17);
  v27 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795C00);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v17, 1, v27) == 1)
    return sub_1A5510284((uint64_t)v17, &qword_1EE7971E0);
  v100 = v24;
  v97 = v21;
  v99 = v14;
  v98 = v12;
  v96 = a2;
  v29 = *v17;
  sub_1A54E3394((uint64_t)v17 + *(int *)(v27 + 48), (uint64_t)v26, type metadata accessor for ClientCommand);
  v30 = v107;
  sub_1A556C73C(v107, (uint64_t)&v111);
  v31 = (uint64_t)v26;
  if (v114)
  {
    sub_1A556C7D8((uint64_t)&v111);
    v32 = v100;
    v33 = v106;
    v34 = v103;
    v35 = v105;
    goto LABEL_5;
  }
  v115 = v111;
  v116 = v112;
  v41 = v113;
  v117 = v113;
  v42 = *((_QWORD *)&v112 + 1);
  __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)&v115, *((uint64_t *)&v112 + 1));
  isa = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v41[9].isa;
  v95 = v41;
  v35 = v105;
  v33 = v106;
  v44 = v118;
  isa(v29, v26, v108, v109, v110, v105, v106, v42, v95);
  v118 = v44;
  if (!v44)
  {
    sub_1A556C7D8(v30);
    v70 = v116;
    *(_OWORD *)v30 = v115;
    *(_OWORD *)(v30 + 16) = v70;
    *(_QWORD *)(v30 + 32) = v117;
    *(_BYTE *)(v30 + 53) = 0;
    v31 = (uint64_t)v26;
    v32 = v100;
    v34 = v103;
LABEL_5:
    v36 = MEMORY[0x1E0C80A78](v34);
    *((_DWORD *)&v96 - 16) = v29;
    v37 = v108;
    *(&v96 - 7) = v31;
    *(&v96 - 6) = v37;
    v38 = v110;
    *(&v96 - 5) = v109;
    *(&v96 - 4) = v38;
    *((_BYTE *)&v96 - 24) = v35;
    v95 = v33;
    v39 = v118;
    sub_1A5593674(v36, v30, v40, (void (*)(_QWORD *, _BYTE *, uint64_t, uint64_t))sub_1A559C380, (uint64_t)(&v96 - 10));
    v118 = v39;
    if (v39)
      return sub_1A55034FC(v31, type metadata accessor for ClientCommand);
    v46 = (char *)v33 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
    v47 = *((_QWORD *)v46 + 1);
    v48 = *((_QWORD *)v46 + 2);
    v108 = *(_QWORD *)v46;
    v109 = v47;
    v49 = v33;
    v50 = *((_QWORD *)v46 + 4);
    v51 = *((_DWORD *)v46 + 10);
    v110 = *((_QWORD *)v46 + 3);
    if (v110 < 0)
    {
      v71 = v101;
      v72 = v98;
      v73 = v102;
      (*(void (**)(char *, NSObject *, uint64_t))(v101 + 16))(v98, v49, v102);
      LODWORD(v106) = v51;
      sub_1A559C124(v108, v109, v48, v110);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v74 = (uint64_t)v97;
      sub_1A55034B8(v31, (uint64_t)v97, type metadata accessor for ClientCommand);
      v75 = sub_1A594A74C();
      v76 = sub_1A594C000();
      LODWORD(v104) = v76;
      if (!os_log_type_enabled(v75, v76))
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_1A55034FC(v74, type metadata accessor for ClientCommand);

        v68 = *(void (**)(char *, uint64_t))(v71 + 8);
        v69 = v72;
        v94 = v73;
        goto LABEL_18;
      }
      v77 = swift_slowAlloc();
      v100 = v75;
      v78 = v48;
      v79 = v77;
      v103 = swift_slowAlloc();
      *(_QWORD *)&v115 = v103;
      *(_DWORD *)v79 = 68160003;
      LODWORD(v111) = 2;
      v105 = v31;
      sub_1A594C3CC();
      *(_WORD *)(v79 + 8) = 256;
      LOBYTE(v111) = v108;
      sub_1A594C3CC();
      *(_WORD *)(v79 + 11) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      *(_QWORD *)&v111 = sub_1A55791B0(v109, v78, (uint64_t *)&v115);
      LODWORD(v107) = v29;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 21) = 1040;
      LODWORD(v111) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v79 + 27) = 512;
      LOWORD(v111) = v110;
      sub_1A594C3CC();
      *(_WORD *)(v79 + 31) = 2160;
      *(_QWORD *)&v111 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v79 + 41) = 2085;
      *(_QWORD *)&v111 = v50;
      DWORD2(v111) = (_DWORD)v106;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v80 = sub_1A594B4A8();
      *(_QWORD *)&v111 = sub_1A55791B0(v80, v81, (uint64_t *)&v115);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 51) = 2082;
      v82 = (uint64_t)v97;
      ClientCommand.logIdentifier.getter();
      *(_QWORD *)&v111 = sub_1A55791B0(v83, v84, (uint64_t *)&v115);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v82, type metadata accessor for ClientCommand);
      *(_WORD *)(v79 + 61) = 2082;
      v85 = CommandID.tag.getter(v96);
      v86 = Tag.debugDescription.getter(v85 & 0xFFFFFFFF000000FFLL);
      *(_QWORD *)&v111 = sub_1A55791B0(v86, v87, (uint64_t *)&v115);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 71) = 1024;
      LODWORD(v111) = v107;
      v31 = v105;
      sub_1A594C3CC();
      v88 = v100;
      _os_log_impl(&dword_1A4F90000, v100, (os_log_type_t)v104, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Completed '%{public}s' (%{public}s, #%u)", (uint8_t *)v79, 0x4Du);
      v89 = v103;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v89, -1, -1);
      MEMORY[0x1A85B1964](v79, -1, -1);

      v68 = *(void (**)(char *, uint64_t))(v101 + 8);
      v69 = v98;
    }
    else
    {
      LODWORD(v107) = v29;
      v52 = v99;
      (*(void (**)(char *, NSObject *, uint64_t))(v101 + 16))(v99, v49, v102);
      sub_1A559C124(v108, v109, v48, v110);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A55034B8(v31, (uint64_t)v32, type metadata accessor for ClientCommand);
      v53 = sub_1A594A74C();
      v54 = sub_1A594C000();
      v55 = v54;
      v106 = v53;
      if (os_log_type_enabled(v53, v54))
      {
        v56 = swift_slowAlloc();
        v104 = swift_slowAlloc();
        *(_QWORD *)&v111 = v104;
        *(_DWORD *)v56 = 68158978;
        LODWORD(v115) = 2;
        LODWORD(v103) = v55;
        v57 = (uint64_t)v32;
        v105 = v31;
        v100 = (os_log_t)((char *)&v115 + 4);
        sub_1A594C3CC();
        *(_WORD *)(v56 + 8) = 256;
        v58 = v108;
        LOBYTE(v115) = v108;
        sub_1A594C3CC();
        *(_WORD *)(v56 + 11) = 2082;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v59 = v109;
        *(_QWORD *)&v115 = sub_1A55791B0(v109, v48, (uint64_t *)&v111);
        sub_1A594C3CC();
        v60 = v110;
        sub_1A559C154(v58, v59, v48, v110);
        sub_1A559C154(v58, v59, v48, v60);
        swift_bridgeObjectRelease();
        *(_WORD *)(v56 + 21) = 2082;
        ClientCommand.logIdentifier.getter();
        *(_QWORD *)&v115 = sub_1A55791B0(v61, v62, (uint64_t *)&v111);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v57, type metadata accessor for ClientCommand);
        *(_WORD *)(v56 + 31) = 2082;
        v63 = CommandID.tag.getter(v96);
        v64 = Tag.debugDescription.getter(v63 & 0xFFFFFFFF000000FFLL);
        *(_QWORD *)&v115 = sub_1A55791B0(v64, v65, (uint64_t *)&v111);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v56 + 41) = 1024;
        LODWORD(v115) = v107;
        v31 = v105;
        sub_1A594C3CC();
        v66 = v106;
        _os_log_impl(&dword_1A4F90000, v106, (os_log_type_t)v103, "[%.*hhx-%{public}s] Completed '%{public}s' (%{public}s, #%u)", (uint8_t *)v56, 0x2Fu);
        v67 = v104;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v67, -1, -1);
        MEMORY[0x1A85B1964](v56, -1, -1);

        v68 = *(void (**)(char *, uint64_t))(v101 + 8);
        v69 = v99;
      }
      else
      {
        v90 = v108;
        v91 = (uint64_t)v32;
        v93 = v109;
        v92 = v110;
        sub_1A559C154(v108, v109, v48, v110);
        sub_1A559C154(v90, v93, v48, v92);
        sub_1A55034FC(v91, type metadata accessor for ClientCommand);

        v68 = *(void (**)(char *, uint64_t))(v101 + 8);
        v69 = v52;
      }
    }
    v94 = v102;
LABEL_18:
    v68(v69, v94);
    v45 = v31;
    return sub_1A55034FC(v45, type metadata accessor for ClientCommand);
  }
  sub_1A5592E90((uint64_t)&v115);
  v45 = (uint64_t)v26;
  return sub_1A55034FC(v45, type metadata accessor for ClientCommand);
}

BOOL sub_1A5594F3C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  os_log_t v69;
  NSObject *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE v76[4];
  int v77;
  char *v78;
  os_log_t v79;
  uint64_t v80;
  NSObject *v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  char v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;

  v88 = a4;
  v8 = sub_1A594A764();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = &v76[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v14 = &v76[-v13];
  v15 = sub_1A55A3100(a2);
  v89 = v16 & 0xF000000000000007;
  if ((v16 & 0xF000000000000007) != 0xF000000000000007)
  {
    v17 = v16;
    v87 = a3;
    v84 = v14;
    v85 = v9;
    v18 = v12;
    v19 = v15;
    sub_1A556C73C(v4, (uint64_t)&v90);
    v86 = v8;
    if (v93)
    {
      sub_1A556C7D8((uint64_t)&v90);
    }
    else
    {
      v94 = v90;
      v95 = v91;
      v25 = v92;
      v96 = v92;
      v26 = *((_QWORD *)&v91 + 1);
      __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)&v94, *((uint64_t *)&v91 + 1));
      v27 = v97;
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v25 + 80))(v19, v17, v26, v25);
      v97 = v27;
      if (v27)
      {
        sub_1A5592E90((uint64_t)&v94);
        sub_1A559C4D8(v19, v17);
        return v89 != 0xF000000000000007;
      }
      sub_1A556C7D8(v4);
      v52 = v95;
      *(_OWORD *)v4 = v94;
      *(_OWORD *)(v4 + 16) = v52;
      *(_QWORD *)(v4 + 32) = v96;
      *(_BYTE *)(v4 + 53) = 0;
    }
    v20 = v19;
    v21 = (uint64_t)v18;
    v22 = MEMORY[0x1E0C80A78](v87);
    *(_DWORD *)&v76[-32] = v20;
    *(_QWORD *)&v76[-24] = v17;
    *(_QWORD *)&v76[-16] = a1;
    v23 = v97;
    sub_1A5593674(v22, v4, v24, (void (*)(_QWORD *, _BYTE *, uint64_t, uint64_t))sub_1A559C460, (uint64_t)&v76[-48]);
    v97 = v23;
    if (v23)
    {
      sub_1A559C4D8(v20, v17);
      return v89 != 0xF000000000000007;
    }
    v28 = a1 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
    v29 = *(_QWORD *)v28;
    v30 = *(_QWORD *)(v28 + 8);
    v82 = v30;
    v83 = v29;
    v31 = *(_QWORD *)(v28 + 16);
    v32 = *(_QWORD *)(v28 + 32);
    v87 = *(_QWORD *)(v28 + 24);
    v88 = v32;
    v33 = *(_DWORD *)(v28 + 40);
    if (v87 < 0)
    {
      v53 = a1;
      v55 = v85;
      v54 = v86;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 16))(v21, v53, v86);
      sub_1A559C124(v83, v30, v31, v87);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A559C4F4(v20, v17);
      swift_retain();
      v56 = v21;
      v57 = v17;
      v58 = sub_1A594A74C();
      v59 = sub_1A594C000();
      LODWORD(v84) = v59;
      if (!os_log_type_enabled(v58, v59))
      {
        sub_1A559C4D8(v20, v17);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_1A559C4D8(v20, v17);
        sub_1A559C4D8(v20, v17);

        v51 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
        v50 = v56;
        v74 = v54;
        goto LABEL_17;
      }
      v60 = swift_slowAlloc();
      v80 = v20;
      v61 = v60;
      v81 = swift_slowAlloc();
      *(_QWORD *)&v94 = v81;
      *(_DWORD *)v61 = 68159747;
      LODWORD(v78) = v33;
      LODWORD(v90) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v61 + 8) = 256;
      LOBYTE(v90) = v83;
      sub_1A594C3CC();
      *(_WORD *)(v61 + 11) = 2082;
      v79 = v58;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      *(_QWORD *)&v90 = sub_1A55791B0(v82, v31, (uint64_t *)&v94);
      v83 = v56;
      v62 = v88;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v61 + 21) = 1040;
      LODWORD(v90) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v61 + 27) = 512;
      LOWORD(v90) = v87;
      sub_1A594C3CC();
      *(_WORD *)(v61 + 31) = 2160;
      *(_QWORD *)&v90 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v61 + 41) = 2085;
      *(_QWORD *)&v90 = v62;
      DWORD2(v90) = (_DWORD)v78;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v63 = sub_1A594B4A8();
      *(_QWORD *)&v90 = sub_1A55791B0(v63, v64, (uint64_t *)&v94);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v61 + 51) = 2082;
      v65 = Action.kind.getter(v57);
      v66 = Action.Kind.description.getter(v65);
      *(_QWORD *)&v90 = sub_1A55791B0(v66, v67, (uint64_t *)&v94);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v68 = v80;
      sub_1A559C4D8(v80, v57);
      sub_1A559C4D8(v68, v57);
      *(_WORD *)(v61 + 61) = 1024;
      LODWORD(v90) = v68;
      sub_1A594C3CC();
      v69 = v79;
      _os_log_impl(&dword_1A4F90000, v79, (os_log_type_t)v84, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Completed action '%{public}s' (#%u)", (uint8_t *)v61, 0x43u);
      v70 = v81;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v70, -1, -1);
      MEMORY[0x1A85B1964](v61, -1, -1);

      sub_1A559C4D8(v68, v57);
      v51 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
      v50 = v83;
    }
    else
    {
      v34 = a1;
      v35 = (uint64_t)v84;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v85 + 16))(v84, v34, v86);
      sub_1A559C124(v83, v30, v31, v87);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A559C4F4(v20, v17);
      swift_retain();
      v36 = v20;
      v37 = sub_1A594A74C();
      v38 = sub_1A594C000();
      v39 = v38;
      v81 = v37;
      if (os_log_type_enabled(v37, v38))
      {
        v40 = swift_slowAlloc();
        v79 = (os_log_t)swift_slowAlloc();
        *(_QWORD *)&v90 = v79;
        *(_DWORD *)v40 = 68158722;
        LODWORD(v94) = 2;
        v78 = (char *)&v94 + 4;
        sub_1A594C3CC();
        *(_WORD *)(v40 + 8) = 256;
        v41 = v83;
        LOBYTE(v94) = v83;
        sub_1A594C3CC();
        *(_WORD *)(v40 + 11) = 2082;
        v80 = v20;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v77 = v39;
        v42 = v82;
        *(_QWORD *)&v94 = sub_1A55791B0(v82, v31, (uint64_t *)&v90);
        sub_1A594C3CC();
        v43 = v87;
        sub_1A559C154(v41, v42, v31, v87);
        sub_1A559C154(v41, v42, v31, v43);
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 21) = 2082;
        v44 = Action.kind.getter(v17);
        v45 = Action.Kind.description.getter(v44);
        *(_QWORD *)&v94 = sub_1A55791B0(v45, v46, (uint64_t *)&v90);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        v47 = v80;
        sub_1A559C4D8(v80, v17);
        sub_1A559C4D8(v47, v17);
        *(_WORD *)(v40 + 31) = 1024;
        LODWORD(v94) = v47;
        sub_1A594C3CC();
        v48 = v81;
        _os_log_impl(&dword_1A4F90000, v81, (os_log_type_t)v77, "[%.*hhx-%{public}s] Completed action '%{public}s' (#%u)", (uint8_t *)v40, 0x25u);
        v49 = v79;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v49, -1, -1);
        MEMORY[0x1A85B1964](v40, -1, -1);

        sub_1A559C4D8(v47, v17);
        v50 = (uint64_t)v84;
        v51 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
      }
      else
      {
        sub_1A559C4D8(v20, v17);
        v72 = v82;
        v71 = v83;
        v73 = v87;
        sub_1A559C154(v83, v82, v31, v87);
        sub_1A559C154(v71, v72, v31, v73);
        sub_1A559C4D8(v36, v17);
        sub_1A559C4D8(v36, v17);

        v51 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
        v50 = v35;
      }
    }
    v74 = v86;
LABEL_17:
    v51(v50, v74);
  }
  return v89 != 0xF000000000000007;
}

uint64_t sub_1A559587C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;
  _OWORD v33[3];
  __int128 v34;
  uint64_t v35;
  unsigned int v36;
  __int128 v37;
  uint64_t v38;
  unsigned int v39;

  v4 = v3;
  sub_1A556C73C(v3, (uint64_t)&v29);
  if (v32 != 1)
    return sub_1A556C7D8((uint64_t)&v29);
  v33[1] = v30;
  v33[2] = v31;
  v33[0] = v29;
  v8 = *((_QWORD *)&v30 + 1);
  v9 = v31;
  __swift_project_boxed_opaque_existential_1_0(v33, *((uint64_t *)&v30 + 1));
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v9 + 32))(&v34, v8, v9);
  v38 = v35;
  v39 = v36;
  v37 = v34;
  sub_1A54F81BC((uint64_t)&v37);
  if ((v39 | ((unint64_t)v39 << 32)) == (a2 | ((unint64_t)a2 << 32)))
  {
    v10 = sub_1A54FF30C(v38, a1);
    sub_1A54F81BC((uint64_t)&v38);
    if (v10)
    {
      swift_retain_n();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A550EF18((uint64_t)v33, (uint64_t)&v29);
      swift_bridgeObjectRetain_n();
      v11 = sub_1A594A74C();
      v12 = sub_1A594C000();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = swift_slowAlloc();
        v24 = swift_slowAlloc();
        v25 = v24;
        *(_DWORD *)v13 = 68158723;
        sub_1A594C3CC();
        *(_WORD *)(v13 + 8) = 256;
        swift_release();
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v13 + 11) = 2160;
        sub_1A594C3CC();
        *(_WORD *)(v13 + 21) = 2085;
        *(_QWORD *)&v26 = a1;
        DWORD2(v26) = a2;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v14 = sub_1A594B4A8();
        *(_QWORD *)&v26 = sub_1A55791B0(v14, v15, &v25);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 31) = 2082;
        v16 = *((_QWORD *)&v30 + 1);
        v17 = v31;
        __swift_project_boxed_opaque_existential_1_0(&v29, *((uint64_t *)&v30 + 1));
        v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 64))(v16, v17);
        *(_QWORD *)&v26 = sub_1A55791B0(v18, v19, &v25);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A550E928((uint64_t)&v29);
        _os_log_impl(&dword_1A4F90000, v11, v12, "[%.*hhx] [%{sensitive,mask.mailbox}s] Marking task '%{public}s' as failed because we de-selected its mailbox.", (uint8_t *)v13, 0x29u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v24, -1, -1);
        MEMORY[0x1A85B1964](v13, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n();

        swift_release_n();
        sub_1A550E928((uint64_t)&v29);
      }
      sub_1A556C73C(v4, (uint64_t)&v29);
      if (v32)
      {
        if (v32 == 1)
        {
          v26 = v29;
          v27 = v30;
          v28 = v31;
          v21 = v4 + *(int *)(type metadata accessor for RunningTask() + 28);
          v22 = *((_QWORD *)&v27 + 1);
          v23 = v28;
          __swift_project_boxed_opaque_existential_1_0(&v26, *((uint64_t *)&v27 + 1));
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 128))(a3, v21, v22, v23);
          sub_1A550E928((uint64_t)&v26);
          sub_1A556C7D8(v4);
          *(_QWORD *)v4 = 1;
          *(_OWORD *)(v4 + 8) = 0u;
          *(_OWORD *)(v4 + 24) = 0u;
          *(_OWORD *)(v4 + 37) = 0u;
          *(_BYTE *)(v4 + 53) = 2;
        }
      }
      else
      {
        sub_1A556C7D8(v4);
        *(_QWORD *)v4 = 1;
        *(_OWORD *)(v4 + 8) = 0u;
        *(_OWORD *)(v4 + 24) = 0u;
        *(_OWORD *)(v4 + 37) = 0u;
        *(_BYTE *)(v4 + 53) = 2;
        sub_1A556C7D8((uint64_t)&v29);
      }
    }
  }
  else
  {
    sub_1A54F81BC((uint64_t)&v38);
  }
  return sub_1A550E928((uint64_t)v33);
}

uint64_t sub_1A5595CF0(NSObject *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  __int128 v27;
  uint64_t (*v28)(uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  int i;
  uint64_t v44;
  BOOL v45;
  unsigned __int8 *v46;
  unsigned __int8 *v47;
  uint64_t v48;
  int v49;
  int v50;
  int v51;
  __int128 *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  NSObject *v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  int v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  os_log_t v79;
  NSObject *v80;
  uint64_t v81;
  NSObject *v82;
  os_log_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unsigned __int8 v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  os_log_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  os_log_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  os_log_t v105;
  char *v106;
  uint64_t (*v107)(uint64_t);
  NSObject *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  unsigned __int8 v126;
  _OWORD v127[3];
  __int128 v128;
  __int128 v129;
  __int128 v130;
  int v131;
  char v132;
  char v133;
  __int128 v134;
  uint64_t v135;
  unsigned int v136;
  __int128 v137;
  uint64_t v138;
  unsigned int v139;

  v5 = v4;
  v10 = sub_1A594A764();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = ((char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v100 - v15;
  sub_1A556C73C(v5, (uint64_t)&v128);
  if (v133)
  {
    if (v133 == 1)
    {
      if (v132 == 1)
      {
        sub_1A550E928((uint64_t)&v128);
        return 2;
      }
      v28 = a3;
      v111 = a4;
      v29 = v131;
      v127[1] = v129;
      v127[2] = v130;
      v127[0] = v128;
      v30 = *((_QWORD *)&v129 + 1);
      v31 = v130;
      __swift_project_boxed_opaque_existential_1_0(v127, *((uint64_t *)&v129 + 1));
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v31 + 32))(&v134, v30, v31);
      v138 = v135;
      v139 = v136;
      v137 = v134;
      sub_1A54F81BC((uint64_t)&v137);
      if (*(_BYTE *)(a2 + 168) != 1 || (v32 = *(_QWORD *)(a2 + 144), (v33 = *(_QWORD *)(v32 + 16)) == 0))
      {
LABEL_37:
        sub_1A54F81BC((uint64_t)&v138);
        goto LABEL_38;
      }
      v108 = a1;
      v34 = v32 + 32;
      v35 = v139 | ((unint64_t)v139 << 32);
      v36 = *(_OWORD *)(v32 + 160);
      v122 = *(_OWORD *)(v32 + 144);
      v123 = v36;
      v37 = *(_OWORD *)(v32 + 192);
      v124 = *(_OWORD *)(v32 + 176);
      v125 = v37;
      v38 = *(_OWORD *)(v32 + 96);
      v118 = *(_OWORD *)(v32 + 80);
      v119 = v38;
      v39 = *(_OWORD *)(v32 + 128);
      v120 = *(_OWORD *)(v32 + 112);
      v121 = v39;
      v40 = *(_OWORD *)(v32 + 48);
      v115 = *(_OWORD *)(v32 + 32);
      v116 = v40;
      v117 = *(_OWORD *)(v32 + 64);
      v41 = 1;
      v42 = v121;
      if (!(_QWORD)v121)
        goto LABEL_12;
LABEL_11:
      swift_beginAccess();
      for (i = *(_DWORD *)(v42 + 16); ; i = 0)
      {
        if ((DWORD2(v116) | ((unint64_t)DWORD2(v116) << 32)) == v35)
        {
          v44 = *(_QWORD *)(v116 + 16);
          if (v44 == *(_QWORD *)(v138 + 16))
          {
            if (v44)
              v45 = (_QWORD)v116 == v138;
            else
              v45 = 1;
            if (!v45)
            {
              if (*(unsigned __int8 *)(v116 + 32) != *(unsigned __int8 *)(v138 + 32))
                goto LABEL_31;
              if (v44 != 1)
              {
                if (*(unsigned __int8 *)(v116 + 33) != *(unsigned __int8 *)(v138 + 33))
                  goto LABEL_31;
                if (v44 != 2)
                {
                  if (*(unsigned __int8 *)(v116 + 34) != *(unsigned __int8 *)(v138 + 34))
                    goto LABEL_31;
                  v46 = (unsigned __int8 *)(v116 + 35);
                  v47 = (unsigned __int8 *)(v138 + 35);
                  v48 = v44 - 3;
                  while (v48)
                  {
                    v50 = *v46++;
                    v49 = v50;
                    v51 = *v47++;
                    --v48;
                    if (v49 != v51)
                      goto LABEL_31;
                  }
                }
              }
            }
            if (v42 && i == v29)
            {
              swift_beginAccess();
              sub_1A54E30E0(v42 + 24, (uint64_t)&v112);
              sub_1A54E3150((uint64_t)&v115);
              swift_retain();
              sub_1A5596D48((uint64_t)&v112, v5, (uint64_t)v127, v108, v29, v28, v111, (char *)&v126);
              sub_1A54E311C((uint64_t)&v112);
              swift_release();
              sub_1A54E31EC((uint64_t)&v115);
              sub_1A54F81BC((uint64_t)&v138);
              v17 = v126;
              if (v126 != 3)
              {
LABEL_39:
                sub_1A550E928((uint64_t)v127);
                return v17;
              }
LABEL_38:
              v17 = 2;
              goto LABEL_39;
            }
          }
        }
LABEL_31:
        if (v41 == v33)
          goto LABEL_37;
        v52 = (__int128 *)(v34 + 176 * v41);
        v53 = *v52;
        v54 = v52[2];
        v116 = v52[1];
        v117 = v54;
        v115 = v53;
        v55 = v52[3];
        v56 = v52[4];
        v57 = v52[6];
        v120 = v52[5];
        v121 = v57;
        v118 = v55;
        v119 = v56;
        v58 = v52[7];
        v59 = v52[8];
        v60 = v52[10];
        v124 = v52[9];
        v125 = v60;
        v122 = v58;
        v123 = v59;
        ++v41;
        v42 = v121;
        if ((_QWORD)v121)
          goto LABEL_11;
LABEL_12:
        ;
      }
    }
    return 1;
  }
  v107 = a3;
  v108 = a1;
  v110 = v11;
  v111 = a4;
  v105 = v14;
  v106 = v16;
  v109 = v10;
  v112 = v128;
  v113 = v129;
  v114 = v130;
  v18 = *(int *)(type metadata accessor for RunningTask() + 40);
  v19 = *(_DWORD *)(v5 + v18);
  v20 = v19 & 0xFFFFFF;
  *(_DWORD *)(v5 + v18) = v19 + 1;
  v22 = *(_QWORD *)(v5 + 56);
  v21 = *(_QWORD *)(v5 + 64);
  v24 = *((_QWORD *)&v113 + 1);
  v23 = v114;
  __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)&v112, *((uint64_t *)&v113 + 1));
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v26 = v25(v20, v22, v21, v24, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~v26 & 0xF000000000000007) == 0)
  {
    sub_1A556C7D8(v5);
    v27 = v113;
    *(_OWORD *)v5 = v112;
    *(_OWORD *)(v5 + 16) = v27;
    *(_QWORD *)(v5 + 32) = v114;
    *(_BYTE *)(v5 + 53) = 0;
    return 1;
  }
  v61 = v26;
  v102 = v5 + 56;
  v103 = v20;
  v104 = v5;
  v62 = v26;
  LODWORD(v107) = v107(v26);
  v63 = (char *)v108 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
  v64 = *(_QWORD *)v63;
  v65 = *((_QWORD *)v63 + 1);
  v67 = *((_QWORD *)v63 + 2);
  v66 = *((_QWORD *)v63 + 3);
  v68 = *((_QWORD *)v63 + 4);
  LODWORD(v111) = *((_DWORD *)v63 + 10);
  if (v66 < 0)
  {
    v81 = v109;
    v82 = v68;
    v83 = v105;
    (*(void (**)(os_log_t))(v110 + 16))(v105);
    v106 = (char *)v65;
    sub_1A559C124(v64, v65, v67, v66);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v108 = v82;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A559C190(v62);
    swift_retain();
    v84 = sub_1A594A74C();
    v85 = sub_1A594C000();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = swift_slowAlloc();
      v100 = v84;
      v87 = v86;
      v101 = swift_slowAlloc();
      *(_QWORD *)&v127[0] = v101;
      *(_DWORD *)v87 = 68159747;
      LODWORD(v115) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v87 + 8) = 256;
      LOBYTE(v115) = v64;
      sub_1A594C3CC();
      *(_WORD *)(v87 + 11) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      *(_QWORD *)&v115 = sub_1A55791B0((uint64_t)v106, v67, (uint64_t *)v127);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v87 + 21) = 1040;
      LODWORD(v115) = 2;
      v62 = v61;
      sub_1A594C3CC();
      *(_WORD *)(v87 + 27) = 512;
      LOWORD(v115) = v66;
      sub_1A594C3CC();
      *(_WORD *)(v87 + 31) = 2160;
      *(_QWORD *)&v115 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v87 + 41) = 2085;
      *(_QWORD *)&v115 = v108;
      DWORD2(v115) = v111;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v88 = sub_1A594B4A8();
      *(_QWORD *)&v115 = sub_1A55791B0(v88, v89, (uint64_t *)v127);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v87 + 51) = 2082;
      v90 = Action.kind.getter(v61);
      v91 = Action.Kind.description.getter(v90);
      *(_QWORD *)&v115 = sub_1A55791B0(v91, v92, (uint64_t *)v127);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A558B6D8(v61);
      sub_1A558B6D8(v61);
      *(_WORD *)(v87 + 61) = 2080;
      LODWORD(v115) = (_DWORD)v107;
      sub_1A5528CCC();
      v93 = sub_1A594B6DC();
      *(_QWORD *)&v115 = sub_1A55791B0(v93, v94, (uint64_t *)v127);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v95 = v100;
      _os_log_impl(&dword_1A4F90000, v100, v85, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Sent '%{public}s' %s", (uint8_t *)v87, 0x47u);
      v96 = v101;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v96, -1, -1);
      MEMORY[0x1A85B1964](v87, -1, -1);

      (*(void (**)(os_log_t, uint64_t))(v110 + 8))(v105, v109);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1A558B6D8(v62);
      sub_1A558B6D8(v62);

      (*(void (**)(os_log_t, uint64_t))(v110 + 8))(v83, v81);
    }
  }
  else
  {
    v69 = (uint64_t)v106;
    (*(void (**)(char *))(v110 + 16))(v106);
    sub_1A559C124(v64, v65, v67, v66);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A559C190(v62);
    swift_retain();
    v70 = sub_1A594A74C();
    v71 = sub_1A594C000();
    v72 = v71;
    if (os_log_type_enabled(v70, v71))
    {
      v73 = swift_slowAlloc();
      v108 = swift_slowAlloc();
      *(_QWORD *)&v115 = v108;
      *(_DWORD *)v73 = 68158722;
      LODWORD(v127[0]) = 2;
      v105 = v70;
      sub_1A594C3CC();
      *(_WORD *)(v73 + 8) = 256;
      LOBYTE(v127[0]) = v64;
      sub_1A594C3CC();
      *(_WORD *)(v73 + 11) = 2082;
      LODWORD(v101) = v72;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      *(_QWORD *)&v127[0] = sub_1A55791B0(v65, v67, (uint64_t *)&v115);
      sub_1A594C3CC();
      sub_1A559C154(v64, v65, v67, v66);
      sub_1A559C154(v64, v65, v67, v66);
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 21) = 2082;
      v74 = Action.kind.getter(v62);
      v75 = Action.Kind.description.getter(v74);
      *(_QWORD *)&v127[0] = sub_1A55791B0(v75, v76, (uint64_t *)&v115);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A558B6D8(v62);
      sub_1A558B6D8(v62);
      *(_WORD *)(v73 + 31) = 2080;
      LODWORD(v127[0]) = (_DWORD)v107;
      sub_1A5528CCC();
      v77 = sub_1A594B6DC();
      *(_QWORD *)&v127[0] = sub_1A55791B0(v77, v78, (uint64_t *)&v115);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v79 = v105;
      _os_log_impl(&dword_1A4F90000, v105, (os_log_type_t)v101, "[%.*hhx-%{public}s] Sent '%{public}s' %s", (uint8_t *)v73, 0x29u);
      v80 = v108;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v80, -1, -1);
      MEMORY[0x1A85B1964](v73, -1, -1);

      (*(void (**)(char *, uint64_t))(v110 + 8))(v106, v109);
    }
    else
    {
      sub_1A559C154(v64, v65, v67, v66);
      sub_1A559C154(v64, v65, v67, v66);
      sub_1A558B6D8(v62);
      sub_1A558B6D8(v62);

      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v69, v109);
    }
  }
  v97 = v104;
  v98 = v103;
  sub_1A556C7D8(v104);
  sub_1A5599A9C((uint64_t)&v112, v97);
  *(_BYTE *)(v97 + 53) = 0;
  sub_1A55A361C(v62, (int)v107, v98);
  sub_1A558B6D8(v62);
  sub_1A5592E90((uint64_t)&v112);
  return 0;
}

unint64_t *sub_1A55968B0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, NSObject *a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(uint64_t, uint64_t)@<X6>, uint64_t a8@<X7>, unsigned __int8 *a9@<X8>, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t, NSObject *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v45;
  unsigned __int8 *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  int v66;
  __int16 v67;
  __int128 v68;
  uint64_t v69;
  int v70;
  __int128 v71;
  __int128 v72;
  unint64_t v73;
  uint64_t v74;

  v59 = a8;
  v58 = a7;
  v57 = a6;
  v62 = a5;
  v55 = a2;
  v52 = a1;
  v46 = a9;
  v54 = type metadata accessor for ClientCommand(0);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v48 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DC0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v45 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D20);
  MEMORY[0x1E0C80A78](v19);
  v49 = (uint64_t)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = a10;
  v72 = *(_OWORD *)(a10 + 24);
  v74 = v72;
  sub_1A559C1E0((_QWORD *)&v72 + 1, &v73);
  sub_1A550EF18(a3, (uint64_t)v63);
  v21 = v64;
  v22 = v65;
  __swift_project_boxed_opaque_existential_1_0(v63, v64);
  v23 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v22 + 32);
  sub_1A54FCA28((uint64_t)&v74);
  sub_1A559C21C(&v73);
  v23(&v68, v21, v22);
  sub_1A550E928((uint64_t)v63);
  v51 = v69;
  v47 = v70;
  v71 = v68;
  sub_1A54F81BC((uint64_t)&v71);
  v24 = *(int *)(type metadata accessor for RunningTask() + 44);
  v25 = *(_DWORD *)(a4 + v24);
  v26 = v25 & 0xFFFFFF;
  *(_DWORD *)(a4 + v24) = v25 + 1;
  v61 = a4;
  v27 = *(_QWORD *)(a4 + 56);
  v28 = *(_QWORD *)(a4 + 64);
  v29 = *(_QWORD *)(a3 + 24);
  v30 = *(_QWORD *)(a3 + 32);
  v45 = a3;
  __swift_mutable_project_boxed_opaque_existential_1_0(a3, v29);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, NSObject *, uint64_t, uint64_t))(v30 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v50 = v26;
  v32 = v26;
  v33 = (uint64_t)v18;
  v31(v32, v27, v28, v52, v62, v29, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A54E330C((uint64_t)v18, (uint64_t)v16, &qword_1EE797DC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v16, 1, v54) == 1)
  {
    v34 = type metadata accessor for Command();
    v35 = v49;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v49, 1, 1, v34);
    v36 = v55;
  }
  else
  {
    v37 = v48;
    sub_1A54E3394((uint64_t)v16, v48, type metadata accessor for ClientCommand);
    v38 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DC8);
    v35 = v49;
    v39 = v49 + *(int *)(v38 + 48);
    sub_1A55034B8(v37, v49, type metadata accessor for ClientCommand);
    v36 = v55;
    *(_DWORD *)v39 = v55;
    *(_BYTE *)(v39 + 4) = 0;
    *(_QWORD *)(v39 + 8) = v51;
    *(_DWORD *)(v39 + 16) = v47;
    v40 = type metadata accessor for Command();
    swift_storeEnumTagMultiPayload();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55034FC(v37, type metadata accessor for ClientCommand);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v35, 0, 1, v40);
  }
  sub_1A5510284(v33, &qword_1EE797DC0);
  swift_bridgeObjectRelease();
  v41 = v61;
  v42 = v60;
  v43 = sub_1A5599F08(v35, v50, v61, v62, v57, v58, v59, v56);
  sub_1A54F81BC((uint64_t)&v74);
  sub_1A559C244(&v73);
  sub_1A5510284(v35, &qword_1EE797D20);
  if (!v42)
  {
    if (v43 < 2u)
    {
      sub_1A550EF18(v45, (uint64_t)v63);
      v66 = v36;
      v67 = 256;
      sub_1A559C1AC((uint64_t)v63, v41);
    }
    *v46 = v43;
  }
  sub_1A54F81BC((uint64_t)&v74);
  return sub_1A559C244(&v73);
}

uint64_t sub_1A5596D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, NSObject *a4@<X3>, int a5@<W4>, uint64_t (*a6)(uint64_t)@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, NSObject *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t result;
  char v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(char *);
  char *v35;
  unint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  unsigned __int8 v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  NSObject *v48;
  char *v49;
  NSObject *v50;
  os_log_type_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unsigned __int8 v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  os_log_t v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t (*v67)(uint64_t);
  uint64_t v68;
  os_log_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t);
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  NSObject *v84;
  uint64_t v85;
  int v86;
  int v87;
  __int16 v88;
  NSObject *v89;

  v80 = a8;
  v75 = a7;
  v76 = a6;
  v82 = a5;
  v83 = a1;
  v84 = a4;
  v79 = sub_1A594A764();
  v81 = *(_QWORD *)(v79 - 8);
  v10 = MEMORY[0x1E0C80A78](v79);
  v77 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v78 = (char *)&v68 - v12;
  v13 = *(int *)(type metadata accessor for RunningTask() + 40);
  v14 = *(_DWORD *)(a2 + v13);
  v15 = v14 & 0xFFFFFF;
  *(_DWORD *)(a2 + v13) = v14 + 1;
  v16 = *(_QWORD *)(a2 + 56);
  v17 = *(_QWORD *)(a2 + 64);
  v18 = *(_QWORD *)(a3 + 24);
  v19 = *(_QWORD *)(a3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1_0(a3, v18);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, NSObject *, uint64_t, uint64_t))(v19 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v21 = v20(v15, v16, v17, v83, v84, v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~v21 & 0xF000000000000007) != 0)
  {
    v25 = v77;
    v24 = v78;
    v26 = v81;
    v27 = v79;
    v71 = a2 + 56;
    v72 = v15;
    v73 = a3;
    v74 = a2;
    v28 = v21;
    LODWORD(v75) = v76(v21);
    v29 = (char *)v84 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
    v30 = *(_QWORD *)v29;
    v76 = (uint64_t (*)(uint64_t))*((_QWORD *)v29 + 1);
    v32 = *((_QWORD *)v29 + 2);
    v31 = *((_QWORD *)v29 + 3);
    v33 = *((_QWORD *)v29 + 4);
    LODWORD(v83) = *((_DWORD *)v29 + 10);
    v70 = v33;
    if (v31 < 0)
    {
      (*(void (**)(char *))(v26 + 16))(v25);
      sub_1A559C124(v30, (uint64_t)v76, v32, v31);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v36 = v28;
      sub_1A559C190(v28);
      swift_retain();
      v50 = sub_1A594A74C();
      v51 = sub_1A594C000();
      v52 = v51;
      if (os_log_type_enabled(v50, v51))
      {
        v53 = swift_slowAlloc();
        v84 = swift_slowAlloc();
        v89 = v84;
        *(_DWORD *)v53 = 68159747;
        LODWORD(v85) = 2;
        v69 = v50;
        LODWORD(v78) = v52;
        sub_1A594C3CC();
        *(_WORD *)(v53 + 8) = 256;
        LOBYTE(v85) = v30;
        sub_1A594C3CC();
        *(_WORD *)(v53 + 11) = 2082;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v85 = sub_1A55791B0((uint64_t)v76, v32, (uint64_t *)&v89);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 21) = 1040;
        LODWORD(v85) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v53 + 27) = 512;
        LOWORD(v85) = v31;
        sub_1A594C3CC();
        *(_WORD *)(v53 + 31) = 2160;
        v85 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v53 + 41) = 2085;
        v85 = v70;
        v86 = v83;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v54 = sub_1A594B4A8();
        v85 = sub_1A55791B0(v54, v55, (uint64_t *)&v89);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 51) = 2082;
        v56 = Action.kind.getter(v36);
        v57 = Action.Kind.description.getter(v56);
        v85 = sub_1A55791B0(v57, v58, (uint64_t *)&v89);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A558B6D8(v36);
        sub_1A558B6D8(v36);
        *(_WORD *)(v53 + 61) = 2080;
        v45 = v75;
        LODWORD(v85) = v75;
        sub_1A5528CCC();
        v59 = sub_1A594B6DC();
        v85 = sub_1A55791B0(v59, v60, (uint64_t *)&v89);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        v61 = v69;
        _os_log_impl(&dword_1A4F90000, v69, (os_log_type_t)v78, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Sent '%{public}s' %s", (uint8_t *)v53, 0x47u);
        v62 = v84;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v62, -1, -1);
        MEMORY[0x1A85B1964](v53, -1, -1);

        (*(void (**)(char *, uint64_t))(v81 + 8))(v77, v79);
        goto LABEL_8;
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1A558B6D8(v36);
      sub_1A558B6D8(v36);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v25, v27);
    }
    else
    {
      v34 = *(void (**)(char *))(v26 + 16);
      v35 = v24;
      v34(v24);
      sub_1A559C124(v30, (uint64_t)v76, v32, v31);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v36 = v28;
      sub_1A559C190(v28);
      swift_retain();
      v37 = sub_1A594A74C();
      v38 = sub_1A594C000();
      v39 = v38;
      v84 = v37;
      if (os_log_type_enabled(v37, v38))
      {
        v40 = swift_slowAlloc();
        v77 = (char *)swift_slowAlloc();
        v85 = (uint64_t)v77;
        *(_DWORD *)v40 = 68158722;
        LODWORD(v89) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v40 + 8) = 256;
        LOBYTE(v89) = v30;
        sub_1A594C3CC();
        *(_WORD *)(v40 + 11) = 2082;
        LODWORD(v69) = v39;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v41 = v76;
        v89 = sub_1A55791B0((uint64_t)v76, v32, &v85);
        sub_1A594C3CC();
        sub_1A559C154(v30, (uint64_t)v41, v32, v31);
        sub_1A559C154(v30, (uint64_t)v41, v32, v31);
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 21) = 2082;
        v42 = Action.kind.getter(v36);
        v43 = Action.Kind.description.getter(v42);
        v89 = sub_1A55791B0(v43, v44, &v85);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A558B6D8(v36);
        sub_1A558B6D8(v36);
        *(_WORD *)(v40 + 31) = 2080;
        v45 = v75;
        LODWORD(v89) = v75;
        sub_1A5528CCC();
        v46 = sub_1A594B6DC();
        v89 = sub_1A55791B0(v46, v47, &v85);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        v48 = v84;
        _os_log_impl(&dword_1A4F90000, v84, (os_log_type_t)v69, "[%.*hhx-%{public}s] Sent '%{public}s' %s", (uint8_t *)v40, 0x29u);
        v49 = v77;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v49, -1, -1);
        MEMORY[0x1A85B1964](v40, -1, -1);

        (*(void (**)(char *, uint64_t))(v81 + 8))(v78, v79);
LABEL_8:
        v63 = v73;
        v64 = v74;
        v65 = v82;
        v66 = v72;
LABEL_12:
        sub_1A550EF18(v63, (uint64_t)&v85);
        v87 = v65;
        v88 = 256;
        sub_1A559C1AC((uint64_t)&v85, v64);
        sub_1A55A361C(v36, v45, v66);
        result = sub_1A558B6D8(v36);
        v23 = 0;
        goto LABEL_13;
      }
      v67 = v76;
      sub_1A559C154(v30, (uint64_t)v76, v32, v31);
      sub_1A559C154(v30, (uint64_t)v67, v32, v31);
      sub_1A558B6D8(v36);
      sub_1A558B6D8(v36);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v35, v27);
    }
    v63 = v73;
    v64 = v74;
    v65 = v82;
    v66 = v72;
    v45 = v75;
    goto LABEL_12;
  }
  sub_1A550EF18(a3, (uint64_t)&v85);
  v87 = v82;
  v88 = 256;
  result = sub_1A559C1AC((uint64_t)&v85, a2);
  v23 = 1;
LABEL_13:
  *v80 = v23;
  return result;
}

uint64_t sub_1A5597690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[3];
  unsigned int v9;
  char v10;
  char v11;
  __int128 v12;
  __int128 v13;

  sub_1A556C73C(v0, (uint64_t)v8);
  if (v11)
  {
    if (v11 == 1)
    {
      v1 = v9;
      v5 = v8[0];
      v6 = v8[1];
      v7 = v8[2];
      if ((v10 & 1) == 0)
      {
        v3 = *((_QWORD *)&v6 + 1);
        v4 = v7;
        __swift_project_boxed_opaque_existential_1_0(&v5, *((uint64_t *)&v6 + 1));
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 32))(&v12, v3, v4);
        sub_1A550E928((uint64_t)&v5);
        v13 = v12;
        sub_1A54F81BC((uint64_t)&v13);
        return v1;
      }
      sub_1A550E928((uint64_t)&v5);
    }
  }
  else
  {
    sub_1A556C7D8((uint64_t)v8);
  }
  return 0;
}

uint64_t sub_1A5597768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t (*v7)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t result;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for TaskHistory.Running(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (int *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A55034B8(a1, (uint64_t)v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    result = sub_1A55034FC((uint64_t)v6, type metadata accessor for TaskHistory.Running);
    v10 = 0;
  }
  else
  {
    v10 = *v6;
    v11 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
    result = sub_1A55034FC((uint64_t)v6 + *(int *)(v11 + 64), type metadata accessor for ClientCommand);
  }
  *(_DWORD *)a2 = v10;
  *(_BYTE *)(a2 + 4) = EnumCaseMultiPayload == 1;
  return result;
}

_QWORD *sub_1A5597844(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD *, _BYTE *, uint64_t, uint64_t), uint64_t a7)
{
  int v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  int i;
  uint64_t v25;
  BOOL v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  __int128 *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  void (*v42)(_QWORD *, _BYTE *, uint64_t, uint64_t);
  _BYTE v45[440];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  unsigned int v59;
  __int128 v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;

  if ((a4 & 0x100000000) == 0)
  {
    v9 = a4;
    v10 = result;
    v63 = a7;
    v11 = result[3];
    v12 = result[4];
    __swift_project_boxed_opaque_existential_1_0(result, v11);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v12 + 32))(&v57, v11, v12);
    v61 = v58;
    v62 = v59;
    v60 = v57;
    sub_1A54F81BC((uint64_t)&v60);
    if (*(_BYTE *)(a5 + 168) == 1)
    {
      v13 = *(_QWORD *)(a5 + 144);
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        v42 = a6;
        v15 = v13 + 32;
        v16 = v62 | ((unint64_t)v62 << 32);
        v17 = *(_OWORD *)(v13 + 160);
        v53 = *(_OWORD *)(v13 + 144);
        v54 = v17;
        v18 = *(_OWORD *)(v13 + 192);
        v55 = *(_OWORD *)(v13 + 176);
        v56 = v18;
        v19 = *(_OWORD *)(v13 + 96);
        v49 = *(_OWORD *)(v13 + 80);
        v50 = v19;
        v20 = *(_OWORD *)(v13 + 128);
        v51 = *(_OWORD *)(v13 + 112);
        v52 = v20;
        v21 = *(_OWORD *)(v13 + 48);
        v46 = *(_OWORD *)(v13 + 32);
        v47 = v21;
        v48 = *(_OWORD *)(v13 + 64);
        v22 = 1;
        v23 = v52;
        if (!(_QWORD)v52)
          goto LABEL_6;
LABEL_5:
        swift_beginAccess();
        for (i = *(_DWORD *)(v23 + 16); ; i = 0)
        {
          if ((DWORD2(v47) | ((unint64_t)DWORD2(v47) << 32)) == v16)
          {
            v25 = *(_QWORD *)(v47 + 16);
            if (v25 == *(_QWORD *)(v61 + 16))
            {
              if (v25)
                v26 = (_QWORD)v47 == v61;
              else
                v26 = 1;
              if (!v26)
              {
                if (*(unsigned __int8 *)(v47 + 32) != *(unsigned __int8 *)(v61 + 32))
                  goto LABEL_25;
                if (v25 != 1)
                {
                  if (*(unsigned __int8 *)(v47 + 33) != *(unsigned __int8 *)(v61 + 33))
                    goto LABEL_25;
                  if (v25 != 2)
                  {
                    if (*(unsigned __int8 *)(v47 + 34) != *(unsigned __int8 *)(v61 + 34))
                      goto LABEL_25;
                    v27 = (unsigned __int8 *)(v47 + 35);
                    v28 = (unsigned __int8 *)(v61 + 35);
                    v29 = v25 - 3;
                    while (v29)
                    {
                      v31 = *v27++;
                      v30 = v31;
                      v32 = *v28++;
                      --v29;
                      if (v30 != v32)
                        goto LABEL_25;
                    }
                  }
                }
              }
              if (v23 && i == v9)
              {
                swift_beginAccess();
                sub_1A54E30E0(v23 + 24, (uint64_t)v45);
                sub_1A54E3150((uint64_t)&v46);
                swift_retain();
                v42(v10, v45, a2, a3);
                sub_1A54E311C((uint64_t)v45);
                swift_release();
                sub_1A54E31EC((uint64_t)&v46);
                return (_QWORD *)sub_1A54F81BC((uint64_t)&v61);
              }
            }
          }
LABEL_25:
          if (v22 == v14)
            break;
          v33 = (__int128 *)(v15 + 176 * v22);
          v34 = *v33;
          v35 = v33[2];
          v47 = v33[1];
          v48 = v35;
          v46 = v34;
          v36 = v33[3];
          v37 = v33[4];
          v38 = v33[6];
          v51 = v33[5];
          v52 = v38;
          v49 = v36;
          v50 = v37;
          v39 = v33[7];
          v40 = v33[8];
          v41 = v33[10];
          v55 = v33[9];
          v56 = v41;
          v53 = v39;
          v54 = v40;
          ++v22;
          v23 = v52;
          if ((_QWORD)v52)
            goto LABEL_5;
LABEL_6:
          ;
        }
      }
    }
    sub_1A54F81BC((uint64_t)&v61);
    sub_1A559C41C();
    swift_allocError();
    return (_QWORD *)swift_willThrow();
  }
  return result;
}

void sub_1A5597B0C(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  os_signpost_id_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  int v42;
  char *v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_signpost_id_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  char v75;
  _OWORD v76[3];
  __int128 v77;
  uint64_t v78;
  int v79;
  __int128 v80;

  v2 = v1;
  v66 = type metadata accessor for RunningTask();
  v4 = MEMORY[0x1E0C80A78](v66);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v59 - v7;
  v64 = sub_1A594A62C();
  v65 = *(_QWORD *)(v64 - 8);
  v9 = MEMORY[0x1E0C80A78](v64);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v63 = (char *)&v59 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v59 - v14;
  v68 = sub_1A594A65C();
  v67 = *(_QWORD *)(v68 - 8);
  v16 = MEMORY[0x1E0C80A78](v68);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v59 - v19;
  v21 = (id)*tracingLog.unsafeMutableAddressor();
  v22 = sub_1A594C318();

  if ((v22 & 1) != 0)
  {
    sub_1A556C73C(v2, (uint64_t)&v72);
    v23 = v2;
    if (v75 == 1)
    {
      v76[0] = v72;
      v76[1] = v73;
      v76[2] = v74;
      v24 = tracingSignposter.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v20, v24, v68);
      OSSignpostID.init(engine:kind:idA:idB:)();
      sub_1A55034B8(v2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      sub_1A550EF18((uint64_t)v76, (uint64_t)&v72);
      v25 = sub_1A594A650();
      v26 = sub_1A594C144();
      if ((sub_1A594C318() & 1) != 0)
      {
        v61 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
        v27 = v64;
        v61(v63, v15, v64);
        v28 = swift_slowAlloc();
        LODWORD(v59) = v26;
        v29 = v28;
        v60 = swift_slowAlloc();
        v71 = v60;
        *(_DWORD *)v29 = 136315651;
        *(_QWORD *)&v77 = *((_QWORD *)v8 + 9);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B538);
        v30 = sub_1A594B490();
        v62 = v23;
        *(_QWORD *)&v77 = sub_1A55791B0(v30, v31, &v71);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
        *(_WORD *)(v29 + 12) = 2160;
        *(_QWORD *)&v77 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v29 + 22) = 2085;
        v32 = *((_QWORD *)&v73 + 1);
        v33 = v74;
        __swift_project_boxed_opaque_existential_1_0(&v72, *((uint64_t *)&v73 + 1));
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v33 + 32))(&v77, v32, v33);
        v80 = v77;
        sub_1A54F81BC((uint64_t)&v80);
        v69 = v78;
        v70 = v79;
        v34 = sub_1A594B4A8();
        v69 = sub_1A55791B0(v34, v35, &v71);
        v23 = v62;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A550E928((uint64_t)&v72);
        v36 = v63;
        v37 = sub_1A594A620();
        _os_signpost_emit_with_name_impl(&dword_1A4F90000, v25, (os_signpost_type_t)v59, v37, "BehaviorTask", "M %s,%{sensitive,mask.mailbox}s", (uint8_t *)v29, 0x20u);
        v38 = v60;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v38, -1, -1);
        v39 = v65;
        MEMORY[0x1A85B1964](v29, -1, -1);

        (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v27);
        v61(v36, v15, v27);
      }
      else
      {

        sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
        sub_1A550E928((uint64_t)&v72);
        v39 = v65;
        v27 = v64;
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v63, v15, v64);
      }
      sub_1A594A734();
      swift_allocObject();
      sub_1A594A728();
      swift_release();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v27);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v20, v68);
      sub_1A550E928((uint64_t)v76);
    }
    else
    {
      sub_1A556C7D8((uint64_t)&v72);
      v40 = tracingSignposter.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v18, v40, v68);
      OSSignpostID.init(engine:kind:idA:idB:)();
      sub_1A55034B8(v2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      v41 = sub_1A594A650();
      v42 = sub_1A594C144();
      if ((sub_1A594C318() & 1) != 0)
      {
        v61 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
        LODWORD(v60) = v42;
        v43 = v63;
        v61(v63, v11, v64);
        v62 = v23;
        v44 = (uint8_t *)swift_slowAlloc();
        v45 = swift_slowAlloc();
        *(_QWORD *)&v72 = v45;
        *(_DWORD *)v44 = 136315138;
        v59 = v44 + 4;
        *(_QWORD *)&v76[0] = *((_QWORD *)v6 + 9);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B538);
        v46 = sub_1A594B490();
        *(_QWORD *)&v76[0] = sub_1A55791B0(v46, v47, (uint64_t *)&v72);
        sub_1A594C3CC();
        v23 = v62;
        swift_bridgeObjectRelease();
        v48 = (uint64_t)v6;
        v49 = v65;
        sub_1A55034FC(v48, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
        v50 = sub_1A594A620();
        _os_signpost_emit_with_name_impl(&dword_1A4F90000, v41, (os_signpost_type_t)v60, v50, "BehaviorTask", "A %s", v44, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v45, -1, -1);
        MEMORY[0x1A85B1964](v44, -1, -1);

        v51 = v64;
        (*(void (**)(char *, uint64_t))(v49 + 8))(v43, v64);
        v61(v43, v11, v51);
      }
      else
      {

        sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
        v49 = v65;
        v51 = v64;
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v63, v11, v64);
      }
      sub_1A594A734();
      swift_allocObject();
      sub_1A594A728();
      swift_release();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v51);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v18, v68);
    }
    v52 = *(_QWORD *)(v23 + 56);
    v53 = v23;
    v54 = *(_QWORD *)(v52 + 16);
    if (v54)
    {
      v55 = *(_QWORD *)(type metadata accessor for TaskHistory.Running(0) - 8);
      v56 = v52 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
      v57 = *(_DWORD *)(v53 + *(int *)(v66 + 32));
      v58 = *(_QWORD *)(v55 + 72);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      do
      {
        sub_1A55983A0(a1, v57);
        v56 += v58;
        --v54;
      }
      while (v54);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1A55983A0(int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  Class isa;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int *v29;
  uint64_t (*v30)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  unint64_t v43;
  int v44;
  uint64_t v45;
  char *v46;
  os_signpost_id_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  NSObject *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  int v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  os_signpost_id_t v73;
  NSObject *v74;
  uint64_t v75;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  void (**v81)(char *, NSObject *);
  void (*v82)(char *, char *, uint64_t);
  NSObject *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  LODWORD(v83) = a2;
  LODWORD(v82) = a1;
  v3 = sub_1A594A62C();
  v87 = *(_QWORD *)(v3 - 8);
  v88 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v80 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v77 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v86 = (char *)&v77 - v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v77 - v11;
  v13 = sub_1A594A65C();
  isa = v13[-1].isa;
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v77 - v18;
  v20 = type metadata accessor for ClientCommand(0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v85 = (uint64_t)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v84 = (uint64_t)&v77 - v24;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v77 - v25;
  v27 = type metadata accessor for TaskHistory.Running(0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (unsigned int *)((char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A55034B8(v2, (uint64_t)v29, v30);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v32 = *v29;
  if (EnumCaseMultiPayload == 1)
  {
    LODWORD(v85) = v29[1];
    v33 = *((_QWORD *)v29 + 1);
    v34 = tracingSignposter.unsafeMutableAddressor();
    (*((void (**)(char *, uint64_t, NSObject *))isa + 2))(v17, v34, v13);
    OSSignpostID.init(engine:kind:idA:idB:)();
    swift_retain_n();
    v35 = sub_1A594A650();
    LODWORD(v84) = sub_1A594C144();
    v36 = v8;
    if ((sub_1A594C318() & 1) != 0)
    {
      v82 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
      v82(v80, v8, v88);
      v37 = swift_slowAlloc();
      v83 = v13;
      v81 = (void (**)(char *, NSObject *))isa;
      v79 = v17;
      v38 = v8;
      v39 = v37;
      v40 = swift_slowAlloc();
      v90 = v40;
      *(_DWORD *)v39 = 67109890;
      LODWORD(v89) = v32;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 8) = 2080;
      v41 = Action.kind.getter(v33);
      v42 = Action.Kind.description.getter(v41);
      v89 = sub_1A55791B0(v42, v43, &v90);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 18) = 1024;
      LODWORD(v89) = v85;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 24) = 1024;
      v44 = dword_1A59A83B0[(v33 >> 58) & 0x3C | (v33 >> 1) & 3];
      swift_release();
      LODWORD(v89) = v44;
      v45 = v88;
      sub_1A594C3CC();
      swift_release();
      v46 = v80;
      v47 = sub_1A594A620();
      _os_signpost_emit_with_name_impl(&dword_1A4F90000, v35, (os_signpost_type_t)v84, v47, "BehaviorAction", "ID: %u name: %s %u %u", (uint8_t *)v39, 0x1Eu);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v40, -1, -1);
      v48 = v39;
      v36 = v38;
      v17 = v79;
      isa = (Class)v81;
      v13 = v83;
      MEMORY[0x1A85B1964](v48, -1, -1);

      v49 = v87;
      (*(void (**)(char *, uint64_t))(v87 + 8))(v46, v45);
      v82(v86, v36, v45);
    }
    else
    {

      swift_release_n();
      v49 = v87;
      v45 = v88;
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v86, v36, v88);
    }
    sub_1A594A734();
    swift_allocObject();
    sub_1A594A728();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v45);
    return (*((uint64_t (**)(char *, NSObject *))isa + 1))(v17, v13);
  }
  else
  {
    v50 = v29[1];
    LODWORD(v80) = v29[2];
    v51 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
    sub_1A54E3394((uint64_t)v29 + *(int *)(v51 + 64), (uint64_t)v26, type metadata accessor for ClientCommand);
    v52 = tracingSignposter.unsafeMutableAddressor();
    v81 = (void (**)(char *, NSObject *))isa;
    (*((void (**)(char *, uint64_t, NSObject *))isa + 2))(v19, v52, v13);
    v53 = v32;
    v54 = v32 | (v50 << 32);
    CommandID.tag.getter(v54);
    OSSignpostID.init(engine:kind:idA:idB:)();
    sub_1A55034B8((uint64_t)v26, v84, type metadata accessor for ClientCommand);
    sub_1A55034B8((uint64_t)v26, v85, type metadata accessor for ClientCommand);
    v55 = sub_1A594A650();
    LODWORD(v82) = sub_1A594C144();
    v83 = v55;
    v56 = v19;
    v57 = (uint64_t)v26;
    if ((sub_1A594C318() & 1) != 0)
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v86, v12, v88);
      v58 = swift_slowAlloc();
      v78 = v19;
      v79 = v12;
      v77 = v26;
      v59 = v58;
      v60 = swift_slowAlloc();
      v90 = v60;
      *(_DWORD *)v59 = 136447234;
      v61 = CommandID.tag.getter(v54);
      v62 = Tag.debugDescription.getter(v61 & 0xFFFFFFFF000000FFLL);
      v89 = sub_1A55791B0(v62, v63, &v90);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v59 + 12) = 2080;
      v64 = v84;
      ClientCommand.logIdentifier.getter();
      v89 = sub_1A55791B0(v65, v66, &v90);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v64, type metadata accessor for ClientCommand);
      *(_WORD *)(v59 + 22) = 1024;
      LODWORD(v89) = (_DWORD)v80;
      sub_1A594C3CC();
      *(_WORD *)(v59 + 28) = 1024;
      LODWORD(v89) = v53;
      sub_1A594C3CC();
      *(_WORD *)(v59 + 34) = 1024;
      v67 = v85;
      sub_1A559980C();
      v69 = v68 + 1;
      sub_1A55034FC(v67, type metadata accessor for ClientCommand);
      LODWORD(v89) = v69;
      v70 = v86;
      v71 = v87;
      v72 = v88;
      sub_1A594C3CC();
      v73 = sub_1A594A620();
      v74 = v83;
      _os_signpost_emit_with_name_impl(&dword_1A4F90000, v83, (os_signpost_type_t)v82, v73, "BehaviorCommand", "tag: %{public}s, name: %s %u %u %u", (uint8_t *)v59, 0x28u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v60, -1, -1);
      v75 = v59;
      v57 = (uint64_t)v77;
      v56 = v78;
      v12 = v79;
      MEMORY[0x1A85B1964](v75, -1, -1);

      (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v72);
    }
    else
    {
      sub_1A55034FC(v85, type metadata accessor for ClientCommand);

      sub_1A55034FC(v84, type metadata accessor for ClientCommand);
      v71 = v87;
      v72 = v88;
      v70 = v86;
    }
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v70, v12, v72);
    sub_1A594A734();
    swift_allocObject();
    sub_1A594A728();
    swift_release();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v12, v72);
    v81[1](v56, v13);
    return sub_1A55034FC(v57, type metadata accessor for ClientCommand);
  }
}

void sub_1A5598BF0(int a1)
{
  uint64_t v1;
  unsigned int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  NSObject *v24;
  char *v25;
  int v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  const char *v35;
  char *v36;
  uint8_t *v37;
  os_signpost_id_t v38;
  os_log_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  int EnumCaseMultiPayload;
  uint64_t v48;
  os_log_t v49;
  int v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;

  v64 = a1;
  v63 = type metadata accessor for TaskHistory.Running(0);
  v57 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v2 = (unsigned int *)((char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_1A594A674();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A62C();
  v58 = *(char **)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v59 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v49 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v49 - v13;
  v15 = sub_1A594A65C();
  v60 = *(_QWORD *)(v15 - 8);
  v61 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (id)*tracingLog.unsafeMutableAddressor();
  v19 = sub_1A594C318();

  if ((v19 & 1) != 0)
  {
    v55 = v6;
    v56 = v4;
    v53 = v3;
    v20 = tracingSignposter.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v17, v20, v61);
    v21 = *(int *)(type metadata accessor for RunningTask() + 32);
    OSSignpostID.init(engine:kind:idA:idB:)();
    v22 = v58;
    v54 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v58 + 2);
    v54(v12, v14, v7);
    sub_1A594A734();
    swift_allocObject();
    sub_1A594A728();
    v23 = (void (*)(char *, uint64_t))*((_QWORD *)v22 + 1);
    v58 = v14;
    v23(v14, v7);
    v24 = sub_1A594A650();
    v25 = v59;
    sub_1A594A71C();
    v26 = sub_1A594C138();
    v27 = v25;
    v28 = v7;
    if ((sub_1A594C318() & 1) != 0)
    {
      v50 = v26;
      v49 = v24;
      v51 = v23;
      v52 = v17;
      swift_retain();
      v29 = v55;
      sub_1A594A740();
      swift_release();
      v30 = v56;
      v31 = v53;
      v32 = (*(uint64_t (**)(char *, uint64_t))(v56 + 88))(v29, v53);
      v33 = v58;
      v34 = v54;
      if (v32 == *MEMORY[0x1E0DF2190])
      {
        v35 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
        v35 = "";
      }
      v36 = v59;
      v34(v33, v59, v28);
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      v38 = sub_1A594A620();
      v39 = v49;
      _os_signpost_emit_with_name_impl(&dword_1A4F90000, v49, (os_signpost_type_t)v50, v38, "BehaviorTask", v35, v37, 2u);
      MEMORY[0x1A85B1964](v37, -1, -1);
      swift_release();

      v40 = v51;
      v51(v36, v28);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v52, v61);
      v40(v33, v28);
    }
    else
    {
      swift_release();

      v23(v27, v7);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v17, v61);
    }
    v41 = v62;
    v42 = *(_QWORD *)(v62 + 56);
    v43 = *(_QWORD *)(v42 + 16);
    if (v43)
    {
      v44 = v42 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
      v45 = *(_QWORD *)(v57 + 72);
      v62 = *(_QWORD *)(v62 + 56);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      do
      {
        sub_1A55034B8(v44, (uint64_t)v2, type metadata accessor for TaskHistory.Running);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v46 = *v2;
          swift_release();
        }
        else
        {
          v46 = *(NSObject **)v2;
          v48 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
          sub_1A55034FC((uint64_t)v2 + *(int *)(v48 + 64), type metadata accessor for ClientCommand);
        }
        sub_1A5599084(v64, *(_DWORD *)(v41 + v21), v46, EnumCaseMultiPayload == 1);
        v44 += v45;
        --v43;
      }
      while (v43);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1A5599084(int a1, int a2, NSObject *a3, char a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  void (*v33)(char *, uint64_t);
  NSObject *v34;
  os_signpost_type_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  NSObject *v46;
  char *v47;
  os_signpost_type_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void (*v53)(char *, char *, uint64_t);
  const char *v54;
  char *v56;
  uint8_t *v57;
  os_signpost_id_t v58;
  os_log_t v59;
  uint64_t (*v60)(char *, uint64_t);
  uint8_t *v61;
  os_signpost_id_t v62;
  os_log_t v63;
  uint64_t (*v64)(char *, uint64_t);
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  os_log_t v72;
  void (*v73)(char *, uint64_t);
  void (*v74)(char *, char *, uint64_t);

  v72 = a3;
  LODWORD(v74) = a2;
  LODWORD(v73) = a1;
  v5 = sub_1A594A674();
  v68 = *(_QWORD *)(v5 - 8);
  v69 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v65 - v9;
  v11 = sub_1A594A62C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v70 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v65 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v65 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v65 - v21;
  v23 = sub_1A594A65C();
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v71 = v28;
  if ((a4 & 1) != 0)
  {
    v66 = v8;
    v43 = v28;
    v44 = tracingSignposter.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v26, v44, v23);
    OSSignpostID.init(engine:kind:idA:idB:)();
    v74 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v74(v20, v22, v11);
    sub_1A594A734();
    swift_allocObject();
    sub_1A594A728();
    v45 = *(void (**)(char *, uint64_t))(v12 + 8);
    v45(v22, v11);
    v46 = sub_1A594A650();
    v47 = v70;
    sub_1A594A71C();
    v48 = sub_1A594C138();
    if ((sub_1A594C318() & 1) != 0)
    {
      v72 = v46;
      v73 = v45;
      v67 = v23;
      swift_retain();
      v49 = v66;
      sub_1A594A740();
      swift_release();
      v51 = v68;
      v50 = v69;
      v52 = (*(uint64_t (**)(char *, uint64_t))(v68 + 88))(v49, v69);
      v53 = v74;
      if (v52 == *MEMORY[0x1E0DF2190])
      {
        v54 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v50);
        v54 = "";
      }
      v53(v22, v47, v11);
      v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v61 = 0;
      v62 = sub_1A594A620();
      v63 = v72;
      _os_signpost_emit_with_name_impl(&dword_1A4F90000, v72, v48, v62, "BehaviorAction", v54, v61, 2u);
      MEMORY[0x1A85B1964](v61, -1, -1);
      swift_release();

      v64 = (uint64_t (*)(char *, uint64_t))v73;
      v73(v47, v11);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v26, v67);
      return v64(v22, v11);
    }
    else
    {
      swift_release();

      v45(v47, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v26, v23);
    }
  }
  else
  {
    v70 = v10;
    v29 = v28;
    v30 = (char *)&v65 - v27;
    v31 = tracingSignposter.unsafeMutableAddressor();
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
    v67 = v23;
    v32(v30, v31, v23);
    CommandID.tag.getter((uint64_t)v72);
    OSSignpostID.init(engine:kind:idA:idB:)();
    v74 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v74(v20, v22, v11);
    sub_1A594A734();
    swift_allocObject();
    sub_1A594A728();
    v33 = *(void (**)(char *, uint64_t))(v12 + 8);
    v33(v22, v11);
    v34 = sub_1A594A650();
    sub_1A594A71C();
    v35 = sub_1A594C138();
    if ((sub_1A594C318() & 1) != 0)
    {
      v72 = v34;
      v73 = v33;
      v36 = v74;
      v66 = v30;
      v37 = v17;
      v38 = v11;
      swift_retain();
      v39 = v70;
      sub_1A594A740();
      swift_release();
      v41 = v68;
      v40 = v69;
      if ((*(unsigned int (**)(char *, uint64_t))(v68 + 88))(v39, v69) == *MEMORY[0x1E0DF2190])
      {
        v42 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v40);
        v42 = "";
      }
      v56 = v22;
      v36(v22, v37, v38);
      v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v57 = 0;
      v58 = sub_1A594A620();
      v59 = v72;
      _os_signpost_emit_with_name_impl(&dword_1A4F90000, v72, v35, v58, "BehaviorCommand", v42, v57, 2u);
      MEMORY[0x1A85B1964](v57, -1, -1);
      swift_release();

      v60 = (uint64_t (*)(char *, uint64_t))v73;
      v73(v37, v38);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v66, v67);
      return v60(v56, v38);
    }
    else
    {
      swift_release();

      v33(v17, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v30, v67);
    }
  }
}

void sub_1A5599638(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *KeyPath;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char *v23;
  NSObject *v24;
  char v25;
  _QWORD v26[4];
  _QWORD v27[4];
  uint64_t v28;
  uint64_t v29;

  v3 = v2;
  v6 = (id)*tracingLog.unsafeMutableAddressor();
  v7 = sub_1A594C318();

  if ((v7 & 1) != 0)
  {
    v8 = *(_QWORD *)(v3 + 56);
    v9 = *(_QWORD *)(a2 + 56);
    v28 = MEMORY[0x1E0DEE9D8];
    v29 = MEMORY[0x1E0DEE9D8];
    KeyPath = (_QWORD *)swift_getKeyPath();
    v11 = MEMORY[0x1E0C80A78](KeyPath);
    v27[2] = &v28;
    MEMORY[0x1E0C80A78](v11);
    v26[2] = v12;
    v13 = sub_1A558E0EC();
    Array.findAppendOnlyDiff<A>(from:id:added:removed:update:)(v9, KeyPath, (uint64_t)sub_1A558E0DC, (uint64_t)v27, (void (*)(char *))sub_1A558E0E4, (uint64_t)v26, (void (*)(char *, char *))nullsub_1, 0, v8, v13);
    swift_release();
    v15 = v28;
    v14 = v29;
    v16 = *(_QWORD *)(v28 + 16);
    if (v16)
    {
      v17 = *(_QWORD *)(type metadata accessor for TaskHistory.Running(0) - 8);
      v18 = v15 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      v19 = *(_DWORD *)(v3 + *(int *)(type metadata accessor for RunningTask() + 32));
      v20 = *(_QWORD *)(v17 + 72);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      do
      {
        sub_1A55983A0(a1, v19);
        v18 += v20;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
    }
    v21 = *(_QWORD *)(v14 + 16);
    if (v21)
    {
      v22 = *(_DWORD *)(v3 + *(int *)(type metadata accessor for RunningTask() + 32));
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v23 = (char *)(v14 + 40);
      do
      {
        v24 = *((_QWORD *)v23 - 1);
        v25 = *v23;
        v23 += 12;
        sub_1A5599084(a1, v22, v24, v25);
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1A559980C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1A55034B8(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1A5599898 + 4 * byte_1A59A7FE8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A5599898()
{
  uint64_t v0;

  sub_1A55034FC(v0, type metadata accessor for ClientCommand);
  return 0;
}

uint64_t sub_1A5599984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  uint64_t (*v7)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for TaskHistory.Running(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (unsigned int *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A55034B8(a1, (uint64_t)v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v9 = *v6;
    result = swift_release();
  }
  else
  {
    v9 = *(_QWORD *)v6;
    v11 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
    result = sub_1A55034FC((uint64_t)v6 + *(int *)(v11 + 64), type metadata accessor for ClientCommand);
  }
  *(_QWORD *)a2 = v9;
  *(_BYTE *)(a2 + 8) = EnumCaseMultiPayload == 1;
  return result;
}

uint64_t type metadata accessor for RunningTask()
{
  uint64_t result;

  result = qword_1EE7971E8;
  if (!qword_1EE7971E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5599A9C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyAuthenticatedTask(a2, a1);
  return a2;
}

uint64_t sub_1A5599AD8(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5516A04(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_DWORD *)(v1 + 40));
}

uint64_t sub_1A5599AE8(int *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t result;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _OWORD v45[3];
  int v46;
  char v47;
  char v48;
  __int128 v49;
  uint64_t v50;
  unsigned int v51;
  __int128 v52;
  uint64_t v53;
  unsigned int v54;

  v3 = v2;
  v6 = type metadata accessor for TaskHistory.Running(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_1A556C73C(v2, (uint64_t)v45);
  if (v48)
  {
    if (v48 != 1)
      return result;
    v11 = v46;
    v42 = v45[0];
    v43 = v45[1];
    v44 = v45[2];
    if ((v47 & 1) != 0)
    {
      sub_1A550EF18((uint64_t)&v42, (uint64_t)&v38);
    }
    else
    {
      v23 = *a1;
      sub_1A550EF18((uint64_t)&v42, (uint64_t)&v38);
      if (v11 == v23)
      {
        sub_1A550E928((uint64_t)&v38);
        goto LABEL_19;
      }
    }
    v24 = *((_QWORD *)&v39 + 1);
    v25 = v40;
    __swift_project_boxed_opaque_existential_1_0(&v38, *((uint64_t *)&v39 + 1));
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v25 + 32))(&v49, v24, v25);
    v53 = v50;
    v54 = v51;
    v52 = v49;
    sub_1A54F81BC((uint64_t)&v52);
    v26 = *((_QWORD *)a1 + 1);
    if (v26
      && (v54 | ((unint64_t)v54 << 32)) == (a1[4] | ((unint64_t)a1[4] << 32)))
    {
      v27 = sub_1A54FF30C(v53, v26);
      sub_1A550E928((uint64_t)&v38);
      sub_1A54F81BC((uint64_t)&v53);
      if (v27)
      {
LABEL_19:
        sub_1A556C73C(v3, (uint64_t)&v38);
        if (v41)
        {
          if (v41 == 1)
          {
            v35 = v38;
            v36 = v39;
            v37 = v40;
            v28 = v3 + *(int *)(type metadata accessor for RunningTask() + 28);
            v29 = *((_QWORD *)&v36 + 1);
            v30 = v37;
            __swift_project_boxed_opaque_existential_1_0(&v35, *((uint64_t *)&v36 + 1));
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 128))(a2, v28, v29, v30);
            sub_1A550E928((uint64_t)&v35);
            sub_1A556C7D8(v3);
            *(_QWORD *)v3 = 1;
            *(_OWORD *)(v3 + 8) = 0u;
            *(_OWORD *)(v3 + 24) = 0u;
            *(_OWORD *)(v3 + 37) = 0u;
            *(_BYTE *)(v3 + 53) = 2;
          }
        }
        else
        {
          sub_1A556C7D8(v3);
          *(_QWORD *)v3 = 1;
          *(_OWORD *)(v3 + 8) = 0u;
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 37) = 0u;
          *(_BYTE *)(v3 + 53) = 2;
          sub_1A556C7D8((uint64_t)&v38);
        }
      }
    }
    else
    {
      sub_1A550E928((uint64_t)&v38);
      sub_1A54F81BC((uint64_t)&v53);
    }
    return sub_1A550E928((uint64_t)&v42);
  }
  v12 = *(_QWORD *)(v2 + 56);
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
    return sub_1A556C7D8((uint64_t)v45);
  v31 = a2;
  v32 = v2;
  v34 = a1[6];
  v14 = *((_QWORD *)a1 + 4);
  v15 = v12 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v16 = *(_QWORD *)(v7 + 72);
  v33 = v12;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  while (1)
  {
    sub_1A55034B8(v15, (uint64_t)v9, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    sub_1A55034FC((uint64_t)v9, type metadata accessor for TaskHistory.Running);
LABEL_8:
    v15 += v16;
    if (!--v13)
    {
      swift_bridgeObjectRelease();
      return sub_1A556C7D8((uint64_t)v45);
    }
  }
  v17 = *v9;
  v18 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
  sub_1A55034FC((uint64_t)v9 + *(int *)(v18 + 64), type metadata accessor for ClientCommand);
  if (!ConnectionCommandIDSet.contains(_:)(v17, v34, v14))
    goto LABEL_8;
  swift_bridgeObjectRelease();
  v19 = v32;
  sub_1A556C73C(v32, (uint64_t)&v38);
  if (v41)
  {
    if (v41 == 1)
    {
      v42 = v38;
      v43 = v39;
      v44 = v40;
      v20 = v19 + *(int *)(type metadata accessor for RunningTask() + 28);
      v21 = *((_QWORD *)&v43 + 1);
      v22 = v44;
      __swift_project_boxed_opaque_existential_1_0(&v42, *((uint64_t *)&v43 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 128))(v31, v20, v21, v22);
      sub_1A550E928((uint64_t)&v42);
      sub_1A556C7D8(v19);
      *(_QWORD *)v19 = 1;
      *(_OWORD *)(v19 + 8) = 0u;
      *(_OWORD *)(v19 + 24) = 0u;
      *(_OWORD *)(v19 + 37) = 0u;
      *(_BYTE *)(v19 + 53) = 2;
    }
  }
  else
  {
    sub_1A556C7D8(v19);
    *(_QWORD *)v19 = 1;
    *(_OWORD *)(v19 + 8) = 0u;
    *(_OWORD *)(v19 + 24) = 0u;
    *(_OWORD *)(v19 + 37) = 0u;
    *(_BYTE *)(v19 + 53) = 2;
    sub_1A556C7D8((uint64_t)&v38);
  }
  return sub_1A556C7D8((uint64_t)v45);
}

uint64_t sub_1A5599F08(uint64_t a1, int a2, uint64_t a3, NSObject *a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  os_log_t v68;
  NSObject *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  os_log_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  os_log_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  NSObject *v87;
  uint64_t *v88;
  uint64_t (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  os_log_t v94;
  char *v95;
  uint64_t v96;
  NSObject *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  int v112;
  _QWORD *v113;
  uint64_t v114;

  v109 = a8;
  v107 = a6;
  v108 = a7;
  v105 = a3;
  v106 = a5;
  v97 = a4;
  v99 = sub_1A594A764();
  v101 = *(_QWORD *)(v99 - 8);
  v10 = MEMORY[0x1E0C80A78](v99);
  v95 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v98 = (char *)&v92 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DC0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v102 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v104 = (char *)&v92 - v16;
  v103 = type metadata accessor for ClientCommand(0);
  v17 = *(_QWORD *)(v103 - 8);
  v18 = MEMORY[0x1E0C80A78](v103);
  v94 = (os_log_t)((char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x1E0C80A78](v18);
  v96 = (uint64_t)&v92 - v21;
  MEMORY[0x1E0C80A78](v20);
  v100 = (uint64_t)&v92 - v22;
  v23 = type metadata accessor for Command();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D28);
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v31 = a1;
  v32 = a2;
  v34 = (char *)&v92 - v33;
  sub_1A54E330C(v31, (uint64_t)&v92 - v33, &qword_1EE797D20);
  v35 = *(int *)(v27 + 48);
  *(_DWORD *)&v34[v35] = v32;
  sub_1A54E330C((uint64_t)v34, (uint64_t)v30, &qword_1EE797D20);
  *(_DWORD *)&v30[v35] = v32;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v30, 1, v23) == 1)
  {
    sub_1A5510284((uint64_t)v34, &qword_1EE797D28);
    sub_1A5510284((uint64_t)v30, &qword_1EE797D20);
    return 1;
  }
  sub_1A54E3394((uint64_t)v30, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Command);
  v37 = v110;
  v38 = sub_1A557702C((uint64_t)v26, v106, v107, v108, v109);
  v40 = (uint64_t)v26;
  if (v37)
  {
    sub_1A55034FC((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Command);
    return sub_1A5510284((uint64_t)v34, &qword_1EE797D28);
  }
  if ((v39 & 1) == 0)
  {
    v41 = v38;
    v42 = (uint64_t)v104;
    sub_1A54E34B4();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v42, 1, v103) == 1)
    {
      sub_1A5510284(v42, &qword_1EE797DC0);
LABEL_8:
      v43 = (uint64_t)v102;
LABEL_21:
      sub_1A54E34B4();
      sub_1A55A32E8(v43, v41, v32);
      sub_1A5510284(v43, &qword_1EE797DC0);
      sub_1A55034FC(v40, (uint64_t (*)(_QWORD))type metadata accessor for Command);
      sub_1A5510284((uint64_t)v34, &qword_1EE797D28);
      return 0;
    }
    v46 = v42;
    v47 = v100;
    sub_1A54E3394(v46, v100, type metadata accessor for ClientCommand);
    v48 = (char *)v97 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
    v49 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)v48 + 1);
    v50 = *((_QWORD *)v48 + 2);
    v106 = *(_QWORD *)v48;
    v107 = v49;
    v51 = *((_QWORD *)v48 + 3);
    v52 = (char *)*((_QWORD *)v48 + 4);
    LODWORD(v109) = *((_DWORD *)v48 + 10);
    v108 = v51;
    v93 = v41;
    v104 = v52;
    if (v51 < 0)
    {
      v70 = v50;
      v71 = v95;
      v72 = v99;
      (*(void (**)(char *))(v101 + 16))(v95);
      sub_1A559C124(v106, (uint64_t)v107, v70, v108);
      v98 = (char *)v70;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v73 = v94;
      sub_1A55034B8(v47, (uint64_t)v94, type metadata accessor for ClientCommand);
      v74 = sub_1A594A74C();
      v75 = sub_1A594C000();
      v97 = v74;
      LODWORD(v96) = v75;
      if (os_log_type_enabled(v74, v75))
      {
        v76 = swift_slowAlloc();
        v110 = 0;
        v77 = v76;
        v92 = (uint64_t *)swift_slowAlloc();
        v113 = v92;
        *(_DWORD *)v77 = 68159747;
        LODWORD(v111) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v77 + 8) = 256;
        LOBYTE(v111) = v106;
        sub_1A594C3CC();
        LODWORD(v103) = v32;
        *(_WORD *)(v77 + 11) = 2082;
        v78 = (unint64_t)v98;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v111 = sub_1A55791B0((uint64_t)v107, v78, (uint64_t *)&v113);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v77 + 21) = 1040;
        LODWORD(v111) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v77 + 27) = 512;
        LOWORD(v111) = v108;
        sub_1A594C3CC();
        *(_WORD *)(v77 + 31) = 2160;
        v111 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v77 + 41) = 2085;
        v111 = (uint64_t)v104;
        v112 = v109;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v79 = sub_1A594B4A8();
        v111 = sub_1A55791B0(v79, v80, (uint64_t *)&v113);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v77 + 51) = 2082;
        v81 = v94;
        ClientCommand.logIdentifier.getter();
        v111 = sub_1A55791B0(v82, v83, (uint64_t *)&v113);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v81, type metadata accessor for ClientCommand);
        *(_WORD *)(v77 + 61) = 2082;
        v41 = v93;
        v84 = CommandID.tag.getter(v93);
        v85 = Tag.debugDescription.getter(v84 & 0xFFFFFFFF000000FFLL);
        v111 = sub_1A55791B0(v85, v86, (uint64_t *)&v113);
        sub_1A594C3CC();
        v32 = v103;
        swift_bridgeObjectRelease();
        v87 = v97;
        _os_log_impl(&dword_1A4F90000, v97, (os_log_type_t)v96, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Sent '%{public}s' command as %{public}s", (uint8_t *)v77, 0x47u);
        v88 = v92;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v88, -1, -1);
        MEMORY[0x1A85B1964](v77, -1, -1);

        (*(void (**)(char *, uint64_t))(v101 + 8))(v95, v99);
        sub_1A55034FC(v100, type metadata accessor for ClientCommand);
        goto LABEL_8;
      }

      sub_1A55034FC((uint64_t)v73, type metadata accessor for ClientCommand);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v71, v72);
      sub_1A55034FC(v47, type metadata accessor for ClientCommand);
    }
    else
    {
      LODWORD(v103) = v32;
      (*(void (**)(char *))(v101 + 16))(v98);
      sub_1A559C124(v106, (uint64_t)v107, v50, v108);
      v53 = v50;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v54 = v96;
      sub_1A55034B8(v47, v96, type metadata accessor for ClientCommand);
      v55 = sub_1A594A74C();
      v56 = sub_1A594C000();
      v57 = v56;
      if (os_log_type_enabled(v55, v56))
      {
        v58 = swift_slowAlloc();
        v97 = swift_slowAlloc();
        v111 = (uint64_t)v97;
        *(_DWORD *)v58 = 68158722;
        LODWORD(v113) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v58 + 8) = 256;
        LODWORD(v95) = v57;
        v59 = v106;
        LOBYTE(v113) = v106;
        sub_1A594C3CC();
        v110 = v34;
        *(_WORD *)(v58 + 11) = 2082;
        v94 = v55;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v60 = v107;
        v113 = (_QWORD *)sub_1A55791B0((uint64_t)v107, v53, &v111);
        v92 = &v114;
        sub_1A594C3CC();
        v61 = v108;
        sub_1A559C154(v59, (uint64_t)v60, v53, v108);
        sub_1A559C154(v59, (uint64_t)v60, v53, v61);
        swift_bridgeObjectRelease();
        *(_WORD *)(v58 + 21) = 2082;
        v109 = v40;
        v62 = v96;
        ClientCommand.logIdentifier.getter();
        v113 = (_QWORD *)sub_1A55791B0(v63, v64, &v111);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v62, type metadata accessor for ClientCommand);
        *(_WORD *)(v58 + 31) = 2082;
        v41 = v93;
        v65 = CommandID.tag.getter(v93);
        v66 = Tag.debugDescription.getter(v65 & 0xFFFFFFFF000000FFLL);
        v113 = (_QWORD *)sub_1A55791B0(v66, v67, &v111);
        v40 = v109;
        sub_1A594C3CC();
        v34 = v110;
        swift_bridgeObjectRelease();
        v68 = v94;
        _os_log_impl(&dword_1A4F90000, v94, (os_log_type_t)v95, "[%.*hhx-%{public}s] Sent '%{public}s' command as %{public}s", (uint8_t *)v58, 0x29u);
        v69 = v97;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v69, -1, -1);
        MEMORY[0x1A85B1964](v58, -1, -1);

        (*(void (**)(char *, uint64_t))(v101 + 8))(v98, v99);
        sub_1A55034FC(v100, type metadata accessor for ClientCommand);
        v32 = v103;
        v43 = (uint64_t)v102;
        goto LABEL_21;
      }

      sub_1A55034FC(v54, type metadata accessor for ClientCommand);
      v90 = v106;
      v89 = v107;
      v91 = v108;
      sub_1A559C154(v106, (uint64_t)v107, v53, v108);
      sub_1A559C154(v90, (uint64_t)v89, v53, v91);
      (*(void (**)(char *, uint64_t))(v101 + 8))(v98, v99);
      sub_1A55034FC(v100, type metadata accessor for ClientCommand);
      v32 = v103;
    }
    v43 = (uint64_t)v102;
    v41 = v93;
    goto LABEL_21;
  }
  v44 = v105 + *(int *)(type metadata accessor for RunningTask() + 36);
  if ((*(_BYTE *)(v44 + 8) & 1) != 0)
  {
    v45 = static MonotonicTime.now()();
    sub_1A55034FC((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Command);
    sub_1A5510284((uint64_t)v34, &qword_1EE797D28);
    *(_QWORD *)v44 = v45;
    *(_BYTE *)(v44 + 8) = 0;
  }
  else
  {
    sub_1A55034FC((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Command);
    sub_1A5510284((uint64_t)v34, &qword_1EE797D28);
  }
  return 2;
}

uint64_t sub_1A559AAE4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t), uint64_t a6, uint64_t a7)
{
  void (**v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  char v32;
  __int128 *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  int i;
  uint64_t v56;
  BOOL v57;
  unsigned __int8 *v58;
  unsigned __int8 *v59;
  uint64_t v60;
  int v61;
  int v62;
  int v63;
  __int128 *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  int v80;
  char v81;
  void (*v82)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  void (*v85)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v94;
  void (**v95)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  unsigned __int8 v119;
  _OWORD v120[3];
  __int128 v121;
  __int128 v122;
  __int128 v123;
  int v124;
  char v125;
  char v126;
  __int128 v127;
  uint64_t v128;
  int v129;
  __int128 v130;
  uint64_t v131;
  unsigned int v132;
  __int128 v133;
  uint64_t v134;
  unsigned int v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  uint64_t v139;
  unsigned int v140;
  __int128 v141;
  unint64_t v142;
  _QWORD v143[3];
  uint64_t v144;

  v103 = a5;
  v104 = a6;
  v102 = a4;
  v96 = a2;
  v99 = a1;
  v100 = type metadata accessor for Command();
  v9 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v95 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for ClientCommand(0);
  v97 = *(_QWORD *)(v11 - 8);
  v98 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DC0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v92 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D20);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = a7;
  v141 = *(_OWORD *)(a7 + 24);
  v143[0] = v141;
  sub_1A559C1E0((_QWORD *)&v141 + 1, &v142);
  sub_1A556C73C(a3, (uint64_t)&v121);
  if (!v126)
  {
    v94 = v22;
    v95 = v9;
    v92 = v13;
    v105 = v121;
    v106 = v122;
    *(_QWORD *)&v107 = v123;
    v34 = *(int *)(type metadata accessor for RunningTask() + 44);
    v35 = *(_DWORD *)(a3 + v34);
    v36 = v35 & 0xFFFFFF;
    *(_DWORD *)(a3 + v34) = v35 + 1;
    v37 = *(_QWORD *)(a3 + 56);
    v38 = *(_QWORD *)(a3 + 64);
    v96 = a3;
    v39 = *((_QWORD *)&v106 + 1);
    v40 = v107;
    __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)&v105, *((uint64_t *)&v106 + 1));
    v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 40);
    sub_1A54FCA28((uint64_t)v143);
    sub_1A559C21C(&v142);
    sub_1A54FCA28((uint64_t)v143);
    sub_1A559C21C(&v142);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v93(v36, v37, v38, v39, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A54E330C((uint64_t)v19, (uint64_t)v17, &qword_1EE797DC0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v17, 1, v98) == 1)
    {
      v41 = (uint64_t)v94;
      v95[7]((uint64_t)v94, 1, 1, v100);
    }
    else
    {
      v73 = (uint64_t)v92;
      sub_1A54E3394((uint64_t)v17, (uint64_t)v92, type metadata accessor for ClientCommand);
      v41 = (uint64_t)v94;
      sub_1A55034B8(v73, (uint64_t)v94, type metadata accessor for ClientCommand);
      v74 = v100;
      swift_storeEnumTagMultiPayload();
      v95[7](v41, 0, 1, v74);
      sub_1A55034FC(v73, type metadata accessor for ClientCommand);
    }
    v75 = v144;
    sub_1A5510284((uint64_t)v19, &qword_1EE797DC0);
    sub_1A54FCA28((uint64_t)v143);
    sub_1A559C21C(&v142);
    v76 = v36;
    v77 = v96;
    v78 = v75;
    v28 = sub_1A5599F08(v41, v76, v96, v99, v102, v103, v104, v101);
    sub_1A54F81BC((uint64_t)v143);
    sub_1A559C244(&v142);
    sub_1A5510284(v41, &qword_1EE797D20);
    if (v78)
    {
      sub_1A5592E90((uint64_t)&v105);
      goto LABEL_39;
    }
    if (v28 < 2u)
    {
      sub_1A556C7D8(v77);
      sub_1A5599A9C((uint64_t)&v105, v77);
      *(_BYTE *)(v77 + 53) = 0;
    }
    sub_1A5592E90((uint64_t)&v105);
    goto LABEL_46;
  }
  if (v126 != 1)
  {
    sub_1A54FCA28((uint64_t)v143);
    sub_1A559C21C(&v142);
    sub_1A54F81BC((uint64_t)v143);
    v28 = 1;
LABEL_47:
    sub_1A559C244(&v142);
    return v28;
  }
  v23 = v124;
  if ((v125 & 1) != 0)
  {
    v24 = a3;
    v106 = v122;
    v107 = v123;
    v105 = v121;
    v25 = *((_QWORD *)&v122 + 1);
    v26 = v123;
    __swift_project_boxed_opaque_existential_1_0(&v105, *((uint64_t *)&v122 + 1));
    v27 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v26 + 32);
    sub_1A54FCA28((uint64_t)v143);
    sub_1A559C21C(&v142);
    sub_1A54FCA28((uint64_t)v143);
    sub_1A559C21C(&v142);
    v27(&v127, v25, v26);
    v28 = v128;
    LODWORD(v25) = v129;
    v137 = v127;
    sub_1A54F81BC((uint64_t)&v137);
    v29 = (uint64_t)v95;
    *(_DWORD *)v95 = v23;
    *(_BYTE *)(v29 + 4) = 1;
    *(_QWORD *)(v29 + 8) = v28;
    *(_DWORD *)(v29 + 16) = v25;
    swift_storeEnumTagMultiPayload();
    v30 = v144;
    v31 = sub_1A557702C(v29, v102, v103, v104, v101);
    if (v30)
    {
      sub_1A55034FC(v29, (uint64_t (*)(_QWORD))type metadata accessor for Command);
      v33 = &v105;
      goto LABEL_6;
    }
    v80 = v31;
    v81 = v32;
    sub_1A55034FC(v29, (uint64_t (*)(_QWORD))type metadata accessor for Command);
    if ((v81 & 1) != 0)
    {
      sub_1A550E928((uint64_t)&v105);
      sub_1A54F81BC((uint64_t)v143);
      sub_1A559C244(&v142);
      sub_1A54F81BC((uint64_t)v143);
      v28 = 2;
    }
    else
    {
      sub_1A556C7D8(v24);
      sub_1A550EF18((uint64_t)&v105, v24);
      *(_DWORD *)(v24 + 48) = v80;
      *(_WORD *)(v24 + 52) = 256;
      v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24
                                                                      + *(int *)(type metadata accessor for RunningTask()
                                                                               + 48));
      v83 = *((_QWORD *)&v106 + 1);
      v84 = v107;
      __swift_project_boxed_opaque_existential_1_0(&v105, *((uint64_t *)&v106 + 1));
      v85 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v84 + 32);
      swift_retain();
      v85(&v133, v83, v84);
      v86 = v134;
      v87 = v135;
      v136 = v133;
      sub_1A54F81BC((uint64_t)&v136);
      v88 = *((_QWORD *)&v106 + 1);
      v89 = v107;
      __swift_project_boxed_opaque_existential_1_0(&v105, *((uint64_t *)&v106 + 1));
      v90 = (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 40))(v88, v89);
      v82(v96, v86, v87, v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1A550E928((uint64_t)&v105);
      sub_1A54F81BC((uint64_t)v143);
      sub_1A559C244(&v142);
      sub_1A54F81BC((uint64_t)v143);
      v28 = 0;
    }
    goto LABEL_47;
  }
  v120[1] = v122;
  v120[2] = v123;
  v120[0] = v121;
  v42 = *((_QWORD *)&v122 + 1);
  v43 = v123;
  __swift_project_boxed_opaque_existential_1_0(v120, *((uint64_t *)&v122 + 1));
  v44 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v43 + 32);
  sub_1A54FCA28((uint64_t)v143);
  sub_1A559C21C(&v142);
  sub_1A54FCA28((uint64_t)v143);
  sub_1A559C21C(&v142);
  v44(&v130, v42, v43);
  v139 = v131;
  v140 = v132;
  v138 = v130;
  sub_1A54F81BC((uint64_t)&v138);
  if (*(_BYTE *)(v96 + 168) != 1 || (v45 = *(_QWORD *)(v96 + 144), (v46 = *(_QWORD *)(v45 + 16)) == 0))
  {
LABEL_40:
    sub_1A54F81BC((uint64_t)&v139);
LABEL_41:
    v28 = 2;
LABEL_42:
    sub_1A550E928((uint64_t)v120);
LABEL_46:
    sub_1A54F81BC((uint64_t)v143);
    sub_1A559C244(&v142);
    sub_1A54F81BC((uint64_t)v143);
    goto LABEL_47;
  }
  v96 = a3;
  v47 = v45 + 32;
  v48 = v140 | ((unint64_t)v140 << 32);
  v49 = *(_OWORD *)(v45 + 160);
  v115 = *(_OWORD *)(v45 + 144);
  v116 = v49;
  v50 = *(_OWORD *)(v45 + 192);
  v117 = *(_OWORD *)(v45 + 176);
  v118 = v50;
  v51 = *(_OWORD *)(v45 + 96);
  v111 = *(_OWORD *)(v45 + 80);
  v112 = v51;
  v52 = *(_OWORD *)(v45 + 128);
  v113 = *(_OWORD *)(v45 + 112);
  v114 = v52;
  v53 = *(_OWORD *)(v45 + 48);
  v108 = *(_OWORD *)(v45 + 32);
  v109 = v53;
  v110 = *(_OWORD *)(v45 + 64);
  v54 = 1;
  v28 = v114;
  if (!(_QWORD)v114)
    goto LABEL_14;
LABEL_13:
  swift_beginAccess();
  for (i = *(_DWORD *)(v28 + 16); ; i = 0)
  {
    if ((DWORD2(v109) | ((unint64_t)DWORD2(v109) << 32)) == v48)
    {
      v56 = *(_QWORD *)(v109 + 16);
      if (v56 == *(_QWORD *)(v139 + 16))
      {
        if (v56)
          v57 = (_QWORD)v109 == v139;
        else
          v57 = 1;
        if (!v57)
        {
          if (*(unsigned __int8 *)(v109 + 32) != *(unsigned __int8 *)(v139 + 32))
            goto LABEL_33;
          if (v56 != 1)
          {
            if (*(unsigned __int8 *)(v109 + 33) != *(unsigned __int8 *)(v139 + 33))
              goto LABEL_33;
            if (v56 != 2)
            {
              if (*(unsigned __int8 *)(v109 + 34) != *(unsigned __int8 *)(v139 + 34))
                goto LABEL_33;
              v58 = (unsigned __int8 *)(v109 + 35);
              v59 = (unsigned __int8 *)(v139 + 35);
              v60 = v56 - 3;
              while (v60)
              {
                v62 = *v58++;
                v61 = v62;
                v63 = *v59++;
                --v60;
                if (v61 != v63)
                  goto LABEL_33;
              }
            }
          }
        }
        if (v28 && i == v23)
          break;
      }
    }
LABEL_33:
    if (v54 == v46)
      goto LABEL_40;
    v64 = (__int128 *)(v47 + 176 * v54);
    v65 = *v64;
    v66 = v64[2];
    v109 = v64[1];
    v110 = v66;
    v108 = v65;
    v67 = v64[3];
    v68 = v64[4];
    v69 = v64[6];
    v113 = v64[5];
    v114 = v69;
    v111 = v67;
    v112 = v68;
    v70 = v64[7];
    v71 = v64[8];
    v72 = v64[10];
    v117 = v64[9];
    v118 = v72;
    v115 = v70;
    v116 = v71;
    ++v54;
    v28 = v114;
    if ((_QWORD)v114)
      goto LABEL_13;
LABEL_14:
    ;
  }
  swift_beginAccess();
  sub_1A54E30E0(v28 + 24, (uint64_t)&v105);
  sub_1A54FCA28((uint64_t)v143);
  sub_1A559C21C(&v142);
  sub_1A54E3150((uint64_t)&v108);
  swift_retain();
  v91 = v144;
  sub_1A55968B0((uint64_t)&v105, v23, (uint64_t)v120, v96, v99, v102, v103, v104, &v119, v101);
  if (!v91)
  {
    sub_1A54E311C((uint64_t)&v105);
    swift_release();
    sub_1A54E31EC((uint64_t)&v108);
    sub_1A54F81BC((uint64_t)&v139);
    v28 = v119;
    if (v119 != 3)
      goto LABEL_42;
    goto LABEL_41;
  }
  sub_1A54E311C((uint64_t)&v105);
  swift_release();
  sub_1A54E31EC((uint64_t)&v108);
  sub_1A54F81BC((uint64_t)&v139);
  v33 = v120;
LABEL_6:
  sub_1A550E928((uint64_t)v33);
LABEL_39:
  sub_1A54F81BC((uint64_t)v143);
  sub_1A559C244(&v142);
  sub_1A54F81BC((uint64_t)v143);
  sub_1A559C244(&v142);
  return v28;
}

unint64_t sub_1A559B43C(NSObject *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t), uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12, unint64_t a13)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  BOOL v25;
  _QWORD *v26;
  NSObject *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  int v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(NSObject *, uint64_t);
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  int v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _BYTE *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE v80[12];
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t);
  uint64_t v90;
  NSObject *v91;
  uint64_t v92;
  _QWORD *v93;
  unint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  char v102;
  __int128 v103;
  uint64_t v104;
  unsigned int v105;
  __int128 v106;
  _QWORD v107[2];
  char v108;
  _QWORD v109[2];
  uint64_t v110;

  v93 = a5;
  v90 = a4;
  v89 = a3;
  LODWORD(v95) = a11;
  v88 = sub_1A594A764();
  v92 = *(_QWORD *)(v88 - 8);
  v18 = MEMORY[0x1E0C80A78](v88);
  v91 = &v80[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v18);
  v87 = &v80[-v20];
  v107[0] = a9;
  v107[1] = a10;
  v108 = v95;
  v109[0] = a12;
  v109[1] = a13;
  v95 = a12;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v94 = a13;
  sub_1A54E7028(a13);
  v21 = v94;
  while (1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E7028(v21);
    v22 = a2;
    v23 = v110;
    v24 = sub_1A559AAE4(a1, a2, (uint64_t)v93, a6, a7, a8, (uint64_t)v107);
    swift_bridgeObjectRelease();
    sub_1A54E7074(v21);
    v110 = v23;
    if (v23)
      break;
    if (v24)
    {
      v25 = v24 == 1;
      v26 = v93;
      v27 = a1;
      v28 = v91;
      v29 = v90;
      v30 = v89;
      do
        v31 = sub_1A5595CF0(v27, a2, v30, v29);
      while (!v31);
      v32 = v92;
      if (v31 != 1 || !v25 || *(_QWORD *)(v26[7] + 16))
        break;
      v34 = (char *)v27 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
      v35 = *(_QWORD *)v34;
      v85 = *((_QWORD *)v34 + 1);
      v90 = *((_QWORD *)v34 + 2);
      v36 = *((_QWORD *)v34 + 3);
      v37 = *((_QWORD *)v34 + 4);
      LODWORD(v89) = *((_DWORD *)v34 + 10);
      v86 = v36;
      v84 = v37;
      v83 = v35;
      if (v36 < 0)
      {
        v49 = v88;
        (*(void (**)(NSObject *, NSObject *))(v32 + 16))(v28, v27);
        sub_1A559C124(v35, v85, v90, v86);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v50 = sub_1A594A74C();
        v51 = sub_1A594C030();
        v52 = v51;
        if (os_log_type_enabled(v50, v51))
        {
          v53 = swift_slowAlloc();
          v87 = (_BYTE *)swift_slowAlloc();
          *(_QWORD *)&v96 = v87;
          *(_DWORD *)v53 = 68159235;
          LODWORD(v99) = 2;
          LODWORD(v82) = v52;
          sub_1A594C3CC();
          *(_WORD *)(v53 + 8) = 256;
          LOBYTE(v99) = v83;
          sub_1A594C3CC();
          *(_WORD *)(v53 + 11) = 2082;
          v54 = v90;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          *(_QWORD *)&v99 = sub_1A55791B0(v85, v54, (uint64_t *)&v96);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v53 + 21) = 1040;
          LODWORD(v99) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v53 + 27) = 512;
          LOWORD(v99) = v86;
          sub_1A594C3CC();
          *(_WORD *)(v53 + 31) = 2160;
          *(_QWORD *)&v99 = 0x786F626C69616DLL;
          v26 = v93;
          sub_1A594C3CC();
          *(_WORD *)(v53 + 41) = 2085;
          *(_QWORD *)&v99 = v84;
          DWORD2(v99) = (_DWORD)v89;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v55 = sub_1A594B4A8();
          *(_QWORD *)&v99 = sub_1A55791B0(v55, v56, (uint64_t *)&v96);
          sub_1A594C3CC();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v50, (os_log_type_t)v82, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking task as complete.", (uint8_t *)v53, 0x33u);
          v57 = v87;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v57, -1, -1);
          MEMORY[0x1A85B1964](v53, -1, -1);

          v48 = *(void (**)(NSObject *, uint64_t))(v92 + 8);
          v58 = &v110;
          goto LABEL_17;
        }

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v48 = *(void (**)(NSObject *, uint64_t))(v32 + 8);
        v63 = v28;
        v64 = v49;
      }
      else
      {
        (*(void (**)(_BYTE *, NSObject *, uint64_t))(v32 + 16))(v87, v27, v88);
        sub_1A559C124(v35, v85, v90, v86);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v38 = sub_1A594A74C();
        v39 = sub_1A594C030();
        v40 = v39;
        v91 = v38;
        if (os_log_type_enabled(v38, v39))
        {
          v41 = swift_slowAlloc();
          v82 = swift_slowAlloc();
          *(_QWORD *)&v99 = v82;
          *(_DWORD *)v41 = 68158210;
          LODWORD(v96) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v41 + 8) = 256;
          LOBYTE(v96) = v35;
          sub_1A594C3CC();
          *(_WORD *)(v41 + 11) = 2082;
          v42 = v90;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v43 = v85;
          *(_QWORD *)&v96 = sub_1A55791B0(v85, v42, (uint64_t *)&v99);
          sub_1A594C3CC();
          v81 = v40;
          v44 = v86;
          sub_1A559C154(v35, v43, v42, v86);
          sub_1A559C154(v83, v43, v42, v44);
          swift_bridgeObjectRelease();
          v45 = v91;
          _os_log_impl(&dword_1A4F90000, v91, (os_log_type_t)v81, "[%.*hhx-%{public}s] Marking task as complete.", (uint8_t *)v41, 0x15u);
          v46 = v82;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v46, -1, -1);
          v47 = v41;
          a2 = v22;
          MEMORY[0x1A85B1964](v47, -1, -1);

          v48 = *(void (**)(NSObject *, uint64_t))(v92 + 8);
        }
        else
        {
          v59 = v35;
          v60 = v85;
          v61 = v90;
          v62 = v86;
          sub_1A559C154(v59, v85, v90, v86);
          sub_1A559C154(v83, v60, v61, v62);

          v48 = *(void (**)(NSObject *, uint64_t))(v32 + 8);
        }
        v58 = v109;
LABEL_17:
        v63 = *(v58 - 32);
        v64 = v88;
      }
      v48(v63, v64);
      sub_1A556C73C((uint64_t)v26, (uint64_t)&v99);
      if (v102)
      {
        if (v102 == 1)
        {
          v96 = v99;
          v97 = v100;
          v98 = v101;
          v93 = *(_QWORD **)((char *)v26 + *(int *)(type metadata accessor for RunningTask() + 52));
          v65 = *((_QWORD *)&v97 + 1);
          v66 = v27;
          v67 = (uint64_t)v26;
          v68 = v98;
          __swift_project_boxed_opaque_existential_1_0(&v96, *((uint64_t *)&v97 + 1));
          v69 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v68 + 32);
          swift_retain();
          v69(&v103, v65, v68);
          v70 = v104;
          v71 = v105;
          v106 = v103;
          sub_1A54F81BC((uint64_t)&v106);
          v72 = *((_QWORD *)&v97 + 1);
          v73 = a2;
          v74 = v98;
          __swift_project_boxed_opaque_existential_1_0(&v96, *((uint64_t *)&v97 + 1));
          v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 40))(v72, v74);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, NSObject *))v93)(v73, v70, v71, v75, v66);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v76 = *((_QWORD *)&v97 + 1);
          v77 = v98;
          __swift_project_boxed_opaque_existential_1_0(&v96, *((uint64_t *)&v97 + 1));
          (*(void (**)(uint64_t, NSObject *, uint64_t, uint64_t))(v77 + 120))(v73, v66, v76, v77);
          sub_1A550E928((uint64_t)&v96);
          sub_1A556C7D8(v67);
          *(_OWORD *)v67 = 0u;
          *(_OWORD *)(v67 + 16) = 0u;
          *(_OWORD *)(v67 + 32) = 0u;
          *(_QWORD *)(v67 + 45) = 0;
          *(_BYTE *)(v67 + 53) = 2;
        }
      }
      else
      {
        v97 = v100;
        v96 = v99;
        v78 = v101;
        *(_QWORD *)&v98 = v101;
        v79 = *((_QWORD *)&v100 + 1);
        __swift_project_boxed_opaque_existential_1_0(&v96, *((uint64_t *)&v100 + 1));
        (*(void (**)(uint64_t, NSObject *, uint64_t, uint64_t))(v78 + 88))(a2, v27, v79, v78);
        sub_1A5592E90((uint64_t)&v96);
        sub_1A556C7D8((uint64_t)v26);
        *(_OWORD *)v26 = 0u;
        *((_OWORD *)v26 + 1) = 0u;
        *((_OWORD *)v26 + 2) = 0u;
        *(_QWORD *)((char *)v26 + 45) = 0;
        *((_BYTE *)v26 + 53) = 2;
      }
      break;
    }
  }
  swift_bridgeObjectRelease();
  return sub_1A54E7074(v94);
}

uint64_t sub_1A559BEF8(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;

  v23 = a6;
  v24 = a7;
  v22 = a5;
  v13 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = ((char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(_QWORD *)(a8 + 24);
  v16 = *(_QWORD *)(a8 + 32);
  v21 = (uint64_t)a4 + *(int *)(type metadata accessor for RunningTask() + 28);
  sub_1A55034B8(v21, (uint64_t)v15, type metadata accessor for Task.Logger);
  v18 = *(_QWORD *)a8;
  v19 = *(_QWORD *)(a8 + 8);
  LOBYTE(a8) = *(_BYTE *)(a8 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E7028(v16);
  sub_1A559B43C(v15, a1, a2, a3, a4, v22, v23, v24, v18, v19, a8, v17, v16);
  swift_bridgeObjectRelease();
  sub_1A54E7074(v16);
  return sub_1A55034FC((uint64_t)v15, type metadata accessor for Task.Logger);
}

uint64_t sub_1A559C124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 < 0)
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A559C154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (a4 < 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A559C190(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

uint64_t sub_1A559C1AC(uint64_t a1, uint64_t a2)
{
  assignWithTake for RunningTask.Task(a2, a1);
  return a2;
}

_QWORD *sub_1A559C1E0(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8_4(a2, a1);
  return a2;
}

unint64_t *sub_1A559C21C(unint64_t *a1)
{
  sub_1A54E7028(*a1);
  return a1;
}

unint64_t *sub_1A559C244(unint64_t *a1)
{
  sub_1A54E7074(*a1);
  return a1;
}

uint64_t sub_1A559C270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1_0(a1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 96))(v7, a2, a3, v6, v8, v9);
}

unint64_t sub_1A559C2E8(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_1A55235A0(result);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

unint64_t sub_1A559C31C(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_1A5524084(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1A559C350(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;

  return sub_1A55933B8(a1, a2, a3, a4 | ((HIDWORD(a4) & 1) << 32), v4[2], v4[3], v4[4]);
}

uint64_t sub_1A559C380(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(unsigned int *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  v7 = *(_QWORD *)(v2 + 48);
  v8 = *(_QWORD *)(v2 + 64);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(unsigned __int8 *)(v2 + 56);
  __swift_mutable_project_boxed_opaque_existential_1_0(a1, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 104))(v3, v4, v5, v6, v7, v11, a2, v8, v9, v10);
}

unint64_t sub_1A559C41C()
{
  unint64_t result;

  result = qword_1EE7A8B28;
  if (!qword_1EE7A8B28)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A82C8, &type metadata for RunningTask.Error);
    atomic_store(result, (unint64_t *)&qword_1EE7A8B28);
  }
  return result;
}

uint64_t sub_1A559C460(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(unsigned int *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1_0(a1, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 112))(v4, v6, a2, v5, v7, v8);
}

uint64_t sub_1A559C4D8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((~a2 & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t sub_1A559C4F4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((~a2 & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

uint64_t storeEnumTagSinglePayload for RunningTask.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A559C550 + 4 * byte_1A59A8010[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A559C570 + 4 * byte_1A59A8015[v4]))();
}

_BYTE *sub_1A559C550(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A559C570(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A559C578(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A559C580(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A559C588(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A559C590(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RunningTask.Error()
{
  return &type metadata for RunningTask.Error;
}

ValueMetadata *type metadata accessor for RunningTask.CommandID()
{
  return &type metadata for RunningTask.CommandID;
}

uint64_t destroy for RunningTask.Task(uint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 53);
  if (v1 >= 2)
    v1 = *(_DWORD *)result + 2;
  if (v1 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1(result);
    return swift_bridgeObjectRelease();
  }
  else if (!v1)
  {
    return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

uint64_t initializeWithCopy for RunningTask.Task(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(unsigned __int8 *)(a2 + 53);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  if (v4 == 1)
  {
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
    *(_BYTE *)(a1 + 53) = 1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else if (v4)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 46) = *(_QWORD *)(a2 + 46);
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_BYTE *)(a1 + 53) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for RunningTask.Task(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 53);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    v5 = *((unsigned __int8 *)a2 + 53);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v7 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v7 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      v8 = *((_DWORD *)a2 + 12);
      *(_BYTE *)(a1 + 52) = *((_BYTE *)a2 + 52);
      *(_DWORD *)(a1 + 48) = v8;
      *(_BYTE *)(a1 + 53) = 1;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else if (v5)
    {
      v9 = *a2;
      v10 = a2[1];
      v11 = a2[2];
      *(_QWORD *)(a1 + 46) = *(_QWORD *)((char *)a2 + 46);
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 32) = v11;
      *(_OWORD *)a1 = v9;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 53) = 0;
    }
  }
  return a1;
}

__n128 __swift_memcpy54_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 46) = *(_QWORD *)(a2 + 46);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RunningTask.Task(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 53);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    v5 = *(unsigned __int8 *)(a2 + 53);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
      *(_BYTE *)(a1 + 53) = 1;
    }
    else
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 46) = *(_QWORD *)(a2 + 46);
      }
      else
      {
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 53) = 0;
      }
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RunningTask.Task(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 54))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 53);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RunningTask.Task(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 46) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 54) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 54) = 0;
    if (a2)
      *(_BYTE *)(result + 53) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A559C988(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 53);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1A559C9A4(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 45) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 53) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RunningTask.Task()
{
  return &type metadata for RunningTask.Task;
}

ValueMetadata *type metadata accessor for RunningTask.TracingID()
{
  return &type metadata for RunningTask.TracingID;
}

uint64_t sub_1A559C9F0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v8 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    if (*((_BYTE *)a2 + 53) == 1)
    {
      v9 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v9;
      (**(void (***)(uint64_t, uint64_t *))(v9 - 8))(a1, a2);
      *(_QWORD *)(v4 + 40) = a2[5];
      *(_DWORD *)(v4 + 48) = *((_DWORD *)a2 + 12);
      *(_BYTE *)(v4 + 52) = *((_BYTE *)a2 + 52);
      *(_BYTE *)(v4 + 53) = 1;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else if (*((_BYTE *)a2 + 53))
    {
      v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_QWORD *)(a1 + 46) = *(uint64_t *)((char *)a2 + 46);
    }
    else
    {
      v7 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v7;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
      *(_BYTE *)(v4 + 53) = 0;
    }
    *(_QWORD *)(v4 + 56) = a2[7];
    *(_OWORD *)(v4 + 64) = *((_OWORD *)a2 + 4);
    v11 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(v4 + 104) = v11;
    v12 = v11;
    v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v13(v4 + 80, (uint64_t)(a2 + 10), v12);
    v14 = a3[7];
    v15 = v4 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = sub_1A594A764();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = *(int *)(type metadata accessor for Task.Logger(0) + 20);
    v19 = v15 + v18;
    v20 = v16 + v18;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_QWORD *)(v20 + 24);
    v25 = *(_QWORD *)(v20 + 32);
    v26 = *(_DWORD *)(v20 + 40);
    sub_1A559C124(*(_QWORD *)v20, v22, v23, v24);
    *(_QWORD *)v19 = v21;
    *(_QWORD *)(v19 + 8) = v22;
    *(_QWORD *)(v19 + 16) = v23;
    *(_QWORD *)(v19 + 24) = v24;
    *(_QWORD *)(v19 + 32) = v25;
    *(_DWORD *)(v19 + 40) = v26;
    v27 = a3[9];
    *(_DWORD *)(v4 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    v28 = v4 + v27;
    v29 = (uint64_t)a2 + v27;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
    v30 = a3[11];
    *(_DWORD *)(v4 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
    *(_DWORD *)(v4 + v30) = *(_DWORD *)((char *)a2 + v30);
    v31 = a3[12];
    v32 = a3[13];
    v33 = (_QWORD *)(v4 + v31);
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = (_QWORD *)(v4 + v32);
    v37 = (uint64_t *)((char *)a2 + v32);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1A559CC34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_BYTE *)(a1 + 53) == 1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
  }
  else if (!*(_BYTE *)(a1 + 53))
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for Task.Logger(0);
  sub_1A559C154(*(_QWORD *)(v4 + *(int *)(v6 + 20)), *(_QWORD *)(v4 + *(int *)(v6 + 20) + 8), *(_QWORD *)(v4 + *(int *)(v6 + 20) + 16), *(_QWORD *)(v4 + *(int *)(v6 + 20) + 24));
  swift_release();
  return swift_release();
}

uint64_t sub_1A559CD04(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;

  if (*(_BYTE *)(a2 + 53) == 1)
  {
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
    *(_BYTE *)(a1 + 53) = 1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else if (*(_BYTE *)(a2 + 53))
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 46) = *(_QWORD *)(a2 + 46);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    *(_BYTE *)(a1 + 53) = 0;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v9;
  v10 = v9;
  v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11(a1 + 80, a2 + 80, v10);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = *(int *)(type metadata accessor for Task.Logger(0) + 20);
  v17 = v13 + v16;
  v18 = v14 + v16;
  v19 = *(_QWORD *)v18;
  v20 = *(_QWORD *)(v18 + 8);
  v21 = *(_QWORD *)(v18 + 16);
  v22 = *(_QWORD *)(v18 + 24);
  v23 = *(_QWORD *)(v18 + 32);
  v24 = *(_DWORD *)(v18 + 40);
  sub_1A559C124(*(_QWORD *)v18, v20, v21, v22);
  *(_QWORD *)v17 = v19;
  *(_QWORD *)(v17 + 8) = v20;
  *(_QWORD *)(v17 + 16) = v21;
  *(_QWORD *)(v17 + 24) = v22;
  *(_QWORD *)(v17 + 32) = v23;
  *(_DWORD *)(v17 + 40) = v24;
  v25 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  v28 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v28) = *(_DWORD *)(a2 + v28);
  v29 = a3[12];
  v30 = a3[13];
  v31 = (_QWORD *)(a1 + v29);
  v32 = (_QWORD *)(a2 + v29);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = (_QWORD *)(a1 + v30);
  v35 = (_QWORD *)(a2 + v30);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1A559CF20(uint64_t a1, __int128 *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;

  if ((__int128 *)a1 != a2)
  {
    sub_1A556C7D8(a1);
    if (*((_BYTE *)a2 + 53) == 1)
    {
      v7 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v7 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      v8 = *((_DWORD *)a2 + 12);
      *(_BYTE *)(a1 + 52) = *((_BYTE *)a2 + 52);
      *(_DWORD *)(a1 + 48) = v8;
      *(_BYTE *)(a1 + 53) = 1;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else if (*((_BYTE *)a2 + 53))
    {
      v9 = *a2;
      v10 = a2[1];
      v11 = a2[2];
      *(_QWORD *)(a1 + 46) = *(_QWORD *)((char *)a2 + 46);
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 32) = v11;
      *(_OWORD *)a1 = v9;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 53) = 0;
    }
  }
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)a2 + 10);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = (uint64_t)a2 + v12;
  v15 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = *(int *)(type metadata accessor for Task.Logger(0) + 20);
  v17 = v13 + v16;
  v18 = v14 + v16;
  v19 = *(_QWORD *)v18;
  v20 = *(_QWORD *)(v18 + 8);
  v21 = *(_QWORD *)(v18 + 16);
  v22 = *(_QWORD *)(v18 + 24);
  v23 = *(_QWORD *)(v18 + 32);
  v24 = *(_DWORD *)(v18 + 40);
  sub_1A559C124(*(_QWORD *)v18, v20, v21, v22);
  v25 = *(_QWORD *)v17;
  v26 = *(_QWORD *)(v17 + 8);
  v27 = *(_QWORD *)(v17 + 16);
  v28 = *(_QWORD *)(v17 + 24);
  *(_QWORD *)v17 = v19;
  *(_QWORD *)(v17 + 8) = v20;
  *(_QWORD *)(v17 + 16) = v21;
  *(_QWORD *)(v17 + 24) = v22;
  *(_QWORD *)(v17 + 32) = v23;
  *(_DWORD *)(v17 + 40) = v24;
  sub_1A559C154(v25, v26, v27, v28);
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = (uint64_t)a2 + v29;
  v32 = *(_BYTE *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = v32;
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)((char *)a2 + a3[11]);
  v33 = a3[12];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  swift_retain();
  swift_release();
  v37 = a3[13];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A559D174(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 46) = *(_QWORD *)(a2 + 46);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v10 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(type metadata accessor for Task.Logger(0) + 20);
  v12 = (_OWORD *)(v8 + v11);
  v13 = (_OWORD *)(v9 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  *(_OWORD *)((char *)v12 + 28) = *(_OWORD *)((char *)v13 + 28);
  v15 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  v18 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v18) = *(_DWORD *)(a2 + v18);
  v19 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  return a1;
}

uint64_t sub_1A559D280(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_1A556C7D8(a1);
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 46) = *(_QWORD *)(a2 + 46);
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(type metadata accessor for Task.Logger(0) + 20);
  v13 = v9 + v12;
  v14 = v10 + v12;
  v15 = *(_QWORD *)(v14 + 32);
  v16 = *(_DWORD *)(v14 + 40);
  v17 = *(_QWORD *)v13;
  v18 = *(_QWORD *)(v13 + 8);
  v19 = *(_QWORD *)(v13 + 16);
  v20 = *(_QWORD *)(v13 + 24);
  v21 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v21;
  *(_QWORD *)(v13 + 32) = v15;
  *(_DWORD *)(v13 + 40) = v16;
  sub_1A559C154(v17, v18, v19, v20);
  v22 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v25 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v25) = *(_DWORD *)(a2 + v25);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  swift_release();
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  swift_release();
  return a1;
}

uint64_t sub_1A559D3F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A559D400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Task.Logger(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1A559D47C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A559D488(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 56) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Task.Logger(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A559D4FC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Task.Logger(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1A559D5B4()
{
  unint64_t result;

  result = qword_1EE7A8B30;
  if (!qword_1EE7A8B30)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8130, &type metadata for RunningTask.TracingID);
    atomic_store(result, (unint64_t *)&qword_1EE7A8B30);
  }
  return result;
}

unint64_t sub_1A559D5FC()
{
  unint64_t result;

  result = qword_1EE7A8B38;
  if (!qword_1EE7A8B38)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A81D0, &type metadata for RunningTask.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE7A8B38);
  }
  return result;
}

unint64_t sub_1A559D644()
{
  unint64_t result;

  result = qword_1EE7A8B40;
  if (!qword_1EE7A8B40)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A82A0, &type metadata for RunningTask.Error);
    atomic_store(result, (unint64_t *)&qword_1EE7A8B40);
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningTask.CommandID.Generator()
{
  return &type metadata for RunningTask.CommandID.Generator;
}

ValueMetadata *type metadata accessor for RunningTask.ActionID()
{
  return &type metadata for RunningTask.ActionID;
}

ValueMetadata *type metadata accessor for RunningTask.ActionID.Generator()
{
  return &type metadata for RunningTask.ActionID.Generator;
}

unint64_t sub_1A559D6BC()
{
  unint64_t result;

  result = qword_1EE7A8B48;
  if (!qword_1EE7A8B48)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A831C, &type metadata for RunningTask.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE7A8B48);
  }
  return result;
}

uint64_t sub_1A559D708(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[8];
  _BYTE v43[40];
  _BYTE v44[8];
  _BYTE v45[40];
  __int128 v46;
  uint64_t v47;
  unsigned int v48;
  _OWORD v49[4];

  v4 = a1;
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1_0(a1, v5);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v6 + 16))(v49, v5, v6);
  if (*(_QWORD *)(a2 + 16))
  {
    sub_1A594CE64();
    sub_1A594C6A8();
    v7 = sub_1A594CED0();
    v8 = -1 << *(_BYTE *)(a2 + 32);
    v9 = v7 & ~v8;
    if (((*(_QWORD *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
    {
      v10 = ~v8;
      do
      {
        sub_1A55530FC(*(_QWORD *)(a2 + 48) + 48 * v9, (uint64_t)&v46);
        v11 = v46;
        v12 = *(_QWORD *)&v49[0];
        sub_1A55530FC((uint64_t)&v46, (uint64_t)v44);
        sub_1A55530FC((uint64_t)v49, (uint64_t)v42);
        if (v11 == v12)
        {
          v13 = MEMORY[0x1A85AEB14](v45, v43);
          sub_1A5553138((uint64_t)v42);
          sub_1A5553138((uint64_t)v44);
          sub_1A5553138((uint64_t)&v46);
          if ((v13 & 1) != 0)
          {
            sub_1A5553138((uint64_t)v49);
            return 0;
          }
        }
        else
        {
          sub_1A5553138((uint64_t)v42);
          sub_1A5553138((uint64_t)v44);
          sub_1A5553138((uint64_t)&v46);
        }
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
  }
  sub_1A5553138((uint64_t)v49);
  v14 = v4[3];
  v15 = v4[4];
  __swift_project_boxed_opaque_existential_1_0(v4, v14);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  v39 = *(_QWORD *)(result + 16);
  if (v39)
  {
    v37 = v4;
    v17 = 0;
    v40 = result;
    v41 = result + 32;
    v18 = a2 + 56;
    while (v17 < *(_QWORD *)(result + 16))
    {
      sub_1A55530FC(v41 + 48 * v17, (uint64_t)v49);
      if (*(_QWORD *)(a2 + 16))
      {
        sub_1A594CE64();
        sub_1A594C6A8();
        v19 = sub_1A594CED0();
        v20 = -1 << *(_BYTE *)(a2 + 32);
        v21 = v19 & ~v20;
        if (((*(_QWORD *)(v18 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        {
          v22 = ~v20;
          do
          {
            sub_1A55530FC(*(_QWORD *)(a2 + 48) + 48 * v21, (uint64_t)&v46);
            v23 = v46;
            v24 = *(_QWORD *)&v49[0];
            sub_1A55530FC((uint64_t)&v46, (uint64_t)v44);
            sub_1A55530FC((uint64_t)v49, (uint64_t)v42);
            if (v23 == v24)
            {
              v25 = MEMORY[0x1A85AEB14](v45, v43);
              sub_1A5553138((uint64_t)v42);
              sub_1A5553138((uint64_t)v44);
              sub_1A5553138((uint64_t)&v46);
              if ((v25 & 1) != 0)
              {
                sub_1A5553138((uint64_t)v49);
                swift_bridgeObjectRelease();
                return 0;
              }
            }
            else
            {
              sub_1A5553138((uint64_t)v42);
              sub_1A5553138((uint64_t)v44);
              sub_1A5553138((uint64_t)&v46);
            }
            v21 = (v21 + 1) & v22;
          }
          while (((*(_QWORD *)(v18 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0);
        }
      }
      ++v17;
      sub_1A5553138((uint64_t)v49);
      result = v40;
      if (v17 == v39)
      {
        swift_bridgeObjectRelease();
        v4 = v37;
        goto LABEL_23;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_23:
    v26 = v4[3];
    v27 = v4[4];
    __swift_project_boxed_opaque_existential_1_0(v4, v26);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v27 + 32))(&v46, v26, v27);
    v28 = v47;
    v29 = v48;
    v49[0] = v46;
    sub_1A54F81BC((uint64_t)v49);
    if (*(_QWORD *)(a3 + 16) && (v30 = sub_1A54FDC30(v28, v29), (v31 & 1) != 0))
    {
      v32 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v30);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      v33 = v4[3];
      v34 = v4[4];
      __swift_project_boxed_opaque_existential_1_0(v4, v33);
      v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 40))(v33, v34);
      v36 = sub_1A554A304(v35, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v36 & 1) == 0)
        return 0;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return 1;
  }
  return result;
}

uint64_t sub_1A559DB18(__int128 *a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t i;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  ValueMetadata *v11;
  ValueMetadata *v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  __int128 v20;
  uint64_t inited;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  ValueMetadata *v28;
  ValueMetadata *v29;
  char v30;
  int v33;
  int v34;
  ValueMetadata *v35;
  char v36[8];
  uint64_t v37;
  ValueMetadata *v38;
  int v39;
  char v40;
  ValueMetadata *v41;
  __int128 v42;
  __int128 v43;
  int v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  int v49;
  char v50;
  uint64_t v51;
  char v52;
  ValueMetadata *v53;
  char v54[8];
  _BYTE v55[40];
  ValueMetadata *v56;
  uint64_t v57;
  __int128 v58;

  v33 = *((_DWORD *)a1 + 8);
  v34 = a2 & 1;
  v35 = (ValueMetadata *)*((_QWORD *)a1 + 3);
  v4 = a3 + 56;
  sub_1A550F5DC();
  for (i = 0; i != 3; ++i)
  {
    v6 = byte_1E4EF2260[i + 32];
    v38 = &type metadata for DownloadTask;
    v41 = v35;
    LODWORD(v42) = v33;
    BYTE4(v42) = v34;
    BYTE5(v42) = v6;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594C6B4();
    if (*(_QWORD *)(a3 + 16))
    {
      sub_1A594CE64();
      sub_1A594C6A8();
      v7 = sub_1A594CED0();
      v8 = -1 << *(_BYTE *)(a3 + 32);
      v9 = v7 & ~v8;
      if (((*(_QWORD *)(v4 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
      {
        v10 = ~v8;
        do
        {
          sub_1A55530FC(*(_QWORD *)(a3 + 48) + 48 * v9, (uint64_t)&v41);
          v11 = v41;
          v12 = v38;
          sub_1A55530FC((uint64_t)&v41, (uint64_t)&v56);
          sub_1A55530FC((uint64_t)&v38, (uint64_t)v54);
          if (v11 == v12)
          {
            v13 = MEMORY[0x1A85AEB14](&v57, v55);
            sub_1A5553138((uint64_t)v54);
            sub_1A5553138((uint64_t)&v56);
            sub_1A5553138((uint64_t)&v41);
            if ((v13 & 1) != 0)
            {
              sub_1A5553138((uint64_t)&v38);
              return 1;
            }
          }
          else
          {
            sub_1A5553138((uint64_t)v54);
            sub_1A5553138((uint64_t)&v56);
            sub_1A5553138((uint64_t)&v41);
          }
          v9 = (v9 + 1) & v10;
        }
        while (((*(_QWORD *)(v4 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
      }
    }
    sub_1A5553138((uint64_t)&v38);
  }
  v15 = sub_1A54E3414();
  v16 = MessageIdentifierSet.init()(&type metadata for UID, v15);
  v18 = v17;
  v19 = HIDWORD(v17);
  v41 = 0;
  v46 = 0;
  v20 = a1[1];
  v42 = *a1;
  v43 = v20;
  v44 = *((_DWORD *)a1 + 8);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B120);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
  if (v34)
    v22 = 10;
  else
    v22 = 9;
  v58 = *a1;
  *(_BYTE *)(inited + 32) = v22;
  v23 = sub_1A54F8ABC(inited);
  swift_setDeallocating();
  v45 = v23;
  v47 = v34;
  v48 = v16;
  v49 = v18;
  v50 = v19;
  v53 = &type metadata for FindPendingDownload;
  v38 = v35;
  v39 = v33;
  v40 = v34;
  swift_bridgeObjectRetain_n();
  sub_1A54FCA28((uint64_t)&v58);
  sub_1A559DF44();
  sub_1A594C6B4();
  v51 = 0;
  v52 = 1;
  sub_1A55530FC((uint64_t)&v53, (uint64_t)&v56);
  sub_1A550F928((uint64_t)&v41);
  if (*(_QWORD *)(a3 + 16))
  {
    sub_1A594CE64();
    sub_1A594C6A8();
    v24 = sub_1A594CED0();
    v25 = -1 << *(_BYTE *)(a3 + 32);
    v26 = v24 & ~v25;
    if (((*(_QWORD *)(v4 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) != 0)
    {
      v27 = ~v25;
      do
      {
        sub_1A55530FC(*(_QWORD *)(a3 + 48) + 48 * v26, (uint64_t)&v38);
        v28 = v38;
        v29 = v56;
        sub_1A55530FC((uint64_t)&v38, (uint64_t)v54);
        sub_1A55530FC((uint64_t)&v56, (uint64_t)v36);
        if (v28 == v29)
        {
          v30 = MEMORY[0x1A85AEB14](v55, &v37);
          sub_1A5553138((uint64_t)v36);
          sub_1A5553138((uint64_t)v54);
          sub_1A5553138((uint64_t)&v38);
          if ((v30 & 1) != 0)
          {
            v14 = 1;
            goto LABEL_23;
          }
        }
        else
        {
          sub_1A5553138((uint64_t)v36);
          sub_1A5553138((uint64_t)v54);
          sub_1A5553138((uint64_t)&v38);
        }
        v26 = (v26 + 1) & v27;
      }
      while (((*(_QWORD *)(v4 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) != 0);
    }
  }
  v14 = 0;
LABEL_23:
  sub_1A5553138((uint64_t)&v56);
  return v14;
}

unint64_t sub_1A559DF44()
{
  unint64_t result;

  result = qword_1EE797890;
  if (!qword_1EE797890)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA038, &type metadata for FindPendingDownload.TaskIDValue);
    atomic_store(result, (unint64_t *)&qword_1EE797890);
  }
  return result;
}

uint64_t sub_1A559DF8C(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for RunningTasks(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for RunningTasks(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for RunningTasks()
{
  return &type metadata for RunningTasks;
}

unint64_t sub_1A559E070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t result;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *__return_ptr, char *);
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;

  v1 = v0;
  v23 = type metadata accessor for TaskHistory.Running(0);
  v2 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797208);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v22 - v10;
  while (1)
  {
    v12 = *(_QWORD *)(v1 + 8);
    v13 = *(_QWORD *)(*(_QWORD *)v1 + 16);
    if (v12 == v13)
    {
      v14 = 1;
      goto LABEL_6;
    }
    if (v12 >= v13)
      break;
    sub_1A55034B8(*(_QWORD *)v1+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v12, (uint64_t)v11, type metadata accessor for TaskHistory.Running);
    v14 = 0;
    *(_QWORD *)(v1 + 8) = v12 + 1;
LABEL_6:
    v15 = v23;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v11, v14, 1, v23);
    v16 = *(void (**)(uint64_t *__return_ptr, char *))(v1 + 16);
    sub_1A55A0D64((uint64_t)v11, (uint64_t)v8);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v15);
    if (v17 == 1)
    {
      v21 = 0;
LABEL_12:
      HIBYTE(v24) = v17 == 1;
      return v21 | ((unint64_t)(v17 == 1) << 40);
    }
    sub_1A54E3394((uint64_t)v8, (uint64_t)v4, type metadata accessor for TaskHistory.Running);
    v16(&v24, v4);
    v18 = v24;
    v19 = BYTE4(v24);
    sub_1A55034FC((uint64_t)v4, type metadata accessor for TaskHistory.Running);
    v25 = v18;
    v26 = v19;
    result = (*(uint64_t (**)(int *))(v1 + 32))(&v25);
    if ((result & 1) != 0)
    {
      v20 = 0x100000000;
      if (!v19)
        v20 = 0;
      v21 = v20 | v18;
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

void sub_1A559E258(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v2 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1A55034B8(a1, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1A559E2FC + 4 * byte_1A59A8458[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A559E2FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

void sub_1A559E5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  os_log_type_t v12;
  uint64_t v13;
  NSObject *oslog;

  v8 = *(_QWORD *)(v3 + 8);
  v7 = (unint64_t *)(v3 + 8);
  v9 = *(_QWORD *)(v8 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  v10 = sub_1A559F438(v7, a1, a2, a3);
  v11 = *(_QWORD *)(*v7 + 16);
  if (v11 < v10)
  {
    __break(1u);
  }
  else
  {
    sub_1A558CCF8(v10, v11);
    if (v9 != *(_QWORD *)(*v7 + 16))
    {
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      oslog = sub_1A594A74C();
      v12 = sub_1A594C00C();
      if (os_log_type_enabled(oslog, v12))
      {
        v13 = swift_slowAlloc();
        *(_DWORD *)v13 = 68158208;
        sub_1A594C3CC();
        *(_WORD *)(v13 + 8) = 256;
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v13 + 11) = 2048;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, oslog, v12, "[%.*hhx] Pruned %ld mailbox task(s) without mailbox affinity.", (uint8_t *)v13, 0x15u);
        MEMORY[0x1A85B1964](v13, -1, -1);

      }
      else
      {
        swift_release();

      }
    }
  }
}

unint64_t sub_1A559E788(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t i;
  uint64_t v12;
  unint64_t result;
  _QWORD v14[2];
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v19;
  BOOL (*v20)(uint64_t);
  uint64_t v21;
  uint64_t (*v22)@<X0>(uint64_t@<X0>, _DWORD *@<X8>);
  uint64_t v23;
  _BYTE v24[53];
  char v25;
  unint64_t v26;

  v3 = type metadata accessor for RunningTask();
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0DEE9E8];
  v7 = *(_QWORD *)(a2 + 16);
  if (v7)
  {
    v8 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v9 = *(_QWORD *)(v4 + 72);
    v14[1] = a2;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v10 = 0;
    for (i = 0; i != v7; ++i)
    {
      sub_1A55034B8(v8 + v9 * i, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      sub_1A556C73C((uint64_t)v6, (uint64_t)v24);
      if (!v25)
      {
        v12 = *((_QWORD *)v6 + 7);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A556C7D8((uint64_t)v24);
        v16 = v12;
        v17 = 0;
        v18 = sub_1A5597768;
        v19 = 0;
        v20 = sub_1A559F798;
        v21 = 0;
        v22 = sub_1A559F7A8;
        v23 = 0;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        while (1)
        {
          result = sub_1A559E070();
          if ((result & 0x10000000000) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v10 = 1;
            goto LABEL_4;
          }
          if ((result & 0x100000000) != 0)
            break;
          sub_1A54F2E00(&v15, result);
        }
        __break(1u);
        return result;
      }
      if (v25 == 1)
        sub_1A550E928((uint64_t)v24);
LABEL_4:
      sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
    }
    swift_bridgeObjectRelease();
    result = v26;
    if ((v10 & 1) == 0)
      goto LABEL_15;
    if (!*(_QWORD *)(v26 + 16))
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

_QWORD *sub_1A559E954(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  _QWORD *v18;
  _QWORD v20[2];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD v24[3];
  int v25;
  char v26;
  char v27;
  __int128 v28;
  uint64_t v29;
  int v30;
  __int128 v31;

  v3 = type metadata accessor for RunningTask();
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  if (!v7)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v8 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v9 = *(_QWORD *)(v4 + 72);
  v20[1] = a2;
  swift_bridgeObjectRetain_n();
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1A55034B8(v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
    sub_1A556C73C((uint64_t)v6, (uint64_t)v24);
    if (!v27)
    {
      sub_1A556C7D8((uint64_t)v24);
LABEL_4:
      sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      goto LABEL_5;
    }
    if (v27 != 1)
      goto LABEL_4;
    v11 = v25;
    v21 = v24[0];
    v22 = v24[1];
    v23 = v24[2];
    if ((v26 & 1) != 0)
    {
      sub_1A550E928((uint64_t)&v21);
      goto LABEL_4;
    }
    v12 = *((_QWORD *)&v22 + 1);
    v13 = v23;
    __swift_project_boxed_opaque_existential_1_0(&v21, *((uint64_t *)&v22 + 1));
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v13 + 32))(&v28, v12, v13);
    sub_1A550E928((uint64_t)&v21);
    v31 = v28;
    sub_1A54F81BC((uint64_t)&v31);
    sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1A54EFB30(0, v10[2] + 1, 1, v10);
    v15 = v10[2];
    v14 = v10[3];
    if (v15 >= v14 >> 1)
      v10 = sub_1A54EFB30((_QWORD *)(v14 > 1), v15 + 1, 1, v10);
    v16 = v29;
    v17 = v30;
    v10[2] = v15 + 1;
    v18 = &v10[3 * v15];
    *((_DWORD *)v18 + 8) = v11;
    v18[5] = v16;
    *((_DWORD *)v18 + 12) = v17;
LABEL_5:
    v8 += v9;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease_n();
  return v10;
}

uint64_t sub_1A559EB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _OWORD v11[3];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  int v18;
  __int128 v19;

  sub_1A556C73C(a1, (uint64_t)&v12);
  if (!v15)
  {
    sub_1A556C7D8((uint64_t)&v12);
    goto LABEL_5;
  }
  if (v15 != 1)
  {
LABEL_5:
    v6 = 0;
    v7 = 0;
    goto LABEL_6;
  }
  v11[1] = v13;
  v11[2] = v14;
  v11[0] = v12;
  v4 = *((_QWORD *)&v13 + 1);
  v5 = v14;
  __swift_project_boxed_opaque_existential_1_0(v11, *((uint64_t *)&v13 + 1));
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v5 + 32))(&v16, v4, v5);
  sub_1A550E928((uint64_t)v11);
  v6 = v17;
  v7 = v18;
  v19 = v16;
  sub_1A54F81BC((uint64_t)&v19);
LABEL_6:
  result = type metadata accessor for RunningTask();
  v9 = a1 + *(int *)(result + 36);
  v10 = *(_QWORD *)v9;
  LOBYTE(v9) = *(_BYTE *)(v9 + 8);
  *(_QWORD *)a2 = v6;
  *(_DWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v10;
  *(_BYTE *)(a2 + 24) = v9;
  return result;
}

uint64_t sub_1A559EC54(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for RunningTask();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v16 - v9;
  sub_1A55034B8(a1, (uint64_t)&v16 - v9, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
  v11 = *((_DWORD *)v2 + 4);
  *(_DWORD *)&v10[*(int *)(v4 + 32)] = v11;
  *((_DWORD *)v2 + 4) = (v11 + 1) & 0xFFFFFF;
  sub_1A5597B0C(*v2);
  sub_1A55034B8((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
  v12 = *((_QWORD *)v2 + 1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v12 = sub_1A54F11B8(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
  v14 = *(_QWORD *)(v12 + 16);
  v13 = *(_QWORD *)(v12 + 24);
  if (v14 >= v13 >> 1)
    v12 = sub_1A54F11B8(v13 > 1, v14 + 1, 1, v12);
  *(_QWORD *)(v12 + 16) = v14 + 1;
  sub_1A54E3394((uint64_t)v8, v12+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v14, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
  *((_QWORD *)v2 + 1) = v12;
  return sub_1A55034FC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
}

uint64_t sub_1A559EDCC(uint64_t a1, char *a2)
{
  char v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[6];
  unsigned int v21;
  unsigned __int8 v22;
  char v23;
  uint64_t v24;

  sub_1A556C73C(a1, (uint64_t)v20);
  if (!v23)
  {
    sub_1A556C7D8((uint64_t)v20);
    return 0;
  }
  if (v23 == 1)
  {
    sub_1A550E928((uint64_t)v20);
    return 0;
  }
  v5 = *a2;
  v6 = a1 + *(int *)(type metadata accessor for RunningTask() + 28);
  v7 = (uint64_t *)(v6 + *(int *)(type metadata accessor for Task.Logger(0) + 20));
  v9 = v7[1];
  v8 = v7[2];
  v10 = v7[3];
  if (v10 < 0)
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  else
    sub_1A559C124(*v7, v7[1], v7[2], v10);
  sub_1A556C73C(a1, (uint64_t)v20);
  if (v23)
  {
    if (v23 == 1)
    {
      sub_1A550E928((uint64_t)v20);
    }
    else if (v21 | ((unint64_t)v22 << 32) || v20[4] | v20[5] | v20[0] | v20[3] | v20[2] | v20[1])
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v11 = sub_1A594A74C();
      v16 = sub_1A594C000();
      if (os_log_type_enabled(v11, v16))
      {
        v19 = v9;
        v13 = swift_slowAlloc();
        v17 = swift_slowAlloc();
        v20[0] = v17;
        *(_DWORD *)v13 = 68158210;
        LODWORD(v24) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v13 + 8) = 256;
        LOBYTE(v24) = v5;
        sub_1A594C3CC();
        *(_WORD *)(v13 + 11) = 2082;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v24 = sub_1A55791B0(v19, v8, v20);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A4F90000, v11, v16, "[%.*hhx-%{public}s] Pruning failed task", (uint8_t *)v13, 0x15u);
        swift_arrayDestroy();
        v15 = v17;
        goto LABEL_17;
      }
LABEL_20:
      swift_bridgeObjectRelease_n();
      goto LABEL_21;
    }
  }
  else
  {
    sub_1A556C7D8((uint64_t)v20);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v11 = sub_1A594A74C();
  v12 = sub_1A594C000();
  if (!os_log_type_enabled(v11, v12))
    goto LABEL_20;
  v18 = v9;
  v13 = swift_slowAlloc();
  v14 = swift_slowAlloc();
  v20[0] = v14;
  *(_DWORD *)v13 = 68158210;
  LODWORD(v24) = 2;
  sub_1A594C3CC();
  *(_WORD *)(v13 + 8) = 256;
  LOBYTE(v24) = v5;
  sub_1A594C3CC();
  *(_WORD *)(v13 + 11) = 2082;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v24 = sub_1A55791B0(v18, v8, v20);
  sub_1A594C3CC();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_1A4F90000, v11, v12, "[%.*hhx-%{public}s] Pruning completed task", (uint8_t *)v13, 0x15u);
  swift_arrayDestroy();
  v15 = v14;
LABEL_17:
  MEMORY[0x1A85B1964](v15, -1, -1);
  MEMORY[0x1A85B1964](v13, -1, -1);
LABEL_21:

  sub_1A5598BF0(*a2);
  return 1;
}

uint64_t sub_1A559F1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = type metadata accessor for RunningTask();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = *(_QWORD *)(a2 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F4B4C(0, v9, 0);
    v11 = a2 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v12 = *(_QWORD *)(v3 + 72);
    v21 = a2;
    v22 = v12;
    do
    {
      sub_1A55034B8(v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      sub_1A55034B8((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      v13 = sub_1A594B4A8();
      v15 = v14;
      sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      v10 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A54F4B4C(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v12 = v22;
        v10 = v24;
      }
      v17 = *(_QWORD *)(v10 + 16);
      v16 = *(_QWORD *)(v10 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1A54F4B4C(v16 > 1, v17 + 1, 1);
        v12 = v22;
        v10 = v24;
      }
      *(_QWORD *)(v10 + 16) = v17 + 1;
      v18 = v10 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v15;
      v11 += v12;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  v24 = v10;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
  sub_1A54F70C0();
  v19 = sub_1A594B268();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1A559F3F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A559F1F4(a1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1A559F3F8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A559F438(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char v30;
  uint64_t (*v31)();
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;

  v43 = a4;
  v8 = type metadata accessor for RunningTask();
  v9 = MEMORY[0x1E0C80A78](v8);
  v42 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v41 = (uint64_t)&v38 - v12;
  MEMORY[0x1E0C80A78](v11);
  v45 = (uint64_t)&v38 - v14;
  v46 = a1;
  v15 = *a1;
  v16 = *(_QWORD *)(*a1 + 16);
  if (!v16)
  {
    v19 = 0;
    goto LABEL_11;
  }
  v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = *(_QWORD *)(v13 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v19 = 0;
  v39 = v17;
  while (1)
  {
    v20 = sub_1A55A05EC(v15 + v17, a2, a3);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      return v19;
    }
    if ((v20 & 1) != 0)
      break;
    ++v19;
    v17 += v18;
    if (v16 == v19)
    {
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(v15 + 16);
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  if (__OFADD__(v19, 1))
  {
LABEL_38:
    __break(1u);
    return result;
  }
  v22 = *(_QWORD *)(v15 + 16);
  if (v19 + 1 != v22)
  {
    v23 = v18 + v17;
    v24 = v19 + 1;
    v25 = type metadata accessor for RunningTask;
    v40 = a2;
    v44 = v18;
    while (v24 < v22)
    {
      v26 = v23;
      v27 = v15 + v23;
      v28 = v45;
      v29 = v25;
      sub_1A55034B8(v27, v45, (uint64_t (*)(_QWORD))v25);
      v30 = sub_1A55A05EC(v28, a2, a3);
      v31 = v29;
      result = sub_1A55034FC(v28, (uint64_t (*)(_QWORD))v29);
      if ((v30 & 1) != 0)
      {
        v32 = v44;
        v33 = v26;
      }
      else
      {
        v32 = v44;
        v33 = v26;
        if (v24 != v19)
        {
          if ((v19 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v34 = *v46;
          v35 = *(_QWORD *)(*v46 + 16);
          if (v19 >= v35)
            goto LABEL_34;
          v38 = v19 * v44;
          result = sub_1A55034B8(v34 + v39 + v19 * v44, v41, (uint64_t (*)(_QWORD))v31);
          if (v24 >= v35)
            goto LABEL_35;
          v33 = v26;
          sub_1A55034B8(v34 + v26, v42, (uint64_t (*)(_QWORD))v31);
          result = swift_isUniquelyReferenced_nonNull_native();
          *v46 = v34;
          if ((result & 1) == 0)
          {
            result = sub_1A554B70C(v34);
            v34 = result;
            *v46 = result;
          }
          v32 = v44;
          if (v19 >= *(_QWORD *)(v34 + 16))
            goto LABEL_36;
          result = sub_1A558DFE0(v42, v34 + v39 + v38);
          if (v24 >= *(_QWORD *)(*v46 + 16))
            goto LABEL_37;
          result = sub_1A558DFE0(v41, *v46 + v26);
        }
        if (__OFADD__(v19++, 1))
          goto LABEL_32;
      }
      v37 = v24 + 1;
      if (__OFADD__(v24, 1))
        goto LABEL_31;
      v15 = *v46;
      v22 = *(_QWORD *)(*v46 + 16);
      ++v24;
      v23 = v33 + v32;
      v25 = v31;
      a2 = v40;
      if (v37 == v22)
        goto LABEL_11;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_11:
  swift_release();
  swift_release();
  swift_release();
  return v19;
}

BOOL sub_1A559F798(uint64_t a1)
{
  return (*(_BYTE *)(a1 + 4) & 1) == 0;
}

uint64_t sub_1A559F7A8@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 4) & 1) != 0)
    __break(1u);
  else
    *a2 = *(_DWORD *)result;
  return result;
}

void sub_1A559F7C0(unsigned int *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  os_log_t v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  os_log_type_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  os_log_t v52;
  os_log_t log;
  os_log_type_t loga;
  unsigned int v55;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;

  v2 = a1[6];
  v3 = *((_QWORD *)a1 + 4);
  v4 = *((_QWORD *)a1 + 5);
  v5 = *(_QWORD *)(v3 + 16);
  v62 = MEMORY[0x1E0DEE9D8];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54F4B4C(0, v5, 0);
  v6 = v62;
  v55 = v2;
  v58 = v4;
  v59 = v3;
  ConnectionCommandIDSet.makeIterator()(v2, v3, v4);
  if (!v5)
  {
LABEL_6:
    sub_1A594CA80();
    if ((v61 & 1) == 0)
    {
      v25 = v60;
      do
      {
        v60 = 0;
        v61 = 0xE000000000000000;
        CommandID.tag.getter(v25);
        sub_1A594C924();
        v62 = v6;
        v27 = *(_QWORD *)(v6 + 16);
        v26 = *(_QWORD *)(v6 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1A54F4B4C(v26 > 1, v27 + 1, 1);
          v6 = v62;
        }
        *(_QWORD *)(v6 + 16) = v27 + 1;
        v28 = v6 + 16 * v27;
        *(_QWORD *)(v28 + 32) = 0;
        *(_QWORD *)(v28 + 40) = 0xE000000000000000;
        sub_1A594CA80();
        v25 = v60;
      }
      while (v61 != 1);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v60 = v6;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
    sub_1A54F70C0();
    v11 = sub_1A594B268();
    v13 = v12;
    swift_release();
    v14 = ConnectionCommandIDSet.normalCommandCount.getter(v55, v59, v58);
    if (*((_QWORD *)a1 + 1))
    {
      v15 = a1[4];
      swift_retain_n();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v16 = sub_1A594A74C();
      if (v14)
      {
        v17 = sub_1A594C018();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = swift_slowAlloc();
          v50 = swift_slowAlloc();
          v62 = v50;
          *(_DWORD *)v18 = 68159235;
          LODWORD(v60) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v18 + 8) = 256;
          v19 = *(_BYTE *)(a2 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
          swift_release();
          LOBYTE(v60) = v19;
          sub_1A594C3CC();
          swift_release();
          *(_WORD *)(v18 + 11) = 2082;
          v20 = ConnectionID.debugDescription.getter(*a1);
          sub_1A55791B0(v20, v21, &v62);
          sub_1A594C3CC();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v18 + 21) = 2048;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_WORD *)(v18 + 31) = 2082;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A55791B0(v11, v13, &v62);
          sub_1A594C3CC();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v18 + 41) = 2160;
          sub_1A594C3CC();
          *(_WORD *)(v18 + 51) = 2085;
          LODWORD(v61) = v15;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v22 = sub_1A594B4A8();
          v60 = sub_1A55791B0(v22, v23, &v62);
          sub_1A594C3CC();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v16, v17, "[%.*hhx] Connection %{public}s failed while %ld command(s) %{public}s were running and '%{sensitive,mask.mailbox}s' was selected.", (uint8_t *)v18, 0x3Du);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v50, -1, -1);
          v24 = v18;
LABEL_25:
          MEMORY[0x1A85B1964](v24, -1, -1);

          return;
        }
      }
      else
      {
        v36 = sub_1A594C030();
        v37 = v36;
        if (os_log_type_enabled(v16, v36))
        {
          v38 = swift_slowAlloc();
          v51 = swift_slowAlloc();
          v62 = v51;
          *(_DWORD *)v38 = 68159235;
          LODWORD(v60) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v38 + 8) = 256;
          v39 = *(_BYTE *)(a2 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
          swift_release();
          LOBYTE(v60) = v39;
          sub_1A594C3CC();
          swift_release();
          *(_WORD *)(v38 + 11) = 2082;
          v40 = ConnectionID.debugDescription.getter(*a1);
          sub_1A55791B0(v40, v41, &v62);
          sub_1A594C3CC();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v38 + 21) = 2048;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_WORD *)(v38 + 31) = 2082;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A55791B0(v11, v13, &v62);
          sub_1A594C3CC();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v38 + 41) = 2160;
          sub_1A594C3CC();
          *(_WORD *)(v38 + 51) = 2085;
          LODWORD(v61) = v15;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v42 = sub_1A594B4A8();
          v60 = sub_1A55791B0(v42, v43, &v62);
          sub_1A594C3CC();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v16, (os_log_type_t)v37, "[%.*hhx] Connection %{public}s failed while %ld command(s) %{public}s  were running and '%{sensitive,mask.mailbox}s' was selected.", (uint8_t *)v38, 0x3Du);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v51, -1, -1);
          MEMORY[0x1A85B1964](v38, -1, -1);

          return;
        }
      }
      swift_bridgeObjectRelease_n();

      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
LABEL_27:
      swift_bridgeObjectRelease_n();
      return;
    }
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v16 = sub_1A594A74C();
    if (v14)
    {
      v29 = sub_1A594C018();
      if (os_log_type_enabled(v16, v29))
      {
        v30 = swift_slowAlloc();
        log = (os_log_t)swift_slowAlloc();
        v60 = (uint64_t)log;
        *(_DWORD *)v30 = 68158722;
        LODWORD(v62) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v30 + 8) = 256;
        v31 = *(_BYTE *)(a2 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
        swift_release();
        LOBYTE(v62) = v31;
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v30 + 11) = 2082;
        v32 = ConnectionID.debugDescription.getter(*a1);
        v62 = sub_1A55791B0(v32, v33, &v60);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 21) = 2048;
        v34 = *(_QWORD *)(v59 + 16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v62 = v34;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 31) = 2082;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v62 = sub_1A55791B0(v11, v13, &v60);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A4F90000, v16, v29, "[%.*hhx] Connection %{public}s failed while %ld command(s) %{public}s  were running. No mailbox selected.", (uint8_t *)v30, 0x29u);
        v35 = log;
LABEL_24:
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v35, -1, -1);
        v24 = v30;
        goto LABEL_25;
      }
    }
    else
    {
      v44 = sub_1A594C030();
      v45 = v44;
      if (os_log_type_enabled(v16, v44))
      {
        loga = v45;
        v30 = swift_slowAlloc();
        v52 = (os_log_t)swift_slowAlloc();
        v60 = (uint64_t)v52;
        *(_DWORD *)v30 = 68158722;
        LODWORD(v62) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v30 + 8) = 256;
        v46 = *(_BYTE *)(a2 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
        swift_release();
        LOBYTE(v62) = v46;
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v30 + 11) = 2082;
        v47 = ConnectionID.debugDescription.getter(*a1);
        v62 = sub_1A55791B0(v47, v48, &v60);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 21) = 2048;
        v49 = *(_QWORD *)(v59 + 16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v62 = v49;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 31) = 2082;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v62 = sub_1A55791B0(v11, v13, &v60);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A4F90000, v16, loga, "[%.*hhx] Connection %{public}s failed while %ld command(s) %{public}s  were running. No mailbox selected.", (uint8_t *)v30, 0x29u);
        v35 = v52;
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease_n();

    swift_release_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_27;
  }
  while (1)
  {
    sub_1A594CA80();
    if ((v61 & 1) != 0)
      break;
    v7 = v60;
    v60 = 0;
    v61 = 0xE000000000000000;
    CommandID.tag.getter(v7);
    sub_1A594C924();
    v62 = v6;
    v9 = *(_QWORD *)(v6 + 16);
    v8 = *(_QWORD *)(v6 + 24);
    if (v9 >= v8 >> 1)
    {
      sub_1A54F4B4C(v8 > 1, v9 + 1, 1);
      v6 = v62;
    }
    *(_QWORD *)(v6 + 16) = v9 + 1;
    v10 = v6 + 16 * v9;
    *(_QWORD *)(v10 + 32) = 0;
    *(_QWORD *)(v10 + 40) = 0xE000000000000000;
    if (!--v5)
      goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_1A55A0530(uint64_t result, int *a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t i;

  v3 = *(_QWORD *)(result + 8);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v7 = result;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_9:
      v3 = sub_1A554B70C(v3);
    for (i = 0; i != v4; ++i)
    {
      if (i >= *(_QWORD *)(v3 + 16))
      {
        __break(1u);
        goto LABEL_9;
      }
      type metadata accessor for RunningTask();
      result = sub_1A5599AE8(a2, a3);
    }
    *(_QWORD *)(v7 + 8) = v3;
  }
  return result;
}

uint64_t sub_1A55A05EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _BYTE v50[4];
  int v51;
  uint64_t v52;
  NSObject *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  _OWORD v57[3];
  __int128 v58;
  __int128 v59;
  __int128 v60;
  char v61;
  __int128 v62;
  uint64_t v63;
  unsigned int v64;
  __int128 v65;
  uint64_t v66;

  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v50[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v13 = &v50[-v12];
  sub_1A556C73C(a1, (uint64_t)&v58);
  if (!v61)
  {
    sub_1A556C7D8((uint64_t)&v58);
    return 0;
  }
  if (v61 != 1)
    return 0;
  v56 = v7;
  v66 = v3;
  v57[1] = v59;
  v57[2] = v60;
  v57[0] = v58;
  v14 = *((_QWORD *)&v59 + 1);
  v15 = v60;
  __swift_project_boxed_opaque_existential_1_0(v57, *((uint64_t *)&v59 + 1));
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v15 + 32))(&v62, v14, v15);
  sub_1A550E928((uint64_t)v57);
  v16 = v63;
  v17 = v64;
  v65 = v62;
  sub_1A54F81BC((uint64_t)&v65);
  sub_1A5597690();
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = a3 + 32;
    v22 = *(_QWORD *)(a3 + 16);
    if (a2)
      sub_1A557FFE0(v16, v17, v21, v22, (_QWORD *)(a2 + 16));
    else
      sub_1A557FEEC(v16, v17, v21, v22);
    v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) != 0)
    {
      v26 = a1 + *(int *)(type metadata accessor for RunningTask() + 28);
      v27 = v26 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
      v28 = *(_QWORD *)v27;
      v29 = *(_QWORD *)(v27 + 8);
      v30 = *(_QWORD *)(v27 + 16);
      v31 = *(_QWORD *)(v27 + 24);
      v32 = *(_QWORD *)(v27 + 32);
      v55 = *(_DWORD *)(v27 + 40);
      v54 = v32;
      if (v31 < 0)
      {
        v40 = v26;
        v41 = v56;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v11, v40, v56);
        sub_1A559C124(v28, v29, v30, v31);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v42 = sub_1A594A74C();
        v43 = sub_1A594C00C();
        v44 = v43;
        if (os_log_type_enabled(v42, v43))
        {
          v45 = swift_slowAlloc();
          LODWORD(v53) = v44;
          v46 = v45;
          v52 = swift_slowAlloc();
          *(_QWORD *)&v57[0] = v52;
          *(_DWORD *)v46 = 68159235;
          LODWORD(v58) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v46 + 8) = 256;
          LOBYTE(v58) = v28;
          sub_1A594C3CC();
          *(_WORD *)(v46 + 11) = 2082;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          *(_QWORD *)&v58 = sub_1A55791B0(v29, v30, (uint64_t *)v57);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v46 + 21) = 1040;
          LODWORD(v58) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v46 + 27) = 512;
          LOWORD(v58) = v31;
          sub_1A594C3CC();
          *(_WORD *)(v46 + 31) = 2160;
          *(_QWORD *)&v58 = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v46 + 41) = 2085;
          *(_QWORD *)&v58 = v54;
          DWORD2(v58) = v55;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v47 = sub_1A594B4A8();
          *(_QWORD *)&v58 = sub_1A55791B0(v47, v48, (uint64_t *)v57);
          sub_1A594C3CC();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v42, (os_log_type_t)v53, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Pruning. No mailbox affinity, not targeting mailboxes-to-be-selected.", (uint8_t *)v46, 0x33u);
          v49 = v52;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v49, -1, -1);
          MEMORY[0x1A85B1964](v46, -1, -1);

          (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v56);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v41);
        }
      }
      else
      {
        v33 = v56;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v13, v26, v56);
        sub_1A559C124(v28, v29, v30, v31);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v34 = sub_1A594A74C();
        v35 = sub_1A594C00C();
        v36 = v35;
        v53 = v34;
        if (os_log_type_enabled(v34, v35))
        {
          v37 = swift_slowAlloc();
          v52 = swift_slowAlloc();
          *(_QWORD *)&v58 = v52;
          *(_DWORD *)v37 = 68158210;
          LODWORD(v57[0]) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v37 + 8) = 256;
          LOBYTE(v57[0]) = v28;
          sub_1A594C3CC();
          *(_WORD *)(v37 + 11) = 2082;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          *(_QWORD *)&v57[0] = sub_1A55791B0(v29, v30, (uint64_t *)&v58);
          sub_1A594C3CC();
          v51 = v36;
          sub_1A559C154(v28, v29, v30, v31);
          sub_1A559C154(v28, v29, v30, v31);
          swift_bridgeObjectRelease();
          v38 = v53;
          _os_log_impl(&dword_1A4F90000, v53, (os_log_type_t)v51, "[%.*hhx-%{public}s] Pruning. No mailbox affinity, not targeting mailboxes-to-be-selected.", (uint8_t *)v37, 0x15u);
          v20 = 1;
          v39 = v52;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v39, -1, -1);
          MEMORY[0x1A85B1964](v37, -1, -1);

          (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v56);
          return v20;
        }
        sub_1A559C154(v28, v29, v30, v31);
        sub_1A559C154(v28, v29, v30, v31);

        (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v33);
      }
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1A55A0D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A55A0DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD v43[2];
  __int128 v44;
  char v45;
  __int128 v46;
  __int16 v47;
  uint64_t v48;
  int v49;
  __int128 v50;
  uint64_t v51;
  int v52;
  _BYTE v53[8];
  uint64_t v54;
  uint64_t v55;
  unsigned __int16 v56;
  uint64_t v57;
  int v58;
  __int128 v59;
  uint64_t v60;
  int v61;
  __int128 v62;

  v6 = sub_1A594A764();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A555301C(a1, (uint64_t)v43);
  v40 = v43[0];
  v41 = v43[1];
  if ((v45 & 1) != 0)
  {
    v42 = v44;
    sub_1A594A758();
    v10 = *((_QWORD *)&v41 + 1);
    v11 = v42;
    __swift_project_boxed_opaque_existential_1_0(&v40, *((uint64_t *)&v41 + 1));
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 64))(v10, v11);
    v37 = v13;
    v38 = v12;
    v39 = a3;
    v14 = a2;
    v16 = *((_QWORD *)&v41 + 1);
    v15 = v42;
    __swift_project_boxed_opaque_existential_1_0(&v40, *((uint64_t *)&v41 + 1));
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v15 + 32))(&v46, v16, v15);
    v62 = v46;
    LOWORD(v15) = v47;
    sub_1A54F81BC((uint64_t)&v62);
    v60 = v48;
    v61 = v49;
    sub_1A54F81BC((uint64_t)&v60);
    v18 = *((_QWORD *)&v41 + 1);
    v17 = v42;
    __swift_project_boxed_opaque_existential_1_0(&v40, *((uint64_t *)&v41 + 1));
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v17 + 32))(&v50, v18, v17);
    sub_1A5553058(a1);
    sub_1A550E928((uint64_t)&v40);
    v19 = v51;
    v20 = v52;
    v59 = v50;
    sub_1A54F81BC((uint64_t)&v59);
    MailboxTaskLoggerID.init(id:name:counter:mailbox:)(v14, v38, v37, v15, v19, v20, (uint64_t)v53);
    v21 = v53[0];
    v22 = v54;
    v23 = v55;
    v24 = v57;
    LODWORD(v14) = v58;
    v25 = v56 | 0x8000000000000000;
    v26 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
    v27 = v39;
    v26(v39, v9, v6);
    result = type metadata accessor for Task.Logger(0);
    v29 = v27 + *(int *)(result + 20);
    *(_QWORD *)v29 = v21;
    *(_QWORD *)(v29 + 8) = v22;
    *(_QWORD *)(v29 + 16) = v23;
    *(_QWORD *)(v29 + 24) = v25;
    *(_QWORD *)(v29 + 32) = v24;
    *(_DWORD *)(v29 + 40) = v14;
  }
  else
  {
    *(_QWORD *)&v42 = v44;
    sub_1A594A758();
    v30 = *((_QWORD *)&v41 + 1);
    v31 = v42;
    __swift_project_boxed_opaque_existential_1_0(&v40, *((uint64_t *)&v41 + 1));
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 32))(v30, v31);
    v34 = v33;
    sub_1A5553058(a1);
    sub_1A5592E90((uint64_t)&v40);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
    result = type metadata accessor for Task.Logger(0);
    v35 = a3 + *(int *)(result + 20);
    *(_QWORD *)v35 = a2;
    *(_QWORD *)(v35 + 8) = v32;
    *(_QWORD *)(v35 + 24) = 0;
    *(_QWORD *)(v35 + 32) = 0;
    *(_QWORD *)(v35 + 16) = v34;
    *(_DWORD *)(v35 + 40) = 0;
  }
  return result;
}

uint64_t sub_1A55A1090(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;

  sub_1A555301C(v1, (uint64_t)&v11);
  if ((v14 & 1) != 0)
  {
    v9 = v12;
    v10 = v13;
    v8 = v11;
    v3 = *((_QWORD *)&v12 + 1);
    v4 = v13;
    __swift_project_boxed_opaque_existential_1_0(&v8, *((uint64_t *)&v12 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v3, v4);
    return sub_1A550E928((uint64_t)&v8);
  }
  else
  {
    v8 = v11;
    v9 = v12;
    v6 = v13;
    *(_QWORD *)&v10 = v13;
    v7 = *((_QWORD *)&v12 + 1);
    __swift_project_boxed_opaque_existential_1_0(&v8, *((uint64_t *)&v12 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, v7, v6);
    return sub_1A5592E90((uint64_t)&v8);
  }
}

uint64_t TaskID.task.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TaskID.debugDescription.getter()
{
  uint64_t v1;

  v1 = sub_1A594D050();
  sub_1A594B5F8();
  sub_1A594C684();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static TaskID.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[8];
  uint64_t v10;

  v3 = *a1;
  v4 = *a2;
  sub_1A55530FC((uint64_t)a1, (uint64_t)v9);
  sub_1A55530FC((uint64_t)a2, (uint64_t)&v7);
  if (v3 == v4)
    v5 = MEMORY[0x1A85AEB14](&v10, &v8);
  else
    v5 = 0;
  sub_1A5553138((uint64_t)&v7);
  sub_1A5553138((uint64_t)v9);
  return v5 & 1;
}

uint64_t TaskID.hash(into:)()
{
  return sub_1A594C6A8();
}

uint64_t TaskID.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594C6A8();
  return sub_1A594CED0();
}

uint64_t sub_1A55A12B4()
{
  sub_1A594CE64();
  sub_1A594C6A8();
  return sub_1A594CED0();
}

uint64_t sub_1A55A12F4()
{
  return sub_1A594C6A8();
}

uint64_t sub_1A55A1314()
{
  sub_1A594CE64();
  sub_1A594C6A8();
  return sub_1A594CED0();
}

unint64_t sub_1A55A1354()
{
  unint64_t result;

  result = qword_1EE797D08;
  if (!qword_1EE797D08)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for TaskID, &type metadata for TaskID);
    atomic_store(result, (unint64_t *)&qword_1EE797D08);
  }
  return result;
}

uint64_t sub_1A55A1398()
{
  uint64_t v1;

  v1 = sub_1A594D050();
  sub_1A594B5F8();
  sub_1A594C684();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A55A13FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[8];
  uint64_t v10;

  v3 = *a1;
  v4 = *a2;
  sub_1A55530FC((uint64_t)a1, (uint64_t)v9);
  sub_1A55530FC((uint64_t)a2, (uint64_t)&v7);
  if (v3 == v4)
    v5 = MEMORY[0x1A85AEB14](&v10, &v8);
  else
    v5 = 0;
  sub_1A5553138((uint64_t)&v7);
  sub_1A5553138((uint64_t)v9);
  return v5 & 1;
}

uint64_t destroy for TaskID(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 8);
}

uint64_t initializeWithCopy for TaskID(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a1 + 8, a2 + 8);
  return a1;
}

_QWORD *assignWithCopy for TaskID(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  return a1;
}

uint64_t assignWithTake for TaskID(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for TaskID(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TaskID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskID()
{
  return &type metadata for TaskID;
}

{
  return &type metadata for TaskID;
}

uint64_t type metadata accessor for Task.Logger(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE797C98);
}

uint64_t *sub_1A55A1604(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594A764();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *v9 = *v10;
    v11 = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
    *((_QWORD *)v9 + 2) = v11;
    *((_WORD *)v9 + 12) = *((_WORD *)v10 + 12);
    *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    *((_DWORD *)v9 + 10) = *((_DWORD *)v10 + 10);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

uint64_t sub_1A55A16C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A55A1710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  *(_WORD *)(v8 + 24) = *(_WORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_DWORD *)(v8 + 40) = *(_DWORD *)(v9 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A55A17A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 24) = *(_WORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 40) = *(_DWORD *)(v9 + 40);
  return a1;
}

uint64_t sub_1A55A1850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 24) = *(_WORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 40) = *(_DWORD *)(v9 + 40);
  return a1;
}

uint64_t sub_1A55A18E4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A55A18F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1A594A764();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1A55A1970()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A55A197C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A594A764();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for MailboxTaskLogger(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE797808);
}

uint64_t sub_1A55A1A0C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_1A55A1A44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594A764();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    v12 = *((_QWORD *)v10 + 1);
    v13 = *((_QWORD *)v10 + 2);
    v14 = *((_QWORD *)v10 + 3);
    v15 = *((_QWORD *)v10 + 4);
    v16 = *((_DWORD *)v10 + 10);
    sub_1A559C124(*(_QWORD *)v10, v12, v13, v14);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    *((_QWORD *)v9 + 2) = v13;
    *((_QWORD *)v9 + 3) = v14;
    *((_QWORD *)v9 + 4) = v15;
    *((_DWORD *)v9 + 10) = v16;
  }
  return a1;
}

uint64_t sub_1A55A1B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return sub_1A559C154(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 16), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 24));
}

uint64_t sub_1A55A1B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_QWORD *)(v9 + 16);
  v13 = *(_QWORD *)(v9 + 24);
  v14 = *(_QWORD *)(v9 + 32);
  v15 = *(_DWORD *)(v9 + 40);
  sub_1A559C124(*(_QWORD *)v9, v11, v12, v13);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v12;
  *(_QWORD *)(v8 + 24) = v13;
  *(_QWORD *)(v8 + 32) = v14;
  *(_DWORD *)(v8 + 40) = v15;
  return a1;
}

uint64_t sub_1A55A1C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_QWORD *)(v9 + 16);
  v13 = *(_QWORD *)(v9 + 24);
  v14 = *(_QWORD *)(v9 + 32);
  v15 = *(_DWORD *)(v9 + 40);
  sub_1A559C124(*(_QWORD *)v9, v11, v12, v13);
  v16 = *(_QWORD *)v8;
  v17 = *(_QWORD *)(v8 + 8);
  v18 = *(_QWORD *)(v8 + 16);
  v19 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v12;
  *(_QWORD *)(v8 + 24) = v13;
  *(_QWORD *)(v8 + 32) = v14;
  *(_DWORD *)(v8 + 40) = v15;
  sub_1A559C154(v16, v17, v18, v19);
  return a1;
}

uint64_t sub_1A55A1CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  *(_OWORD *)((char *)v8 + 28) = *(_OWORD *)((char *)v9 + 28);
  return a1;
}

uint64_t sub_1A55A1D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 32);
  v11 = *(_DWORD *)(v9 + 40);
  v12 = *(_QWORD *)v8;
  v13 = *(_QWORD *)(v8 + 8);
  v14 = *(_QWORD *)(v8 + 16);
  v15 = *(_QWORD *)(v8 + 24);
  v16 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v16;
  *(_QWORD *)(v8 + 32) = v10;
  *(_DWORD *)(v8 + 40) = v11;
  sub_1A559C154(v12, v13, v14, v15);
  return a1;
}

uint64_t sub_1A55A1DC4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A55A1DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1A594A764();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_DWORD *)(a1 + *(int *)(a3 + 20) + 1);
  if (v9 > 0x80000000)
    return -v9;
  else
    return 0;
}

uint64_t sub_1A55A1E4C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

double sub_1A55A1E58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;

  v8 = sub_1A594A764();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  }
  else
  {
    v11 = a1 + *(int *)(a4 + 20);
    *(_QWORD *)v11 = (unint64_t)-(int)a2 << 8;
    result = 0.0;
    *(_OWORD *)(v11 + 8) = 0u;
    *(_OWORD *)(v11 + 24) = 0u;
    *(_DWORD *)(v11 + 40) = 0;
  }
  return result;
}

uint64_t sub_1A55A1EE8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594A764();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for Task(uint64_t a1)
{
  unsigned int v1;
  uint64_t result;

  v1 = *(unsigned __int8 *)(a1 + 48);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (v1 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for Task(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  char v6;

  v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  if (v4 == 1)
  {
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v6 = 1;
  }
  else
  {
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    v6 = 0;
  }
  *(_BYTE *)(a1 + 48) = v6;
  return a1;
}

uint64_t assignWithCopy for Task(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    __swift_destroy_boxed_opaque_existential_1(a1);
    if (v4 == 1)
      swift_bridgeObjectRelease();
    v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    if (v5 == 1)
    {
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = 1;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else
    {
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 48) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for Task(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    __swift_destroy_boxed_opaque_existential_1(a1);
    if (v4 == 1)
      swift_bridgeObjectRelease();
    v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    else
    {
      LOBYTE(v5) = 0;
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    }
    *(_BYTE *)(a1 + 48) = v5;
  }
  return a1;
}

ValueMetadata *type metadata accessor for Task()
{
  return &type metadata for Task;
}

uint64_t destroy for Task.Logger.ID(uint64_t *a1)
{
  return sub_1A559C154(*a1, a1[1], a1[2], a1[3]);
}

uint64_t initializeWithCopy for Task.Logger.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_DWORD *)(a2 + 40);
  sub_1A559C124(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_DWORD *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for Task.Logger.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_DWORD *)(a2 + 40);
  sub_1A559C124(*(_QWORD *)a2, v4, v5, v6);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_DWORD *)(a1 + 40) = v8;
  sub_1A559C154(v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy44_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 28) = *(_OWORD *)(a2 + 28);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Task.Logger.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  sub_1A559C154(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Task.Logger.ID(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 44))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_DWORD *)(a1 + 1);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for Task.Logger.ID(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_DWORD *)(a1 + 40) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 44) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)a1 = (unint64_t)-a2 << 8;
      result = 0.0;
      *(_OWORD *)(a1 + 8) = 0u;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_DWORD *)(a1 + 40) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 44) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A55A2400(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24) >> 63;
}

uint64_t sub_1A55A240C(uint64_t result)
{
  *(_QWORD *)(result + 24) &= ~0x8000000000000000;
  return result;
}

unsigned __int8 *sub_1A55A241C(unsigned __int8 *result, uint64_t a2)
{
  unint64_t v2;

  v2 = *((unsigned __int16 *)result + 12) | (unint64_t)(a2 << 63);
  *(_QWORD *)result = *result;
  *((_QWORD *)result + 3) = v2;
  return result;
}

ValueMetadata *type metadata accessor for Task.Logger.ID()
{
  return &type metadata for Task.Logger.ID;
}

uint64_t sub_1A55A2444@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  char v13;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A554B694(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = &v5[7 * a1];
    v9 = *((_DWORD *)v7 + 8);
    v8 = v7 + 4;
    v10 = v8[5];
    v11 = v6 - 1;
    v12 = *((_DWORD *)v8 + 12);
    v13 = *((_BYTE *)v8 + 52);
    *(_DWORD *)a2 = v9;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)(v8 + 1);
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(v8 + 3);
    *(_QWORD *)(a2 + 40) = v10;
    *(_BYTE *)(a2 + 52) = v13;
    *(_DWORD *)(a2 + 48) = v12;
    if ((uint64_t)(v11 - a1) >= 0)
    {
      result = (uint64_t)memmove(v8, v8 + 7, 56 * (v11 - a1));
      v5[2] = v11;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55A2550@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  _OWORD *v7;
  __int128 v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A554B6F8(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = &v5[22 * a1];
    v8 = v7[11];
    v9 = v6 - 1;
    a2[8] = v7[10];
    a2[9] = v8;
    a2[10] = v7[12];
    v10 = v7[7];
    a2[4] = v7[6];
    a2[5] = v10;
    v11 = v7[9];
    a2[6] = v7[8];
    a2[7] = v11;
    v12 = v7[3];
    *a2 = v7[2];
    a2[1] = v12;
    v13 = v7[5];
    a2[2] = v7[4];
    a2[3] = v13;
    v14 = v6 - 1 - a1;
    if (v14 >= 0)
    {
      result = (uint64_t)memmove(v7 + 2, v7 + 13, 176 * v14);
      v5[2] = v9;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55A2660@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  _OWORD *v7;
  __int128 v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A554B75C(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = &v5[30 * a1];
    v8 = v7[15];
    v9 = v6 - 1;
    a2[12] = v7[14];
    a2[13] = v8;
    *(_OWORD *)((char *)a2 + 217) = *(_OWORD *)((char *)v7 + 249);
    v10 = v7[11];
    a2[8] = v7[10];
    a2[9] = v10;
    v11 = v7[13];
    a2[10] = v7[12];
    a2[11] = v11;
    v12 = v7[7];
    a2[4] = v7[6];
    a2[5] = v12;
    v13 = v7[9];
    a2[6] = v7[8];
    a2[7] = v13;
    v14 = v7[3];
    *a2 = v7[2];
    a2[1] = v14;
    v15 = v7[5];
    a2[2] = v7[4];
    a2[3] = v15;
    v16 = v6 - 1 - a1;
    if (v16 >= 0)
    {
      result = (uint64_t)memmove(v7 + 2, v7 + 17, 240 * v16);
      v5[2] = v9;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55A2780@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  _OWORD *v7;
  __int128 v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A554B784(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = &v5[24 * a1];
    v8 = v7[11];
    v9 = v6 - 1;
    a2[8] = v7[10];
    a2[9] = v8;
    a2[10] = v7[12];
    *(_OWORD *)((char *)a2 + 169) = *(_OWORD *)((char *)v7 + 201);
    v10 = v7[7];
    a2[4] = v7[6];
    a2[5] = v10;
    v11 = v7[9];
    a2[6] = v7[8];
    a2[7] = v11;
    v12 = v7[3];
    *a2 = v7[2];
    a2[1] = v12;
    v13 = v7[5];
    a2[2] = v7[4];
    a2[3] = v13;
    v14 = v6 - 1 - a1;
    if (v14 >= 0)
    {
      result = (uint64_t)memmove(v7 + 2, v7 + 14, 192 * v14);
      v5[2] = v9;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55A2898@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A554B798(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = &v5[4 * a1];
    v10 = *((_OWORD *)v8 + 2);
    v9 = v8 + 4;
    v11 = v9[2];
    v12 = *((_BYTE *)v9 + 24);
    v13 = *((_BYTE *)v9 + 25);
    *(_OWORD *)a2 = v10;
    *(_QWORD *)(a2 + 16) = v11;
    *(_BYTE *)(a2 + 24) = v12;
    *(_BYTE *)(a2 + 25) = v13;
    if ((uint64_t)(v7 - a1) >= 0)
    {
      result = (uint64_t)memmove(v9, v9 + 4, 32 * (v7 - a1));
      v5[2] = v7;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55A298C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A55A29A0(a1, (uint64_t (*)(uint64_t))sub_1A554B748, _s25MessageSectionsToDownloadVMa, a2);
}

uint64_t sub_1A55A29A0@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;

  v9 = *v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = a2(v9);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v11 = v10 - 1;
  v12 = *(_QWORD *)(a3(0) - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = v9 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)) + v13 * a1;
  result = sub_1A54E3394(v14, a4, a3);
  if ((uint64_t)(v11 - a1) < 0)
  {
LABEL_15:
    result = sub_1A594CA68();
    __break(1u);
    return result;
  }
  if (v13 > 0 || v14 >= v14 + v13 + v13 * (v11 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v13)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  *(_QWORD *)(v9 + 16) = v11;
  *v4 = v9;
  return result;
}

uint64_t sub_1A55A2AE8(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unsigned int v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1A554B7D4(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[3 * a1];
      v8 = *((_DWORD *)v7 + 8);
      memmove(v7 + 4, v7 + 7, 24 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55A2BD4(unint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_1A554B7E8(v3);
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      sub_1A594B988();
      return v10;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55A2CB4(void (*a1)(_QWORD *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A55A2CEC(a1, a2, a3, a4, type metadata accessor for TaskHistory.Running);
}

uint64_t sub_1A55A2CD0(void (*a1)(_QWORD *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A55A2CEC(a1, a2, a3, a4, type metadata accessor for TaskHistory.Previous);
}

uint64_t sub_1A55A2CEC(void (*a1)(_QWORD *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;

  v6 = v5;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4B4C(0, v7, 0);
    v8 = v22;
    v11 = *(_QWORD *)(a5(0) - 8);
    v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v19 = *(_QWORD *)(v11 + 72);
    while (1)
    {
      a1(v21, v12);
      if (v6)
        break;
      v6 = 0;
      v13 = v21[0];
      v14 = v21[1];
      v22 = v8;
      v16 = *(_QWORD *)(v8 + 16);
      v15 = *(_QWORD *)(v8 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1A54F4B4C(v15 > 1, v16 + 1, 1);
        v8 = v22;
      }
      *(_QWORD *)(v8 + 16) = v16 + 1;
      v17 = v8 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v13;
      *(_QWORD *)(v17 + 40) = v14;
      v12 += v19;
      if (!--v7)
        return v8;
    }
    swift_release();
  }
  return v8;
}

uint64_t sub_1A55A2E14@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_DWORD *, uint64_t, uint64_t, uint64_t);
  _DWORD *v26;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t *v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a1;
  v4 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskHistory.Running(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v34 - v10);
  MEMORY[0x1E0C80A78](v9);
  v15 = (char *)&v34 - v14;
  v16 = *v2;
  v17 = *(_QWORD *)(*v2 + 16);
  if (!v17)
  {
LABEL_10:
    v24 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795C00);
    v25 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
    v26 = a2;
    return v25(v26, 1, 1, v24);
  }
  v35 = v13;
  v36 = v2;
  v34 = v6;
  v37 = a2;
  v38 = v16;
  v18 = v16 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v19 = *(_QWORD *)(v12 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v20 = 0;
  while (1)
  {
    sub_1A55034B8(v18, (uint64_t)v15, type metadata accessor for TaskHistory.Running);
    sub_1A55034B8((uint64_t)v15, (uint64_t)v11, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Running);
LABEL_4:
    sub_1A55034FC((uint64_t)v15, type metadata accessor for TaskHistory.Running);
    ++v20;
    v18 += v19;
    if (v17 == v20)
    {
      swift_bridgeObjectRelease();
      a2 = v37;
      goto LABEL_10;
    }
  }
  v21 = *v11;
  v22 = (uint64_t)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
  LOBYTE(v21) = static CommandID.__derived_struct_equals(_:_:)(v39, v21);
  sub_1A55034FC(v22, type metadata accessor for ClientCommand);
  if ((v21 & 1) == 0)
    goto LABEL_4;
  sub_1A55034FC((uint64_t)v15, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  v23 = v35;
  sub_1A55A29A0(v20, (uint64_t (*)(uint64_t))sub_1A554B720, type metadata accessor for TaskHistory.Running, v35);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1A55034FC(v23, type metadata accessor for TaskHistory.Running);
    v24 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795C00);
    v25 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
    v26 = v37;
    return v25(v26, 1, 1, v24);
  }
  v28 = *(_DWORD *)(v23 + 8);
  v29 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
  v30 = (uint64_t)v34;
  sub_1A54E3394(v23 + *(int *)(v29 + 64), (uint64_t)v34, type metadata accessor for ClientCommand);
  v31 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795C00);
  v32 = v37;
  v33 = (uint64_t)v37 + *(int *)(v31 + 48);
  *v37 = v28;
  sub_1A54E3394(v30, v33, type metadata accessor for ClientCommand);
  return (*(uint64_t (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v32, 0, 1, v31);
}

uint64_t sub_1A55A3100(int a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;

  v3 = type metadata accessor for TaskHistory.Running(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (int *)((char *)v20 - v6);
  MEMORY[0x1E0C80A78](v5);
  v11 = (char *)v20 - v10;
  v12 = *v1;
  v13 = *(_QWORD *)(*v1 + 16);
  if (!v13)
    return 0;
  v20[1] = v1;
  v21 = v9;
  v14 = v12 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v15 = *(_QWORD *)(v8 + 72);
  v22 = v12;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v16 = 0;
  while (1)
  {
    sub_1A55034B8(v14, (uint64_t)v11, type metadata accessor for TaskHistory.Running);
    sub_1A55034B8((uint64_t)v11, (uint64_t)v7, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC((uint64_t)v7, type metadata accessor for TaskHistory.Running);
LABEL_4:
    sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Running);
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  v17 = *v7;
  swift_release();
  if (v17 != a1)
    goto LABEL_4;
  sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  v18 = v21;
  sub_1A55A29A0(v16, (uint64_t (*)(uint64_t))sub_1A554B720, type metadata accessor for TaskHistory.Running, v21);
  if (swift_getEnumCaseMultiPayload() == 1)
    return *(unsigned int *)(v18 + 4);
  sub_1A55034FC(v18, type metadata accessor for TaskHistory.Running);
  return 0;
}

uint64_t sub_1A55A32E8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v21;
  int v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _BYTE v31[4];
  int v32;
  unint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a3;
  v5 = type metadata accessor for TaskHistory.Previous(0);
  v6 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  v35 = v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for TaskHistory.Running(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DC0);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v31[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for ClientCommand(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = &v31[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A55A4480(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    return sub_1A5510284((uint64_t)v15, &qword_1EE797DC0);
  sub_1A54E3394((uint64_t)v15, (uint64_t)v19, type metadata accessor for ClientCommand);
  v21 = (uint64_t)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64)];
  *(_QWORD *)v12 = a2;
  v22 = v32;
  *((_DWORD *)v12 + 2) = v32;
  sub_1A55034B8((uint64_t)v19, v21, type metadata accessor for ClientCommand);
  swift_storeEnumTagMultiPayload();
  v23 = v33;
  v24 = *v33;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v24 = sub_1A54F13D8(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
  v26 = *(_QWORD *)(v24 + 16);
  v25 = *(_QWORD *)(v24 + 24);
  if (v26 >= v25 >> 1)
    v24 = sub_1A54F13D8(v25 > 1, v26 + 1, 1, v24);
  *(_QWORD *)(v24 + 16) = v26 + 1;
  sub_1A54E3394((uint64_t)v12, v24+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v26, type metadata accessor for TaskHistory.Running);
  *v23 = v24;
  v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48);
  sub_1A55034B8((uint64_t)v19, (uint64_t)v8, type metadata accessor for ClientCommand);
  *(_DWORD *)&v8[v27] = v22;
  swift_storeEnumTagMultiPayload();
  v28 = v23[1];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v28 = sub_1A54F27BC(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
  v30 = *(_QWORD *)(v28 + 16);
  v29 = *(_QWORD *)(v28 + 24);
  if (v30 >= v29 >> 1)
    v28 = sub_1A54F27BC(v29 > 1, v30 + 1, 1, v28);
  *(_QWORD *)(v28 + 16) = v30 + 1;
  sub_1A54E3394((uint64_t)v8, v28+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v30, type metadata accessor for TaskHistory.Previous);
  v23[1] = v28;
  return sub_1A55034FC((uint64_t)v19, type metadata accessor for ClientCommand);
}

uint64_t sub_1A55A361C(uint64_t a1, int a2, int a3)
{
  unint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  _BYTE v21[4];
  int v22;
  uint64_t v23;

  v7 = type metadata accessor for TaskHistory.Previous(0);
  v23 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for TaskHistory.Running(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_DWORD *)v13 = a2;
  *((_DWORD *)v13 + 1) = a3;
  v22 = a3;
  *((_QWORD *)v13 + 1) = a1;
  swift_storeEnumTagMultiPayload();
  v14 = *v3;
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = sub_1A54F13D8(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
  v16 = *(_QWORD *)(v14 + 16);
  v15 = *(_QWORD *)(v14 + 24);
  if (v16 >= v15 >> 1)
    v14 = sub_1A54F13D8(v15 > 1, v16 + 1, 1, v14);
  *(_QWORD *)(v14 + 16) = v16 + 1;
  sub_1A54E3394((uint64_t)v13, v14+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v16, type metadata accessor for TaskHistory.Running);
  *v3 = v14;
  *(_QWORD *)v9 = a1;
  *((_DWORD *)v9 + 2) = v22;
  swift_storeEnumTagMultiPayload();
  v17 = v3[1];
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v17 = sub_1A54F27BC(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
  v19 = *(_QWORD *)(v17 + 16);
  v18 = *(_QWORD *)(v17 + 24);
  if (v19 >= v18 >> 1)
    v17 = sub_1A54F27BC(v18 > 1, v19 + 1, 1, v17);
  *(_QWORD *)(v17 + 16) = v19 + 1;
  result = sub_1A54E3394((uint64_t)v9, v17+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v19, type metadata accessor for TaskHistory.Previous);
  v3[1] = v17;
  return result;
}

uint64_t sub_1A55A384C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for TaskHistory.Running(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (unsigned int *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A55034B8(v1, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = *v4;
    swift_release();
  }
  else
  {
    v6 = *(_QWORD *)v4;
    v7 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
    sub_1A55034FC((uint64_t)v4 + *(int *)(v7 + 64), type metadata accessor for ClientCommand);
  }
  return v6;
}

uint64_t sub_1A55A3928(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_1A55379C8(*a1, *a2) & 1) != 0)
    return sub_1A5537B04(v2, v3);
  else
    return 0;
}

uint64_t sub_1A55A3970(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  unint64_t v48;

  v45 = type metadata accessor for TaskHistory.Previous(0);
  v4 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v44 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v43 = (uint64_t)&v37 - v7;
  v42 = type metadata accessor for TaskHistory.Running(0);
  v8 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v41 = (unint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v37 - v11;
  v47 = 0;
  v48 = 0xE000000000000000;
  sub_1A594C720();
  swift_bridgeObjectRelease();
  v47 = 0x20676E696E6E7572;
  v48 = 0xE900000000000028;
  v46 = *(_QWORD *)(a1 + 16);
  v13 = v46;
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  v14 = MEMORY[0x1E0DEE9D8];
  v39 = a2;
  if (v13)
  {
    v38 = v4;
    v46 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F4B4C(0, v13, 0);
    v15 = *(unsigned __int8 *)(v8 + 80);
    v37 = a1;
    v16 = a1 + ((v15 + 32) & ~v15);
    v40 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_1A55034B8(v16, (uint64_t)v12, type metadata accessor for TaskHistory.Running);
      sub_1A55034B8((uint64_t)v12, v41, type metadata accessor for TaskHistory.Running);
      v17 = sub_1A594B4A8();
      v19 = v18;
      sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Running);
      v14 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A54F4B4C(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v46;
      }
      v21 = *(_QWORD *)(v14 + 16);
      v20 = *(_QWORD *)(v14 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1A54F4B4C(v20 > 1, v21 + 1, 1);
        v14 = v46;
      }
      *(_QWORD *)(v14 + 16) = v21 + 1;
      v22 = v14 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v17;
      *(_QWORD *)(v22 + 40) = v19;
      v16 += v40;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    v4 = v38;
    a2 = v39;
  }
  v46 = v14;
  v23 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
  v24 = sub_1A54F70C0();
  sub_1A594B268();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  v46 = *(_QWORD *)(a2 + 16);
  v25 = v46;
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  v26 = MEMORY[0x1E0DEE9D8];
  if (v25)
  {
    v41 = v24;
    v42 = v23;
    v46 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F4B4C(0, v25, 0);
    v27 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v28 = *(_QWORD *)(v4 + 72);
    do
    {
      v29 = v43;
      sub_1A55034B8(v27, v43, type metadata accessor for TaskHistory.Previous);
      sub_1A55034B8(v29, v44, type metadata accessor for TaskHistory.Previous);
      v30 = sub_1A594B4A8();
      v32 = v31;
      sub_1A55034FC(v29, type metadata accessor for TaskHistory.Previous);
      v26 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A54F4B4C(0, *(_QWORD *)(v26 + 16) + 1, 1);
        v26 = v46;
      }
      v34 = *(_QWORD *)(v26 + 16);
      v33 = *(_QWORD *)(v26 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1A54F4B4C(v33 > 1, v34 + 1, 1);
        v26 = v46;
      }
      *(_QWORD *)(v26 + 16) = v34 + 1;
      v35 = v26 + 16 * v34;
      *(_QWORD *)(v35 + 32) = v30;
      *(_QWORD *)(v35 + 40) = v32;
      v27 += v28;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
  }
  v46 = v26;
  sub_1A594B268();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  return v47;
}

uint64_t sub_1A55A3E3C()
{
  uint64_t *v0;

  return sub_1A55A3970(*v0, v0[1]);
}

uint64_t sub_1A55A3E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t (*v8)(_QWORD);
  int v9;
  unint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE v20[12];
  int v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for TaskHistory.Running(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A55034B8(v1, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = *((_DWORD *)v7 + 1);
    v10 = *((_QWORD *)v7 + 1);
    v21 = *(_DWORD *)v7;
    v22 = sub_1A594CC9C();
    v23 = v11;
    sub_1A594B5F8();
    v21 = v9;
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    v12 = Action.kind.getter(v10);
    Action.Kind.description.getter(v12);
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    swift_release();
    return v22;
  }
  else
  {
    v14 = *(_QWORD *)v7;
    v15 = *((_DWORD *)v7 + 2);
    v16 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
    sub_1A54E3394((uint64_t)&v7[*(int *)(v16 + 64)], (uint64_t)v4, type metadata accessor for ClientCommand);
    v17 = CommandID.tag.getter(v14);
    LOBYTE(v22) = v17;
    HIDWORD(v22) = HIDWORD(v17);
    v22 = sub_1A594B490();
    v23 = v18;
    sub_1A594B5F8();
    v21 = v15;
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    ClientCommand.logIdentifier.getter();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    v13 = v22;
    sub_1A55034FC((uint64_t)v4, type metadata accessor for ClientCommand);
  }
  return v13;
}

uint64_t sub_1A55A4094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (unint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A55034B8(v1, (uint64_t)v7, type metadata accessor for TaskHistory.Previous);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = Action.kind.getter(*v7);
    v9 = Action.Kind.description.getter(v8);
    swift_release();
  }
  else
  {
    sub_1A54E3394((uint64_t)v7, (uint64_t)v4, type metadata accessor for ClientCommand);
    ClientCommand.logIdentifier.getter();
    v9 = v10;
    sub_1A55034FC((uint64_t)v4, type metadata accessor for ClientCommand);
  }
  return v9;
}

uint64_t type metadata accessor for TaskHistory.Previous(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE797210);
}

uint64_t type metadata accessor for TaskHistory.Running(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7971F8);
}

BOOL sub_1A55A41D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a2;
  v6 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
    return (v6 & 1) != 0 && (_DWORD)v4 == (_DWORD)v5;
  else
    return (v6 & 1) == 0 && static CommandID.__derived_struct_equals(_:_:)(v4, v5);
}

uint64_t sub_1A55A4210(uint64_t a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  unint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v4 = type metadata accessor for TaskHistory.Running(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(a1, (uint64_t)v7, v8);
  v9 = *a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v9 = sub_1A54F13D8(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
    *a2 = v9;
  }
  v12 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    v9 = sub_1A54F13D8(v11 > 1, v12 + 1, 1, v9);
    *a2 = v9;
  }
  *(_QWORD *)(v9 + 16) = v12 + 1;
  return sub_1A54E3394((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v12, type metadata accessor for TaskHistory.Running);
}

uint64_t sub_1A55A4324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  uint64_t (*v7)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for TaskHistory.Running(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (unsigned int *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A55034B8(a1, (uint64_t)v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v9 = *v6;
    swift_release();
  }
  else
  {
    v9 = *(_QWORD *)v6;
    v10 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
    sub_1A55034FC((uint64_t)v6 + *(int *)(v10 + 64), type metadata accessor for ClientCommand);
  }
  v11 = *(_QWORD *)(a2 + 8);
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 8) = v11;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1A54F27D0(0, *(_QWORD *)(v11 + 16) + 1, 1, (char *)v11);
    v11 = result;
    *(_QWORD *)(a2 + 8) = result;
  }
  v14 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v11 + 24);
  if (v14 >= v13 >> 1)
  {
    result = (uint64_t)sub_1A54F27D0((char *)(v13 > 1), v14 + 1, 1, (char *)v11);
    v11 = result;
  }
  *(_QWORD *)(v11 + 16) = v14 + 1;
  v15 = v11 + 12 * v14;
  *(_QWORD *)(v15 + 32) = v9;
  *(_BYTE *)(v15 + 40) = EnumCaseMultiPayload == 1;
  *(_QWORD *)(a2 + 8) = v11;
  return result;
}

uint64_t sub_1A55A4480(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t __swift_memcpy9_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for TaskHistory.RemovedID()
{
  return &type metadata for TaskHistory.RemovedID;
}

ValueMetadata *type metadata accessor for TaskHistory()
{
  return &type metadata for TaskHistory;
}

_QWORD *sub_1A55A44FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int v30;
  char v31;
  unint64_t v32;
  unsigned int v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v6 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_retain();
    }
    else
    {
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v11 = *((_QWORD *)v9 + 1);
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_QWORD *)v8 + 1) = v11;
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          *((_QWORD *)v8 + 3) = *((_QWORD *)v9 + 3);
          *((_DWORD *)v8 + 8) = *((_DWORD *)v9 + 8);
          *(_DWORD *)(v8 + 35) = *(_DWORD *)(v9 + 35);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          goto LABEL_24;
        case 1u:
          v12 = *((_QWORD *)v9 + 1);
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_QWORD *)v8 + 1) = v12;
          v13 = *((_QWORD *)v9 + 2);
          v14 = *((_QWORD *)v9 + 3);
          *((_QWORD *)v8 + 2) = v13;
          *((_QWORD *)v8 + 3) = v14;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 2u:
        case 8u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 3u:
        case 4u:
        case 5u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 6u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 7u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
          *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 9u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796820);
          v16 = *(int *)(v15 + 64);
          v17 = &v8[v16];
          v18 = &v9[v16];
          v19 = sub_1A594A0EC();
          v20 = *(_QWORD *)(v19 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
          {
            v21 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
            memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
          }
          v39 = *(int *)(v15 + 80);
          v40 = (uint64_t *)&v8[v39];
          v41 = (uint64_t *)&v9[v39];
          v42 = *v41;
          v43 = v41[1];
          sub_1A54E42B4(*v41, v43);
          *v40 = v42;
          v40[1] = v43;
          goto LABEL_24;
        case 0xAu:
        case 0xCu:
          v22 = *(_QWORD *)v9;
          sub_1A54E42F8(v22);
          *(_QWORD *)v8 = v22;
          goto LABEL_24;
        case 0xBu:
        case 0xDu:
          v23 = *(_QWORD *)v9;
          sub_1A54E42F8(*(_QWORD *)v9);
          v24 = *((_QWORD *)v9 + 1);
          *(_QWORD *)v8 = v23;
          *((_QWORD *)v8 + 1) = v24;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 0xEu:
          v25 = *(_QWORD *)v9;
          v26 = *((_DWORD *)v9 + 2);
          v27 = v9[12];
          sub_1A54E4334(*(_QWORD *)v9, v26, v27);
          *(_QWORD *)v8 = v25;
          *((_DWORD *)v8 + 2) = v26;
          v8[12] = v27;
          v28 = *((_QWORD *)v9 + 3);
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          *((_QWORD *)v8 + 3) = v28;
          v8[32] = v9[32];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 0xFu:
          v29 = *(_QWORD *)v9;
          v30 = *((_DWORD *)v9 + 2);
          v31 = v9[12];
          sub_1A54E4334(*(_QWORD *)v9, v30, v31);
          *(_QWORD *)v8 = v29;
          *((_DWORD *)v8 + 2) = v30;
          v8[12] = v31;
          *((_WORD *)v8 + 8) = *((_WORD *)v9 + 8);
          *((_QWORD *)v8 + 3) = *((_QWORD *)v9 + 3);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 0x10u:
        case 0x11u:
          v32 = *(_QWORD *)v9;
          v33 = *((_DWORD *)v9 + 2);
          v34 = v9[12];
          sub_1A54E4334(*(_QWORD *)v9, v33, v34);
          *(_QWORD *)v8 = v32;
          *((_DWORD *)v8 + 2) = v33;
          v8[12] = v34;
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 0x12u:
          v35 = *((_QWORD *)v9 + 1);
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_QWORD *)v8 + 1) = v35;
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_24;
        case 0x13u:
          *(_DWORD *)v8 = *(_DWORD *)v9;
          v36 = *((_QWORD *)v9 + 2);
          *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
          *((_QWORD *)v8 + 2) = v36;
          v37 = *((_QWORD *)v9 + 4);
          *((_QWORD *)v8 + 3) = *((_QWORD *)v9 + 3);
          *((_QWORD *)v8 + 4) = v37;
          v38 = *((_QWORD *)v9 + 6);
          *((_QWORD *)v8 + 5) = *((_QWORD *)v9 + 5);
          *((_QWORD *)v8 + 6) = v38;
          *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_24:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unint64_t sub_1A55A4B38(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload() == 1)
    return swift_release();
  v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
  type metadata accessor for ClientCommand(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      return swift_release();
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 2:
    case 6:
    case 8:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 3:
    case 4:
    case 5:
      goto LABEL_19;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796820);
      v5 = v3 + *(int *)(v4 + 64);
      v6 = sub_1A594A0EC();
      v7 = *(_QWORD *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      return sub_1A54E46E8(*(_QWORD *)(v3 + *(int *)(v4 + 80)), *(_QWORD *)(v3 + *(int *)(v4 + 80) + 8));
    case 10:
    case 12:
      return sub_1A54E472C(*(_QWORD *)v3);
    case 11:
    case 13:
      sub_1A54E472C(*(_QWORD *)v3);
      goto LABEL_19;
    case 14:
    case 16:
    case 17:
      sub_1A54E3458(*(_QWORD *)v3, *(unsigned int *)(v3 + 8), *(_BYTE *)(v3 + 12));
      goto LABEL_19;
    case 15:
      sub_1A54E3458(*(_QWORD *)v3, *(unsigned int *)(v3 + 8), *(_BYTE *)(v3 + 12));
      goto LABEL_19;
    case 18:
      swift_release();
      swift_release();
      return swift_release();
    case 19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_19:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_1A55A4D44(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unsigned int v27;
  char v28;
  unint64_t v29;
  unsigned int v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
    v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
    v5 = (char *)a1 + v4;
    v6 = (char *)a2 + v4;
    v7 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v8 = *((_QWORD *)v6 + 1);
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_QWORD *)v5 + 1) = v8;
        *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
        *((_QWORD *)v5 + 3) = *((_QWORD *)v6 + 3);
        *((_DWORD *)v5 + 8) = *((_DWORD *)v6 + 8);
        *(_DWORD *)(v5 + 35) = *(_DWORD *)(v6 + 35);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        goto LABEL_22;
      case 1u:
        v9 = *((_QWORD *)v6 + 1);
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_QWORD *)v5 + 1) = v9;
        v10 = *((_QWORD *)v6 + 2);
        v11 = *((_QWORD *)v6 + 3);
        *((_QWORD *)v5 + 2) = v10;
        *((_QWORD *)v5 + 3) = v11;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 2u:
      case 8u:
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
        *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 3u:
      case 4u:
      case 5u:
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 6u:
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
        *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
        *((_DWORD *)v5 + 6) = *((_DWORD *)v6 + 6);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 7u:
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
        *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
        *((_DWORD *)v5 + 6) = *((_DWORD *)v6 + 6);
        *((_QWORD *)v5 + 4) = *((_QWORD *)v6 + 4);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 9u:
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
        *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796820);
        v13 = *(int *)(v12 + 64);
        v14 = &v5[v13];
        v15 = &v6[v13];
        v16 = sub_1A594A0EC();
        v17 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
        }
        v36 = *(int *)(v12 + 80);
        v37 = (uint64_t *)&v5[v36];
        v38 = (uint64_t *)&v6[v36];
        v39 = *v38;
        v40 = v38[1];
        sub_1A54E42B4(*v38, v40);
        *v37 = v39;
        v37[1] = v40;
        goto LABEL_22;
      case 0xAu:
      case 0xCu:
        v19 = *(_QWORD *)v6;
        sub_1A54E42F8(v19);
        *(_QWORD *)v5 = v19;
        goto LABEL_22;
      case 0xBu:
      case 0xDu:
        v20 = *(_QWORD *)v6;
        sub_1A54E42F8(*(_QWORD *)v6);
        v21 = *((_QWORD *)v6 + 1);
        *(_QWORD *)v5 = v20;
        *((_QWORD *)v5 + 1) = v21;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 0xEu:
        v22 = *(_QWORD *)v6;
        v23 = *((_DWORD *)v6 + 2);
        v24 = v6[12];
        sub_1A54E4334(*(_QWORD *)v6, v23, v24);
        *(_QWORD *)v5 = v22;
        *((_DWORD *)v5 + 2) = v23;
        v5[12] = v24;
        v25 = *((_QWORD *)v6 + 3);
        *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
        *((_QWORD *)v5 + 3) = v25;
        v5[32] = v6[32];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 0xFu:
        v26 = *(_QWORD *)v6;
        v27 = *((_DWORD *)v6 + 2);
        v28 = v6[12];
        sub_1A54E4334(*(_QWORD *)v6, v27, v28);
        *(_QWORD *)v5 = v26;
        *((_DWORD *)v5 + 2) = v27;
        v5[12] = v28;
        *((_WORD *)v5 + 8) = *((_WORD *)v6 + 8);
        *((_QWORD *)v5 + 3) = *((_QWORD *)v6 + 3);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 0x10u:
      case 0x11u:
        v29 = *(_QWORD *)v6;
        v30 = *((_DWORD *)v6 + 2);
        v31 = v6[12];
        sub_1A54E4334(*(_QWORD *)v6, v30, v31);
        *(_QWORD *)v5 = v29;
        *((_DWORD *)v5 + 2) = v30;
        v5[12] = v31;
        *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
        *((_DWORD *)v5 + 6) = *((_DWORD *)v6 + 6);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 0x12u:
        v32 = *((_QWORD *)v6 + 1);
        *(_QWORD *)v5 = *(_QWORD *)v6;
        *((_QWORD *)v5 + 1) = v32;
        *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_22;
      case 0x13u:
        *(_DWORD *)v5 = *(_DWORD *)v6;
        v33 = *((_QWORD *)v6 + 2);
        *((_QWORD *)v5 + 1) = *((_QWORD *)v6 + 1);
        *((_QWORD *)v5 + 2) = v33;
        v34 = *((_QWORD *)v6 + 4);
        *((_QWORD *)v5 + 3) = *((_QWORD *)v6 + 3);
        *((_QWORD *)v5 + 4) = v34;
        v35 = *((_QWORD *)v6 + 6);
        *((_QWORD *)v5 + 5) = *((_QWORD *)v6 + 5);
        *((_QWORD *)v5 + 6) = v35;
        *((_QWORD *)v5 + 7) = *((_QWORD *)v6 + 7);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_22:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1A55A534C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  char v24;
  unint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;

  if (a1 != a2)
  {
    sub_1A55034FC(a1, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      swift_retain();
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
      v5 = (char *)(a1 + v4);
      v6 = a2 + v4;
      v7 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_QWORD *)v5 = *(_QWORD *)v6;
          *((_QWORD *)v5 + 1) = *(_QWORD *)(v6 + 8);
          *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
          *((_DWORD *)v5 + 6) = *(_DWORD *)(v6 + 24);
          *((_DWORD *)v5 + 7) = *(_DWORD *)(v6 + 28);
          v8 = *(_DWORD *)(v6 + 32);
          *(_DWORD *)(v5 + 35) = *(_DWORD *)(v6 + 35);
          *((_DWORD *)v5 + 8) = v8;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          goto LABEL_23;
        case 1u:
          *(_QWORD *)v5 = *(_QWORD *)v6;
          *((_QWORD *)v5 + 1) = *(_QWORD *)(v6 + 8);
          *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
          *((_QWORD *)v5 + 3) = *(_QWORD *)(v6 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 2u:
        case 8u:
          *(_QWORD *)v5 = *(_QWORD *)v6;
          *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
          *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 3u:
        case 4u:
        case 5u:
          *(_QWORD *)v5 = *(_QWORD *)v6;
          *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 6u:
          *(_QWORD *)v5 = *(_QWORD *)v6;
          *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
          *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
          *((_DWORD *)v5 + 6) = *(_DWORD *)(v6 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 7u:
          *(_QWORD *)v5 = *(_QWORD *)v6;
          *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
          *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
          *((_DWORD *)v5 + 6) = *(_DWORD *)(v6 + 24);
          *((_QWORD *)v5 + 4) = *(_QWORD *)(v6 + 32);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 9u:
          *(_QWORD *)v5 = *(_QWORD *)v6;
          *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
          *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796820);
          v10 = *(int *)(v9 + 64);
          v11 = &v5[v10];
          v12 = (const void *)(v6 + v10);
          v13 = sub_1A594A0EC();
          v14 = *(_QWORD *)(v13 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
          {
            v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
          }
          v28 = *(int *)(v9 + 80);
          v29 = (uint64_t *)&v5[v28];
          v30 = (uint64_t *)(v6 + v28);
          v31 = *v30;
          v32 = v30[1];
          sub_1A54E42B4(*v30, v32);
          *v29 = v31;
          v29[1] = v32;
          goto LABEL_23;
        case 0xAu:
        case 0xCu:
          v16 = *(_QWORD *)v6;
          sub_1A54E42F8(v16);
          *(_QWORD *)v5 = v16;
          goto LABEL_23;
        case 0xBu:
        case 0xDu:
          v17 = *(_QWORD *)v6;
          sub_1A54E42F8(*(_QWORD *)v6);
          *(_QWORD *)v5 = v17;
          *((_QWORD *)v5 + 1) = *(_QWORD *)(v6 + 8);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 0xEu:
          v18 = *(_QWORD *)v6;
          v19 = *(_DWORD *)(v6 + 8);
          v20 = *(_BYTE *)(v6 + 12);
          sub_1A54E4334(*(_QWORD *)v6, v19, v20);
          *(_QWORD *)v5 = v18;
          *((_DWORD *)v5 + 2) = v19;
          v5[12] = v20;
          *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
          v21 = *(_QWORD *)(v6 + 24);
          v5[32] = *(_BYTE *)(v6 + 32);
          *((_QWORD *)v5 + 3) = v21;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 0xFu:
          v22 = *(_QWORD *)v6;
          v23 = *(_DWORD *)(v6 + 8);
          v24 = *(_BYTE *)(v6 + 12);
          sub_1A54E4334(*(_QWORD *)v6, v23, v24);
          *(_QWORD *)v5 = v22;
          *((_DWORD *)v5 + 2) = v23;
          v5[12] = v24;
          v5[16] = *(_BYTE *)(v6 + 16);
          v5[17] = *(_BYTE *)(v6 + 17);
          *((_QWORD *)v5 + 3) = *(_QWORD *)(v6 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 0x10u:
        case 0x11u:
          v25 = *(_QWORD *)v6;
          v26 = *(_DWORD *)(v6 + 8);
          v27 = *(_BYTE *)(v6 + 12);
          sub_1A54E4334(*(_QWORD *)v6, v26, v27);
          *(_QWORD *)v5 = v25;
          *((_DWORD *)v5 + 2) = v26;
          v5[12] = v27;
          *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
          *((_DWORD *)v5 + 6) = *(_DWORD *)(v6 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 0x12u:
          *(_QWORD *)v5 = *(_QWORD *)v6;
          *((_QWORD *)v5 + 1) = *(_QWORD *)(v6 + 8);
          *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_23;
        case 0x13u:
          *(_DWORD *)v5 = *(_DWORD *)v6;
          *((_QWORD *)v5 + 1) = *(_QWORD *)(v6 + 8);
          *((_QWORD *)v5 + 2) = *(_QWORD *)(v6 + 16);
          *((_QWORD *)v5 + 3) = *(_QWORD *)(v6 + 24);
          *((_QWORD *)v5 + 4) = *(_QWORD *)(v6 + 32);
          *((_QWORD *)v5 + 5) = *(_QWORD *)(v6 + 40);
          *((_QWORD *)v5 + 6) = *(_QWORD *)(v6 + 48);
          *((_QWORD *)v5 + 7) = *(_QWORD *)(v6 + 56);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_23:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v5, (const void *)v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *sub_1A55A59CC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1[2] = a2[2];
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for ClientCommand(0);
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *((_DWORD *)v7 + 2) = *((_DWORD *)v8 + 2);
      *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
      v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796820);
      v11 = *(int *)(v10 + 64);
      v12 = &v7[v11];
      v13 = &v8[v11];
      v14 = sub_1A594A0EC();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      *(_OWORD *)&v7[*(int *)(v10 + 80)] = *(_OWORD *)&v8[*(int *)(v10 + 80)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *sub_1A55A5B74(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[2] = a2[2];
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = type metadata accessor for ClientCommand(0);
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_DWORD *)v7 + 2) = *((_DWORD *)v8 + 2);
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796820);
        v11 = *(int *)(v10 + 64);
        v12 = &v7[v11];
        v13 = &v8[v11];
        v14 = sub_1A594A0EC();
        v15 = *(_QWORD *)(v14 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        {
          v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
        }
        *(_OWORD *)&v7[*(int *)(v10 + 80)] = *(_OWORD *)&v8[*(int *)(v10 + 80)];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A55A5D34()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = type metadata accessor for ClientCommand(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[4] = v2;
    v2[5] = &unk_1A59A87A8;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_DWORD *sub_1A55A5DC0(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  char v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v6 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (_DWORD *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[2] = *(_DWORD *)(a2 + 8);
      swift_retain();
    }
    else
    {
      v7 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v8 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v8;
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
          a1[8] = *(_DWORD *)(a2 + 32);
          *(_DWORD *)((char *)a1 + 35) = *(_DWORD *)(a2 + 35);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          goto LABEL_24;
        case 1u:
          v9 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v9;
          v10 = *(_QWORD *)(a2 + 24);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          *((_QWORD *)a1 + 3) = v10;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 2u:
        case 8u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 3u:
        case 4u:
        case 5u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 6u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          a1[6] = *(_DWORD *)(a2 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 7u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          a1[6] = *(_DWORD *)(a2 + 24);
          *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 9u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796820);
          v12 = *(int *)(v11 + 64);
          v13 = (char *)a1 + v12;
          v14 = (const void *)(a2 + v12);
          v15 = sub_1A594A0EC();
          v16 = *(_QWORD *)(v15 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
          {
            v17 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
            memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
          }
          v35 = *(int *)(v11 + 80);
          v36 = (uint64_t *)((char *)a1 + v35);
          v37 = (uint64_t *)(a2 + v35);
          v38 = *v37;
          v39 = v37[1];
          sub_1A54E42B4(*v37, v39);
          *v36 = v38;
          v36[1] = v39;
          goto LABEL_24;
        case 0xAu:
        case 0xCu:
          v18 = *(_QWORD *)a2;
          sub_1A54E42F8(*(_QWORD *)a2);
          *(_QWORD *)a1 = v18;
          goto LABEL_24;
        case 0xBu:
        case 0xDu:
          v19 = *(_QWORD *)a2;
          sub_1A54E42F8(*(_QWORD *)a2);
          v20 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = v19;
          *((_QWORD *)a1 + 1) = v20;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 0xEu:
          v21 = *(_QWORD *)a2;
          v22 = *(_DWORD *)(a2 + 8);
          v23 = *(_BYTE *)(a2 + 12);
          sub_1A54E4334(*(_QWORD *)a2, v22, v23);
          *(_QWORD *)a1 = v21;
          a1[2] = v22;
          *((_BYTE *)a1 + 12) = v23;
          v24 = *(_QWORD *)(a2 + 24);
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          *((_QWORD *)a1 + 3) = v24;
          *((_BYTE *)a1 + 32) = *(_BYTE *)(a2 + 32);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 0xFu:
          v25 = *(_QWORD *)a2;
          v26 = *(_DWORD *)(a2 + 8);
          v27 = *(_BYTE *)(a2 + 12);
          sub_1A54E4334(*(_QWORD *)a2, v26, v27);
          *(_QWORD *)a1 = v25;
          a1[2] = v26;
          *((_BYTE *)a1 + 12) = v27;
          *((_WORD *)a1 + 8) = *(_WORD *)(a2 + 16);
          *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 0x10u:
        case 0x11u:
          v28 = *(_QWORD *)a2;
          v29 = *(_DWORD *)(a2 + 8);
          v30 = *(_BYTE *)(a2 + 12);
          sub_1A54E4334(*(_QWORD *)a2, v29, v30);
          *(_QWORD *)a1 = v28;
          a1[2] = v29;
          *((_BYTE *)a1 + 12) = v30;
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          a1[6] = *(_DWORD *)(a2 + 24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_24;
        case 0x12u:
          v31 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v31;
          *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_24;
        case 0x13u:
          *a1 = *(_DWORD *)a2;
          v32 = *(_QWORD *)(a2 + 16);
          *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
          *((_QWORD *)a1 + 2) = v32;
          v33 = *(_QWORD *)(a2 + 32);
          *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
          *((_QWORD *)a1 + 4) = v33;
          v34 = *(_QWORD *)(a2 + 48);
          *((_QWORD *)a1 + 5) = *(_QWORD *)(a2 + 40);
          *((_QWORD *)a1 + 6) = v34;
          *((_QWORD *)a1 + 7) = *(_QWORD *)(a2 + 56);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_24:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v40 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8);
      *(_DWORD *)((char *)a1 + *(int *)(v40 + 48)) = *(_DWORD *)(a2 + *(int *)(v40 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unint64_t sub_1A55A63EC(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
    return swift_release();
  type metadata accessor for ClientCommand(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      return swift_release();
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 2:
    case 6:
    case 8:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 3:
    case 4:
    case 5:
      goto LABEL_19;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796820);
      v4 = a1 + *(int *)(v3 + 64);
      v5 = sub_1A594A0EC();
      v6 = *(_QWORD *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      return sub_1A54E46E8(*(_QWORD *)(a1 + *(int *)(v3 + 80)), *(_QWORD *)(a1 + *(int *)(v3 + 80) + 8));
    case 10:
    case 12:
      return sub_1A54E472C(*(_QWORD *)a1);
    case 11:
    case 13:
      sub_1A54E472C(*(_QWORD *)a1);
      goto LABEL_19;
    case 14:
    case 16:
    case 17:
      sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
      goto LABEL_19;
    case 15:
      sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
      goto LABEL_19;
    case 18:
      swift_release();
      swift_release();
      return swift_release();
    case 19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_19:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

_DWORD *sub_1A55A65E4(_DWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  char v24;
  unint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)a1 = *a2;
    a1[2] = *((_DWORD *)a2 + 2);
    swift_retain();
  }
  else
  {
    v4 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v5 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v5;
        *((_QWORD *)a1 + 2) = a2[2];
        *((_QWORD *)a1 + 3) = a2[3];
        a1[8] = *((_DWORD *)a2 + 8);
        *(_DWORD *)((char *)a1 + 35) = *(_DWORD *)((char *)a2 + 35);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        goto LABEL_22;
      case 1u:
        v6 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v6;
        v7 = a2[3];
        *((_QWORD *)a1 + 2) = a2[2];
        *((_QWORD *)a1 + 3) = v7;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 2u:
      case 8u:
        *(_QWORD *)a1 = *a2;
        a1[2] = *((_DWORD *)a2 + 2);
        *((_QWORD *)a1 + 2) = a2[2];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 3u:
      case 4u:
      case 5u:
        *(_QWORD *)a1 = *a2;
        a1[2] = *((_DWORD *)a2 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 6u:
        *(_QWORD *)a1 = *a2;
        a1[2] = *((_DWORD *)a2 + 2);
        *((_QWORD *)a1 + 2) = a2[2];
        a1[6] = *((_DWORD *)a2 + 6);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 7u:
        *(_QWORD *)a1 = *a2;
        a1[2] = *((_DWORD *)a2 + 2);
        *((_QWORD *)a1 + 2) = a2[2];
        a1[6] = *((_DWORD *)a2 + 6);
        *((_QWORD *)a1 + 4) = a2[4];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 9u:
        *(_QWORD *)a1 = *a2;
        a1[2] = *((_DWORD *)a2 + 2);
        *((_QWORD *)a1 + 2) = a2[2];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796820);
        v9 = *(int *)(v8 + 64);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_1A594A0EC();
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
        v32 = *(int *)(v8 + 80);
        v33 = (uint64_t *)((char *)a1 + v32);
        v34 = (uint64_t *)((char *)a2 + v32);
        v35 = *v34;
        v36 = v34[1];
        sub_1A54E42B4(*v34, v36);
        *v33 = v35;
        v33[1] = v36;
        goto LABEL_22;
      case 0xAu:
      case 0xCu:
        v15 = *a2;
        sub_1A54E42F8(*a2);
        *(_QWORD *)a1 = v15;
        goto LABEL_22;
      case 0xBu:
      case 0xDu:
        v16 = *a2;
        sub_1A54E42F8(*a2);
        v17 = a2[1];
        *(_QWORD *)a1 = v16;
        *((_QWORD *)a1 + 1) = v17;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 0xEu:
        v18 = *a2;
        v19 = *((_DWORD *)a2 + 2);
        v20 = *((_BYTE *)a2 + 12);
        sub_1A54E4334(*a2, v19, v20);
        *(_QWORD *)a1 = v18;
        a1[2] = v19;
        *((_BYTE *)a1 + 12) = v20;
        v21 = a2[3];
        *((_QWORD *)a1 + 2) = a2[2];
        *((_QWORD *)a1 + 3) = v21;
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 0xFu:
        v22 = *a2;
        v23 = *((_DWORD *)a2 + 2);
        v24 = *((_BYTE *)a2 + 12);
        sub_1A54E4334(*a2, v23, v24);
        *(_QWORD *)a1 = v22;
        a1[2] = v23;
        *((_BYTE *)a1 + 12) = v24;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        *((_QWORD *)a1 + 3) = a2[3];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 0x10u:
      case 0x11u:
        v25 = *a2;
        v26 = *((_DWORD *)a2 + 2);
        v27 = *((_BYTE *)a2 + 12);
        sub_1A54E4334(*a2, v26, v27);
        *(_QWORD *)a1 = v25;
        a1[2] = v26;
        *((_BYTE *)a1 + 12) = v27;
        *((_QWORD *)a1 + 2) = a2[2];
        a1[6] = *((_DWORD *)a2 + 6);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_22;
      case 0x12u:
        v28 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v28;
        *((_QWORD *)a1 + 2) = a2[2];
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_22;
      case 0x13u:
        *a1 = *(_DWORD *)a2;
        v29 = a2[2];
        *((_QWORD *)a1 + 1) = a2[1];
        *((_QWORD *)a1 + 2) = v29;
        v30 = a2[4];
        *((_QWORD *)a1 + 3) = a2[3];
        *((_QWORD *)a1 + 4) = v30;
        v31 = a2[6];
        *((_QWORD *)a1 + 5) = a2[5];
        *((_QWORD *)a1 + 6) = v31;
        *((_QWORD *)a1 + 7) = a2[7];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_22:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8);
    *(_DWORD *)((char *)a1 + *(int *)(v37 + 48)) = *(_DWORD *)((char *)a2 + *(int *)(v37 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_1A55A6BE4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  char v21;
  unint64_t v22;
  unsigned int v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      swift_retain();
    }
    else
    {
      v4 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
          *((_DWORD *)a1 + 7) = *((_DWORD *)a2 + 7);
          v5 = *((_DWORD *)a2 + 8);
          *(_DWORD *)((char *)a1 + 35) = *(_DWORD *)((char *)a2 + 35);
          *((_DWORD *)a1 + 8) = v5;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          goto LABEL_23;
        case 1u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 2u:
        case 8u:
          *a1 = *a2;
          *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
          a1[2] = a2[2];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 3u:
        case 4u:
        case 5u:
          *a1 = *a2;
          *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 6u:
          *a1 = *a2;
          *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
          a1[2] = a2[2];
          *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 7u:
          *a1 = *a2;
          *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
          a1[2] = a2[2];
          *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
          a1[4] = a2[4];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 9u:
          *a1 = *a2;
          *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
          a1[2] = a2[2];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796820);
          v7 = *(int *)(v6 + 64);
          v8 = (char *)a1 + v7;
          v9 = (char *)a2 + v7;
          v10 = sub_1A594A0EC();
          v11 = *(_QWORD *)(v10 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
          {
            v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
          }
          v25 = *(int *)(v6 + 80);
          v26 = (uint64_t *)((char *)a1 + v25);
          v27 = (uint64_t *)((char *)a2 + v25);
          v28 = *v27;
          v29 = v27[1];
          sub_1A54E42B4(*v27, v29);
          *v26 = v28;
          v26[1] = v29;
          goto LABEL_23;
        case 0xAu:
        case 0xCu:
          v13 = *a2;
          sub_1A54E42F8(*a2);
          *a1 = v13;
          goto LABEL_23;
        case 0xBu:
        case 0xDu:
          v14 = *a2;
          sub_1A54E42F8(*a2);
          *a1 = v14;
          a1[1] = a2[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 0xEu:
          v15 = *a2;
          v16 = *((_DWORD *)a2 + 2);
          v17 = *((_BYTE *)a2 + 12);
          sub_1A54E4334(*a2, v16, v17);
          *a1 = v15;
          *((_DWORD *)a1 + 2) = v16;
          *((_BYTE *)a1 + 12) = v17;
          a1[2] = a2[2];
          v18 = a2[3];
          *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
          a1[3] = v18;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 0xFu:
          v19 = *a2;
          v20 = *((_DWORD *)a2 + 2);
          v21 = *((_BYTE *)a2 + 12);
          sub_1A54E4334(*a2, v20, v21);
          *a1 = v19;
          *((_DWORD *)a1 + 2) = v20;
          *((_BYTE *)a1 + 12) = v21;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          *((_BYTE *)a1 + 17) = *((_BYTE *)a2 + 17);
          a1[3] = a2[3];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 0x10u:
        case 0x11u:
          v22 = *a2;
          v23 = *((_DWORD *)a2 + 2);
          v24 = *((_BYTE *)a2 + 12);
          sub_1A54E4334(*a2, v23, v24);
          *a1 = v22;
          *((_DWORD *)a1 + 2) = v23;
          *((_BYTE *)a1 + 12) = v24;
          a1[2] = a2[2];
          *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_23;
        case 0x12u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_23;
        case 0x13u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          a1[4] = a2[4];
          a1[5] = a2[5];
          a1[6] = a2[6];
          a1[7] = a2[7];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_23:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
          break;
      }
      v30 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8);
      *(_DWORD *)((char *)a1 + *(int *)(v30 + 48)) = *(_DWORD *)((char *)a2 + *(int *)(v30 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1A55A724C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for ClientCommand(0);
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      a1[2] = a2[2];
      v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796820);
      v8 = *(int *)(v7 + 64);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1A594A0EC();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(_OWORD *)((char *)a1 + *(int *)(v7 + 80)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 80));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8);
    *(_DWORD *)((char *)a1 + *(int *)(v14 + 48)) = *(_DWORD *)((char *)a2 + *(int *)(v14 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1A55A73E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for ClientCommand(0);
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        a1[2] = a2[2];
        v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796820);
        v8 = *(int *)(v7 + 64);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1A594A0EC();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        *(_OWORD *)((char *)a1 + *(int *)(v7 + 80)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 80));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8);
      *(_DWORD *)((char *)a1 + *(int *)(v14 + 48)) = *(_DWORD *)((char *)a2 + *(int *)(v14 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A55A7594()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = type metadata accessor for ClientCommand(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = &unk_1A59A87D0;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A55A7618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v31;

  v4 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - v8;
  v10 = type metadata accessor for TaskHistory.Running(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName_0(qword_1EE7A8B50);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v18[*(int *)(v19 + 48)];
  sub_1A55034B8(a1, (uint64_t)v18, type metadata accessor for TaskHistory.Running);
  sub_1A55034B8(a2, v20, type metadata accessor for TaskHistory.Running);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1A55034B8((uint64_t)v18, (uint64_t)v15, type metadata accessor for TaskHistory.Running);
    v24 = *((_DWORD *)v15 + 2);
    v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
    v26 = (uint64_t)&v15[v25];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v27 = *(_QWORD *)v15;
      v28 = *(_QWORD *)v20;
      v29 = *(_DWORD *)(v20 + 8);
      sub_1A54E3394(v26, (uint64_t)v9, type metadata accessor for ClientCommand);
      sub_1A54E3394(v20 + v25, (uint64_t)v6, type metadata accessor for ClientCommand);
      if (static CommandID.__derived_struct_equals(_:_:)(v27, v28) && v24 == v29)
      {
        v23 = static ClientCommand.__derived_enum_equals(_:_:)(v9, v6);
        sub_1A55034FC((uint64_t)v6, type metadata accessor for ClientCommand);
        sub_1A55034FC((uint64_t)v9, type metadata accessor for ClientCommand);
        goto LABEL_13;
      }
      sub_1A55034FC((uint64_t)v6, type metadata accessor for ClientCommand);
      sub_1A55034FC((uint64_t)v9, type metadata accessor for ClientCommand);
      goto LABEL_16;
    }
    sub_1A55034FC((uint64_t)&v15[v25], type metadata accessor for ClientCommand);
LABEL_9:
    sub_1A5510284((uint64_t)v18, qword_1EE7A8B50);
LABEL_17:
    v23 = 0;
    return v23 & 1;
  }
  sub_1A55034B8((uint64_t)v18, (uint64_t)v12, type metadata accessor for TaskHistory.Running);
  v21 = *((_DWORD *)v12 + 1);
  v22 = *((_QWORD *)v12 + 1);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_release();
    goto LABEL_9;
  }
  if (*(_DWORD *)v12 != *(_DWORD *)v20 || v21 != *(_DWORD *)(v20 + 4))
  {
    swift_release();
    swift_release();
LABEL_16:
    sub_1A55034FC((uint64_t)v18, type metadata accessor for TaskHistory.Running);
    goto LABEL_17;
  }
  v23 = static Action.__derived_enum_equals(_:_:)(v22, *(_QWORD *)(v20 + 8));
  swift_release();
  swift_release();
LABEL_13:
  sub_1A55034FC((uint64_t)v18, type metadata accessor for TaskHistory.Running);
  return v23 & 1;
}

uint64_t sub_1A55A7954(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  char v22;
  BOOL v23;
  uint64_t v24;
  int v25;
  int v26;
  char v27;
  uint64_t v28;
  uint64_t v30;

  v4 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskHistory.Previous(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8738);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v15[*(int *)(v16 + 48)];
  sub_1A55034B8(a1, (uint64_t)v15, type metadata accessor for TaskHistory.Previous);
  sub_1A55034B8(a2, v17, type metadata accessor for TaskHistory.Previous);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1A55034B8((uint64_t)v15, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
    v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48);
    v25 = *(_DWORD *)&v12[v24];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v26 = *(_DWORD *)(v17 + v24);
      sub_1A54E3394(v17, (uint64_t)v6, type metadata accessor for ClientCommand);
      v27 = static ClientCommand.__derived_enum_equals(_:_:)(v12, v6);
      sub_1A55034FC((uint64_t)v6, type metadata accessor for ClientCommand);
      sub_1A55034FC((uint64_t)v12, type metadata accessor for ClientCommand);
      if ((v27 & 1) != 0)
      {
        v23 = v25 == v26;
        goto LABEL_11;
      }
      goto LABEL_15;
    }
    sub_1A55034FC((uint64_t)v12, type metadata accessor for ClientCommand);
LABEL_8:
    sub_1A5510284((uint64_t)v15, &qword_1EE7A8738);
    return 0;
  }
  sub_1A55034B8((uint64_t)v15, (uint64_t)v9, type metadata accessor for TaskHistory.Previous);
  v18 = *(_QWORD *)v9;
  v19 = *((_DWORD *)v9 + 2);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_release();
    goto LABEL_8;
  }
  v20 = *(_QWORD *)v17;
  v21 = *(_DWORD *)(v17 + 8);
  v22 = static Action.__derived_enum_equals(_:_:)(v18, v20);
  swift_release();
  swift_release();
  if ((v22 & 1) == 0)
  {
LABEL_15:
    sub_1A55034FC((uint64_t)v15, type metadata accessor for TaskHistory.Previous);
    return 0;
  }
  v23 = v19 == v21;
LABEL_11:
  v28 = v23;
  sub_1A55034FC((uint64_t)v15, type metadata accessor for TaskHistory.Previous);
  return v28;
}

uint64_t sub_1A55A7BF8@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

void sub_1A55A7D88(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Command();
}

void sub_1A55A7E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  _DWORD *v20;

  v18 = MEMORY[0x1E0C80A78](a1);
  v20 = (_DWORD *)((char *)&a9 - v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v14 + 16))(v13, v11, v9, v18);
  *v20 = v10;
  *(_QWORD *)(v17 - 112) = v9;
  *(_QWORD *)(v17 - 104) = v15;
  *(_QWORD *)(v17 - 96) = v16;
  *(_QWORD *)(v17 - 88) = v12;
  type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Command();
}

uint64_t sub_1A55A7E58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3 + *(int *)(a1 + 52), v2, v1);
  sub_1A594BAF0();
  return sub_1A594BA84();
}

void sub_1A55A7EAC(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Action();
}

void sub_1A55A7F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  _DWORD *v20;

  v18 = MEMORY[0x1E0C80A78](a1);
  v20 = (_DWORD *)((char *)&a9 - v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v14 + 16))(v13, v11, v9, v18);
  *v20 = v10;
  *(_QWORD *)(v17 - 112) = v15;
  *(_QWORD *)(v17 - 104) = v9;
  *(_QWORD *)(v17 - 96) = v16;
  *(_QWORD *)(v17 - 88) = v12;
  type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Action();
}

uint64_t sub_1A55A7F7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3 + *(int *)(a1 + 52), v2, v1);
  sub_1A594BAF0();
  return sub_1A594BA84();
}

void sub_1A55A7FD4()
{
  type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Command();
}

uint64_t sub_1A55A8024(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v9 = sub_1A594C354();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - v11;
  *(_QWORD *)(v7 - 112) = v5;
  *(_QWORD *)(v7 - 160) = v1;
  *(_QWORD *)(v7 - 152) = v4;
  *(_QWORD *)(v7 - 144) = v3;
  *(_QWORD *)(v7 - 136) = v2;
  *(_DWORD *)(v7 - 128) = v6;
  v13 = sub_1A594BAF0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v13);
  sub_1A594B7B4();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a1 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, a1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v15 = *(_QWORD *)(v1 - 8);
    v16 = 1;
    v17 = *(_QWORD *)(v7 - 184);
  }
  else
  {
    v15 = *(_QWORD *)(v1 - 8);
    v18 = *(_QWORD *)(v7 - 184);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v18, &v12[*(int *)(a1 + 52)], v1);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, a1);
    v16 = 0;
    v17 = v18;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v17, v16, 1, v1);
}

void sub_1A55A816C()
{
  type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Action();
}

uint64_t sub_1A55A81BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v9 = sub_1A594C354();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - v11;
  *(_QWORD *)(v7 - 112) = v5;
  *(_QWORD *)(v7 - 160) = v4;
  *(_QWORD *)(v7 - 152) = v1;
  *(_QWORD *)(v7 - 144) = v3;
  *(_QWORD *)(v7 - 136) = v2;
  *(_DWORD *)(v7 - 128) = v6;
  v13 = sub_1A594BAF0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v13);
  sub_1A594B7B4();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a1 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, a1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v15 = *(_QWORD *)(v1 - 8);
    v16 = 1;
    v17 = *(_QWORD *)(v7 - 184);
  }
  else
  {
    v15 = *(_QWORD *)(v1 - 8);
    v18 = *(_QWORD *)(v7 - 184);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v18, &v12[*(int *)(a1 + 52)], v1);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, a1);
    v16 = 0;
    v17 = v18;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v17, v16, 1, v1);
}

uint64_t sub_1A55A8304(_DWORD *a1, _DWORD *a2)
{
  if (*a1 == *a2)
    type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Command();
  return 0;
}

uint64_t sub_1A55A8384(_DWORD *a1, _DWORD *a2)
{
  if (*a1 == *a2)
    type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Action();
  return 0;
}

uint64_t sub_1A55A8404(_DWORD *a1, _DWORD *a2)
{
  return sub_1A55A8304(a1, a2);
}

uint64_t sub_1A55A8414(_DWORD *a1, _DWORD *a2)
{
  return sub_1A55A8384(a1, a2);
}

void sub_1A55A8424()
{
  type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Command();
}

uint64_t sub_1A55A8478(uint64_t a1)
{
  MEMORY[0x1A85B1874](&unk_1A59A899C, a1);
  if ((sub_1A594BAFC() & 1) != 0)
    type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Action();
  return 0;
}

uint64_t sub_1A55A850C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((sub_1A55379C8(a1, a5) & 1) != 0 && (sub_1A5537B04(a2, a6) & 1) != 0)
    sub_1A55A8424();
  return 0;
}

void sub_1A55A85C0()
{
  sub_1A55A8424();
}

uint64_t sub_1A55A85E0(uint64_t *a1, uint64_t *a2)
{
  return sub_1A55A850C(*a1, a1[1], a1[2], a1[3], *a2, a2[1]) & 1;
}

uint64_t sub_1A55A862C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[10];
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _BYTE v32[8];
  _BYTE v33[24];

  v21 = a5;
  v22 = a6;
  v23 = a7;
  v24 = a8;
  v25 = a1;
  v26 = a2;
  v27 = a3;
  v28 = a4;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v16 = sub_1A55A2CB4((void (*)(_QWORD *__return_ptr, uint64_t))sub_1A55A905C, (uint64_t)v20, a1, (uint64_t)v33);
  swift_bridgeObjectRelease();
  v19[2] = a5;
  v19[3] = a6;
  v19[4] = a7;
  v19[5] = a8;
  v19[6] = a1;
  v19[7] = a2;
  v19[8] = a3;
  v19[9] = a4;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v17 = sub_1A55A2CD0((void (*)(_QWORD *__return_ptr, uint64_t))sub_1A55A9078, (uint64_t)v19, a2, (uint64_t)v32);
  swift_bridgeObjectRelease();
  v30 = 0;
  v31 = 0xE000000000000000;
  sub_1A594C720();
  swift_bridgeObjectRelease();
  v30 = 0x20676E696E6E7572;
  v31 = 0xE900000000000028;
  v29 = *(_QWORD *)(a1 + 16);
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  v29 = v16;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
  sub_1A54F70C0();
  sub_1A594B268();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  v29 = *(_QWORD *)(a2 + 16);
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  v29 = v17;
  sub_1A594B268();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  return v30;
}

void sub_1A55A8898(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X7>, uint64_t a5@<X8>, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = a4;
  v13[0] = a2;
  v13[1] = a3;
  v18 = a5;
  v16 = a6;
  v7 = sub_1A594C354();
  v14 = *(_QWORD *)(v7 - 8);
  v15 = v7;
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1A594C354();
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for TaskHistory.Running(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(a1, (uint64_t)v11, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    sub_1A55A816C();
  }
  v14 = *(_QWORD *)v11;
  LODWORD(v15) = *((_DWORD *)v11 + 2);
  sub_1A55A7FD4();
}

void sub_1A55A8B30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  MEMORY[0x1E0C80A78](a1);
  sub_1A55A7BF8((void (*)(char *, char *))sub_1A55A90E0, (uint64_t)&v9, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEA968], v6, v5 - 96);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  v7 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
  *(_QWORD *)(v5 - 96) = 0;
  *(_QWORD *)(v5 - 88) = 0xE000000000000000;
  v8 = CommandID.tag.getter(*(_QWORD *)(v5 - 144));
  *(_BYTE *)(v5 - 72) = v8;
  *(_DWORD *)(v5 - 68) = HIDWORD(v8);
  sub_1A594C924();
  sub_1A594B5F8();
  *(_DWORD *)(v5 - 72) = *(_DWORD *)(v5 - 136);
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A55A90F4(v7);
  JUMPOUT(0x1A55A8C84);
}

void sub_1A55A8CB0(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X7>, uint64_t a5@<X8>, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  _QWORD v12[8];

  v12[5] = a4;
  v12[0] = a2;
  v12[1] = a3;
  v12[7] = a5;
  v12[4] = a6;
  v7 = sub_1A594C354();
  v12[3] = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1A594C354();
  v12[2] = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for TaskHistory.Previous(0);
  MEMORY[0x1E0C80A78](v9);
  sub_1A55034B8(a1, (uint64_t)v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    sub_1A55A816C();
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8);
  sub_1A55A7FD4();
}

void sub_1A55A8F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x1E0C80A78](a1);
  sub_1A55A7BF8((void (*)(char *, char *))sub_1A55A90E0, (uint64_t)&v7, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEA968], v6, v5 - 96);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 144) + 8))(v2, v1);
  *(_QWORD *)(v5 - 96) = 9000;
  *(_QWORD *)(v5 - 88) = 0xE200000000000000;
  *(_DWORD *)(v5 - 68) = v4;
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A55A90F4(v3);
  JUMPOUT(0x1A55A9018);
}

uint64_t sub_1A55A9044(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1A55A862C(*v1, v1[1], v1[2], v1[3], a1[2], a1[3], a1[4], a1[5]);
}

uint64_t sub_1A55A905C(uint64_t a1, uint64_t a2)
{
  return sub_1A55A9094(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1A55A8898);
}

uint64_t sub_1A55A9078(uint64_t a1, uint64_t a2)
{
  return sub_1A55A9094(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1A55A8CB0);
}

uint64_t sub_1A55A9094(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  _QWORD *v3;

  return a3(a1, v3[6], v3[7], v3[8], v3[9], v3[2], v3[3], v3[4], v3[5], a2);
}

uint64_t sub_1A55A90CC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A55A915C(a1);
}

uint64_t sub_1A55A90E0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A55A91AC(a1);
}

uint64_t sub_1A55A90F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ClientCommand(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Command()
{
  JUMPOUT(0x1A85B17CCLL);
}

void type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Action()
{
  JUMPOUT(0x1A85B17CCLL);
}

BOOL sub_1A55A9148(_DWORD *a1)
{
  uint64_t v1;

  return *a1 == *(_DWORD *)(v1 + 48);
}

uint64_t sub_1A55A915C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = sub_1A594CCCC();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1A55A91AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = sub_1A594CCCC();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1A55A91FC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A55A9204()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A55A9280(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 | 3uLL) > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 4) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~(v5 | 3)));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 4) & ~v5, ((unint64_t)a2 + v5 + 4) & ~v5);
  }
  return v3;
}

uint64_t sub_1A55A9320(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

_DWORD *sub_1A55A9340(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_1A55A9390(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_1A55A93E0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_1A55A9430(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1A55A9480(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v8 = ((v6 + 4) & ~v6) + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v6 + 4) & ~v6);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return v5 + v12 + 1;
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A55A9540 + 4 * byte_1A59A8890[(v8 - 1)]))();
}

void sub_1A55A95A0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ((v8 + 4) & ~v8) + *(_QWORD *)(v6 + 64);
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      v14 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v15 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, ((v8 + 4) & ~v8) + *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_1A55A976C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A55A97E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 | 3uLL) > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 4) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~(v5 | 3)));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 4) & ~v5, ((unint64_t)a2 + v5 + 4) & ~v5);
  }
  return v3;
}

uint64_t sub_1A55A9888(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_DWORD *sub_1A55A98A8(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_1A55A98F8(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_1A55A9948(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_1A55A9998(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1A55A99E8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v8 = ((v6 + 4) & ~v6) + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v6 + 4) & ~v6);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return v5 + v12 + 1;
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A55A9AA8 + 4 * byte_1A59A889E[(v8 - 1)]))();
}

void sub_1A55A9B08(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ((v8 + 4) & ~v8) + *(_QWORD *)(v6 + 64);
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      v14 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v15 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, ((v8 + 4) & ~v8) + *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_1A55A9CD4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1A55A9D0C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *sub_1A55A9D60(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1A55A9DEC(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for TaskHistoryWithCustomIDs()
{
  JUMPOUT(0x1A85B17CCLL);
}

void type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap()
{
  JUMPOUT(0x1A85B17CCLL);
}

BOOL sub_1A55A9E58(_DWORD *a1)
{
  return sub_1A55A9148(a1);
}

uint64_t getEnumTagSinglePayload for TaskScheduling.Item(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TaskScheduling.Item(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TaskScheduling.Item()
{
  return &type metadata for TaskScheduling.Item;
}

ValueMetadata *type metadata accessor for TaskScheduling()
{
  return &type metadata for TaskScheduling;
}

uint64_t getEnumTagSinglePayload for Activity.MailboxStatus.Info.FetchProgress(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Activity.MailboxStatus.Info.FetchProgress(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TaskScheduling.IndexAndWeight()
{
  return &type metadata for TaskScheduling.IndexAndWeight;
}

uint64_t sub_1A55A9F34()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CEB8();
  return sub_1A594CED0();
}

uint64_t sub_1A55A9F90()
{
  sub_1A594CE88();
  return sub_1A594CEB8();
}

uint64_t sub_1A55A9FCC()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CEB8();
  return sub_1A594CED0();
}

BOOL sub_1A55AA024(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

unint64_t sub_1A55AA054()
{
  unint64_t result;

  result = qword_1EE7A8BD8;
  if (!qword_1EE7A8BD8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8A6C, &type metadata for TaskScheduling.IndexAndWeight);
    atomic_store(result, (unint64_t *)&qword_1EE7A8BD8);
  }
  return result;
}

uint64_t sub_1A55AA098@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, __int16 a5@<W4>, uint64_t a6@<X8>)
{
  int v12;
  __int128 v13;
  uint64_t result;

  *(_QWORD *)a6 = sub_1A5552638((uint64_t)&unk_1E4EF2420);
  *(_BYTE *)(a6 + 8) = 0;
  *(_QWORD *)(a6 + 128) = 0;
  *(_BYTE *)(a6 + 136) = 1;
  v12 = *(_DWORD *)(a1 + 32);
  v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(a6 + 32) = v13;
  *(_DWORD *)(a6 + 48) = v12;
  *(_QWORD *)(a6 + 56) = &type metadata for CountUnreadMessages;
  sub_1A550F734();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A594C6B4();
  *(_DWORD *)(a6 + 104) = a2;
  *(_QWORD *)(a6 + 112) = a3;
  *(_BYTE *)(a6 + 120) = a4 & 1;
  *(_BYTE *)(a6 + 121) = a5 & 1;
  *(_BYTE *)(a6 + 122) = HIBYTE(a5) & 1;
  return result;
}

uint64_t sub_1A55AA17C()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6B8A0);
  qword_1EE7F96A0 = result;
  return result;
}

uint64_t sub_1A55AA1A0()
{
  uint64_t v0;
  uint64_t v2;

  if (*(_DWORD *)(v0 + 104) < 2u
    || *(_BYTE *)(v0 + 122) == 1 && ((*(_BYTE *)(v0 + 120) & 1) != 0 || *(uint64_t *)(v0 + 112) > 2843))
  {
    return 0;
  }
  sub_1A54E3414();
  static MessageIdentifier.... infix(_:_:)();
  return v2;
}

uint64_t sub_1A55AA230(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t);
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  char v64;

  v3 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v52 - v7;
  v9 = sub_1A594A764();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v52 - v14;
  v16 = sub_1A55AA1A0();
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  if ((v18 & 1) == 0)
  {
    v19 = v16;
    v17(v15, a1, v9);
    sub_1A55034B8(a1, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A550FAE0(v1, (uint64_t)&v61);
    v20 = sub_1A594A74C();
    v21 = sub_1A594C030();
    v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v23 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v60 = v55;
      *(_DWORD *)v23 = 68159747;
      LODWORD(v58) = 2;
      v57 = v10;
      LODWORD(v54) = v22;
      sub_1A594C3CC();
      *(_WORD *)(v23 + 8) = 256;
      v24 = *(int *)(v3 + 20);
      v56 = v9;
      v25 = &v8[v24];
      LOBYTE(v58) = v8[v24];
      sub_1A594C3CC();
      *(_WORD *)(v23 + 11) = 2082;
      v53 = v19;
      v27 = *((_QWORD *)v25 + 1);
      v26 = *((_QWORD *)v25 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v58 = sub_1A55791B0(v27, v26, &v60);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 21) = 1040;
      LODWORD(v58) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v23 + 27) = 512;
      LOWORD(v58) = *((_WORD *)v25 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v23 + 31) = 2160;
      v58 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v23 + 41) = 2085;
      v28 = *((_DWORD *)v25 + 10);
      v58 = *((_QWORD *)v25 + 4);
      v59 = v28;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v29 = sub_1A594B4A8();
      v58 = sub_1A55791B0(v29, v30, &v60);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v23 + 51) = 2082;
      v58 = v53;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
      MessageIdentifierRange.debugDescription.getter();
      v58 = sub_1A55791B0(v31, v32, &v60);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 61) = 2048;
      if (v64)
        v33 = 0;
      else
        v33 = v63;
      sub_1A550FB68((uint64_t)&v61);
      v58 = v33;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v20, (os_log_type_t)v54, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task querying in UIDs %{public}s. Server unread count %ld", (uint8_t *)v23, 0x47u);
      v34 = v55;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v34, -1, -1);
      MEMORY[0x1A85B1964](v23, -1, -1);

      v35 = *(uint64_t (**)(char *, uint64_t))(v57 + 8);
      v36 = v15;
      goto LABEL_9;
    }
    sub_1A550FB68((uint64_t)&v61);
    sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

    v35 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v36 = v15;
LABEL_12:
    v50 = v9;
    return v35(v36, v50);
  }
  v17(v12, a1, v9);
  sub_1A55034B8(a1, (uint64_t)v5, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v37 = sub_1A594A74C();
  v38 = sub_1A594C030();
  v39 = v38;
  if (!os_log_type_enabled(v37, v38))
  {
    sub_1A55034FC((uint64_t)v5, type metadata accessor for MailboxTaskLogger);

    v35 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v36 = v12;
    goto LABEL_12;
  }
  v40 = swift_slowAlloc();
  LODWORD(v55) = v39;
  v41 = v40;
  v54 = swift_slowAlloc();
  v58 = v54;
  *(_DWORD *)v41 = 68159235;
  LODWORD(v61) = 2;
  v57 = v10;
  sub_1A594C3CC();
  *(_WORD *)(v41 + 8) = 256;
  v42 = *(int *)(v3 + 20);
  v56 = v9;
  v43 = &v5[v42];
  LOBYTE(v61) = v5[v42];
  sub_1A594C3CC();
  *(_WORD *)(v41 + 11) = 2082;
  v45 = *((_QWORD *)v43 + 1);
  v44 = *((_QWORD *)v43 + 2);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v61 = sub_1A55791B0(v45, v44, &v58);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  *(_WORD *)(v41 + 21) = 1040;
  LODWORD(v61) = 2;
  sub_1A594C3CC();
  *(_WORD *)(v41 + 27) = 512;
  LOWORD(v61) = *((_WORD *)v43 + 12);
  sub_1A594C3CC();
  *(_WORD *)(v41 + 31) = 2160;
  v61 = 0x786F626C69616DLL;
  sub_1A594C3CC();
  *(_WORD *)(v41 + 41) = 2085;
  v46 = *((_DWORD *)v43 + 10);
  v61 = *((_QWORD *)v43 + 4);
  v62 = v46;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v47 = sub_1A594B4A8();
  v61 = sub_1A55791B0(v47, v48, &v58);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  sub_1A55034FC((uint64_t)v5, type metadata accessor for MailboxTaskLogger);
  _os_log_impl(&dword_1A4F90000, v37, (os_log_type_t)v55, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Not querying server.", (uint8_t *)v41, 0x33u);
  v49 = v54;
  swift_arrayDestroy();
  MEMORY[0x1A85B1964](v49, -1, -1);
  MEMORY[0x1A85B1964](v41, -1, -1);

  v35 = *(uint64_t (**)(char *, uint64_t))(v57 + 8);
  v36 = v12;
LABEL_9:
  v50 = v56;
  return v35(v36, v50);
}

uint64_t sub_1A55AA98C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  int v48;
  uint64_t v49;

  v4 = v3;
  v8 = type metadata accessor for TaskHistory.Previous(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v37 - v13;
  v15 = *(_DWORD *)(v3 + 104);
  if (v15 < 2 || *(_BYTE *)(v3 + 122) == 1 && ((*(_BYTE *)(v3 + 120) & 1) != 0 || *(uint64_t *)(v3 + 112) > 2843))
  {
LABEL_16:
    v26 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797868);
    return (*(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a3, 1, 1, v26);
  }
  else
  {
    v45 = v12;
    v47 = v15 - 1;
    v48 = 1;
    v41 = sub_1A54E3414();
    static MessageIdentifier.... infix(_:_:)();
    v16 = v49;
    v17 = sub_1A562AF50(a2);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v38 = v3;
      v39 = v17;
      v40 = a3;
      v19 = 0;
      v43 = v17 + 32;
      v46 = *(_QWORD *)(a1 + 16);
      v44 = a1;
      v42 = v18;
      do
      {
        if (v46)
        {
          v20 = *(_DWORD *)(v43 + 4 * v19);
          v21 = v45;
          v22 = a1 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v23 = *(_QWORD *)(v21 + 72);
          v24 = v46;
          while (1)
          {
            sub_1A55034B8(v22, (uint64_t)v14, type metadata accessor for TaskHistory.Previous);
            sub_1A55034B8((uint64_t)v14, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
            }
            else
            {
              v25 = *(_DWORD *)&v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
              sub_1A55034FC((uint64_t)v10, type metadata accessor for ClientCommand);
              if (v25 == v20)
              {
                sub_1A55034FC((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                a3 = v40;
                goto LABEL_16;
              }
            }
            sub_1A55034FC((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
            v22 += v23;
            if (!--v24)
            {
              a1 = v44;
              swift_bridgeObjectRelease();
              v18 = v42;
              break;
            }
          }
        }
        ++v19;
      }
      while (v19 != v18);
      swift_bridgeObjectRelease();
      a3 = v40;
      v4 = v38;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v28 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF80);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1A59ABDA0;
    v30 = swift_allocObject();
    v49 = v16;
    MessageIdentifierSet.init(_:)((uint64_t)&v49, (uint64_t)&type metadata for UID, v41, v31);
    *(_QWORD *)(v30 + 16) = v32;
    *(_DWORD *)(v30 + 24) = v33;
    *(_BYTE *)(v30 + 28) = v34;
    *(_QWORD *)(v29 + 32) = v30 | 0xA000000000000000;
    *(_OWORD *)(v29 + 40) = xmmword_1A59ABDB0;
    *(_QWORD *)(v28 + 16) = v29;
    v35 = *(_BYTE *)(v4 + 122);
    *a3 = v28 | 0xC000000000000000;
    if ((v35 & 1) == 0)
      a3[1] = (unint64_t)&unk_1E4E6B860;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    v36 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797868);
    return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a3, 0, 1, v36);
  }
}

unint64_t sub_1A55AAD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  _BOOL8 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;

  v76 = a1;
  v83 = type metadata accessor for TaskHistory.Running(0);
  v74 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v82 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v72 - v9;
  v11 = type metadata accessor for TaskHistory.Previous(0);
  v81 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v86 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v72 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v72 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v72 - v20;
  v22 = sub_1A55B024C(a4);
  v23 = *(_QWORD *)(v22 + 16);
  v85 = v10;
  v87 = v15;
  if (v23)
  {
    v73 = a3;
    v24 = 0;
    v75 = v22;
    v79 = v22 + 32;
    v25 = a2;
    v84 = *(_QWORD *)(a2 + 16);
    v80 = a2;
    v78 = v23;
    do
    {
      if (v84)
      {
        v26 = *(_DWORD *)(v79 + 4 * v24);
        v27 = v81;
        v28 = v25 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
        swift_bridgeObjectRetain_n();
        v29 = *(_QWORD *)(v27 + 72);
        v30 = v84;
        do
        {
          sub_1A55034B8(v28, (uint64_t)v21, type metadata accessor for TaskHistory.Previous);
          sub_1A55034B8((uint64_t)v21, (uint64_t)v18, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v31 = *((_DWORD *)v18 + 2);
            swift_release();
            if (v31 == v26)
            {
              sub_1A55034FC((uint64_t)v21, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return 0xF000000000000007;
            }
          }
          else
          {
            sub_1A55034FC((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
          }
          sub_1A55034FC((uint64_t)v21, type metadata accessor for TaskHistory.Previous);
          v28 += v29;
          --v30;
        }
        while (v30);
        v25 = v80;
        swift_bridgeObjectRelease_n();
        v10 = v85;
        v15 = v87;
        v23 = v78;
      }
      ++v24;
    }
    while (v24 != v23);
    swift_bridgeObjectRelease();
    v33 = v77;
    a2 = v25;
    a3 = v73;
    v34 = sub_1A55AA1A0();
    if ((v62 & 1) != 0)
    {
LABEL_36:
      v63 = swift_allocObject();
      v64 = *(_QWORD *)(v33 + 24);
      *(_QWORD *)(v63 + 16) = *(_QWORD *)(v33 + 16);
      *(_QWORD *)(v63 + 24) = v64;
      v65 = *(_DWORD *)(v33 + 104) == 1;
      *(_QWORD *)(v63 + 40) = 0;
      *(_QWORD *)(v63 + 48) = 0;
      *(_QWORD *)(v63 + 32) = v65;
      *(_WORD *)(v63 + 56) = 256;
      goto LABEL_39;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v33 = v77;
    v34 = sub_1A55AA1A0();
    if ((v35 & 1) != 0)
      goto LABEL_36;
  }
  v36 = v34;
  v37 = sub_1A562AF50(a3);
  v38 = *(_QWORD *)(v37 + 16);
  if (!v38)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    return 0xF000000000000007;
  }
  v72 = v36;
  v73 = v37;
  v39 = 0;
  v79 = v37 + 32;
  v40 = *(_QWORD *)(a2 + 16);
  v80 = a2;
  v78 = v38;
  v75 = v40;
  while (!v40)
  {
LABEL_18:
    if (++v39 == v38)
      goto LABEL_41;
  }
  v84 = v39;
  v41 = *(_DWORD *)(v79 + 4 * v39);
  v42 = v81;
  v43 = a2 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v44 = *(_QWORD *)(v42 + 72);
  while (1)
  {
    sub_1A55034B8(v43, (uint64_t)v15, type metadata accessor for TaskHistory.Previous);
    v45 = (uint64_t)v15;
    v46 = v86;
    sub_1A55034B8(v45, v86, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    sub_1A55034FC(v46, type metadata accessor for TaskHistory.Previous);
LABEL_22:
    v15 = v87;
    sub_1A55034FC((uint64_t)v87, type metadata accessor for TaskHistory.Previous);
    v43 += v44;
    if (!--v40)
    {
      a2 = v80;
LABEL_17:
      v38 = v78;
      v39 = v84;
      v40 = v75;
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  v47 = *(_DWORD *)(v46 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48));
  sub_1A55034FC(v46, type metadata accessor for ClientCommand);
  if (v47 != v41)
    goto LABEL_22;
  v15 = v87;
  sub_1A55034FC((uint64_t)v87, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v48 = *(_QWORD *)(v76 + 16);
  if (v48)
  {
    v49 = v74;
    v50 = v76 + ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v51 = *(_QWORD *)(v49 + 72);
    do
    {
      sub_1A55034B8(v50, (uint64_t)v10, type metadata accessor for TaskHistory.Running);
      v52 = (uint64_t)v10;
      v53 = v82;
      sub_1A55034B8(v52, v82, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A55034FC(v53, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        v54 = *(_DWORD *)(v53 + 8);
        v55 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
        sub_1A55034FC(v53 + *(int *)(v55 + 64), type metadata accessor for ClientCommand);
        if (v54 == v41)
        {
          v10 = v85;
          sub_1A55034FC((uint64_t)v85, type metadata accessor for TaskHistory.Running);
          a2 = v80;
          goto LABEL_17;
        }
      }
      v10 = v85;
      sub_1A55034FC((uint64_t)v85, type metadata accessor for TaskHistory.Running);
      v50 += v51;
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v56 = v77;
  v57 = *(_BYTE *)(v77 + 136);
  if ((v57 & 1) != 0)
  {
    v58 = 0;
    v59 = 0;
    v60 = 0;
    v61 = 0;
  }
  else
  {
    Action.UnreadCountOutsideWindowOfInterest.Count.init(count:range:serverUnreadCount:)();
    v58 = v66;
    v59 = v67;
    v60 = v68;
    v61 = v69 & 1;
  }
  v63 = swift_allocObject();
  v70 = *(_QWORD *)(v56 + 24);
  *(_QWORD *)(v63 + 16) = *(_QWORD *)(v56 + 16);
  *(_QWORD *)(v63 + 24) = v70;
  *(_QWORD *)(v63 + 32) = v58;
  *(_QWORD *)(v63 + 40) = v59;
  *(_QWORD *)(v63 + 48) = v60;
  *(_BYTE *)(v63 + 56) = v61;
  *(_BYTE *)(v63 + 57) = v57;
LABEL_39:
  v32 = v63 | 0x3000000000000002;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v32;
}

uint64_t sub_1A55AB2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t);
  char *v47;
  NSObject *v48;
  os_log_type_t v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  int v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  os_log_type_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  int v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  _BYTE v104[112];
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;

  v99 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v99);
  v97 = (uint64_t)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v96 = (uint64_t)&v93 - v6;
  MEMORY[0x1E0C80A78](v7);
  v95 = (uint64_t)&v93 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v93 - v10;
  v12 = sub_1A594A764();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v93 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v93 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v93 - v23;
  v98 = *(_QWORD *)(v2 + 128);
  v25 = *(_BYTE *)(v2 + 136);
  v26 = sub_1A55AA1A0();
  v100 = v13;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  if ((v25 & 1) == 0)
  {
    if ((v27 & 1) == 0)
    {
      v97 = v26;
      v28(v24, a2, v12);
      sub_1A55034B8(a2, (uint64_t)v11, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A550FAE0(v2, (uint64_t)v104);
      v48 = sub_1A594A74C();
      v49 = sub_1A594C030();
      v50 = v49;
      if (os_log_type_enabled(v48, v49))
      {
        v51 = swift_slowAlloc();
        v95 = swift_slowAlloc();
        v103 = v95;
        *(_DWORD *)v51 = 68160003;
        LODWORD(v101) = 2;
        LODWORD(v94) = v50;
        sub_1A594C3CC();
        *(_WORD *)(v51 + 8) = 256;
        v52 = &v11[*(int *)(v99 + 20)];
        LOBYTE(v101) = *v52;
        sub_1A594C3CC();
        *(_WORD *)(v51 + 11) = 2082;
        v96 = v12;
        v53 = v24;
        v54 = *((_QWORD *)v52 + 1);
        v55 = *((_QWORD *)v52 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v101 = sub_1A55791B0(v54, v55, &v103);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v51 + 21) = 1040;
        LODWORD(v101) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v51 + 27) = 512;
        LOWORD(v101) = *((_WORD *)v52 + 12);
        sub_1A594C3CC();
        *(_WORD *)(v51 + 31) = 2160;
        v101 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v51 + 41) = 2085;
        v56 = *((_DWORD *)v52 + 10);
        v101 = *((_QWORD *)v52 + 4);
        v102 = v56;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v57 = sub_1A594B4A8();
        v101 = sub_1A55791B0(v57, v58, &v103);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v51 + 51) = 2048;
        v101 = v98;
        sub_1A594C3CC();
        *(_WORD *)(v51 + 61) = 2082;
        v101 = v97;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
        MessageIdentifierRange.debugDescription.getter();
        v101 = sub_1A55791B0(v59, v60, &v103);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v51 + 71) = 2048;
        if (v106)
          v61 = 0;
        else
          v61 = v105;
        sub_1A550FB68((uint64_t)v104);
        v101 = v61;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v48, (os_log_type_t)v94, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld unread messages in UIDs %{public}s. Server unread count %ld.", (uint8_t *)v51, 0x51u);
        v62 = v95;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v62, -1, -1);
        MEMORY[0x1A85B1964](v51, -1, -1);

        v46 = *(uint64_t (**)(char *, uint64_t))(v100 + 8);
        v47 = v53;
        goto LABEL_25;
      }
      sub_1A550FB68((uint64_t)v104);
      sub_1A55034FC((uint64_t)v11, type metadata accessor for MailboxTaskLogger);

      v46 = *(uint64_t (**)(char *, uint64_t))(v100 + 8);
      v47 = v24;
LABEL_31:
      v90 = v12;
      return v46(v47, v90);
    }
    v28(v21, a2, v12);
    v78 = v95;
    sub_1A55034B8(a2, v95, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A550FAE0(v2, (uint64_t)v104);
    v64 = sub_1A594A74C();
    v79 = sub_1A594C030();
    v80 = v79;
    if (os_log_type_enabled(v64, v79))
    {
      v81 = swift_slowAlloc();
      LODWORD(v97) = v80;
      v68 = v81;
      v94 = swift_slowAlloc();
      v103 = v94;
      *(_DWORD *)v68 = 68159747;
      LODWORD(v101) = 2;
      v96 = v12;
      sub_1A594C3CC();
      *(_WORD *)(v68 + 8) = 256;
      v82 = v78 + *(int *)(v99 + 20);
      LOBYTE(v101) = *(_BYTE *)v82;
      sub_1A594C3CC();
      *(_WORD *)(v68 + 11) = 2082;
      v83 = *(_QWORD *)(v82 + 8);
      v84 = *(_QWORD *)(v82 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v101 = sub_1A55791B0(v83, v84, &v103);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 21) = 1040;
      LODWORD(v101) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v68 + 27) = 512;
      LOWORD(v101) = *(_WORD *)(v82 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v68 + 31) = 2160;
      v101 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v68 + 41) = 2085;
      v85 = *(_DWORD *)(v82 + 40);
      v101 = *(_QWORD *)(v82 + 32);
      v102 = v85;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v86 = sub_1A594B4A8();
      v101 = sub_1A55791B0(v86, v87, &v103);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v78, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v68 + 51) = 2048;
      v101 = v98;
      sub_1A594C3CC();
      *(_WORD *)(v68 + 61) = 2048;
      if (v106)
        v88 = 0;
      else
        v88 = v105;
      sub_1A550FB68((uint64_t)v104);
      v101 = v88;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v64, (os_log_type_t)v97, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld unread messages. Server unread count %ld.", (uint8_t *)v68, 0x47u);
      v77 = &v107;
      goto LABEL_24;
    }
    sub_1A550FB68((uint64_t)v104);
    v92 = v78;
LABEL_30:
    sub_1A55034FC(v92, type metadata accessor for MailboxTaskLogger);

    v46 = *(uint64_t (**)(char *, uint64_t))(v100 + 8);
    v47 = v21;
    goto LABEL_31;
  }
  if ((v27 & 1) == 0)
  {
    v97 = v26;
    v29 = v18;
    v28(v18, a2, v12);
    v30 = v96;
    sub_1A55034B8(a2, v96, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A550FAE0(v2, (uint64_t)v104);
    v31 = sub_1A594A74C();
    v32 = sub_1A594C030();
    v33 = v32;
    if (!os_log_type_enabled(v31, v32))
    {
      sub_1A550FB68((uint64_t)v104);
      sub_1A55034FC(v30, type metadata accessor for MailboxTaskLogger);

      return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v29, v12);
    }
    v34 = swift_slowAlloc();
    v98 = (uint64_t)v29;
    v35 = v34;
    v95 = swift_slowAlloc();
    v103 = v95;
    *(_DWORD *)v35 = 68159747;
    LODWORD(v101) = 2;
    LODWORD(v94) = v33;
    sub_1A594C3CC();
    *(_WORD *)(v35 + 8) = 256;
    v36 = v30 + *(int *)(v99 + 20);
    LOBYTE(v101) = *(_BYTE *)v36;
    sub_1A594C3CC();
    *(_WORD *)(v35 + 11) = 2082;
    v37 = *(_QWORD *)(v36 + 8);
    v38 = *(_QWORD *)(v36 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v101 = sub_1A55791B0(v37, v38, &v103);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 21) = 1040;
    LODWORD(v101) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v35 + 27) = 512;
    LOWORD(v101) = *(_WORD *)(v36 + 24);
    sub_1A594C3CC();
    *(_WORD *)(v35 + 31) = 2160;
    v101 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v35 + 41) = 2085;
    v39 = *(_DWORD *)(v36 + 40);
    v101 = *(_QWORD *)(v36 + 32);
    v102 = v39;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v40 = sub_1A594B4A8();
    v101 = sub_1A55791B0(v40, v41, &v103);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v30, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v35 + 51) = 2082;
    v101 = v97;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
    MessageIdentifierRange.debugDescription.getter();
    v101 = sub_1A55791B0(v42, v43, &v103);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 61) = 2048;
    if (v106)
      v44 = 0;
    else
      v44 = v105;
    sub_1A550FB68((uint64_t)v104);
    v101 = v44;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v31, (os_log_type_t)v94, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Failed to find unread messages (UIDs %{public}s). Server unread count %ld.", (uint8_t *)v35, 0x47u);
    v45 = v95;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v45, -1, -1);
    MEMORY[0x1A85B1964](v35, -1, -1);

    v46 = *(uint64_t (**)(char *, uint64_t))(v100 + 8);
    v47 = (char *)v98;
    goto LABEL_31;
  }
  v21 = v15;
  v28(v15, a2, v12);
  v63 = v97;
  sub_1A55034B8(a2, v97, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A550FAE0(v2, (uint64_t)v104);
  v64 = sub_1A594A74C();
  v65 = sub_1A594C030();
  v66 = v65;
  if (!os_log_type_enabled(v64, v65))
  {
    sub_1A550FB68((uint64_t)v104);
    v92 = v63;
    goto LABEL_30;
  }
  v67 = swift_slowAlloc();
  LODWORD(v98) = v66;
  v68 = v67;
  v95 = swift_slowAlloc();
  v103 = v95;
  *(_DWORD *)v68 = 68159491;
  LODWORD(v101) = 2;
  sub_1A594C3CC();
  *(_WORD *)(v68 + 8) = 256;
  v69 = *(int *)(v99 + 20);
  v96 = v12;
  v70 = v63 + v69;
  LOBYTE(v101) = *(_BYTE *)(v63 + v69);
  sub_1A594C3CC();
  *(_WORD *)(v68 + 11) = 2082;
  v71 = *(_QWORD *)(v70 + 8);
  v72 = *(_QWORD *)(v70 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v101 = sub_1A55791B0(v71, v72, &v103);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  *(_WORD *)(v68 + 21) = 1040;
  LODWORD(v101) = 2;
  sub_1A594C3CC();
  *(_WORD *)(v68 + 27) = 512;
  LOWORD(v101) = *(_WORD *)(v70 + 24);
  sub_1A594C3CC();
  *(_WORD *)(v68 + 31) = 2160;
  v101 = 0x786F626C69616DLL;
  sub_1A594C3CC();
  *(_WORD *)(v68 + 41) = 2085;
  v73 = *(_DWORD *)(v70 + 40);
  v101 = *(_QWORD *)(v70 + 32);
  v102 = v73;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v74 = sub_1A594B4A8();
  v101 = sub_1A55791B0(v74, v75, &v103);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  sub_1A55034FC(v63, type metadata accessor for MailboxTaskLogger);
  *(_WORD *)(v68 + 51) = 2048;
  if (v106)
    v76 = 0;
  else
    v76 = v105;
  sub_1A550FB68((uint64_t)v104);
  v101 = v76;
  sub_1A594C3CC();
  _os_log_impl(&dword_1A4F90000, v64, (os_log_type_t)v98, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Did not search for unread messages. Server unread count %ld.", (uint8_t *)v68, 0x3Du);
  v77 = &v108;
LABEL_24:
  v89 = *(v77 - 32);
  swift_arrayDestroy();
  MEMORY[0x1A85B1964](v89, -1, -1);
  MEMORY[0x1A85B1964](v68, -1, -1);

  v46 = *(uint64_t (**)(char *, uint64_t))(v100 + 8);
  v47 = v21;
LABEL_25:
  v90 = v96;
  return v46(v47, v90);
}

uint64_t sub_1A55AC238@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A55530FC(v1 + 56, a1);
}

uint64_t sub_1A55AC244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  int v5;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_WORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_DWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A55AC284()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A55AC28C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

unint64_t sub_1A55AC29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  unint64_t result;

  result = sub_1A55AAD28(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_1A55AC2C0(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A55AC7B8(a1, a2, a3, a4);
}

void sub_1A55AC2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  if (a5)
  {
    *(_QWORD *)(v5 + 128) = 0;
    *(_BYTE *)(v5 + 136) = 1;
  }
}

uint64_t sub_1A55AC2E8()
{
  return 0x726E55746E756F43;
}

uint64_t destroy for CountUnreadMessages(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 64);
}

uint64_t initializeWithCopy for CountUnreadMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = a2 + 64;
  v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(a1 + 64, v5, v7);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_WORD *)(a1 + 121) = *(_WORD *)(a2 + 121);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

uint64_t assignWithCopy for CountUnreadMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  v4 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v4;
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  *(_BYTE *)(a1 + 122) = *(_BYTE *)(a2 + 122);
  v5 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v5;
  return a1;
}

__n128 __swift_memcpy137_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for CountUnreadMessages(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  *(_BYTE *)(a1 + 122) = *(_BYTE *)(a2 + 122);
  v5 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for CountUnreadMessages(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 137))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CountUnreadMessages(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 136) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 137) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 137) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CountUnreadMessages()
{
  return &type metadata for CountUnreadMessages;
}

unint64_t sub_1A55AC6C4()
{
  unint64_t result;

  result = qword_1EE797858;
  if (!qword_1EE797858)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8B70, &type metadata for CountUnreadMessages.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE797858);
  }
  return result;
}

unint64_t sub_1A55AC70C()
{
  unint64_t result;

  result = qword_1EE797860;
  if (!qword_1EE797860)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8B48, &type metadata for CountUnreadMessages.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE797860);
  }
  return result;
}

unint64_t sub_1A55AC750(uint64_t a1)
{
  unint64_t result;

  result = sub_1A55AC774();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A55AC774()
{
  unint64_t result;

  result = qword_1EE797870;
  if (!qword_1EE797870)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8B04, &type metadata for CountUnreadMessages);
    atomic_store(result, (unint64_t *)&qword_1EE797870);
  }
  return result;
}

uint64_t sub_1A55AC7B8(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 *v13;
  __int128 v14;
  char v15;
  _BYTE v16[584];
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v5 = v4;
  v9 = sub_1A562AF50(a4);
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
    return swift_bridgeObjectRelease();
  v11 = 0;
  while ((sub_1A55E5990(*(_DWORD *)(v9 + 4 * v11 + 32), a2, a3) & 1) == 0)
  {
    if (v10 == ++v11)
      return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v5 + 122) & 1) != 0)
  {
    sub_1A552316C(a1, v16);
    result = sub_1A5523B90((uint64_t)v16);
    if ((_DWORD)result == 11)
    {
      result = sub_1A5524678((uint64_t)v16);
      *(_QWORD *)(v5 + 128) = *(_QWORD *)(*(_QWORD *)result + 16);
      *(_BYTE *)(v5 + 136) = 0;
    }
  }
  else
  {
    sub_1A552316C(a1, v16);
    result = sub_1A5523B90((uint64_t)v16);
    if ((_DWORD)result == 12)
    {
      v13 = (__int128 *)sub_1A5524678((uint64_t)v16);
      v14 = v13[1];
      v17 = *v13;
      v18 = v14;
      v19 = v13[2];
      result = ExtendedSearchResponse.count.getter();
      *(_QWORD *)(v5 + 128) = result;
      *(_BYTE *)(v5 + 136) = v15 & 1;
    }
  }
  return result;
}

uint64_t sub_1A55AC8FC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55AC920()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55AC944()
{
  uint64_t v0;
  unint64_t v1;

  if (*(unsigned __int8 *)(v0 + 28) != 255)
  {
    v1 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 16), v1, SBYTE4(v1));
  }
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for CountUnreadMessages.CommandID()
{
  return &type metadata for CountUnreadMessages.CommandID;
}

uint64_t _s13IMAP2Behavior19CountUnreadMessagesV9CommandIDOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A55AC9D8 + 4 * byte_1A59A8AE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A55AC9F8 + 4 * byte_1A59A8AE5[v4]))();
}

_BYTE *sub_1A55AC9D8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A55AC9F8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A55ACA00(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A55ACA08(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A55ACA10(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A55ACA18(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CountUnreadMessages.ActionID()
{
  return &type metadata for CountUnreadMessages.ActionID;
}

uint64_t destroy for CreateMailboxes(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CreateMailboxes(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v7 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for CreateMailboxes(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  a1[7] = a2[7];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CreateMailboxes(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateMailboxes(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateMailboxes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateMailboxes()
{
  return &type metadata for CreateMailboxes;
}

BOOL sub_1A55ACC88(uint64_t a1, uint64_t a2)
{
  return sub_1A55AF1B0(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(_QWORD *)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32));
}

BOOL sub_1A55ACCC8(uint64_t *a1, uint64_t *a2)
{
  return a1[1] == a2[1] && sub_1A54FF30C(*a1, *a2);
}

uint64_t sub_1A55ACD08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;

  v66 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v66);
  v65 = (uint64_t)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v62 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v62 - v8;
  v10 = sub_1A594A764();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v62 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v62 - v18;
  v20 = *(_QWORD *)(v1 + 64);
  if (*(_QWORD *)(v20 + 16) == 1 && (v21 = sub_1A5640DC0(*(_QWORD *)(v1 + 64)), v64 = v23, v21))
  {
    LODWORD(v65) = v22;
    swift_bridgeObjectRelease();
    v24 = v10;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v19, a1, v10);
    sub_1A55034B8(a1, (uint64_t)v9, type metadata accessor for Task.Logger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v25 = sub_1A594A74C();
    v26 = sub_1A594C030();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v63 = v11;
      v29 = v28;
      v67 = v28;
      *(_DWORD *)v27 = 68158723;
      LODWORD(v70) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v27 + 8) = 256;
      v30 = &v9[*(int *)(v66 + 20)];
      v31 = *((_QWORD *)v30 + 1);
      v32 = *((_QWORD *)v30 + 2);
      LOBYTE(v70) = *(_QWORD *)v30;
      sub_1A594C3CC();
      *(_WORD *)(v27 + 11) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v66 = v24;
      v70 = sub_1A55791B0(v31, v32, &v67);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v9, type metadata accessor for Task.Logger);
      *(_WORD *)(v27 + 21) = 2160;
      v70 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v27 + 31) = 2085;
      v70 = v64;
      v71 = v65;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v33 = sub_1A594B4A8();
      v70 = sub_1A55791B0(v33, v34, &v67);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v25, v26, "[%.*hhx-%{public}s] Created task for '%{sensitive,mask.mailbox}s'", (uint8_t *)v27, 0x29u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v29, -1, -1);
      v35 = v27;
LABEL_10:
      MEMORY[0x1A85B1964](v35, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v19, v66);
    }
    sub_1A55034FC((uint64_t)v9, type metadata accessor for Task.Logger);

    swift_bridgeObjectRelease_n();
  }
  else
  {
    if (sub_1A5640DC0(v20))
    {
      v38 = v36;
      LODWORD(v65) = v37;
      swift_bridgeObjectRelease();
      v24 = v10;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, a1, v10);
      sub_1A55034B8(a1, (uint64_t)v6, type metadata accessor for Task.Logger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A5553288(v1, (uint64_t)&v70);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v39 = sub_1A594A74C();
      v40 = sub_1A594C030();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = swift_slowAlloc();
        v63 = v11;
        v42 = v41;
        v64 = swift_slowAlloc();
        v69 = v64;
        *(_DWORD *)v42 = 68158979;
        LODWORD(v67) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v42 + 8) = 256;
        v43 = &v6[*(int *)(v66 + 20)];
        v44 = *((_QWORD *)v43 + 1);
        v45 = *((_QWORD *)v43 + 2);
        LOBYTE(v67) = *(_QWORD *)v43;
        sub_1A594C3CC();
        *(_WORD *)(v42 + 11) = 2082;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v66 = v24;
        v67 = sub_1A55791B0(v44, v45, &v69);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v6, type metadata accessor for Task.Logger);
        *(_WORD *)(v42 + 21) = 2048;
        v46 = *(_QWORD *)(v72 + 16);
        sub_1A55532C4((uint64_t)&v70);
        v67 = v46;
        sub_1A594C3CC();
        *(_WORD *)(v42 + 31) = 2160;
        v67 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v42 + 41) = 2085;
        v67 = v38;
        v68 = v65;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v47 = sub_1A594B4A8();
        v67 = sub_1A55791B0(v47, v48, &v69);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v39, v40, "[%.*hhx-%{public}s] Created task for %ld mailboxes, first: '%{sensitive,mask.mailbox}s'.", (uint8_t *)v42, 0x33u);
        v49 = v64;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v49, -1, -1);
        MEMORY[0x1A85B1964](v42, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v16, v66);
      }
      sub_1A55532C4((uint64_t)&v70);
      sub_1A55034FC((uint64_t)v6, type metadata accessor for Task.Logger);

      swift_bridgeObjectRelease_n();
      v60 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
      v61 = v16;
      return v60(v61, v24);
    }
    v19 = v13;
    v24 = v10;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
    v51 = v65;
    sub_1A55034B8(a1, v65, type metadata accessor for Task.Logger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A5553288(v1, (uint64_t)&v70);
    v25 = sub_1A594A74C();
    v52 = sub_1A594C030();
    if (os_log_type_enabled(v25, v52))
    {
      v53 = swift_slowAlloc();
      v54 = swift_slowAlloc();
      v67 = v54;
      *(_DWORD *)v53 = 68158466;
      LODWORD(v69) = 2;
      v63 = v11;
      sub_1A594C3CC();
      *(_WORD *)(v53 + 8) = 256;
      v55 = (uint64_t *)(v51 + *(int *)(v66 + 20));
      v56 = *v55;
      v57 = v55[1];
      v66 = v24;
      v58 = v55[2];
      LOBYTE(v69) = v56;
      sub_1A594C3CC();
      *(_WORD *)(v53 + 11) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v69 = sub_1A55791B0(v57, v58, &v67);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v51, type metadata accessor for Task.Logger);
      *(_WORD *)(v53 + 21) = 2048;
      v59 = *(_QWORD *)(v72 + 16);
      sub_1A55532C4((uint64_t)&v70);
      v69 = v59;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v25, v52, "[%.*hhx-%{public}s] Created task for %ld mailboxes.", (uint8_t *)v53, 0x1Fu);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v54, -1, -1);
      v35 = v53;
      goto LABEL_10;
    }
    sub_1A55532C4((uint64_t)&v70);
    sub_1A55034FC(v51, type metadata accessor for Task.Logger);

  }
  v60 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v61 = v19;
  return v60(v61, v24);
}

uint64_t sub_1A55AD5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v9 = sub_1A55AF3B0(v8, a2, a3);
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8BF8);
    v13 = a4 + *(int *)(v12 + 48);
    *(_QWORD *)a4 = v9;
    *(_DWORD *)(a4 + 8) = v11;
    *(_BYTE *)(a4 + 12) = 0;
    *(_QWORD *)v13 = v9;
    *(_DWORD *)(v13 + 8) = v11;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a4, 0, 1, v12);
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v14 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v15 = sub_1A55AFC08(v14, a1, a2, a3);
    v17 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15)
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8BF8);
      v19 = a4 + *(int *)(v18 + 48);
      *(_QWORD *)a4 = v15;
      *(_DWORD *)(a4 + 8) = v17;
      *(_BYTE *)(a4 + 12) = 1;
      *(_QWORD *)v19 = 0;
      *(_DWORD *)(v19 + 8) = 0;
      *(_QWORD *)(v19 + 16) = v15;
      *(_DWORD *)(v19 + 24) = v17;
      *(_QWORD *)(v19 + 32) = MEMORY[0x1E0DEE9D8];
      type metadata accessor for ClientCommand(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a4, 0, 1, v18);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8BF8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a4, 1, 1, v21);
    }
  }
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void sub_1A55AD80C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, NSObject *a5, int a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  void *v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  os_log_t v53;
  uint64_t v54;
  uint64_t v55;
  os_log_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  int v68;
  uint64_t v69;

  v64 = a1;
  v13 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v65);
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  if ((a2 & 0x100000000) != 0)
  {
    v26 = v66;
    sub_1A564CE34(a7, a3, a4, a5, a6);
    if (v26)

  }
  else
  {
    v60 = v13;
    v62 = v15;
    v63 = v16;
    v19 = (char *)&v55 - v18;
    v20 = v64;
    v21 = a2;
    j___s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0(v64, a2, 0);
    v61 = a3;
    v22 = a3;
    v23 = a4;
    v24 = a6;
    v25 = v66;
    sub_1A564CE34(a7, v22, a4, a5, a6);
    if (v25)

    v66 = 0;
    v27 = v19;
    v28 = v20;
    v29 = (uint64_t)v62;
    v30 = v24;
    v31 = v27;
    (*(void (**)(void))(v63 + 16))();
    sub_1A55034B8(a7, v29, type metadata accessor for Task.Logger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    if (v24)
    {
      v32 = 20302;
      if (v24 != 1)
        v32 = 4473154;
      v64 = v32;
      if (v24 == 1)
        v33 = 0xE200000000000000;
      else
        v33 = 0xE300000000000000;
    }
    else
    {
      v33 = 0xE200000000000000;
      v64 = 19279;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v34 = v61;
    sub_1A55235A0(v61);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55235A0(v34);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    j___s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0(v28, v21, 0);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55235A0(v34);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A559C2E8(v34, v23, (uint64_t)a5, v30);
    v35 = sub_1A594A74C();
    v36 = sub_1A594C030();
    v59 = v23;
    v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      v38 = swift_slowAlloc();
      v58 = v31;
      v56 = v35;
      v39 = v38;
      v57 = swift_slowAlloc();
      v69 = v57;
      *(_DWORD *)v39 = 68159235;
      LODWORD(v67) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 8) = 256;
      v40 = (uint64_t)v62;
      v41 = &v62[*(int *)(v60 + 20)];
      v42 = *(_QWORD *)v41;
      v43 = *((_QWORD *)v41 + 1);
      LODWORD(v60) = v37;
      v44 = *((_QWORD *)v41 + 2);
      LOBYTE(v67) = v42;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 11) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v55 = v21;
      v45 = v28;
      v67 = sub_1A55791B0(v43, v44, &v69);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v40, type metadata accessor for Task.Logger);
      *(_WORD *)(v39 + 21) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v67 = sub_1A55791B0(v64, v33, &v69);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      sub_1A5524084(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5524084(v34);
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 31) = 2080;
      sub_1A55235A0(v34);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      ResponseText.debugDescription.getter(v34, v59, a5);
      v47 = v46;
      v49 = v48;
      sub_1A5524084(v34);
      swift_bridgeObjectRelease();
      v67 = sub_1A55791B0(v47, v49, &v69);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5524084(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5524084(v34);
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 41) = 2160;
      v67 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 51) = 2085;
      v67 = v45;
      v50 = v55;
      v68 = v55;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v51 = sub_1A594B4A8();
      v67 = sub_1A55791B0(v51, v52, &v69);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      j__swift_bridgeObjectRelease(v45, v50, 0);
      j__swift_bridgeObjectRelease(v45, v50, 0);
      v53 = v56;
      _os_log_impl(&dword_1A4F90000, v56, (os_log_type_t)v60, "[%.*hhx-%{public}s] Received '%{public}s %s' for '%{sensitive,mask.mailbox}s'.", (uint8_t *)v39, 0x3Du);
      v54 = v57;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v54, -1, -1);
      MEMORY[0x1A85B1964](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v58, v65);
    }
    else
    {
      sub_1A55034FC((uint64_t)v62, type metadata accessor for Task.Logger);
      swift_bridgeObjectRelease();
      sub_1A5524084(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5524084(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5524084(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5524084(v34);
      swift_bridgeObjectRelease();
      j__swift_bridgeObjectRelease(v28, v21, 0);
      j__swift_bridgeObjectRelease(v28, v21, 0);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v31, v65);
    }
  }
}

uint64_t sub_1A55ADE7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v1 = sub_1A55AFE24(v0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A55B0040);
  v3 = v2;
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v1;
    *(_QWORD *)(v4 + 24) = v3;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v1;
}

uint64_t sub_1A55ADF2C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  _QWORD v75[3];
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  char v98;

  v77 = a2;
  v78 = a8;
  v86 = a5;
  v94 = type metadata accessor for TaskHistory.Running(0);
  v92 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v90 = (uint64_t)v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v75 - v16;
  v18 = type metadata accessor for TaskHistory.Previous(0);
  v85 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v75 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v75 - v25;
  v27 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v98 = 0;
  v76 = a4;
  v79 = a4;
  v80 = a7;
  v28 = sub_1A562A5A0(v27, a4, a7);
  v29 = *(_QWORD *)(v28 + 16);
  if (!v29)
    goto LABEL_52;
  v81 = a3;
  v88 = v20;
  v75[1] = a1;
  v30 = 0;
  v75[0] = a9;
  v75[2] = v28;
  v84 = v28 + 32;
  v95 = *(_QWORD *)(a6 + 16);
  v93 = v18;
  v87 = a6;
  v82 = v29;
LABEL_6:
  if (!v95)
    goto LABEL_5;
  v89 = v30;
  v31 = v85;
  v32 = *(_DWORD *)(v84 + 4 * v30);
  v83 = (*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  v33 = a6 + v83;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v96 = *(_QWORD *)(v31 + 72);
  v34 = v95;
  while (1)
  {
    sub_1A55034B8(v33, (uint64_t)v26, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    sub_1A55034FC((uint64_t)v26, type metadata accessor for TaskHistory.Previous);
LABEL_9:
    v33 += v96;
    if (!--v34)
    {
      a6 = v87;
      goto LABEL_4;
    }
  }
  v35 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8);
  v36 = *(_DWORD *)&v26[*(int *)(v35 + 48)];
  sub_1A55034FC((uint64_t)v26, type metadata accessor for ClientCommand);
  if (v36 != v32)
    goto LABEL_9;
  v37 = v87;
  swift_bridgeObjectRelease();
  v38 = *(_QWORD *)(v86 + 16);
  v91 = v38;
  if (v38)
  {
    v39 = v92;
    v40 = v86 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
    swift_bridgeObjectRetain_n();
    v41 = *(_QWORD *)(v39 + 72);
    do
    {
      sub_1A55034B8(v40, (uint64_t)v17, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A55034FC((uint64_t)v17, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        v42 = *((_DWORD *)v17 + 2);
        v43 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
        sub_1A55034FC((uint64_t)&v17[*(int *)(v43 + 64)], type metadata accessor for ClientCommand);
        if (v42 == v32)
        {
          swift_bridgeObjectRelease();
          a6 = v87;
LABEL_4:
          v30 = v89;
          swift_bridgeObjectRelease();
          v29 = v82;
LABEL_5:
          if (++v30 != v29)
            goto LABEL_6;
LABEL_52:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      v40 += v41;
      --v38;
    }
    while (v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v37 = v87;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v44 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v97 = 1;
  v45 = sub_1A562A5A0(v44, v79 | 0x100000000, v80);
  v46 = v91;
  v80 = *(_QWORD *)(v45 + 16);
  if (!v80)
    goto LABEL_52;
  v47 = 0;
  v79 = v45;
  v84 = v45 + 32;
  v82 = v37 + v83;
  while (2)
  {
    v48 = *(_DWORD *)(v84 + 4 * v47);
    v85 = v47 + 1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v49 = 0;
    v50 = v82;
LABEL_25:
    v51 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
      goto LABEL_57;
    }
    sub_1A55034B8(v50, (uint64_t)v23, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A55034FC((uint64_t)v23, type metadata accessor for TaskHistory.Previous);
      goto LABEL_24;
    }
    v52 = *(_DWORD *)&v23[*(int *)(v35 + 48)];
    sub_1A55034FC((uint64_t)v23, type metadata accessor for ClientCommand);
    if (v52 != v48)
    {
LABEL_24:
      ++v49;
      v50 += v96;
      if (v51 == v95)
      {
LABEL_36:
        v47 = v85;
        swift_bridgeObjectRelease();
        if (v47 != v80)
          continue;
        goto LABEL_52;
      }
      goto LABEL_25;
    }
    break;
  }
  v51 = v87;
  swift_bridgeObjectRelease();
  if (v46)
  {
    v89 = v86 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
    result = swift_bridgeObjectRetain_n();
    v54 = 0;
    while (1)
    {
      v55 = v54 + 1;
      if (__OFADD__(v54, 1))
        break;
      v56 = v90;
      sub_1A55034B8(v89 + *(_QWORD *)(v92 + 72) * v54, v90, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        result = sub_1A55034FC(v56, type metadata accessor for TaskHistory.Running);
        v46 = v91;
      }
      else
      {
        v57 = *(_DWORD *)(v56 + 8);
        v58 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
        result = sub_1A55034FC(v56 + *(int *)(v58 + 64), type metadata accessor for ClientCommand);
        v46 = v91;
        if (v57 == v48)
        {
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
      }
      ++v54;
      if (v55 == v46)
      {
        v59 = v81;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v51 = v87;
        v61 = v77;
        v60 = v78;
        v62 = v76;
        v63 = v75[0];
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_60:
    __break(1u);
    return result;
  }
LABEL_57:
  v59 = v81;
  v61 = v77;
  v60 = v78;
  v62 = v76;
  v63 = v75[0];
LABEL_40:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((sub_1A54E9E54(v59, v62, *(_QWORD *)(v63 + 72)) & 1) == 0)
  {
    v64 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v65 = sub_1A55B0890(v64, v61, v60);
    v94 = *(_QWORD *)(v65 + 16);
    if (!v94)
    {
LABEL_54:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
    v66 = 0;
    v91 = v65;
    v67 = v65 + 32;
    v68 = v51 + v83;
    v92 = v65 + 32;
    v69 = (uint64_t)v88;
LABEL_45:
    v70 = *(_DWORD *)(v67 + 4 * v66++);
    result = swift_bridgeObjectRetain_n();
    v71 = 0;
    v72 = v68;
    while (1)
    {
      v73 = v71 + 1;
      if (__OFADD__(v71, 1))
        goto LABEL_60;
      sub_1A55034B8(v68, v69, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v74 = *(_DWORD *)(v69 + 8);
        result = swift_release();
        if (v74 == v70)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
      else
      {
        result = sub_1A55034FC(v69, type metadata accessor for TaskHistory.Previous);
      }
      ++v71;
      v68 += v96;
      if (v73 == v95)
      {
        swift_bridgeObjectRelease_n();
        v67 = v92;
        v68 = v72;
        if (v66 == v94)
          goto LABEL_54;
        goto LABEL_45;
      }
    }
  }
  return 0;
}

uint64_t sub_1A55AE6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  int64_t v21;
  __int128 v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  unsigned int v79;
  uint64_t v80[2];

  v3 = v2;
  v61 = a1;
  v68 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v68);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v60 - v8;
  v10 = sub_1A594A764();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v65 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v73 = (char *)&v60 - v14;
  v15 = *(_QWORD *)(v3 + 64);
  v16 = *(_QWORD *)(v15 + 64);
  v71 = v15 + 64;
  v17 = 1 << *(_BYTE *)(v15 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v72 = (unint64_t)(v17 + 63) >> 6;
  v75 = v15;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v21 = 0;
  *(_QWORD *)&v22 = 68158723;
  v64 = v22;
  v62 = MEMORY[0x1E0DEE9B8] + 8;
  v63 = v10;
  v69 = a2;
  v70 = v3;
  v66 = v9;
  v67 = v6;
  v74 = v11;
  while (1)
  {
    if (v19)
    {
      v76 = (v19 - 1) & v19;
      v23 = __clz(__rbit64(v19)) | (v21 << 6);
      goto LABEL_25;
    }
    v24 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v24 >= v72)
      goto LABEL_32;
    v25 = *(_QWORD *)(v71 + 8 * v24);
    ++v21;
    if (!v25)
    {
      v21 = v24 + 1;
      if (v24 + 1 >= v72)
        goto LABEL_32;
      v25 = *(_QWORD *)(v71 + 8 * v21);
      if (!v25)
      {
        v21 = v24 + 2;
        if (v24 + 2 >= v72)
          goto LABEL_32;
        v25 = *(_QWORD *)(v71 + 8 * v21);
        if (!v25)
        {
          v21 = v24 + 3;
          if (v24 + 3 >= v72)
            goto LABEL_32;
          v25 = *(_QWORD *)(v71 + 8 * v21);
          if (!v25)
            break;
        }
      }
    }
LABEL_24:
    v76 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v21 << 6);
LABEL_25:
    v27 = *(_QWORD *)(v75 + 56) + 16 * v23;
    v28 = *(_QWORD *)v27;
    v29 = *(_DWORD *)(v27 + 8);
    v30 = sub_1A54E9E54(*(_QWORD *)v27, v29, *(_QWORD *)(v3 + 72));
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v77 = v21;
    if ((v30 & 1) != 0)
    {
      v31(v73, a2, v10);
      sub_1A55034B8(a2, (uint64_t)v9, type metadata accessor for Task.Logger);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v32 = v10;
      v33 = sub_1A594A74C();
      v34 = sub_1A594C030();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = swift_slowAlloc();
        v36 = swift_slowAlloc();
        v80[0] = v36;
        *(_DWORD *)v35 = v64;
        *(_DWORD *)(v35 + 4) = 2;
        *(_WORD *)(v35 + 8) = 256;
        v37 = &v9[*(int *)(v68 + 20)];
        v38 = *((_QWORD *)v37 + 1);
        v39 = *((_QWORD *)v37 + 2);
        *(_BYTE *)(v35 + 10) = *(_QWORD *)v37;
        *(_WORD *)(v35 + 11) = 2082;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v40 = v38;
        v6 = v67;
        *(_QWORD *)(v35 + 13) = sub_1A55791B0(v40, v39, v80);
        v9 = v66;
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v9, type metadata accessor for Task.Logger);
        *(_WORD *)(v35 + 21) = 2160;
        *(_QWORD *)(v35 + 23) = 0x786F626C69616DLL;
        *(_WORD *)(v35 + 31) = 2085;
        v78 = v28;
        v79 = v29;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v41 = sub_1A594B4A8();
        *(_QWORD *)(v35 + 33) = sub_1A55791B0(v41, v42, v80);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v33, v34, "[%.*hhx-%{public}s] Did create '%{sensitive,mask.mailbox}s'.", (uint8_t *)v35, 0x29u);
        swift_arrayDestroy();
        v43 = v36;
        a2 = v69;
        MEMORY[0x1A85B1964](v43, -1, -1);
        v44 = v35;
        v3 = v70;
        MEMORY[0x1A85B1964](v44, -1, -1);

      }
      else
      {
        sub_1A55034FC((uint64_t)v9, type metadata accessor for Task.Logger);

        swift_bridgeObjectRelease_n();
      }
      v11 = v74;
      result = (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v73, v32);
      v10 = v32;
    }
    else
    {
      v45 = v65;
      v31(v65, a2, v10);
      sub_1A55034B8(a2, (uint64_t)v6, type metadata accessor for Task.Logger);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v46 = sub_1A594A74C();
      v47 = sub_1A594C018();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = swift_slowAlloc();
        v49 = swift_slowAlloc();
        v80[0] = v49;
        *(_DWORD *)v48 = v64;
        *(_DWORD *)(v48 + 4) = 2;
        *(_WORD *)(v48 + 8) = 256;
        v50 = &v6[*(int *)(v68 + 20)];
        v51 = *((_QWORD *)v50 + 1);
        v52 = *((_QWORD *)v50 + 2);
        *(_BYTE *)(v48 + 10) = *(_QWORD *)v50;
        *(_WORD *)(v48 + 11) = 2082;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v53 = v51;
        v6 = v67;
        *(_QWORD *)(v48 + 13) = sub_1A55791B0(v53, v52, v80);
        v9 = v66;
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v6, type metadata accessor for Task.Logger);
        *(_WORD *)(v48 + 21) = 2160;
        *(_QWORD *)(v48 + 23) = 0x786F626C69616DLL;
        *(_WORD *)(v48 + 31) = 2085;
        v78 = v28;
        v79 = v29;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v54 = sub_1A594B4A8();
        *(_QWORD *)(v48 + 33) = sub_1A55791B0(v54, v55, v80);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v46, v47, "[%.*hhx-%{public}s] Failed to create '%{sensitive,mask.mailbox}s'.", (uint8_t *)v48, 0x29u);
        swift_arrayDestroy();
        v56 = v49;
        a2 = v69;
        MEMORY[0x1A85B1964](v56, -1, -1);
        v57 = v48;
        v3 = v70;
        MEMORY[0x1A85B1964](v57, -1, -1);

      }
      else
      {
        sub_1A55034FC((uint64_t)v6, type metadata accessor for Task.Logger);

        swift_bridgeObjectRelease_n();
      }
      v11 = v74;
      v10 = v63;
      result = (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v45, v63);
    }
    v19 = v76;
    v21 = v77;
  }
  v26 = v24 + 4;
  if (v26 >= v72)
  {
LABEL_32:
    swift_release();
    v58 = v61;
    v59 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5628B4C(v59);
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(v58 + 113) = 1;
    return result;
  }
  v25 = *(_QWORD *)(v71 + 8 * v26);
  if (v25)
  {
    v21 = v26;
    goto LABEL_24;
  }
  while (1)
  {
    v21 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v21 >= v72)
      goto LABEL_32;
    v25 = *(_QWORD *)(v71 + 8 * v21);
    ++v26;
    if (v25)
      goto LABEL_24;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A55AEDD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A55530FC(v1, a1);
}

uint64_t sub_1A55AEDEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1A55ADE7C();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1A55AEE14(const void *a1)
{
  uint64_t result;
  __int128 *v3;
  __int128 v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unsigned int v8;
  _QWORD v9[3];
  _BYTE v10[584];
  __int128 v11;
  __int128 v12;
  __int128 v13;

  sub_1A552316C(a1, v10);
  result = sub_1A5523B90((uint64_t)v10);
  if ((_DWORD)result == 7)
  {
    v3 = (__int128 *)sub_1A5524678((uint64_t)v10);
    v4 = v3[1];
    v11 = *v3;
    v12 = v4;
    v13 = v3[2];
    sub_1A5523B9C(a1, sub_1A55231A8);
    v5 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v6 = sub_1A55AF1FC(v5, (uint64_t)&v11);
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
    {
      v7 = *((_QWORD *)&v11 + 1);
      v8 = v12;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F2A14((uint64_t)v9, v7, v8);
      sub_1A5523B9C(a1, sub_1A5523C88);
      return swift_bridgeObjectRelease();
    }
    else
    {
      return sub_1A5523B9C(a1, sub_1A5523C88);
    }
  }
  return result;
}

void sub_1A55AEF00(uint64_t a1, unint64_t a2, uint64_t a3, NSObject *a4, int a5, uint64_t a6)
{
  sub_1A55AD80C(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), a2, a3, a4, a5, a6);
}

uint64_t sub_1A55AEF50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

unint64_t sub_1A55AEF80()
{
  unint64_t result;

  result = qword_1EE7A8BE0;
  if (!qword_1EE7A8BE0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8CB4, &type metadata for CreateMailboxes.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE7A8BE0);
  }
  return result;
}

unint64_t sub_1A55AEFC8()
{
  unint64_t result;

  result = qword_1EE7A8BE8;
  if (!qword_1EE7A8BE8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8C8C, &type metadata for CreateMailboxes.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE7A8BE8);
  }
  return result;
}

unint64_t sub_1A55AF00C(uint64_t a1)
{
  unint64_t result;

  result = sub_1A55AF030();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A55AF030()
{
  unint64_t result;

  result = qword_1EE7A8BF0;
  if (!qword_1EE7A8BF0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8C48, &type metadata for CreateMailboxes);
    atomic_store(result, (unint64_t *)&qword_1EE7A8BF0);
  }
  return result;
}

BOOL sub_1A55AF074(uint64_t a1, uint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = a2[1];
  if (v2 >> 60 == 11)
    return v3 >> 60 == 11;
  if (v2 >> 60 == 15)
    return v3 >> 60 == 15;
  if (((v3 >> 60) | 4) == 0xF)
    return 0;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *a2;
  sub_1A55B0AF0(v5, v2);
  sub_1A55B0AF0(v6, v3);
  sub_1A5535F44(v5, v2);
  v8 = v7;
  sub_1A55B0B08(v6, v3);
  sub_1A55B0B08(v5, v2);
  return v8 & 1;
}

uint64_t sub_1A55AF150(uint64_t a1, uint64_t a2)
{
  return (*(_QWORD *)(a1 + 8) == *(_QWORD *)a2) & ~(*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 8));
}

uint64_t sub_1A55AF174(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;

  v2 = *(_DWORD *)(a1 + 4);
  v3 = *(unsigned __int8 *)(a2 + 4);
  v4 = (v2 == *(_DWORD *)a2) & ~v3;
  if (*(_DWORD *)a2)
    v5 = *(unsigned __int8 *)(a2 + 4);
  else
    v5 = 0;
  if (*(_DWORD *)a2)
    v3 = 0;
  if (v2)
    v6 = v5;
  else
    v6 = v3;
  if (*(_BYTE *)(a1 + 8) == 1)
    return v6;
  else
    return v4;
}

BOOL sub_1A55AF1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a2 & 0x100000000) != 0)
  {
    if ((a4 & 0x100000000) == 0 || a2 != a4)
      return 0;
  }
  else if ((a4 & 0x100000000) != 0 || a2 != a4)
  {
    return 0;
  }
  return sub_1A54FF30C(a1, a3);
}

uint64_t sub_1A55AF1FC(uint64_t result, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;

  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
LABEL_4:
  while (v6)
  {
    v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v9 = v8 | (v2 << 6);
LABEL_19:
    v14 = *(_QWORD *)(result + 56) + 16 * v9;
    if ((*(unsigned int *)(v14 + 8) | ((unint64_t)*(unsigned int *)(v14 + 8) << 32)) == (*(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned int *)(a2 + 16) << 32)))
    {
      v15 = *(_QWORD *)v14;
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(_QWORD *)(v15 + 16);
      if (v17 == *(_QWORD *)(v16 + 16))
      {
        if (!v17 || v15 == v16)
          return 1;
        if (*(unsigned __int8 *)(v15 + 32) == *(unsigned __int8 *)(v16 + 32))
        {
          if (v17 == 1)
            return 1;
          if (*(unsigned __int8 *)(v15 + 33) == *(unsigned __int8 *)(v16 + 33))
          {
            if (v17 == 2)
              return 1;
            if (*(unsigned __int8 *)(v15 + 34) == *(unsigned __int8 *)(v16 + 34))
            {
              v18 = (unsigned __int8 *)(v15 + 35);
              v19 = (unsigned __int8 *)(v16 + 35);
              v20 = v17 - 3;
              while (v20)
              {
                v22 = *v18++;
                v21 = v22;
                v23 = *v19++;
                --v20;
                if (v21 != v23)
                  goto LABEL_4;
              }
              return 1;
            }
          }
        }
      }
    }
  }
  if (__OFADD__(v2++, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v2 >= v7)
    return 0;
  v11 = *(_QWORD *)(v3 + 8 * v2);
  if (v11)
  {
LABEL_18:
    v13 = __clz(__rbit64(v11));
    v6 = (v11 - 1) & v11;
    v9 = v13 + (v2 << 6);
    goto LABEL_19;
  }
  v12 = v2 + 1;
  if (v2 + 1 >= v7)
    return 0;
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
    goto LABEL_17;
  v12 = v2 + 2;
  if (v2 + 2 >= v7)
    return 0;
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
    goto LABEL_17;
  v12 = v2 + 3;
  if (v2 + 3 >= v7)
    return 0;
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
    goto LABEL_17;
  v12 = v2 + 4;
  if (v2 + 4 >= v7)
    return 0;
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
LABEL_17:
    v2 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      return 0;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_18;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1A55AF3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v34 = a3;
  v5 = type metadata accessor for TaskHistory.Previous(0);
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 64);
  v31 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v32 = (unint64_t)(v9 + 63) >> 6;
  v35 = a1;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v13 = 0;
  v39 = a2;
  if (v11)
    goto LABEL_4;
LABEL_5:
  v15 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  if (v15 < v32)
  {
    v16 = *(_QWORD *)(v31 + 8 * v15);
    ++v13;
    if (v16)
      goto LABEL_19;
    v13 = v15 + 1;
    if (v15 + 1 >= v32)
      goto LABEL_34;
    v16 = *(_QWORD *)(v31 + 8 * v13);
    if (v16)
      goto LABEL_19;
    v13 = v15 + 2;
    if (v15 + 2 >= v32)
      goto LABEL_34;
    v16 = *(_QWORD *)(v31 + 8 * v13);
    if (v16)
      goto LABEL_19;
    v13 = v15 + 3;
    if (v15 + 3 >= v32)
      goto LABEL_34;
    v16 = *(_QWORD *)(v31 + 8 * v13);
    if (v16)
    {
LABEL_19:
      v37 = (v16 - 1) & v16;
      for (i = __clz(__rbit64(v16)) + (v13 << 6); ; i = __clz(__rbit64(v11)) | (v13 << 6))
      {
        v18 = *(_QWORD *)(v35 + 56) + 16 * i;
        v19 = *(_QWORD *)v18;
        v20 = *(unsigned int *)(v18 + 8);
        swift_bridgeObjectRetain_n();
        v45 = 0;
        v33 = v20;
        v38 = v19;
        v21 = sub_1A562A5A0(v19, v20, v34);
        v43 = *(_QWORD *)(v21 + 16);
        if (!v43)
        {
LABEL_32:
          v29 = v38;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return v29;
        }
        v36 = v13;
        v22 = 0;
        v41 = v21;
        v42 = v21 + 32;
        v44 = *(_QWORD *)(a2 + 16);
        while (!v44)
        {
LABEL_23:
          if (++v22 == v43)
            goto LABEL_32;
        }
        v23 = *(_DWORD *)(v42 + 4 * v22);
        v24 = v40;
        v25 = a2 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
        swift_bridgeObjectRetain_n();
        v26 = *(_QWORD *)(v24 + 72);
        v27 = v44;
        while (1)
        {
          sub_1A55034B8(v25, (uint64_t)v7, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() != 1)
            break;
          sub_1A55034FC((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
LABEL_27:
          v25 += v26;
          if (!--v27)
          {
            a2 = v39;
            swift_bridgeObjectRelease_n();
            goto LABEL_23;
          }
        }
        v28 = *(_DWORD *)&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
        sub_1A55034FC((uint64_t)v7, type metadata accessor for ClientCommand);
        if (v28 != v23)
          goto LABEL_27;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        a2 = v39;
        result = swift_bridgeObjectRelease_n();
        v13 = v36;
        v11 = v37;
        if (!v37)
          goto LABEL_5;
LABEL_4:
        v37 = (v11 - 1) & v11;
      }
    }
    v17 = v15 + 4;
    if (v17 < v32)
    {
      v16 = *(_QWORD *)(v31 + 8 * v17);
      v13 = v17;
      if (!v16)
      {
        while (1)
        {
          v13 = v17 + 1;
          if (__OFADD__(v17, 1))
            goto LABEL_36;
          if (v13 >= v32)
            goto LABEL_34;
          v16 = *(_QWORD *)(v31 + 8 * v13);
          ++v17;
          if (v16)
            goto LABEL_19;
        }
      }
      goto LABEL_19;
    }
  }
LABEL_34:
  swift_release();
  return 0;
}

uint64_t sub_1A55AF730(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  int v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  int v47;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char v66;
  char v67;

  v54 = a2;
  v62 = type metadata accessor for TaskHistory.Running(0);
  v52 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v64 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TaskHistory.Previous(0);
  v57 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v65 = (uint64_t)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v48 - v11;
  v13 = *a1;
  v14 = *((unsigned int *)a1 + 2);
  v15 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v67 = 0;
  v49 = v14;
  v50 = a4;
  v16 = sub_1A562A5A0(v15, v14, a4);
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  v51 = v13;
  v18 = 0;
  v48[1] = v16;
  v56 = v16 + 32;
  v63 = *(_QWORD *)(a3 + 16);
  v19 = type metadata accessor for TaskHistory.Previous;
  v59 = a3;
  v53 = v17;
  while (!v63)
  {
LABEL_5:
    if (++v18 == v17)
      goto LABEL_35;
  }
  v58 = v18;
  v20 = v57;
  v21 = *(_DWORD *)(v56 + 4 * v18);
  v55 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v22 = a3 + v55;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v23 = *(_QWORD *)(v20 + 72);
  v24 = v63;
  while (1)
  {
    sub_1A55034B8(v22, (uint64_t)v12, v19);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    sub_1A55034FC((uint64_t)v12, v19);
LABEL_9:
    v22 += v23;
    if (!--v24)
    {
      v18 = v58;
      a3 = v59;
      v17 = v53;
LABEL_4:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
  }
  v25 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8);
  v26 = v19;
  v27 = *(_DWORD *)&v12[*(int *)(v25 + 48)];
  sub_1A55034FC((uint64_t)v12, type metadata accessor for ClientCommand);
  v28 = v27 == v21;
  v19 = v26;
  if (!v28)
    goto LABEL_9;
  v29 = v59;
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v54 + 16);
  if (v30)
  {
    LODWORD(v60) = v21;
    v31 = v52;
    v32 = v54 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
    swift_bridgeObjectRetain_n();
    v61 = *(_QWORD *)(v31 + 72);
    v33 = (uint64_t)v64;
    do
    {
      sub_1A55034B8(v32, v33, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A55034FC(v33, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        v34 = v8;
        v35 = *((_DWORD *)v64 + 2);
        v36 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
        sub_1A55034FC((uint64_t)&v64[*(int *)(v36 + 64)], type metadata accessor for ClientCommand);
        v28 = v35 == (_DWORD)v60;
        v8 = v34;
        v33 = (uint64_t)v64;
        if (v28)
        {
          swift_bridgeObjectRelease();
          v18 = v58;
          a3 = v59;
          v17 = v53;
          v19 = v26;
          goto LABEL_4;
        }
      }
      v32 += v61;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v59;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v37 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v66 = 1;
  v38 = sub_1A562A5A0(v37, v49 | 0x100000000, v50);
  v62 = *(_QWORD *)(v38 + 16);
  if (v62)
  {
    v39 = 0;
    v58 = v38;
    v40 = v38 + 32;
    v41 = v29 + v55;
    v42 = v65;
    v60 = v29 + v55;
    v61 = v38 + 32;
LABEL_25:
    v43 = *(_DWORD *)(v40 + 4 * (_QWORD)v39);
    v64 = v39 + 1;
    result = swift_bridgeObjectRetain_n();
    v45 = 0;
    while (1)
    {
      v46 = v45 + 1;
      if (__OFADD__(v45, 1))
        break;
      sub_1A55034B8(v41, v42, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        result = sub_1A55034FC(v42, type metadata accessor for TaskHistory.Previous);
      }
      else
      {
        v47 = *(_DWORD *)(v65 + *(int *)(v25 + 48));
        result = sub_1A55034FC(v65, type metadata accessor for ClientCommand);
        v28 = v47 == v43;
        v42 = v65;
        if (v28)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
      ++v45;
      v41 += v23;
      if (v46 == v63)
      {
        swift_bridgeObjectRelease_n();
        v40 = v61;
        v39 = v64;
        v41 = v60;
        if (v64 == (char *)v62)
          goto LABEL_34;
        goto LABEL_25;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  return result;
}

uint64_t sub_1A55AFC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int64_t v27;

  v24 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(v9 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v13 = 0;
  if (!v11)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = *(_QWORD *)(a1 + 56) + 16 * i;
    v20 = *(_QWORD *)v19;
    v21 = *(_DWORD *)(v19 + 8);
    v25 = *(_QWORD *)v19;
    v26 = v21;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = sub_1A55AF730(&v25, a2, a3, a4);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v20;
    }
    if ((v22 & 1) != 0)
    {
      swift_release();
      return v20;
    }
    result = swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v13++, 1))
      break;
    if (v13 >= v27)
      goto LABEL_28;
    v17 = *(_QWORD *)(v24 + 8 * v13);
    if (!v17)
    {
      v18 = v13 + 1;
      if (v13 + 1 >= v27)
        goto LABEL_28;
      v17 = *(_QWORD *)(v24 + 8 * v18);
      if (v17)
        goto LABEL_14;
      v18 = v13 + 2;
      if (v13 + 2 >= v27)
        goto LABEL_28;
      v17 = *(_QWORD *)(v24 + 8 * v18);
      if (v17)
        goto LABEL_14;
      v18 = v13 + 3;
      if (v13 + 3 >= v27)
        goto LABEL_28;
      v17 = *(_QWORD *)(v24 + 8 * v18);
      if (v17)
      {
LABEL_14:
        v13 = v18;
        goto LABEL_15;
      }
      v23 = v13 + 4;
      if (v13 + 4 >= v27)
      {
LABEL_28:
        swift_release();
        return 0;
      }
      v17 = *(_QWORD *)(v24 + 8 * v23);
      for (v13 += 4; !v17; ++v23)
      {
        v13 = v23 + 1;
        if (__OFADD__(v23, 1))
          goto LABEL_31;
        if (v13 >= v27)
          goto LABEL_28;
        v17 = *(_QWORD *)(v24 + 8 * v13);
      }
    }
LABEL_15:
    v11 = (v17 - 1) & v17;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A55AFE24(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t j;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(v4 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  j = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (j << 6); ; i = __clz(__rbit64(v12)) + (j << 6))
  {
    v14 = 16 * i;
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(_QWORD *)(a1 + 56) + v14;
    v19 = *(_QWORD *)v18;
    v20 = *(unsigned int *)(v18 + 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((a2(v16, v17, v19, v20) & 1) != 0)
    {
      swift_release();
      return v16;
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_4;
LABEL_5:
    v11 = j + 1;
    if (__OFADD__(j, 1))
      break;
    if (v11 >= v22)
      goto LABEL_24;
    v12 = *(_QWORD *)(v21 + 8 * v11);
    ++j;
    if (v12)
      goto LABEL_19;
    j = v11 + 1;
    if (v11 + 1 >= v22)
      goto LABEL_24;
    v12 = *(_QWORD *)(v21 + 8 * j);
    if (v12)
      goto LABEL_19;
    j = v11 + 2;
    if (v11 + 2 >= v22)
      goto LABEL_24;
    v12 = *(_QWORD *)(v21 + 8 * j);
    if (v12)
      goto LABEL_19;
    j = v11 + 3;
    if (v11 + 3 >= v22)
      goto LABEL_24;
    v12 = *(_QWORD *)(v21 + 8 * j);
    if (v12)
      goto LABEL_19;
    v13 = v11 + 4;
    if (v13 >= v22)
    {
LABEL_24:
      swift_release();
      return 0;
    }
    v12 = *(_QWORD *)(v21 + 8 * v13);
    for (j = v13; !v12; ++v13)
    {
      j = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_27;
      if (j >= v22)
        goto LABEL_24;
      v12 = *(_QWORD *)(v21 + 8 * j);
    }
LABEL_19:
    v6 = (v12 - 1) & v12;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A55B0040(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t *v4;

  return sub_1A55ADF2C(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5], v4[6]) & 1;
}

uint64_t sub_1A55B0070()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55B0094(char a1, uint64_t a2)
{
  return sub_1A55B0770(a1, a2, (uint64_t)sub_1A55B0CF4, (uint64_t (*)(uint64_t, _QWORD *, uint64_t))sub_1A5627828);
}

uint64_t sub_1A55B00A8(char a1, uint64_t a2)
{
  return sub_1A55B03E8(a1, a2, (uint64_t)sub_1A55B09F8, (uint64_t (*)(uint64_t, _QWORD *, uint64_t))sub_1A5627620);
}

uint64_t sub_1A55B00BC(uint64_t a1)
{
  return sub_1A55B064C(a1, (uint64_t)OUTLINED_FUNCTION_56, (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_1A562763C);
}

uint64_t sub_1A55B00D0(uint64_t a1)
{
  return sub_1A55B064C(a1, (uint64_t)OUTLINED_FUNCTION_56, (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_1A5627658);
}

uint64_t sub_1A55B00E4(char a1, uint64_t a2)
{
  return sub_1A55B0770(a1, a2, (uint64_t)sub_1A55B0A50, (uint64_t (*)(uint64_t, _QWORD *, uint64_t))sub_1A5627B04);
}

uint64_t sub_1A55B00F8(uint64_t a1)
{
  return sub_1A55B064C(a1, (uint64_t)OUTLINED_FUNCTION_56, (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_1A5627B20);
}

uint64_t sub_1A55B010C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  _QWORD v12[4];
  uint64_t v13;
  _QWORD v14[2];

  v14[0] = a1;
  v14[1] = a2;
  v12[2] = v14;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v4 = sub_1A5627B3C((uint64_t)sub_1A55B0AD4, (uint64_t)v12, a3);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F90(0, v5, 0);
    v6 = v13;
    v7 = *(_QWORD *)(v13 + 16);
    v8 = 32;
    do
    {
      v9 = *(_DWORD *)(v4 + v8);
      v13 = v6;
      v10 = *(_QWORD *)(v6 + 24);
      if (v7 >= v10 >> 1)
      {
        sub_1A54F4F90(v10 > 1, v7 + 1, 1);
        v6 = v13;
      }
      *(_QWORD *)(v6 + 16) = v7 + 1;
      *(_DWORD *)(v6 + 4 * v7 + 32) = v9;
      v8 += 24;
      ++v7;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v6;
}

uint64_t sub_1A55B0224(uint64_t a1, char a2, uint64_t a3)
{
  return sub_1A55B029C(a1, a2, a3, (uint64_t)sub_1A55B0A10, (uint64_t (*)(uint64_t, _QWORD *, uint64_t))sub_1A5627CC4);
}

uint64_t sub_1A55B0238(char a1, uint64_t a2)
{
  return sub_1A55B03E8(a1, a2, (uint64_t)sub_1A55B0D0C, (uint64_t (*)(uint64_t, _QWORD *, uint64_t))sub_1A5627CE0);
}

uint64_t sub_1A55B024C(uint64_t a1)
{
  return sub_1A55B064C(a1, (uint64_t)OUTLINED_FUNCTION_56, (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_1A5627CFC);
}

uint64_t sub_1A55B0260(uint64_t a1, char a2, uint64_t a3)
{
  return sub_1A55B029C(a1, a2, a3, (uint64_t)sub_1A55B0A10, (uint64_t (*)(uint64_t, _QWORD *, uint64_t))sub_1A5627D18);
}

uint64_t sub_1A55B0274(uint64_t a1)
{
  return sub_1A55B064C(a1, (uint64_t)OUTLINED_FUNCTION_56, (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_1A5627D34);
}

uint64_t sub_1A55B0288(uint64_t a1, char a2, uint64_t a3)
{
  return sub_1A55B029C(a1, a2, a3, (uint64_t)sub_1A55B0A6C, (uint64_t (*)(uint64_t, _QWORD *, uint64_t))sub_1A5627D50);
}

uint64_t sub_1A55B029C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, _QWORD *, uint64_t))
{
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  _QWORD v16[4];
  uint64_t v17;
  uint64_t v18;
  char v19;

  v18 = a1;
  v19 = a2 & 1;
  v16[2] = &v18;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8 = a5(a4, v16, a3);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F90(0, v9, 0);
    v10 = v17;
    v11 = *(_QWORD *)(v17 + 16);
    v12 = 32;
    do
    {
      v13 = *(_DWORD *)(v8 + v12);
      v17 = v10;
      v14 = *(_QWORD *)(v10 + 24);
      if (v11 >= v14 >> 1)
      {
        sub_1A54F4F90(v14 > 1, v11 + 1, 1);
        v10 = v17;
      }
      *(_QWORD *)(v10 + 16) = v11 + 1;
      *(_DWORD *)(v10 + 4 * v11 + 32) = v13;
      v12 += 24;
      ++v11;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v10;
}

uint64_t sub_1A55B03C0(uint64_t a1)
{
  return sub_1A55B064C(a1, (uint64_t)OUTLINED_FUNCTION_56, (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_1A5627EE8);
}

uint64_t sub_1A55B03D4(char a1, uint64_t a2)
{
  return sub_1A55B03E8(a1, a2, (uint64_t)sub_1A55B0D0C, (uint64_t (*)(uint64_t, _QWORD *, uint64_t))sub_1A5627F04);
}

uint64_t sub_1A55B03E8(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD *, uint64_t))
{
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  char v17;

  v17 = a1;
  v15[2] = &v17;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7 = a4(a3, v15, a2);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F90(0, v8, 0);
    v9 = v16;
    v10 = *(_QWORD *)(v16 + 16);
    v11 = 32;
    do
    {
      v12 = *(_DWORD *)(v7 + v11);
      v16 = v9;
      v13 = *(_QWORD *)(v9 + 24);
      if (v10 >= v13 >> 1)
      {
        sub_1A54F4F90(v13 > 1, v10 + 1, 1);
        v9 = v16;
      }
      *(_QWORD *)(v9 + 16) = v10 + 1;
      *(_DWORD *)(v9 + 4 * v10 + 32) = v12;
      v11 += 8;
      ++v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v9;
}

uint64_t sub_1A55B0504(uint64_t a1)
{
  return sub_1A55B064C(a1, (uint64_t)OUTLINED_FUNCTION_56, (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_1A562808C);
}

uint64_t sub_1A55B0518(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  int v13;
  char v14;

  v13 = a1;
  v14 = BYTE4(a1) & 1;
  v11[2] = &v13;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = sub_1A56280A8((uint64_t)sub_1A55B0A94, (uint64_t)v11, a2);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F90(0, v4, 0);
    v5 = v12;
    v6 = *(_QWORD *)(v12 + 16);
    v7 = 32;
    do
    {
      v8 = *(_DWORD *)(v3 + v7);
      v12 = v5;
      v9 = *(_QWORD *)(v5 + 24);
      if (v6 >= v9 >> 1)
      {
        sub_1A54F4F90(v9 > 1, v6 + 1, 1);
        v5 = v12;
      }
      *(_QWORD *)(v5 + 16) = v6 + 1;
      *(_DWORD *)(v5 + 4 * v6 + 32) = v8;
      v7 += 12;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

uint64_t sub_1A55B0638(uint64_t a1)
{
  return sub_1A55B064C(a1, (uint64_t)OUTLINED_FUNCTION_56, (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_1A562820C);
}

uint64_t sub_1A55B064C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t *, uint64_t))
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v6 = a3(a2, &v14, a1);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F90(0, v7, 0);
    v8 = 0;
    v9 = v15;
    v10 = *(_QWORD *)(v15 + 16);
    do
    {
      v11 = *(_DWORD *)(v6 + 4 * v8 + 32);
      v15 = v9;
      v12 = *(_QWORD *)(v9 + 24);
      if (v10 >= v12 >> 1)
      {
        sub_1A54F4F90(v12 > 1, v10 + 1, 1);
        v9 = v15;
      }
      ++v8;
      *(_QWORD *)(v9 + 16) = v10 + 1;
      *(_DWORD *)(v9 + 4 * v10++ + 32) = v11;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v9;
}

uint64_t sub_1A55B075C(char a1, uint64_t a2)
{
  return sub_1A55B0770(a1, a2, (uint64_t)sub_1A55B0CF4, (uint64_t (*)(uint64_t, _QWORD *, uint64_t))sub_1A5628374);
}

uint64_t sub_1A55B0770(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD *, uint64_t))
{
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  char v17;

  v17 = a1 & 1;
  v15[2] = &v17;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7 = a4(a3, v15, a2);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F90(0, v8, 0);
    v9 = v16;
    v10 = *(_QWORD *)(v16 + 16);
    v11 = 32;
    do
    {
      v12 = *(_DWORD *)(v7 + v11);
      v16 = v9;
      v13 = *(_QWORD *)(v9 + 24);
      if (v10 >= v13 >> 1)
      {
        sub_1A54F4F90(v13 > 1, v10 + 1, 1);
        v9 = v16;
      }
      *(_QWORD *)(v9 + 16) = v10 + 1;
      *(_DWORD *)(v9 + 4 * v10 + 32) = v12;
      v11 += 8;
      ++v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v9;
}

uint64_t sub_1A55B0890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  _QWORD v12[4];
  uint64_t v13;
  _QWORD v14[2];

  v14[0] = a1;
  v14[1] = a2;
  v12[2] = v14;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v4 = sub_1A56286E8((uint64_t)sub_1A55B09A8, (uint64_t)v12, a3);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F90(0, v5, 0);
    v6 = v13;
    v7 = *(_QWORD *)(v13 + 16);
    v8 = 32;
    do
    {
      v9 = *(_DWORD *)(v4 + v8);
      v13 = v6;
      v10 = *(_QWORD *)(v6 + 24);
      if (v7 >= v10 >> 1)
      {
        sub_1A54F4F90(v10 > 1, v7 + 1, 1);
        v6 = v13;
      }
      *(_QWORD *)(v6 + 16) = v7 + 1;
      *(_DWORD *)(v6 + 4 * v7 + 32) = v9;
      v8 += 24;
      ++v7;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v6;
}

BOOL sub_1A55B09A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  v2 = *(uint64_t **)(v1 + 16);
  return *(_QWORD *)(a1 + 16) == v2[1] && sub_1A54FF30C(*(_QWORD *)(a1 + 8), *v2);
}

BOOL sub_1A55B09F8(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(a1 + 4) == **(unsigned __int8 **)(v1 + 16);
}

BOOL sub_1A55B0A10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  if (*(_BYTE *)(a1 + 16) == 1)
    return (*(_BYTE *)(v2 + 8) & 1) != 0;
  if (*(_BYTE *)(v2 + 8))
    return 0;
  return *(_QWORD *)(a1 + 8) == *(_QWORD *)v2;
}

BOOL sub_1A55B0A50(uint64_t a1)
{
  uint64_t v1;

  return ((*(unsigned __int8 *)(a1 + 4) ^ **(unsigned __int8 **)(v1 + 16)) & 1) == 0;
}

uint64_t sub_1A55B0A6C(uint64_t a1)
{
  uint64_t v1;

  return (*(_QWORD *)(a1 + 8) == **(_QWORD **)(v1 + 16)) & ~(*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(*(_QWORD *)(v1 + 16) + 8));
}

uint64_t sub_1A55B0A94(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  v2 = *(int **)(v1 + 16);
  v3 = *(_DWORD *)(a1 + 4);
  v4 = *v2;
  v5 = *((unsigned __int8 *)v2 + 4);
  v6 = (v3 == v4) & ~v5;
  v7 = v4 == 0;
  if (v4)
    v8 = v5;
  else
    v8 = 0;
  if (!v7)
    v5 = 0;
  if (v3)
    v5 = v8;
  if (*(_BYTE *)(a1 + 8) == 1)
    return v5;
  else
    return v6;
}

BOOL sub_1A55B0AD4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A55AF074(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_1A55B0AF0(uint64_t a1, unint64_t a2)
{
  if (((a2 >> 60) | 4) != 0xF)
    return sub_1A54E42B4(a1, a2);
  return a1;
}

uint64_t sub_1A55B0B08(uint64_t a1, unint64_t a2)
{
  if (((a2 >> 60) | 4) != 0xF)
    return sub_1A54E46E8(a1, a2);
  return a1;
}

uint64_t destroy for CreateMailboxes.CommandID(uint64_t a1)
{
  return j__swift_bridgeObjectRelease(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(unsigned __int8 *)(a1 + 12));
}

uint64_t _s13IMAP2Behavior15CreateMailboxesV9CommandIDOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v3 = *a2;
  v4 = *((_DWORD *)a2 + 2);
  v5 = *((unsigned __int8 *)a2 + 12);
  j___s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0(*a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 12) = v5;
  return a1;
}

uint64_t *assignWithCopy for CreateMailboxes.CommandID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = *((_DWORD *)a2 + 2);
  v5 = *((unsigned __int8 *)a2 + 12);
  j___s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0(*a2, v4, v5);
  v6 = *a1;
  v7 = *((unsigned int *)a1 + 2);
  v8 = *((unsigned __int8 *)a1 + 12);
  *a1 = v3;
  *((_DWORD *)a1 + 2) = v4;
  *((_BYTE *)a1 + 12) = v5;
  j__swift_bridgeObjectRelease(v6, v7, v8);
  return a1;
}

uint64_t *assignWithTake for CreateMailboxes.CommandID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = *((_DWORD *)a2 + 2);
  v5 = *((_BYTE *)a2 + 12);
  v6 = *a1;
  v7 = *((unsigned int *)a1 + 2);
  v8 = *((unsigned __int8 *)a1 + 12);
  *a1 = v3;
  *((_DWORD *)a1 + 2) = v4;
  *((_BYTE *)a1 + 12) = v5;
  j__swift_bridgeObjectRelease(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateMailboxes.CommandID(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 13))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 12);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateMailboxes.CommandID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 13) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 13) = 0;
    if (a2)
      *(_BYTE *)(result + 12) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A55B0CC0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 12);
}

uint64_t sub_1A55B0CC8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 12) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CreateMailboxes.CommandID()
{
  return &type metadata for CreateMailboxes.CommandID;
}

ValueMetadata *type metadata accessor for CreateMailboxes.ActionID()
{
  return &type metadata for CreateMailboxes.ActionID;
}

BOOL sub_1A55B0CF4(uint64_t a1)
{
  return sub_1A55B0A50(a1);
}

BOOL sub_1A55B0D0C(uint64_t a1)
{
  return sub_1A55B09F8(a1);
}

uint64_t sub_1A55B0D24(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int *v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = v1;
    v4 = (unsigned int *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 40);
    do
    {
      if (*(_QWORD *)(v3 + 32))
      {
        v5 = sub_1A54FDC30(*((_QWORD *)v4 - 1), *v4);
        if ((v6 & 1) != 0)
        {
          v7 = v5;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v9 = *(_QWORD *)(v3 + 32);
          *(_QWORD *)(v3 + 32) = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1A554FC34();
          swift_bridgeObjectRelease();
          sub_1A554E540(v7, v9);
          *(_QWORD *)(v3 + 32) = v9;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      v4 += 4;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A55B0E50@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  int64_t v32;

  v4 = (_QWORD *)sub_1A558B84C(MEMORY[0x1E0DEE9D8]);
  a2[6] = v4;
  a2[8] = MEMORY[0x1E0DEE9E8];
  v31 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v32 = (unint64_t)(v5 + 63) >> 6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8 = 0;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v8 << 6);
    }
    else
    {
      v11 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_38;
      if (v11 >= v32)
      {
LABEL_35:
        swift_release();
        a2[7] = a1;
        *a2 = &type metadata for DeleteMailboxes;
        return sub_1A594C6B4();
      }
      v12 = *(_QWORD *)(v31 + 8 * v11);
      ++v8;
      if (!v12)
      {
        v8 = v11 + 1;
        if (v11 + 1 >= v32)
          goto LABEL_35;
        v12 = *(_QWORD *)(v31 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 2;
          if (v11 + 2 >= v32)
            goto LABEL_35;
          v12 = *(_QWORD *)(v31 + 8 * v8);
          if (!v12)
          {
            v8 = v11 + 3;
            if (v11 + 3 >= v32)
              goto LABEL_35;
            v12 = *(_QWORD *)(v31 + 8 * v8);
            if (!v12)
            {
              v13 = v11 + 4;
              if (v13 >= v32)
                goto LABEL_35;
              v12 = *(_QWORD *)(v31 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  v8 = v13 + 1;
                  if (__OFADD__(v13, 1))
                    goto LABEL_39;
                  if (v8 >= v32)
                    goto LABEL_35;
                  v12 = *(_QWORD *)(v31 + 8 * v8);
                  ++v13;
                  if (v12)
                    goto LABEL_23;
                }
              }
              v8 = v13;
            }
          }
        }
      }
LABEL_23:
      v7 = (v12 - 1) & v12;
      v10 = __clz(__rbit64(v12)) + (v8 << 6);
    }
    v14 = *(_QWORD *)(a1 + 56) + 16 * v10;
    v15 = *(_QWORD *)v14;
    v16 = *(_DWORD *)(v14 + 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a2[6] = 0x8000000000000000;
    v19 = sub_1A54FDC30(v15, v16);
    v20 = v4[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v18;
    if (v4[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v18 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1A554FE44();
        if ((v23 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1A55825A0(v22, isUniquelyReferenced_nonNull_native);
      v24 = sub_1A54FDC30(v15, v16);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_40;
      v19 = v24;
      if ((v23 & 1) != 0)
      {
LABEL_4:
        *(_BYTE *)(v4[7] + v19) = 0;
        goto LABEL_5;
      }
    }
    v4[(v19 >> 6) + 8] |= 1 << v19;
    v26 = v4[6] + 16 * v19;
    *(_QWORD *)v26 = v15;
    *(_DWORD *)(v26 + 8) = v16;
    *(_BYTE *)(v4[7] + v19) = 0;
    v27 = v4[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_37;
    v4[2] = v29;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_5:
    a2[6] = v4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

BOOL sub_1A55B1178(uint64_t a1, uint64_t a2)
{
  return (*(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned int *)(a1 + 8) << 32)) == (*(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned int *)(a2 + 8) << 32))
      && sub_1A54FF30C(*(_QWORD *)a1, *(_QWORD *)a2);
}

uint64_t sub_1A55B11C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_BYTE *, uint64_t);
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _BYTE *v40;
  _BYTE v41[12];
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;

  v3 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v41[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v41[-v7];
  v9 = sub_1A594A764();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v41[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v41[-v14];
  v16 = *(_QWORD *)(v1 + 48);
  if (*(_QWORD *)(v16 + 16) == 1 && (v17 = sub_1A5640E50(v16)) != 0)
  {
    v19 = v17;
    v44 = v18;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v15, a1, v9);
    sub_1A5592008(a1, (uint64_t)v8);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v20 = sub_1A594A74C();
    v21 = sub_1A594C030();
    v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v23 = swift_slowAlloc();
      v43 = swift_slowAlloc();
      v47 = v43;
      *(_DWORD *)v23 = 68158723;
      LODWORD(v48) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v23 + 8) = 256;
      v24 = &v8[*(int *)(v3 + 20)];
      v42 = v22;
      v25 = v24[1];
      v26 = v24[2];
      LOBYTE(v48) = *v24;
      sub_1A594C3CC();
      *(_WORD *)(v23 + 11) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v45 = v10;
      v48 = sub_1A55791B0(v25, v26, &v47);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55B373C((uint64_t)v8);
      *(_WORD *)(v23 + 21) = 2160;
      v48 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v23 + 31) = 2085;
      v48 = (uint64_t)v19;
      v49 = v44;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v27 = sub_1A594B4A8();
      v48 = sub_1A55791B0(v27, v28, &v47);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v20, (os_log_type_t)v42, "[%.*hhx-%{public}s] Created task for '%{sensitive,mask.mailbox}s'", (uint8_t *)v23, 0x29u);
      v29 = v43;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v29, -1, -1);
      MEMORY[0x1A85B1964](v23, -1, -1);

      v30 = *(uint64_t (**)(_BYTE *, uint64_t))(v45 + 8);
    }
    else
    {
      sub_1A55B373C((uint64_t)v8);

      swift_bridgeObjectRelease_n();
      v30 = *(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8);
    }
    v40 = v15;
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
    sub_1A5592008(a1, (uint64_t)v5);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A55532FC(v1, (uint64_t)&v48);
    v31 = sub_1A594A74C();
    v32 = sub_1A594C030();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v47 = v34;
      *(_DWORD *)v33 = 68158466;
      LODWORD(v46) = 2;
      v44 = v9;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 8) = 256;
      v35 = &v5[*(int *)(v3 + 20)];
      v36 = v35[1];
      v37 = v35[2];
      LOBYTE(v46) = *v35;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 11) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v45 = v10;
      v46 = sub_1A55791B0(v36, v37, &v47);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55B373C((uint64_t)v5);
      *(_WORD *)(v33 + 21) = 2048;
      v38 = *(_QWORD *)(v50 + 16);
      sub_1A5553338((uint64_t)&v48);
      v46 = v38;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v31, v32, "[%.*hhx-%{public}s] Created task for %ld mailboxes.", (uint8_t *)v33, 0x1Fu);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v34, -1, -1);
      MEMORY[0x1A85B1964](v33, -1, -1);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v45 + 8))(v12, v44);
    }
    sub_1A5553338((uint64_t)&v48);
    sub_1A55B373C((uint64_t)v5);

    v30 = *(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8);
    v40 = v12;
  }
  return v30(v40, v9);
}

uint64_t sub_1A55B1728@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  if (*(_QWORD *)(*(_QWORD *)(v1 + 64) + 16))
  {
    v3 = sub_1A562A1FC();
    v5 = v4;
    v7 = v6 & 1;
    v8 = sub_1A562A288(v3, v4);
    v10 = v9;
    sub_1A5529B00(v3, v5, v7);
    v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8C20);
    v12 = a1 + *(int *)(v11 + 48);
    *(_QWORD *)v12 = v8;
    *(_DWORD *)(v12 + 8) = v10;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)a1 = v8;
    *(_DWORD *)(a1 + 8) = v10;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 0, 1, v11);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8C20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a1, 1, 1, v14);
  }
}

uint64_t sub_1A55B1828(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t result;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v53;
  int64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  _QWORD *v70;
  int64_t v71;
  char *v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v60 = a1;
  v67 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v67);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v58 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v58 - v10;
  v12 = sub_1A594A764();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v14);
  v64 = (char *)&v58 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v58 - v17;
  v59 = v2;
  v19 = *(_QWORD *)(v2 + 48);
  v21 = v20;
  v22 = *(_QWORD *)(v19 + 64);
  v70 = (_QWORD *)(v19 + 64);
  v23 = 1 << *(_BYTE *)(v19 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v71 = (unint64_t)(v23 + 63) >> 6;
  v73 = v19;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *(_QWORD *)&v26 = 68158723;
  v62 = v26;
  v61 = MEMORY[0x1E0DEE9B8] + 8;
  v68 = a2;
  v69 = v8;
  v65 = v21;
  v66 = v5;
  v72 = v11;
  v63 = v18;
  if (v25)
  {
    v27 = __clz(__rbit64(v25));
    v75 = (v25 - 1) & v25;
    v76 = 0;
    goto LABEL_18;
  }
  if (v71 <= 1)
    goto LABEL_19;
  v28 = v70[1];
  v29 = 1;
  if (v28)
    goto LABEL_17;
  v29 = 2;
  if (v71 <= 2)
    goto LABEL_19;
  v28 = v70[2];
  if (v28)
    goto LABEL_17;
  v29 = 3;
  if (v71 <= 3)
    goto LABEL_19;
  v28 = v70[3];
  if (v28)
  {
LABEL_17:
    v75 = (v28 - 1) & v28;
    v76 = v29;
    v27 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_18:
    v31 = *(_QWORD *)(v73 + 56);
    v74 = *(_DWORD *)(*(_QWORD *)(v73 + 48) + 16 * v27 + 8);
    __asm { BR              X9 }
  }
  v30 = 4;
  if (v71 <= 4)
  {
LABEL_19:
    swift_release();
    a2 = *(_QWORD *)(v59 + 48);
    v32 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v33 = sub_1A55B2EE8(v32);
    swift_bridgeObjectRelease();
    v34 = sub_1A550CB5C((uint64_t)v33);
    swift_release();
    v35 = v60;
    sub_1A55B0D24((uint64_t)v34);
    v38 = *(_QWORD *)(v35 + 152);
    v37 = v35 + 152;
    v36 = v38;
    if (*(_BYTE *)(v37 + 16) == 1)
    {
      v40 = *(_QWORD *)(v37 + 8);
      v77 = *(_QWORD *)(v37 - 8);
      v39 = v77;
      swift_retain();
      sub_1A55212D0(v39, v36, v40, 1);
      v41 = sub_1A55B3778((uint64_t)&v77, (uint64_t)v34);
      swift_release();
      v42 = *(_QWORD *)(v77 + 16);
      if (v42 < v41)
      {
        __break(1u);
        goto LABEL_57;
      }
      sub_1A558BBAC(v41, v42);
      sub_1A54E8FCC(v39, v36, v40, 1);
      result = swift_release();
      v13 = v60;
      *(_QWORD *)(v60 + 144) = v77;
      *(_QWORD *)v37 = 0;
      *(_QWORD *)(v37 + 8) = 0;
      *(_BYTE *)(v13 + 168) = 1;
    }
    else
    {
      result = swift_release();
      v13 = v60;
    }
    v44 = 0;
    *(_BYTE *)(v13 + 113) = 1;
    v45 = a2 + 64;
    v46 = 1 << *(_BYTE *)(a2 + 32);
    v47 = -1;
    if (v46 < 64)
      v47 = ~(-1 << v46);
    v48 = v47 & *(_QWORD *)(a2 + 64);
    v49 = (unint64_t)(v46 + 63) >> 6;
    do
    {
      if (v48)
      {
        v50 = __clz(__rbit64(v48));
        v48 &= v48 - 1;
        v51 = v50 | (v44 << 6);
      }
      else
      {
        if (__OFADD__(v44++, 1))
        {
          __break(1u);
          goto LABEL_54;
        }
        if (v44 >= v49)
          return result;
        v53 = *(_QWORD *)(v45 + 8 * v44);
        if (!v53)
        {
          v54 = v44 + 1;
          if (v44 + 1 >= v49)
            return result;
          v53 = *(_QWORD *)(v45 + 8 * v54);
          if (!v53)
          {
            v54 = v44 + 2;
            if (v44 + 2 >= v49)
              return result;
            v53 = *(_QWORD *)(v45 + 8 * v54);
            if (!v53)
            {
              v54 = v44 + 3;
              if (v44 + 3 >= v49)
                return result;
              v53 = *(_QWORD *)(v45 + 8 * v54);
              if (!v53)
              {
                v54 = v44 + 4;
                if (v44 + 4 >= v49)
                  return result;
                v53 = *(_QWORD *)(v45 + 8 * v54);
                if (!v53)
                {
                  v54 = v44 + 5;
                  if (v44 + 5 >= v49)
                    return result;
                  v53 = *(_QWORD *)(v45 + 8 * v54);
                  if (!v53)
                  {
                    while (1)
                    {
                      v44 = v54 + 1;
                      if (__OFADD__(v54, 1))
                        break;
                      if (v44 >= v49)
                        return result;
                      v53 = *(_QWORD *)(v45 + 8 * v44);
                      ++v54;
                      if (v53)
                        goto LABEL_43;
                    }
LABEL_57:
                    __break(1u);
                    JUMPOUT(0x1A55B23A0);
                  }
                }
              }
            }
          }
          v44 = v54;
        }
LABEL_43:
        v55 = __clz(__rbit64(v53));
        v48 = (v53 - 1) & v53;
        v51 = v55 + (v44 << 6);
      }
    }
    while (*(_BYTE *)(*(_QWORD *)(a2 + 56) + v51) != 1);
    a2 = *(_QWORD *)(v13 + 224);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      goto LABEL_55;
    goto LABEL_49;
  }
  v28 = v70[4];
  if (v28)
  {
    v29 = 4;
    goto LABEL_17;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v71)
      goto LABEL_19;
    v28 = v70[v29];
    ++v30;
    if (v28)
      goto LABEL_17;
  }
LABEL_54:
  __break(1u);
LABEL_55:
  result = (uint64_t)sub_1A54F14F8(0, *(_QWORD *)(a2 + 16) + 1, 1, (char *)a2);
  a2 = result;
LABEL_49:
  v57 = *(_QWORD *)(a2 + 16);
  v56 = *(_QWORD *)(a2 + 24);
  if (v57 >= v56 >> 1)
  {
    result = (uint64_t)sub_1A54F14F8((char *)(v56 > 1), v57 + 1, 1, (char *)a2);
    a2 = result;
  }
  *(_QWORD *)(a2 + 16) = v57 + 1;
  *(_BYTE *)(a2 + v57 + 32) = 3;
  *(_QWORD *)(v13 + 224) = a2;
  return result;
}

uint64_t sub_1A55B23B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1A55B3B10();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1A55B23E4(uint64_t a1, unint64_t a2, uint64_t a3, NSObject *a4, int a5, uint64_t a6)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v14;
  unsigned int v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;

  v8 = v6;
  v14 = *(_QWORD *)a1;
  v15 = *(_DWORD *)(a1 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A564CE34(a6, a2, a3, a4, a5);
  if (v7)

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *(_QWORD *)(v8 + 48);
  *(_QWORD *)(v8 + 48) = 0x8000000000000000;
  sub_1A55B2988(3, v14, v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v8 + 48) = v18;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A55B24C4()
{
  return 0xD000000000000010;
}

unint64_t sub_1A55B24E0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1A55B2528(unint64_t result, uint64_t a2, int a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = a5[6] + 16 * result;
  *(_QWORD *)v5 = a2;
  *(_DWORD *)(v5 + 8) = a3;
  v6 = a5[7] + 72 * result;
  *(_WORD *)(v6 + 64) = *(_WORD *)(a4 + 64);
  v7 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v6 + 48) = v7;
  v8 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v8;
  v9 = a5[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a5[2] = v11;
  return result;
}

unint64_t sub_1A55B2590(unint64_t result, uint64_t a2, int a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = a5[6] + 16 * result;
  *(_QWORD *)v5 = a2;
  *(_DWORD *)(v5 + 8) = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1A55B25DC(unint64_t result, int a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_DWORD *)(a4[6] + 4 * result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_1A55B2620(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

unint64_t sub_1A55B2668(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = a6[7] + 16 * result;
  *(_QWORD *)v7 = a4;
  *(_DWORD *)(v7 + 8) = a5;
  *(_BYTE *)(v7 + 12) = BYTE4(a5);
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

uint64_t sub_1A55B26C4(char a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1A54FDC2C(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1A554F8CC();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7] + 16 * v12;
      result = swift_bridgeObjectRelease();
      *(_BYTE *)v19 = a1;
      *(_QWORD *)(v19 + 8) = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_DWORD *)(v18[6] + 4 * v12) = a3;
    v21 = v18[7] + 16 * v12;
    *(_BYTE *)v21 = a1;
    *(_QWORD *)(v21 + 8) = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1A5581C3C(result, a4 & 1);
  result = sub_1A54FDC2C(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

uint64_t sub_1A55B2808(uint64_t a1, uint64_t a2, unsigned int a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1A54FDC30(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A554FC34();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1A55B3290(a1, v18[7] + 72 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = v18[6] + 16 * v12;
    *(_QWORD *)v22 = a2;
    *(_DWORD *)(v22 + 8) = a3;
    v23 = v18[7] + 72 * v12;
    *(_OWORD *)v23 = *(_OWORD *)a1;
    v24 = *(_OWORD *)(a1 + 16);
    v25 = *(_OWORD *)(a1 + 32);
    v26 = *(_OWORD *)(a1 + 48);
    *(_WORD *)(v23 + 64) = *(_WORD *)(a1 + 64);
    *(_OWORD *)(v23 + 32) = v25;
    *(_OWORD *)(v23 + 48) = v26;
    *(_OWORD *)(v23 + 16) = v24;
    v27 = v18[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v18[2] = v29;
      return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    goto LABEL_14;
  }
  sub_1A5582220(v15, a4 & 1);
  v20 = sub_1A54FDC30(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1A55B3290(a1, v18[7] + 72 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

uint64_t sub_1A55B2988(char a1, uint64_t a2, unsigned int a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1A54FDC30(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1A554FE44();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v18[7] + v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = v18[6] + 16 * v12;
    *(_QWORD *)v20 = a2;
    *(_DWORD *)(v20 + 8) = a3;
    *(_BYTE *)(v18[7] + v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    goto LABEL_14;
  }
  sub_1A55825A0(result, a4 & 1);
  result = sub_1A54FDC30(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

uint64_t sub_1A55B2ADC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1A54FDC2C(a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a5 & 1) == 0)
  {
    result = (uint64_t)sub_1A55501A8();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 24 * v14;
      result = swift_bridgeObjectRelease();
      *(_BYTE *)v21 = a1;
      *(_QWORD *)(v21 + 8) = a2;
      *(_QWORD *)(v21 + 16) = a3;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    *(_DWORD *)(v20[6] + 4 * v14) = a4;
    v23 = v20[7] + 24 * v14;
    *(_BYTE *)v23 = a1;
    *(_QWORD *)(v23 + 8) = a2;
    *(_QWORD *)(v23 + 16) = a3;
    v24 = v20[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v20[2] = v26;
      return result;
    }
    goto LABEL_14;
  }
  sub_1A5582EB0(result, a5 & 1);
  result = sub_1A54FDC2C(a4);
  if ((v18 & 1) == (v22 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

void sub_1A55B2C34(char a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v6 = v5;
  v12 = *v5;
  sub_1A54FDDD4(a2, a3);
  v15 = v14;
  v16 = *(_QWORD *)(v12 + 16);
  v17 = (v13 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v19 = v13;
  v20 = *(_QWORD *)(v12 + 24);
  if (v20 >= v18 && (a5 & 1) != 0)
  {
LABEL_9:
    v23 = a1 & 1;
    v24 = (_QWORD *)*v6;
    if ((v19 & 1) != 0)
    {
      *(_BYTE *)(v24[7] + v15) = v23;
      return;
    }
    v24[(v15 >> 6) + 8] |= 1 << v15;
    v25 = (uint64_t *)(v24[6] + 24 * v15);
    *v25 = a2;
    v25[1] = a3;
    v25[2] = a4;
    *(_BYTE *)(v24[7] + v15) = v23;
    v26 = v24[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v24[2] = v28;
      sub_1A54FA300(a2, a3);
      return;
    }
    goto LABEL_14;
  }
  if (v20 >= v18 && (a5 & 1) == 0)
  {
    sub_1A5550C28();
    goto LABEL_9;
  }
  sub_1A55843F0(v18, a5 & 1);
  sub_1A54FDDD4(a2, a3);
  if ((v19 & 1) == (v22 & 1))
  {
    v15 = v21;
    goto LABEL_9;
  }
LABEL_15:
  sub_1A594CDF8();
  __break(1u);
}

uint64_t sub_1A55B2DAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1A54FDC2C(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1A5551850();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_bridgeObjectRelease();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_DWORD *)(v18[6] + 4 * v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1A5585748(result, a4 & 1);
  result = sub_1A54FDC2C(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

unint64_t *sub_1A55B2EE8(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  unint64_t *v2;
  char v3;
  unint64_t v4;
  size_t v5;
  unint64_t *v6;
  void *v7;
  _QWORD v9[2];

  v2 = (unint64_t *)isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_1A55B3038((_QWORD *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, (uint64_t)v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v2 = sub_1A55B3038((unint64_t *)v7, v4, (uint64_t)v2);
    MEMORY[0x1A85B1964](v7, -1, -1);
  }
  return v2;
}

unint64_t *sub_1A55B3038(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10)
      return (unint64_t *)sub_1A5530B60(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        return (unint64_t *)sub_1A5530B60(result, a2, v4, a3);
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          return (unint64_t *)sub_1A5530B60(result, a2, v4, a3);
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(_BYTE *)(*(_QWORD *)(a3 + 56) + v12) != 1)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1A5530B60(result, a2, v4, a3);
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    return (unint64_t *)sub_1A5530B60(result, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      return (unint64_t *)sub_1A5530B60(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A55B3184(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v3;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    v13 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A554F128();
    *v3 = v13;
    result = swift_bridgeObjectRelease();
  }
  if ((a2 & 0x8000000000000000) != 0 || (v9 = *v3, 1 << *(_BYTE *)(*v4 + 32) <= (uint64_t)a2))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(_QWORD *)(v9 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(v9 + 36) == a3)
  {
    *v4 = 0x8000000000000000;
    v10 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * a2);
    v11 = *(_QWORD *)(v9 + 56) + 16 * a2;
    v12 = *(_QWORD *)v11;
    LODWORD(v11) = *(_DWORD *)(v11 + 8);
    *(_QWORD *)a1 = v12;
    *(_DWORD *)(a1 + 8) = v11;
    sub_1A554DE10(a2, v9);
    *v4 = v9;
    swift_bridgeObjectRelease();
    return v10;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1A55B3290(uint64_t a1, uint64_t a2)
{
  assignWithTake for RemoteMailbox(a2, a1);
  return a2;
}

uint64_t storeEnumTagSinglePayload for MailboxDeletionResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A55B3318 + 4 * byte_1A59A8CF5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A55B334C + 4 * asc_1A59A8CF0[v4]))();
}

uint64_t sub_1A55B334C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55B3354(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A55B335CLL);
  return result;
}

uint64_t sub_1A55B3368(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A55B3370);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A55B3374(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55B337C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MailboxDeletionResult()
{
  return &type metadata for MailboxDeletionResult;
}

uint64_t destroy for DeleteMailboxes(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DeleteMailboxes(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for DeleteMailboxes(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for DeleteMailboxes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeleteMailboxes(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeleteMailboxes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeleteMailboxes()
{
  return &type metadata for DeleteMailboxes;
}

unint64_t sub_1A55B3600()
{
  unint64_t result;

  result = qword_1EE7A8C00;
  if (!qword_1EE7A8C00)
  {
    result = MEMORY[0x1A85B1874]("ݱT?$d\r", &type metadata for DeleteMailboxes.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C00);
  }
  return result;
}

unint64_t sub_1A55B3648()
{
  unint64_t result;

  result = qword_1EE7A8C08;
  if (!qword_1EE7A8C08)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8D6C, &type metadata for DeleteMailboxes.DeleteMailbox);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C08);
  }
  return result;
}

unint64_t sub_1A55B368C(uint64_t a1)
{
  unint64_t result;

  result = sub_1A55B36B0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A55B36B0()
{
  unint64_t result;

  result = qword_1EE7A8C10;
  if (!qword_1EE7A8C10)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8D28, &type metadata for DeleteMailboxes);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C10);
  }
  return result;
}

unint64_t sub_1A55B36F8()
{
  unint64_t result;

  result = qword_1EE7A8C18;
  if (!qword_1EE7A8C18)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8DFC, &type metadata for MailboxDeletionResult);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C18);
  }
  return result;
}

uint64_t sub_1A55B373C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Task.Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A55B3778(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v11;
  _OWORD *v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _OWORD v64[11];
  _OWORD v65[11];
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (!v3)
    return 0;
  v6 = 0;
  v7 = 0;
  while (1)
  {
    result = sub_1A5544E98(v2[v6 + 6], v2[v6 + 7], a2);
    if ((result & 1) != 0)
      break;
    ++v7;
    v6 += 22;
    if (v3 == v7)
      return v3;
  }
  v9 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v9 == v3)
      return v7;
    while (1)
    {
      v11 = v2[2];
      if (v9 >= v11)
        break;
      v12 = &v2[v6];
      result = sub_1A5544E98(v2[v6 + 28], v2[v6 + 29], a2);
      if ((result & 1) == 0)
      {
        if (v9 != v7)
        {
          if (v7 >= v11)
            goto LABEL_22;
          v13 = (__int128 *)&v2[22 * v7 + 4];
          v14 = *v13;
          v15 = v13[2];
          v67 = v13[1];
          v68 = v15;
          v66 = v14;
          v16 = v13[3];
          v17 = v13[4];
          v18 = v13[6];
          v71 = v13[5];
          v72 = v18;
          v69 = v16;
          v70 = v17;
          v19 = v13[7];
          v20 = v13[8];
          v21 = v13[10];
          v75 = v13[9];
          v76 = v21;
          v73 = v19;
          v74 = v20;
          v22 = v12[13];
          v23 = v12[15];
          v78 = v12[14];
          v79 = v23;
          v77 = v22;
          v24 = v12[16];
          v25 = v12[17];
          v26 = v12[19];
          v82 = v12[18];
          v83 = v26;
          v80 = v24;
          v81 = v25;
          v27 = v12[20];
          v28 = v12[21];
          v29 = v12[23];
          v86 = v12[22];
          v87 = v29;
          v84 = v27;
          v85 = v28;
          sub_1A54E3150((uint64_t)&v66);
          sub_1A54E3150((uint64_t)&v77);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v2 = sub_1A554B6F8(v2);
          v30 = &v2[22 * v7];
          v31 = v30[2];
          v32 = v30[4];
          v64[1] = v30[3];
          v64[2] = v32;
          v64[0] = v31;
          v33 = v30[5];
          v34 = v30[6];
          v35 = v30[8];
          v64[5] = v30[7];
          v64[6] = v35;
          v64[3] = v33;
          v64[4] = v34;
          v36 = v30[9];
          v37 = v30[10];
          v38 = v30[12];
          v64[9] = v30[11];
          v64[10] = v38;
          v64[7] = v36;
          v64[8] = v37;
          v39 = v77;
          v40 = v79;
          v30[3] = v78;
          v30[4] = v40;
          v30[2] = v39;
          v41 = v80;
          v42 = v81;
          v43 = v83;
          v30[7] = v82;
          v30[8] = v43;
          v30[5] = v41;
          v30[6] = v42;
          v44 = v84;
          v45 = v85;
          v46 = v87;
          v30[11] = v86;
          v30[12] = v46;
          v30[9] = v44;
          v30[10] = v45;
          result = sub_1A54E31EC((uint64_t)v64);
          if (v9 >= v2[2])
            goto LABEL_23;
          v47 = &v2[v6];
          v48 = *(_OWORD *)&v2[v6 + 26];
          v49 = *(_OWORD *)&v2[v6 + 30];
          v65[1] = *(_OWORD *)&v2[v6 + 28];
          v65[2] = v49;
          v65[0] = v48;
          v50 = *(_OWORD *)&v2[v6 + 32];
          v51 = *(_OWORD *)&v2[v6 + 34];
          v52 = *(_OWORD *)&v2[v6 + 38];
          v65[5] = *(_OWORD *)&v2[v6 + 36];
          v65[6] = v52;
          v65[3] = v50;
          v65[4] = v51;
          v53 = *(_OWORD *)&v2[v6 + 40];
          v54 = *(_OWORD *)&v2[v6 + 42];
          v55 = *(_OWORD *)&v2[v6 + 46];
          v65[9] = *(_OWORD *)&v2[v6 + 44];
          v65[10] = v55;
          v65[7] = v53;
          v65[8] = v54;
          v56 = v66;
          v57 = v68;
          v47[14] = v67;
          v47[15] = v57;
          v47[13] = v56;
          v58 = v69;
          v59 = v70;
          v60 = v72;
          v47[18] = v71;
          v47[19] = v60;
          v47[16] = v58;
          v47[17] = v59;
          v61 = v73;
          v62 = v74;
          v63 = v76;
          v47[22] = v75;
          v47[23] = v63;
          v47[20] = v61;
          v47[21] = v62;
          result = sub_1A54E31EC((uint64_t)v65);
          *(_QWORD *)a1 = v2;
        }
        if (__OFADD__(v7++, 1))
          goto LABEL_21;
      }
      ++v9;
      v6 += 22;
      if (v9 == v2[2])
        return v7;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A55B3A18(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;

  if (((result >> 59) & 0x1E | (result >> 2) & 1) == 0x10)
  {
    if (*(_QWORD *)(*(_QWORD *)(v1 + 48) + 16))
    {
      v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      v3 = *(_DWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      v4 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      result = sub_1A54FDC30(v2, v3);
      if ((v5 & 1) != 0)
      {
        if (*(_QWORD *)(v4 + 16))
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v7 = *(_QWORD *)(v1 + 48);
          *(_QWORD *)(v1 + 48) = 0x8000000000000000;
          sub_1A55B2988(1, v2, v3, isUniquelyReferenced_nonNull_native);
          *(_QWORD *)(v1 + 48) = v7;
          swift_bridgeObjectRelease();
        }
        else
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54F2A14((uint64_t)&v7, v2, v3);
        }
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1A55B3B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v12;
  int v13;

  v1 = *(_QWORD *)(v0 + 56);
  if (!*(_QWORD *)(v1 + 16))
    return 0;
  v2 = sub_1A5520CE0(v1);
  v4 = v3;
  v6 = v5 & 1;
  v7 = sub_1A55B3184((uint64_t)&v12, v2, v3);
  sub_1A5529B00(v2, v4, v6);
  if (v7)
  {
    v8 = v12;
    v9 = v13;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v8;
    *(_DWORD *)(v10 + 24) = v9;
    *(_QWORD *)(v10 + 32) = 1;
  }
  return v7;
}

uint64_t sub_1A55B3BE4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t initializeBufferWithCopyOfBuffer for MailboxName(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MailboxName(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy12_8_0(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for MailboxName(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeleteMailboxes.DeleteMailbox(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 12))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxName(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 12) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 12) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeleteMailboxes.DeleteMailbox()
{
  return &type metadata for DeleteMailboxes.DeleteMailbox;
}

ValueMetadata *type metadata accessor for DeleteMailboxes.ActionID()
{
  return &type metadata for DeleteMailboxes.ActionID;
}

unint64_t sub_1A55B3D88@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9, char a10)
{
  char v17;
  int v18;
  __int128 v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t result;
  uint64_t v24;

  v17 = a2 & 1;
  v18 = a10 & 1;
  *(_QWORD *)(a8 + 40) = sub_1A54F8ABC((uint64_t)&unk_1E4EF2378);
  *(_BYTE *)(a8 + 48) = 1;
  *(_QWORD *)(a8 + 112) = 0;
  *(_QWORD *)(a8 + 120) = 0;
  *(_BYTE *)(a8 + 128) = 1;
  v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a8 = *(_OWORD *)a1;
  *(_OWORD *)(a8 + 16) = v19;
  *(_DWORD *)(a8 + 32) = *(_DWORD *)(a1 + 32);
  *(_BYTE *)(a8 + 104) = v17;
  *(_BYTE *)(a8 + 105) = (a3 & 1) == 0;
  *(_QWORD *)(a8 + 56) = &type metadata for DetectChangesToMessages;
  sub_1A550F734();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  v24 = a5;
  sub_1A552D7A0(0xFFFFFFFFLL);
  v20 = a7 | ((unint64_t)BYTE4(a7) << 32);
  v21 = sub_1A56111B4(a4, v24, a6, v20, a9, v18);
  swift_bridgeObjectRelease();
  sub_1A5503B8C(a6, v20);
  v22 = sub_1A550C284((uint64_t)v21);
  swift_bridgeObjectRelease();
  result = 0;
  if (!v18)
    result = FetchedWindow.upperBound.getter(a9);
  *(_QWORD *)(a8 + 136) = v22;
  *(_DWORD *)(a8 + 144) = result;
  *(_BYTE *)(a8 + 148) = v18 != 0;
  return result;
}

uint64_t sub_1A55B3F2C()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6E0D8);
  qword_1EE7F9AA0 = result;
  return result;
}

uint64_t sub_1A55B3F50()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796240);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A59ABDA0;
  *(_QWORD *)(v0 + 32) = &type metadata for FetchSearchResultMessages;
  sub_1A550F734();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 80) = &type metadata for FindMissingMessages;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 128) = &type metadata for PurgeMessagesOutsideWindowOfInterest;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  return v0;
}

uint64_t sub_1A55B4060(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  os_log_t v27;
  uint64_t v28;
  os_log_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  _BYTE v38[152];
  uint64_t v39[18];
  char v40;
  _BYTE v41[136];
  uint64_t v42;

  v2 = v1;
  v4 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  sub_1A55034B8(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A55100F4(v2, (uint64_t)v41);
  sub_1A55100F4(v2, (uint64_t)v39);
  sub_1A55100F4(v2, (uint64_t)v38);
  v12 = sub_1A594A74C();
  v13 = sub_1A594C030();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v32 = v14;
    v16 = v15;
    v33 = swift_slowAlloc();
    v37 = v33;
    *(_DWORD *)v16 = 68160003;
    LODWORD(v35) = 2;
    v30 = v12;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 8) = 256;
    v17 = *(int *)(v4 + 20);
    v34 = v7;
    v18 = &v6[v17];
    LOBYTE(v35) = v6[v17];
    sub_1A594C3CC();
    *(_WORD *)(v16 + 11) = 2082;
    v31 = v8;
    v20 = *((_QWORD *)v18 + 1);
    v19 = *((_QWORD *)v18 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v35 = sub_1A55791B0(v20, v19, &v37);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 21) = 1040;
    LODWORD(v35) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 27) = 512;
    LOWORD(v35) = *((_WORD *)v18 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v16 + 31) = 2160;
    v35 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 41) = 2085;
    v21 = *((_DWORD *)v18 + 10);
    v35 = *((_QWORD *)v18 + 4);
    v36 = v21;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = sub_1A594B4A8();
    v35 = sub_1A55791B0(v22, v23, &v37);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v16 + 51) = 2048;
    v24 = *(_QWORD *)(v42 + 16);
    sub_1A551018C((uint64_t)v41);
    v35 = v24;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 61) = 2082;
    LOBYTE(v35) = v40;
    v25 = sub_1A5607484(v39[17]);
    v35 = sub_1A55791B0(v25, v26, &v37);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A551018C((uint64_t)v39);
    *(_WORD *)(v16 + 71) = 1024;
    LODWORD(v24) = v38[105];
    sub_1A551018C((uint64_t)v38);
    LODWORD(v35) = v24;
    sub_1A594C3CC();
    v27 = v30;
    _os_log_impl(&dword_1A4F90000, v30, (os_log_type_t)v32, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. %ld UID batch(es): %{public}s, fetching highest-mod-seq: %{BOOL}d", (uint8_t *)v16, 0x4Du);
    v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v28, -1, -1);
    MEMORY[0x1A85B1964](v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v11, v34);
  }
  else
  {
    sub_1A551018C((uint64_t)v38);
    sub_1A551018C((uint64_t)v41);
    sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    sub_1A551018C((uint64_t)v39);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t sub_1A55B44E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;

  if (!*(_QWORD *)(v4 + 112))
  {
    v9 = *(_QWORD *)(a3 + 184);
    v10 = *(_QWORD *)(a3 + 192);
    __swift_project_boxed_opaque_existential_1_0((_QWORD *)(a3 + 160), v9);
    *(_QWORD *)(v4 + 112) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
  }
  if (*(_BYTE *)(v4 + 128) == 1)
  {
    v11 = *(_QWORD *)(a3 + 200);
    if ((*(_BYTE *)(a3 + 208) & 1) == 0)
      v11 = *(_QWORD *)(v11 + 16);
    *(_QWORD *)(v4 + 120) = v11;
    *(_BYTE *)(v4 + 128) = 0;
  }
  if (*(_BYTE *)(v4 + 105))
    v12 = &unk_1E4E6DE78;
  else
    v12 = &unk_1E4E6E068;
  v13 = &unk_1E4E6DF10;
  if (*(_BYTE *)(v4 + 105))
    v13 = &unk_1E4E6DFA8;
  if (*(_BYTE *)(v4 + 104))
    v14 = (uint64_t)v12;
  else
    v14 = (uint64_t)v13;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55B45F4(a1, a2, v14, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A55B45F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51[2];
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  int v60;
  uint64_t v61;
  unsigned int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v56 = a2;
  v71 = a1;
  v73 = type metadata accessor for TaskHistory.Previous(0);
  v67 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v51 - v10;
  v12 = *v4;
  v53 = *(_QWORD *)(*v4 + 16);
  if (!v53)
  {
LABEL_22:
    v43 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8C40);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(a4, 1, 1, v43);
  }
  v51[0] = a3;
  v52 = a4;
  v55 = v12 + 32;
  v51[1] = v12;
  swift_bridgeObjectRetain_n();
  v13 = 0;
  v66 = 0;
LABEL_3:
  v69 = v13;
  v70 = v51;
  v14 = v55 + 56 * v13;
  v15 = *(_QWORD *)(v14 + 8);
  v16 = *(_QWORD *)(v14 + 24);
  v17 = *(unsigned int *)(v14 + 32);
  v18 = *(unsigned __int8 *)(v14 + 36);
  v19 = *(_QWORD *)(v14 + 40);
  v20 = *(unsigned int *)(v14 + 48);
  v21 = *(unsigned __int8 *)(v14 + 52);
  v54 = *(_QWORD *)v14;
  v75 = v54;
  MEMORY[0x1E0C80A78](v15);
  v51[-2] = (uint64_t)&v75;
  v64 = v22;
  v65 = v23;
  v72 = v24;
  sub_1A54E4334(v22, v23, v24);
  v58 = v16;
  v59 = v17;
  v60 = v18;
  sub_1A54E4334(v16, v17, v18);
  v61 = v19;
  v62 = v20;
  v63 = v21;
  sub_1A54E4334(v19, v20, v21);
  v25 = v56;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v26 = v25;
  v27 = v66;
  v28 = sub_1A5627844((uint64_t)sub_1A55B9A28, (uint64_t)&v51[-4], v26);
  v66 = v27;
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    v74 = MEMORY[0x1E0DEE9D8];
    v70 = (uint64_t *)v28;
    sub_1A54F4F58(0, v29, 0);
    v30 = v70;
    v31 = v74;
    v32 = *(_QWORD *)(v74 + 16);
    v33 = 4;
    do
    {
      v34 = v30[v33];
      v74 = v31;
      v35 = *(_QWORD *)(v31 + 24);
      if (v32 >= v35 >> 1)
      {
        sub_1A54F4F58(v35 > 1, v32 + 1, 1);
        v30 = v70;
        v31 = v74;
      }
      *(_QWORD *)(v31 + 16) = v32 + 1;
      *(_DWORD *)(v31 + 4 * v32 + 32) = v34;
      v33 += 2;
      ++v32;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x1E0DEE9D8];
  }
  v57 = v72;
  v70 = *(uint64_t **)(v31 + 16);
  if (v70)
  {
    v68 = v31 + 32;
    ++v69;
    v72 = *(_QWORD *)(v71 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v36 = 0;
    while (!v72)
    {
LABEL_13:
      if ((uint64_t *)++v36 == v70)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_25;
      }
    }
    v37 = v67;
    v38 = *(_DWORD *)(v68 + 4 * v36);
    v39 = v71 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v40 = *(_QWORD *)(v37 + 72);
    v41 = v72;
    while (1)
    {
      sub_1A55034B8(v39, (uint64_t)v11, type metadata accessor for TaskHistory.Previous);
      sub_1A55034B8((uint64_t)v11, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A55034FC((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
      }
      else
      {
        v42 = *(_DWORD *)&v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
        sub_1A55034FC((uint64_t)v8, type metadata accessor for ClientCommand);
        if (v42 == v38)
        {
          sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          sub_1A54E3458(v64, v65, v57);
          sub_1A54E3458(v58, v59, v60);
          sub_1A54E3458(v61, v62, v63);
          v13 = v69;
          if (v69 == v53)
          {
            swift_bridgeObjectRelease_n();
            a4 = v52;
            goto LABEL_22;
          }
          goto LABEL_3;
        }
      }
      sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
      v39 += v40;
      if (!--v41)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_25:
  swift_bridgeObjectRelease();
  v46 = v64;
  v45 = v65;
  v47 = v57;
  sub_1A54E4334(v64, v65, v57);
  sub_1A54E3458(v46, v45, v47);
  sub_1A54E3458(v58, v59, v60);
  sub_1A54E3458(v61, v62, v63);
  v48 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8C40);
  v49 = v52;
  v50 = (uint64_t)v52 + *(int *)(v48 + 48);
  *v52 = v54;
  static ClientCommand.uidFetch(messages:items:)(v46, v45 | (v47 << 32), v51[0], v50);
  sub_1A54E3458(v46, v45, v47);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v49, 0, 1, v48);
}

void sub_1A55B4AF8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  NSObject *v29;
  int v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  NSObject *v40;
  int v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  os_log_t v54;
  uint64_t v55;
  char *v56;
  os_log_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  unint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  os_log_t v76;
  os_log_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;

  v81 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v81);
  v85 = (uint64_t)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v73 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v73 - v11;
  v86 = sub_1A594A764();
  v87 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v84 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v73 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v73 - v18;
  v20 = *(_QWORD *)(a2 + 112);
  if (v20)
  {
    v21 = a1[23];
    v22 = a1[24];
    __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)(a1 + 20), v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v20, v21, v22);
  }
  v23 = a1[23];
  v24 = a1[24];
  v82 = a1;
  v80 = a1 + 20;
  __swift_project_boxed_opaque_existential_1_0(a1 + 20, v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24);
  v26 = *(NSObject **)(v25 + 16);
  swift_release();
  swift_release();
  swift_release();
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
  v77 = v26;
  v83 = a2;
  v79 = v27;
  if (v26)
  {
    v28 = v86;
    v27(v19, a3, v86);
    sub_1A55034B8(a3, (uint64_t)v12, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A55100F4(a2, (uint64_t)&v91);
    v29 = sub_1A594A74C();
    v30 = sub_1A594C030();
    if (os_log_type_enabled(v29, (os_log_type_t)v30))
    {
      LODWORD(v75) = v30;
      v76 = v29;
      v78 = a3;
      v31 = swift_slowAlloc();
      v74 = swift_slowAlloc();
      v90 = v74;
      *(_DWORD *)v31 = 68159747;
      LODWORD(v88) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v31 + 8) = 256;
      v32 = &v12[*(int *)(v81 + 20)];
      LOBYTE(v88) = *v32;
      sub_1A594C3CC();
      *(_WORD *)(v31 + 11) = 2082;
      v33 = *((_QWORD *)v32 + 1);
      v34 = *((_QWORD *)v32 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v88 = sub_1A55791B0(v33, v34, &v90);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 21) = 1040;
      LODWORD(v88) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v31 + 27) = 512;
      LOWORD(v88) = *((_WORD *)v32 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v31 + 31) = 2160;
      v88 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v31 + 41) = 2085;
      v35 = *((_DWORD *)v32 + 10);
      v88 = *((_QWORD *)v32 + 4);
      v89 = v35;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v36 = sub_1A594B4A8();
      v88 = sub_1A55791B0(v36, v37, &v90);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v31 + 51) = 2048;
      if (v93)
        v38 = *(_QWORD *)(v93 + 16);
      else
        v38 = 0;
      v52 = v84;
      v49 = (uint64_t)v82;
      sub_1A551018C((uint64_t)&v91);
      v88 = v38;
      sub_1A594C3CC();
      *(_WORD *)(v31 + 61) = 2048;
      v88 = (uint64_t)v77;
      sub_1A594C3CC();
      v54 = v76;
      _os_log_impl(&dword_1A4F90000, v76, (os_log_type_t)v75, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld changes without UID, still %ld remaining.", (uint8_t *)v31, 0x47u);
      v55 = v74;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v55, -1, -1);
      MEMORY[0x1A85B1964](v31, -1, -1);

      v51 = *(void (**)(char *, uint64_t))(v87 + 8);
      v56 = v19;
      goto LABEL_18;
    }
    sub_1A551018C((uint64_t)&v91);
    sub_1A55034FC((uint64_t)v12, type metadata accessor for MailboxTaskLogger);

    v51 = *(void (**)(char *, uint64_t))(v87 + 8);
    v51(v19, v28);
  }
  else
  {
    v39 = v16;
    v28 = v86;
    v27(v16, a3, v86);
    sub_1A55034B8(a3, (uint64_t)v9, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A55100F4(a2, (uint64_t)&v91);
    v40 = sub_1A594A74C();
    v41 = sub_1A594C030();
    if (os_log_type_enabled(v40, (os_log_type_t)v41))
    {
      LODWORD(v76) = v41;
      v77 = v40;
      v78 = a3;
      v42 = swift_slowAlloc();
      v75 = swift_slowAlloc();
      v90 = v75;
      *(_DWORD *)v42 = 68159491;
      LODWORD(v88) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v42 + 8) = 256;
      v43 = &v9[*(int *)(v81 + 20)];
      LOBYTE(v88) = *v43;
      sub_1A594C3CC();
      *(_WORD *)(v42 + 11) = 2082;
      v45 = *((_QWORD *)v43 + 1);
      v44 = *((_QWORD *)v43 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v88 = sub_1A55791B0(v45, v44, &v90);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 21) = 1040;
      LODWORD(v88) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v42 + 27) = 512;
      LOWORD(v88) = *((_WORD *)v43 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v42 + 31) = 2160;
      v88 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v42 + 41) = 2085;
      v46 = *((_DWORD *)v43 + 10);
      v88 = *((_QWORD *)v43 + 4);
      v89 = v46;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v47 = sub_1A594B4A8();
      v88 = sub_1A55791B0(v47, v48, &v90);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v9, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v42 + 51) = 2048;
      v49 = (uint64_t)v82;
      if (v93)
        v50 = *(_QWORD *)(v93 + 16);
      else
        v50 = 0;
      v52 = v84;
      sub_1A551018C((uint64_t)&v91);
      v88 = v50;
      sub_1A594C3CC();
      v57 = v77;
      _os_log_impl(&dword_1A4F90000, v77, (os_log_type_t)v76, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed all %ld changes without UID.", (uint8_t *)v42, 0x3Du);
      v58 = v75;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v58, -1, -1);
      MEMORY[0x1A85B1964](v42, -1, -1);

      v51 = *(void (**)(char *, uint64_t))(v87 + 8);
      v56 = v39;
LABEL_18:
      v28 = v86;
      v51(v56, v86);
      a3 = v78;
      v53 = v85;
      if ((*(_BYTE *)(v49 + 32) & 1) != 0)
        goto LABEL_23;
      goto LABEL_19;
    }
    sub_1A551018C((uint64_t)&v91);
    sub_1A55034FC((uint64_t)v9, type metadata accessor for MailboxTaskLogger);

    v51 = *(void (**)(char *, uint64_t))(v87 + 8);
    v51(v16, v28);
  }
  v52 = v84;
  v53 = v85;
  v49 = (uint64_t)v82;
  if ((v82[4] & 1) != 0)
    goto LABEL_23;
LABEL_19:
  v59 = *(_QWORD *)(v49 + 24);
  v79(v52, a3, v28);
  sub_1A55034B8(a3, v53, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v60 = sub_1A594A74C();
  v61 = sub_1A594C030();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = swift_slowAlloc();
    v79 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
    v88 = (uint64_t)v79;
    *(_DWORD *)v62 = 68159491;
    LODWORD(v91) = 2;
    v82 = (_QWORD *)v59;
    sub_1A594C3CC();
    *(_WORD *)(v62 + 8) = 256;
    v63 = *(int *)(v81 + 20);
    v78 = a3;
    v64 = v53 + v63;
    LOBYTE(v91) = *(_BYTE *)(v53 + v63);
    sub_1A594C3CC();
    *(_WORD *)(v62 + 11) = 2082;
    v66 = *(_QWORD *)(v64 + 8);
    v65 = *(_QWORD *)(v64 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v91 = sub_1A55791B0(v66, v65, &v88);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v62 + 21) = 1040;
    LODWORD(v91) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v62 + 27) = 512;
    LOWORD(v91) = *(_WORD *)(v64 + 24);
    v59 = (uint64_t)v82;
    sub_1A594C3CC();
    *(_WORD *)(v62 + 31) = 2160;
    v91 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v62 + 41) = 2085;
    v67 = *(_DWORD *)(v64 + 40);
    v91 = *(_QWORD *)(v64 + 32);
    v92 = v67;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v68 = sub_1A594B4A8();
    v91 = sub_1A55791B0(v68, v69, &v88);
    a3 = v78;
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v85, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v62 + 51) = 2048;
    v91 = v59;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v60, v61, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Setting mailbox HIGHESTMODSEQ to %llu.", (uint8_t *)v62, 0x3Du);
    v70 = v79;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v70, -1, -1);
    MEMORY[0x1A85B1964](v62, -1, -1);

    (*(void (**)(char *, uint64_t))(v87 + 8))(v84, v86);
  }
  else
  {
    sub_1A55034FC(v53, type metadata accessor for MailboxTaskLogger);

    v51(v52, v28);
  }
  v71 = *(_QWORD *)(v49 + 184);
  v72 = *(_QWORD *)(v49 + 192);
  __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)v80, v71);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 64))(v59, a3, v71, v72);
LABEL_23:
  sub_1A5608C50(v49, *(_QWORD *)(v83 + 120), *(unsigned __int8 *)(v83 + 128), a3, *(_QWORD *)(v83 + 136), *(unsigned int *)(v83 + 144) | ((unint64_t)*(unsigned __int8 *)(v83 + 148) << 32));
}

uint64_t sub_1A55B57F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  int v5;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_WORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_DWORD *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A55B5834()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A55B583C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_1A55B584C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v9 = *(unsigned int *)(v5 + 144);
  v11 = *(_QWORD *)v5;
  v12 = *(_QWORD *)(v5 + 8);
  v10 = *(_BYTE *)(v5 + 148);
  v21 = *(_QWORD *)(v5 + 136);
  result = sub_1A55B82A0(*(_QWORD *)v5, v12, a2, a4, v21);
  v16 = v15;
  if ((_BYTE)v15 == 0xFF)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v17 = sub_1A55B5B74(v11, v12, a1, a2, a3, a4, v21, v9 | ((unint64_t)v10 << 32));
    v16 = v18;
    v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v17 = result;
    v20 = v14;
  }
  *a5 = v17;
  a5[1] = v16;
  a5[2] = v20;
  return result;
}

uint64_t sub_1A55B5978(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = *(_QWORD *)(v7 + 136);
  v8 = v7 + 136;
  result = sub_1A55B8A48(a1, a2, a3, a4, a7, v9);
  if (BYTE4(v12) != 255)
  {
    v13 = result;
    v14 = v11;
    v15 = v12;
    sub_1A56125FC(result, v8, v11, v12 & 0xFFFFFFFFFFLL);
    return sub_1A55B9994(v13, v14, v15);
  }
  return result;
}

uint64_t sub_1A55B5A08(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(v5 + 8);
  v11 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55B9684(v11, v10, a1, a2, a3, a5);
  return swift_bridgeObjectRelease();
}

void sub_1A55B5A70(uint64_t *a1, unint64_t a2, uint64_t a3, void *a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5607AA8(*a1, a2, a3, a4, a5, 0, a7, *(_QWORD *)(v7 + 136));
}

uint64_t sub_1A55B5AB0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  v3 = *(_QWORD *)(v2 + 24);
  v4 = *(_DWORD *)(v2 + 32);
  v10[3] = a2;
  if (*(_BYTE *)(result + 168) == 1)
  {
    v5 = result;
    v7 = *(_QWORD *)(result + 152);
    v6 = *(_QWORD *)(result + 160);
    v11 = *(_QWORD *)(result + 144);
    v8 = v11;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A551C6E4((uint64_t)&v11, v3, v4, 0, (void (*)(uint64_t))sub_1A55B8298, v10);
    result = sub_1A54E8FCC(v8, v7, v6, 1);
    v9 = v11;
    *(_QWORD *)(v5 + 152) = 0;
    *(_QWORD *)(v5 + 160) = 0;
    *(_QWORD *)(v5 + 144) = v9;
    *(_BYTE *)(v5 + 168) = 1;
  }
  return result;
}

unint64_t sub_1A55B5B58()
{
  return 0xD000000000000017;
}

uint64_t sub_1A55B5B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  ValueMetadata *v76;
  int64_t Kind;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  unint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  BOOL v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  int v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  int v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  char v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  ValueMetadata *v159;
  uint64_t v160;
  uint64_t v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  int64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  int v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  int v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t result;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unsigned int v234;
  int v235;
  unint64_t v236;
  unint64_t v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  unint64_t v241;
  unint64_t v242;
  ValueMetadata *v243;
  uint64_t v244;
  uint64_t v245;
  unsigned int v246;
  int v247;
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  uint64_t *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  int v268;
  uint64_t v269;
  char v270;
  unint64_t v271;

  v267 = a8;
  v216 = a2;
  v217 = a1;
  v262 = type metadata accessor for TaskHistory.Running(0);
  v252 = *(_QWORD *)(v262 - 8);
  MEMORY[0x1E0C80A78](v262);
  v14 = (char *)&v216 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v226 = (uint64_t)&v216 - v16;
  MEMORY[0x1E0C80A78](v17);
  v256 = (char *)&v216 - v18;
  MEMORY[0x1E0C80A78](v19);
  v251 = (uint64_t)&v216 - v20;
  MEMORY[0x1E0C80A78](v21);
  v258 = (uint64_t)&v216 - v22;
  MEMORY[0x1E0C80A78](v23);
  v254 = (uint64_t)&v216 - v24;
  MEMORY[0x1E0C80A78](v25);
  v263 = (char *)&v216 - v26;
  MEMORY[0x1E0C80A78](v27);
  v261 = (uint64_t)&v216 - v28;
  v266 = type metadata accessor for TaskHistory.Previous(0);
  v240 = *(_QWORD *)(v266 - 8);
  MEMORY[0x1E0C80A78](v266);
  v223 = (char *)&v216 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v230 = (uint64_t)&v216 - v31;
  MEMORY[0x1E0C80A78](v32);
  v219 = (char *)&v216 - v33;
  MEMORY[0x1E0C80A78](v34);
  v244 = (uint64_t)&v216 - v35;
  MEMORY[0x1E0C80A78](v36);
  v220 = (char *)&v216 - v37;
  MEMORY[0x1E0C80A78](v38);
  v257 = (uint64_t)&v216 - v39;
  MEMORY[0x1E0C80A78](v40);
  v260 = (uint64_t)&v216 - v41;
  MEMORY[0x1E0C80A78](v42);
  v265 = (uint64_t)&v216 - v43;
  MEMORY[0x1E0C80A78](v44);
  v229 = (char *)&v216 - v45;
  MEMORY[0x1E0C80A78](v46);
  v259 = (uint64_t)&v216 - v47;
  MEMORY[0x1E0C80A78](v48);
  v50 = (uint64_t)&v216 - v49;
  MEMORY[0x1E0C80A78](v51);
  v53 = (uint64_t)&v216 - v52;
  MEMORY[0x1E0C80A78](v54);
  v56 = (char *)&v216 - v55;
  MEMORY[0x1E0C80A78](v57);
  v59 = (char *)&v216 - v58;
  v60 = *(_QWORD *)(a7 + 16);
  v255 = a4;
  v231 = a6;
  if (!v60)
  {
    if ((v267 & 0x100000000) != 0)
      return 0;
    v123 = sub_1A55B0288(-1, 1, v231);
    v124 = *(_QWORD *)(v123 + 16);
    if (v124)
    {
      v125 = 0;
      v262 = v123;
      v265 = v123 + 32;
      v126 = *(char **)(a4 + 16);
      v263 = v126;
      v264 = (uint64_t *)v124;
      do
      {
        if (v126)
        {
          v127 = *(_DWORD *)(v265 + 4 * v125);
          v128 = v240;
          v129 = v255 + ((*(unsigned __int8 *)(v240 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v240 + 80));
          swift_bridgeObjectRetain_n();
          v130 = *(_QWORD *)(v128 + 72);
          do
          {
            sub_1A55034B8(v129, (uint64_t)v59, type metadata accessor for TaskHistory.Previous);
            sub_1A55034B8((uint64_t)v59, (uint64_t)v56, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v131 = *((_DWORD *)v56 + 2);
              swift_release();
              if (v131 == v127)
              {
                sub_1A55034FC((uint64_t)v59, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                return 0;
              }
            }
            else
            {
              sub_1A55034FC((uint64_t)v56, type metadata accessor for TaskHistory.Previous);
            }
            sub_1A55034FC((uint64_t)v59, type metadata accessor for TaskHistory.Previous);
            v129 += v130;
            --v126;
          }
          while (v126);
          swift_bridgeObjectRelease_n();
          v126 = v263;
          v124 = (uint64_t)v264;
        }
        ++v125;
      }
      while (v125 != v124);
    }
    goto LABEL_188;
  }
  v227 = v60;
  v228 = a7 + 32;
  v249 = a3;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v242 = a5;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v218 = a7;
  v61 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v62 = 0;
  v250 = 0;
  v224 = v14;
  while (1)
  {
    v267 = (uint64_t)&v216;
    v239 = v62;
    v65 = v228 + 56 * v62;
    v66 = *(_QWORD *)v65;
    v67 = *(_QWORD *)(v65 + 8);
    v68 = *(unsigned int *)(v65 + 16);
    LODWORD(v69) = *(unsigned __int8 *)(v65 + 20);
    v70 = *(_QWORD *)(v65 + 24);
    v71 = *(unsigned int *)(v65 + 32);
    v72 = *(unsigned __int8 *)(v65 + 36);
    v245 = *(_QWORD *)(v65 + 40);
    v246 = *(_DWORD *)(v65 + 48);
    v247 = *(unsigned __int8 *)(v65 + 52);
    v232 = v66;
    v269 = v66;
    MEMORY[0x1E0C80A78](v61);
    v264 = &v216 - 4;
    *(&v216 - 2) = (uint64_t)&v269;
    v73 = v242;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v233 = v67;
    v234 = v68;
    v235 = v69;
    sub_1A54E4334(v67, v68, v69);
    v236 = v70;
    LODWORD(v237) = v71;
    LODWORD(v238) = v72;
    sub_1A54E4334(v70, v71, v72);
    sub_1A54E4334(v245, v246, v247);
    v74 = v73;
    v75 = v250;
    v76 = (ValueMetadata *)sub_1A5627844((uint64_t)sub_1A55B99B4, (uint64_t)v264, v74);
    v250 = v75;
    Kind = v76[1].Kind;
    if (Kind)
    {
      v271 = MEMORY[0x1E0DEE9D8];
      sub_1A54F4F58(0, Kind, 0);
      v78 = v271;
      v79 = *(_QWORD *)(v271 + 16);
      v80 = 2;
      do
      {
        v81 = v76[v80].Kind;
        v271 = v78;
        v82 = *(_QWORD *)(v78 + 24);
        v69 = v79 + 1;
        if (v79 >= v82 >> 1)
        {
          sub_1A54F4F58(v82 > 1, v79 + 1, 1);
          v78 = v271;
        }
        *(_QWORD *)(v78 + 16) = v69;
        *(_DWORD *)(v78 + 4 * v79 + 32) = v81;
        ++v80;
        ++v79;
        --Kind;
      }
      while (Kind);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v78 = MEMORY[0x1E0DEE9D8];
    }
    v83 = v255;
    v84 = *(_QWORD *)(v78 + 16);
    if (v84)
      break;
LABEL_3:
    swift_bridgeObjectRelease();
LABEL_4:
    v63 = v247;
    v64 = v246;
    sub_1A54E3458(v233, v234, v235);
    sub_1A54E3458(v236, v237, v238);
    v61 = sub_1A54E3458(v245, v64, v63);
    v62 = v239 + 1;
    if (v239 + 1 == v227)
    {
      v102 = v227;
LABEL_77:
      v106 = v102;
      v50 = v231;
      goto LABEL_89;
    }
  }
  v264 = *(uint64_t **)(v255 + 16);
  v243 = (ValueMetadata *)(v78 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v85 = 0;
  v225 = v84;
  while (!v264)
  {
LABEL_15:
    if (++v85 == v84)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_4;
    }
  }
  v253 = v85;
  v86 = *((_DWORD *)&v243->Kind + v85);
  v87 = v240;
  v241 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  v76 = (ValueMetadata *)(v83 + v241);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v267 = *(_QWORD *)(v87 + 72);
  v69 = (uint64_t)v264;
  while (1)
  {
    sub_1A55034B8((uint64_t)v76, v53, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8(v53, v50, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    sub_1A55034FC(v50, type metadata accessor for TaskHistory.Previous);
LABEL_19:
    sub_1A55034FC(v53, type metadata accessor for TaskHistory.Previous);
    v76 = (ValueMetadata *)((char *)v76 + v267);
    if (!--v69)
    {
LABEL_14:
      swift_bridgeObjectRelease();
      v85 = v253;
      goto LABEL_15;
    }
  }
  v88 = *(_DWORD *)(v50 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48));
  sub_1A55034FC(v50, type metadata accessor for ClientCommand);
  if (v88 != v86)
    goto LABEL_19;
  sub_1A55034FC(v53, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v89 = *(_QWORD *)(v249 + 16);
  v248 = v89;
  if (v89)
  {
    v90 = v252;
    v76 = (ValueMetadata *)(v249
                          + ((*(unsigned __int8 *)(v252 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v252 + 80)));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v69 = *(_QWORD *)(v90 + 72);
    v91 = (uint64_t)v263;
    v92 = v261;
    do
    {
      sub_1A55034B8((uint64_t)v76, v92, type metadata accessor for TaskHistory.Running);
      sub_1A55034B8(v92, v91, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A55034FC(v91, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        v93 = *((_DWORD *)v263 + 2);
        v94 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
        sub_1A55034FC((uint64_t)&v263[*(int *)(v94 + 64)], type metadata accessor for ClientCommand);
        v95 = v93 == v86;
        v91 = (uint64_t)v263;
        if (v95)
        {
          sub_1A55034FC(v261, type metadata accessor for TaskHistory.Running);
          v83 = v255;
          v84 = v225;
          goto LABEL_14;
        }
      }
      v92 = v261;
      sub_1A55034FC(v261, type metadata accessor for TaskHistory.Running);
      v76 = (ValueMetadata *)((char *)v76 + v69);
      --v89;
    }
    while (v89);
    swift_bridgeObjectRelease();
    v96 = v249;
    v83 = v255;
  }
  else
  {
    v96 = v249;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v97 = v231;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v98 = sub_1A55B0288(v232, 0, v97);
  v99 = v98;
  v253 = *(_QWORD *)(v98 + 16);
  if (!v253)
    goto LABEL_36;
  v100 = *(_DWORD *)(v98 + 32);
  v243 = (ValueMetadata *)(v99 + 32);
  v69 = v83;
  v101 = v83;
  v102 = v250;
  v103 = sub_1A55B8768(v100, v96, v101);
  v250 = v102;
  v104 = (unint64_t)v229;
  if ((v103 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_60;
  }
  if (v253 == 1)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  v222 = v69 + v241;
  v105 = 1;
  v221 = v99;
LABEL_39:
  v106 = v105 + 1;
  if (__OFADD__(v105, 1))
  {
LABEL_194:
    __break(1u);
LABEL_195:
    __break(1u);
LABEL_196:
    __break(1u);
LABEL_197:
    __break(1u);
    goto LABEL_198;
  }
  LODWORD(v76) = *((_DWORD *)&v243->Kind + v105);
  v225 = v105 + 1;
  swift_bridgeObjectRetain_n();
  v107 = 0;
  v108 = v222;
  while (1)
  {
    v109 = (uint64_t *)(v107 + 1);
    if (__OFADD__(v107, 1))
      goto LABEL_186;
    v96 = v259;
    v102 = (unint64_t)type metadata accessor for TaskHistory.Previous;
    sub_1A55034B8(v108, v259, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8(v96, v104, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC(v104, type metadata accessor for TaskHistory.Previous);
LABEL_42:
    sub_1A55034FC(v259, type metadata accessor for TaskHistory.Previous);
    ++v107;
    v108 += v267;
    if (v109 == v264)
    {
      LOBYTE(v69) = v255;
LABEL_57:
      swift_bridgeObjectRelease_n();
      v105 = v225;
      if (v106 == v253)
        goto LABEL_36;
      goto LABEL_39;
    }
  }
  v110 = *(_DWORD *)(v104 + 8);
  swift_release();
  v95 = v110 == (_DWORD)v76;
  v96 = v258;
  if (!v95)
    goto LABEL_42;
  sub_1A55034FC(v259, type metadata accessor for TaskHistory.Previous);
  v69 = v255;
  swift_bridgeObjectRelease_n();
  if (v248)
  {
    v111 = v249 + ((*(unsigned __int8 *)(v252 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v252 + 80));
    v112 = swift_bridgeObjectRetain_n();
    v69 = 0;
    do
    {
      v114 = v69 + 1;
      if (__OFADD__(v69, 1))
      {
        __break(1u);
        goto LABEL_191;
      }
      v115 = v254;
      v102 = (unint64_t)type metadata accessor for TaskHistory.Running;
      sub_1A55034B8(v111 + *(_QWORD *)(v252 + 72) * v69, v254, type metadata accessor for TaskHistory.Running);
      sub_1A55034B8(v115, v96, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v116 = *(_DWORD *)(v258 + 4);
        swift_release();
        v95 = v116 == (_DWORD)v76;
        v96 = v258;
        v104 = (unint64_t)v229;
        if (v95)
        {
          sub_1A55034FC(v254, type metadata accessor for TaskHistory.Running);
          LOBYTE(v69) = v255;
          goto LABEL_57;
        }
      }
      else
      {
        sub_1A55034FC(v96, type metadata accessor for TaskHistory.Running);
      }
      v112 = sub_1A55034FC(v254, type metadata accessor for TaskHistory.Running);
      ++v69;
    }
    while (v114 != v248);
    swift_bridgeObjectRelease();
    v96 = v249;
    swift_bridgeObjectRelease_n();
    v69 = v255;
  }
  else
  {
    v96 = v249;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_60:
  v117 = v231;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v118 = sub_1A55B0288(v232, 1, v117);
  v104 = v118;
  v253 = *(_QWORD *)(v118 + 16);
  if (v253)
  {
    v102 = 0;
    v232 = v118;
    v119 = v118 + 32;
    v76 = (ValueMetadata *)(v69 + v241);
    v96 = v260;
    v248 = v118 + 32;
    v243 = (ValueMetadata *)(v69 + v241);
    do
    {
      v104 = *(unsigned int *)(v119 + 4 * v102++);
      swift_bridgeObjectRetain_n();
      v120 = 0;
      do
      {
        v69 = v120 + 1;
        if (__OFADD__(v120, 1))
        {
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          swift_bridgeObjectRelease();
          LODWORD(v271) = 1;
          v268 = v267;
          v205 = sub_1A54E3414();
          static MessageIdentifier.... infix(_:_:)();
          v271 = v269;
          MessageIdentifierSet.init(_:)((uint64_t)&v271, (uint64_t)&type metadata for UID, v205, v206);
          v208 = v207;
          v210 = v209;
          v211 = HIDWORD(v209);
          v212 = swift_allocObject();
          v213 = v216;
          *(_QWORD *)(v212 + 16) = v217;
          *(_QWORD *)(v212 + 24) = v213;
          *(_QWORD *)(v212 + 32) = v208;
          *(_DWORD *)(v212 + 40) = v210;
          *(_BYTE *)(v212 + 44) = v211;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          return -1;
        }
        v121 = v265;
        sub_1A55034B8((uint64_t)v76, v265, type metadata accessor for TaskHistory.Previous);
        sub_1A55034B8(v121, v96, type metadata accessor for TaskHistory.Previous);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v122 = *(_DWORD *)(v260 + 8);
          swift_release();
          v95 = v122 == (_DWORD)v104;
          v96 = v260;
          if (v95)
          {
            sub_1A55034FC(v265, type metadata accessor for TaskHistory.Previous);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_4;
          }
        }
        else
        {
          sub_1A55034FC(v96, type metadata accessor for TaskHistory.Previous);
        }
        sub_1A55034FC(v265, type metadata accessor for TaskHistory.Previous);
        ++v120;
        v76 = (ValueMetadata *)((char *)v76 + v267);
      }
      while ((uint64_t *)v69 != v264);
      v69 = v255;
      swift_bridgeObjectRelease_n();
      v119 = v248;
      v76 = v243;
    }
    while (v102 != v253);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v50 = v231;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A54E3458(v233, v234, v235);
  sub_1A54E3458(v236, v237, v238);
  sub_1A54E3458(v245, v246, v247);
  v132 = v227;
  v106 = v239;
  if (v239 == v227)
  {
LABEL_88:
    v106 = v132;
    v102 = v132;
    goto LABEL_89;
  }
  v265 = v69 + v241;
  while (2)
  {
    if (v106 >= v132)
      goto LABEL_199;
    v143 = v228 + 56 * v106;
    v144 = *(_QWORD *)(v143 + 8);
    v145 = *(unsigned int *)(v143 + 16);
    v146 = *(unsigned __int8 *)(v143 + 20);
    v147 = *(_QWORD *)(v143 + 24);
    v263 = (char *)*(unsigned int *)(v143 + 32);
    v264 = (uint64_t *)v147;
    v53 = *(unsigned __int8 *)(v143 + 36);
    v148 = *(_QWORD *)(v143 + 40);
    v149 = *(unsigned int *)(v143 + 48);
    v150 = *(unsigned __int8 *)(v143 + 52);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v260 = v144;
    LODWORD(v259) = v145;
    v151 = v145;
    v96 = v150;
    LODWORD(v258) = v146;
    v152 = v146;
    v69 = (uint64_t)v263;
    v50 = (uint64_t)v264;
    sub_1A54E4334(v144, v151, v152);
    sub_1A54E4334(v50, v69, v53);
    sub_1A54E4334(v148, v149, v96);
    v104 = sub_1A54E3414();
    v261 = v149;
    v153 = v237 & 0xFFFFFF0000000000 | v149 | (v96 << 32);
    v236 = v236 & 0xFFFFFF0000000000 | v69 | (v53 << 32);
    v102 = v148;
    v154 = v148;
    v237 = v153;
    v76 = &type metadata for UID;
    MessageIdentifierSet.subtracting(_:)(v50, v236, v154, v153);
    v112 = MessageIdentifierSetNonEmpty.init(set:)(v156, v155 & 0xFFFFFFFFFFLL);
    if (BYTE4(v113) != 255)
      goto LABEL_192;
    sub_1A54E3458(v260, v259, v258);
    sub_1A54E3458(v50, v69, v53);
    sub_1A54E3458(v102, v261, v96);
    v157 = swift_bridgeObjectRelease();
    ++v106;
LABEL_101:
    v102 = v227;
    if (v106 == v227)
      goto LABEL_77;
    if (v106 >= v227)
      goto LABEL_195;
    v264 = &v216;
    v239 = v106;
    v158 = v228 + 56 * v106;
    v159 = *(ValueMetadata **)v158;
    v160 = *(_QWORD *)(v158 + 8);
    v161 = *(unsigned int *)(v158 + 16);
    v162 = *(unsigned __int8 *)(v158 + 20);
    v96 = *(_QWORD *)(v158 + 24);
    v69 = *(unsigned int *)(v158 + 32);
    LODWORD(v76) = *(unsigned __int8 *)(v158 + 36);
    v163 = *(_QWORD *)(v158 + 40);
    LODWORD(v261) = *(_DWORD *)(v158 + 48);
    LODWORD(v263) = *(unsigned __int8 *)(v158 + 52);
    v243 = v159;
    v269 = (uint64_t)v159;
    MEMORY[0x1E0C80A78](v157);
    *(&v216 - 2) = (uint64_t)&v269;
    v164 = v242;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v245 = v160;
    v246 = v161;
    v247 = v162;
    sub_1A54E4334(v160, v161, v162);
    v248 = v96;
    LODWORD(v253) = v69;
    LODWORD(v254) = (_DWORD)v76;
    sub_1A54E4334(v96, v69, (char)v76);
    v258 = v163;
    sub_1A54E4334(v163, v261, (char)v263);
    v165 = v164;
    v166 = v250;
    v167 = sub_1A5627844((uint64_t)sub_1A55B9A28, (uint64_t)(&v216 - 4), v165);
    v250 = v166;
    v168 = *(_QWORD *)(v167 + 16);
    if (v168)
    {
      v271 = MEMORY[0x1E0DEE9D8];
      sub_1A54F4F58(0, v168, 0);
      v169 = v271;
      v96 = *(_QWORD *)(v271 + 16);
      v170 = 32;
      v171 = (uint64_t)v223;
      do
      {
        v172 = *(_DWORD *)(v167 + v170);
        v271 = v169;
        v173 = *(_QWORD *)(v169 + 24);
        v69 = v96 + 1;
        if (v96 >= v173 >> 1)
        {
          sub_1A54F4F58(v173 > 1, v96 + 1, 1);
          v169 = v271;
        }
        *(_QWORD *)(v169 + 16) = v69;
        *(_DWORD *)(v169 + 4 * v96 + 32) = v172;
        v170 += 16;
        ++v96;
        --v168;
      }
      while (v168);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v169 = MEMORY[0x1E0DEE9D8];
      v171 = (uint64_t)v223;
    }
    v174 = *(_QWORD *)(v169 + 16);
    v175 = (uint64_t)v220;
    v50 = v257;
    if (!v174)
      goto LABEL_99;
    v53 = *(_QWORD *)(v255 + 16);
    v260 = v169 + 32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v69 = 0;
    v241 = v53;
    v259 = v174;
    while (!v53)
    {
LABEL_113:
      if (++v69 == v174)
      {
        swift_bridgeObjectRelease_n();
LABEL_100:
        v104 = v263;
        v102 = v261;
        sub_1A54E3458(v245, v246, v247);
        sub_1A54E3458(v248, v253, v254);
        v157 = sub_1A54E3458(v258, v102, v104);
        v106 = v239 + 1;
        if (__OFADD__(v239, 1))
          goto LABEL_196;
        goto LABEL_101;
      }
    }
    LODWORD(v76) = *(_DWORD *)(v260 + 4 * v69);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v176 = v265;
    v96 = v53;
    while (2)
    {
      sub_1A55034B8(v176, v50, type metadata accessor for TaskHistory.Previous);
      sub_1A55034B8(v50, v175, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A55034FC(v175, type metadata accessor for TaskHistory.Previous);
        goto LABEL_117;
      }
      v177 = *(_DWORD *)(v175 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48));
      sub_1A55034FC(v175, type metadata accessor for ClientCommand);
      v95 = v177 == (_DWORD)v76;
      v50 = v257;
      if (!v95)
      {
LABEL_117:
        sub_1A55034FC(v50, type metadata accessor for TaskHistory.Previous);
        v176 += v267;
        if (!--v96)
        {
LABEL_112:
          swift_bridgeObjectRelease();
          v174 = v259;
          goto LABEL_113;
        }
        continue;
      }
      break;
    }
    sub_1A55034FC(v257, type metadata accessor for TaskHistory.Previous);
    swift_bridgeObjectRelease();
    v178 = *(_QWORD *)(v249 + 16);
    v264 = (uint64_t *)v178;
    if (v178)
    {
      v179 = v252;
      v180 = v249 + ((*(unsigned __int8 *)(v252 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v252 + 80));
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v96 = *(_QWORD *)(v179 + 72);
      v181 = (uint64_t)v256;
      v182 = v251;
      do
      {
        sub_1A55034B8(v180, v182, type metadata accessor for TaskHistory.Running);
        sub_1A55034B8(v182, v181, type metadata accessor for TaskHistory.Running);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1A55034FC(v181, type metadata accessor for TaskHistory.Running);
        }
        else
        {
          v183 = *((_DWORD *)v256 + 2);
          v184 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
          sub_1A55034FC((uint64_t)&v256[*(int *)(v184 + 64)], type metadata accessor for ClientCommand);
          v95 = v183 == (_DWORD)v76;
          v181 = (uint64_t)v256;
          if (v95)
          {
            sub_1A55034FC(v251, type metadata accessor for TaskHistory.Running);
            v171 = (uint64_t)v223;
            v175 = (uint64_t)v220;
            v50 = v257;
            v53 = v241;
            goto LABEL_112;
          }
        }
        v182 = v251;
        sub_1A55034FC(v251, type metadata accessor for TaskHistory.Running);
        v180 += v96;
        --v178;
      }
      while (v178);
      swift_bridgeObjectRelease();
      v171 = (uint64_t)v223;
      v53 = v241;
    }
    swift_bridgeObjectRelease();
    v185 = swift_bridgeObjectRelease();
    v269 = (uint64_t)v243;
    v270 = 0;
    MEMORY[0x1E0C80A78](v185);
    *(&v216 - 2) = (uint64_t)&v269;
    v186 = v231;
    swift_bridgeObjectRetain_n();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v187 = v250;
    v188 = sub_1A5627D50((uint64_t)sub_1A55B99D4, (uint64_t)(&v216 - 4), v186);
    v250 = v187;
    v50 = *(_QWORD *)(v188 + 16);
    if (!v50)
    {
      swift_bridgeObjectRelease();
      v104 = MEMORY[0x1E0DEE9D8];
      v96 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v96)
        goto LABEL_136;
LABEL_140:
      swift_bridgeObjectRelease();
LABEL_141:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_99:
      swift_bridgeObjectRelease();
      goto LABEL_100;
    }
    v271 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F90(0, v50, 0);
    v104 = v271;
    v189 = *(_QWORD *)(v271 + 16);
    v190 = 32;
    do
    {
      LODWORD(v76) = *(_DWORD *)(v188 + v190);
      v271 = v104;
      v191 = *(_QWORD *)(v104 + 24);
      v69 = v189 + 1;
      if (v189 >= v191 >> 1)
      {
        sub_1A54F4F90(v191 > 1, v189 + 1, 1);
        v104 = v271;
      }
      *(_QWORD *)(v104 + 16) = v69;
      *(_DWORD *)(v104 + 4 * v189 + 32) = (_DWORD)v76;
      v190 += 24;
      ++v189;
      --v50;
    }
    while (v50);
    swift_bridgeObjectRelease();
    v96 = *(_QWORD *)(v104 + 16);
    if (!v96)
      goto LABEL_140;
LABEL_136:
    v50 = v104 + 32;
    LODWORD(v106) = *(_DWORD *)(v104 + 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v192 = v250;
    v193 = sub_1A55B8768(v106, v249, v255);
    v250 = v192;
    if ((v193 & 1) != 0)
    {
LABEL_162:
      swift_bridgeObjectRelease_n();
      v69 = v231;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v197 = swift_bridgeObjectRelease();
      v96 = (unint64_t)&v216;
      v269 = (uint64_t)v243;
      v270 = 1;
      MEMORY[0x1E0C80A78](v197);
      *(&v216 - 2) = (uint64_t)&v269;
      swift_bridgeObjectRetain_n();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v102 = v250;
      v198 = sub_1A5627D50((uint64_t)sub_1A55B9A40, (uint64_t)(&v216 - 4), v69);
      v250 = v102;
      v199 = *(_QWORD *)(v198 + 16);
      if (v199)
      {
        v271 = MEMORY[0x1E0DEE9D8];
        sub_1A54F4F90(0, v199, 0);
        v104 = v271;
        v96 = *(_QWORD *)(v271 + 16);
        v102 = 32;
        do
        {
          LODWORD(v76) = *(_DWORD *)(v198 + v102);
          v271 = v104;
          v200 = *(_QWORD *)(v104 + 24);
          v69 = v96 + 1;
          if (v96 >= v200 >> 1)
          {
            sub_1A54F4F90(v200 > 1, v96 + 1, 1);
            v104 = v271;
          }
          *(_QWORD *)(v104 + 16) = v69;
          *(_DWORD *)(v104 + 4 * v96 + 32) = (_DWORD)v76;
          v102 += 24;
          ++v96;
          --v199;
        }
        while (v199);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v104 = MEMORY[0x1E0DEE9D8];
      }
      v264 = *(uint64_t **)(v104 + 16);
      if (!v264)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_183:
        v50 = v231;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E3458(v245, v246, v247);
        sub_1A54E3458(v248, v253, v254);
        sub_1A54E3458(v258, v261, (char)v263);
        v132 = v227;
        v106 = v239;
        if (v239 == v227)
          goto LABEL_88;
        continue;
      }
      v201 = v104 + 32;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v50 = 0;
      v260 = v104 + 32;
LABEL_172:
      LODWORD(v69) = *(_DWORD *)(v201 + 4 * v50++);
      swift_bridgeObjectRetain_n();
      v76 = 0;
      v202 = v265;
      v203 = v230;
      while (1)
      {
        v96 = (unint64_t)&v76->Kind + 1;
        if (__OFADD__(v76, 1))
          goto LABEL_187;
        sub_1A55034B8(v202, v203, type metadata accessor for TaskHistory.Previous);
        sub_1A55034B8(v203, v171, type metadata accessor for TaskHistory.Previous);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v204 = *(_DWORD *)(v171 + 8);
          swift_release();
          v95 = v204 == (_DWORD)v69;
          v203 = v230;
          if (v95)
          {
            sub_1A55034FC(v230, type metadata accessor for TaskHistory.Previous);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            goto LABEL_100;
          }
        }
        else
        {
          sub_1A55034FC(v171, type metadata accessor for TaskHistory.Previous);
        }
        sub_1A55034FC(v203, type metadata accessor for TaskHistory.Previous);
        v76 = (ValueMetadata *)((char *)v76 + 1);
        v202 += v267;
        if (v96 == v53)
        {
          v102 = v255;
          swift_bridgeObjectRelease_n();
          v201 = v260;
          if ((uint64_t *)v50 != v264)
            goto LABEL_172;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_183;
        }
      }
    }
    break;
  }
  v102 = (unint64_t)v219;
  if (v96 == 1)
  {
LABEL_138:
    swift_bridgeObjectRelease_n();
    goto LABEL_141;
  }
  v194 = 1;
  v240 = v96;
  v238 = v104 + 32;
LABEL_144:
  if (__OFADD__(v194, 1))
    goto LABEL_197;
  LODWORD(v76) = *(_DWORD *)(v50 + 4 * v194);
  v259 = v194 + 1;
  v260 = v194 + 1;
  v112 = swift_bridgeObjectRetain_n();
  v96 = 0;
  v106 = v265;
  while (1)
  {
    v69 = v96 + 1;
    if (__OFADD__(v96, 1))
      break;
    v50 = v244;
    sub_1A55034B8(v106, v244, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8(v50, v102, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v50 = *(unsigned int *)(v102 + 8);
      swift_release();
      if ((_DWORD)v50 == (_DWORD)v76)
      {
        sub_1A55034FC(v244, type metadata accessor for TaskHistory.Previous);
        swift_bridgeObjectRelease_n();
        if (!v264)
          goto LABEL_162;
        v106 = v249 + ((*(unsigned __int8 *)(v252 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v252 + 80));
        swift_bridgeObjectRetain_n();
        v96 = 0;
        while (1)
        {
          v69 = v96 + 1;
          if (__OFADD__(v96, 1))
            break;
          v195 = v226;
          sub_1A55034B8(v106 + *(_QWORD *)(v252 + 72) * v96, v226, type metadata accessor for TaskHistory.Running);
          v196 = v195;
          v102 = (unint64_t)v224;
          sub_1A55034B8(v196, (uint64_t)v224, type metadata accessor for TaskHistory.Running);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v50 = *(unsigned int *)(v102 + 4);
            swift_release();
            if ((_DWORD)v50 == (_DWORD)v76)
            {
              sub_1A55034FC(v226, type metadata accessor for TaskHistory.Running);
              v102 = (unint64_t)v219;
              v53 = v241;
              goto LABEL_159;
            }
          }
          else
          {
            sub_1A55034FC(v102, type metadata accessor for TaskHistory.Running);
          }
          sub_1A55034FC(v226, type metadata accessor for TaskHistory.Running);
          ++v96;
          if ((uint64_t *)v69 == v264)
          {
            swift_bridgeObjectRelease_n();
            v53 = v241;
            goto LABEL_162;
          }
        }
        __break(1u);
        goto LABEL_194;
      }
    }
    else
    {
      sub_1A55034FC(v102, type metadata accessor for TaskHistory.Previous);
    }
    v112 = sub_1A55034FC(v244, type metadata accessor for TaskHistory.Previous);
    ++v96;
    v106 += v267;
    if (v69 == v53)
    {
LABEL_159:
      swift_bridgeObjectRelease_n();
      v96 = v240;
      v50 = v238;
      v194 = v260;
      if (v259 != v240)
        goto LABEL_144;
      goto LABEL_138;
    }
  }
LABEL_191:
  __break(1u);
LABEL_192:
  v76 = (ValueMetadata *)v112;
  v215 = v113;
  sub_1A54E3458(v260, v259, v258);
  sub_1A54E3458(v50, v69, v53);
  sub_1A54E3458(v102, v261, v96);
  swift_bridgeObjectRelease();
  sub_1A5503B8C((uint64_t)v76, v215);
  v50 = v231;
  v102 = v227;
LABEL_89:
  v96 = v255;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v104 = v242;
  swift_bridgeObjectRelease();
  if (v106 != v102)
  {
    if (v106 < v102)
    {
      v134 = (uint64_t *)(v228 + 56 * v106);
      v133 = *v134;
      v135 = *((unsigned int *)v134 + 4);
      LOBYTE(v76) = *((_BYTE *)v134 + 20);
      v96 = v134[3];
      v50 = *((unsigned int *)v134 + 8);
      v69 = *((unsigned __int8 *)v134 + 36);
      v104 = v134[5];
      v102 = *((unsigned int *)v134 + 12);
      v106 = *((unsigned __int8 *)v134 + 52);
      v267 = v134[1];
      LODWORD(v266) = v135;
      sub_1A54E4334(v267, v135, (char)v76);
      sub_1A54E4334(v96, v50, v69);
      sub_1A54E4334(v104, v102, v106);
      sub_1A54E3414();
      MessageIdentifierSet.subtracting(_:)(v96, v50 | (v69 << 32), v104, v102 | (v106 << 32));
      v265 = MessageIdentifierSetNonEmpty.init(set:)(v137, v136 & 0xFFFFFFFFFFLL);
      if ((~v138 & 0xFF00000000) != 0)
      {
        v139 = v138;
        v140 = HIDWORD(v138);
        sub_1A54E3458(v267, v266, (char)v76);
        sub_1A54E3458(v96, v50, v69);
        sub_1A54E3458(v104, v102, v106);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v141 = swift_allocObject();
        v142 = v216;
        *(_QWORD *)(v141 + 16) = v217;
        *(_QWORD *)(v141 + 24) = v142;
        *(_QWORD *)(v141 + 32) = v265;
        *(_DWORD *)(v141 + 40) = v139;
        *(_BYTE *)(v141 + 44) = v140;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        return v133;
      }
      goto LABEL_200;
    }
LABEL_198:
    __break(1u);
LABEL_199:
    __break(1u);
LABEL_200:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A54E3458(v267, v266, (char)v76);
    sub_1A54E3458(v96, v50, v69);
    result = sub_1A54E3458(v104, v102, v106);
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t destroy for DetectChangesToMessages(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectChangesToMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = a2 + 64;
  v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(a1 + 64, v5, v7);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 148) = *(_BYTE *)(a2 + 148);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for DetectChangesToMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v4;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v5 = *(_DWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 148) = *(_BYTE *)(a2 + 148);
  *(_DWORD *)(a1 + 144) = v5;
  return a1;
}

__n128 __swift_memcpy149_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 141) = *(_QWORD *)(a2 + 141);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for DetectChangesToMessages(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 148) = *(_BYTE *)(a2 + 148);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectChangesToMessages(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 149))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectChangesToMessages(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 148) = 0;
    *(_DWORD *)(result + 144) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 149) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 149) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectChangesToMessages()
{
  return &type metadata for DetectChangesToMessages;
}

unint64_t sub_1A55B81A4()
{
  unint64_t result;

  result = qword_1EE7A8C28;
  if (!qword_1EE7A8C28)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA3CC, &type metadata for MessagesToRemoveHelper.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C28);
  }
  return result;
}

unint64_t sub_1A55B81EC()
{
  unint64_t result;

  result = qword_1EE7A8C30;
  if (!qword_1EE7A8C30)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA3A4, &type metadata for MessagesToRemoveHelper.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C30);
  }
  return result;
}

unint64_t sub_1A55B8230(uint64_t a1)
{
  unint64_t result;

  result = sub_1A55B8254();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A55B8254()
{
  unint64_t result;

  result = qword_1EE7A8C38;
  if (!qword_1EE7A8C38)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8E58, &type metadata for DetectChangesToMessages);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C38);
  }
  return result;
}

void sub_1A55B8298(_QWORD *a1)
{
  uint64_t v1;

  sub_1A55B4AF8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A55B82A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;

  v54 = a4;
  v70 = a3;
  v71 = type metadata accessor for TaskHistory.Previous(0);
  v66 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v48 - v11;
  v51 = *(_QWORD *)(a5 + 16);
  if (!v51)
    return 0;
  v48 = a2;
  v49 = a1;
  v53 = a5 + 32;
  v50 = a5;
  swift_bridgeObjectRetain_n();
  v13 = 0;
  v64 = 0;
LABEL_3:
  v68 = v13;
  v69 = &v48;
  v14 = (uint64_t *)(v53 + 56 * v13);
  v15 = v14[1];
  v16 = v14[3];
  v17 = *((unsigned int *)v14 + 8);
  v18 = *((unsigned __int8 *)v14 + 36);
  v19 = v14[5];
  v20 = *((unsigned int *)v14 + 12);
  v21 = *((unsigned __int8 *)v14 + 52);
  v52 = *v14;
  v73 = v52;
  v74 = 0;
  MEMORY[0x1E0C80A78](v15);
  *(&v48 - 2) = (uint64_t)&v73;
  v58 = v22;
  v60 = v23;
  v63 = v24;
  sub_1A54E4334(v22, v23, v24);
  v55 = v16;
  v56 = v17;
  v57 = v18;
  sub_1A54E4334(v16, v17, v18);
  v59 = v19;
  v61 = v20;
  v62 = v21;
  sub_1A54E4334(v19, v20, v21);
  v25 = v54;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v26 = v25;
  v27 = v64;
  v28 = sub_1A5627D50((uint64_t)sub_1A55B9A40, (uint64_t)(&v48 - 4), v26);
  v64 = v27;
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    v72 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F90(0, v29, 0);
    v30 = v72;
    v31 = *(_QWORD *)(v72 + 16);
    v32 = 32;
    do
    {
      v33 = *(_DWORD *)(v28 + v32);
      v72 = v30;
      v34 = *(_QWORD *)(v30 + 24);
      if (v31 >= v34 >> 1)
      {
        sub_1A54F4F90(v34 > 1, v31 + 1, 1);
        v30 = v72;
      }
      *(_QWORD *)(v30 + 16) = v31 + 1;
      *(_DWORD *)(v30 + 4 * v31 + 32) = v33;
      v32 += 24;
      ++v31;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v30 = MEMORY[0x1E0DEE9D8];
  }
  v69 = *(uint64_t **)(v30 + 16);
  if (v69)
  {
    v67 = v30 + 32;
    ++v68;
    v35 = *(_QWORD *)(v70 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v36 = 0;
    v65 = v35;
    while (!v35)
    {
LABEL_13:
      if ((uint64_t *)++v36 == v69)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_25;
      }
    }
    v37 = v66;
    v38 = *(_DWORD *)(v67 + 4 * v36);
    v39 = v70 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
    swift_bridgeObjectRetain_n();
    v40 = *(_QWORD *)(v37 + 72);
    while (1)
    {
      sub_1A55034B8(v39, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
      sub_1A55034B8((uint64_t)v12, (uint64_t)v9, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v41 = *((_DWORD *)v9 + 2);
        swift_release();
        if (v41 == v38)
        {
          sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          sub_1A54E3458(v58, v60, v63);
          sub_1A54E3458(v55, v56, v57);
          sub_1A54E3458(v59, v61, v62);
          v13 = v68;
          if (v68 == v51)
          {
            swift_bridgeObjectRelease_n();
            return 0;
          }
          goto LABEL_3;
        }
      }
      else
      {
        sub_1A55034FC((uint64_t)v9, type metadata accessor for TaskHistory.Previous);
      }
      sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
      v39 += v40;
      if (!--v35)
      {
        swift_bridgeObjectRelease_n();
        v35 = v65;
        goto LABEL_13;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_25:
  swift_bridgeObjectRelease();
  v43 = swift_allocObject();
  v44 = v48;
  *(_QWORD *)(v43 + 16) = v49;
  *(_QWORD *)(v43 + 24) = v44;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v45 = v58;
  v46 = v60;
  v47 = v63;
  sub_1A54E4334(v58, v60, v63);
  sub_1A54E3458(v45, v46, v47);
  sub_1A54E3458(v55, v56, v57);
  sub_1A54E3458(v59, v61, v62);
  *(_QWORD *)(v43 + 32) = v45;
  *(_DWORD *)(v43 + 40) = v46;
  *(_BYTE *)(v43 + 44) = v47;
  return v52;
}

uint64_t sub_1A55B8768(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;

  v34 = a1;
  v31 = type metadata accessor for TaskHistory.Running(0);
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v30 = (char *)&v28 - v9;
  v10 = type metadata accessor for TaskHistory.Previous(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v28 - v15;
  v17 = *(_QWORD *)(a3 + 16);
  if (!v17)
    return 0;
  v28 = a2;
  v32 = v3;
  v33 = a3;
  v18 = a3 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v19 = *(_QWORD *)(v14 + 72);
  swift_bridgeObjectRetain_n();
  while (1)
  {
    sub_1A55034B8(v18, (uint64_t)v16, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v16, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
LABEL_4:
    sub_1A55034FC((uint64_t)v16, type metadata accessor for TaskHistory.Previous);
    v18 += v19;
    if (!--v17)
    {
      v26 = 0;
LABEL_17:
      swift_bridgeObjectRelease_n();
      return v26;
    }
  }
  v20 = *((_DWORD *)v12 + 2);
  swift_release();
  if (v20 != v34)
    goto LABEL_4;
  sub_1A55034FC((uint64_t)v16, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease_n();
  v21 = *(_QWORD *)(v28 + 16);
  if (v21)
  {
    v22 = v28 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v23 = *(_QWORD *)(v29 + 72);
    swift_bridgeObjectRetain_n();
    v24 = (uint64_t)v30;
    do
    {
      sub_1A55034B8(v22, v24, type metadata accessor for TaskHistory.Running);
      sub_1A55034B8(v24, (uint64_t)v7, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v25 = *((_DWORD *)v7 + 1);
        swift_release();
        if (v25 == v34)
        {
          sub_1A55034FC(v24, type metadata accessor for TaskHistory.Running);
          v26 = 0;
          goto LABEL_17;
        }
      }
      else
      {
        sub_1A55034FC((uint64_t)v7, type metadata accessor for TaskHistory.Running);
      }
      sub_1A55034FC(v24, type metadata accessor for TaskHistory.Running);
      v22 += v23;
      --v21;
    }
    while (v21);
    v26 = 1;
    goto LABEL_17;
  }
  return 1;
}

uint64_t sub_1A55B8A48(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  _OWORD *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  int *v51;
  int v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  const void *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  unint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  uint8_t *v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t *v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unsigned int v133;
  unsigned __int8 v134;
  int v135;
  _BYTE v136[584];
  _BYTE v137[584];
  _BYTE v138[584];
  _BYTE v139[600];

  v129 = a5;
  v130 = a6;
  v117 = a3;
  v118 = a4;
  sub_1A552316C(a1, v136);
  sub_1A552316C(v136, v139);
  v8 = sub_1A594A764();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v126 = (unint64_t)&v114 - v13;
  v14 = type metadata accessor for TaskHistory.Running(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v127 = (unint64_t)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v128 = (uint64_t *)((char *)&v114 - v18);
  MEMORY[0x1E0C80A78](v19);
  v21 = (uint64_t *)((char *)&v114 - v20);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v114 - v23;
  v122 = (uint64_t)a1;
  sub_1A552316C(a1, v137);
  v25 = sub_1A5523B90((uint64_t)v137);
  if (v25 == 11)
  {
    v46 = *(_QWORD *)sub_1A5524678((uint64_t)v137);
    v121 = sub_1A54E3414();
    v47 = MessageIdentifierSet.init()(&type metadata for UID, v121);
    v49 = HIDWORD(v48);
    v132 = v47;
    v133 = v48;
    v134 = BYTE4(v48);
    v50 = *(_QWORD *)(v46 + 16);
    if (v50)
    {
      v51 = (int *)(v46 + 32);
      sub_1A552316C(v139, v138);
      sub_1A5524678((uint64_t)v138);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      do
      {
        v52 = *v51++;
        v135 = v52;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        MessageIdentifierSet.insert(_:)();
        --v50;
      }
      while (v50);
      sub_1A5523B9C(v122, sub_1A5523C88);
      v47 = v132;
      v48 = v133;
      v49 = v134;
    }
    v53 = v130;
    v54 = *(char **)(v130 + 16);
    if (v54)
    {
      v122 = v47;
      v115 = v48;
      v116 = a2;
      v114 = v49;
      v119 = (unint64_t)v49 << 32;
      v120 = v48;
      swift_bridgeObjectRetain_n();
      v55 = 0;
      do
      {
        v124 = v54;
        v56 = v53 + v55;
        v57 = *(unsigned int *)(v53 + v55 + 48);
        v58 = *(unsigned __int8 *)(v53 + v55 + 52);
        v59 = *(_QWORD *)(v53 + v55 + 56);
        v60 = *(unsigned int *)(v53 + v55 + 64);
        v61 = *(_BYTE *)(v53 + v55 + 68);
        v62 = *(_QWORD *)(v56 + 72);
        v63 = *(unsigned int *)(v56 + 80);
        LODWORD(v125) = *(unsigned __int8 *)(v56 + 84);
        v64 = *(_QWORD *)(v56 + 40);
        v123 = *(_QWORD *)(v56 + 32);
        sub_1A54E4334(v64, v57, v58);
        sub_1A54E4334(v59, v60, v61);
        v128 = (uint64_t *)v62;
        LODWORD(v129) = v63;
        v65 = v63;
        v66 = (char)v125;
        sub_1A54E4334(v62, v65, (char)v125);
        v126 = v126 & 0xFFFFFF0000000000 | v57 | (v58 << 32);
        v127 = v127 & 0xFFFFFF0000000000 | v120 | v119;
        MessageIdentifierSet.isSubset(of:)(v64, v126, v122, v127);
        if ((v67 & 1) != 0)
        {
          swift_bridgeObjectRelease_n();
          sub_1A54E3458(v64, v57, v58);
          sub_1A54E3458(v59, v60, v61);
          sub_1A54E3458((uint64_t)v128, v129, v66);
          v85 = v123;
          v86 = sub_1A562B10C(v123, v118);
          v87 = *(_QWORD *)(v86 + 16);
          if (v87)
          {
            v88 = 0;
            v89 = v116;
            v90 = v117;
            do
            {
              if ((sub_1A55E5990(*(_DWORD *)(v86 + 4 * v88 + 32), v89, v90) & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return v85;
              }
              ++v88;
            }
            while (v87 != v88);
          }
          swift_bridgeObjectRelease();
          sub_1A54E3458(v122, v115, v114);
          return 0;
        }
        sub_1A54E3458(v64, v57, v58);
        sub_1A54E3458(v59, v60, v61);
        sub_1A54E3458((uint64_t)v128, v129, v66);
        v55 += 56;
        v54 = v124 - 1;
        v53 = v130;
      }
      while (v124 != (char *)1);
      swift_bridgeObjectRelease_n();
      v47 = v122;
      LOBYTE(v49) = v114;
      v48 = v115;
    }
    sub_1A54E3458(v47, v48, v49);
    return 0;
  }
  if (v25 == 19)
  {
    v68 = (const void *)sub_1A5524678((uint64_t)v137);
    memcpy(v138, v68, sizeof(v138));
    sub_1A5534334((uint64_t)&v138[8], (uint64_t)&v131);
    sub_1A5534334((uint64_t)&v131, (uint64_t)&v132);
    if ((v132 & 0x100000000) != 0)
      return 0;
    v69 = v130;
    v70 = *(char **)(v130 + 16);
    if (v70)
    {
      v116 = a2;
      LODWORD(v124) = v132;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5523B9C(v122, sub_1A55231A8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v71 = 0;
      do
      {
        v125 = v70;
        v72 = v69 + v71;
        v73 = *(unsigned int *)(v69 + v71 + 48);
        v74 = *(unsigned __int8 *)(v69 + v71 + 52);
        v75 = *(_QWORD *)(v69 + v71 + 56);
        v76 = *(unsigned int *)(v69 + v71 + 64);
        v77 = *(_BYTE *)(v72 + 68);
        v78 = *(_QWORD *)(v72 + 72);
        v79 = *(unsigned int *)(v72 + 80);
        LODWORD(v126) = *(unsigned __int8 *)(v72 + 84);
        v80 = *(_QWORD *)(v72 + 40);
        v123 = *(_QWORD *)(v72 + 32);
        v135 = (int)v124;
        sub_1A54E4334(v80, v73, v74);
        sub_1A54E4334(v75, v76, v77);
        v128 = (uint64_t *)v78;
        LODWORD(v127) = v79;
        v81 = v79;
        v82 = v126;
        sub_1A54E4334(v78, v81, v126);
        v83 = sub_1A54E3414();
        v129 = v129 & 0xFFFFFF0000000000 | v73 | (v74 << 32);
        MessageIdentifierSet.contains(_:)((uint64_t)&v135, v80, v129);
        if ((v84 & 1) != 0)
        {
          v129 = v83;
          swift_bridgeObjectRelease_n();
          sub_1A54E3458(v80, v73, v74);
          sub_1A54E3458(v75, v76, v77);
          sub_1A54E3458((uint64_t)v128, v127, v82);
          v85 = v123;
          v91 = sub_1A562B10C(v123, v118);
          v92 = *(_QWORD *)(v91 + 16);
          if (v92)
          {
            v93 = 0;
            v94 = v116;
            v95 = v117;
            do
            {
              if ((sub_1A55E5990(*(_DWORD *)(v91 + 4 * v93 + 32), v94, v95) & 1) != 0)
              {
                swift_bridgeObjectRelease();
                v135 = (int)v124;
                MessageIdentifierSet.init(_:)();
                sub_1A5523B9C(v122, sub_1A5523C88);
                return v85;
              }
              ++v93;
            }
            while (v92 != v93);
          }
          swift_bridgeObjectRelease();
          sub_1A5523B9C(v122, sub_1A5523C88);
          return 0;
        }
        sub_1A54E3458(v80, v73, v74);
        sub_1A54E3458(v75, v76, v77);
        sub_1A54E3458((uint64_t)v128, v127, v82);
        v71 += 56;
        v70 = v125 - 1;
        v69 = v130;
      }
      while (v125 != (char *)1);
      swift_bridgeObjectRelease_n();
      sub_1A5523B9C(v122, sub_1A5523C88);
    }
    return 0;
  }
  if (v25 != 12)
    return 0;
  v125 = v11;
  v26 = (_OWORD *)sub_1A5524678((uint64_t)v137);
  *(_OWORD *)v138 = *v26;
  *(_OWORD *)&v138[16] = v26[1];
  *(_OWORD *)&v138[32] = v26[2];
  v27 = *(_QWORD *)&v138[8];
  if (!*(_QWORD *)&v138[8])
  {
    v27 = 0xE90000000000003ELL;
    v122 = 0x6E776F6E6B6E753CLL;
    v31 = v125;
    goto LABEL_45;
  }
  v120 = v8;
  v28 = *(_QWORD *)v138;
  v29 = *(_QWORD *)&v138[16];
  v119 = *(_QWORD *)&v138[24];
  LODWORD(v117) = v138[32];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v122 = v28;
  v30 = Tag.init(_:)(v28, v27);
  v31 = v125;
  if ((v32 & 1) != 0 || (v116 = v29, (v33 = *(_QWORD *)(a2 + 16)) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_43:
    sub_1A55240D4(v122, v27);
    v8 = v120;
    goto LABEL_44;
  }
  v114 = v27;
  v115 = v9;
  LODWORD(v130) = v30;
  v121 = (unint64_t)v30 >> 32;
  v34 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v35 = *(_QWORD *)(v15 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v36 = 0;
  v37 = type metadata accessor for TaskHistory.Running;
  v123 = v35;
  v124 = v24;
  while (1)
  {
    sub_1A55034B8(v34, (uint64_t)v24, v37);
    sub_1A55034B8((uint64_t)v24, (uint64_t)v21, v37);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55034FC((uint64_t)v21, v37);
LABEL_9:
    sub_1A55034FC((uint64_t)v24, v37);
    swift_bridgeObjectRelease();
    ++v36;
    v34 += v35;
    if (v33 == v36)
      goto LABEL_13;
  }
  v38 = *v21;
  v39 = v37;
  v40 = v14;
  v41 = v33;
  v42 = (char *)v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v43 = (uint64_t)v42;
  v33 = v41;
  v14 = v40;
  v37 = v39;
  sub_1A55034FC(v43, type metadata accessor for ClientCommand);
  v44 = v38;
  v35 = v123;
  v24 = v124;
  v45 = CommandID.tag.getter(v44);
  if (__PAIR64__(HIDWORD(v45), v45) != __PAIR64__(v121, v130))
    goto LABEL_9;
  sub_1A55034FC((uint64_t)v24, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  if (v33 == v36)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    v27 = v114;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v115;
    v31 = v125;
    goto LABEL_43;
  }
  if (v36 >= v33)
  {
    __break(1u);
    goto LABEL_62;
  }
  v21 = v128;
  sub_1A55034B8(v34, (uint64_t)v128, type metadata accessor for TaskHistory.Running);
  v36 = v127;
  sub_1A55034B8((uint64_t)v21, v127, type metadata accessor for TaskHistory.Running);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v8 = v120;
  v9 = v115;
  if (EnumCaseMultiPayload == 1)
  {
LABEL_62:
    sub_1A55034FC(v36, type metadata accessor for TaskHistory.Running);
    goto LABEL_63;
  }
  v102 = *(_QWORD *)v36;
  v103 = *(unsigned int *)(v36 + 8);
  v104 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
  sub_1A55034FC(v36 + *(int *)(v104 + 64), type metadata accessor for ClientCommand);
  v105 = CommandID.tag.getter(v102);
  v106 = v118;
  v27 = v114;
  if (__PAIR64__(HIDWORD(v105), v105) != __PAIR64__(v121, v130))
  {
LABEL_63:
    result = sub_1A55034FC((uint64_t)v21, type metadata accessor for TaskHistory.Running);
    __break(1u);
    return result;
  }
  sub_1A55034FC((uint64_t)v21, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A55240D4(v122, v27);
  v107 = sub_1A55F77F0(v103, v106);
  v31 = v125;
  if ((v108 & 1) != 0)
  {
LABEL_44:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_45:
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v31, v129, v8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v96 = sub_1A594A74C();
    v97 = sub_1A594C018();
    if (os_log_type_enabled(v96, v97))
    {
      v98 = (uint8_t *)swift_slowAlloc();
      v99 = swift_slowAlloc();
      v132 = v99;
      *(_DWORD *)v98 = 136446210;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v131 = sub_1A55791B0(v122, v27, &v132);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A4F90000, v96, v97, "Received unknown extended search response with tag '%{public}s'.", v98, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v99, -1, -1);
      MEMORY[0x1A85B1964](v98, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v125, v8);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v31, v8);
    }
    return 0;
  }
  v85 = v107;
  ExtendedSearchResponse.matchedUIDs.getter();
  if ((~v109 & 0xFF00000000) == 0)
  {
    v110 = v126;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v126, v129, v8);
    v111 = sub_1A594A74C();
    v112 = sub_1A594C018();
    if (os_log_type_enabled(v111, v112))
    {
      v113 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v113 = 0;
      _os_log_impl(&dword_1A4F90000, v111, v112, "Extended search response has no UIDs.", v113, 2u);
      MEMORY[0x1A85B1964](v113, -1, -1);
    }

    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v110, v8);
    return 0;
  }
  return v85;
}

uint64_t sub_1A55B9684(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int32x2_t *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int32x2_t *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;

  if (((a3 >> 59) & 0x1E | (a3 >> 2) & 1) == 8 && *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFBLL) + 0x18) == a2)
  {
    v10 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
    v11 = *(unsigned int *)((a3 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
    v12 = *(unsigned __int8 *)((a3 & 0xFFFFFFFFFFFFFFBLL) + 0x2C);
    v45 = *(int32x2_t **)((a3 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
    v13 = *(unsigned int *)((a3 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
    v14 = *(unsigned __int8 *)((a3 & 0xFFFFFFFFFFFFFFBLL) + 0x3C);
    result = sub_1A54FF30C(result, *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFBLL) + 0x10));
    if ((result & 1) != 0)
    {
      v15 = *(_QWORD *)v6;
      if (*(_QWORD *)(*(_QWORD *)v6 + 16))
      {
        v46 = *(_QWORD *)(*(_QWORD *)v6 + 16);
        v35 = a5;
        v36 = a6;
        v33 = v6;
        v34 = a4;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v38 = v11;
        v39 = v10;
        v37 = v12;
        sub_1A54E4334(v10, v11, v12);
        v44 = v15;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54E4334((uint64_t)v45, v13, v14);
        v16 = 0;
        v40 = v13;
        v41 = v14;
        v43 = v13 | (v14 << 32);
        while (1)
        {
          v17 = *(unsigned int *)(v44 + v16 + 48);
          v18 = *(unsigned __int8 *)(v44 + v16 + 52);
          v19 = *(_QWORD *)(v44 + v16 + 56);
          v20 = *(unsigned int *)(v44 + v16 + 64);
          v21 = *(_BYTE *)(v44 + v16 + 68);
          v22 = *(_QWORD *)(v44 + v16 + 72);
          v23 = *(unsigned int *)(v44 + v16 + 80);
          v24 = *(_BYTE *)(v44 + v16 + 84);
          v25 = *(int32x2_t **)(v44 + v16 + 40);
          v42 = *(_QWORD *)(v44 + v16 + 32);
          sub_1A54E4334((uint64_t)v25, v17, *(_BYTE *)(v44 + v16 + 52));
          sub_1A54E4334(v19, v20, v21);
          sub_1A54E4334(v22, v23, v24);
          sub_1A54E3414();
          v47 = v47 & 0xFFFFFF0000000000 | v17 | (v18 << 32);
          v48 = v48 & 0xFFFFFF0000000000 | v43;
          static MessageIdentifierSet.__derived_struct_equals(_:_:)(v25, v47, v45, v48);
          if ((v26 & 1) != 0)
            break;
          sub_1A54E3458((uint64_t)v25, v17, v18);
          sub_1A54E3458(v19, v20, v21);
          sub_1A54E3458(v22, v23, v24);
          v16 += 56;
          if (!--v46)
          {
            swift_bridgeObjectRelease();
            sub_1A54E3458((uint64_t)v45, v40, v41);
LABEL_14:
            swift_bridgeObjectRelease();
            v31 = v38;
            v30 = v39;
            v32 = v37;
            return sub_1A54E3458(v30, v31, v32);
          }
        }
        swift_bridgeObjectRelease();
        sub_1A54E3458((uint64_t)v45, v40, v41);
        swift_bridgeObjectRelease();
        sub_1A54E3458((uint64_t)v25, v17, v18);
        sub_1A54E3458(v19, v20, v21);
        sub_1A54E3458(v22, v23, v24);
        v27 = sub_1A55B0288(v42, 0, v36);
        v28 = *(_QWORD *)(v27 + 16);
        if (!v28)
          goto LABEL_14;
        v29 = 0;
        while ((sub_1A55F3D24(*(_DWORD *)(v27 + 4 * v29 + 32), v34, v35) & 1) == 0)
        {
          if (v28 == ++v29)
            goto LABEL_14;
        }
        swift_bridgeObjectRelease();
        v32 = v37;
        v31 = v38;
        v30 = v39;
        sub_1A56126CC(v42, v33, v39, v38 | (v37 << 32));
        return sub_1A54E3458(v30, v31, v32);
      }
    }
  }
  return result;
}

uint64_t sub_1A55B9994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (BYTE4(a3) != 255)
    return sub_1A54E3458(a2, a3, SBYTE4(a3));
  return result;
}

BOOL sub_1A55B99B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A562A538(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_1A55B99D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A55AF150(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(v0 + 32), *(unsigned int *)(v0 + 40), *(_BYTE *)(v0 + 44));
  return swift_deallocObject();
}

BOOL sub_1A55B9A28(uint64_t a1)
{
  return sub_1A55B99B4(a1);
}

uint64_t sub_1A55B9A40(uint64_t a1)
{
  return sub_1A55B99D4(a1) & 1;
}

double sub_1A55B9A58@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W7>, _OWORD *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, char a14)
{
  int v21;
  char *v22;
  char *v23;
  BOOL v24;
  int v25;
  __int128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double result;
  _OWORD v33[2];
  int v34;
  uint64_t v35;
  char v36;
  ValueMetadata *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v21 = a4 & 1;
  v35 = sub_1A54F8ABC((uint64_t)&unk_1E4EF2350);
  v36 = 1;
  if ((a7 & 1) == 0)
  {
    v22 = &v44;
    v23 = &v45;
LABEL_16:
    swift_bridgeObjectRelease();
    sub_1A552A19C(a3, v21);
    *(_OWORD *)v23 = *(_OWORD *)a1;
    sub_1A54F81BC((uint64_t)v23);
    *(_QWORD *)v22 = *(_QWORD *)(a1 + 24);
    *((_DWORD *)v22 + 2) = *(_DWORD *)(a1 + 32);
    sub_1A54F81BC((uint64_t)v22);
    swift_bridgeObjectRelease();
    sub_1A5503B8C(a11, a12);
    swift_bridgeObjectRelease();
    result = 0.0;
    *(_OWORD *)((char *)a8 + 125) = 0u;
    a8[6] = 0u;
    a8[7] = 0u;
    a8[4] = 0u;
    a8[5] = 0u;
    a8[2] = 0u;
    a8[3] = 0u;
    *a8 = 0u;
    a8[1] = 0u;
    return result;
  }
  if ((sub_1A55BA9A4(a2, a9, a3, v21) & 1) == 0)
  {
    v22 = &v50;
    v23 = &v51;
    goto LABEL_16;
  }
  v24 = sub_1A55BA93C(a2, a9, a5);
  if (v24)
    v23 = &v47;
  else
    v23 = &v49;
  if (v24)
    v22 = &v46;
  else
    v22 = &v48;
  if (!v24 || (a14 & 1) != 0)
    goto LABEL_16;
  v25 = *(_DWORD *)(a1 + 32);
  v26 = *(_OWORD *)(a1 + 16);
  v33[0] = *(_OWORD *)a1;
  v33[1] = v26;
  v34 = v25;
  v37 = &type metadata for DetectChangesToMessagesInRecent;
  sub_1A550F734();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  v39 = a5;
  if (!v21)
  {
    v27 = *(_QWORD *)(a3 + 16);
    sub_1A552A19C(a3, 0);
    a3 = v27;
  }
  v40 = a3;
  v38 = a6 & 1;
  sub_1A552D7A0(0xFFFFFFFFLL);
  v28 = a12 | ((unint64_t)BYTE4(a12) << 32);
  v29 = sub_1A5610F70(a9, a10, a11, v28, a13, 0);
  v31 = v30;
  swift_bridgeObjectRelease();
  sub_1A5503B8C(a11, v28);
  v41 = v29;
  v42 = v31;
  v43 = BYTE4(v31) & 1;
  sub_1A551005C((uint64_t)v33, (uint64_t)a8);
  sub_1A550FDD4((uint64_t)v33);
  return result;
}

uint64_t sub_1A55B9CF4()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6F7E8);
  qword_1EE7F9AA8 = result;
  return result;
}

uint64_t sub_1A55B9D18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE v28[4];
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  _BYTE v36[128];
  uint64_t v37;
  char v38;

  v2 = v1;
  v4 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  sub_1A55BAEB8(a1, (uint64_t)v6);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A551005C(v2, (uint64_t)v36);
  v12 = sub_1A594A74C();
  v13 = sub_1A594C030();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v29 = v14;
    v16 = v15;
    v30 = swift_slowAlloc();
    v35 = v30;
    *(_DWORD *)v16 = 68159491;
    LODWORD(v33) = 2;
    v32 = v8;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 8) = 256;
    v17 = *(int *)(v4 + 20);
    v31 = v7;
    v18 = &v6[v17];
    LOBYTE(v33) = v6[v17];
    sub_1A594C3CC();
    *(_WORD *)(v16 + 11) = 2082;
    v20 = *((_QWORD *)v18 + 1);
    v19 = *((_QWORD *)v18 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v33 = sub_1A55791B0(v20, v19, &v35);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 21) = 1040;
    LODWORD(v33) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 27) = 512;
    LOWORD(v33) = *((_WORD *)v18 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v16 + 31) = 2160;
    v33 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 41) = 2085;
    v21 = *((_DWORD *)v18 + 10);
    v33 = *((_QWORD *)v18 + 4);
    v34 = v21;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = sub_1A594B4A8();
    v33 = sub_1A55791B0(v22, v23, &v35);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55BAEFC((uint64_t)v6);
    *(_WORD *)(v16 + 51) = 2082;
    LOBYTE(v33) = v38;
    v24 = sub_1A5607484(v37);
    v33 = sub_1A55791B0(v24, v25, &v35);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A550FDD4((uint64_t)v36);
    _os_log_impl(&dword_1A4F90000, v12, (os_log_type_t)v29, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task: %{public}s", (uint8_t *)v16, 0x3Du);
    v26 = v30;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v26, -1, -1);
    MEMORY[0x1A85B1964](v16, -1, -1);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v32 + 8))(v11, v31);
  }
  else
  {
    sub_1A55BAEFC((uint64_t)v6);
    sub_1A550FDD4((uint64_t)v36);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
  }
}

void sub_1A55BA108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;

  v44 = a3;
  v37 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v37);
  v38 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594A764();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a2;
  v10 = *(_QWORD *)(a2 + 112);
  v11 = (_QWORD *)(a1 + 160);
  v12 = *(_QWORD *)(a1 + 184);
  v13 = *(_QWORD *)(a1 + 192);
  __swift_mutable_project_boxed_opaque_existential_1_0(a1 + 160, v12);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
  v15 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v14(v15, v12, v13);
  v16 = *(_QWORD *)(a1 + 184);
  v17 = *(_QWORD *)(a1 + 192);
  v40 = a1;
  v18 = (uint64_t)v38;
  __swift_project_boxed_opaque_existential_1_0(v11, v16);
  v19 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17) + 16);
  swift_bridgeObjectRelease();
  v41 = v7;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v21 = v44;
  v43 = v6;
  v20(v9, v44, v6);
  sub_1A55BAEB8(v21, v18);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v39 = v9;
  v22 = sub_1A594A74C();
  v23 = sub_1A594C030();
  v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v25 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v47 = v36;
    *(_DWORD *)v25 = 68159747;
    LODWORD(v45) = 2;
    v35 = v19;
    sub_1A594C3CC();
    *(_WORD *)(v25 + 8) = 256;
    v26 = v18 + *(int *)(v37 + 20);
    LOBYTE(v45) = *(_BYTE *)v26;
    sub_1A594C3CC();
    *(_WORD *)(v25 + 11) = 2082;
    LODWORD(v37) = v24;
    v28 = *(_QWORD *)(v26 + 8);
    v27 = *(_QWORD *)(v26 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v45 = sub_1A55791B0(v28, v27, &v47);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 21) = 1040;
    LODWORD(v45) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v25 + 27) = 512;
    LOWORD(v45) = *(_WORD *)(v26 + 24);
    sub_1A594C3CC();
    *(_WORD *)(v25 + 31) = 2160;
    v45 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v25 + 41) = 2085;
    v29 = *(_DWORD *)(v26 + 40);
    v45 = *(_QWORD *)(v26 + 32);
    v46 = v29;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v30 = sub_1A594B4A8();
    v45 = sub_1A55791B0(v30, v31, &v47);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55BAEFC(v18);
    *(_WORD *)(v25 + 51) = 2048;
    v32 = *(_QWORD *)(v10 + 16);
    swift_bridgeObjectRelease();
    v45 = v32;
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 61) = 2048;
    v45 = v35;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v22, (os_log_type_t)v37, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld changes without UID, still %ld remaining.", (uint8_t *)v25, 0x47u);
    v33 = v36;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v33, -1, -1);
    MEMORY[0x1A85B1964](v25, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A55BAEFC(v18);

    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v43);
  sub_1A5608C50(v40, *(_QWORD *)(v42 + 120), 0, v44, *(_QWORD *)(v42 + 128), *(unsigned int *)(v42 + 136) | ((unint64_t)*(unsigned __int8 *)(v42 + 140) << 32));
}

uint64_t sub_1A55BA588@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  void *v7;

  if (*(_BYTE *)(v3 + 104))
    v7 = &unk_1E4E6F778;
  else
    v7 = &unk_1E4E6F6E0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55B45F4(a1, a2, (uint64_t)v7, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A55BA614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v9 = *(unsigned int *)(v5 + 136);
  v11 = *(_QWORD *)v5;
  v12 = *(_QWORD *)(v5 + 8);
  v10 = *(_BYTE *)(v5 + 140);
  v21 = *(_QWORD *)(v5 + 128);
  result = sub_1A55B82A0(*(_QWORD *)v5, v12, a2, a4, v21);
  v16 = v15;
  if ((_BYTE)v15 == 0xFF)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v17 = sub_1A55B5B74(v11, v12, a1, a2, a3, a4, v21, v9 | ((unint64_t)v10 << 32));
    v16 = v18;
    v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v17 = result;
    v20 = v14;
  }
  *a5 = v17;
  a5[1] = v16;
  a5[2] = v20;
  return result;
}

uint64_t sub_1A55BA740(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = *(_QWORD *)(v7 + 128);
  v8 = v7 + 128;
  result = sub_1A55B8A48(a1, a2, a3, a4, a7, v9);
  if (BYTE4(v12) != 255)
  {
    v13 = result;
    v14 = v11;
    v15 = v12;
    sub_1A56125FC(result, v8, v11, v12 & 0xFFFFFFFFFFLL);
    return sub_1A55B9994(v13, v14, v15);
  }
  return result;
}

uint64_t sub_1A55BA7D0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(v5 + 8);
  v11 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55B9684(v11, v10, a1, a2, a3, a5);
  return swift_bridgeObjectRelease();
}

void sub_1A55BA838(uint64_t *a1, unint64_t a2, uint64_t a3, void *a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5607AA8(*a1, a2, a3, a4, a5, 0, a7, *(_QWORD *)(v7 + 128));
}

uint64_t sub_1A55BA878(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  v3 = *(_QWORD *)(v2 + 24);
  v4 = *(_DWORD *)(v2 + 32);
  v10[3] = a2;
  if (*(_BYTE *)(result + 168) == 1)
  {
    v5 = result;
    v7 = *(_QWORD *)(result + 152);
    v6 = *(_QWORD *)(result + 160);
    v11 = *(_QWORD *)(result + 144);
    v8 = v11;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A551C6E4((uint64_t)&v11, v3, v4, 0, sub_1A55BAEB0, v10);
    result = sub_1A54E8FCC(v8, v7, v6, 1);
    v9 = v11;
    *(_QWORD *)(v5 + 152) = 0;
    *(_QWORD *)(v5 + 160) = 0;
    *(_QWORD *)(v5 + 144) = v9;
    *(_BYTE *)(v5 + 168) = 1;
  }
  return result;
}

unint64_t sub_1A55BA920()
{
  return 0xD00000000000001FLL;
}

BOOL sub_1A55BA93C(_BOOL8 result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  BOOL v12;

  if (a2 >= 0)
    v3 = a2;
  else
    v3 = a2 + 1;
  v4 = __OFSUB__(result, v3 >> 1);
  v5 = result - (v3 >> 1);
  if (v4)
  {
    __break(1u);
  }
  else if ((unint64_t)(v5 - 0x100000000) >= 0xFFFFFFFF00000001)
  {
    v6 = *(_QWORD *)(a3 + 16);
    if (v6)
    {
      v7 = (unsigned int *)(a3 + 32);
      v8 = v6 - 1;
      do
      {
        v10 = *v7;
        v7 += 6;
        v9 = v10;
        v12 = v8-- != 0;
        result = v9 >= v5;
      }
      while (v9 >= v5 && v12);
    }
    else
    {
      return 1;
    }
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_1A55BA9A4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t i;
  uint64_t v10;
  unsigned int v11;

  if (a2 >= 0)
    v4 = a2;
  else
    v4 = a2 + 1;
  v5 = v4 >> 1;
  if (v5 >= result)
    return 0;
  v6 = __OFSUB__(result, v5);
  v7 = result - v5;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    if ((unint64_t)(v7 - 0x100000000) < 0xFFFFFFFF00000001)
      return 0;
    if ((a4 & 1) != 0)
      return a3 < 1;
    v8 = *(_QWORD *)(a3 + 16);
    if (v8 > 0x8B)
      return 0;
    if (!v8)
      return 1;
    if (*(_DWORD *)(a3 + 32) < v7)
      return 0;
    if (v8 == 1)
      return 1;
    if (*(_DWORD *)(a3 + 36) < v7)
      return 0;
    if (v8 == 2)
      return 1;
    for (i = 10; ; ++i)
    {
      v10 = i - 7;
      if (__OFADD__(i - 8, 1))
        break;
      v11 = *(_DWORD *)(a3 + 4 * i);
      result = v11 >= v7;
      if (v11 < v7 || v10 == v8)
        return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t destroy for DetectChangesToMessagesInRecent(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectChangesToMessagesInRecent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = a2 + 64;
  v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(a1 + 64, v5, v7);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 140) = *(_BYTE *)(a2 + 140);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for DetectChangesToMessagesInRecent(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 140) = *(_BYTE *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = v4;
  return a1;
}

__n128 __swift_memcpy141_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 125) = *(_OWORD *)(a2 + 125);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for DetectChangesToMessagesInRecent(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 140) = *(_BYTE *)(a2 + 140);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectChangesToMessagesInRecent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 141))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectChangesToMessagesInRecent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 140) = 0;
    *(_DWORD *)(result + 136) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 141) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 141) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectChangesToMessagesInRecent()
{
  return &type metadata for DetectChangesToMessagesInRecent;
}

unint64_t sub_1A55BAE48(uint64_t a1)
{
  unint64_t result;

  result = sub_1A55BAE6C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A55BAE6C()
{
  unint64_t result;

  result = qword_1EE7A8C48;
  if (!qword_1EE7A8C48)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8EC0, &type metadata for DetectChangesToMessagesInRecent);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C48);
  }
  return result;
}

void sub_1A55BAEB0(uint64_t a1)
{
  uint64_t v1;

  sub_1A55BA108(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A55BAEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MailboxTaskLogger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A55BAEFC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MailboxTaskLogger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A55BAF38()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6CEA0);
  qword_1EE7F9250 = result;
  return result;
}

uint64_t sub_1A55BAF5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  os_log_t v27;
  uint64_t v28;
  uint64_t v30;
  os_log_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39[12];
  char v40;
  _QWORD v41[16];

  v2 = v1;
  v4 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  sub_1A55034B8(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A550FF10(v2, (uint64_t)v41);
  sub_1A550FF10(v2, (uint64_t)v39);
  v12 = sub_1A594A74C();
  v13 = sub_1A594C030();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v33 = v14;
    v16 = v15;
    v34 = swift_slowAlloc();
    v38 = v34;
    *(_DWORD *)v16 = 68159747;
    LODWORD(v36) = 2;
    v31 = v12;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 8) = 256;
    v17 = *(int *)(v4 + 20);
    v35 = v7;
    v18 = &v6[v17];
    LOBYTE(v36) = v6[v17];
    sub_1A594C3CC();
    *(_WORD *)(v16 + 11) = 2082;
    v32 = v8;
    v20 = *((_QWORD *)v18 + 1);
    v19 = *((_QWORD *)v18 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v36 = sub_1A55791B0(v20, v19, &v38);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 21) = 1040;
    LODWORD(v36) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 27) = 512;
    LOWORD(v36) = *((_WORD *)v18 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v16 + 31) = 2160;
    v36 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 41) = 2085;
    v21 = *((_DWORD *)v18 + 10);
    v36 = *((_QWORD *)v18 + 4);
    v37 = v21;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = sub_1A594B4A8();
    v36 = sub_1A55791B0(v22, v23, &v38);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v16 + 51) = 2048;
    v24 = *(_QWORD *)(v41[11] + 16);
    sub_1A550FF98((uint64_t)v41);
    v36 = v24;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 61) = 2082;
    LOBYTE(v36) = v40;
    v25 = sub_1A5607484(v39[11]);
    v36 = sub_1A55791B0(v25, v26, &v38);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A550FF98((uint64_t)v39);
    v27 = v31;
    _os_log_impl(&dword_1A4F90000, v31, (os_log_type_t)v33, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. %ld UID batch(es): %{public}s", (uint8_t *)v16, 0x47u);
    v28 = v34;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v28, -1, -1);
    MEMORY[0x1A85B1964](v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v11, v35);
  }
  else
  {
    sub_1A550FF98((uint64_t)v41);
    sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    sub_1A550FF98((uint64_t)v39);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t sub_1A55BB39C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W4>, _QWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t *v51;
  _BYTE v52[4];
  int v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  int v62;
  uint64_t v63;
  unsigned int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v59 = a2;
  v75 = a1;
  v76 = type metadata accessor for TaskHistory.Previous(0);
  v71 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v8 = &v52[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v52[-v10];
  v12 = *v4;
  v56 = *(_QWORD *)(*v4 + 16);
  if (!v56)
  {
LABEL_22:
    v42 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8C40);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(a4, 1, 1, v42);
  }
  v53 = a3;
  v55 = a4;
  v58 = v12 + 32;
  v54 = v12;
  swift_bridgeObjectRetain_n();
  v13 = 0;
  v69 = 0;
LABEL_3:
  v73 = v13;
  v74 = v52;
  v14 = (uint64_t *)(v58 + 56 * v13);
  v15 = v14[1];
  v16 = v14[3];
  v17 = *((unsigned int *)v14 + 8);
  v18 = *((unsigned __int8 *)v14 + 36);
  v19 = v14[5];
  v20 = *((unsigned int *)v14 + 12);
  v21 = *((unsigned __int8 *)v14 + 52);
  v57 = *v14;
  v78 = v57;
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)&v52[-16] = &v78;
  v66 = v22;
  v67 = v23;
  v68 = v24;
  sub_1A54E4334(v22, v24, v23);
  v60 = v16;
  v61 = v17;
  v62 = v18;
  sub_1A54E4334(v16, v17, v18);
  v63 = v19;
  v64 = v20;
  v65 = v21;
  sub_1A54E4334(v19, v20, v21);
  v25 = v59;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v26 = v25;
  v27 = v69;
  v28 = sub_1A5627844((uint64_t)sub_1A55B99B4, (uint64_t)&v52[-32], v26);
  v69 = v27;
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    v77 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F58(0, v29, 0);
    v30 = v77;
    v31 = *(_QWORD *)(v77 + 16);
    v32 = 32;
    do
    {
      v33 = *(_DWORD *)(v28 + v32);
      v77 = v30;
      v34 = *(_QWORD *)(v30 + 24);
      if (v31 >= v34 >> 1)
      {
        sub_1A54F4F58(v34 > 1, v31 + 1, 1);
        v30 = v77;
      }
      *(_QWORD *)(v30 + 16) = v31 + 1;
      *(_DWORD *)(v30 + 4 * v31 + 32) = v33;
      v32 += 16;
      ++v31;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v30 = MEMORY[0x1E0DEE9D8];
  }
  v74 = *(_BYTE **)(v30 + 16);
  if (v74)
  {
    v72 = v30 + 32;
    ++v73;
    v35 = *(_QWORD *)(v75 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v36 = 0;
    v70 = v35;
    while (!v35)
    {
LABEL_13:
      if ((_BYTE *)++v36 == v74)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_25;
      }
    }
    v37 = v71;
    v38 = *(_DWORD *)(v72 + 4 * v36);
    v39 = v75 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v40 = *(_QWORD *)(v37 + 72);
    while (1)
    {
      sub_1A55034B8(v39, (uint64_t)v11, type metadata accessor for TaskHistory.Previous);
      sub_1A55034B8((uint64_t)v11, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A55034FC((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
      }
      else
      {
        v41 = *(_DWORD *)&v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
        sub_1A55034FC((uint64_t)v8, type metadata accessor for ClientCommand);
        if (v41 == v38)
        {
          sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          sub_1A54E3458(v66, v68, v67);
          sub_1A54E3458(v60, v61, v62);
          sub_1A54E3458(v63, v64, v65);
          v13 = v73;
          if (v73 == v56)
          {
            swift_bridgeObjectRelease_n();
            a4 = v55;
            goto LABEL_22;
          }
          goto LABEL_3;
        }
      }
      sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
      v39 += v40;
      if (!--v35)
      {
        swift_bridgeObjectRelease();
        v35 = v70;
        goto LABEL_13;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_25:
  swift_bridgeObjectRelease();
  v45 = v66;
  v44 = v67;
  v46 = v68;
  sub_1A54E4334(v66, v68, v67);
  sub_1A54E3458(v45, v46, v44);
  sub_1A54E3458(v60, v61, v62);
  sub_1A54E3458(v63, v64, v65);
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v45;
  *(_BYTE *)(v47 + 28) = v44;
  *(_DWORD *)(v47 + 24) = v46;
  v48 = v47 | 0xA000000000000000;
  v49 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8C40);
  v50 = v55;
  v51 = (_QWORD *)((char *)v55 + *(int *)(v49 + 48));
  *v55 = v57;
  *v51 = v48;
  if ((v53 & 0x100) == 0)
    v51[1] = (unint64_t)&unk_1E4EF25D0;
  type metadata accessor for ClientCommand(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v50, 0, 1, v49);
}

uint64_t sub_1A55BB8D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A55530FC(v1 + 40, a1);
}

uint64_t sub_1A55BB8E0()
{
  return sub_1A54F8ABC((uint64_t)&unk_1E4E6CEC8);
}

uint64_t sub_1A55BB8EC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 36);
}

uint64_t sub_1A55BB8F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;

  if (*(_BYTE *)(v4 + 112) == 1)
  {
    v5 = *(_QWORD *)(a3 + 200);
    if ((*(_BYTE *)(a3 + 208) & 1) == 0)
      v5 = *(_QWORD *)(v5 + 16);
    *(_QWORD *)(v4 + 104) = v5;
    *(_BYTE *)(v4 + 112) = 0;
  }
  if (*(_BYTE *)(v4 + 102))
    v6 = 256;
  else
    v6 = 0;
  return sub_1A55BB39C(a1, a2, v6 | *(unsigned __int8 *)(v4 + 101), a4);
}

uint64_t sub_1A55BB954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v9 = *(unsigned int *)(v5 + 96);
  v11 = *(_QWORD *)v5;
  v12 = *(_QWORD *)(v5 + 8);
  v10 = *(_BYTE *)(v5 + 100);
  v21 = *(_QWORD *)(v5 + 88);
  result = sub_1A55B82A0(*(_QWORD *)v5, v12, a2, a4, v21);
  v16 = v15;
  if ((_BYTE)v15 == 0xFF)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v17 = sub_1A55B5B74(v11, v12, a1, a2, a3, a4, v21, v9 | ((unint64_t)v10 << 32));
    v16 = v18;
    v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v17 = result;
    v20 = v14;
  }
  *a5 = v17;
  a5[1] = v16;
  a5[2] = v20;
  return result;
}

uint64_t sub_1A55BBA80(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = *(_QWORD *)(v7 + 88);
  v8 = v7 + 88;
  result = sub_1A55B8A48(a1, a2, a3, a4, a7, v9);
  if (BYTE4(v12) != 255)
  {
    v13 = result;
    v14 = v11;
    v15 = v12;
    sub_1A56125FC(result, v8, v11, v12 & 0xFFFFFFFFFFLL);
    return sub_1A55B9994(v13, v14, v15);
  }
  return result;
}

uint64_t sub_1A55BBB10(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(v5 + 8);
  v11 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55B9684(v11, v10, a1, a2, a3, a5);
  return swift_bridgeObjectRelease();
}

void sub_1A55BBB78(uint64_t *a1, unint64_t a2, uint64_t a3, void *a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5607AA8(*a1, a2, a3, a4, a5, (*(_BYTE *)(v7 + 102) & 1) == 0, a7, *(_QWORD *)(v7 + 88));
}

uint64_t sub_1A55BBBC0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  v3 = *(_QWORD *)(v2 + 24);
  v4 = *(_DWORD *)(v2 + 32);
  v10[3] = a2;
  if (*(_BYTE *)(result + 168) == 1)
  {
    v5 = result;
    v7 = *(_QWORD *)(result + 152);
    v6 = *(_QWORD *)(result + 160);
    v11 = *(_QWORD *)(result + 144);
    v8 = v11;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A551C6E4((uint64_t)&v11, v3, v4, 0, sub_1A55BC074, v10);
    result = sub_1A54E8FCC(v8, v7, v6, 1);
    v9 = v11;
    *(_QWORD *)(v5 + 152) = 0;
    *(_QWORD *)(v5 + 160) = 0;
    *(_QWORD *)(v5 + 144) = v9;
    *(_BYTE *)(v5 + 168) = 1;
  }
  return result;
}

unint64_t sub_1A55BBC68()
{
  return 0xD000000000000015;
}

uint64_t destroy for DetectRemovedMessages(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectRemovedMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = a2 + 48;
  v6 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(a1 + 48, v5, v7);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_WORD *)(a1 + 101) = *(_WORD *)(a2 + 101);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for DetectRemovedMessages(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v4;
  *(_BYTE *)(a1 + 101) = *(_BYTE *)(a2 + 101);
  *(_BYTE *)(a1 + 102) = *(_BYTE *)(a2 + 102);
  v5 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v5;
  return a1;
}

__n128 __swift_memcpy113_8_0(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for DetectRemovedMessages(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  v5 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_BYTE *)(a1 + 101) = *(_BYTE *)(a2 + 101);
  *(_BYTE *)(a1 + 102) = *(_BYTE *)(a2 + 102);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectRemovedMessages(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 113))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectRemovedMessages(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 112) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 113) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 113) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectRemovedMessages()
{
  return &type metadata for DetectRemovedMessages;
}

unint64_t sub_1A55BC00C(uint64_t a1)
{
  unint64_t result;

  result = sub_1A55BC030();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A55BC030()
{
  unint64_t result;

  result = qword_1EE797A28;
  if (!qword_1EE797A28)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8F28, &type metadata for DetectRemovedMessages);
    atomic_store(result, (unint64_t *)&qword_1EE797A28);
  }
  return result;
}

void sub_1A55BC074(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  sub_1A5608C50(a1, *(_QWORD *)(v2 + 104), *(unsigned __int8 *)(v2 + 112), *(_QWORD *)(v1 + 24), *(_QWORD *)(v2 + 88), *(unsigned int *)(v2 + 96) | ((unint64_t)*(unsigned __int8 *)(v2 + 100) << 32));
}

uint64_t sub_1A55BC0A4()
{
  uint64_t v0;
  unint64_t v1;

  if (*(unsigned __int8 *)(v0 + 28) != 255)
  {
    v1 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 16), v1, SBYTE4(v1));
  }
  return swift_deallocObject();
}

double sub_1A55BC0E4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, unint64_t a10, char a11, char a12, char a13, char a14)
{
  uint64_t v18;
  int v21;
  int v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  char *v29;
  char *v30;
  _OWORD v31[2];
  int v32;
  char v33;
  ValueMetadata *v34;
  uint64_t v35;
  int v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v18 = a3;
  v33 = 1;
  v21 = a4 & 1;
  if ((sub_1A55BA9A4(a2, a5, a3, a4 & 1) & 1) == 0)
  {
    v29 = &v43;
    v30 = &v44;
LABEL_8:
    sub_1A552A19C(v18, v21);
    *(_OWORD *)v30 = *(_OWORD *)a1;
    sub_1A54F81BC((uint64_t)v30);
    *(_QWORD *)v29 = *(_QWORD *)(a1 + 24);
    *((_DWORD *)v29 + 2) = *(_DWORD *)(a1 + 32);
    sub_1A54F81BC((uint64_t)v29);
    swift_bridgeObjectRelease();
    sub_1A5503B8C(a7, a8);
    result = 0.0;
    a9[5] = 0u;
    a9[6] = 0u;
    a9[3] = 0u;
    a9[4] = 0u;
    a9[1] = 0u;
    a9[2] = 0u;
    *a9 = 0u;
    return result;
  }
  if ((a11 & 1) != 0)
  {
    v29 = &v41;
    v30 = &v42;
    goto LABEL_8;
  }
  v22 = *(_DWORD *)(a1 + 32);
  v23 = *(_OWORD *)(a1 + 16);
  v31[0] = *(_OWORD *)a1;
  v31[1] = v23;
  v32 = v22;
  v34 = &type metadata for DetectRemovedMessagesInRecent;
  sub_1A550F734();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  v24 = sub_1A5610F70(a5, a6, a7, a8 & 0xFFFFFFFFFFLL, a10, 0);
  v26 = v25;
  swift_bridgeObjectRelease();
  sub_1A5503B8C(a7, a8);
  v35 = v24;
  v36 = v26;
  v37 = BYTE4(v26) & 1;
  v38 = a13 & 1;
  v39 = a14 & 1;
  if (!v21)
  {
    v27 = *(_QWORD *)(v18 + 16);
    sub_1A552A19C(v18, 0);
    v18 = v27;
  }
  v40 = v18;
  sub_1A550FE88((uint64_t)v31, (uint64_t)a9);
  sub_1A550FE54((uint64_t)v31);
  return result;
}

uint64_t sub_1A55BC2D0()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6F580);
  qword_1EE7F9268 = result;
  return result;
}

uint64_t sub_1A55BC2F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE v28[4];
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  _BYTE v36[88];
  uint64_t v37;
  char v38;

  v2 = v1;
  v4 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  sub_1A55BAEB8(a1, (uint64_t)v6);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A550FE88(v2, (uint64_t)v36);
  v12 = sub_1A594A74C();
  v13 = sub_1A594C030();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v29 = v14;
    v16 = v15;
    v30 = swift_slowAlloc();
    v35 = v30;
    *(_DWORD *)v16 = 68159491;
    LODWORD(v33) = 2;
    v32 = v8;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 8) = 256;
    v17 = *(int *)(v4 + 20);
    v31 = v7;
    v18 = &v6[v17];
    LOBYTE(v33) = v6[v17];
    sub_1A594C3CC();
    *(_WORD *)(v16 + 11) = 2082;
    v20 = *((_QWORD *)v18 + 1);
    v19 = *((_QWORD *)v18 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v33 = sub_1A55791B0(v20, v19, &v35);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 21) = 1040;
    LODWORD(v33) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 27) = 512;
    LOWORD(v33) = *((_WORD *)v18 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v16 + 31) = 2160;
    v33 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 41) = 2085;
    v21 = *((_DWORD *)v18 + 10);
    v33 = *((_QWORD *)v18 + 4);
    v34 = v21;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = sub_1A594B4A8();
    v33 = sub_1A55791B0(v22, v23, &v35);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55BAEFC((uint64_t)v6);
    *(_WORD *)(v16 + 51) = 2082;
    LOBYTE(v33) = v38;
    v24 = sub_1A5607484(v37);
    v33 = sub_1A55791B0(v24, v25, &v35);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A550FE54((uint64_t)v36);
    _os_log_impl(&dword_1A4F90000, v12, (os_log_type_t)v29, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task: %{public}s", (uint8_t *)v16, 0x3Du);
    v26 = v30;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v26, -1, -1);
    MEMORY[0x1A85B1964](v16, -1, -1);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v32 + 8))(v11, v31);
  }
  else
  {
    sub_1A55BAEFC((uint64_t)v6);
    sub_1A550FE54((uint64_t)v36);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t sub_1A55BC6C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8C58);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8C40);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v3 + 102))
    v14 = 256;
  else
    v14 = 0;
  sub_1A55BB39C(a1, a2, v14 | *(unsigned __int8 *)(v3 + 101), v9);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1A55BF394((uint64_t)v9);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, 1, 1, v10);
  }
  else
  {
    v16 = *(int *)(v10 + 48);
    v17 = (uint64_t)&v13[v16];
    v18 = (uint64_t)v9 + v16;
    v19 = *v9;
    sub_1A54E68A0(v18, (uint64_t)&v13[v16]);
    v20 = (uint64_t)a3 + *(int *)(v10 + 48);
    *a3 = v19;
    sub_1A54E68A0(v17, v20);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
  }
}

void sub_1A55BC830(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  unsigned __int8 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  os_log_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t);
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  int v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  int v117;
  unint64_t v118;
  _BYTE *v119;
  uint64_t v120;
  unsigned __int8 *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unsigned __int8 v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  BOOL v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(uint64_t, uint64_t, uint64_t);
  NSObject *v155;
  os_log_type_t v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _BYTE *v161;
  uint64_t v162;
  unint64_t v163;
  int v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  NSObject *v177;
  os_log_type_t v178;
  int v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  int v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unsigned int v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unsigned int v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _BYTE v213[4];
  int v214;
  uint64_t v215;
  _BYTE *v216;
  _BYTE *v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  unint64_t v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  unint64_t v229;
  _BYTE *v230;
  unint64_t v231;
  _BYTE *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  os_log_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v243;
  int v244;
  uint64_t v245;
  _QWORD v246[6];
  unsigned int v247;
  unsigned __int8 v248;
  _OWORD v249[2];
  _BYTE v250[21];
  _OWORD v251[2];
  _BYTE v252[21];

  v5 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v213[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v213[-v9];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v213[-v12];
  MEMORY[0x1E0C80A78](v14);
  v16 = &v213[-v15];
  v17 = sub_1A594A764();
  v228 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v26 = *(_QWORD *)(v2 + 88);
  v27 = *(_QWORD *)(v26 + 16);
  if (!v27)
  {
    v47 = *(_QWORD *)(v2 + 24);
    v48 = *(_DWORD *)(v2 + 32);
    MEMORY[0x1E0C80A78](v21);
    *(_QWORD *)&v213[-16] = a2;
    if (*(_BYTE *)(a1 + 168) == 1)
    {
      v50 = *(_QWORD *)(a1 + 152);
      v49 = *(_QWORD *)(a1 + 160);
      *(_QWORD *)&v251[0] = *(_QWORD *)(a1 + 144);
      v51 = *(_QWORD *)&v251[0];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A551C6E4((uint64_t)v251, v47, v48, 0, (void (*)(uint64_t))sub_1A55BF38C, &v213[-32]);
      sub_1A54E8FCC(v51, v50, v49, 1);
      v52 = *(_QWORD *)&v251[0];
      *(_QWORD *)(a1 + 152) = 0;
      *(_QWORD *)(a1 + 160) = 0;
      *(_QWORD *)(a1 + 144) = v52;
      *(_BYTE *)(a1 + 168) = 1;
    }
    return;
  }
  v230 = v16;
  v231 = (unint64_t)v13;
  v232 = &v213[-v22];
  v233 = v25;
  v217 = v10;
  v223 = v5;
  v216 = v7;
  v218 = v24;
  v219 = v23;
  v224 = v21;
  v227 = v2;
  v226 = a2;
  v225 = a1;
  v242 = sub_1A54E3414();
  *(_QWORD *)&v251[0] = MessageIdentifierSet.init()(&type metadata for UID, v242);
  DWORD2(v251[0]) = v28;
  BYTE12(v251[0]) = v29;
  swift_bridgeObjectRetain_n();
  v234 = v26;
  v30 = (unsigned __int8 *)(v26 + 84);
  do
  {
    v239 = *(os_log_t *)(v30 - 44);
    LODWORD(v238) = *((_DWORD *)v30 - 9);
    v31 = *(_QWORD *)(v30 - 28);
    v32 = *((unsigned int *)v30 - 5);
    v33 = *(v30 - 16);
    v235 = *(_QWORD *)(v30 - 12);
    v34 = v235;
    v35 = *((unsigned int *)v30 - 1);
    v236 = v35;
    v36 = *v30;
    v37 = *(v30 - 32);
    LODWORD(v237) = v37;
    sub_1A54E4334((uint64_t)v239, v238, v37);
    sub_1A54E4334(v31, v32, v33);
    sub_1A54E4334(v34, v35, v36);
    v240 = v240 & 0xFFFFFF0000000000 | v32 | (v33 << 32);
    v241 = v241 & 0xFFFFFF0000000000 | v35 | (v36 << 32);
    MessageIdentifierSet.subtracting(_:)(v31, v240, v34, v241);
    v39 = v38;
    v40 = v27;
    v42 = v41;
    v43 = HIDWORD(v41);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
    MessageIdentifierSet.formUnion(_:)(v39, v42 & 0xFFFFFFFFFFLL);
    sub_1A54E3458(v39, v42, v43);
    sub_1A54E3458((uint64_t)v239, v238, v237);
    sub_1A54E3458(v31, v32, v33);
    sub_1A54E3458(v235, v236, v36);
    v30 += 56;
    v27 = v40 - 1;
  }
  while (v40 != 1);
  swift_bridgeObjectRelease_n();
  v44 = *(_QWORD *)&v251[0];
  v45 = DWORD2(v251[0]);
  v46 = BYTE12(v251[0]);
  if (!MessageIdentifierSet.isEmpty.getter(*(uint64_t *)&v251[0], DWORD2(v251[0]) | ((unint64_t)BYTE12(v251[0]) << 32)))
  {
    MessageIdentifierSet.ranges.getter(v44, v45 | (v46 << 32));
    v54 = v53;
    v56 = v55;
    v57 = v55 & 0xFFFFFFFFFFLL;
    v58 = MessageIdentifierSet.RangeView.endIndex.getter(v53, v55 & 0xFFFFFFFFFFLL);
    if (MessageIdentifierSet.RangeView.endIndex.getter(v54, v57) < 0)
    {
LABEL_42:
      __break(1u);
    }
    else
    {
      v59 = MessageIdentifierSet.RangeView.endIndex.getter(v54, v57);
      sub_1A54E3458(v54, v56, SBYTE4(v56));
      if ((v58 & 0x8000000000000000) == 0 && v59 >= v58)
      {
        v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v228 + 16);
        if ((unint64_t)v58 > 0x13)
        {
          v86 = v233;
          v87 = v226;
          v88 = v224;
          v60(v233, v226, v224);
          v89 = v231;
          sub_1A55BAEB8(v87, v231);
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          sub_1A54E4334(v44, v45, v46);
          sub_1A54E4334(v44, v45, v46);
          sub_1A54E4334(v44, v45, v46);
          v90 = sub_1A594A74C();
          v91 = sub_1A594C018();
          v92 = v91;
          v241 = (uint64_t)v90;
          if (!os_log_type_enabled(v90, v91))
          {
            sub_1A54E3458(v44, v45, v46);
            sub_1A55BAEFC(v89);
            sub_1A54E3458(v44, v45, v46);
            sub_1A54E3458(v44, v45, v46);
            sub_1A54E3458(v44, v45, v46);

            v84 = *(void (**)(uint64_t, uint64_t))(v228 + 8);
            v112 = v86;
            v113 = v88;
            goto LABEL_19;
          }
          v93 = swift_slowAlloc();
          LODWORD(v239) = v92;
          v94 = v93;
          v240 = swift_slowAlloc();
          *(_QWORD *)&v249[0] = v240;
          *(_DWORD *)v94 = 68159747;
          LODWORD(v251[0]) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v94 + 8) = 256;
          v95 = v89 + *(int *)(v223 + 20);
          LOBYTE(v251[0]) = *(_BYTE *)v95;
          sub_1A594C3CC();
          *(_WORD *)(v94 + 11) = 2082;
          v96 = *(_QWORD *)(v95 + 8);
          v97 = *(_QWORD *)(v95 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          *(_QWORD *)&v251[0] = sub_1A55791B0(v96, v97, (uint64_t *)v249);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v94 + 21) = 1040;
          LODWORD(v251[0]) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v94 + 27) = 512;
          LOWORD(v251[0]) = *(_WORD *)(v95 + 24);
          sub_1A594C3CC();
          *(_WORD *)(v94 + 31) = 2160;
          *(_QWORD *)&v251[0] = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v94 + 41) = 2085;
          v98 = *(_DWORD *)(v95 + 40);
          *(_QWORD *)&v251[0] = *(_QWORD *)(v95 + 32);
          DWORD2(v251[0]) = v98;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v99 = sub_1A594B4A8();
          *(_QWORD *)&v251[0] = sub_1A55791B0(v99, v100, (uint64_t *)v249);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55BAEFC(v231);
          *(_WORD *)(v94 + 51) = 2048;
          v101 = MessageIdentifierSet.count.getter(v44, v45 | (v46 << 32));
          sub_1A54E3458(v44, v45, v46);
          *(_QWORD *)&v251[0] = v101;
          sub_1A594C3CC();
          sub_1A54E3458(v44, v45, v46);
          *(_WORD *)(v94 + 61) = 2082;
          v238 = v94 + 63;
          v102 = sub_1A55E1944(20, v44, v45 | (v46 << 32));
          v104 = v103;
          v105 = HIDWORD(v103);
          MessageIdentifierSet.debugDescription.getter();
          v107 = v106;
          v109 = v108;
          sub_1A54E3458(v102, v104, v105);
          *(_QWORD *)&v251[0] = sub_1A55791B0(v107, v109, (uint64_t *)v249);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A54E3458(v44, v45, v46);
          sub_1A54E3458(v44, v45, v46);
          v110 = (id)v241;
          _os_log_impl(&dword_1A4F90000, (os_log_t)v241, (os_log_type_t)v239, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld UIDs: ... %{public}s", (uint8_t *)v94, 0x47u);
          v111 = v240;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v111, -1, -1);
          MEMORY[0x1A85B1964](v94, -1, -1);

          v84 = *(void (**)(uint64_t, uint64_t))(v228 + 8);
          v85 = &v252[8];
        }
        else
        {
          v61 = v232;
          v62 = v226;
          v63 = v224;
          v60((uint64_t)v232, v226, v224);
          v64 = (uint64_t)v230;
          sub_1A55BAEB8(v62, (uint64_t)v230);
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          sub_1A54E4334(v44, v45, v46);
          sub_1A54E4334(v44, v45, v46);
          sub_1A54E4334(v44, v45, v46);
          v65 = sub_1A594A74C();
          v66 = sub_1A594C018();
          v67 = v66;
          if (!os_log_type_enabled(v65, v66))
          {
            sub_1A54E3458(v44, v45, v46);
            sub_1A55BAEFC(v64);
            sub_1A54E3458(v44, v45, v46);
            sub_1A54E3458(v44, v45, v46);
            sub_1A54E3458(v44, v45, v46);

            (*(void (**)(_BYTE *, uint64_t))(v228 + 8))(v61, v63);
            goto LABEL_20;
          }
          v68 = swift_slowAlloc();
          LODWORD(v240) = v67;
          v69 = v68;
          v241 = swift_slowAlloc();
          *(_QWORD *)&v249[0] = v241;
          *(_DWORD *)v69 = 68159747;
          LODWORD(v251[0]) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v69 + 8) = 256;
          v70 = *(int *)(v223 + 20);
          v239 = v65;
          v71 = v64 + v70;
          LOBYTE(v251[0]) = *(_BYTE *)(v64 + v70);
          sub_1A594C3CC();
          *(_WORD *)(v69 + 11) = 2082;
          v73 = *(_QWORD *)(v71 + 8);
          v72 = *(_QWORD *)(v71 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          *(_QWORD *)&v251[0] = sub_1A55791B0(v73, v72, (uint64_t *)v249);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v69 + 21) = 1040;
          LODWORD(v251[0]) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v69 + 27) = 512;
          LOWORD(v251[0]) = *(_WORD *)(v71 + 24);
          sub_1A594C3CC();
          *(_WORD *)(v69 + 31) = 2160;
          *(_QWORD *)&v251[0] = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v69 + 41) = 2085;
          v74 = *(_DWORD *)(v71 + 40);
          *(_QWORD *)&v251[0] = *(_QWORD *)(v71 + 32);
          DWORD2(v251[0]) = v74;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v75 = sub_1A594B4A8();
          *(_QWORD *)&v251[0] = sub_1A55791B0(v75, v76, (uint64_t *)v249);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55BAEFC((uint64_t)v230);
          *(_WORD *)(v69 + 51) = 2048;
          v77 = MessageIdentifierSet.count.getter(v44, v45 | (v46 << 32));
          sub_1A54E3458(v44, v45, v46);
          *(_QWORD *)&v251[0] = v77;
          sub_1A594C3CC();
          sub_1A54E3458(v44, v45, v46);
          *(_WORD *)(v69 + 61) = 2082;
          sub_1A54E4334(v44, v45, v46);
          MessageIdentifierSet.debugDescription.getter();
          v79 = v78;
          v81 = v80;
          sub_1A54E3458(v44, v45, v46);
          *(_QWORD *)&v251[0] = sub_1A55791B0(v79, v81, (uint64_t *)v249);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A54E3458(v44, v45, v46);
          sub_1A54E3458(v44, v45, v46);
          v82 = v239;
          _os_log_impl(&dword_1A4F90000, v239, (os_log_type_t)v240, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld UIDs: %{public}s", (uint8_t *)v69, 0x47u);
          v83 = v241;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v83, -1, -1);
          MEMORY[0x1A85B1964](v69, -1, -1);

          v84 = *(void (**)(uint64_t, uint64_t))(v228 + 8);
          v85 = v252;
        }
        v112 = *((_QWORD *)v85 - 32);
        v113 = v224;
LABEL_19:
        v84(v112, v113);
        goto LABEL_20;
      }
    }
    __break(1u);
    return;
  }
  sub_1A54E3458(v44, v45, v46);
LABEL_20:
  v114 = v227;
  v115 = *(_QWORD *)(v227 + 88);
  v116 = *(unsigned int *)(v227 + 96);
  LOBYTE(v251[0]) = *(_BYTE *)(v227 + 100);
  v117 = LOBYTE(v251[0]);
  v230 = (_BYTE *)sub_1A56124E0(v116 | ((unint64_t)LOBYTE(v251[0]) << 32));
  v119 = *(_BYTE **)(v115 + 16);
  if (v119)
  {
    v220 = HIDWORD(v118);
    v214 = v117;
    v215 = v116;
    v221 = v118;
    v229 = v118 & 0xFFFFFFFFFFLL;
    swift_bridgeObjectRetain_n();
    v120 = 0;
    v222 = v115;
    v121 = (unsigned __int8 *)(v115 + 84);
    do
    {
      v232 = v119;
      v241 = v120;
      v240 = *(_QWORD *)(v121 - 44);
      LODWORD(v239) = *((_DWORD *)v121 - 9);
      v122 = *(_QWORD *)(v121 - 28);
      v123 = *((unsigned int *)v121 - 5);
      v124 = *(v121 - 16);
      v233 = v124;
      v235 = *(_QWORD *)(v121 - 12);
      v125 = v235;
      v126 = *((unsigned int *)v121 - 1);
      v237 = v126;
      v127 = *v121;
      v236 = v127;
      v128 = *(v121 - 32);
      LODWORD(v238) = v128;
      sub_1A54E4334(v240, v239, v128);
      v234 = v123;
      sub_1A54E4334(v122, v123, v124);
      sub_1A54E4334(v125, v126, v127);
      v129 = v114 & 0xFFFFFF0000000000 | v123 | (v124 << 32);
      v231 = v115 & 0xFFFFFF0000000000 | v126 | (v127 << 32);
      v130 = v122;
      v114 = v129;
      MessageIdentifierSet.subtracting(_:)(v125, v231, v122, v129);
      v132 = v131;
      v134 = v133;
      v135 = HIDWORD(v133);
      MessageIdentifierSet.subtracting(_:)((uint64_t)v230, v229, v131, v133 & 0xFFFFFFFFFFLL);
      v137 = v136;
      v139 = v138;
      v140 = HIDWORD(v138);
      sub_1A54E3458(v132, v134, v135);
      v141 = MessageIdentifierSet.count.getter(v137, v139 & 0xFFFFFFFFFFLL);
      sub_1A54E3458(v137, v139, v140);
      sub_1A54E3458(v240, v239, v238);
      sub_1A54E3458(v130, v234, v233);
      v142 = v241;
      sub_1A54E3458(v235, v237, v236);
      v143 = __OFADD__(v142, v141);
      v120 = v142 + v141;
      if (v143)
      {
        __break(1u);
        goto LABEL_42;
      }
      v121 += 56;
      v119 = v232 - 1;
      v115 = v231;
    }
    while (v232 != (_BYTE *)1);
    v144 = v222;
    swift_bridgeObjectRelease_n();
    v145 = sub_1A54E3458((uint64_t)v230, v221, v220);
    v146 = v225;
    v147 = v226;
    v114 = v227;
    if (v120 > 0)
    {
      LOBYTE(v251[0]) = v214;
      sub_1A560FEBC(271, v144, v215 | ((unint64_t)v214 << 32), (uint64_t)v246);
      v148 = v246[0];
      v149 = v246[1];
      v150 = v246[5];
      v151 = v248;
      v152 = v247;
      v145 = sub_1A55BF29C((uint64_t)v246, (uint64_t)v249);
      if ((~*((_QWORD *)&v249[0] + 1) & 0xFF00000000) != 0)
      {
        v153 = v152 | (v151 << 32);
        v251[0] = v249[0];
        v251[1] = v249[1];
        *(_OWORD *)v252 = *(_OWORD *)v250;
        *(_QWORD *)&v252[13] = *(_QWORD *)&v250[13];
        v154 = *(void (**)(uint64_t, uint64_t, uint64_t))(v228 + 16);
        v241 = v120;
        if ((unint64_t)v120 > 0x13)
        {
          v154(v219, v147, v224);
          v176 = (uint64_t)v216;
          sub_1A55BAEB8(v147, (uint64_t)v216);
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
          sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
          sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
          sub_1A54E4334(v148, v149, SBYTE4(v149));
          sub_1A54E4334(v150, v153, SBYTE4(v153));
          v177 = sub_1A594A74C();
          v178 = sub_1A594C018();
          v179 = v178;
          if (os_log_type_enabled(v177, v178))
          {
            v180 = swift_slowAlloc();
            LODWORD(v239) = v179;
            v181 = v180;
            v240 = swift_slowAlloc();
            v245 = v240;
            *(_DWORD *)v181 = 68160003;
            LODWORD(v243) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v181 + 8) = 256;
            v182 = v176 + *(int *)(v223 + 20);
            LOBYTE(v243) = *(_BYTE *)v182;
            sub_1A594C3CC();
            *(_WORD *)(v181 + 11) = 2082;
            v183 = *(_QWORD *)(v182 + 8);
            v184 = *(_QWORD *)(v182 + 16);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v243 = sub_1A55791B0(v183, v184, &v245);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            *(_WORD *)(v181 + 21) = 1040;
            LODWORD(v243) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v181 + 27) = 512;
            LOWORD(v243) = *(_WORD *)(v182 + 24);
            sub_1A594C3CC();
            *(_WORD *)(v181 + 31) = 2160;
            v243 = 0x786F626C69616DLL;
            sub_1A594C3CC();
            *(_WORD *)(v181 + 41) = 2085;
            v185 = *(_DWORD *)(v182 + 40);
            v243 = *(_QWORD *)(v182 + 32);
            v244 = v185;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v186 = sub_1A594B4A8();
            v243 = sub_1A55791B0(v186, v187, &v245);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A55BAEFC(v176);
            *(_WORD *)(v181 + 51) = 2048;
            v243 = v241;
            sub_1A594C3CC();
            *(_WORD *)(v181 + 61) = 2048;
            v188 = *(_QWORD *)&v251[0];
            v189 = DWORD2(v251[0]) | ((unint64_t)BYTE12(v251[0]) << 32);
            v190 = MessageIdentifierSet.count.getter(*(uint64_t *)&v251[0], v189);
            sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
            v243 = v190;
            sub_1A594C3CC();
            sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
            *(_WORD *)(v181 + 71) = 2082;
            v191 = sub_1A55E1944(20, v188, v189);
            v193 = v192;
            v194 = HIDWORD(v192);
            MessageIdentifierSet.debugDescription.getter();
            v196 = v195;
            v198 = v197;
            sub_1A54E3458(v191, v193, v194);
            v199 = v196;
            v147 = v226;
            v243 = sub_1A55791B0(v199, v198, &v245);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
            sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
            _os_log_impl(&dword_1A4F90000, v177, (os_log_type_t)v239, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld missing UIDs, adding %ld UIDs as missing: ... %{public}s", (uint8_t *)v181, 0x51u);
            v200 = v240;
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v200, -1, -1);
            MEMORY[0x1A85B1964](v181, -1, -1);
          }
          else
          {
            sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
            sub_1A55BAEFC(v176);
            sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
            sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
            sub_1A54E3458(v148, v149, SBYTE4(v149));
            sub_1A54E3458(v150, v153, SBYTE4(v153));
          }

          (*(void (**)(uint64_t, uint64_t))(v228 + 8))(v219, v224);
          v146 = v225;
          v114 = v227;
          if ((*(_BYTE *)(v225 + 168) & 1) == 0)
            goto LABEL_34;
        }
        else
        {
          v154(v218, v147, v224);
          sub_1A55BAEB8(v147, (uint64_t)v217);
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
          sub_1A54E4334(v148, v149, SBYTE4(v149));
          sub_1A54E4334(v150, v153, SBYTE4(v153));
          v155 = sub_1A594A74C();
          v156 = sub_1A594C018();
          v157 = v156;
          if (os_log_type_enabled(v155, v156))
          {
            v158 = swift_slowAlloc();
            LODWORD(v239) = v157;
            v159 = v158;
            v240 = swift_slowAlloc();
            v245 = v240;
            *(_DWORD *)v159 = 68159747;
            LODWORD(v243) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v159 + 8) = 256;
            v160 = (uint64_t)v217;
            v161 = &v217[*(int *)(v223 + 20)];
            LOBYTE(v243) = *v161;
            sub_1A594C3CC();
            *(_WORD *)(v159 + 11) = 2082;
            v162 = *((_QWORD *)v161 + 1);
            v163 = *((_QWORD *)v161 + 2);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v243 = sub_1A55791B0(v162, v163, &v245);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            *(_WORD *)(v159 + 21) = 1040;
            LODWORD(v243) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v159 + 27) = 512;
            LOWORD(v243) = *((_WORD *)v161 + 12);
            sub_1A594C3CC();
            *(_WORD *)(v159 + 31) = 2160;
            v243 = 0x786F626C69616DLL;
            sub_1A594C3CC();
            *(_WORD *)(v159 + 41) = 2085;
            v164 = *((_DWORD *)v161 + 10);
            v243 = *((_QWORD *)v161 + 4);
            v244 = v164;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v165 = sub_1A594B4A8();
            v243 = sub_1A55791B0(v165, v166, &v245);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A55BAEFC(v160);
            *(_WORD *)(v159 + 51) = 2048;
            v243 = v241;
            sub_1A594C3CC();
            *(_WORD *)(v159 + 61) = 2082;
            v167 = *(_QWORD *)&v251[0];
            v168 = DWORD2(v251[0]);
            LOBYTE(v161) = BYTE12(v251[0]);
            sub_1A54E4334(*(uint64_t *)&v251[0], DWORD2(v251[0]), SBYTE12(v251[0]));
            MessageIdentifierSet.debugDescription.getter();
            v170 = v169;
            v172 = v171;
            v173 = (char)v161;
            v146 = v225;
            sub_1A54E3458(v167, v168, v173);
            v174 = v170;
            v147 = v226;
            v243 = sub_1A55791B0(v174, v172, &v245);
            v114 = v227;
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
            sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
            _os_log_impl(&dword_1A4F90000, v155, (os_log_type_t)v239, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld missing UIDs: %{public}s", (uint8_t *)v159, 0x47u);
            v175 = v240;
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v175, -1, -1);
            MEMORY[0x1A85B1964](v159, -1, -1);
          }
          else
          {
            sub_1A55BAEFC((uint64_t)v217);
            sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
            sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
          }

          (*(void (**)(uint64_t, uint64_t))(v228 + 8))(v218, v224);
          if ((*(_BYTE *)(v146 + 168) & 1) == 0)
          {
LABEL_34:
            v145 = sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
            goto LABEL_38;
          }
        }
        v202 = *(_QWORD *)(v146 + 152);
        v201 = *(_QWORD *)(v146 + 160);
        v204 = *(_DWORD *)(v114 + 32);
        v205 = *(_QWORD *)(v114 + 24);
        v243 = *(_QWORD *)(v146 + 144);
        v203 = v243;
        sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
        sub_1A55212D0(v203, v202, v201, 1);
        sub_1A551C3AC((uint64_t)&v243, v205, v204, 0, (uint64_t)v251);
        sub_1A54E8FCC(v203, v202, v201, 1);
        v145 = sub_1A55BF2E4((uint64_t)v246, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        v206 = v243;
        *(_QWORD *)(v146 + 152) = 0;
        *(_QWORD *)(v146 + 160) = 0;
        *(_QWORD *)(v146 + 144) = v206;
        *(_BYTE *)(v146 + 168) = 1;
        v114 = v227;
      }
    }
  }
  else
  {
    v145 = sub_1A54E3458((uint64_t)v230, v118, SBYTE4(v118));
    v146 = v225;
    v147 = v226;
  }
LABEL_38:
  v207 = *(_QWORD *)(v114 + 24);
  v208 = *(_DWORD *)(v114 + 32);
  MEMORY[0x1E0C80A78](v145);
  *(_QWORD *)&v213[-16] = v114;
  *(_QWORD *)&v213[-8] = v147;
  if (*(_BYTE *)(v146 + 168) == 1)
  {
    v210 = *(_QWORD *)(v146 + 152);
    v209 = *(_QWORD *)(v146 + 160);
    v243 = *(_QWORD *)(v146 + 144);
    v211 = v243;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A551C6E4((uint64_t)&v243, v207, v208, 0, (void (*)(uint64_t))sub_1A55BF294, &v213[-32]);
    sub_1A54E8FCC(v211, v210, v209, 1);
    v212 = v243;
    *(_QWORD *)(v146 + 152) = 0;
    *(_QWORD *)(v146 + 160) = 0;
    *(_QWORD *)(v146 + 144) = v212;
    *(_BYTE *)(v146 + 168) = 1;
  }
}

uint64_t sub_1A55BE43C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;

  v4 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 200);
  v12 = v11;
  if ((*(_BYTE *)(a1 + 208) & 1) == 0)
    v12 = *(_QWORD *)(v11 + 16);
  sub_1A552A19C(v11, *(_BYTE *)(a1 + 208));
  *(_QWORD *)(a1 + 200) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(a1 + 208) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  sub_1A55BAEB8(a2, (uint64_t)v6);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v13 = sub_1A594A74C();
  v14 = sub_1A594C030();
  v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    v16 = swift_slowAlloc();
    v29 = v15;
    v17 = v16;
    v28 = swift_slowAlloc();
    v34 = v28;
    *(_DWORD *)v17 = 68159491;
    LODWORD(v32) = 2;
    v31 = v8;
    sub_1A594C3CC();
    *(_WORD *)(v17 + 8) = 256;
    v18 = *(int *)(v4 + 20);
    v30 = v7;
    v19 = &v6[v18];
    LOBYTE(v32) = v6[v18];
    sub_1A594C3CC();
    *(_WORD *)(v17 + 11) = 2082;
    v27 = v12;
    v21 = *((_QWORD *)v19 + 1);
    v20 = *((_QWORD *)v19 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v32 = sub_1A55791B0(v21, v20, &v34);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 21) = 1040;
    LODWORD(v32) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v17 + 27) = 512;
    LOWORD(v32) = *((_WORD *)v19 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v17 + 31) = 2160;
    v32 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v17 + 41) = 2085;
    v22 = *((_DWORD *)v19 + 10);
    v32 = *((_QWORD *)v19 + 4);
    v33 = v22;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v23 = sub_1A594B4A8();
    v32 = sub_1A55791B0(v23, v24, &v34);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55BAEFC((uint64_t)v6);
    *(_WORD *)(v17 + 51) = 2048;
    v32 = v27;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v13, (os_log_type_t)v29, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Local mailbox is empty. Removed %ld pending expunge.", (uint8_t *)v17, 0x3Du);
    v25 = v28;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v25, -1, -1);
    MEMORY[0x1A85B1964](v17, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v10, v30);
  }
  else
  {
    sub_1A55BAEFC((uint64_t)v6);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1A55BE7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;

  v6 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - v10;
  v12 = sub_1A594A764();
  v51 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v47 - v16;
  v50 = *(_QWORD *)(a2 + 104);
  sub_1A55391B4(v50);
  v18 = *(_QWORD *)(a1 + 200);
  if ((*(_BYTE *)(a1 + 208) & 1) == 0)
    v18 = *(_QWORD *)(v18 + 16);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
  if (v18 < 1)
  {
    v19(v14, a3, v12);
    sub_1A55BAEB8(a3, (uint64_t)v8);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v33 = sub_1A594A74C();
    v34 = sub_1A594C030();
    v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      v36 = swift_slowAlloc();
      v48 = swift_slowAlloc();
      v54 = v48;
      *(_DWORD *)v36 = 68159491;
      LODWORD(v52) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v36 + 8) = 256;
      v37 = *(int *)(v6 + 20);
      LODWORD(v47) = v35;
      v38 = &v8[v37];
      LOBYTE(v52) = v8[v37];
      sub_1A594C3CC();
      *(_WORD *)(v36 + 11) = 2082;
      v49 = v12;
      v39 = *((_QWORD *)v38 + 1);
      v40 = *((_QWORD *)v38 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v52 = sub_1A55791B0(v39, v40, &v54);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 21) = 1040;
      LODWORD(v52) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v36 + 27) = 512;
      LOWORD(v52) = *((_WORD *)v38 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v36 + 31) = 2160;
      v52 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v36 + 41) = 2085;
      v41 = *((_DWORD *)v38 + 10);
      v52 = *((_QWORD *)v38 + 4);
      v53 = v41;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v42 = sub_1A594B4A8();
      v52 = sub_1A55791B0(v42, v43, &v54);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55BAEFC((uint64_t)v8);
      *(_WORD *)(v36 + 51) = 2048;
      v52 = v50;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v33, (os_log_type_t)v47, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed all %ld EXPUNGE messages.", (uint8_t *)v36, 0x3Du);
      v44 = v48;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v44, -1, -1);
      MEMORY[0x1A85B1964](v36, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v14, v49);
    }
    sub_1A55BAEFC((uint64_t)v8);

    v45 = *(uint64_t (**)(char *, uint64_t))(v51 + 8);
    v46 = v14;
  }
  else
  {
    v19(v17, a3, v12);
    sub_1A55BAEB8(a3, (uint64_t)v11);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v20 = sub_1A594A74C();
    v21 = sub_1A594C030();
    v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v23 = swift_slowAlloc();
      LODWORD(v48) = v22;
      v24 = v23;
      v47 = swift_slowAlloc();
      v54 = v47;
      *(_DWORD *)v24 = 68159747;
      LODWORD(v52) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 8) = 256;
      v25 = &v11[*(int *)(v6 + 20)];
      LOBYTE(v52) = *v25;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 11) = 2082;
      v49 = v12;
      v26 = *((_QWORD *)v25 + 1);
      v27 = *((_QWORD *)v25 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v52 = sub_1A55791B0(v26, v27, &v54);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 21) = 1040;
      LODWORD(v52) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 27) = 512;
      LOWORD(v52) = *((_WORD *)v25 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v24 + 31) = 2160;
      v52 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 41) = 2085;
      v28 = *((_DWORD *)v25 + 10);
      v52 = *((_QWORD *)v25 + 4);
      v53 = v28;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v29 = sub_1A594B4A8();
      v52 = sub_1A55791B0(v29, v30, &v54);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55BAEFC((uint64_t)v11);
      *(_WORD *)(v24 + 51) = 2048;
      v52 = v50;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 61) = 2048;
      v52 = v18;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v20, (os_log_type_t)v48, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld EXPUNGE messages, still %ld remaining.", (uint8_t *)v24, 0x47u);
      v31 = v47;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v31, -1, -1);
      MEMORY[0x1A85B1964](v24, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v17, v49);
    }
    sub_1A55BAEFC((uint64_t)v11);

    v45 = *(uint64_t (**)(char *, uint64_t))(v51 + 8);
    v46 = v17;
  }
  return v45(v46, v12);
}

uint64_t sub_1A55BEECC()
{
  return sub_1A54F8ABC((uint64_t)&unk_1E4E6F5A8);
}

unint64_t sub_1A55BEEE4()
{
  return 0xD00000000000001DLL;
}

uint64_t initializeWithCopy for DetectRemovedMessagesInRecent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = a2 + 48;
  v6 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(a1 + 48, v5, v7);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_WORD *)(a1 + 101) = *(_WORD *)(a2 + 101);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for DetectRemovedMessagesInRecent(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v4;
  *(_BYTE *)(a1 + 101) = *(_BYTE *)(a2 + 101);
  *(_BYTE *)(a1 + 102) = *(_BYTE *)(a2 + 102);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for DetectRemovedMessagesInRecent(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  v5 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_BYTE *)(a1 + 101) = *(_BYTE *)(a2 + 101);
  *(_BYTE *)(a1 + 102) = *(_BYTE *)(a2 + 102);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectRemovedMessagesInRecent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectRemovedMessagesInRecent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectRemovedMessagesInRecent()
{
  return &type metadata for DetectRemovedMessagesInRecent;
}

unint64_t sub_1A55BF22C(uint64_t a1)
{
  unint64_t result;

  result = sub_1A55BF250();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A55BF250()
{
  unint64_t result;

  result = qword_1EE797C80;
  if (!qword_1EE797C80)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A8F90, &type metadata for DetectRemovedMessagesInRecent);
    atomic_store(result, (unint64_t *)&qword_1EE797C80);
  }
  return result;
}

uint64_t sub_1A55BF294(uint64_t a1)
{
  uint64_t v1;

  return sub_1A55BE7E8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A55BF29C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8C50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A55BF2E4(uint64_t a1, void (*a2)(uint64_t, unint64_t, unint64_t))
{
  sub_1A55BF328(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32), a2);
  return a1;
}

uint64_t sub_1A55BF328(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, unint64_t, unint64_t))
{
  uint64_t v10;

  if ((~a2 & 0xFF00000000) != 0)
  {
    v10 = BYTE4(a7);
    a8(result, a2, HIDWORD(a2));
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))a8)(a6, a7, v10);
  }
  return result;
}

uint64_t sub_1A55BF38C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A55BE43C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A55BF394(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8C58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A55BF3D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11)
{
  uint64_t result;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;
  char v35;

  *(_QWORD *)a9 = MEMORY[0x1E0DEE9E8];
  *(_BYTE *)(a9 + 8) = 0;
  *(_QWORD *)(a9 + 76) = 0;
  *(_BYTE *)(a9 + 84) = 1;
  *(_QWORD *)(a9 + 16) = &type metadata for DetermineMessageBatches;
  sub_1A550F734();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A594C6B4();
  v18 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a9 + 88) = *(_OWORD *)a1;
  *(_QWORD *)(a9 + 64) = a2;
  *(_BYTE *)(a9 + 72) = a3 & 1;
  *(_OWORD *)(a9 + 104) = v18;
  *(_DWORD *)(a9 + 120) = *(_DWORD *)(a1 + 32);
  *(_DWORD *)(a9 + 124) = a7;
  *(_BYTE *)(a9 + 128) = BYTE4(a7) & 1;
  *(_BYTE *)(a9 + 129) = a10 & 1;
  *(_BYTE *)(a9 + 130) = a11 & 1;
  if ((a5 & 1) == 0)
  {
    result = sub_1A552D430(a4);
    v19 = result;
    *(_QWORD *)(a9 + 136) = result;
    v20 = a6;
    if (a6)
    {
      if (result >= a6)
      {
LABEL_4:
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF10);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1A59ABD10;
        sub_1A54E3414();
        static MessageIdentifier.... infix(_:_:)();
        v22 = sub_1A55C2050(MEMORY[0x1E0DEE9D8], (uint64_t (*)(void))sub_1A54E3414, (uint64_t)&type metadata for UID);
        result = sub_1A552E8F4(v19, v21, v22, v23 & 0xFFFFFFFFFFLL);
        *(_QWORD *)(a9 + 144) = result;
        *(_QWORD *)(a9 + 152) = v24;
        *(_QWORD *)(a9 + 160) = v25;
        *(_DWORD *)(a9 + 168) = v26;
        *(_BYTE *)(a9 + 172) = v27;
        *(_BYTE *)(a9 + 173) = 1;
        return result;
      }
      goto LABEL_7;
    }
LABEL_10:
    v28 = MEMORY[0x1E0DEE9D8];
    v29 = sub_1A55C2050(MEMORY[0x1E0DEE9D8], (uint64_t (*)(void))sub_1A54E3414, (uint64_t)&type metadata for UID);
    result = sub_1A552E8F4(v19, v28, v29, v30 & 0xFFFFFFFFFFLL);
    *(_QWORD *)(a9 + 144) = result;
    *(_QWORD *)(a9 + 152) = v31;
    *(_QWORD *)(a9 + 160) = v32;
    *(_DWORD *)(a9 + 168) = v33;
    *(_BYTE *)(a9 + 172) = v34;
    v35 = 1;
    goto LABEL_12;
  }
  v19 = 4507;
  *(_QWORD *)(a9 + 136) = 4507;
  v20 = a6;
  if (!a6)
    goto LABEL_10;
  v19 = 4507;
  if (a6 <= 4507)
    goto LABEL_4;
LABEL_7:
  if ((a8 & 1) != 0 && ((a7 & 0x100000000) == 0) | a3 & 1)
  {
    *(_QWORD *)(a9 + 152) = 0;
    *(_QWORD *)(a9 + 160) = 0;
    *(_QWORD *)(a9 + 144) = v20;
    *(_QWORD *)(a9 + 166) = 0;
    return result;
  }
  *(_QWORD *)(a9 + 144) = 0;
  *(_QWORD *)(a9 + 152) = 0;
  *(_QWORD *)(a9 + 165) = 0;
  *(_QWORD *)(a9 + 160) = 0;
  v35 = 2;
LABEL_12:
  *(_BYTE *)(a9 + 173) = v35;
  return result;
}

BOOL sub_1A55BF650(uint64_t a1, uint64_t a2)
{
  return sub_1A55C18D4(*(_QWORD *)a1, *(int32x2_t **)(a1 + 8), *(int32x2_t **)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 29) << 40), *(_QWORD *)a2, *(int32x2_t **)(a2 + 8), *(_QWORD *)(a2 + 16), *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 29) << 40));
}

void sub_1A55BF694()
{
  qword_1EE7F9258 = MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1A55BF6A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  int v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t);
  char *v67;
  os_log_type_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  char *v82;
  NSObject *v83;
  os_log_type_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  int v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  os_log_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  os_log_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;

  v113 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v113);
  v4 = (char *)&v105 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v105 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v105 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v105 - v12;
  v14 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v105 - v18;
  MEMORY[0x1E0C80A78](v20);
  v25 = MEMORY[0x1E0C80A78](v21);
  if (!*(_BYTE *)(v1 + 173))
  {
    v49 = *(_QWORD *)(v1 + 144);
    v50 = v23;
    (*(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16))(v16, a1, v14, v25);
    sub_1A55034B8(a1, (uint64_t)v4, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A550F010(v1, (uint64_t)&v118);
    v51 = v14;
    v52 = sub_1A594A74C();
    v53 = sub_1A594C030();
    v54 = v53;
    if (!os_log_type_enabled(v52, v53))
    {
      sub_1A550F0F4((uint64_t)&v118);
      sub_1A55034FC((uint64_t)v4, type metadata accessor for MailboxTaskLogger);

      return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v16, v51);
    }
    v55 = swift_slowAlloc();
    v112 = v51;
    v56 = v55;
    v110 = swift_slowAlloc();
    v117 = v110;
    *(_DWORD *)v56 = 68159747;
    LODWORD(v115) = 2;
    v111 = v50;
    LODWORD(v109) = v54;
    sub_1A594C3CC();
    *(_WORD *)(v56 + 8) = 256;
    v57 = *(int *)(v113 + 20);
    v113 = v49;
    v58 = &v4[v57];
    LOBYTE(v115) = v4[v57];
    sub_1A594C3CC();
    *(_WORD *)(v56 + 11) = 2082;
    v59 = *((_QWORD *)v58 + 1);
    v60 = *((_QWORD *)v58 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v115 = sub_1A55791B0(v59, v60, &v117);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 21) = 1040;
    LODWORD(v115) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v56 + 27) = 512;
    LOWORD(v115) = *((_WORD *)v58 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v56 + 31) = 2160;
    v115 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v56 + 41) = 2085;
    v61 = *((_DWORD *)v58 + 10);
    v115 = *((_QWORD *)v58 + 4);
    v116 = v61;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v62 = sub_1A594B4A8();
    v115 = sub_1A55791B0(v62, v63, &v117);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v4, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v56 + 51) = 2048;
    v115 = v113;
    sub_1A594C3CC();
    *(_WORD *)(v56 + 61) = 2048;
    v64 = v120;
    sub_1A550F0F4((uint64_t)&v118);
    v115 = v64;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v52, (os_log_type_t)v109, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Will query local persistence (message count: %ld, batch size: %ld).", (uint8_t *)v56, 0x47u);
    v65 = v110;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v65, -1, -1);
    MEMORY[0x1A85B1964](v56, -1, -1);

    v66 = *(uint64_t (**)(char *, uint64_t))(v111 + 8);
    v67 = v16;
    return v66(v67, v112);
  }
  if (*(_BYTE *)(v1 + 173) != 1)
  {
    v30 = v23;
    (*(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16))(v19, a1, v14, v25);
    sub_1A55034B8(a1, (uint64_t)v7, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A550F010(v1, (uint64_t)&v118);
    v31 = sub_1A594A74C();
    v68 = sub_1A594C030();
    v69 = v68;
    if (!os_log_type_enabled(v31, v68))
    {
      sub_1A550F0F4((uint64_t)&v118);
      sub_1A55034FC((uint64_t)v7, type metadata accessor for MailboxTaskLogger);
      goto LABEL_20;
    }
    v70 = swift_slowAlloc();
    v111 = v30;
    v71 = v70;
    v110 = swift_slowAlloc();
    v117 = v110;
    *(_DWORD *)v71 = 68159491;
    LODWORD(v115) = 2;
    v112 = v14;
    LODWORD(v109) = v69;
    sub_1A594C3CC();
    *(_WORD *)(v71 + 8) = 256;
    v72 = &v7[*(int *)(v113 + 20)];
    LOBYTE(v115) = *v72;
    sub_1A594C3CC();
    *(_WORD *)(v71 + 11) = 2082;
    v73 = *((_QWORD *)v72 + 1);
    v74 = *((_QWORD *)v72 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v115 = sub_1A55791B0(v73, v74, &v117);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v71 + 21) = 1040;
    LODWORD(v115) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v71 + 27) = 512;
    LOWORD(v115) = *((_WORD *)v72 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v71 + 31) = 2160;
    v115 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v71 + 41) = 2085;
    v75 = *((_DWORD *)v72 + 10);
    v115 = *((_QWORD *)v72 + 4);
    v116 = v75;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v76 = sub_1A594B4A8();
    v115 = sub_1A55791B0(v76, v77, &v117);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v7, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v71 + 51) = 2048;
    v78 = v120;
    sub_1A550F0F4((uint64_t)&v118);
    v115 = v78;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v31, (os_log_type_t)v109, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Will query server. (batch size: %ld).", (uint8_t *)v71, 0x3Du);
    v79 = v110;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v79, -1, -1);
    MEMORY[0x1A85B1964](v71, -1, -1);

    v66 = *(uint64_t (**)(char *, uint64_t))(v111 + 8);
    v67 = v19;
    return v66(v67, v112);
  }
  v26 = (char *)&v105 - v22;
  v27 = *(unsigned int *)(v1 + 168) | ((unint64_t)*(unsigned __int8 *)(v1 + 172) << 32);
  v28 = *(_QWORD *)(v1 + 152);
  v29 = *(_QWORD *)(v1 + 160);
  if (*(_QWORD *)(v28 + 16))
  {
    v19 = v24;
    v30 = v23;
    (*(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16))(v24, a1, v14, v25);
    sub_1A55034B8(a1, (uint64_t)v10, type metadata accessor for MailboxTaskLogger);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(v29, v27);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A550F010(v1, (uint64_t)&v118);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(v29, v27);
    v31 = sub_1A594A74C();
    v32 = sub_1A594C030();
    if (os_log_type_enabled(v31, (os_log_type_t)v32))
    {
      v108 = v29;
      v106 = v32;
      v107 = v31;
      v109 = v27;
      v110 = (uint64_t)v19;
      v111 = v30;
      v112 = v14;
      v33 = swift_slowAlloc();
      v105 = swift_slowAlloc();
      v117 = v105;
      *(_DWORD *)v33 = 68159747;
      LODWORD(v115) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 8) = 256;
      v34 = &v10[*(int *)(v113 + 20)];
      LOBYTE(v115) = *v34;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 11) = 2082;
      v35 = *((_QWORD *)v34 + 1);
      v36 = *((_QWORD *)v34 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v115 = sub_1A55791B0(v35, v36, &v117);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 21) = 1040;
      LODWORD(v115) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 27) = 512;
      LOWORD(v115) = *((_WORD *)v34 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v33 + 31) = 2160;
      v115 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 41) = 2085;
      v37 = *((_DWORD *)v34 + 10);
      v115 = *((_QWORD *)v34 + 4);
      v116 = v37;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v38 = sub_1A594B4A8();
      v115 = sub_1A55791B0(v38, v39, &v117);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v10, type metadata accessor for MailboxTaskLogger);
      v113 = v33;
      *(_WORD *)(v33 + 51) = 2082;
      v40 = *(_QWORD *)(v28 + 16);
      v41 = MEMORY[0x1E0DEE9D8];
      if (v40)
      {
        v115 = MEMORY[0x1E0DEE9D8];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A55C17B8(0, v40, 0);
        v42 = 0;
        v41 = v115;
        do
        {
          v114 = *(_QWORD *)(v28 + 8 * v42 + 32);
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
          v43 = sub_1A594B490();
          v45 = v44;
          v115 = v41;
          v47 = *(_QWORD *)(v41 + 16);
          v46 = *(_QWORD *)(v41 + 24);
          if (v47 >= v46 >> 1)
          {
            sub_1A55C17B8((char *)(v46 > 1), v47 + 1, 1);
            v41 = v115;
          }
          ++v42;
          *(_QWORD *)(v41 + 16) = v47 + 1;
          v48 = v41 + 16 * v47;
          *(_QWORD *)(v48 + 32) = v43;
          *(_QWORD *)(v48 + 40) = v45;
        }
        while (v40 != v42);
        swift_bridgeObjectRelease();
      }
      v96 = v108;
      v97 = v113;
      v115 = v41;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
      sub_1A54F70C0();
      v98 = sub_1A594B268();
      v100 = v99;
      swift_bridgeObjectRelease();
      v115 = sub_1A55791B0(v98, v100, &v117);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v101 = v109;
      sub_1A5503B8C(v96, v109);
      swift_bridgeObjectRelease();
      sub_1A5503B8C(v96, v101);
      *(_WORD *)(v97 + 61) = 2048;
      v102 = v120;
      sub_1A550F0F4((uint64_t)&v118);
      v115 = v102;
      sub_1A594C3CC();
      v103 = v107;
      _os_log_impl(&dword_1A4F90000, v107, (os_log_type_t)v106, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Using fixed range(s): %{public}s (batch size: %ld).", (uint8_t *)v97, 0x47u);
      v104 = v105;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v104, -1, -1);
      MEMORY[0x1A85B1964](v97, -1, -1);

      v66 = *(uint64_t (**)(char *, uint64_t))(v111 + 8);
      v67 = (char *)v110;
      return v66(v67, v112);
    }
    sub_1A550F0F4((uint64_t)&v118);
    sub_1A55034FC((uint64_t)v10, type metadata accessor for MailboxTaskLogger);
    swift_bridgeObjectRelease();
    sub_1A5503B8C(v29, v27);
    swift_bridgeObjectRelease();
    sub_1A5503B8C(v29, v27);
LABEL_20:

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v19, v14);
  }
  v81 = v23;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5503BA0(v29, v27);
  swift_bridgeObjectRelease();
  sub_1A5503B8C(v29, v27);
  v82 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v26, a1, v14);
  sub_1A55034B8(a1, (uint64_t)v13, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v83 = sub_1A594A74C();
  v84 = sub_1A594C030();
  v85 = v84;
  if (os_log_type_enabled(v83, v84))
  {
    v86 = swift_slowAlloc();
    LODWORD(v110) = v85;
    v87 = v86;
    v109 = swift_slowAlloc();
    v115 = v109;
    *(_DWORD *)v87 = 68159235;
    LODWORD(v118) = 2;
    v112 = v14;
    sub_1A594C3CC();
    *(_WORD *)(v87 + 8) = 256;
    v88 = *(int *)(v113 + 20);
    v111 = v81;
    v89 = &v13[v88];
    LOBYTE(v118) = v13[v88];
    sub_1A594C3CC();
    *(_WORD *)(v87 + 11) = 2082;
    v90 = *((_QWORD *)v89 + 1);
    v91 = *((_QWORD *)v89 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v118 = sub_1A55791B0(v90, v91, &v115);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v87 + 21) = 1040;
    LODWORD(v118) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v87 + 27) = 512;
    LOWORD(v118) = *((_WORD *)v89 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v87 + 31) = 2160;
    v118 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v87 + 41) = 2085;
    v92 = *((_DWORD *)v89 + 10);
    v118 = *((_QWORD *)v89 + 4);
    v119 = v92;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v93 = sub_1A594B4A8();
    v118 = sub_1A55791B0(v93, v94, &v115);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
    _os_log_impl(&dword_1A4F90000, v83, (os_log_type_t)v110, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. No messages.", (uint8_t *)v87, 0x33u);
    v95 = v109;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v95, -1, -1);
    MEMORY[0x1A85B1964](v87, -1, -1);

    v66 = *(uint64_t (**)(char *, uint64_t))(v111 + 8);
    v67 = v82;
    return v66(v67, v112);
  }
  sub_1A55034FC((uint64_t)v13, type metadata accessor for MailboxTaskLogger);

  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v82, v14);
}

uint64_t sub_1A55C07B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unsigned int v33;
  unint64_t v34;
  uint64_t result;
  BOOL v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t *v48;
  char v49;
  char v50;
  int v51;
  _QWORD v52[2];
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  unint64_t v60;
  unsigned int v61;
  uint64_t v62;
  unsigned int v63;
  unsigned __int8 v64;

  v5 = v4;
  v59 = a3;
  v9 = type metadata accessor for TaskHistory.Previous(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v52 - v14;
  if (*(_BYTE *)(v5 + 173) != 2)
    goto LABEL_38;
  if (*(unsigned int *)(v5 + 168) | ((unint64_t)*(unsigned __int8 *)(v5 + 172) << 32)
    || (*(_QWORD *)(v5 + 152) | *(_QWORD *)(v5 + 160) | *(_QWORD *)(v5 + 144)) != 0)
  {
    goto LABEL_38;
  }
  v17 = sub_1A55F3B04(a2);
  v18 = *(_QWORD *)(v17 + 16);
  v55 = v5;
  if (v18)
  {
    v54 = a4;
    v19 = 0;
    v52[1] = v17;
    v57 = v17 + 32;
    v58 = v10;
    v60 = *(_QWORD *)(a1 + 16);
    v56 = a1;
    v53 = v18;
    do
    {
      if (v60)
      {
        v20 = v58;
        v21 = *(_DWORD *)(v57 + 4 * v19);
        v22 = a1 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v23 = *(_QWORD *)(v20 + 72);
        v24 = v60;
        do
        {
          sub_1A55034B8(v22, (uint64_t)v15, type metadata accessor for TaskHistory.Previous);
          sub_1A55034B8((uint64_t)v15, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
          }
          else
          {
            v25 = *(_DWORD *)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
            sub_1A55034FC((uint64_t)v12, type metadata accessor for ClientCommand);
            if (v25 == v21)
            {
              sub_1A55034FC((uint64_t)v15, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a4 = v54;
              goto LABEL_38;
            }
          }
          sub_1A55034FC((uint64_t)v15, type metadata accessor for TaskHistory.Previous);
          v22 += v23;
          --v24;
        }
        while (v24);
        a1 = v56;
        swift_bridgeObjectRelease();
        v5 = v55;
        v18 = v53;
      }
      ++v19;
    }
    while (v19 != v18);
    swift_bridgeObjectRelease();
    a4 = v54;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v26 = *v59;
  v27 = *(_QWORD *)(v5 + 136);
  v28 = WindowOfInterestSize.lowestSequenceNumber(messageCount:)(*v59, *(_QWORD *)(v5 + 64), *(_BYTE *)(v5 + 72));
  if ((unint64_t)(v26 - 0x100000000) < 0xFFFFFFFF00000001)
    goto LABEL_38;
  v29 = v28;
  v54 = a4;
  v30 = swift_allocObject();
  *(_DWORD *)(v30 + 16) = v26;
  *(_BYTE *)(v30 + 20) = 0;
  v60 = sub_1A5534BE4();
  v31 = MessageIdentifierSet.init()(&type metadata for SequenceNumber, v60);
  v33 = v32;
  v62 = v31;
  v34 = HIDWORD(v32);
  v63 = v32;
  v64 = BYTE4(v32);
  result = swift_beginAccess();
  if ((*(_BYTE *)(v30 + 20) & 1) != 0)
  {
LABEL_37:
    *(_DWORD *)(v30 + 16) = 0;
    *(_BYTE *)(v30 + 20) = 1;
    v62 = v31;
    v63 = v33;
    v64 = v34;
    v61 = v29;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8760);
    MessageIdentifierSet.insert(_:)();
    v40 = MessageIdentifierSetNonEmpty.init(set:)(v62, v63 | ((unint64_t)v64 << 32));
    v42 = v41;
    swift_release();
    a4 = v54;
    if (BYTE4(v42) != 255)
    {
      v44 = swift_allocObject();
      *(_QWORD *)(v44 + 16) = v40;
      *(_BYTE *)(v44 + 28) = BYTE4(v42);
      *(_DWORD *)(v44 + 24) = v42;
      v45 = a4;
      v46 = v44 | 0xB000000000000004;
      v47 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797AE0);
      v48 = (unint64_t *)&v45[*(int *)(v47 + 48)];
      LODWORD(v62) = 1;
      sub_1A54E4334(v40, v42, SBYTE4(v42));
      MessageIdentifierSet.contains(_:)((uint64_t)&v62, v40, v42 & 0xFFFFFFFFFFLL);
      v50 = v49;
      sub_1A5503B8C(v40, v42);
      *v45 = v50 & 1;
      v51 = *(unsigned __int8 *)(v5 + 130);
      *v48 = v46;
      if (v51 != 1)
        v48[1] = (unint64_t)&unk_1E4E6E1A0;
      type metadata accessor for ClientCommand(0);
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v54, 0, 1, v47);
    }
LABEL_38:
    v43 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797AE0);
    return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(a4, 1, 1, v43);
  }
  LODWORD(v59) = v29;
  v36 = __OFSUB__(0, v27);
  while (1)
  {
    v38 = *(unsigned int *)(v30 + 16);
    if (v38 - v29 < v27)
    {
      LODWORD(v37) = 0;
      goto LABEL_25;
    }
    if ((_DWORD)v38 == (_DWORD)v26 && v27 == 0)
      goto LABEL_47;
    if (v36)
      break;
    if (-v27 > 0xFFFFFFFFLL)
      goto LABEL_45;
    v37 = v38 - v27;
    if (v38 - v27 < 1)
      goto LABEL_46;
    if (HIDWORD(v37))
    {
      __break(1u);
LABEL_36:
      v31 = v62;
      v33 = v63;
      LOBYTE(v34) = v64;
      v5 = v55;
      v29 = v59;
      goto LABEL_37;
    }
LABEL_25:
    *(_DWORD *)(v30 + 16) = v37;
    *(_BYTE *)(v30 + 20) = v38 - v29 < v27;
    v61 = v38;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8760);
    result = MessageIdentifierSet.insert(_:)();
    if (*(_BYTE *)(v30 + 20) == 1)
      goto LABEL_36;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_1A55C0CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  NSObject *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  os_log_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  os_log_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;

  v3 = v2;
  v6 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v72 - v10;
  v12 = sub_1A594A764();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  if (*(_BYTE *)(v3 + 173) == 1)
  {
    v78 = v6;
    v20 = *(_QWORD *)(v3 + 152);
    v19 = *(_QWORD *)(v3 + 160);
    v21 = *(unsigned int *)(v3 + 168) | ((unint64_t)*(unsigned __int8 *)(v3 + 172) << 32);
    v80 = *(_QWORD *)(v3 + 144);
    v22 = (char *)&v72 - v17;
    (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))((char *)&v72 - v17, a2, v12, v18);
    sub_1A55034B8(a2, (uint64_t)v11, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(v19, v21);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(v19, v21);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(v19, v21);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(v19, v21);
    v23 = sub_1A594A74C();
    v79 = sub_1A594C030();
    if (os_log_type_enabled(v23, (os_log_type_t)v79))
    {
      v74 = v23;
      v75 = v22;
      v82 = v13;
      v83 = v12;
      v76 = v3;
      v77 = a1;
      v24 = swift_slowAlloc();
      v73 = swift_slowAlloc();
      v87 = v73;
      *(_DWORD *)v24 = 68159747;
      LODWORD(v85) = 2;
      v81 = v21;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 8) = 256;
      v25 = &v11[*(int *)(v78 + 20)];
      LOBYTE(v85) = *v25;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 11) = 2082;
      v26 = v19;
      v27 = *((_QWORD *)v25 + 1);
      v28 = *((_QWORD *)v25 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v85 = sub_1A55791B0(v27, v28, &v87);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 21) = 1040;
      LODWORD(v85) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 27) = 512;
      LOWORD(v85) = *((_WORD *)v25 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v24 + 31) = 2160;
      v85 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 41) = 2085;
      v29 = *((_DWORD *)v25 + 10);
      v85 = *((_QWORD *)v25 + 4);
      v86 = v29;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v30 = sub_1A594B4A8();
      v85 = sub_1A55791B0(v30, v31, &v87);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v24 + 51) = 2048;
      v32 = *(_QWORD *)(v20 + 16);
      swift_bridgeObjectRelease();
      v33 = v81;
      sub_1A5503B8C(v26, v81);
      v85 = v32;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v78 = v26;
      sub_1A5503B8C(v26, v33);
      *(_WORD *)(v24 + 61) = 2082;
      v34 = *(_QWORD *)(v20 + 16);
      v35 = MEMORY[0x1E0DEE9D8];
      if (v34)
      {
        v85 = MEMORY[0x1E0DEE9D8];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v72 = v20;
        sub_1A55C17B8(0, v34, 0);
        v36 = v72;
        v37 = 0;
        v35 = v85;
        do
        {
          v84 = *(_QWORD *)(v36 + 8 * v37 + 32);
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
          v38 = sub_1A594B490();
          v40 = v39;
          v85 = v35;
          v42 = *(_QWORD *)(v35 + 16);
          v41 = *(_QWORD *)(v35 + 24);
          if (v42 >= v41 >> 1)
          {
            sub_1A55C17B8((char *)(v41 > 1), v42 + 1, 1);
            v36 = v72;
            v35 = v85;
          }
          ++v37;
          *(_QWORD *)(v35 + 16) = v42 + 1;
          v43 = v35 + 16 * v42;
          *(_QWORD *)(v43 + 32) = v38;
          *(_QWORD *)(v43 + 40) = v40;
        }
        while (v34 != v37);
        swift_bridgeObjectRelease();
        v57 = v83;
        v20 = v36;
      }
      else
      {
        v57 = v83;
      }
      v85 = v35;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
      sub_1A54F70C0();
      v58 = sub_1A594B268();
      v60 = v59;
      swift_bridgeObjectRelease();
      v85 = sub_1A55791B0(v58, v60, &v87);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = v78;
      v21 = v81;
      sub_1A5503B8C(v78, v81);
      swift_bridgeObjectRelease();
      sub_1A5503B8C(v19, v21);
      v61 = v74;
      _os_log_impl(&dword_1A4F90000, v74, (os_log_type_t)v79, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created %ld message batches: %{public}s", (uint8_t *)v24, 0x47u);
      v62 = v73;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v62, -1, -1);
      MEMORY[0x1A85B1964](v24, -1, -1);

      result = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v75, v57);
      v3 = v76;
      a1 = v77;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1A5503B8C(v19, v21);
      sub_1A55034FC((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
      swift_bridgeObjectRelease();
      sub_1A5503B8C(v19, v21);
      swift_bridgeObjectRelease();
      sub_1A5503B8C(v19, v21);
      swift_bridgeObjectRelease();
      sub_1A5503B8C(v19, v21);

      result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v22, v12);
    }
    if (*(_BYTE *)(a1 + 168) == 1)
    {
      v64 = *(_QWORD *)(a1 + 152);
      v63 = *(_QWORD *)(a1 + 160);
      v65 = v20;
      v67 = v19;
      v68 = *(_DWORD *)(v3 + 120);
      v69 = v21;
      v70 = *(_QWORD *)(v3 + 112);
      v85 = *(_QWORD *)(a1 + 144);
      v66 = v85;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5503BA0(v67, v69);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5503BA0(v67, v69);
      sub_1A55212D0(v66, v64, v63, 1);
      sub_1A551BC64(&v85, v70, v68, 0, v80, v65, v67, v69 & 0xFFFFFFFFFFLL);
      sub_1A54E8FCC(v66, v64, v63, 1);
      swift_bridgeObjectRelease();
      result = sub_1A5503B8C(v67, v69);
      v71 = v85;
      *(_QWORD *)(a1 + 152) = 0;
      *(_QWORD *)(a1 + 160) = 0;
      *(_QWORD *)(a1 + 144) = v71;
      *(_BYTE *)(a1 + 168) = 1;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v15, a2, v12, v18);
    sub_1A55034B8(a2, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v44 = sub_1A594A74C();
    v45 = sub_1A594C018();
    v46 = v45;
    if (os_log_type_enabled(v44, v45))
    {
      v47 = swift_slowAlloc();
      LODWORD(v81) = v46;
      v48 = v47;
      v80 = swift_slowAlloc();
      v87 = v80;
      *(_DWORD *)v48 = 68159235;
      LODWORD(v85) = 2;
      v83 = v12;
      sub_1A594C3CC();
      *(_WORD *)(v48 + 8) = 256;
      v49 = &v8[*(int *)(v6 + 20)];
      LOBYTE(v85) = *v49;
      sub_1A594C3CC();
      *(_WORD *)(v48 + 11) = 2082;
      v82 = v13;
      v50 = *((_QWORD *)v49 + 1);
      v51 = *((_QWORD *)v49 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v85 = sub_1A55791B0(v50, v51, &v87);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 21) = 1040;
      LODWORD(v85) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v48 + 27) = 512;
      LOWORD(v85) = *((_WORD *)v49 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v48 + 31) = 2160;
      v85 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v48 + 41) = 2085;
      v52 = *((_DWORD *)v49 + 10);
      v85 = *((_QWORD *)v49 + 4);
      v86 = v52;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v53 = sub_1A594B4A8();
      v85 = sub_1A55791B0(v53, v54, &v87);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v44, (os_log_type_t)v81, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Failed to determine message batches", (uint8_t *)v48, 0x33u);
      v55 = v80;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v55, -1, -1);
      MEMORY[0x1A85B1964](v48, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v15, v83);
    }
    else
    {
      sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  return result;
}

uint64_t sub_1A55C16FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A55530FC(v1 + 16, a1);
}

uint64_t sub_1A55C1708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  int v5;

  v2 = *(_QWORD *)(v1 + 96);
  v3 = *(_WORD *)(v1 + 104);
  v4 = *(_QWORD *)(v1 + 112);
  v5 = *(_DWORD *)(v1 + 120);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A55C1750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t result;
  uint64_t v8;

  result = sub_1A55C2114(a1, a2, a3, a4, a5);
  *a6 = result;
  a6[1] = v8;
  return result;
}

void sub_1A55C1780(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1A55C35F4(a1, a2, a3, a4, a6, a7);
}

void sub_1A55C178C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1A55C4244(a1, a2, a3, a5, a6);
}

unint64_t sub_1A55C179C()
{
  return 0xD000000000000017;
}

char *sub_1A55C17B8(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1A55C17D4(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1A55C17D4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796288);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

BOOL sub_1A55C18D4(uint64_t a1, int32x2_t *a2, int32x2_t *a3, uint64_t a4, uint64_t a5, int32x2_t *a6, uint64_t a7, uint64_t a8)
{
  char v12;
  char v14;
  char v15;

  if (BYTE5(a4))
  {
    if (BYTE5(a4) == 1)
    {
      if (BYTE5(a8) == 1 && a1 == a5)
      {
        sub_1A5537EF0(a2, a6);
        if ((v12 & 1) != 0)
        {
          if (BYTE4(a4) == 255)
          {
            if (BYTE4(a8) == 255)
              return 1;
          }
          else if (BYTE4(a8) != 255)
          {
            sub_1A5503BA0(a7, a8);
            sub_1A5503BA0((uint64_t)a3, a4);
            sub_1A54E3414();
            static MessageIdentifierSet.__derived_struct_equals(_:_:)(a3, a4 & 0xFFFFFFFFFFLL, (int32x2_t *)a7, a8 & 0xFFFFFFFFFFLL);
            v15 = v14;
            sub_1A5503B8C(a7, a8);
            sub_1A5503B8C((uint64_t)a3, a4);
            if ((v15 & 1) != 0)
              return 1;
          }
        }
      }
    }
    else if (BYTE5(a8) == 2 && !((unint64_t)a6 | a5 | a7) && (a8 & 0xFFFFFFFFFFLL) == 0)
    {
      return 1;
    }
  }
  else if (!BYTE5(a8))
  {
    return a1 == a5;
  }
  return 0;
}

uint64_t sub_1A55C19FC(uint64_t a1)
{
  return sub_1A55C2050(a1, (uint64_t (*)(void))sub_1A54E3414, (uint64_t)&type metadata for UID);
}

uint64_t sub_1A55C1A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 == 1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return sub_1A5503BA0(a3, a4);
  }
  return result;
}

uint64_t destroy for DetermineMessageBatches(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1A550F0B4(*(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(unsigned int *)(a1 + 168) | ((unint64_t)*(unsigned __int8 *)(a1 + 172) << 32), *(_BYTE *)(a1 + 173));
}

uint64_t initializeWithCopy for DetermineMessageBatches(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = a2 + 24;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7(a1 + 24, v4, v6);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(v2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(v2 + 72);
  *(_QWORD *)(a1 + 76) = *(_QWORD *)(v2 + 76);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(v2 + 84);
  v8 = *(_QWORD *)(v2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(v2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  *(_WORD *)(a1 + 104) = *(_WORD *)(v2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v2 + 112);
  v9 = *(_DWORD *)(v2 + 124);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(v2 + 120);
  *(_DWORD *)(a1 + 124) = v9;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(v2 + 128);
  *(_WORD *)(a1 + 129) = *(_WORD *)(v2 + 129);
  v10 = *(_QWORD *)(v2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(v2 + 136);
  v11 = *(_QWORD *)(v2 + 152);
  v12 = *(_QWORD *)(v2 + 160);
  v13 = *(unsigned __int8 *)(v2 + 172);
  v14 = *(unsigned int *)(v2 + 168);
  LOBYTE(v2) = *(_BYTE *)(v2 + 173);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55C1A10(v10, v11, v12, v14 | (v13 << 32), v2);
  *(_QWORD *)(a1 + 144) = v10;
  *(_QWORD *)(a1 + 152) = v11;
  *(_QWORD *)(a1 + 160) = v12;
  *(_BYTE *)(a1 + 172) = v13;
  *(_DWORD *)(a1 + 168) = v14;
  *(_BYTE *)(a1 + 173) = v2;
  return a1;
}

uint64_t assignWithCopy for DetermineMessageBatches(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *((_BYTE *)v2 + 8);
  *(_QWORD *)(a1 + 16) = v2[2];
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), v2 + 3);
  v4 = v2[8];
  *(_BYTE *)(a1 + 72) = *((_BYTE *)v2 + 72);
  *(_QWORD *)(a1 + 64) = v4;
  LOBYTE(v4) = *((_BYTE *)v2 + 84);
  *(_QWORD *)(a1 + 76) = *(_QWORD *)((char *)v2 + 76);
  *(_BYTE *)(a1 + 84) = v4;
  *(_QWORD *)(a1 + 88) = v2[11];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = v2[12];
  *(_WORD *)(a1 + 104) = *((_WORD *)v2 + 52);
  *(_QWORD *)(a1 + 112) = v2[14];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 120) = *((_DWORD *)v2 + 30);
  v5 = *((_DWORD *)v2 + 31);
  *(_BYTE *)(a1 + 128) = *((_BYTE *)v2 + 128);
  *(_DWORD *)(a1 + 124) = v5;
  *(_BYTE *)(a1 + 129) = *((_BYTE *)v2 + 129);
  *(_BYTE *)(a1 + 130) = *((_BYTE *)v2 + 130);
  *(_QWORD *)(a1 + 136) = v2[17];
  v6 = v2[18];
  v7 = v2[19];
  v8 = v2[20];
  v9 = *((unsigned __int8 *)v2 + 172);
  v10 = *((unsigned int *)v2 + 42);
  LOBYTE(v2) = *((_BYTE *)v2 + 173);
  sub_1A55C1A10(v6, v7, v8, v10 | (v9 << 32), (char)v2);
  v11 = *(_QWORD *)(a1 + 144);
  v12 = *(_QWORD *)(a1 + 152);
  v13 = *(_QWORD *)(a1 + 160);
  v14 = *(unsigned int *)(a1 + 168) | ((unint64_t)*(unsigned __int8 *)(a1 + 172) << 32);
  *(_QWORD *)(a1 + 144) = v6;
  *(_QWORD *)(a1 + 152) = v7;
  *(_QWORD *)(a1 + 160) = v8;
  *(_DWORD *)(a1 + 168) = v10;
  *(_BYTE *)(a1 + 172) = v9;
  v15 = *(_BYTE *)(a1 + 173);
  *(_BYTE *)(a1 + 173) = (_BYTE)v2;
  sub_1A550F0B4(v11, v12, v13, v14, v15);
  return a1;
}

__n128 __swift_memcpy174_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_OWORD *)(a1 + 158) = *(__int128 *)((char *)a2 + 158);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for DetermineMessageBatches(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  __int16 v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 76) = *(_QWORD *)(a2 + 76);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  v5 = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 124) = v5;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  v6 = *(_WORD *)(a2 + 172);
  v7 = *(_DWORD *)(a2 + 168);
  v8 = *(_QWORD *)(a1 + 144);
  v9 = *(_QWORD *)(a1 + 152);
  v10 = *(_QWORD *)(a1 + 160);
  v11 = *(unsigned int *)(a1 + 168) | ((unint64_t)*(unsigned __int8 *)(a1 + 172) << 32);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  v12 = *(_BYTE *)(a1 + 173);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 168) = v7;
  *(_WORD *)(a1 + 172) = v6;
  sub_1A550F0B4(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetermineMessageBatches(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 174))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetermineMessageBatches(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 172) = 0;
    *(_DWORD *)(result + 168) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 174) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 174) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetermineMessageBatches()
{
  return &type metadata for DetermineMessageBatches;
}

unint64_t sub_1A55C1F48()
{
  unint64_t result;

  result = qword_1EE797AD0;
  if (!qword_1EE797AD0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9094, &type metadata for DetermineMessageBatches.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE797AD0);
  }
  return result;
}

unint64_t sub_1A55C1F90()
{
  unint64_t result;

  result = qword_1EE797AD8;
  if (!qword_1EE797AD8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A906C, &type metadata for DetermineMessageBatches.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE797AD8);
  }
  return result;
}

unint64_t sub_1A55C1FD4(uint64_t a1)
{
  unint64_t result;

  result = sub_1A55C1FF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A55C1FF8()
{
  unint64_t result;

  result = qword_1EE797AE8;
  if (!qword_1EE797AE8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9028, &type metadata for DetermineMessageBatches);
    atomic_store(result, (unint64_t *)&qword_1EE797AE8);
  }
  return result;
}

uint64_t sub_1A55C203C(uint64_t a1)
{
  return sub_1A55C2050(a1, (uint64_t (*)(void))sub_1A5534BE4, (uint64_t)&type metadata for SequenceNumber);
}

uint64_t sub_1A55C2050(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;

  v5 = a2();
  result = MessageIdentifierSet.init()(a3, v5);
  v13 = result;
  v14 = v7;
  v15 = v8;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = (uint64_t *)(a1 + 32);
    do
    {
      v11 = *v10++;
      v12 = v11;
      v12 = Range<>.init<A>(_:)((uint64_t)&v12, a3, v5);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7971B8);
      RangeSet.insert(contentsOf:)();
      --v9;
    }
    while (v9);
    return v13;
  }
  return result;
}

uint64_t sub_1A55C2114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  uint64_t v98;
  unint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t *v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  NSObject *v118;
  os_log_type_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  int v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t result;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  int v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  int v181;
  unsigned int v182;
  int v183;
  unint64_t v184;
  int v185;
  unint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  int v224;
  uint64_t v225;
  int v226;
  uint64_t v227;
  uint64_t v228;

  v200 = a5;
  v219 = a2;
  v196 = a1;
  v208 = type metadata accessor for TaskHistory.Running(0);
  v7 = *(_QWORD *)(v208 - 8);
  MEMORY[0x1E0C80A78](v208);
  v211 = (char *)&v192 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v209 = (uint64_t)&v192 - v10;
  v197 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v197);
  v202 = (uint64_t)&v192 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v201 = (uint64_t)&v192 - v13;
  v206 = sub_1A594A764();
  v205 = *(_QWORD *)(v206 - 8);
  MEMORY[0x1E0C80A78](v206);
  v203 = (char *)&v192 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v204 = (char *)&v192 - v16;
  v222 = type metadata accessor for TaskHistory.Previous(0);
  v215 = *(_QWORD *)(v222 - 8);
  MEMORY[0x1E0C80A78](v222);
  v214 = (unint64_t)&v192 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v192 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v192 - v23;
  MEMORY[0x1E0C80A78](v25);
  v220 = (char *)&v192 - v26;
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  v195 = (char *)&v192 - v29;
  MEMORY[0x1E0C80A78](v30);
  v217 = (uint64_t)&v192 - v31;
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v192 - v33;
  MEMORY[0x1E0C80A78](v35);
  v218 = (unint64_t)&v192 - v36;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v192 - v38;
  MEMORY[0x1E0C80A78](v40);
  v44 = (char *)&v192 - v43;
  v45 = *(unsigned __int8 *)(v5 + 72);
  v212 = v5;
  if (v45 == 1)
  {
    v216 = v42;
    v221 = v41;
    v46 = sub_1A55B03D4(1, a3);
    v47 = *(_QWORD *)(v46 + 16);
    if (v47)
    {
      v194 = v7;
      v210 = a3;
      v48 = 0;
      v198 = v46 + 32;
      v49 = v219;
      v213 = *(_QWORD *)(v219 + 16);
      v192 = v34;
      v199 = v46;
      v193 = v47;
      do
      {
        if (v213)
        {
          v207 = v48;
          v50 = *(_DWORD *)(v198 + 4 * v48);
          v51 = v215;
          v52 = v49 + ((*(unsigned __int8 *)(v215 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v215 + 80));
          swift_bridgeObjectRetain_n();
          v53 = *(_QWORD *)(v51 + 72);
          v54 = v213;
          do
          {
            sub_1A55034B8(v52, (uint64_t)v44, type metadata accessor for TaskHistory.Previous);
            sub_1A55034B8((uint64_t)v44, (uint64_t)v39, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v55 = *((_DWORD *)v39 + 2);
              swift_release();
              if (v55 == v50)
              {
                sub_1A55034FC((uint64_t)v44, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                v5 = v212;
                a3 = v210;
                v41 = v221;
                v7 = v194;
                v42 = v216;
                v34 = v192;
                goto LABEL_13;
              }
            }
            else
            {
              sub_1A55034FC((uint64_t)v39, type metadata accessor for TaskHistory.Previous);
            }
            sub_1A55034FC((uint64_t)v44, type metadata accessor for TaskHistory.Previous);
            v52 += v53;
            --v54;
          }
          while (v54);
          v49 = v219;
          swift_bridgeObjectRelease_n();
          v47 = v193;
          v48 = v207;
        }
        ++v48;
      }
      while (v48 != v47);
      swift_bridgeObjectRelease();
      v5 = v212;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v83 = v206;
    v84 = v205;
    v85 = v204;
    v86 = v203;
    v87 = v202;
    v88 = v201;
    if ((*(_BYTE *)(v5 + 84) & 1) != 0)
    {
      v89 = v200;
      (*(void (**)(char *, uint64_t, uint64_t))(v205 + 16))(v203, v200, v206);
      sub_1A55034B8(v89, v87, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v90 = sub_1A594A74C();
      v91 = sub_1A594C030();
      if (os_log_type_enabled(v90, v91))
      {
        v92 = swift_slowAlloc();
        v93 = swift_slowAlloc();
        v225 = v93;
        *(_DWORD *)v92 = 68159235;
        LODWORD(v223) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v92 + 8) = 256;
        v94 = v87 + *(int *)(v197 + 20);
        LOBYTE(v223) = *(_BYTE *)v94;
        sub_1A594C3CC();
        *(_WORD *)(v92 + 11) = 2082;
        v95 = *(_QWORD *)(v94 + 8);
        v96 = *(_QWORD *)(v94 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v223 = sub_1A55791B0(v95, v96, &v225);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v92 + 21) = 1040;
        LODWORD(v223) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v92 + 27) = 512;
        LOWORD(v223) = *(_WORD *)(v94 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v92 + 31) = 2160;
        v223 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v92 + 41) = 2085;
        v97 = *(_DWORD *)(v94 + 40);
        v223 = *(_QWORD *)(v94 + 32);
        v224 = v97;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v98 = sub_1A594B4A8();
        v223 = sub_1A55791B0(v98, v99, &v225);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v202, type metadata accessor for MailboxTaskLogger);
        _os_log_impl(&dword_1A4F90000, v90, v91, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Clearing window of interest", (uint8_t *)v92, 0x33u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v93, -1, -1);
        MEMORY[0x1A85B1964](v92, -1, -1);

        v100 = *(void (**)(char *, uint64_t))(v205 + 8);
        v101 = &v227;
LABEL_50:
        v131 = (char *)*(v101 - 32);
        v132 = v206;
LABEL_70:
        v100(v131, v132);
        goto LABEL_98;
      }
      sub_1A55034FC(v87, type metadata accessor for MailboxTaskLogger);

      v100 = *(void (**)(char *, uint64_t))(v84 + 8);
      v131 = v86;
    }
    else
    {
      v116 = *(_QWORD *)(v5 + 76);
      v117 = v200;
      (*(void (**)(char *, uint64_t, uint64_t))(v205 + 16))(v204, v200, v206);
      sub_1A55034B8(v117, v88, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v118 = sub_1A594A74C();
      v119 = sub_1A594C030();
      if (os_log_type_enabled(v118, v119))
      {
        v120 = swift_slowAlloc();
        v221 = v116;
        v121 = v120;
        v222 = swift_slowAlloc();
        v225 = v222;
        *(_DWORD *)v121 = 68159491;
        LODWORD(v223) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v121 + 8) = 256;
        v122 = v88 + *(int *)(v197 + 20);
        LOBYTE(v223) = *(_BYTE *)v122;
        sub_1A594C3CC();
        *(_WORD *)(v121 + 11) = 2082;
        v123 = *(_QWORD *)(v122 + 8);
        v124 = *(_QWORD *)(v122 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v223 = sub_1A55791B0(v123, v124, &v225);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v121 + 21) = 1040;
        LODWORD(v223) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v121 + 27) = 512;
        LOWORD(v223) = *(_WORD *)(v122 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v121 + 31) = 2160;
        v223 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v121 + 41) = 2085;
        v125 = *(_DWORD *)(v122 + 40);
        v223 = *(_QWORD *)(v122 + 32);
        v224 = v125;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v126 = sub_1A594B4A8();
        v223 = sub_1A55791B0(v126, v127, &v225);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v201, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v121 + 51) = 2082;
        v223 = v221;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
        MessageIdentifierRange.debugDescription.getter();
        v223 = sub_1A55791B0(v128, v129, &v225);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v118, v119, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Setting window of interest: %{public}s", (uint8_t *)v121, 0x3Du);
        v130 = v222;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v130, -1, -1);
        MEMORY[0x1A85B1964](v121, -1, -1);

        v100 = *(void (**)(char *, uint64_t))(v205 + 8);
        v101 = &v228;
        goto LABEL_50;
      }
      sub_1A55034FC(v88, type metadata accessor for MailboxTaskLogger);

      v100 = *(void (**)(char *, uint64_t))(v84 + 8);
      v131 = v85;
    }
    v132 = v83;
    goto LABEL_70;
  }
LABEL_13:
  if (*(_BYTE *)(v5 + 173))
  {
    if (*(_BYTE *)(v5 + 173) != 1)
      return 4;
    v216 = v42;
    v56 = *(unsigned __int8 *)(v5 + 172);
    v57 = *(unsigned int *)(v5 + 168);
    v210 = a3;
    v58 = v57 | (v56 << 32);
    v59 = *(_QWORD *)(v5 + 160);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(v59, v58);
    swift_bridgeObjectRelease();
    sub_1A5503B8C(v59, v58);
    v60 = sub_1A55B03D4(1, v210);
    v61 = *(_QWORD *)(v60 + 16);
    if (v61)
    {
      v62 = 0;
      v217 = v60;
      v63 = v219;
      v64 = *(_QWORD *)(v219 + 16);
      v220 = (char *)(v60 + 32);
      v221 = v64;
      do
      {
        if (v221)
        {
          v65 = *(_DWORD *)&v220[4 * v62];
          v66 = v215;
          v218 = (*(unsigned __int8 *)(v215 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v215 + 80);
          v67 = v63 + v218;
          swift_bridgeObjectRetain_n();
          v68 = *(_QWORD *)(v66 + 72);
          v69 = v221;
          while (1)
          {
            sub_1A55034B8(v67, (uint64_t)v24, type metadata accessor for TaskHistory.Previous);
            sub_1A55034B8((uint64_t)v24, (uint64_t)v21, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v70 = *((_DWORD *)v21 + 2);
              swift_release();
              if (v70 == v65)
              {
                sub_1A55034FC((uint64_t)v24, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                if ((*(_BYTE *)(v212 + 84) & 1) == 0)
                {
                  v71 = *(_QWORD *)(v212 + 76);
                  if ((v71 & 0xFFFFFFFE) != 0)
                  {
                    v72 = sub_1A55B03D4(3, v210);
                    v220 = *(char **)(v72 + 16);
                    if (v220)
                    {
                      v217 = v71;
                      v73 = 0;
                      v74 = v72 + 32;
                      v75 = v219 + v218;
                      while (2)
                      {
                        v143 = v74;
                        v144 = *(_DWORD *)(v74 + 4 * (_QWORD)v73++);
                        swift_bridgeObjectRetain_n();
                        v145 = v75;
                        v146 = v75;
                        v147 = v221;
                        v148 = v216;
                        do
                        {
                          sub_1A55034B8(v146, v148, type metadata accessor for TaskHistory.Previous);
                          v149 = v148;
                          v150 = v214;
                          sub_1A55034B8(v149, v214, type metadata accessor for TaskHistory.Previous);
                          if (swift_getEnumCaseMultiPayload() == 1)
                          {
                            v151 = *(_DWORD *)(v150 + 8);
                            swift_release();
                            if (v151 == v144)
                            {
                              sub_1A55034FC(v216, type metadata accessor for TaskHistory.Previous);
                              goto LABEL_95;
                            }
                          }
                          else
                          {
                            sub_1A55034FC(v150, type metadata accessor for TaskHistory.Previous);
                          }
                          v148 = v216;
                          sub_1A55034FC(v216, type metadata accessor for TaskHistory.Previous);
                          v146 += v68;
                          --v147;
                        }
                        while (v147);
                        swift_bridgeObjectRelease_n();
                        v74 = v143;
                        v75 = v145;
                        if (v73 != v220)
                          continue;
                        break;
                      }
                      swift_bridgeObjectRelease();
                      LODWORD(v71) = v217;
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                    }
                    LODWORD(v225) = 1;
                    v226 = v71 - 1;
                    v171 = sub_1A54E3414();
                    static MessageIdentifier.... infix(_:_:)();
                    v225 = v223;
                    MessageIdentifierSet.init(_:)((uint64_t)&v225, (uint64_t)&type metadata for UID, v171, v172);
                    v174 = v173;
                    v176 = v175;
                    v177 = HIDWORD(v175);
                    v178 = swift_allocObject();
                    v179 = *(_QWORD *)(v212 + 96);
                    *(_QWORD *)(v178 + 16) = *(_QWORD *)(v212 + 88);
                    *(_QWORD *)(v178 + 24) = v179;
                    *(_QWORD *)(v178 + 32) = v174;
                    *(_DWORD *)(v178 + 40) = v176;
                    *(_BYTE *)(v178 + 44) = v177;
                    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                    return 3;
                  }
                }
                return 4;
              }
            }
            else
            {
              sub_1A55034FC((uint64_t)v21, type metadata accessor for TaskHistory.Previous);
            }
            sub_1A55034FC((uint64_t)v24, type metadata accessor for TaskHistory.Previous);
            v67 += v68;
            if (!--v69)
            {
              v63 = v219;
              swift_bridgeObjectRelease_n();
              break;
            }
          }
        }
        ++v62;
      }
      while (v62 != v61);
    }
    swift_bridgeObjectRelease();
LABEL_98:
    v167 = swift_allocObject();
    v168 = v212;
    v169 = *(_QWORD *)(v212 + 96);
    *(_QWORD *)(v167 + 16) = *(_QWORD *)(v212 + 88);
    *(_QWORD *)(v167 + 24) = v169;
    v170 = *(_QWORD *)(v168 + 76);
    LOBYTE(v168) = *(_BYTE *)(v168 + 84);
    *(_QWORD *)(v167 + 32) = v170;
    *(_BYTE *)(v167 + 40) = v168;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return 1;
  }
  v194 = v7;
  v221 = v41;
  v210 = a3;
  v76 = *(_BYTE *)(v5 + 72);
  v77 = v219;
  if ((v76 & 1) != 0)
    goto LABEL_83;
  v78 = sub_1A55B03D4(0, v210);
  v79 = *(_QWORD *)(v78 + 16);
  if (!v79)
  {
    swift_bridgeObjectRelease();
    v82 = v212;
LABEL_79:
    v152 = swift_allocObject();
    v153 = *(_QWORD *)(v82 + 96);
    *(_QWORD *)(v152 + 16) = *(_QWORD *)(v82 + 88);
    *(_QWORD *)(v152 + 24) = v153;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return 0;
  }
  v80 = 0;
  v213 = v78;
  v216 = v78 + 32;
  v81 = *(_QWORD *)(v77 + 16);
  v82 = v212;
  while (!v81)
  {
LABEL_37:
    if (++v80 == v79)
    {
      swift_bridgeObjectRelease();
      goto LABEL_79;
    }
  }
  v102 = v215;
  v103 = *(_DWORD *)(v216 + 4 * v80);
  v214 = (*(unsigned __int8 *)(v215 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v215 + 80);
  v104 = v77 + v214;
  swift_bridgeObjectRetain_n();
  v105 = *(_QWORD *)(v102 + 72);
  v106 = v81;
  v107 = v218;
  while (1)
  {
    sub_1A55034B8(v104, v107, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8(v107, (uint64_t)v34, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC((uint64_t)v34, type metadata accessor for TaskHistory.Previous);
LABEL_41:
    sub_1A55034FC(v107, type metadata accessor for TaskHistory.Previous);
    v104 += v105;
    if (!--v106)
    {
      v77 = v219;
      swift_bridgeObjectRelease_n();
      v82 = v212;
      goto LABEL_37;
    }
  }
  v108 = *((_DWORD *)v34 + 2);
  swift_release();
  v109 = v108 == v103;
  v107 = v218;
  if (!v109)
    goto LABEL_41;
  sub_1A55034FC(v218, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v77 = v219;
  swift_bridgeObjectRelease_n();
  if ((*(_BYTE *)(v212 + 72) & 1) != 0)
    goto LABEL_83;
  v110 = sub_1A55B03D4(0, v210);
  v111 = *(_QWORD *)(v110 + 16);
  if (!v111)
    goto LABEL_101;
  v112 = 0;
  v206 = v110;
  v218 = v110 + 32;
  v113 = *(_QWORD *)(v77 + 16);
  v216 = v77 + v214;
  v114 = (uint64_t)v211;
  v115 = (uint64_t)v195;
  v213 = v111;
  v207 = v113;
LABEL_53:
  if (!v113)
    goto LABEL_52;
  v133 = *(_DWORD *)(v218 + 4 * v112);
  swift_bridgeObjectRetain_n();
  v134 = v216;
  v135 = v217;
  while (2)
  {
    sub_1A55034B8(v134, v135, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8(v135, v115, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1A55034FC(v115, type metadata accessor for TaskHistory.Previous);
      goto LABEL_56;
    }
    v136 = *(_DWORD *)(v115 + 8);
    swift_release();
    if (v136 != v133)
    {
LABEL_56:
      v135 = v217;
      sub_1A55034FC(v217, type metadata accessor for TaskHistory.Previous);
      v134 += v105;
      if (!--v113)
        goto LABEL_51;
      continue;
    }
    break;
  }
  sub_1A55034FC(v217, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease_n();
  v137 = *(_QWORD *)(v196 + 16);
  if (v137)
  {
    v138 = v194;
    v139 = v196 + ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80));
    swift_bridgeObjectRetain_n();
    v140 = *(_QWORD *)(v138 + 72);
    v141 = v209;
    do
    {
      sub_1A55034B8(v139, v141, type metadata accessor for TaskHistory.Running);
      sub_1A55034B8(v141, v114, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v142 = *((_DWORD *)v211 + 1);
        swift_release();
        v109 = v142 == v133;
        v114 = (uint64_t)v211;
        if (v109)
        {
          sub_1A55034FC(v209, type metadata accessor for TaskHistory.Running);
          v115 = (uint64_t)v195;
LABEL_51:
          swift_bridgeObjectRelease_n();
          v111 = v213;
          v113 = v207;
LABEL_52:
          if (++v112 != v111)
            goto LABEL_53;
LABEL_101:
          swift_bridgeObjectRelease();
          return 4;
        }
      }
      else
      {
        sub_1A55034FC(v114, type metadata accessor for TaskHistory.Running);
      }
      v141 = v209;
      sub_1A55034FC(v209, type metadata accessor for TaskHistory.Running);
      v139 += v140;
      --v137;
    }
    while (v137);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v77 = v219;
LABEL_83:
  v155 = sub_1A55B03D4(2, v210);
  v156 = *(_QWORD *)(v155 + 16);
  if (v156)
  {
    v157 = 0;
    v217 = v155;
    v218 = v155 + 32;
    v158 = *(_QWORD *)(v77 + 16);
    do
    {
      if (v158)
      {
        v159 = *(_DWORD *)(v218 + 4 * v157);
        v160 = v215;
        v161 = v219 + ((*(unsigned __int8 *)(v215 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v215 + 80));
        swift_bridgeObjectRetain_n();
        v162 = *(_QWORD *)(v160 + 72);
        v163 = v158;
        v165 = (uint64_t)v220;
        v164 = v221;
        do
        {
          sub_1A55034B8(v161, v164, type metadata accessor for TaskHistory.Previous);
          sub_1A55034B8(v164, v165, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v166 = *((_DWORD *)v220 + 2);
            swift_release();
            v109 = v166 == v159;
            v165 = (uint64_t)v220;
            if (v109)
            {
              sub_1A55034FC(v221, type metadata accessor for TaskHistory.Previous);
LABEL_95:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return 4;
            }
          }
          else
          {
            sub_1A55034FC(v165, type metadata accessor for TaskHistory.Previous);
          }
          v164 = v221;
          sub_1A55034FC(v221, type metadata accessor for TaskHistory.Previous);
          v161 += v162;
          --v163;
        }
        while (v163);
        swift_bridgeObjectRelease_n();
      }
      ++v157;
    }
    while (v157 != v156);
  }
  result = swift_bridgeObjectRelease();
  v180 = v212;
  v181 = *(unsigned __int8 *)(v212 + 128);
  if ((v181 & 1) != 0)
  {
    v182 = -1;
  }
  else
  {
    v183 = *(_DWORD *)(v212 + 124);
    v182 = v183 - 1;
    if (v183 == 1)
    {
      v182 = 1;
    }
    else if (!v183)
    {
      __break(1u);
      return result;
    }
  }
  v184 = *(_QWORD *)(v212 + 76);
  v185 = *(unsigned __int8 *)(v212 + 84);
  if (v181 | v185)
    v186 = 0;
  else
    v186 = v182 - HIDWORD(v184);
  v187 = (_QWORD *)swift_allocObject();
  v188 = v180;
  v189 = v187;
  v191 = *(_QWORD *)(v188 + 88);
  v190 = *(_QWORD *)(v188 + 96);
  v187[2] = v191;
  v187[3] = v190;
  if ((v185 & 1) != 0)
  {
    LODWORD(v223) = 1;
    LODWORD(v225) = v182;
    sub_1A54E3414();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    static MessageIdentifier.... infix(_:_:)();
  }
  else
  {
    v187[4] = v184;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v189[5] = *(_QWORD *)(v212 + 136);
  v189[6] = v186;
  return 2;
}

void sub_1A55C35F4(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int *v33;
  int v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  int v54;
  char v55;
  char v56;
  uint64_t v57;
  int v58;
  BOOL v59;
  int v60;
  NSObject *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  unint64_t v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  os_log_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  NSObject *v100;
  os_log_type_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t isa_high;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unsigned int v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  os_log_t v117;
  uint64_t v118;
  os_log_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  os_log_t v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  _OWORD v133[36];
  uint64_t v134;
  unsigned int v135;
  unsigned __int8 v136;
  int v137;
  uint64_t v138[2];
  _BYTE v139[584];
  _BYTE v140[584];
  _BYTE v141[592];

  v128 = a6;
  sub_1A552316C(a1, v139);
  sub_1A552316C(v139, v141);
  v10 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v10);
  v129 = (unint64_t)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v125 = (uint64_t)&v119 - v13;
  v14 = sub_1A594A764();
  v131 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v130 = (char *)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v126 = (char *)&v119 - v17;
  v18 = sub_1A562B224(0, a4);
  v19 = *(_QWORD *)(v18 + 16);
  v127 = v10;
  if (v19)
  {
    v20 = 0;
    while ((sub_1A55E5990(*(_DWORD *)(v18 + 4 * v20 + 32), a2, a3) & 1) == 0)
    {
      if (v19 == ++v20)
        goto LABEL_5;
    }
    v25 = 0;
    v24 = v132;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    v21 = sub_1A562B224(1, a4);
    v22 = *(_QWORD *)(v21 + 16);
    if (!v22)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      return;
    }
    v23 = 0;
    v24 = v132;
    while ((sub_1A55E5990(*(_DWORD *)(v21 + 4 * v23 + 32), a2, a3) & 1) == 0)
    {
      if (v22 == ++v23)
        goto LABEL_9;
    }
    v25 = 1;
  }
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v24 + 130) == 1)
  {
    sub_1A552316C(a1, v140);
    if (sub_1A5523B90((uint64_t)v140) != 11)
      return;
    v26 = *(_QWORD *)sub_1A5524678((uint64_t)v140);
    v27 = sub_1A54E3414();
    v28 = MessageIdentifierSet.init()(&type metadata for UID, v27);
    v30 = v29;
    v31 = HIDWORD(v29);
    v134 = v28;
    v135 = v29;
    v136 = BYTE4(v29);
    v32 = *(_QWORD *)(v26 + 16);
    if (v32)
    {
      v33 = (int *)(v26 + 32);
      sub_1A552316C(v141, v133);
      sub_1A5524678((uint64_t)v133);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      do
      {
        v34 = *v33++;
        v137 = v34;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        MessageIdentifierSet.insert(_:)();
        --v32;
      }
      while (v32);
      sub_1A5529E00((uint64_t)a1);
      v35 = v134;
      v30 = v135;
      v31 = v136;
    }
    else
    {
      v35 = v28;
    }
    v124 = v14;
  }
  else
  {
    sub_1A552316C(a1, v140);
    if (sub_1A5523B90((uint64_t)v140) != 12)
      return;
    v36 = (_OWORD *)sub_1A5524678((uint64_t)v140);
    v133[0] = *v36;
    v133[1] = v36[1];
    v133[2] = v36[2];
    ExtendedSearchResponse.matchedUIDs.getter();
    if ((~v38 & 0xFF00000000) == 0)
      return;
    v35 = v37;
    v124 = v14;
    v30 = v38;
    v31 = HIDWORD(v38);
  }
  v39 = *(_QWORD *)(v24 + 136);
  sub_1A54E4334(v35, v30, v31);
  v122 = v35;
  v123 = v30;
  v120 = v30 | ((unint64_t)v31 << 32);
  v121 = v31;
  v40 = sub_1A552EE6C(v39, v35, v120, v25);
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v48 = v24 + 168;
  v47 = *(unsigned int *)(v24 + 168);
  v49 = *(_QWORD *)(v24 + 144);
  v50 = *(_QWORD *)(v24 + 152);
  v51 = *(_QWORD *)(v24 + 160);
  v52 = v47 | ((unint64_t)*(unsigned __int8 *)(v48 + 4) << 32);
  *(_QWORD *)(v48 - 24) = v40;
  *(_QWORD *)(v48 - 16) = v41;
  *(_QWORD *)(v48 - 8) = v43;
  *(_DWORD *)v48 = v45;
  *(_BYTE *)(v48 + 4) = BYTE4(v45);
  v53 = *(_BYTE *)(v48 + 5);
  *(_BYTE *)(v48 + 5) = 1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5503BA0(v44, v46);
  sub_1A550F0B4(v49, v50, v51, v52, v53);
  if (*(_BYTE *)(v48 - 96) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A5503B8C(v44, v46);
    goto LABEL_32;
  }
  v54 = sub_1A552EFA0(v42);
  v56 = v55;
  swift_bridgeObjectRelease();
  sub_1A5503B8C(v44, v46);
  if ((v56 & 1) != 0)
  {
LABEL_32:
    v91 = v130;
    v92 = v131;
    v93 = v128;
    v94 = v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v130, v128, v124);
    v95 = v93;
    v96 = v129;
    sub_1A55034B8(v95, v129, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v97 = v122;
    v98 = v123;
    v99 = v121;
    sub_1A54E4334(v122, v123, v121);
    v100 = sub_1A594A74C();
    v101 = sub_1A594C030();
    v102 = v101;
    if (os_log_type_enabled(v100, v101))
    {
      v103 = swift_slowAlloc();
      v124 = v94;
      v104 = v103;
      v132 = swift_slowAlloc();
      v138[0] = v132;
      *(_DWORD *)v104 = 68159491;
      LODWORD(v134) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v104 + 8) = 256;
      isa_high = SHIDWORD(v127[2].isa);
      LODWORD(v128) = v102;
      v106 = v96 + isa_high;
      LOBYTE(v134) = *(_BYTE *)(v96 + isa_high);
      sub_1A594C3CC();
      *(_WORD *)(v104 + 11) = 2082;
      v127 = v100;
      v107 = *(_QWORD *)(v106 + 8);
      v108 = *(_QWORD *)(v106 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v134 = sub_1A55791B0(v107, v108, v138);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v104 + 21) = 1040;
      LODWORD(v134) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v104 + 27) = 512;
      LOWORD(v134) = *(_WORD *)(v106 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v104 + 31) = 2160;
      v134 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v104 + 41) = 2085;
      v109 = *(_DWORD *)(v106 + 40);
      v134 = *(_QWORD *)(v106 + 32);
      v135 = v109;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v110 = sub_1A594B4A8();
      v134 = sub_1A55791B0(v110, v111, v138);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v129, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v104 + 51) = 2082;
      v112 = v123;
      sub_1A54E4334(v97, v123, v99);
      sub_1A54E3414();
      MessageIdentifierSet.debugDescription.getter();
      v114 = v113;
      v116 = v115;
      sub_1A54E3458(v97, v112, v99);
      v134 = sub_1A55791B0(v114, v116, v138);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v97, v112, v99);
      sub_1A54E3458(v97, v112, v99);
      v117 = v127;
      _os_log_impl(&dword_1A4F90000, v127, (os_log_type_t)v128, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Creating UID ranges from UIDs: %{public}s", (uint8_t *)v104, 0x3Du);
      v118 = v132;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v118, -1, -1);
      MEMORY[0x1A85B1964](v104, -1, -1);

      (*(void (**)(char *, uint64_t))(v131 + 8))(v130, v124);
    }
    else
    {
      sub_1A55034FC(v96, type metadata accessor for MailboxTaskLogger);
      sub_1A54E3458(v97, v98, v99);
      sub_1A54E3458(v97, v98, v99);

      (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v94);
    }
    return;
  }
  v57 = v132;
  v58 = *(_DWORD *)(v132 + 124);
  v59 = v58 != 0;
  v60 = v58 - 1;
  if (v60 == 0 || !v59)
    v60 = 1;
  if (*(_BYTE *)(v132 + 128))
    v60 = -1;
  LODWORD(v138[0]) = v54;
  v137 = v60;
  v129 = sub_1A54E3414();
  static MessageIdentifier.... infix(_:_:)();
  v61 = v134;
  v130 = (char *)HIDWORD(v134);
  *(_QWORD *)(v57 + 76) = v134 | ((unint64_t)HIDWORD(v134) << 32);
  *(_BYTE *)(v57 + 84) = 0;
  v62 = v131;
  v63 = v126;
  v64 = v128;
  v65 = v124;
  (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v126, v128, v124);
  v66 = v125;
  sub_1A55034B8(v64, v125, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v68 = v122;
  v67 = v123;
  v69 = v121;
  sub_1A54E4334(v122, v123, v121);
  v70 = sub_1A594A74C();
  v71 = sub_1A594C030();
  LODWORD(v132) = v71;
  if (os_log_type_enabled(v70, v71))
  {
    v72 = swift_slowAlloc();
    v124 = v65;
    v119 = v70;
    v73 = v72;
    v128 = swift_slowAlloc();
    v138[0] = v128;
    *(_DWORD *)v73 = 68159747;
    LODWORD(v134) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v73 + 8) = 256;
    v74 = SHIDWORD(v127[2].isa);
    v127 = v61;
    v75 = v66 + v74;
    LOBYTE(v134) = *(_BYTE *)(v66 + v74);
    sub_1A594C3CC();
    *(_WORD *)(v73 + 11) = 2082;
    v76 = v69;
    v77 = *(_QWORD *)(v75 + 8);
    v78 = *(_QWORD *)(v75 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v134 = sub_1A55791B0(v77, v78, v138);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v73 + 21) = 1040;
    LODWORD(v134) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v73 + 27) = 512;
    LOWORD(v134) = *(_WORD *)(v75 + 24);
    sub_1A594C3CC();
    *(_WORD *)(v73 + 31) = 2160;
    v134 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v73 + 41) = 2085;
    v79 = *(_DWORD *)(v75 + 40);
    v134 = *(_QWORD *)(v75 + 32);
    v135 = v79;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v80 = sub_1A594B4A8();
    v134 = sub_1A55791B0(v80, v81, v138);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v66, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v73 + 51) = 2082;
    v82 = v123;
    sub_1A54E4334(v68, v123, v76);
    MessageIdentifierSet.debugDescription.getter();
    v84 = v83;
    v86 = v85;
    sub_1A54E3458(v68, v82, v76);
    v134 = sub_1A55791B0(v84, v86, v138);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A54E3458(v68, v82, v76);
    sub_1A54E3458(v68, v82, v76);
    *(_WORD *)(v73 + 61) = 2082;
    v134 = __PAIR64__(v130, v127);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
    MessageIdentifierRange.debugDescription.getter();
    v134 = sub_1A55791B0(v87, v88, v138);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    v89 = v119;
    _os_log_impl(&dword_1A4F90000, v119, (os_log_type_t)v132, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Creating UID ranges from UIDs: %{public}s (window of interest: %{public}s)", (uint8_t *)v73, 0x47u);
    v90 = v128;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v90, -1, -1);
    MEMORY[0x1A85B1964](v73, -1, -1);

    (*(void (**)(char *, uint64_t))(v131 + 8))(v126, v124);
  }
  else
  {
    sub_1A55034FC(v66, type metadata accessor for MailboxTaskLogger);
    sub_1A54E3458(v68, v67, v69);
    sub_1A54E3458(v68, v67, v69);

    (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v65);
  }
}

void sub_1A55C4244(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int32x2_t *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  int32x2_t *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  os_log_t v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  unint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  unint64_t v118;
  os_log_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  NSObject *v124;
  os_log_type_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  int v130;
  uint64_t v131;
  unint64_t v132;
  id v133;
  uint64_t v134;
  NSObject *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  os_log_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  NSObject *v150;
  os_log_type_t v151;
  uint64_t v152;
  uint64_t isa_high;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  unint64_t v161;
  os_log_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  NSObject *v168;
  os_log_type_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  unint64_t v177;
  os_log_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  char v197;
  int v198;
  int v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t *v212;
  uint64_t *v213;
  unsigned int v214;
  uint64_t v215;
  int *v216;
  char *v217;
  uint64_t v218;
  void (*v219)(char *, uint64_t, uint64_t);
  NSObject *v220;
  uint64_t v221;
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  os_log_t v225;
  uint64_t v226;
  char *v227;
  char *v228;
  os_log_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t *v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  int v238;
  char *v239;
  int v240;

  v6 = v5;
  v230 = a5;
  v234 = a1;
  v229 = (os_log_t)type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v229);
  v236 = (uint64_t)&v215 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v224 = (uint64_t)&v215 - v12;
  MEMORY[0x1E0C80A78](v13);
  v226 = (uint64_t)&v215 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v215 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v215 - v19;
  v21 = sub_1A594A764();
  v231 = *(_QWORD *)(v21 - 8);
  v232 = v21;
  MEMORY[0x1E0C80A78](v21);
  v228 = (char *)&v215 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v225 = (os_log_t)((char *)&v215 - v24);
  MEMORY[0x1E0C80A78](v25);
  v227 = (char *)&v215 - v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v215 - v28;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v215 - v31;
  v235 = a4;
  v33 = sub_1A55B03D4(0, a4);
  v34 = *(_QWORD *)(v33 + 16);
  if (!v34)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    v36 = v235;
    v37 = v236;
    goto LABEL_15;
  }
  v233 = v6;
  v35 = 0;
  while ((sub_1A55F3D24(*(_DWORD *)(v33 + 4 * v35 + 32), a2, a3) & 1) == 0)
  {
    if (v34 == ++v35)
    {
      swift_bridgeObjectRelease();
      v6 = v233;
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  v37 = v236;
  if (((v234 >> 59) & 0x1E | (v234 >> 2) & 1) == 6)
  {
    v6 = v233;
    if (v233[12] == *(_QWORD *)((v234 & 0xFFFFFFFFFFFFFFBLL) + 0x18))
    {
      v38 = *(unsigned int *)((v234 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      v223 = *(unsigned int *)((v234 & 0xFFFFFFFFFFFFFFBLL) + 0x24);
      if (sub_1A54FF30C(v233[11], *(_QWORD *)((v234 & 0xFFFFFFFFFFFFFFBLL) + 0x10)))
      {
        v222 = v38;
        v39 = v230;
        v40 = v231;
        v219 = *(void (**)(char *, uint64_t, uint64_t))(v231 + 16);
        v219(v32, v230, v232);
        sub_1A55034B8(v39, (uint64_t)v20, type metadata accessor for MailboxTaskLogger);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v41 = sub_1A594A74C();
        v42 = sub_1A594C030();
        LODWORD(v221) = v42;
        if (os_log_type_enabled(v41, v42))
        {
          v43 = swift_slowAlloc();
          v218 = swift_slowAlloc();
          v239 = (char *)v218;
          *(_DWORD *)v43 = 68159491;
          LODWORD(v237) = 2;
          v217 = (char *)&v237 + 4;
          sub_1A594C3CC();
          *(_WORD *)(v43 + 8) = 256;
          v44 = &v20[SHIDWORD(v229[2].isa)];
          LOBYTE(v237) = *v44;
          sub_1A594C3CC();
          *(_WORD *)(v43 + 11) = 2082;
          v215 = v43 + 13;
          v216 = (int *)*((_QWORD *)v44 + 1);
          v220 = v41;
          v45 = *((_QWORD *)v44 + 2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v237 = sub_1A55791B0((uint64_t)v216, v45, (uint64_t *)&v239);
          v216 = &v238;
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v43 + 21) = 1040;
          LODWORD(v237) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v43 + 27) = 512;
          LOWORD(v237) = *((_WORD *)v44 + 12);
          sub_1A594C3CC();
          *(_WORD *)(v43 + 31) = 2160;
          v237 = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v43 + 41) = 2085;
          v217 = (char *)(v43 + 43);
          v46 = *((_DWORD *)v44 + 10);
          v237 = *((_QWORD *)v44 + 4);
          v238 = v46;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v47 = sub_1A594B4A8();
          v237 = sub_1A55791B0(v47, v48, (uint64_t *)&v239);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC((uint64_t)v20, type metadata accessor for MailboxTaskLogger);
          *(_WORD *)(v43 + 51) = 2082;
          v217 = (char *)(v43 + 53);
          v49 = v223;
          v237 = __PAIR64__(v223, v222);
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
          MessageIdentifierRange.debugDescription.getter();
          v237 = sub_1A55791B0(v50, v51, (uint64_t *)&v239);
          v6 = v233;
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v220, (os_log_type_t)v221, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found window of interest: %{public}s", (uint8_t *)v43, 0x3Du);
          v52 = v218;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v52, -1, -1);
          MEMORY[0x1A85B1964](v43, -1, -1);

          v53 = v232;
          v54 = *(void (**)(char *, uint64_t))(v231 + 8);
          v54(v32, v232);
        }
        else
        {
          sub_1A55034FC((uint64_t)v20, type metadata accessor for MailboxTaskLogger);

          v54 = *(void (**)(char *, uint64_t))(v40 + 8);
          v53 = v232;
          v54(v32, v232);
          v49 = v223;
        }
        *(uint64_t *)((char *)v6 + 76) = v222 | (v49 << 32);
        *((_BYTE *)v6 + 84) = 0;
        if ((v6[16] & 1) == 0)
        {
          v121 = *((unsigned int *)v6 + 31) - v49;
          if (v121 > v6[17] / 2)
          {
            v122 = v230;
            v219(v29, v230, v53);
            sub_1A55034B8(v122, (uint64_t)v17, type metadata accessor for MailboxTaskLogger);
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            v123 = v53;
            v124 = sub_1A594A74C();
            v125 = sub_1A594C030();
            v223 = (unint64_t)v124;
            LODWORD(v222) = v125;
            if (os_log_type_enabled(v124, v125))
            {
              v126 = swift_slowAlloc();
              v221 = swift_slowAlloc();
              v239 = (char *)v221;
              *(_DWORD *)v126 = 68159491;
              LODWORD(v237) = 2;
              v219 = (void (*)(char *, uint64_t, uint64_t))((char *)&v237 + 4);
              sub_1A594C3CC();
              *(_WORD *)(v126 + 8) = 256;
              v127 = &v17[SHIDWORD(v229[2].isa)];
              LOBYTE(v237) = *v127;
              sub_1A594C3CC();
              *(_WORD *)(v126 + 11) = 2082;
              v218 = v126 + 13;
              v220 = v121;
              v128 = *((_QWORD *)v127 + 1);
              v129 = *((_QWORD *)v127 + 2);
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v237 = sub_1A55791B0(v128, v129, (uint64_t *)&v239);
              sub_1A594C3CC();
              swift_bridgeObjectRelease();
              *(_WORD *)(v126 + 21) = 1040;
              LODWORD(v237) = 2;
              sub_1A594C3CC();
              *(_WORD *)(v126 + 27) = 512;
              LOWORD(v237) = *((_WORD *)v127 + 12);
              sub_1A594C3CC();
              *(_WORD *)(v126 + 31) = 2160;
              v237 = 0x786F626C69616DLL;
              sub_1A594C3CC();
              *(_WORD *)(v126 + 41) = 2085;
              v130 = *((_DWORD *)v127 + 10);
              v237 = *((_QWORD *)v127 + 4);
              v238 = v130;
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v131 = sub_1A594B4A8();
              v237 = sub_1A55791B0(v131, v132, (uint64_t *)&v239);
              v6 = v233;
              sub_1A594C3CC();
              swift_bridgeObjectRelease();
              sub_1A55034FC((uint64_t)v17, type metadata accessor for MailboxTaskLogger);
              *(_WORD *)(v126 + 51) = 2048;
              v237 = (uint64_t)v220;
              sub_1A594C3CC();
              v133 = (id)v223;
              _os_log_impl(&dword_1A4F90000, (os_log_t)v223, (os_log_type_t)v222, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld new UIDs on server. Querying server..", (uint8_t *)v126, 0x3Du);
              v134 = v221;
              swift_arrayDestroy();
              MEMORY[0x1A85B1964](v134, -1, -1);
              MEMORY[0x1A85B1964](v126, -1, -1);

              (*(void (**)(char *, uint64_t))(v231 + 8))(v29, v232);
            }
            else
            {
              sub_1A55034FC((uint64_t)v17, type metadata accessor for MailboxTaskLogger);

              v54(v29, v123);
            }
            sub_1A550F0B4(v6[18], v6[19], v6[20], *((unsigned int *)v6 + 42) | ((unint64_t)*((unsigned __int8 *)v6 + 172) << 32), *((_BYTE *)v6 + 173));
            v6[18] = 0;
            v6[19] = 0;
            *(uint64_t *)((char *)v6 + 165) = 0;
            v6[20] = 0;
            *((_BYTE *)v6 + 173) = 2;
          }
        }
        goto LABEL_7;
      }
    }
  }
  else
  {
    v6 = v233;
  }
  v36 = v235;
LABEL_15:
  v55 = sub_1A55B03D4(2, v36);
  v56 = *(_QWORD *)(v55 + 16);
  if (!v56)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  v57 = 0;
  while ((sub_1A55F3D24(*(_DWORD *)(v55 + 4 * v57 + 32), a2, a3) & 1) == 0)
  {
    if (v56 == ++v57)
      goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  v58 = (char *)v6[18];
  if (*((_BYTE *)v6 + 173))
    v59 = 0;
  else
    v59 = ((v234 >> 59) & 0x1E | (v234 >> 2) & 1) == 7;
  if (!v59)
    goto LABEL_24;
  if (v6[12] != *(_QWORD *)((v234 & 0xFFFFFFFFFFFFFFBLL) + 0x18))
    goto LABEL_24;
  v94 = *(_QWORD *)((v234 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
  v95 = *(unsigned int *)((v234 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
  v223 = *(unsigned __int8 *)((v234 & 0xFFFFFFFFFFFFFFBLL) + 0x2C);
  v233 = *(uint64_t **)((v234 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
  if (!sub_1A54FF30C(v6[11], *(_QWORD *)((v234 & 0xFFFFFFFFFFFFFFBLL) + 0x10)))
    goto LABEL_24;
  v222 = v95;
  v96 = v6[8];
  v97 = *((unsigned __int8 *)v6 + 72);
  v98 = v232;
  v99 = v228;
  if (v97 != 1)
    goto LABEL_52;
  v100 = (char *)v233 - v58;
  if (__OFSUB__(v233, v58))
  {
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  if (v100 < 0)
  {
    v101 = __OFSUB__(0, v100);
    v100 = v58 - (char *)v233;
    if (v101)
      goto LABEL_78;
  }
  if (v100 < v6[17] / 2)
  {
    v102 = v94;
    v104 = v230;
    v103 = v231;
    v105 = v227;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v231 + 16))(v227, v230, v232, v96);
    v106 = v104;
    v107 = (os_log_t)v226;
    sub_1A55034B8(v106, v226, type metadata accessor for MailboxTaskLogger);
    v236 = v102;
    sub_1A54E4334(v102, v222, v223);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v108 = v98;
    v109 = sub_1A594A74C();
    v110 = sub_1A594C030();
    LODWORD(v230) = v110;
    if (os_log_type_enabled(v109, v110))
    {
      v111 = swift_slowAlloc();
      v225 = v109;
      v112 = v111;
      v228 = (char *)swift_slowAlloc();
      v239 = v228;
      *(_DWORD *)v112 = 68159747;
      LODWORD(v237) = 2;
      v224 = (uint64_t)&v237 + 4;
      sub_1A594C3CC();
      *(_WORD *)(v112 + 8) = 256;
      v113 = (char *)v107 + SHIDWORD(v229[2].isa);
      LOBYTE(v237) = *v113;
      sub_1A594C3CC();
      *(_WORD *)(v112 + 11) = 2082;
      v115 = *((_QWORD *)v113 + 1);
      v114 = *((_QWORD *)v113 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v237 = sub_1A55791B0(v115, v114, (uint64_t *)&v239);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v112 + 21) = 1040;
      LODWORD(v237) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v112 + 27) = 512;
      LOWORD(v237) = *((_WORD *)v113 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v112 + 31) = 2160;
      v237 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v112 + 41) = 2085;
      v116 = *((_DWORD *)v113 + 10);
      v237 = *((_QWORD *)v113 + 4);
      v238 = v116;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v117 = sub_1A594B4A8();
      v237 = sub_1A55791B0(v117, v118, (uint64_t *)&v239);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v226, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v112 + 51) = 2048;
      v237 = (uint64_t)v233;
      sub_1A594C3CC();
      *(_WORD *)(v112 + 61) = 2048;
      v237 = (uint64_t)v58;
      sub_1A594C3CC();
      v119 = v225;
      _os_log_impl(&dword_1A4F90000, v225, (os_log_type_t)v230, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld UIDs locally, %ld on server.", (uint8_t *)v112, 0x47u);
      v120 = v228;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v120, -1, -1);
      MEMORY[0x1A85B1964](v112, -1, -1);

      (*(void (**)(char *, uint64_t))(v231 + 8))(v227, v232);
    }
    else
    {
      sub_1A55034FC((uint64_t)v107, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v103 + 8))(v105, v108);
    }
    v180 = sub_1A552EE6C(v6[17], v236, v222 | (v223 << 32), 1);
    v182 = v181;
    v184 = v183;
    v186 = v185;
    sub_1A550F0B4(v6[18], v6[19], v6[20], *((unsigned int *)v6 + 42) | ((unint64_t)*((unsigned __int8 *)v6 + 172) << 32), *((_BYTE *)v6 + 173));
    v6[18] = v180;
    v6[19] = v182;
    v6[20] = v184;
    *((_BYTE *)v6 + 172) = BYTE4(v186);
    *((_DWORD *)v6 + 42) = v186;
    *((_BYTE *)v6 + 173) = 1;
    v36 = v235;
    goto LABEL_24;
  }
LABEL_52:
  if ((*((_BYTE *)v6 + 84) & 1) != 0)
    goto LABEL_58;
  v135 = *(NSObject **)((char *)v6 + 76);
  v136 = *((unsigned int *)v6 + 31);
  LOBYTE(v237) = *((_BYTE *)v6 + 128);
  v226 = (uint64_t)v135;
  v227 = v58;
  v137 = v94;
  v138 = v232;
  v139 = v228;
  v140 = WindowOfInterestSize.limit(serverNextUID:windowOfInterest:)(v136 | ((unint64_t)v237 << 32), (unint64_t)v135, 0, v96, v97);
  v99 = v139;
  v98 = v138;
  v141 = v137;
  v58 = v227;
  if ((v142 & 1) != 0)
    goto LABEL_58;
  if (__OFSUB__(v140, v233))
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (v140 - (uint64_t)v233 <= 499)
  {
    v143 = v141;
    v145 = v230;
    v144 = v231;
    v146 = v225;
    (*(void (**)(os_log_t, uint64_t, uint64_t))(v231 + 16))(v225, v230, v98);
    v147 = v145;
    v148 = v224;
    sub_1A55034B8(v147, v224, type metadata accessor for MailboxTaskLogger);
    v236 = v143;
    sub_1A54E4334(v143, v222, v223);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v149 = v98;
    v150 = sub_1A594A74C();
    v151 = sub_1A594C030();
    LODWORD(v230) = v151;
    if (os_log_type_enabled(v150, v151))
    {
      v221 = HIDWORD(v226);
      v152 = swift_slowAlloc();
      v228 = (char *)swift_slowAlloc();
      v239 = v228;
      *(_DWORD *)v152 = 68160003;
      LODWORD(v237) = 2;
      v220 = ((char *)&v237 + 4);
      sub_1A594C3CC();
      *(_WORD *)(v152 + 8) = 256;
      isa_high = SHIDWORD(v229[2].isa);
      v229 = v150;
      v154 = v148 + isa_high;
      LOBYTE(v237) = *(_BYTE *)(v148 + isa_high);
      sub_1A594C3CC();
      *(_WORD *)(v152 + 11) = 2082;
      v156 = *(_QWORD *)(v154 + 8);
      v155 = *(_QWORD *)(v154 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v237 = sub_1A55791B0(v156, v155, (uint64_t *)&v239);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v152 + 21) = 1040;
      LODWORD(v237) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v152 + 27) = 512;
      LOWORD(v237) = *(_WORD *)(v154 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v152 + 31) = 2160;
      v237 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v152 + 41) = 2085;
      v157 = *(_DWORD *)(v154 + 40);
      v237 = *(_QWORD *)(v154 + 32);
      v238 = v157;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v158 = sub_1A594B4A8();
      v237 = sub_1A55791B0(v158, v159, (uint64_t *)&v239);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v224, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v152 + 51) = 2048;
      v237 = (uint64_t)v233;
      sub_1A594C3CC();
      *(_WORD *)(v152 + 61) = 2082;
      v237 = __PAIR64__(v221, v226);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
      MessageIdentifierRange.debugDescription.getter();
      v237 = sub_1A55791B0(v160, v161, (uint64_t *)&v239);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v152 + 71) = 2048;
      v237 = (uint64_t)v58;
      sub_1A594C3CC();
      v162 = v229;
      _os_log_impl(&dword_1A4F90000, v229, (os_log_type_t)v230, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld UIDs locally in window %{public}s, %ld on server.", (uint8_t *)v152, 0x51u);
      v163 = v228;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v163, -1, -1);
      MEMORY[0x1A85B1964](v152, -1, -1);

      (*(void (**)(os_log_t, uint64_t))(v231 + 8))(v225, v232);
    }
    else
    {
      sub_1A55034FC(v148, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(os_log_t, uint64_t))(v144 + 8))(v146, v149);
    }
    sub_1A54E3414();
    v187 = v222 | (v223 << 32);
    MessageIdentifierSet.startIndex.getter();
    v189 = v188;
    v191 = v190;
    MessageIdentifierSet.endIndex.getter();
    if (v189 != v193 || v191 != v192)
    {
      v194 = v236;
      v195 = v222;
      v233 = (uint64_t *)v187;
      v196 = v223;
      sub_1A54E4334(v236, v222, v223);
      MessageIdentifierSet.subscript.getter();
      v197 = v196;
      v187 = (unint64_t)v233;
      sub_1A54E3458(v194, v195, v197);
      v226 = v237;
    }
    if ((v6[16] & 1) != 0)
    {
      v198 = -1;
LABEL_76:
      LODWORD(v239) = v226;
      v240 = v198;
      static MessageIdentifier.... infix(_:_:)();
      v200 = v236;
      *(uint64_t *)((char *)v6 + 76) = v237;
      *((_BYTE *)v6 + 84) = 0;
      v201 = v6[17];
      v202 = sub_1A552EA5C(v200, v187);
      sub_1A54E3458(v200, v222, v223);
      v203 = sub_1A55C2050(MEMORY[0x1E0DEE9D8], (uint64_t (*)(void))sub_1A54E3414, (uint64_t)&type metadata for UID);
      v205 = sub_1A552E8F4(v201, v202, v203, v204 & 0xFFFFFFFFFFLL);
      v207 = v206;
      v209 = v208;
      v211 = v210;
      v212 = v6;
      v214 = *((_DWORD *)v6 + 42);
      v213 = v6 + 21;
      sub_1A550F0B4(*(v213 - 3), *(v213 - 2), *(v213 - 1), v214 | ((unint64_t)*((unsigned __int8 *)v213 + 4) << 32), *((_BYTE *)v213 + 5));
      *(v213 - 3) = v205;
      *(v213 - 2) = v207;
      *(v213 - 1) = v209;
      *((_BYTE *)v213 + 4) = BYTE4(v211);
      *(_DWORD *)v213 = v211;
      *((_BYTE *)v213 + 5) = 1;
      v6 = v212;
      v36 = v235;
      goto LABEL_24;
    }
    v199 = *((_DWORD *)v6 + 31);
    v198 = v199 - 1;
    if (v199 == 1)
    {
      v198 = 1;
      goto LABEL_76;
    }
    if (v199)
      goto LABEL_76;
LABEL_80:
    __break(1u);
    return;
  }
LABEL_58:
  v164 = v230;
  v165 = v98;
  v166 = v99;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v231 + 16))(v99, v230, v165, v96);
  sub_1A55034B8(v164, v37, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v167 = v166;
  v168 = sub_1A594A74C();
  v169 = sub_1A594C030();
  LODWORD(v230) = v169;
  if (os_log_type_enabled(v168, v169))
  {
    v170 = swift_slowAlloc();
    v226 = (uint64_t)v168;
    v171 = v170;
    v227 = (char *)swift_slowAlloc();
    v239 = v227;
    *(_DWORD *)v171 = 68159747;
    LODWORD(v237) = 2;
    v225 = (os_log_t)((char *)&v237 + 4);
    sub_1A594C3CC();
    *(_WORD *)(v171 + 8) = 256;
    v172 = v37 + SHIDWORD(v229[2].isa);
    LOBYTE(v237) = *(_BYTE *)v172;
    sub_1A594C3CC();
    *(_WORD *)(v171 + 11) = 2082;
    v229 = (os_log_t)(v171 + 13);
    v174 = *(_QWORD *)(v172 + 8);
    v173 = *(_QWORD *)(v172 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v237 = sub_1A55791B0(v174, v173, (uint64_t *)&v239);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v171 + 21) = 1040;
    LODWORD(v237) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v171 + 27) = 512;
    LOWORD(v237) = *(_WORD *)(v172 + 24);
    sub_1A594C3CC();
    *(_WORD *)(v171 + 31) = 2160;
    v237 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v171 + 41) = 2085;
    v175 = *(_DWORD *)(v172 + 40);
    v237 = *(_QWORD *)(v172 + 32);
    v238 = v175;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v176 = sub_1A594B4A8();
    v237 = sub_1A55791B0(v176, v177, (uint64_t *)&v239);
    sub_1A594C3CC();
    v36 = v235;
    swift_bridgeObjectRelease();
    sub_1A55034FC(v236, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v171 + 51) = 2048;
    v237 = (uint64_t)v233;
    sub_1A594C3CC();
    *(_WORD *)(v171 + 61) = 2048;
    v237 = (uint64_t)v58;
    sub_1A594C3CC();
    v178 = (os_log_t)v226;
    _os_log_impl(&dword_1A4F90000, (os_log_t)v226, (os_log_type_t)v230, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Only found %ld UIDs locally but %ld on server. Querying server for message batches.", (uint8_t *)v171, 0x47u);
    v179 = v227;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v179, -1, -1);
    MEMORY[0x1A85B1964](v171, -1, -1);

    (*(void (**)(char *, uint64_t))(v231 + 8))(v228, v232);
  }
  else
  {
    sub_1A55034FC(v37, type metadata accessor for MailboxTaskLogger);

    (*(void (**)(char *, uint64_t))(v231 + 8))(v167, v232);
  }
  sub_1A550F0B4(v6[18], v6[19], v6[20], *((unsigned int *)v6 + 42) | ((unint64_t)*((unsigned __int8 *)v6 + 172) << 32), *((_BYTE *)v6 + 173));
  v6[18] = 0;
  v6[19] = 0;
  *(uint64_t *)((char *)v6 + 165) = 0;
  v6[20] = 0;
  *((_BYTE *)v6 + 173) = 2;
LABEL_24:
  v60 = sub_1A55B03D4(3, v36);
  v61 = *(_QWORD *)(v60 + 16);
  if (v61)
  {
    v62 = 0;
    while ((sub_1A55F3D24(*(_DWORD *)(v60 + 4 * v62 + 32), a2, a3) & 1) == 0)
    {
      if (v61 == ++v62)
        goto LABEL_28;
    }
    swift_bridgeObjectRelease();
    if (*((_BYTE *)v6 + 173) == 1)
    {
      v63 = v6;
      if ((*((_BYTE *)v6 + 84) & 1) == 0)
      {
        v64 = *(uint64_t *)((char *)v6 + 76);
        if ((v64 & 0xFFFFFFFE) != 0 && ((v234 >> 59) & 0x1E | (v234 >> 2) & 1) == 8)
        {
          v65 = v234 & 0xFFFFFFFFFFFFFFBLL;
          if (v6[12] == *(_QWORD *)((v234 & 0xFFFFFFFFFFFFFFBLL) + 0x18))
          {
            v66 = v6[18];
            v67 = v6[19];
            v68 = v6[20];
            v235 = *((unsigned __int8 *)v6 + 172);
            v234 = *((unsigned int *)v6 + 42);
            v236 = *(_QWORD *)(v65 + 32);
            v69 = *(unsigned int *)(v65 + 40);
            v70 = *(unsigned __int8 *)(v65 + 44);
            v71 = *(int32x2_t **)(v65 + 48);
            v72 = *(unsigned int *)(v65 + 56);
            v73 = *(unsigned __int8 *)(v65 + 60);
            if (sub_1A54FF30C(v63[11], *(_QWORD *)(v65 + 16)))
            {
              v230 = v68;
              v231 = v67;
              v232 = v66;
              v233 = v63;
              LODWORD(v239) = 1;
              v240 = v64 - 1;
              sub_1A54E4334(v236, v69, v70);
              sub_1A54E4334((uint64_t)v71, v72, v73);
              v74 = sub_1A54E3414();
              static MessageIdentifier.... infix(_:_:)();
              v239 = (char *)v237;
              MessageIdentifierSet.init(_:)((uint64_t)&v239, (uint64_t)&type metadata for UID, v74, v75);
              v77 = (uint64_t)v76;
              v79 = v78;
              v80 = HIDWORD(v78);
              static MessageIdentifierSet.__derived_struct_equals(_:_:)(v76, v78 & 0xFFFFFFFFFFLL, v71, v72 | (v73 << 32));
              LOBYTE(v74) = v81;
              sub_1A54E3458(v77, v79, v80);
              sub_1A54E3458((uint64_t)v71, v72, v73);
              if ((v74 & 1) != 0)
              {
                v82 = v234 | (v235 << 32);
                v83 = v233;
                v84 = v233[17];
                v85 = v69 | (v70 << 32);
                v86 = v231;
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                v87 = sub_1A552E8F4(v84, v86, v236, v85);
                v89 = v88;
                v91 = v90;
                v93 = v92;
                sub_1A550F0B4(v232, v86, v230, v82, 1);
                v83[18] = v87;
                v83[19] = v89;
                v83[20] = v91;
                *((_BYTE *)v83 + 172) = BYTE4(v93);
                *((_DWORD *)v83 + 42) = v93;
                *((_BYTE *)v83 + 173) = 1;
              }
              else
              {
                sub_1A54E3458(v236, v69, v70);
              }
            }
          }
        }
      }
    }
  }
  else
  {
LABEL_28:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A55C5C04()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55C5C28()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(v0 + 32), *(unsigned int *)(v0 + 40), *(_BYTE *)(v0 + 44));
  return swift_deallocObject();
}

uint64_t sub_1A55C5C5C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55C5C80()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55C5CA4()
{
  return swift_deallocObject();
}

uint64_t sub_1A55C5CB4()
{
  uint64_t v0;
  unint64_t v1;

  if (*(unsigned __int8 *)(v0 + 28) != 255)
  {
    v1 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 16), v1, SBYTE4(v1));
  }
  return swift_deallocObject();
}

uint64_t getEnumTagSinglePayload for DetermineMessageBatches.CommandID(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DetermineMessageBatches.CommandID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A55C5DE0 + 4 * byte_1A59A8FEB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A55C5E14 + 4 * byte_1A59A8FE6[v4]))();
}

uint64_t sub_1A55C5E14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55C5E1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A55C5E24);
  return result;
}

uint64_t sub_1A55C5E30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A55C5E38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A55C5E3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55C5E44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DetermineMessageBatches.CommandID()
{
  return &type metadata for DetermineMessageBatches.CommandID;
}

uint64_t storeEnumTagSinglePayload for DetermineMessageBatches.ActionID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A55C5EAC + 4 * byte_1A59A8FF5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A55C5EE0 + 4 * byte_1A59A8FF0[v4]))();
}

uint64_t sub_1A55C5EE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55C5EE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A55C5EF0);
  return result;
}

uint64_t sub_1A55C5EFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A55C5F04);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A55C5F08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55C5F10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DetermineMessageBatches.ActionID()
{
  return &type metadata for DetermineMessageBatches.ActionID;
}

uint64_t destroy for DetermineMessageBatches.TaskState(uint64_t a1)
{
  return sub_1A550F0B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32), *(_BYTE *)(a1 + 29));
}

uint64_t initializeWithCopy for DetermineMessageBatches.TaskState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 28);
  v7 = *(unsigned int *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 29);
  sub_1A55C1A10(*(_QWORD *)a2, v4, v5, v7 | (v6 << 32), v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 28) = v6;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 29) = v8;
  return a1;
}

uint64_t assignWithCopy for DetermineMessageBatches.TaskState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 28);
  v7 = *(unsigned int *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 29);
  sub_1A55C1A10(*(_QWORD *)a2, v4, v5, v7 | (v6 << 32), v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 28) = v6;
  v13 = *(_BYTE *)(a1 + 29);
  *(_BYTE *)(a1 + 29) = v8;
  sub_1A550F0B4(v9, v10, v11, v12, v13);
  return a1;
}

__n128 __swift_memcpy30_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 14) = *(_OWORD *)(a2 + 14);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DetermineMessageBatches.TaskState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_WORD *)(a2 + 28);
  v5 = *(_DWORD *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = v5;
  v10 = *(_BYTE *)(a1 + 29);
  *(_WORD *)(a1 + 28) = v4;
  sub_1A550F0B4(v6, v8, v7, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetermineMessageBatches.TaskState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 30))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 29);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DetermineMessageBatches.TaskState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 30) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 30) = 0;
    if (a2)
      *(_BYTE *)(result + 29) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A55C6168(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 29) <= 1u)
    return *(unsigned __int8 *)(a1 + 29);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A55C6180(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
    *(_QWORD *)(result + 21) = 0;
  }
  *(_BYTE *)(result + 29) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DetermineMessageBatches.TaskState()
{
  return &type metadata for DetermineMessageBatches.TaskState;
}

unint64_t sub_1A55C61B4()
{
  unint64_t result;

  result = qword_1EE7A8C60;
  if (!qword_1EE7A8C60)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9160, &type metadata for DetermineMessageBatches.CommandID.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C60);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DetermineMessageBatches.CommandID.Kind(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A55C6238 + 4 * byte_1A59A8FFA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A55C6258 + 4 * byte_1A59A8FFF[v4]))();
}

_BYTE *sub_1A55C6238(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A55C6258(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A55C6260(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A55C6268(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A55C6270(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A55C6278(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DetermineMessageBatches.CommandID.Kind()
{
  return &type metadata for DetermineMessageBatches.CommandID.Kind;
}

void sub_1A55C6294()
{
  qword_1EE7F96C8 = MEMORY[0x1E0DEE9E8];
}

uint64_t destroy for DetermineNewestMessages(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 116) != 255)
  {
    v3 = *(unsigned int *)(a1 + 112) | ((unint64_t)*(unsigned __int8 *)(a1 + 116) << 32);
    return sub_1A54E3458(*(_QWORD *)(a1 + 104), v3, SBYTE4(v3));
  }
  return result;
}

uint64_t initializeWithCopy for DetermineNewestMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  unsigned __int8 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = a2 + 24;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7(a1 + 24, v4, v6);
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  v9 = (uint64_t *)(a2 + 104);
  v10 = *(_BYTE *)(a2 + 116);
  v11 = *(unsigned int *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v10 == 255)
  {
    *(_QWORD *)(a1 + 104) = *v9;
    *(_QWORD *)(a1 + 109) = *(uint64_t *)((char *)v9 + 5);
  }
  else
  {
    v12 = v11 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v10 << 32);
    v13 = *v9;
    sub_1A54E4334(v13, v12, SBYTE4(v12));
    *(_QWORD *)(a1 + 104) = v13;
    *(_DWORD *)(a1 + 112) = v12;
    *(_BYTE *)(a1 + 116) = BYTE4(v12);
  }
  return a1;
}

uint64_t assignWithCopy for DetermineNewestMessages(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  v4 = (uint64_t *)(a1 + 104);
  v5 = (uint64_t *)(a2 + 104);
  v6 = *(unsigned int *)(a2 + 112) | ((unint64_t)*(unsigned __int8 *)(a2 + 116) << 32);
  if (*(unsigned __int8 *)(a1 + 116) == 255)
  {
    if (BYTE4(v6) == 255)
    {
      v7 = *v5;
      *(_QWORD *)(a1 + 109) = *(uint64_t *)((char *)v5 + 5);
      *v4 = v7;
    }
    else
    {
      v9 = *v5;
      sub_1A54E4334(*v5, v6, SBYTE4(v6));
      *(_QWORD *)(a1 + 104) = v9;
      *(_DWORD *)(a1 + 112) = v6;
      *(_BYTE *)(a1 + 116) = BYTE4(v6);
    }
  }
  else if (BYTE4(v6) == 255)
  {
    sub_1A55C6578(a1 + 104);
    v8 = *(uint64_t *)((char *)v5 + 5);
    *v4 = *v5;
    *(_QWORD *)(a1 + 109) = v8;
  }
  else
  {
    v10 = *v5;
    sub_1A54E4334(*v5, v6, SBYTE4(v6));
    v11 = *(_QWORD *)(a1 + 104);
    v12 = *(unsigned int *)(a1 + 112);
    *(_QWORD *)(a1 + 104) = v10;
    *(_DWORD *)(a1 + 112) = v6;
    v13 = *(_BYTE *)(a1 + 116);
    *(_BYTE *)(a1 + 116) = BYTE4(v6);
    sub_1A54E3458(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_1A55C6578(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 __swift_memcpy117_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 109) = *(_QWORD *)((char *)a2 + 109);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for DetermineNewestMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  unsigned __int8 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  v5 = (_QWORD *)(a2 + 104);
  v6 = *(_BYTE *)(a1 + 116);
  if (v6 != 255)
  {
    v7 = *(unsigned int *)(a2 + 112) | ((unint64_t)*(unsigned __int8 *)(a2 + 116) << 32);
    if (HIDWORD(v7) <= 0xFE)
    {
      v8 = *(unsigned int *)(a1 + 112);
      v9 = *(_QWORD *)(a1 + 104);
      *(_QWORD *)(a1 + 104) = *v5;
      *(_DWORD *)(a1 + 112) = v7;
      *(_BYTE *)(a1 + 116) = BYTE4(v7);
      sub_1A54E3458(v9, v8, v6);
      return a1;
    }
    sub_1A55C6578(a1 + 104);
  }
  *(_QWORD *)(a1 + 104) = *v5;
  *(_QWORD *)(a1 + 109) = *(_QWORD *)(a2 + 109);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetermineNewestMessages(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 117))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetermineNewestMessages(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 116) = 0;
    *(_DWORD *)(result + 112) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 117) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 117) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetermineNewestMessages()
{
  return &type metadata for DetermineNewestMessages;
}

uint64_t sub_1A55C67A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;

  v2 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594A764();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, a1, v5, v7);
  sub_1A55034B8(a1, (uint64_t)v4, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v10 = sub_1A594A74C();
  v11 = sub_1A594C030();
  v12 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    v13 = swift_slowAlloc();
    v25 = v12;
    v14 = v13;
    v24 = swift_slowAlloc();
    v29 = v24;
    *(_DWORD *)v14 = 68159235;
    LODWORD(v27) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v14 + 8) = 256;
    v15 = *(int *)(v2 + 20);
    v26 = v5;
    v16 = &v4[v15];
    LOBYTE(v27) = v4[v15];
    sub_1A594C3CC();
    *(_WORD *)(v14 + 11) = 2082;
    v18 = *((_QWORD *)v16 + 1);
    v17 = *((_QWORD *)v16 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v27 = sub_1A55791B0(v18, v17, &v29);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 21) = 1040;
    LODWORD(v27) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v14 + 27) = 512;
    LOWORD(v27) = *((_WORD *)v16 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v14 + 31) = 2160;
    v27 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v14 + 41) = 2085;
    v19 = *((_DWORD *)v16 + 10);
    v27 = *((_QWORD *)v16 + 4);
    v28 = v19;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v20 = sub_1A594B4A8();
    v27 = sub_1A55791B0(v20, v21, &v29);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v4, type metadata accessor for MailboxTaskLogger);
    _os_log_impl(&dword_1A4F90000, v10, (os_log_type_t)v25, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task.", (uint8_t *)v14, 0x33u);
    v22 = v24;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v22, -1, -1);
    MEMORY[0x1A85B1964](v14, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v26);
  }
  else
  {
    sub_1A55034FC((uint64_t)v4, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
}

uint64_t sub_1A55C6B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  int v53;
  uint64_t v54;
  uint64_t isa_high;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  int v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  os_log_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t result;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  NSObject *v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  unint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  os_log_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  os_log_t v108;
  char *v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  os_log_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;

  v3 = v2;
  v6 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v106 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v106 - v13;
  v15 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v106 - v19;
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v106 - v25;
  v27 = *(unsigned __int8 *)(v3 + 116);
  v117 = v3;
  if (v27 > 0xFEuLL)
  {
    v28 = v22;
    v29 = v23;
    (*(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16))(v17, a2, v22, v24);
    sub_1A55034B8(a2, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v30 = sub_1A594A74C();
    v31 = sub_1A594C018();
    v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = swift_slowAlloc();
      v115 = v29;
      v34 = v33;
      v114 = swift_slowAlloc();
      v121 = v114;
      *(_DWORD *)v34 = 68159235;
      LODWORD(v119) = 2;
      LODWORD(v113) = v32;
      sub_1A594C3CC();
      *(_WORD *)(v34 + 8) = 256;
      v35 = *(int *)(v6 + 20);
      v118 = v28;
      v36 = a1;
      v37 = &v8[v35];
      LOBYTE(v119) = v8[v35];
      sub_1A594C3CC();
      *(_WORD *)(v34 + 11) = 2082;
      v116 = v36;
      v39 = *((_QWORD *)v37 + 1);
      v38 = *((_QWORD *)v37 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v119 = sub_1A55791B0(v39, v38, &v121);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 21) = 1040;
      LODWORD(v119) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v34 + 27) = 512;
      LOWORD(v119) = *((_WORD *)v37 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v34 + 31) = 2160;
      v119 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v34 + 41) = 2085;
      v40 = *((_DWORD *)v37 + 10);
      v119 = *((_QWORD *)v37 + 4);
      v120 = v40;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v41 = sub_1A594B4A8();
      v119 = sub_1A55791B0(v41, v42, &v121);
      a1 = v116;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v30, (os_log_type_t)v113, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Did not get any UIDs", (uint8_t *)v34, 0x33u);
      v43 = v114;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v43, -1, -1);
      MEMORY[0x1A85B1964](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v115 + 8))(v17, v118);
    }
    else
    {
      sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v28);
    }
    v67 = sub_1A54E3414();
    v44 = MessageIdentifierSet.init()(&type metadata for UID, v67);
    v66 = HIDWORD(v68);
    v45 = v68;
    if ((*(_BYTE *)(a1 + 168) & 1) != 0)
      goto LABEL_10;
    return sub_1A54E3458(v44, v45, v66);
  }
  v113 = (os_log_t)v6;
  v116 = a1;
  v118 = v22;
  v44 = *(_QWORD *)(v3 + 104);
  v45 = *(unsigned int *)(v3 + 112) | ((unint64_t)v27 << 32);
  v46 = v23;
  sub_1A54E4334(v44, v45, SBYTE4(v45));
  v114 = HIDWORD(v45);
  sub_1A54E4334(v44, v45, SBYTE4(v45));
  v112 = sub_1A54E3414();
  v47 = MessageIdentifierSetNonEmpty.init(set:)(v44, v45);
  v115 = v46;
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
  if (BYTE4(v48) == 255)
  {
    v50 = v118;
    v49(v20, a2, v118);
    sub_1A55034B8(a2, (uint64_t)v11, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v51 = sub_1A594A74C();
    v52 = sub_1A594C030();
    v53 = v52;
    if (os_log_type_enabled(v51, v52))
    {
      v54 = swift_slowAlloc();
      v112 = swift_slowAlloc();
      v121 = v112;
      *(_DWORD *)v54 = 68159235;
      LODWORD(v119) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v54 + 8) = 256;
      isa_high = SHIDWORD(v113[2].isa);
      v113 = v51;
      v56 = &v11[isa_high];
      LOBYTE(v119) = v11[isa_high];
      sub_1A594C3CC();
      *(_WORD *)(v54 + 11) = 2082;
      LODWORD(v111) = v53;
      v57 = *((_QWORD *)v56 + 1);
      v58 = *((_QWORD *)v56 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v119 = sub_1A55791B0(v57, v58, &v121);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 21) = 1040;
      LODWORD(v119) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v54 + 27) = 512;
      LOWORD(v119) = *((_WORD *)v56 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v54 + 31) = 2160;
      v119 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v54 + 41) = 2085;
      v59 = *((_DWORD *)v56 + 10);
      v119 = *((_QWORD *)v56 + 4);
      v120 = v59;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v60 = sub_1A594B4A8();
      v119 = sub_1A55791B0(v60, v61, &v121);
      v62 = v116;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
      v63 = v113;
      _os_log_impl(&dword_1A4F90000, v113, (os_log_type_t)v111, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence returned empty list as newest UIDs.", (uint8_t *)v54, 0x33u);
      v64 = v112;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v64, -1, -1);
      v65 = v54;
      a1 = v62;
      MEMORY[0x1A85B1964](v65, -1, -1);

      (*(void (**)(char *, uint64_t))(v115 + 8))(v20, v118);
      LOBYTE(v66) = v114;
      if ((*(_BYTE *)(v62 + 168) & 1) != 0)
        goto LABEL_10;
      return sub_1A54E3458(v44, v45, v66);
    }
    sub_1A55034FC((uint64_t)v11, type metadata accessor for MailboxTaskLogger);

    (*(void (**)(char *, uint64_t))(v115 + 8))(v20, v50);
    goto LABEL_18;
  }
  v77 = v47;
  v78 = v48;
  v79 = v26;
  v80 = v118;
  v49(v26, a2, v118);
  sub_1A55034B8(a2, (uint64_t)v14, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A5503BA0(v44, v45);
  sub_1A5503BA0(v44, v45);
  sub_1A5503BA0(v77, v78);
  v81 = sub_1A594A74C();
  v82 = sub_1A594C030();
  v66 = v78;
  v83 = v77;
  if (os_log_type_enabled(v81, (os_log_type_t)v82))
  {
    v110 = v82;
    v108 = v81;
    v109 = v79;
    v84 = swift_slowAlloc();
    v107 = swift_slowAlloc();
    v121 = v107;
    *(_DWORD *)v84 = 68159747;
    LODWORD(v119) = 2;
    v111 = v66;
    sub_1A594C3CC();
    *(_WORD *)(v84 + 8) = 256;
    v85 = &v14[SHIDWORD(v113[2].isa)];
    LOBYTE(v119) = *v85;
    sub_1A594C3CC();
    *(_WORD *)(v84 + 11) = 2082;
    v87 = *((_QWORD *)v85 + 1);
    v86 = *((_QWORD *)v85 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v119 = sub_1A55791B0(v87, v86, &v121);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v84 + 21) = 1040;
    LODWORD(v119) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v84 + 27) = 512;
    LOWORD(v119) = *((_WORD *)v85 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v84 + 31) = 2160;
    v119 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v84 + 41) = 2085;
    v88 = *((_DWORD *)v85 + 10);
    v119 = *((_QWORD *)v85 + 4);
    v120 = v88;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v89 = sub_1A594B4A8();
    v119 = sub_1A55791B0(v89, v90, &v121);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v14, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v84 + 51) = 2048;
    v91 = MessageIdentifierSet.count.getter(v44, v45);
    sub_1A5503B8C(v44, v45);
    v119 = v91;
    sub_1A594C3CC();
    sub_1A5503B8C(v44, v45);
    *(_WORD *)(v84 + 61) = 2082;
    v92 = v111 & 0xFFFFFFFFFFLL;
    MessageIdentifierSet.ranges.getter(v83, v111 & 0xFFFFFFFFFFLL);
    v94 = v93;
    v96 = v95;
    v113 = (os_log_t)HIDWORD(v95);
    v97 = v95 & 0xFFFFFFFFFFLL;
    v98 = MessageIdentifierSet.RangeView.endIndex.getter(v93, v95 & 0xFFFFFFFFFFLL);
    LOBYTE(v66) = v114;
    if (v98)
    {
      MessageIdentifierSet.RangeView.subscript.getter(0, v94, v97);
      sub_1A54E3458(v94, v96, (char)v113);
      v99 = v119;
      v100 = sub_1A5531838(v83, v92);
      if ((v100 & 0x100000000) != 0)
      {
LABEL_24:
        result = sub_1A5503B8C(v83, v111);
        __break(1u);
        return result;
      }
      v94 = v110;
      if (v99 <= v100)
      {
        v119 = __PAIR64__(v100, v99);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
        MessageIdentifierRange.debugDescription.getter();
        v119 = sub_1A55791B0(v101, v102, &v121);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        v103 = v111;
        sub_1A5503B8C(v83, v111);
        sub_1A5503B8C(v83, v103);
        v104 = v108;
        _os_log_impl(&dword_1A4F90000, v108, (os_log_type_t)v94, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence returned %ld UIDs in range %{public}s as newest UIDs.", (uint8_t *)v84, 0x47u);
        v105 = v107;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v105, -1, -1);
        MEMORY[0x1A85B1964](v84, -1, -1);

        (*(void (**)(char *, uint64_t))(v115 + 8))(v109, v118);
        goto LABEL_19;
      }
      __break(1u);
    }
    sub_1A54E3458(v94, v96, (char)v113);
    sub_1A5503B8C(v83, v111);
    __break(1u);
    goto LABEL_24;
  }
  sub_1A5503B8C(v44, v45);
  sub_1A55034FC((uint64_t)v14, type metadata accessor for MailboxTaskLogger);
  sub_1A5503B8C(v44, v45);
  sub_1A5503B8C(v77, v66);
  sub_1A5503B8C(v77, v66);

  (*(void (**)(char *, uint64_t))(v115 + 8))(v79, v80);
LABEL_18:
  LOBYTE(v66) = v114;
LABEL_19:
  a1 = v116;
  if ((*(_BYTE *)(v116 + 168) & 1) != 0)
  {
LABEL_10:
    v69 = a1;
    v71 = *(_QWORD *)(a1 + 152);
    v70 = *(_QWORD *)(a1 + 160);
    v72 = *(_QWORD *)(a1 + 144);
    v73 = *(_DWORD *)(v117 + 96);
    v74 = *(_QWORD *)(v117 + 88);
    v119 = v72;
    sub_1A54E4334(v44, v45, v66);
    sub_1A55212D0(v72, v71, v70, 1);
    sub_1A551C004(&v119, v74, v73, 0, v44, v45 | ((unint64_t)v66 << 32));
    sub_1A54E8FCC(v72, v71, v70, 1);
    result = sub_1A54E3458(v44, v45, v66);
    v76 = v119;
    *(_QWORD *)(v69 + 152) = 0;
    *(_QWORD *)(v69 + 160) = 0;
    *(_QWORD *)(v69 + 144) = v76;
    *(_BYTE *)(v69 + 168) = 1;
    return result;
  }
  return sub_1A54E3458(v44, v45, v66);
}

uint64_t sub_1A55C7854@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  int v5;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_WORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 88);
  v5 = *(_DWORD *)(v1 + 96);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A55C7894(uint64_t a1)
{
  return sub_1A55C67A4(a1);
}

uint64_t sub_1A55C78A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

unint64_t sub_1A55C78E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, unint64_t *a3@<X8>)
{
  unint64_t result;

  result = sub_1A55C7A04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A55C791C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A55C7C30(a1, a2, a3, a5);
}

unint64_t sub_1A55C792C()
{
  return 0xD000000000000017;
}

unint64_t sub_1A55C794C()
{
  unint64_t result;

  result = qword_1EE797AF8;
  if (!qword_1EE797AF8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A923C, &type metadata for DetermineNewestMessages.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE797AF8);
  }
  return result;
}

uint64_t sub_1A55C7990()
{
  return MEMORY[0x1E0DEDD00];
}

unint64_t sub_1A55C799C(uint64_t a1)
{
  unint64_t result;

  result = sub_1A55C79C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A55C79C0()
{
  unint64_t result;

  result = qword_1EE797B00;
  if (!qword_1EE797B00)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A91F8, &type metadata for DetermineNewestMessages);
    atomic_store(result, (unint64_t *)&qword_1EE797B00);
  }
  return result;
}

unint64_t sub_1A55C7A04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = type metadata accessor for TaskHistory.Previous(0);
  v30 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - v9;
  v11 = sub_1A55B0504(a2);
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    v21 = swift_allocObject();
    v22 = *(_QWORD *)(v2 + 72);
    *(_QWORD *)(v21 + 16) = *(_QWORD *)(v2 + 64);
    *(_QWORD *)(v21 + 24) = v22;
    *(_QWORD *)(v21 + 32) = 521;
    v20 = v21 | 0x4000000000000002;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return v20;
  }
  v25 = v2;
  v26 = v11;
  v13 = 0;
  v28 = v11 + 32;
  v31 = *(_QWORD *)(a1 + 16);
  v29 = a1;
  v27 = v12;
  while (!v31)
  {
LABEL_4:
    if (++v13 == v12)
    {
      swift_bridgeObjectRelease();
      v2 = v25;
      goto LABEL_13;
    }
  }
  v14 = *(_DWORD *)(v28 + 4 * v13);
  v15 = v30;
  v16 = a1 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  swift_bridgeObjectRetain_n();
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v31;
  while (1)
  {
    sub_1A55034B8(v16, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v10, (uint64_t)v7, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
LABEL_8:
    sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    v16 += v17;
    if (!--v18)
    {
      a1 = v29;
      swift_bridgeObjectRelease_n();
      v12 = v27;
      goto LABEL_4;
    }
  }
  v19 = *((_DWORD *)v7 + 2);
  swift_release();
  if (v19 != v14)
    goto LABEL_8;
  sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return 0xF000000000000007;
}

uint64_t sub_1A55C7C30(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;

  v8 = sub_1A55B0504(a4);
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
    return swift_bridgeObjectRelease();
  v10 = 0;
  while ((sub_1A55F3D24(*(_DWORD *)(v8 + 4 * v10 + 32), a2, a3) & 1) == 0)
  {
    if (v9 == ++v10)
      return swift_bridgeObjectRelease();
  }
  result = swift_bridgeObjectRelease();
  if (((a1 >> 59) & 0x1E | (a1 >> 2) & 1) == 9)
  {
    v12 = a1 & 0xFFFFFFFFFFFFFFBLL;
    if (*(_QWORD *)(v4 + 72) == *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18))
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      v14 = *(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      v15 = *(_BYTE *)(v12 + 44);
      v16 = *(_QWORD *)(v12 + 48);
      result = sub_1A54FF30C(*(_QWORD *)(v4 + 64), *(_QWORD *)(v12 + 16));
      if ((result & 1) != 0 && v16 == 521)
      {
        v18 = *(_DWORD *)(v4 + 112);
        v17 = v4 + 112;
        v19 = *(_QWORD *)(v17 - 8);
        v20 = v18 | ((unint64_t)*(unsigned __int8 *)(v17 + 4) << 32);
        sub_1A54E4334(v13, v14, v15);
        result = sub_1A5503B8C(v19, v20);
        *(_QWORD *)(v17 - 8) = v13;
        *(_BYTE *)(v17 + 4) = v15;
        *(_DWORD *)v17 = v14;
      }
    }
  }
  return result;
}

uint64_t sub_1A55C7D68()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for DetermineNewestMessages.ActionID(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A55C7DCC + 4 * byte_1A59A91D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A55C7DEC + 4 * byte_1A59A91D5[v4]))();
}

_BYTE *sub_1A55C7DCC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A55C7DEC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A55C7DF4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A55C7DFC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A55C7E04(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A55C7E0C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DetermineNewestMessages.ActionID()
{
  return &type metadata for DetermineNewestMessages.ActionID;
}

unint64_t sub_1A55C7E2C()
{
  unint64_t result;

  result = qword_1EE7A8C68;
  if (!qword_1EE7A8C68)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A92E4, &type metadata for DownloadTask.CommandID.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C68);
  }
  return result;
}

void sub_1A55C7E70(uint64_t *a1)
{
  sub_1A55C9FC4(*a1, a1[1]);
}

uint64_t sub_1A55C7E8C(unsigned int *a1)
{
  return sub_1A55C9F44(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32));
}

uint64_t sub_1A55C7EA8()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E67928);
  qword_1EE7F9670 = result;
  return result;
}

uint64_t sub_1A55C7ECC()
{
  uint64_t v0;
  __int128 v2;

  BYTE8(v2) = 0;
  *(_QWORD *)&v2 = *(unsigned __int8 *)(v0 + 9);
  sub_1A594C924();
  sub_1A594B5F8();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  return *(_QWORD *)((char *)&v2 + 1);
}

uint64_t sub_1A55C7F8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  void (*v26)(_QWORD, _QWORD, _QWORD);
  uint64_t v27;
  NSObject *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  os_log_t v49;
  NSObject *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  os_log_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  os_log_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t result;
  uint64_t v90;
  __int128 v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t isa;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  os_log_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  void (*v145)(_QWORD, _QWORD, _QWORD);
  char *v146;
  os_log_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  unsigned int v158;
  char v159;
  _BYTE v160[9];
  char v161;
  uint64_t v162[14];
  char v163;
  uint64_t v164;
  int v165;

  v2 = v1;
  v151 = a1;
  v138 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v138);
  v143 = (uint64_t)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v126 - v5;
  MEMORY[0x1E0C80A78](v7);
  v150 = (char *)&v126 - v8;
  MEMORY[0x1E0C80A78](v9);
  v149 = (uint64_t)&v126 - v10;
  v11 = sub_1A594A764();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v142 = (char *)&v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v126 - v15;
  MEMORY[0x1E0C80A78](v17);
  v147 = (os_log_t)((char *)&v126 - v18);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v126 - v20;
  v22 = *(_QWORD *)(v1 + 184);
  v23 = *(unsigned int *)(v1 + 192);
  v24 = *(unsigned __int8 *)(v2 + 196);
  v148 = sub_1A54E3414();
  v25 = MessageIdentifierSet.isEmpty.getter(v22, v23 | (v24 << 32));
  v139 = v12;
  v26 = *(void (**)(_QWORD, _QWORD, _QWORD))(v12 + 16);
  v27 = v151;
  v145 = v26;
  v146 = v6;
  v144 = v16;
  v134 = v11;
  if (v25)
  {
    v26(v21, v151, v11);
    sub_1A55BAEB8(v27, v149);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A550F620(v2, (uint64_t)&v164);
    sub_1A550F620(v2, (uint64_t)v162);
    sub_1A550F620(v2, (uint64_t)v160);
    v28 = sub_1A594A74C();
    v29 = sub_1A594C030();
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      LODWORD(v140) = v29;
      v147 = v28;
      v150 = v21;
      v141 = (char *)v2;
      v30 = swift_slowAlloc();
      v137 = swift_slowAlloc();
      v152 = v137;
      *(_DWORD *)v30 = 68160003;
      LODWORD(v155) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v30 + 8) = 256;
      v31 = v149;
      v32 = v149 + *(int *)(v138 + 20);
      LOBYTE(v155) = *(_BYTE *)v32;
      sub_1A594C3CC();
      *(_WORD *)(v30 + 11) = 2082;
      v33 = *(_QWORD *)(v32 + 8);
      v34 = *(_QWORD *)(v32 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v155 = sub_1A55791B0(v33, v34, &v152);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 21) = 1040;
      LODWORD(v155) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v30 + 27) = 512;
      LOWORD(v155) = *(_WORD *)(v32 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v30 + 31) = 2160;
      v155 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v30 + 41) = 2085;
      v35 = *(_DWORD *)(v32 + 40);
      v155 = *(_QWORD *)(v32 + 32);
      v156 = v35;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v36 = sub_1A594B4A8();
      v155 = sub_1A55791B0(v36, v37, &v152);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55BAEFC(v31);
      *(_WORD *)(v30 + 51) = 2082;
      v38 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v39 = sub_1A55FDDC0(v38);
      v41 = v40;
      v42 = HIDWORD(v40);
      MessageIdentifierSet.debugDescription.getter();
      v44 = v43;
      v46 = v45;
      sub_1A54E3458(v39, v41, v42);
      v155 = sub_1A55791B0(v44, v46, &v152);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A550F6F8((uint64_t)&v164);
      *(_WORD *)(v30 + 61) = 2080;
      if (v163)
      {
        v47 = 0xE100000000000000;
        if (v163 == 1)
          v48 = 65;
        else
          v48 = 66;
      }
      else
      {
        v48 = 1919251285;
        v47 = 0xE400000000000000;
      }
      v6 = v146;
      v11 = v134;
      v16 = v144;
      v71 = MEMORY[0x1E0DEE9B8];
      v51 = v141;
      v155 = sub_1A55791B0(v48, v47, &v152);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A550F6F8((uint64_t)v162);
      *(_WORD *)(v30 + 71) = 2082;
      if (v161)
        v72 = 6581810;
      else
        v72 = 7631665;
      v155 = sub_1A55791B0(v72, 0xE300000000000000, &v152);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A550F6F8((uint64_t)v160);
      v73 = v147;
      _os_log_impl(&dword_1A4F90000, v147, (os_log_type_t)v140, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task for %{public}s %s '%{public}s'", (uint8_t *)v30, 0x51u);
      v74 = v137;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v74, -1, -1);
      MEMORY[0x1A85B1964](v30, -1, -1);

      v149 = *(_QWORD *)(v139 + 8);
      ((void (*)(char *, uint64_t))v149)(v150, v11);
      v26 = v145;
    }
    else
    {
      sub_1A55BAEFC(v149);
      sub_1A550F6F8((uint64_t)&v164);
      sub_1A550F6F8((uint64_t)v162);
      sub_1A550F6F8((uint64_t)v160);

      v149 = *(_QWORD *)(v139 + 8);
      ((void (*)(char *, uint64_t))v149)(v21, v11);
      v71 = MEMORY[0x1E0DEE9B8];
      v51 = (char *)v2;
    }
  }
  else
  {
    v49 = v147;
    v26(v147, v151, v11);
    sub_1A55BAEB8(v27, (uint64_t)v150);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A550F620(v2, (uint64_t)&v164);
    sub_1A550F620(v2, (uint64_t)v162);
    sub_1A550F620(v2, (uint64_t)v160);
    sub_1A550F620(v2, (uint64_t)&v155);
    v50 = sub_1A594A74C();
    LODWORD(v149) = sub_1A594C030();
    v51 = (char *)v2;
    if (os_log_type_enabled(v50, (os_log_type_t)v149))
    {
      v140 = v50;
      v141 = (char *)v2;
      v52 = swift_slowAlloc();
      v137 = swift_slowAlloc();
      v154 = v137;
      *(_DWORD *)v52 = 68160259;
      LODWORD(v152) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v52 + 8) = 256;
      v53 = (uint64_t)v150;
      v54 = &v150[*(int *)(v138 + 20)];
      LOBYTE(v152) = *v54;
      sub_1A594C3CC();
      *(_WORD *)(v52 + 11) = 2082;
      v56 = *((_QWORD *)v54 + 1);
      v55 = *((_QWORD *)v54 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v152 = sub_1A55791B0(v56, v55, &v154);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 21) = 1040;
      LODWORD(v152) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v52 + 27) = 512;
      LOWORD(v152) = *((_WORD *)v54 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v52 + 31) = 2160;
      v152 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v52 + 41) = 2085;
      v57 = *((_DWORD *)v54 + 10);
      v152 = *((_QWORD *)v54 + 4);
      v153 = v57;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v58 = sub_1A594B4A8();
      v152 = sub_1A55791B0(v58, v59, &v154);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55BAEFC(v53);
      *(_WORD *)(v52 + 51) = 2082;
      v60 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v61 = sub_1A55FDDC0(v60);
      v63 = v62;
      v64 = HIDWORD(v62);
      MessageIdentifierSet.debugDescription.getter();
      v66 = v65;
      v68 = v67;
      sub_1A54E3458(v61, v63, v64);
      v152 = sub_1A55791B0(v66, v68, &v154);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A550F6F8((uint64_t)&v164);
      *(_WORD *)(v52 + 61) = 2080;
      if (v163)
      {
        v69 = 0xE100000000000000;
        if (v163 == 1)
          v70 = 65;
        else
          v70 = 66;
      }
      else
      {
        v70 = 1919251285;
        v69 = 0xE400000000000000;
      }
      v6 = v146;
      v11 = v134;
      v16 = v144;
      v152 = sub_1A55791B0(v70, v69, &v154);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A550F6F8((uint64_t)v162);
      *(_WORD *)(v52 + 71) = 2082;
      if (v161)
        v75 = 6581810;
      else
        v75 = 7631665;
      v152 = sub_1A55791B0(v75, 0xE300000000000000, &v154);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A550F6F8((uint64_t)v160);
      *(_WORD *)(v52 + 81) = 2082;
      v150 = (char *)(v52 + 83);
      v76 = v157;
      v77 = v158;
      v78 = v159;
      sub_1A54E4334(v157, v158, v159);
      MessageIdentifierSet.debugDescription.getter();
      v148 = v79;
      v81 = v80;
      sub_1A54E3458(v76, v77, v78);
      v152 = sub_1A55791B0(v148, v81, &v154);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A550F6F8((uint64_t)&v155);
      v82 = v140;
      _os_log_impl(&dword_1A4F90000, v140, (os_log_type_t)v149, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task for %{public}s %s '%{public}s' -- full message download for %{public}s", (uint8_t *)v52, 0x5Bu);
      v71 = MEMORY[0x1E0DEE9B8];
      v83 = v137;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v83, -1, -1);
      MEMORY[0x1A85B1964](v52, -1, -1);

      v149 = *(_QWORD *)(v139 + 8);
      ((void (*)(os_log_t, uint64_t))v149)(v147, v11);
      v26 = v145;
      v51 = v141;
    }
    else
    {
      sub_1A55BAEFC((uint64_t)v150);
      sub_1A550F6F8((uint64_t)&v164);
      sub_1A550F6F8((uint64_t)v162);
      sub_1A550F6F8((uint64_t)v160);
      sub_1A550F6F8((uint64_t)&v155);

      v149 = *(_QWORD *)(v139 + 8);
      ((void (*)(os_log_t, uint64_t))v149)(v49, v11);
      v71 = MEMORY[0x1E0DEE9B8];
    }
  }
  v84 = *((_QWORD *)v51 + 13);
  v85 = *(_QWORD *)(v84 + 64);
  v147 = (os_log_t)(v84 + 64);
  v86 = 1 << *(_BYTE *)(v84 + 32);
  v87 = -1;
  if (v86 < 64)
    v87 = ~(-1 << v86);
  v88 = v87 & v85;
  v148 = (unint64_t)(v86 + 63) >> 6;
  v140 = (os_log_t)&v165;
  v141 = (char *)&v164 + 4;
  v135 = (char *)&v164 + 2;
  v136 = (char *)&v164 + 1;
  v150 = (char *)v84;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v90 = 0;
  *(_QWORD *)&v91 = 68159491;
  v132 = v91;
  v131 = v71 + 8;
  *(_QWORD *)&v91 = 68159747;
  v130 = v91;
  while (v88)
  {
    v92 = __clz(__rbit64(v88));
    v88 &= v88 - 1;
    v93 = v92 | (v90 << 6);
LABEL_43:
    v97 = *(_DWORD *)(*((_QWORD *)v150 + 6) + 4 * v93);
    v98 = *((_QWORD *)v150 + 7) + 16 * v93;
    if ((*(_BYTE *)(v98 + 8) & 1) != 0)
    {
      v99 = v151;
      v26(v16, v151, v11);
      sub_1A55BAEB8(v99, (uint64_t)v6);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v100 = sub_1A594A74C();
      v101 = sub_1A594C00C();
      if (os_log_type_enabled(v100, v101))
      {
        v108 = swift_slowAlloc();
        v149 = swift_slowAlloc();
        v162[0] = v149;
        *(_DWORD *)v108 = v132;
        LODWORD(v164) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v108 + 8) = 256;
        v109 = &v146[*(int *)(v138 + 20)];
        LOBYTE(v164) = *v109;
        sub_1A594C3CC();
        *(_WORD *)(v108 + 11) = 2082;
        v137 = v108 + 13;
        v110 = *((_QWORD *)v109 + 1);
        v111 = *((_QWORD *)v109 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v164 = sub_1A55791B0(v110, v111, v162);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v108 + 21) = 1040;
        LODWORD(v164) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v108 + 27) = 512;
        LOWORD(v164) = *((_WORD *)v109 + 12);
        sub_1A594C3CC();
        *(_WORD *)(v108 + 31) = 2160;
        v164 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v108 + 41) = 2085;
        v137 = v108 + 43;
        v112 = *((_QWORD *)v109 + 4);
        v113 = *((_DWORD *)v109 + 10);
        v6 = v146;
        v164 = v112;
        v165 = v113;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v114 = sub_1A594B4A8();
        v164 = sub_1A55791B0(v114, v115, v162);
        sub_1A594C3CC();
        v11 = v134;
        v16 = v144;
        swift_bridgeObjectRelease();
        sub_1A55BAEFC((uint64_t)v6);
        *(_WORD *)(v108 + 51) = 1024;
        LODWORD(v164) = v97;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v100, v101, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u, unknown size", (uint8_t *)v108, 0x39u);
        v116 = v149;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v116, -1, -1);
        v117 = v108;
        v26 = v145;
        MEMORY[0x1A85B1964](v117, -1, -1);

        v149 = *(_QWORD *)(v139 + 8);
      }
      else
      {
        sub_1A55BAEFC((uint64_t)v6);

      }
      result = ((uint64_t (*)(char *, uint64_t))v149)(v16, v11);
    }
    else
    {
      v102 = *(_QWORD *)v98;
      v103 = v142;
      v104 = v151;
      v26(v142, v151, v11);
      v105 = v143;
      sub_1A55BAEB8(v104, v143);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v106 = sub_1A594A74C();
      v107 = sub_1A594C00C();
      if (os_log_type_enabled(v106, v107))
      {
        v149 = swift_slowAlloc();
        v129 = swift_slowAlloc();
        v162[0] = v129;
        *(_DWORD *)v149 = v130;
        LODWORD(v164) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v149 + 8) = 256;
        v137 = v105 + *(int *)(v138 + 20);
        LOBYTE(v164) = *(_BYTE *)v137;
        sub_1A594C3CC();
        v118 = v149;
        *(_WORD *)(v149 + 11) = 2082;
        v119 = *(_QWORD *)(v137 + 16);
        v127 = *(_QWORD *)(v137 + 8);
        v128 = v118 + 13;
        v133 = v119;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v164 = sub_1A55791B0(v127, v133, v162);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v149 + 21) = 1040;
        LODWORD(v164) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v149 + 27) = 512;
        LOWORD(v164) = *(_WORD *)(v137 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v149 + 31) = 2160;
        v164 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        v120 = v149;
        *(_WORD *)(v149 + 41) = 2085;
        v133 = v120 + 43;
        v121 = *(_DWORD *)(v137 + 40);
        v164 = *(_QWORD *)(v137 + 32);
        v165 = v121;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v122 = sub_1A594B4A8();
        v137 = v123;
        v164 = sub_1A55791B0(v122, v123, v162);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55BAEFC(v105);
        v124 = v149;
        *(_WORD *)(v149 + 51) = 1024;
        LODWORD(v164) = v97;
        sub_1A594C3CC();
        *(_WORD *)(v124 + 57) = 2048;
        v164 = v102;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v106, v107, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u, size %{iec-bytes}ld", (uint8_t *)v124, 0x43u);
        v125 = v129;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v125, -1, -1);
        MEMORY[0x1A85B1964](v124, -1, -1);

        v149 = *(_QWORD *)(v139 + 8);
      }
      else
      {
        sub_1A55BAEFC(v105);

      }
      result = ((uint64_t (*)(char *, uint64_t))v149)(v103, v11);
      v26 = v145;
      v6 = v146;
      v16 = v144;
    }
  }
  v94 = v90 + 1;
  if (__OFADD__(v90, 1))
  {
    __break(1u);
    goto LABEL_54;
  }
  if (v94 >= v148)
    return swift_release();
  isa = (unint64_t)v147[v94].isa;
  ++v90;
  if (isa)
    goto LABEL_42;
  v90 = v94 + 1;
  if (v94 + 1 >= v148)
    return swift_release();
  isa = (unint64_t)v147[v90].isa;
  if (isa)
    goto LABEL_42;
  v90 = v94 + 2;
  if (v94 + 2 >= v148)
    return swift_release();
  isa = (unint64_t)v147[v90].isa;
  if (isa)
  {
LABEL_42:
    v88 = (isa - 1) & isa;
    v93 = __clz(__rbit64(isa)) + (v90 << 6);
    goto LABEL_43;
  }
  v96 = v94 + 3;
  if (v96 >= v148)
    return swift_release();
  isa = (unint64_t)v147[v96].isa;
  if (isa)
  {
    v90 = v96;
    goto LABEL_42;
  }
  while (1)
  {
    v90 = v96 + 1;
    if (__OFADD__(v96, 1))
      break;
    if (v90 >= v148)
      return swift_release();
    isa = (unint64_t)v147[v90].isa;
    ++v96;
    if (isa)
      goto LABEL_42;
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_1A55C9258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  uint64_t *v31;
  __int128 v32;
  uint64_t *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  __int128 v39;
  __int128 v40;
  _OWORD v41[5];
  char v42;

  v38 = a6;
  v12 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797278);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v35 - v19;
  v21 = *(_OWORD *)(v6 + 80);
  v41[2] = *(_OWORD *)(v6 + 64);
  v41[3] = v21;
  v41[4] = *(_OWORD *)(v6 + 96);
  v42 = *(_BYTE *)(v6 + 112);
  v22 = *(unsigned int *)(v6 + 192) | ((unint64_t)*(unsigned __int8 *)(v6 + 196) << 32);
  v23 = *(_QWORD *)(v6 + 184);
  v36 = a1;
  v37 = a2;
  v24 = a2;
  v25 = a3;
  v26 = a4;
  sub_1A55CB3B4(v24, a3, v23, v22, (uint64_t *)((char *)&v35 - v19));
  sub_1A55BAEB8(a5, (uint64_t)v14);
  v27 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797270);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v29(v20, 1, v27) == 1)
  {
    sub_1A55CDB48(v37, v25, (uint64_t)v14, (uint64_t)v17);
    v30 = v29(v17, 1, v27);
    v31 = v38;
    if (v30 == 1)
    {
      v32 = *(_OWORD *)(v6 + 136);
      v39 = *(_OWORD *)(v6 + 120);
      v40 = v32;
      v41[0] = *(_OWORD *)(v6 + 152);
      *(_OWORD *)((char *)v41 + 13) = *(_OWORD *)(v6 + 165);
      sub_1A55CEA58(v36, v37, v25, v26, v38);
      sub_1A55BAEFC((uint64_t)v14);
      sub_1A55CB260((uint64_t)v17);
    }
    else
    {
      sub_1A55BAEFC((uint64_t)v14);
      sub_1A55CB2A0((uint64_t)v17, (uint64_t)v31);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v27);
    }
    return sub_1A55CB260((uint64_t)v20);
  }
  else
  {
    sub_1A55BAEFC((uint64_t)v14);
    v33 = v38;
    sub_1A55CB2A0((uint64_t)v20, (uint64_t)v38);
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v33, 0, 1, v27);
  }
}

void sub_1A55C94AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];
  uint64_t v31;
  _QWORD *v32;
  int v33;
  _QWORD v34[4];
  uint64_t v35;
  char v36;

  v3 = v2;
  v31 = a2;
  v36 = 0;
  v5 = *(_QWORD *)(v2 + 88);
  v6 = *(_DWORD *)(v2 + 96);
  v34[3] = &v36;
  v7 = *(_QWORD *)(a1 + 144);
  v9 = (_QWORD *)(a1 + 152);
  v8 = *(_QWORD *)(a1 + 152);
  v10 = *(_QWORD *)(a1 + 160);
  v33 = *(unsigned __int8 *)(a1 + 168);
  if (v33 == 1)
  {
    v35 = v7;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55212D0(v7, v8, v10, 1);
    sub_1A551AC88((uint64_t)&v35, v5, v6, 0, sub_1A55CAE64, v34);
    sub_1A54E8FCC(v7, v8, v10, 1);
    swift_bridgeObjectRelease();
    v8 = 0;
    v10 = 0;
    v7 = v35;
    *(_QWORD *)(a1 + 144) = v35;
    *v9 = 0;
    v9[1] = 0;
    *(_BYTE *)(a1 + 168) = 1;
  }
  v32 = v9;
  if (!*(_BYTE *)(v2 + 112))
  {
    v11 = *(_QWORD *)(v2 + 168);
    v12 = *(unsigned int *)(v2 + 176);
    v13 = *(unsigned __int8 *)(v2 + 180);
    sub_1A54E3414();
    v14 = v12 | (v13 << 32);
    if (!MessageIdentifierSet.isEmpty.getter(v11, v14))
    {
      v15 = *(_QWORD *)(v2 + 72);
      v16 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5518534(v16, v15, v11, v14, v31);
      swift_bridgeObjectRelease();
    }
  }
  v17 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18 = sub_1A55FDDC0(v17);
  v20 = v18;
  v21 = v19;
  v22 = HIDWORD(v19);
  v23 = *(_QWORD *)(v2 + 88);
  v24 = *(_DWORD *)(v3 + 96);
  LODWORD(v31) = v24;
  if ((v33 & 1) != 0)
  {
    v35 = v7;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55212D0(v7, v8, v10, 1);
    sub_1A55199AC((uint64_t)&v35, v23, v24, v20, v21 & 0xFFFFFFFFFFLL);
    sub_1A54E8FCC(v7, v8, v10, 1);
    sub_1A54E3458(v20, v21, v22);
    v25 = swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 144) = v35;
    v26 = v32;
    *v32 = 0;
    v26[1] = 0;
    *(_BYTE *)(a1 + 168) = 1;
  }
  else
  {
    v25 = sub_1A54E3458(v18, v19, SBYTE4(v19));
    v26 = v32;
  }
  if (v36 == 1)
  {
    MEMORY[0x1E0C80A78](v25);
    v30[2] = v3;
    if (*(_BYTE *)(a1 + 168) == 1)
    {
      v28 = *(_QWORD *)(a1 + 152);
      v27 = *(_QWORD *)(a1 + 160);
      v35 = *(_QWORD *)(a1 + 144);
      v29 = v35;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55212D0(v29, v28, v27, 1);
      sub_1A551C6E4((uint64_t)&v35, v23, v31, 0, (void (*)(uint64_t))sub_1A55CAE6C, v30);
      sub_1A54E8FCC(v29, v28, v27, 1);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 144) = v35;
      *v26 = 0;
      v26[1] = 0;
      *(_BYTE *)(a1 + 168) = 1;
    }
  }
}

void sub_1A55C9784(uint64_t a1, uint64_t a2, BOOL *a3)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v33;
  unint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  int v39;

  v4 = *(_BYTE *)(a2 + 9);
  v5 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v6 = sub_1A55FDDC0(v5);
  v8 = v7;
  v35 = HIDWORD(v7);
  v31 = v4;
  v33 = a1;
  if ((v4 & 1) != 0)
  {
    v9 = *(_BYTE *)(a1 + 52);
    v10 = *(unsigned int *)(a1 + 48);
    v11 = *(_QWORD *)(a1 + 32);
    v12 = *(_QWORD *)(a1 + 40);
  }
  else
  {
    v9 = *(_BYTE *)(a1 + 28);
    v10 = *(unsigned int *)(a1 + 24);
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(_QWORD *)(a1 + 16);
  }
  v36 = v11;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v12, v10, v9);
  v38 = v12;
  v39 = v10;
  sub_1A54E3414();
  MessageIdentifierSet.startIndex.getter();
  v14 = v13;
  v16 = v15;
  sub_1A54E4334(v6, v8, v35);
  while (1)
  {
    MessageIdentifierSet.endIndex.getter();
    if (v14 == v18 && v16 == v17)
      break;
    MessageIdentifierSet.subscript.getter();
    sub_1A54E4334(v6, v8, v35);
    v14 = MessageIdentifierSet.index(_:offsetBy:)(v14, v16, 1, v6, v8 & 0xFFFFFFFFFFLL);
    v16 = v20;
    sub_1A54E3458(v6, v8, v35);
    v21 = sub_1A54FDC2C(v37);
    if ((v22 & 1) != 0)
    {
      v23 = v21;
      v24 = v36;
      v37 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A554FA80();
        v24 = v36;
      }
      v36 = v24;
      sub_1A554E368(v23, v24);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      MessageIdentifierSet.insert(_:)();
    }
  }
  sub_1A54E3458(v6, v8, v35);
  sub_1A54E3458(v6, v8, v35);
  swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
  {
    sub_1A54E3458(*(_QWORD *)(v33 + 40), *(unsigned int *)(v33 + 48), *(_BYTE *)(v33 + 52));
    v25 = v36;
    *(_QWORD *)(v33 + 32) = v36;
    *(_QWORD *)(v33 + 40) = v38;
    *(_DWORD *)(v33 + 48) = v39;
    *(_BYTE *)(v33 + 52) = v9;
    v26 = *(_QWORD *)(v33 + 8);
  }
  else
  {
    sub_1A54E3458(*(_QWORD *)(v33 + 16), *(unsigned int *)(v33 + 24), *(_BYTE *)(v33 + 28));
    v26 = v36;
    *(_QWORD *)(v33 + 8) = v36;
    *(_QWORD *)(v33 + 16) = v38;
    *(_DWORD *)(v33 + 24) = v39;
    *(_BYTE *)(v33 + 28) = v9;
    v25 = *(_QWORD *)(v33 + 32);
  }
  if (!*(_BYTE *)(a2 + 9))
    v25 = v26;
  v27 = *(_QWORD *)(v25 + 16);
  v28 = *(_QWORD *)(a2 + 152);
  v29 = *(unsigned int *)(a2 + 160);
  v30 = *(unsigned __int8 *)(a2 + 164);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
  MessageIdentifierSet.formUnion(_:)(v28, v29 | (v30 << 32));
  *a3 = v27 < 0x20;
}

uint64_t sub_1A55C9A70()
{
  uint64_t v0;
  __int128 v2;

  BYTE8(v2) = 0;
  sub_1A594C720();
  sub_1A594B5F8();
  *(_QWORD *)&v2 = *(unsigned __int8 *)(v0 + 9);
  sub_1A594C924();
  sub_1A594B5F8();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  return *(_QWORD *)((char *)&v2 + 1);
}

uint64_t sub_1A55C9B80@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v7;

  result = sub_1A55CAEC8(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  return result;
}

uint64_t sub_1A55C9BB4(const void *a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;
  const void *v14;
  uint64_t v15;
  _BYTE v16[584];
  _BYTE v17[584];
  _BYTE v18[584];
  _BYTE __dst[584];
  _BYTE v20[584];

  sub_1A552316C(a1, v17);
  sub_1A552316C(v17, v20);
  sub_1A552316C(a1, v18);
  result = sub_1A5523B90((uint64_t)v18);
  if ((_DWORD)result == 19)
  {
    v14 = (const void *)sub_1A5524678((uint64_t)v18);
    memcpy(__dst, v14, sizeof(__dst));
    sub_1A552316C(v20, v16);
    v15 = sub_1A5524678((uint64_t)v16);
    sub_1A5529C18(v15);
    sub_1A55D1690((uint64_t)__dst, a2, a3, a4, a5, a7);
    return sub_1A5529E00((uint64_t)a1);
  }
  return result;
}

unint64_t sub_1A55C9C8C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A55CB128(a1, a6);
}

void sub_1A55C9C94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = a1[3];
  sub_1A55CEF70(*a1, v9, v10, v11, a7);
  sub_1A55CB734(v8, v9, v10, v11, a7);
}

uint64_t sub_1A55C9D34(uint64_t result)
{
  if (*(_BYTE *)(result + 4) == 2)
    return sub_1A55D3980(*(_DWORD *)result);
  return result;
}

uint64_t sub_1A55C9D74()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A55C9E00()
{
  sub_1A594CE88();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CE88();
}

uint64_t sub_1A55C9E70()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A594CE88();
  return sub_1A594CED0();
}

BOOL sub_1A55C9EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (*(_BYTE *)(a1 + 12))
    v2 = 0x100000000;
  else
    v2 = 0;
  if (*(_BYTE *)(a2 + 12))
    v3 = 0x100000000;
  else
    v3 = 0;
  return sub_1A55CA0FC(*(_QWORD *)a1, v2 | *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 13) << 40), *(_QWORD *)a2, v3 | *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 13) << 40));
}

uint64_t sub_1A55C9F44(uint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_1A55C9F64 + 4 * byte_1A59A92B0[BYTE4(a1)]))();
}

BOOL sub_1A55C9F64@<W0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  return !a3 && a2 == a1;
}

void sub_1A55C9FC4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_1A55CA008()
{
  int32x2_t *v0;
  int32x2_t *v1;
  unint64_t v2;
  uint64_t v3;

  if (!(v2 >> 62))
  {
    sub_1A54E3414();
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v1, v3 & 0xFFFFFFFFFFLL, v0, v2 & 0xFFFFFFFFFFLL);
  }
}

BOOL sub_1A55CA0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  char v10;

  v4 = a2 ^ a4;
  if (a2 != a4 || !sub_1A54FF30C(a1, a3))
    return 0;
  if ((a2 & 0x100000000) != 0)
    v7 = 6581810;
  else
    v7 = 7631665;
  if ((a4 & 0x100000000) != 0)
    v8 = 6581810;
  else
    v8 = 7631665;
  if (v7 == v8)
  {
    swift_bridgeObjectRelease_n();
    return (v4 & 0xFF0000000000) == 0;
  }
  v10 = sub_1A594CD38();
  swift_bridgeObjectRelease_n();
  result = 0;
  if ((v10 & 1) != 0)
    return (v4 & 0xFF0000000000) == 0;
  return result;
}

uint64_t sub_1A55CA1AC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s11TaskIDValueVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  return a1;
}

_QWORD *__swift_memcpy14_8_0(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)((char *)result + 6) = *(uint64_t *)((char *)a2 + 6);
  *result = v2;
  return result;
}

uint64_t _s11TaskIDValueVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  return a1;
}

uint64_t _s11TaskIDValueVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 14))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s11TaskIDValueVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 14) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 14) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s11TaskIDValueVMa()
{
  return &_s11TaskIDValueVN;
}

uint64_t destroy for DownloadTask(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(a1 + 152), *(unsigned int *)(a1 + 160), *(_BYTE *)(a1 + 164));
  sub_1A54E3458(*(_QWORD *)(a1 + 168), *(unsigned int *)(a1 + 176), *(_BYTE *)(a1 + 180));
  return sub_1A54E3458(*(_QWORD *)(a1 + 184), *(unsigned int *)(a1 + 192), *(_BYTE *)(a1 + 196));
}

uint64_t initializeWithCopy for DownloadTask(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = a2 + 24;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7(a1 + 24, v4, v6);
  v8 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  *(_WORD *)(a1 + 80) = *(_WORD *)(v2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(v2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(v2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(v2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(v2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(v2 + 120);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(v2 + 128);
  v9 = *(_QWORD *)(v2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(v2 + 136);
  *(_QWORD *)(a1 + 144) = v9;
  v10 = *(_QWORD *)(v2 + 152);
  v11 = *(unsigned int *)(v2 + 160);
  v12 = *(_BYTE *)(v2 + 164);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v10, v11, v12);
  *(_QWORD *)(a1 + 152) = v10;
  *(_DWORD *)(a1 + 160) = v11;
  *(_BYTE *)(a1 + 164) = v12;
  v13 = *(_QWORD *)(v2 + 168);
  LODWORD(v4) = *(_DWORD *)(v2 + 176);
  LOBYTE(v6) = *(_BYTE *)(v2 + 180);
  sub_1A54E4334(v13, v4, v6);
  *(_QWORD *)(a1 + 168) = v13;
  *(_DWORD *)(a1 + 176) = v4;
  *(_BYTE *)(a1 + 180) = v6;
  v14 = *(_QWORD *)(v2 + 184);
  v15 = *(unsigned int *)(v2 + 192);
  LOBYTE(v2) = *(_BYTE *)(v2 + 196);
  sub_1A54E4334(v14, v15, v2);
  *(_QWORD *)(a1 + 184) = v14;
  *(_DWORD *)(a1 + 192) = v15;
  *(_BYTE *)(a1 + 196) = v2;
  return a1;
}

uint64_t assignWithCopy for DownloadTask(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *((_BYTE *)v2 + 8);
  *(_BYTE *)(a1 + 9) = *((_BYTE *)v2 + 9);
  *(_QWORD *)(a1 + 16) = v2[2];
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), v2 + 3);
  *(_QWORD *)(a1 + 64) = v2[8];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = v2[9];
  *(_WORD *)(a1 + 80) = *((_WORD *)v2 + 40);
  *(_QWORD *)(a1 + 88) = v2[11];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *((_DWORD *)v2 + 24);
  *(_QWORD *)(a1 + 104) = v2[13];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *((_BYTE *)v2 + 112);
  *(_QWORD *)(a1 + 120) = v2[15];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 128) = *((_DWORD *)v2 + 32);
  *(_QWORD *)(a1 + 136) = v2[17];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = v2[18];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = v2[19];
  v5 = *((_DWORD *)v2 + 40);
  v6 = *((_BYTE *)v2 + 164);
  sub_1A54E4334(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 152);
  v8 = *(unsigned int *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = v4;
  *(_DWORD *)(a1 + 160) = v5;
  v9 = *(_BYTE *)(a1 + 164);
  *(_BYTE *)(a1 + 164) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = v2[21];
  v11 = *((_DWORD *)v2 + 44);
  v12 = *((_BYTE *)v2 + 180);
  sub_1A54E4334(v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 168);
  v14 = *(unsigned int *)(a1 + 176);
  *(_QWORD *)(a1 + 168) = v10;
  *(_DWORD *)(a1 + 176) = v11;
  v15 = *(_BYTE *)(a1 + 180);
  *(_BYTE *)(a1 + 180) = v12;
  sub_1A54E3458(v13, v14, v15);
  v16 = v2[23];
  v17 = *((unsigned int *)v2 + 48);
  LOBYTE(v2) = *((_BYTE *)v2 + 196);
  sub_1A54E4334(v16, v17, (char)v2);
  v18 = *(_QWORD *)(a1 + 184);
  v19 = *(unsigned int *)(a1 + 192);
  *(_QWORD *)(a1 + 184) = v16;
  *(_DWORD *)(a1 + 192) = v17;
  v20 = *(_BYTE *)(a1 + 196);
  *(_BYTE *)(a1 + 196) = (_BYTE)v2;
  sub_1A54E3458(v18, v19, v20);
  return a1;
}

__n128 __swift_memcpy197_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 189) = *(_QWORD *)(a2 + 189);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for DownloadTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  v5 = *(_DWORD *)(a2 + 160);
  v6 = *(_BYTE *)(a2 + 164);
  v7 = *(_QWORD *)(a1 + 152);
  v8 = *(unsigned int *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 160) = v5;
  v9 = *(_BYTE *)(a1 + 164);
  *(_BYTE *)(a1 + 164) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = *(_DWORD *)(a2 + 176);
  v11 = *(_BYTE *)(a2 + 180);
  v12 = *(_QWORD *)(a1 + 168);
  v13 = *(unsigned int *)(a1 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_DWORD *)(a1 + 176) = v10;
  v14 = *(_BYTE *)(a1 + 180);
  *(_BYTE *)(a1 + 180) = v11;
  sub_1A54E3458(v12, v13, v14);
  v15 = *(_DWORD *)(a2 + 192);
  v16 = *(_BYTE *)(a2 + 196);
  v17 = *(_QWORD *)(a1 + 184);
  v18 = *(unsigned int *)(a1 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 192) = v15;
  v19 = *(_BYTE *)(a1 + 196);
  *(_BYTE *)(a1 + 196) = v16;
  sub_1A54E3458(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadTask(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 197))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 196) = 0;
    *(_DWORD *)(result + 192) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 197) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 197) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadTask()
{
  return &type metadata for DownloadTask;
}

uint64_t sub_1A55CA998(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 == 3)
  {
    sub_1A54E4334(result, a2, SBYTE4(a2));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else if ((a2 >> 62) <= 1)
  {
    return sub_1A54E4334(result, a2, SBYTE4(a2));
  }
  return result;
}

uint64_t destroy for DownloadTask.CommandID(uint64_t a1)
{
  return sub_1A55CAA00(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t sub_1A55CAA00(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 == 3)
  {
    sub_1A54E3458(result, a2, SBYTE4(a2));
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if ((a2 >> 62) <= 1)
  {
    return sub_1A54E3458(result, a2, SBYTE4(a2));
  }
  return result;
}

uint64_t *initializeWithCopy for DownloadTask.CommandID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_1A55CA998(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for DownloadTask.CommandID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_1A55CA998(*a2, v4);
  v7 = *a1;
  v8 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_1A55CAA00(v7, v8);
  return a1;
}

uint64_t assignWithTake for DownloadTask.CommandID(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v5;
  sub_1A55CAA00(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadTask.CommandID(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFFFFFD && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1073741821);
  v3 = (((*(_QWORD *)(a1 + 8) >> 34) >> 28) & 0xC0000003 | (4 * ((*(_QWORD *)(a1 + 8) >> 34) & 0xFFFFFFF))) ^ 0x3FFFFFFF;
  if (v3 >= 0x3FFFFFFC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DownloadTask.CommandID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFFFFFC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 1073741821;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3FFFFFFD)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x3FFFFFFD)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 0xFFFFFFF) - (a2 << 28)) << 34;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_1A55CAC18(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 62;
}

uint64_t sub_1A55CAC24(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1A55CAC34(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0x3FFFFFFFFLL | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for DownloadTask.CommandID()
{
  return &type metadata for DownloadTask.CommandID;
}

uint64_t storeEnumTagSinglePayload for DownloadTask.CommandID.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A55CACA4 + 4 * byte_1A59A92BD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A55CACD8 + 4 * byte_1A59A92B8[v4]))();
}

uint64_t sub_1A55CACD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55CACE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A55CACE8);
  return result;
}

uint64_t sub_1A55CACF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A55CACFCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A55CAD00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55CAD08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadTask.CommandID.Kind()
{
  return &type metadata for DownloadTask.CommandID.Kind;
}

unint64_t sub_1A55CAD28()
{
  unint64_t result;

  result = qword_1EE797260;
  if (!qword_1EE797260)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A93F0, &type metadata for DownloadTask.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE797260);
  }
  return result;
}

unint64_t sub_1A55CAD70()
{
  unint64_t result;

  result = qword_1EE797268;
  if (!qword_1EE797268)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9384, &type metadata for DownloadTask.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE797268);
  }
  return result;
}

unint64_t sub_1A55CADB4(uint64_t a1)
{
  unint64_t result;

  result = sub_1A55CADD8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A55CADD8()
{
  unint64_t result;

  result = qword_1EE797280;
  if (!qword_1EE797280)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A93AC, &type metadata for DownloadTask);
    atomic_store(result, (unint64_t *)&qword_1EE797280);
  }
  return result;
}

unint64_t sub_1A55CAE20()
{
  unint64_t result;

  result = qword_1EE7A8C70;
  if (!qword_1EE7A8C70)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9418, &_s11TaskIDValueVN);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C70);
  }
  return result;
}

void sub_1A55CAE64(uint64_t a1)
{
  uint64_t v1;

  sub_1A55C9784(a1, *(_QWORD *)(v1 + 16), *(BOOL **)(v1 + 24));
}

uint64_t sub_1A55CAE6C()
{
  uint64_t v0;
  uint64_t v1;
  char v3;

  if (*(_BYTE *)(*(_QWORD *)(v0 + 16) + 9))
    v1 = 10;
  else
    v1 = 9;
  sub_1A554B85C(v1);
  return sub_1A54F3290(&v3, v1);
}

uint64_t sub_1A55CAEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  _OWORD v38[2];

  v8 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v8);
  v35 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  v13 = *(_OWORD *)(v4 + 136);
  v36 = *(_OWORD *)(v4 + 120);
  v37 = v13;
  v38[0] = *(_OWORD *)(v4 + 152);
  *(_OWORD *)((char *)v38 + 13) = *(_OWORD *)(v4 + 165);
  v14 = *(_QWORD *)(v4 + 88);
  v15 = *(_DWORD *)(v4 + 96);
  v16 = *(_BYTE *)(v4 + 9);
  v17 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18 = a1;
  v19 = a1;
  v20 = a2;
  v21 = sub_1A55DC8C0(v17, v15, v16, v19, a2, a4);
  swift_bridgeObjectRelease();
  sub_1A55BAEB8(a4, (uint64_t)v12);
  if ((~v21 & 0xFF00000000) != 0)
  {
    sub_1A55BAEFC((uint64_t)v12);
  }
  else
  {
    v33 = a4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = v18;
    v34 = v4 + 120;
    v21 = sub_1A55DD148(v18, v20, v14, v15);
    swift_bridgeObjectRelease();
    v23 = v35;
    sub_1A55BAEB8((uint64_t)v12, v35);
    if ((~v21 & 0xFF00000000) != 0)
    {
      sub_1A55BAEFC(v23);
      sub_1A55BAEFC((uint64_t)v12);
    }
    else
    {
      v24 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v21 = sub_1A55D01B8(v24, v15, v23);
      swift_bridgeObjectRelease();
      sub_1A55BAEFC(v23);
      sub_1A55BAEFC((uint64_t)v12);
      if ((~v21 & 0xFF00000000) == 0)
      {
        v25 = *(_QWORD *)(v4 + 88);
        v26 = *(_DWORD *)(v4 + 96);
        v27 = *(_BYTE *)(v4 + 9);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v28 = sub_1A55DDB4C(v22, v20, v33);
        if ((v28 & 0x100000000) != 0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v29 = v28;
          v30 = swift_allocObject();
          *(_QWORD *)(v30 + 16) = v25;
          *(_DWORD *)(v30 + 24) = v26;
          *(_BYTE *)(v30 + 28) = v27;
          *(_DWORD *)(v30 + 32) = v29;
          return v29 | 0x200000000;
        }
      }
    }
  }
  return v21;
}

unint64_t sub_1A55CB128(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;

  if (((result >> 59) & 0x1E | (result >> 2) & 1) == 0xB)
  {
    v3 = v2;
    if ((*(unsigned int *)(v2 + 96) | ((unint64_t)*(unsigned int *)(v2 + 96) << 32)) == (*(unsigned int *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)))
    {
      v5 = *(unsigned __int8 *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x1C);
      v6 = *(unsigned int *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      v7 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      v8 = *(unsigned __int8 *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x30);
      result = sub_1A54FF30C(*(_QWORD *)(v3 + 88), *(_QWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10));
      if ((result & 1) != 0)
      {
        if (*(_BYTE *)(v3 + 9))
          v9 = 6581810;
        else
          v9 = 7631665;
        if (v5)
          v10 = 6581810;
        else
          v10 = 7631665;
        if (v9 == v10)
        {
          result = swift_bridgeObjectRelease_n();
        }
        else
        {
          v11 = sub_1A594CD38();
          result = swift_bridgeObjectRelease_n();
          if ((v11 & 1) == 0)
            return result;
        }
        if (*(_QWORD *)(*(_QWORD *)(v3 + 104) + 16))
        {
          result = sub_1A54FDC2C(v6);
          if ((v12 & 1) != 0)
            return sub_1A55D02B8(v6, v7, v8, a2);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1A55CB23C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55CB260(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797278);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A55CB2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for DownloadTask.ActionID(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadTask.ActionID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A55CB374(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) <= 2u)
    return *(unsigned __int8 *)(a1 + 4);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1A55CB38C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DownloadTask.ActionID()
{
  return &type metadata for DownloadTask.ActionID;
}

uint64_t sub_1A55CB3B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v51 = a4;
  v53 = a3;
  v9 = type metadata accessor for TaskHistory.Previous(0);
  v58 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v47 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797278);
  MEMORY[0x1E0C80A78](v15);
  v52 = (uint64_t *)((char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_1A55F3804(0, a2);
  v18 = *(_QWORD *)(v17 + 16);
  v54 = a5;
  v50 = a2;
  if (v18)
  {
    v47 = v5;
    v19 = 0;
    v55 = v17 + 32;
    v20 = *(_QWORD *)(a1 + 16);
    v56 = v17;
    v57 = a1;
    v48 = v20;
    v49 = v18;
    do
    {
      if (v20)
      {
        v21 = *(_DWORD *)(v55 + 4 * v19);
        v22 = v58;
        v23 = a1 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v24 = *(_QWORD *)(v22 + 72);
        while (1)
        {
          sub_1A55034B8(v23, (uint64_t)v14, type metadata accessor for TaskHistory.Previous);
          sub_1A55034B8((uint64_t)v14, (uint64_t)v11, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
          }
          else
          {
            v25 = *(_DWORD *)&v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
            sub_1A55034FC((uint64_t)v11, type metadata accessor for ClientCommand);
            if (v25 == v21)
            {
              sub_1A55034FC((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              v26 = v57;
              swift_bridgeObjectRelease();
              v27 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797270);
              v28 = v52;
              (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v52, 1, 1, v27);
              v29 = v51 & 0xFFFFFFFFFFLL;
              v30 = v53;
              goto LABEL_13;
            }
          }
          sub_1A55034FC((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
          v23 += v24;
          if (!--v20)
          {
            a1 = v57;
            swift_bridgeObjectRelease();
            v20 = v48;
            v18 = v49;
            break;
          }
        }
      }
      ++v19;
    }
    while (v19 != v18);
  }
  v31 = a1;
  swift_bridgeObjectRelease();
  v32 = sub_1A55CBF4C();
  v34 = v33;
  v35 = HIDWORD(v33);
  sub_1A54E3414();
  v29 = v51 & 0xFFFFFFFFFFLL;
  v30 = v53;
  MessageIdentifierSet.subtracting(_:)(v53, v51 & 0xFFFFFFFFFFLL, v32, v34 & 0xFFFFFFFFFFLL);
  v37 = v36;
  v39 = v38;
  v40 = HIDWORD(v38);
  sub_1A54E3458(v32, v34, v35);
  v41 = v52;
  sub_1A55CC6B4(v37, v39 & 0xFFFFFFFFFFLL, v52);
  v42 = v37;
  v28 = v41;
  sub_1A54E3458(v42, v39, v40);
  v43 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797270);
  v44 = *(_QWORD *)(v43 - 8);
  v26 = v31;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v44 + 48))(v28, 1, v43) == 1)
  {
LABEL_13:
    sub_1A55CC388(v26, v50, v30, v29, v54);
    return sub_1A55CB260((uint64_t)v28);
  }
  else
  {
    v46 = v54;
    sub_1A55CB2A0((uint64_t)v28, (uint64_t)v54);
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v46, 0, 1, v43);
  }
}

void sub_1A55CB734(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;

  v6 = v5;
  v9 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A594A764();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a2 >> 62))
  {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v16, a5, v12, v14);
    sub_1A55034B8(a5, (uint64_t)v11, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A55CCFA8(v6);
    sub_1A55CCFA8(v6);
    v17 = sub_1A594A74C();
    v18 = sub_1A594C030();
    v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v20 = swift_slowAlloc();
      v43 = v19;
      v21 = v20;
      v44 = swift_slowAlloc();
      v47 = v44;
      *(_DWORD *)v21 = 68159491;
      LODWORD(v45) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v21 + 8) = 256;
      v22 = *(int *)(v9 + 20);
      v41 = v17;
      v23 = &v11[v22];
      LOBYTE(v45) = v11[v22];
      sub_1A594C3CC();
      *(_WORD *)(v21 + 11) = 2082;
      v42 = v12;
      v25 = *((_QWORD *)v23 + 1);
      v24 = *((_QWORD *)v23 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v45 = sub_1A55791B0(v25, v24, &v47);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 21) = 1040;
      LODWORD(v45) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v21 + 27) = 512;
      LOWORD(v45) = *((_WORD *)v23 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v21 + 31) = 2160;
      v45 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v21 + 41) = 2085;
      v26 = *((_DWORD *)v23 + 10);
      v45 = *((_QWORD *)v23 + 4);
      v46 = v26;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v27 = sub_1A594B4A8();
      v45 = sub_1A55791B0(v27, v28, &v47);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v21 + 51) = 2082;
      v40 = v21 + 53;
      v29 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v30 = sub_1A55FDDC0(v29);
      v32 = v31;
      v33 = HIDWORD(v31);
      sub_1A54E3414();
      MessageIdentifierSet.debugDescription.getter();
      v35 = v34;
      v37 = v36;
      sub_1A54E3458(v30, v32, v33);
      v45 = sub_1A55791B0(v35, v37, &v47);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55CCFF0(v6);
      sub_1A55CCFF0(v6);
      v38 = v41;
      _os_log_impl(&dword_1A4F90000, v41, (os_log_type_t)v43, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Completed fetching Body Structure for messages %{public}s", (uint8_t *)v21, 0x3Du);
      v39 = v44;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v39, -1, -1);
      MEMORY[0x1A85B1964](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v42);
    }
    else
    {
      sub_1A55034FC((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
      sub_1A55CCFF0(v6);
      sub_1A55CCFF0(v6);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    }
  }
}

uint64_t sub_1A55CBB80()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A594CE64();
  sub_1A594CE94();
  if (v1 != 1)
    sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A55CBC00()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_1A594CE94();
  }
  else
  {
    sub_1A594CE94();
    sub_1A594CE88();
  }
  return sub_1A594CE88();
}

uint64_t sub_1A55CBC60()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A594CE64();
  sub_1A594CE94();
  if (v1 != 1)
    sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A55CBCDC(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(a1 + 9);
  v3 = *(unsigned __int8 *)(a2 + 9);
  return sub_1A55360A8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8)) & ~(v2 ^ v3) & 1;
}

uint64_t sub_1A55CBD24()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 40);
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CEA0();
  sub_1A594CE88();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54F5B20((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A55CBDC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 40);
  sub_1A594CE88();
  sub_1A594CEA0();
  sub_1A594CE88();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54F5B20(a1, v3);
  swift_bridgeObjectRelease();
  return sub_1A594CE88();
}

uint64_t sub_1A55CBE44()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 40);
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CEA0();
  sub_1A594CE88();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54F5B20((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_1A594CE88();
  return sub_1A594CED0();
}

BOOL sub_1A55CBEE4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  char v6;
  _OWORD v7[3];
  char v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 48);
  return sub_1A55CC794((uint64_t)v5, (uint64_t)v7);
}

void sub_1A55CBF3C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4E67A78;
}

uint64_t sub_1A55CBF4C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *(_QWORD *)(v0 + 40);
  v1 = sub_1A54E3414();
  v14 = MessageIdentifierSet.init()(&type metadata for UID, v1);
  v2 = v15 + 64;
  v3 = 1 << *(_BYTE *)(v15 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v15 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v8 = 0;
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v8 << 6);
LABEL_24:
    if ((*(_BYTE *)(*(_QWORD *)(v15 + 56) + 16 * v10 + 9) & 1) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      result = MessageIdentifierSet.insert(_:)();
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v11 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_23;
  v8 = v11 + 1;
  if (v11 + 1 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_23;
  v8 = v11 + 2;
  if (v11 + 2 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_23;
  v8 = v11 + 3;
  if (v11 + 3 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_23;
  v8 = v11 + 4;
  if (v11 + 4 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_23:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_24;
  }
  v13 = v11 + 5;
  if (v13 >= v6)
  {
LABEL_26:
    swift_release();
    sub_1A54F81BC((uint64_t)&v15);
    return v14;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      goto LABEL_26;
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A55CC130()
{
  uint64_t v0;
  unint64_t v1;
  unsigned int v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned __int8 v24;
  uint64_t v25;

  v25 = *(_QWORD *)(v0 + 40);
  v1 = sub_1A54E3414();
  v22 = MessageIdentifierSet.init()(&type metadata for UID, v1);
  v23 = v2;
  v24 = v3;
  v4 = v25 + 64;
  v5 = 1 << *(_BYTE *)(v25 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v25 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v10 = 0;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v10 << 6);
LABEL_24:
    if (*(_BYTE *)(*(_QWORD *)(v25 + 56) + 16 * v12 + 8) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      result = MessageIdentifierSet.insert(_:)();
    }
  }
  v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v13 >= v8)
    goto LABEL_26;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  ++v10;
  if (v14)
    goto LABEL_23;
  v10 = v13 + 1;
  if (v13 + 1 >= v8)
    goto LABEL_26;
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
    goto LABEL_23;
  v10 = v13 + 2;
  if (v13 + 2 >= v8)
    goto LABEL_26;
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
    goto LABEL_23;
  v10 = v13 + 3;
  if (v13 + 3 >= v8)
    goto LABEL_26;
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
    goto LABEL_23;
  v10 = v13 + 4;
  if (v13 + 4 >= v8)
    goto LABEL_26;
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
  {
LABEL_23:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_24;
  }
  v15 = v13 + 5;
  if (v15 >= v8)
  {
LABEL_26:
    swift_release();
    sub_1A54F81BC((uint64_t)&v25);
    v16 = sub_1A55CBF4C();
    v18 = v17;
    v19 = HIDWORD(v17);
    MessageIdentifierSet.subtracting(_:)(v16, v17 & 0xFFFFFFFFFFLL, v22, v23 | ((unint64_t)v24 << 32));
    v21 = v20;
    sub_1A54E3458(v16, v18, v19);
    sub_1A54E3458(v22, v23, v24);
    return v21;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_26;
    v14 = *(_QWORD *)(v4 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A55CC388@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v39 = a4;
  v9 = type metadata accessor for TaskHistory.Previous(0);
  v45 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v38 - v13;
  v15 = sub_1A55F3804(1, a2);
  v16 = *(_QWORD *)(v15 + 16);
  v40 = a3;
  if (v16)
  {
    v38 = a5;
    v17 = 0;
    v42 = v15 + 32;
    v46 = *(_QWORD *)(a1 + 16);
    v43 = v15;
    v44 = a1;
    v41 = v16;
    do
    {
      if (v46)
      {
        v18 = *(_DWORD *)(v42 + 4 * v17);
        v19 = v45;
        v20 = a1 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v21 = *(_QWORD *)(v19 + 72);
        v22 = v46;
        while (1)
        {
          sub_1A55034B8(v20, (uint64_t)v14, type metadata accessor for TaskHistory.Previous);
          sub_1A55034B8((uint64_t)v14, (uint64_t)v11, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
          }
          else
          {
            v23 = *(_DWORD *)&v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
            sub_1A55034FC((uint64_t)v11, type metadata accessor for ClientCommand);
            if (v23 == v18)
            {
              sub_1A55034FC((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v24 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797270);
              return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v38, 1, 1, v24);
            }
          }
          sub_1A55034FC((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
          v20 += v21;
          if (!--v22)
          {
            a1 = v44;
            swift_bridgeObjectRelease();
            v16 = v41;
            break;
          }
        }
      }
      ++v17;
    }
    while (v17 != v16);
    swift_bridgeObjectRelease();
    a5 = v38;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v26 = sub_1A55CC130();
  v28 = v27;
  v29 = HIDWORD(v27);
  sub_1A54E3414();
  MessageIdentifierSet.subtracting(_:)(v40, v39 & 0xFFFFFFFFFFLL, v26, v28 & 0xFFFFFFFFFFLL);
  v31 = v30;
  v33 = v32;
  v34 = HIDWORD(v32);
  sub_1A54E3458(v26, v28, v29);
  LOBYTE(v29) = MessageIdentifierSet.isEmpty.getter(v31, v33 & 0xFFFFFFFFFFLL);
  v35 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797270);
  v36 = v35;
  if ((v29 & 1) != 0)
  {
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a5, 1, 1, v35);
  }
  else
  {
    v37 = (uint64_t)a5 + *(int *)(v35 + 48);
    *a5 = v31;
    a5[1] = v33 & 0xFFFFFFFFFFLL | 0x4000000000000000;
    a5[2] = 0;
    a5[3] = 0;
    static ClientCommand.uidFetch(messages:items:)(v31, v33 & 0xFFFFFFFFFFLL, (uint64_t)&unk_1E4EF2560, v37);
    sub_1A54E4334(v31, v33, v34);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a5, 0, 1, v36);
  }
  return sub_1A54E3458(v31, v33, v34);
}

uint64_t sub_1A55CC6B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1A54E3414();
  if (MessageIdentifierSet.isEmpty.getter(a1, a2 & 0xFFFFFFFFFFLL))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797270);
    v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797270);
    v11 = (uint64_t)a3 + *(int *)(v10 + 48);
    *a3 = a1;
    a3[1] = a2 & 0xFFFFFFFFFFLL;
    a3[2] = 0;
    a3[3] = 0;
    static ClientCommand.uidFetch(messages:items:)(a1, a2 & 0xFFFFFFFFFFLL, (uint64_t)&unk_1E4E67950, v11);
    sub_1A54E4334(a1, a2, SBYTE4(a2));
    v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v8 = a3;
    v9 = 0;
    v6 = v10;
  }
  return v7(v8, v9, 1, v6);
}

BOOL sub_1A55CC794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  BOOL v10;
  _BOOL8 result;

  if (*(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
    return 0;
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned int *)(a1 + 32);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(unsigned int *)(a2 + 32);
  v8 = *(unsigned __int16 *)(a2 + 16);
  v9 = *(unsigned __int16 *)(a1 + 16);
  v10 = sub_1A54FF30C(*(_QWORD *)a1, *(_QWORD *)a2);
  result = 0;
  if (v10 && v9 == v8)
  {
    if ((v5 | (v5 << 32)) == (v7 | (v7 << 32))
      && sub_1A54FF30C(v4, v6)
      && (sub_1A54FBD0C(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40)) & 1) != 0)
    {
      return *(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A55CC85C(uint64_t result, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  char *i;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  _QWORD *v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = *(unsigned int *)(result + 32);
    v7 = *(_QWORD *)(result + 40);
    v8 = *(_BYTE *)(result + 49);
    v43 = *(_BYTE *)(result + 48);
    v9 = (_QWORD *)*a3;
    v44 = result;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v11 = sub_1A54FDC2C(v6);
    v12 = v9[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v15 = v10;
    if (v9[3] < v14)
    {
      sub_1A558099C(v14, a2 & 1);
      v16 = sub_1A54FDC2C(v6);
      if ((v15 & 1) != (v17 & 1))
      {
LABEL_27:
        result = sub_1A594CDF8();
        __break(1u);
        return result;
      }
      v11 = v16;
      v18 = (_QWORD *)*a3;
      if ((v15 & 1) == 0)
        goto LABEL_12;
LABEL_9:
      v19 = v18[7] + 16 * v11;
      *(_QWORD *)v19 = v7;
      *(_BYTE *)(v19 + 8) = v43;
      *(_BYTE *)(v19 + 9) = v8;
      v20 = v3 - 1;
      if (v3 == 1)
        return swift_bridgeObjectRelease();
LABEL_16:
      for (i = (char *)(v44 + 73); ; i += 24)
      {
        v27 = *(unsigned int *)(i - 17);
        v28 = *(_QWORD *)(i - 9);
        v29 = *i;
        v30 = *(i - 1);
        v31 = (_QWORD *)*a3;
        v32 = sub_1A54FDC2C(v27);
        v34 = v31[2];
        v35 = (v33 & 1) == 0;
        v23 = __OFADD__(v34, v35);
        v36 = v34 + v35;
        if (v23)
          break;
        v37 = v33;
        if (v31[3] < v36)
        {
          sub_1A558099C(v36, 1);
          v32 = sub_1A54FDC2C(v27);
          if ((v37 & 1) != (v38 & 1))
            goto LABEL_27;
        }
        v39 = (_QWORD *)*a3;
        if ((v37 & 1) != 0)
        {
          v26 = v39[7] + 16 * v32;
          *(_QWORD *)v26 = v28;
          *(_BYTE *)(v26 + 8) = v30;
          *(_BYTE *)(v26 + 9) = v29;
        }
        else
        {
          v39[(v32 >> 6) + 8] |= 1 << v32;
          *(_DWORD *)(v39[6] + 4 * v32) = v27;
          v40 = v39[7] + 16 * v32;
          *(_QWORD *)v40 = v28;
          *(_BYTE *)(v40 + 8) = v30;
          *(_BYTE *)(v40 + 9) = v29;
          v41 = v39[2];
          v23 = __OFADD__(v41, 1);
          v42 = v41 + 1;
          if (v23)
            goto LABEL_26;
          v39[2] = v42;
        }
        if (!--v20)
          return swift_bridgeObjectRelease();
      }
      goto LABEL_25;
    }
    if ((a2 & 1) != 0)
    {
      v18 = (_QWORD *)*a3;
      if ((v10 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_1A554EDD4();
      v18 = (_QWORD *)*a3;
      if ((v15 & 1) != 0)
        goto LABEL_9;
    }
LABEL_12:
    v18[(v11 >> 6) + 8] |= 1 << v11;
    *(_DWORD *)(v18[6] + 4 * v11) = v6;
    v21 = v18[7] + 16 * v11;
    *(_QWORD *)v21 = v7;
    *(_BYTE *)(v21 + 8) = v43;
    *(_BYTE *)(v21 + 9) = v8;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v18[2] = v24;
    v20 = v3 - 1;
    if (v3 == 1)
      return swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1A55CCADC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  char v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  int v32;
  uint64_t v33;

  v4 = a3;
  v5 = a4;
  v6 = *a1;
  v7 = a1[1];
  v8 = *((_WORD *)a1 + 8);
  v9 = a1[3];
  v32 = *((_DWORD *)a1 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    v25 = a1[3];
    v26 = *((_WORD *)a1 + 8);
    v27 = a1[1];
    v28 = *a1;
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4C10(0, v10, 0);
    v11 = a2;
    v12 = 0;
    v13 = v33;
    v14 = *(_QWORD *)(v33 + 16);
    v15 = 24 * v14;
    do
    {
      v16 = *(_DWORD *)(v11 + v12 + 32);
      v17 = *(_QWORD *)(v11 + v12 + 40);
      v18 = *(_BYTE *)(v11 + v12 + 48);
      v19 = *(_BYTE *)(v11 + v12 + 49);
      v33 = v13;
      v20 = *(_QWORD *)(v13 + 24);
      v21 = v14 + 1;
      if (v14 >= v20 >> 1)
      {
        sub_1A54F4C10(v20 > 1, v14 + 1, 1);
        v11 = a2;
        v13 = v33;
      }
      *(_QWORD *)(v13 + 16) = v21;
      v22 = v13 + v15 + v12;
      *(_DWORD *)(v22 + 32) = v16;
      *(_QWORD *)(v22 + 40) = v17;
      *(_BYTE *)(v22 + 48) = v18;
      *(_BYTE *)(v22 + 49) = v19;
      v12 += 24;
      v14 = v21;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    v4 = a3;
    v6 = v28;
    v5 = a4;
    v7 = v27;
    v8 = v26;
    v9 = v25;
    if (*(_QWORD *)(v13 + 16))
      goto LABEL_7;
LABEL_9:
    v23 = MEMORY[0x1E0DEE9E0];
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  v13 = MEMORY[0x1E0DEE9D8];
  if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    goto LABEL_9;
LABEL_7:
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8828);
  v23 = sub_1A594CA5C();
LABEL_10:
  v33 = v23;
  sub_1A55CC85C(v13, 1, &v33);
  swift_bridgeObjectRelease();
  result = v33;
  *(_QWORD *)v5 = v6;
  *(_QWORD *)(v5 + 8) = v7;
  *(_WORD *)(v5 + 16) = v8;
  *(_QWORD *)(v5 + 24) = v9;
  *(_DWORD *)(v5 + 32) = v32;
  *(_QWORD *)(v5 + 40) = result;
  *(_BYTE *)(v5 + 48) = v4;
  return result;
}

uint64_t _s5BatchVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s5BatchVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s5BatchVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t _s5BatchVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

ValueMetadata *_s5BatchVMa()
{
  return &_s5BatchVN;
}

uint64_t __swift_memcpy10_8_0(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s5BatchV7MessageVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s5BatchV7MessageVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 + 1;
  }
  return result;
}

ValueMetadata *_s5BatchV7MessageVMa()
{
  return &_s5BatchV7MessageVN;
}

unint64_t sub_1A55CCF1C()
{
  unint64_t result;

  result = qword_1EE7A8C78;
  if (!qword_1EE7A8C78)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A94A4, &_s5BatchV7MessageVN);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C78);
  }
  return result;
}

unint64_t sub_1A55CCF64()
{
  unint64_t result;

  result = qword_1EE7A8C80;
  if (!qword_1EE7A8C80)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A950C, &_s5BatchVN);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C80);
  }
  return result;
}

uint64_t sub_1A55CCFA8(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A55CCFF0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5BatchV2IDOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A55CD084 + 4 * byte_1A59A9491[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A55CD0B8 + 4 * asc_1A59A948C[v4]))();
}

uint64_t sub_1A55CD0B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55CD0C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A55CD0C8);
  return result;
}

uint64_t sub_1A55CD0D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A55CD0DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A55CD0E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55CD0E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s5BatchV2IDOMa()
{
  return &_s5BatchV2IDON;
}

unint64_t sub_1A55CD108()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A8C88;
  if (!qword_1EE7A8C88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7A8C90);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C88);
  }
  return result;
}

unint64_t sub_1A55CD158()
{
  unint64_t result;

  result = qword_1EE7A8C98;
  if (!qword_1EE7A8C98)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A95F0, &_s5BatchV2IDON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8C98);
  }
  return result;
}

_QWORD *sub_1A55CD19C(void (*a1)(_QWORD *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v25;
  _OWORD v26[13];
  _OWORD v27[2];
  _BYTE v28[240];
  _BYTE v29[240];
  _QWORD v30[31];
  uint64_t v31;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v31 = *(_QWORD *)(a3 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1(v30, &v31);
  if (v3)
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
    v9 = v4 - 1;
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v25 = v9;
    while (1)
    {
      swift_bridgeObjectRelease();
      sub_1A55032A0((uint64_t)v30, (uint64_t)v28, &qword_1EE797258);
      sub_1A55032A0((uint64_t)v28, (uint64_t)v29, &qword_1EE797258);
      if (sub_1A55DC350((uint64_t)v29) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1A54F1A54(0, v7[2] + 1, 1, v7);
        v11 = v7[2];
        v10 = v7[3];
        if (v11 >= v10 >> 1)
          v7 = sub_1A54F1A54((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
        sub_1A55032A0((uint64_t)v28, (uint64_t)v26, &qword_1EE797258);
        v7[2] = v11 + 1;
        v12 = &v7[30 * v11];
        v13 = v26[2];
        v14 = v26[1];
        v12[2] = v26[0];
        v12[3] = v14;
        v12[4] = v13;
        v15 = v26[6];
        v16 = v26[4];
        v17 = v26[3];
        v12[7] = v26[5];
        v12[8] = v15;
        v12[5] = v17;
        v12[6] = v16;
        v18 = v26[10];
        v19 = v26[8];
        v20 = v26[7];
        v12[11] = v26[9];
        v12[12] = v18;
        v12[9] = v20;
        v12[10] = v19;
        v21 = v27[0];
        v22 = v26[12];
        v23 = v26[11];
        *(_OWORD *)((char *)v12 + 249) = *(_OWORD *)((char *)v27 + 9);
        v12[14] = v22;
        v12[15] = v21;
        v12[13] = v23;
        v9 = v25;
      }
      if (v9 == v8)
        break;
      v31 = *(_QWORD *)(a3 + 8 * v8 + 40);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      a1(v30, &v31);
      ++v8;
    }
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1A55CD3D0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A555C168(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A55D8734(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A55CD438()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t (*v24)(uint64_t);
  unint64_t v25;
  double v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  unsigned int *v36;
  char *v37;
  uint64_t v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t result;
  uint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  _BYTE v69[184];
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[10];
  _OWORD v74[2];
  uint64_t v75;
  int v76;
  char v77;

  v1 = v0;
  v2 = _s25MessageSectionsToDownloadVMa(0);
  v65 = *(_QWORD *)(v2 - 8);
  v66 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v67 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v64 = (char *)&v59 - v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v59 - v7;
  v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10 = sub_1A55D9118(v9);
  v12 = v11;
  v14 = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A54FF84C(v10, v12, v14);
  v16 = v15;
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&v70 = v16;
  sub_1A55CD3D0((uint64_t *)&v70);
  swift_release();
  swift_release();
  swift_release();
  v17 = v70;
  v18 = sub_1A54E3414();
  v19 = MessageIdentifierSet.init()(&type metadata for UID, v18);
  v75 = v19;
  v76 = v20;
  v77 = v21;
  v22 = *(_QWORD *)(v17 + 16);
  if (!v22)
  {
    v57 = v19;
    swift_release();
    return v57;
  }
  v63 = (uint64_t)v73 + 8;
  v59 = v17;
  v23 = (_BYTE *)(v17 + 48);
  v61 = xmmword_1A59ABD10;
  v24 = _s25MessageSectionsToDownloadVMa;
  v62 = v1;
  v60 = v8;
  while (1)
  {
    if ((*v23 & 1) != 0)
      goto LABEL_4;
    v25 = *((_QWORD *)v23 - 1);
    if (HIDWORD(v25) || v25 > 0x15F90)
      goto LABEL_4;
    v27 = (double)v25 * 1.25;
    if ((~*(_QWORD *)&v27 & 0x7FF0000000000000) == 0)
      break;
    if (v27 <= -1.0)
      goto LABEL_24;
    if (v27 >= 4294967300.0)
      goto LABEL_25;
    v28 = *((_DWORD *)v23 - 4);
    v29 = *v1;
    v30 = *((_DWORD *)v1 + 2);
    v31 = v25 + 0x4000;
    if (v31 <= v27)
      v32 = v27;
    else
      v32 = v31;
    sub_1A55D935C((uint64_t)v69);
    LOBYTE(v70) = 0;
    *((_QWORD *)&v70 + 1) = v29;
    *(_QWORD *)&v71 = __PAIR64__(v28, v30);
    v33 = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)&v71 + 1) = MEMORY[0x1E0DEE9D8];
    LODWORD(v72) = v32;
    *((_QWORD *)&v72 + 1) = MEMORY[0x1E0DEE9D8];
    LODWORD(v73[0]) = 0;
    WORD2(v73[0]) = 2;
    BYTE6(v73[0]) = 0;
    sub_1A55032A0((uint64_t)v69, v63, &qword_1EE7A03D0);
    v34 = v66;
    v35 = v24;
    v36 = (unsigned int *)v64;
    v37 = &v64[*(int *)(v66 + 20)];
    v38 = type metadata accessor for MessageHeader();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 3, v38);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AFC8);
    v39 = (_OWORD *)swift_allocObject();
    v40 = v73[9];
    v41 = v74[0];
    v42 = v73[7];
    v39[13] = v73[8];
    v39[14] = v40;
    v39[15] = v41;
    *(_OWORD *)((char *)v39 + 249) = *(_OWORD *)((char *)v74 + 9);
    v43 = v73[5];
    v44 = v73[6];
    v45 = v73[3];
    v39[9] = v73[4];
    v39[10] = v43;
    v39[11] = v44;
    v39[12] = v42;
    v46 = v73[1];
    v47 = v73[2];
    v48 = v72;
    v39[5] = v73[0];
    v39[6] = v46;
    v39[7] = v47;
    v39[8] = v45;
    v49 = v70;
    v50 = v71;
    v39[1] = v61;
    v39[2] = v49;
    v39[3] = v50;
    v39[4] = v48;
    *v36 = v28;
    *(_QWORD *)((char *)v36 + *(int *)(v34 + 24)) = v39;
    *(_QWORD *)((char *)v36 + *(int *)(v34 + 28)) = v33;
    v51 = (uint64_t)v60;
    v1 = v62;
    v52 = (uint64_t)v36;
    v24 = v35;
    sub_1A54E3394(v52, (uint64_t)v60, v35);
    v53 = v51;
    sub_1A55034B8(v51, v67, v24);
    v54 = v1[3];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v54 = sub_1A54F0548(0, *(_QWORD *)(v54 + 16) + 1, 1, v54);
    v56 = *(_QWORD *)(v54 + 16);
    v55 = *(_QWORD *)(v54 + 24);
    if (v56 >= v55 >> 1)
      v54 = sub_1A54F0548(v55 > 1, v56 + 1, 1, v54);
    *(_QWORD *)(v54 + 16) = v56 + 1;
    sub_1A54E3394(v67, v54+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(_QWORD *)(v65 + 72) * v56, v24);
    v1[3] = v54;
    v68 = v28;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
    MessageIdentifierSet.insert(_:)();
    sub_1A55034FC(v53, v24);
LABEL_4:
    v23 += 24;
    if (!--v22)
    {
      swift_release();
      return v75;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1A55CD8C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  _QWORD *v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  int64_t v31;
  __int128 v32[11];
  _OWORD v33[10];
  _OWORD v34[2];

  v30 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v31 = (unint64_t)(v3 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_20;
    }
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v10 >= v31)
      return swift_release();
    v11 = *(_QWORD *)(v30 + 8 * v10);
    ++v7;
    if (!v11)
    {
      v7 = v10 + 1;
      if (v10 + 1 >= v31)
        return swift_release();
      v11 = *(_QWORD *)(v30 + 8 * v7);
      if (!v11)
      {
        v7 = v10 + 2;
        if (v10 + 2 >= v31)
          return swift_release();
        v11 = *(_QWORD *)(v30 + 8 * v7);
        if (!v11)
          break;
      }
    }
LABEL_19:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_20:
    v13 = *(_QWORD *)(a1 + 56) + 16 * v9;
    if ((*(_BYTE *)(v13 + 8) & 1) == 0 && *(_BYTE *)(v13 + 9))
    {
      v14 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * v9);
      v15 = *(_QWORD *)v13;
      if (HIDWORD(*(_QWORD *)v13))
      {
        v16 = *(_QWORD **)(v1 + 16);
        LODWORD(v15) = 0;
        v17 = 0;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_26;
LABEL_24:
        v16 = sub_1A54F055C(0, v16[2] + 1, 1, v16);
        v17 = v15;
        goto LABEL_26;
      }
      v16 = *(_QWORD **)(v1 + 16);
      v17 = *(_QWORD *)v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        goto LABEL_24;
LABEL_26:
      v19 = v16[2];
      v18 = v16[3];
      if (v19 >= v18 >> 1)
        v16 = sub_1A54F055C((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
      sub_1A55D935C((uint64_t)v32);
      *(_QWORD *)&v33[0] = __PAIR64__(v17, v14);
      result = sub_1A55D86E0(v32, (uint64_t)v33 + 8);
      v16[2] = v19 + 1;
      v20 = &v16[24 * v19];
      v21 = v33[3];
      v22 = v33[0];
      v23 = v33[1];
      v20[4] = v33[2];
      v20[5] = v21;
      v20[2] = v22;
      v20[3] = v23;
      v24 = v33[7];
      v26 = v33[4];
      v25 = v33[5];
      v20[8] = v33[6];
      v20[9] = v24;
      v20[6] = v26;
      v20[7] = v25;
      v28 = v33[9];
      v27 = v34[0];
      v29 = v33[8];
      *(_OWORD *)((char *)v20 + 201) = *(_OWORD *)((char *)v34 + 9);
      v20[11] = v28;
      v20[12] = v27;
      v20[10] = v29;
      *(_QWORD *)(v1 + 16) = v16;
    }
  }
  v12 = v10 + 3;
  if (v12 >= v31)
    return swift_release();
  v11 = *(_QWORD *)(v30 + 8 * v12);
  if (v11)
  {
    v7 = v12;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v31)
      return swift_release();
    v11 = *(_QWORD *)(v30 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_19;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A55CDB48@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  _QWORD v77[3];
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  __int128 *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  int *v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  _OWORD v121[3];

  v79 = a3;
  v88 = a2;
  v99 = a1;
  v78 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v78);
  v84 = (char *)v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v85 = (char *)v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for TaskHistory.Previous(0);
  v94 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v97 = type metadata accessor for MessageHeader();
  v93 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v86 = (char *)v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797248);
  MEMORY[0x1E0C80A78](v92);
  v98 = (uint64_t)v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s19MessageHeaderStatusOMa(0);
  MEMORY[0x1E0C80A78](v12);
  v80 = (char *)v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v77 - v15;
  MEMORY[0x1E0C80A78](v17);
  v96 = (char *)v77 - v18;
  v106 = (int *)_s25MessageSectionsToDownloadVMa(0);
  MEMORY[0x1E0C80A78](v106);
  v20 = (char *)v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v77 - v22;
  MEMORY[0x1E0C80A78](v24);
  v104 = (char *)v77 - v26;
  v81 = v4;
  v27 = *(_QWORD *)(v4 + 24);
  v102 = *(_QWORD *)(v27 + 16);
  if (v102)
  {
    v77[1] = v8;
    v77[2] = v7;
    v82 = a4;
    v83 = v27;
    v77[0] = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v101 = v27 + v77[0];
    v100 = *(_QWORD *)(v25 + 72);
    v87 = &v109;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v28 = 0;
    v89 = 0;
    v91 = v16;
    v103 = v20;
    v105 = v23;
    while (1)
    {
      v31 = v100 * v28;
      v32 = v101 + v100 * v28;
      v33 = *(_QWORD *)(v32 + v106[6]);
      v34 = *(_QWORD *)(v33 + 16);
      if (!v34)
        break;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v35 = *(_OWORD *)(v33 + 224);
      v119 = *(_OWORD *)(v33 + 208);
      v120 = v35;
      v121[0] = *(_OWORD *)(v33 + 240);
      *(_OWORD *)((char *)v121 + 9) = *(_OWORD *)(v33 + 249);
      v36 = *(_OWORD *)(v33 + 160);
      v115 = *(_OWORD *)(v33 + 144);
      v116 = v36;
      v37 = *(_OWORD *)(v33 + 192);
      v117 = *(_OWORD *)(v33 + 176);
      v118 = v37;
      v38 = *(_OWORD *)(v33 + 96);
      v111 = *(_OWORD *)(v33 + 80);
      v112 = v38;
      v39 = *(_OWORD *)(v33 + 128);
      v113 = *(_OWORD *)(v33 + 112);
      v114 = v39;
      v40 = *(_OWORD *)(v33 + 48);
      v108 = *(_OWORD *)(v33 + 32);
      v109 = v40;
      v110 = *(_OWORD *)(v33 + 64);
      sub_1A55DC014((uint64_t)&v108);
      v41 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v42 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v41);
      swift_bridgeObjectRelease();
      sub_1A55DC110((uint64_t)&v108);
      v43 = (uint64_t)v104;
      if ((v42 & 1) == 0)
      {
        v95 = v31;
        v44 = 272;
        while (--v34)
        {
          v45 = v44 + 240;
          v46 = (__int128 *)(v33 + v44);
          v47 = *v46;
          v48 = v46[2];
          v109 = v46[1];
          v110 = v48;
          v108 = v47;
          v49 = v46[3];
          v50 = v46[4];
          v51 = v46[6];
          v113 = v46[5];
          v114 = v51;
          v111 = v49;
          v112 = v50;
          v52 = v46[7];
          v53 = v46[8];
          v54 = v46[10];
          v117 = v46[9];
          v118 = v54;
          v115 = v52;
          v116 = v53;
          v55 = v46[11];
          v56 = v46[12];
          v57 = v46[13];
          *(_OWORD *)((char *)v121 + 9) = *(__int128 *)((char *)v46 + 217);
          v120 = v56;
          v121[0] = v57;
          v119 = v55;
          sub_1A55DC014((uint64_t)&v108);
          v58 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v59 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v58);
          swift_bridgeObjectRelease();
          sub_1A55DC110((uint64_t)&v108);
          v44 = v45;
          if ((v59 & 1) != 0)
            goto LABEL_3;
        }
        swift_bridgeObjectRelease();
LABEL_13:
        sub_1A55034B8(v32, v43, _s25MessageSectionsToDownloadVMa);
        v60 = *(_QWORD *)(*(_QWORD *)(v43 + v106[7]) + 16);
        if (!v60)
          goto LABEL_22;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v61 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v62 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v61);
        swift_bridgeObjectRelease();
        if ((v62 & 1) != 0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v60 == 1)
          {
LABEL_21:
            swift_bridgeObjectRelease();
            v43 = (uint64_t)v104;
LABEL_22:
            sub_1A55034FC(v43, _s25MessageSectionsToDownloadVMa);
            v67 = (uint64_t)v105;
            sub_1A55034B8(v32, (uint64_t)v105, _s25MessageSectionsToDownloadVMa);
            v68 = v67 + v106[5];
            v69 = v93;
            v71 = (uint64_t)v96;
            v70 = v97;
            v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56);
            v90(v96, 2, 3, v97);
            v72 = v98;
            v73 = v98 + *(int *)(v92 + 48);
            sub_1A55034B8(v68, v98, _s19MessageHeaderStatusOMa);
            sub_1A55034B8(v71, v73, _s19MessageHeaderStatusOMa);
            v74 = (char *)&loc_1A55CE168
                + *((int *)qword_1A55CEA48
                  + (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v72, 3, v70));
            __asm { BR              X9 }
          }
          v63 = 5;
          while (1)
          {
            v64 = v63 - 3;
            if (__OFADD__(v63 - 4, 1))
            {
              __break(1u);
              JUMPOUT(0x1A55CEA2CLL);
            }
            v65 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v66 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v65);
            swift_bridgeObjectRelease();
            if ((v66 & 1) != 0)
              break;
            ++v63;
            if (v64 == v60)
              goto LABEL_21;
          }
          swift_bridgeObjectRelease();
          v43 = (uint64_t)v104;
        }
        goto LABEL_4;
      }
LABEL_3:
      swift_bridgeObjectRelease();
      sub_1A55034B8(v32, v43, _s25MessageSectionsToDownloadVMa);
LABEL_4:
      sub_1A55034FC(v43, _s25MessageSectionsToDownloadVMa);
      v29 = (uint64_t)v105;
      sub_1A55034B8(v32, (uint64_t)v105, _s25MessageSectionsToDownloadVMa);
      v30 = (uint64_t)v103;
      sub_1A55034FC(v29, _s25MessageSectionsToDownloadVMa);
      sub_1A55034B8(v32, v30, _s25MessageSectionsToDownloadVMa);
      sub_1A55034FC(v30, _s25MessageSectionsToDownloadVMa);
      if (++v28 == v102)
      {
        swift_bridgeObjectRelease();
        a4 = v82;
        goto LABEL_25;
      }
    }
    v95 = v100 * v28;
    v43 = (uint64_t)v104;
    goto LABEL_13;
  }
LABEL_25:
  v75 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797270);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(a4, 1, 1, v75);
}

uint64_t sub_1A55CEA58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t result;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unsigned int v87;
  int v88;
  unint64_t v89;
  int v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  _OWORD v104[2];
  uint64_t v105;
  unsigned int v106;
  char v107;

  v8 = *(_QWORD *)(v5 + 24);
  v9 = sub_1A54E3414();
  v10 = MessageIdentifierSet.init()(&type metadata for UID, v9);
  v12 = v11;
  v13 = HIDWORD(v11);
  v105 = v10;
  v106 = v11;
  v107 = BYTE4(v11);
  if (*(_QWORD *)(v8 + 16))
  {
    v76 = a2;
    v78 = a4;
    v83 = *(_QWORD *)(v8 + 16);
    v14 = _s25MessageSectionsToDownloadVMa(0);
    v15 = *(_QWORD *)(v14 - 8);
    v85 = v8 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v86 = v14;
    v84 = *(_QWORD *)(v15 + 72);
    v77 = v8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v16 = v83;
    v17 = 0;
    v18 = 0;
    while (1)
    {
      if (v18 >> 17 <= 2)
      {
        v19 = (int *)(v85 + v84 * v17);
        v20 = *(_QWORD *)((char *)v19 + *(int *)(v86 + 24));
        v21 = *(_QWORD *)(v20 + 16);
        if (v21)
        {
          v87 = v18;
          swift_bridgeObjectRetain_n();
          v22 = *(_OWORD *)(v20 + 224);
          v102 = *(_OWORD *)(v20 + 208);
          v103 = v22;
          v104[0] = *(_OWORD *)(v20 + 240);
          *(_OWORD *)((char *)v104 + 9) = *(_OWORD *)(v20 + 249);
          v23 = *(_OWORD *)(v20 + 160);
          v98 = *(_OWORD *)(v20 + 144);
          v24 = *(_OWORD *)(v20 + 176);
          v25 = *(_OWORD *)(v20 + 192);
          v99 = v23;
          v100 = v24;
          v101 = v25;
          v26 = *(_OWORD *)(v20 + 96);
          v94 = *(_OWORD *)(v20 + 80);
          v95 = v26;
          v27 = *(_OWORD *)(v20 + 128);
          v96 = *(_OWORD *)(v20 + 112);
          v97 = v27;
          v28 = *(_OWORD *)(v20 + 48);
          v91 = *(_OWORD *)(v20 + 32);
          v92 = v28;
          v93 = *(_OWORD *)(v20 + 64);
          v29 = v21 - 1;
          v30 = 272;
          if ((v91 & 1) != 0)
            goto LABEL_11;
LABEL_9:
          v31 = v93;
          sub_1A55DC014((uint64_t)&v91);
          v32 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v33 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v32);
          swift_bridgeObjectRelease();
          if ((v33 & 1) != 0)
          {
            swift_bridgeObjectRelease_n();
            sub_1A55DC110((uint64_t)&v91);
            v88 = *v19;
            v45 = sub_1A55F391C(a3);
            v46 = *(_QWORD *)(v45 + 16);
            if (v46)
            {
              v47 = (uint64_t *)(v45 + 56);
              do
              {
                v48 = *(v47 - 2);
                if (v48 >> 62 == 3)
                {
                  v49 = *(v47 - 3);
                  v51 = *(v47 - 1);
                  v50 = *v47;
                  sub_1A54E4334(v49, *(v47 - 2), SBYTE4(v48));
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v51) & 1) != 0
                    && (v90 = v88,
                        v89 = v89 & 0xFFFFFF0000000000 | v48 & 0xFFFFFFFFFFLL,
                        MessageIdentifierSet.contains(_:)((uint64_t)&v90, v49, v89),
                        (v52 & 1) != 0)
                    && *(_QWORD *)(v50 + 16) == 1)
                  {
                    v82 = *(_DWORD *)(v50 + 32);
                    sub_1A55CAA00(v49, v48);
                    if (!v82)
                    {
                      swift_bridgeObjectRelease();
                      goto LABEL_4;
                    }
                  }
                  else
                  {
                    sub_1A55CAA00(v49, v48);
                  }
                }
                v47 += 4;
                --v46;
              }
              while (v46);
            }
            result = swift_bridgeObjectRelease();
            v18 = v87 + v31;
            if (__CFADD__(v87, v31))
            {
              __break(1u);
              return result;
            }
            __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
            MessageIdentifierSet.insert(_:)();
            v16 = v83;
          }
          else
          {
            sub_1A55DC110((uint64_t)&v91);
LABEL_11:
            while (v29)
            {
              v34 = *(_OWORD *)(v20 + v30);
              v35 = *(_OWORD *)(v20 + v30 + 32);
              v92 = *(_OWORD *)(v20 + v30 + 16);
              v93 = v35;
              v91 = v34;
              v36 = *(_OWORD *)(v20 + v30 + 48);
              v37 = *(_OWORD *)(v20 + v30 + 64);
              v38 = *(_OWORD *)(v20 + v30 + 96);
              v96 = *(_OWORD *)(v20 + v30 + 80);
              v97 = v38;
              v94 = v36;
              v95 = v37;
              v39 = *(_OWORD *)(v20 + v30 + 112);
              v40 = *(_OWORD *)(v20 + v30 + 128);
              v41 = *(_OWORD *)(v20 + v30 + 160);
              v100 = *(_OWORD *)(v20 + v30 + 144);
              v101 = v41;
              v99 = v40;
              v98 = v39;
              v42 = *(_OWORD *)(v20 + v30 + 176);
              v43 = *(_OWORD *)(v20 + v30 + 192);
              v44 = *(_OWORD *)(v20 + v30 + 208);
              *(_OWORD *)((char *)v104 + 9) = *(_OWORD *)(v20 + v30 + 217);
              v103 = v43;
              v104[0] = v44;
              v102 = v42;
              v30 += 240;
              --v29;
              if ((v91 & 1) == 0)
                goto LABEL_9;
            }
            swift_bridgeObjectRelease_n();
LABEL_4:
            v16 = v83;
            v18 = v87;
          }
        }
      }
      if (++v17 == v16)
      {
        v8 = v77;
        swift_bridgeObjectRelease();
        v54 = v105;
        v12 = v106;
        LOBYTE(v13) = v107;
        a4 = v78;
        a2 = v76;
        goto LABEL_28;
      }
    }
  }
  v54 = v10;
LABEL_28:
  v55 = sub_1A55DC7D4(0);
  v56 = v55;
  v57 = HIDWORD(v55);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B028);
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1A59ABD10;
  *(_DWORD *)(v58 + 32) = v56;
  *(_DWORD *)(v58 + 36) = v57;
  v59 = MessageIdentifierSetNonEmpty.init(set:)(v54, v12 | ((unint64_t)v13 << 32));
  if ((~v60 & 0xFF00000000) != 0)
  {
    v64 = v59;
    v65 = v60;
    v66 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v61 = sub_1A55DF4C8(a1, a2, a3, a4, v8);
    if (!v63)
    {
      v75 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797270);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(a5, 1, 1, v75);
    }
    v64 = v61;
    v65 = v62;
    v66 = v63;
  }
  v67 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797270);
  v68 = sub_1A55DF2FC((uint64_t)a5 + *(int *)(v67 + 48), v64, v65 & 0xFFFFFFFFFFLL, v66);
  v70 = v69;
  v72 = v71;
  v74 = v73;
  sub_1A54E3458(v64, v65, SBYTE4(v65));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a5 = v68;
  a5[1] = v70;
  a5[2] = v72;
  a5[3] = v74;
  return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(a5, 0, 1, v67);
}

void sub_1A55CEF70(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  unsigned int v82;
  int64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  int v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  NSObject *v98;
  int v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  int v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int64_t v112;
  int64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v130;
  unint64_t v131;
  _QWORD *v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  char v138;
  char v139;
  uint64_t v140;
  char v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  NSObject *v148;
  os_log_type_t v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  int v156;
  NSObject *v157;
  uint64_t v158;
  unint64_t v159;
  int v160;
  uint64_t v161;
  _QWORD v162[2];
  __int128 v163;
  char *v164;
  char *v165;
  int *v166;
  char *v167;
  unsigned int v168;
  unsigned int v169;
  uint64_t v170;
  _DWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  __int128 v200;
  char *i;
  char *v202;
  uint64_t v203;
  int v204;
  uint64_t v205;
  _OWORD v206[13];
  _OWORD v207[3];

  v180 = a5;
  v183 = a4;
  v190 = a1;
  v198 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799F18);
  v8 = *(_QWORD *)(v198 - 8);
  MEMORY[0x1E0C80A78](v198);
  v197 = (char *)v162 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v196 = (_QWORD *)((char *)v162 - v11);
  v178 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v178);
  v13 = (char *)v162 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  *(_QWORD *)&v200 = (char *)v162 - v15;
  v16 = sub_1A594A764();
  v181 = *(_QWORD *)(v16 - 8);
  v182 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v162 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v202 = (char *)v162 - v20;
  v21 = _s19MessageHeaderStatusOMa(0);
  MEMORY[0x1E0C80A78](v21);
  i = (char *)v162 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v162 - v24;
  v26 = _s25MessageSectionsToDownloadVMa(0);
  v27 = *(_QWORD *)(v26 - 8);
  v184 = v26;
  v185 = v27;
  MEMORY[0x1E0C80A78](v26);
  v29 = (_DWORD *)((char *)v162 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 >> 62) >= 2)
  {
    v191 = v5;
    if (a2 >> 62 != 2)
    {
      v179 = v18;
      v174 = v8;
      v175 = v13;
      v199 = a3;
      v37 = HIDWORD(a2);
      v38 = sub_1A54E3414();
      v39 = a2 & 0xFFFFFFFFFFLL;
      v40 = v190;
      MessageIdentifierSet.startIndex.getter();
      v42 = v41;
      v44 = v43;
      sub_1A54E4334(v40, a2, SBYTE4(a2));
      MessageIdentifierSet.endIndex.getter();
      if (v42 == v45 && v44 == v46)
      {
LABEL_11:
        sub_1A54E3458(v40, a2, v37);
        return;
      }
      v177 = v183 + 32;
      v166 = &v204;
      v167 = (char *)&v203 + 4;
      v164 = (char *)&v203 + 2;
      v165 = (char *)&v203 + 1;
      *(_QWORD *)&v47 = 68160003;
      v163 = v47;
      v162[1] = MEMORY[0x1E0DEE9B8] + 8;
      v188 = HIDWORD(a2);
      v189 = a2;
      v171 = v29;
      v186 = a2 & 0xFFFFFFFFFFLL;
      v187 = v38;
      while (1)
      {
        MessageIdentifierSet.subscript.getter();
        LODWORD(v202) = v206[0];
        sub_1A54E4334(v40, a2, v37);
        v51 = MessageIdentifierSet.index(_:offsetBy:)(v42, v44, 1, v40, v39);
        v194 = v52;
        v195 = v51;
        sub_1A54E3458(v40, a2, v37);
        v53 = *(_QWORD *)(v191 + 24);
        v54 = *(_QWORD *)(v53 + 16);
        if (v54)
        {
          v55 = v185;
          v56 = (*(unsigned __int8 *)(v185 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v185 + 80);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v57 = 0;
          v58 = *(_QWORD *)(v55 + 72);
          while (1)
          {
            sub_1A55034B8(v53 + v56, (uint64_t)v29, _s25MessageSectionsToDownloadVMa);
            v59 = *v29;
            sub_1A55034FC((uint64_t)v29, _s25MessageSectionsToDownloadVMa);
            if ((_DWORD)v202 == v59)
              break;
            ++v57;
            v56 += v58;
            if (v54 == v57)
            {
              swift_bridgeObjectRelease();
              goto LABEL_16;
            }
          }
          swift_bridgeObjectRelease();
          v60 = *(_QWORD *)(v191 + 24);
          if (v57 >= *(_QWORD *)(v60 + 16))
          {
            __break(1u);
            goto LABEL_69;
          }
          v61 = *(_QWORD *)(v60 + *(int *)(v184 + 24) + v56);
          v62 = *(_QWORD *)(v61 + 16);
          if (v62)
            break;
        }
LABEL_16:
        v39 = v186;
        MessageIdentifierSet.endIndex.getter();
        v44 = v194;
        v42 = v195;
        v50 = v195 == v49 && v194 == v48;
        LOBYTE(v37) = v188;
        a2 = v189;
        if (v50)
          goto LABEL_11;
      }
      *(_QWORD *)&v200 = v60 + *(int *)(v184 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v63 = 0;
      for (i = 0; ; ++i)
      {
        v64 = *(_OWORD *)(v61 + v63 + 32);
        v65 = *(_OWORD *)(v61 + v63 + 64);
        v206[1] = *(_OWORD *)(v61 + v63 + 48);
        v206[2] = v65;
        v206[0] = v64;
        v66 = *(_OWORD *)(v61 + v63 + 80);
        v67 = *(_OWORD *)(v61 + v63 + 96);
        v68 = *(_OWORD *)(v61 + v63 + 128);
        v206[5] = *(_OWORD *)(v61 + v63 + 112);
        v206[6] = v68;
        v206[3] = v66;
        v206[4] = v67;
        v69 = *(_OWORD *)(v61 + v63 + 144);
        v70 = *(_OWORD *)(v61 + v63 + 160);
        v71 = *(_OWORD *)(v61 + v63 + 192);
        v206[9] = *(_OWORD *)(v61 + v63 + 176);
        v206[10] = v71;
        v206[7] = v69;
        v206[8] = v70;
        v72 = *(_OWORD *)(v61 + v63 + 208);
        v73 = *(_OWORD *)(v61 + v63 + 224);
        v74 = *(_OWORD *)(v61 + v63 + 240);
        *(_OWORD *)((char *)v207 + 9) = *(_OWORD *)(v61 + v63 + 249);
        v206[12] = v73;
        v207[0] = v74;
        v206[11] = v72;
        sub_1A55DC014((uint64_t)v206);
        v75 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v76 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v75);
        swift_bridgeObjectRelease();
        sub_1A55DC110((uint64_t)v206);
        if ((v76 & 1) != 0)
          break;
        if ((char *)(v62 - 1) == i)
        {
LABEL_14:
          swift_bridgeObjectRelease();
LABEL_15:
          v40 = v190;
          goto LABEL_16;
        }
        v63 += 240;
      }
      swift_bridgeObjectRelease();
      if (v57 >= *(_QWORD *)(v60 + 16))
      {
LABEL_69:
        __break(1u);
      }
      else
      {
        v77 = *(_QWORD *)(v200 + v56);
        if ((unint64_t)i < *(_QWORD *)(v77 + 16))
        {
          v78 = *(_QWORD *)(v183 + 16);
          if (!v78)
            goto LABEL_15;
          v170 = v63;
          v79 = v77 + v63;
          v80 = *(_QWORD *)(v79 + 72);
          v81 = *(_DWORD *)(v79 + 80);
          v82 = *(unsigned __int8 *)(v79 + 84);
          v176 = (char *)v78;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v83 = (int64_t)v176;
          v84 = 0;
          v85 = v179;
          v173 = v80;
          v168 = v82;
          v169 = v81;
          while (v82 <= 1 && *(_DWORD *)(v177 + 8 * v84) >= v81)
          {
LABEL_36:
            if (++v84 == v83)
            {
              swift_bridgeObjectRelease();
              goto LABEL_14;
            }
          }
          v86 = *(_QWORD *)(v80 + 16);
          if (v86)
          {
            v193 = *(_DWORD *)(v177 + 8 * v84);
            v172 = v84;
            v87 = v174;
            v88 = v80 + ((*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80));
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v192 = *(_QWORD *)(v87 + 72);
            do
            {
              v89 = v196;
              sub_1A54E330C(v88, (uint64_t)v196, &qword_1EE799F18);
              v90 = v197;
              v91 = *(int *)(v198 + 48);
              v92 = (uint64_t)&v197[v91];
              *(_QWORD *)&v93 = *v89;
              v200 = v93;
              *(_QWORD *)v197 = v93;
              sub_1A54E330C((uint64_t)v89 + v91, (uint64_t)&v90[v91], &qword_1EE798F48);
              v94 = v200;
              sub_1A5510284(v92, &qword_1EE798F48);
              sub_1A5510284((uint64_t)v89, &qword_1EE799F18);
              if (v94 == v193)
              {
                v80 = v173;
                swift_bridgeObjectRelease();
                v29 = v171;
                v84 = v172;
                v85 = v179;
                v83 = (int64_t)v176;
                v82 = v168;
                v81 = v169;
                goto LABEL_36;
              }
              v88 += v192;
              --v86;
            }
            while (v86);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v29 = v171;
            v85 = v179;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v95 = v180;
          (*(void (**)(char *, uint64_t, uint64_t))(v181 + 16))(v85, v180, v182);
          sub_1A55034B8(v95, (uint64_t)v175, type metadata accessor for MailboxTaskLogger);
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          v40 = v190;
          v96 = v188;
          v97 = v189;
          sub_1A54E4334(v190, v189, v188);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54E4334(v40, v97, v96);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54E4334(v40, v97, v96);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54E4334(v40, v97, v96);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v98 = sub_1A594A74C();
          v99 = sub_1A594C018();
          if (os_log_type_enabled(v98, (os_log_type_t)v99))
          {
            v193 = v99;
            *(_QWORD *)&v200 = v98;
            v100 = swift_slowAlloc();
            v192 = swift_slowAlloc();
            v205 = v192;
            *(_DWORD *)v100 = v163;
            LODWORD(v203) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v100 + 8) = 256;
            v101 = &v175[*(int *)(v178 + 20)];
            LOBYTE(v203) = *v101;
            sub_1A594C3CC();
            *(_WORD *)(v100 + 11) = 2082;
            v102 = *((_QWORD *)v101 + 1);
            v103 = *((_QWORD *)v101 + 2);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v203 = sub_1A55791B0(v102, v103, &v205);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            *(_WORD *)(v100 + 21) = 1040;
            LODWORD(v203) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v100 + 27) = 512;
            LOWORD(v203) = *((_WORD *)v101 + 12);
            sub_1A594C3CC();
            *(_WORD *)(v100 + 31) = 2160;
            v203 = 0x786F626C69616DLL;
            sub_1A594C3CC();
            *(_WORD *)(v100 + 41) = 2085;
            v104 = *((_DWORD *)v101 + 10);
            v203 = *((_QWORD *)v101 + 4);
            v204 = v104;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v105 = sub_1A594B4A8();
            v203 = sub_1A55791B0(v105, v106, &v205);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A55034FC((uint64_t)v175, type metadata accessor for MailboxTaskLogger);
            *(_WORD *)(v100 + 51) = 1024;
            LODWORD(v203) = (_DWORD)v202;
            sub_1A594C3CC();
            *(_WORD *)(v100 + 57) = 2082;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v107 = SectionSpecifier.Part.debugDescription.getter();
            v109 = v108;
            swift_bridgeObjectRelease();
            v203 = sub_1A55791B0(v107, v109, &v205);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            LOBYTE(v107) = v188;
            v110 = v189;
            sub_1A54E3458(v40, v189, v188);
            v111 = v183;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A54E3458(v40, v110, v107);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v202 = (char *)v100;
            *(_WORD *)(v100 + 67) = 2080;
            v203 = MEMORY[0x1E0DEE9D8];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v112 = (int64_t)v176;
            sub_1A54F53B8(0, (int64_t)v176, 0);
            v113 = v112;
            v114 = 0;
            v115 = v203;
            v116 = *(_QWORD *)(v203 + 16);
            do
            {
              v117 = *(_QWORD *)(v111 + 8 * v114 + 32);
              v203 = v115;
              v118 = *(_QWORD *)(v115 + 24);
              if (v116 >= v118 >> 1)
              {
                sub_1A54F53B8(v118 > 1, v116 + 1, 1);
                v113 = (int64_t)v176;
                v111 = v183;
                v115 = v203;
              }
              ++v114;
              *(_QWORD *)(v115 + 16) = v116 + 1;
              *(_QWORD *)(v115 + 8 * v116++ + 32) = v117;
            }
            while (v113 != v114);
            swift_bridgeObjectRelease();
            v119 = (uint8_t *)v202;
            v176 = v202 + 69;
            v120 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799370);
            v121 = MEMORY[0x1A85ADDF4](v115, v120);
            v123 = v122;
            swift_release();
            v203 = sub_1A55791B0(v121, v123, &v205);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            LOBYTE(v123) = v188;
            v124 = v189;
            sub_1A54E3458(v40, v189, v188);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A54E3458(v40, v124, v123);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v125 = (void *)v200;
            _os_log_impl(&dword_1A4F90000, (os_log_t)v200, (os_log_type_t)v193, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server did not return any data for message %u, part '[%{public}s]', ranges %s", v119, 0x4Du);
            v126 = v192;
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v126, -1, -1);
            MEMORY[0x1A85B1964](v119, -1, -1);

          }
          else
          {
            sub_1A55034FC((uint64_t)v175, type metadata accessor for MailboxTaskLogger);
            sub_1A54E3458(v40, v97, v96);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A54E3458(v40, v97, v96);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A54E3458(v40, v97, v96);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A54E3458(v40, v97, v96);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          (*(void (**)(char *, uint64_t))(v181 + 8))(v179, v182);
          v127 = v191;
          v128 = *(_QWORD *)(v191 + 24);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v130 = v170;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v128 = sub_1A554B748(v128);
          if (v57 < *(_QWORD *)(v128 + 16))
          {
            v131 = v128 + *(int *)(v184 + 24);
            v132 = *(_QWORD **)(v131 + v56);
            v133 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)(v131 + v56) = v132;
            if ((v133 & 1) == 0)
            {
              v132 = sub_1A554B75C(v132);
              *(_QWORD *)(v131 + v56) = v132;
            }
            if ((unint64_t)i < v132[2])
            {
              *((_BYTE *)v132 + v130 + 86) = 1;
              *(_QWORD *)(v127 + 24) = v128;
              goto LABEL_16;
            }
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
            goto LABEL_74;
          }
LABEL_71:
          __break(1u);
          goto LABEL_72;
        }
      }
      __break(1u);
      goto LABEL_71;
    }
    v30 = v5 + 24;
    v31 = *(_QWORD *)(v5 + 24);
    v32 = *(_QWORD *)(v31 + 16);
    if (!v32)
      return;
    v199 = v30;
    v33 = (*(unsigned __int8 *)(v185 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v185 + 80);
    v34 = *(_QWORD *)(v185 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v35 = 0;
    while (1)
    {
      sub_1A55034B8(v31 + v33, (uint64_t)v29, _s25MessageSectionsToDownloadVMa);
      v36 = *v29;
      sub_1A55034FC((uint64_t)v29, _s25MessageSectionsToDownloadVMa);
      if (v36 == (_DWORD)v190)
        break;
      ++v35;
      v33 += v34;
      if (v32 == v35)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
    v134 = v199;
    if (v35 >= *(_QWORD *)(*(_QWORD *)v199 + 16))
      goto LABEL_73;
    sub_1A55034B8(*(_QWORD *)v199 + *(int *)(v184 + 20) + v33, (uint64_t)v25, _s19MessageHeaderStatusOMa);
    v135 = type metadata accessor for MessageHeader();
    v136 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56);
    v137 = (uint64_t)i;
    v136(i, 2, 3, v135);
    sub_1A55DBD84((uint64_t)v25, v137);
    v139 = v138;
    sub_1A55034FC(v137, _s19MessageHeaderStatusOMa);
    sub_1A55034FC((uint64_t)v25, _s19MessageHeaderStatusOMa);
    if ((v139 & 1) != 0)
      goto LABEL_64;
    if (v35 >= *(_QWORD *)(*(_QWORD *)v134 + 16))
    {
LABEL_74:
      __break(1u);
      return;
    }
    sub_1A55034B8(*(_QWORD *)v134 + *(int *)(v184 + 20) + v33, (uint64_t)v25, _s19MessageHeaderStatusOMa);
    v140 = (uint64_t)i;
    v136(i, 3, 3, v135);
    sub_1A55DBD84((uint64_t)v25, v140);
    v142 = v141;
    sub_1A55034FC(v140, _s19MessageHeaderStatusOMa);
    sub_1A55034FC((uint64_t)v25, _s19MessageHeaderStatusOMa);
    if ((v142 & 1) != 0)
    {
LABEL_64:
      v144 = v180;
      v143 = v181;
      v145 = v182;
      (*(void (**)(char *, uint64_t, uint64_t))(v181 + 16))(v202, v180, v182);
      v146 = v144;
      v147 = v200;
      sub_1A55034B8(v146, v200, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v148 = sub_1A594A74C();
      v149 = sub_1A594C018();
      v150 = v149;
      if (os_log_type_enabled(v148, v149))
      {
        v151 = swift_slowAlloc();
        LODWORD(i) = v150;
        v152 = v151;
        v198 = swift_slowAlloc();
        v203 = v198;
        *(_DWORD *)v152 = 68159491;
        LODWORD(v206[0]) = 2;
        v197 = (char *)v206 + 4;
        sub_1A594C3CC();
        *(_WORD *)(v152 + 8) = 256;
        v153 = v147 + *(int *)(v178 + 20);
        LOBYTE(v206[0]) = *(_BYTE *)v153;
        sub_1A594C3CC();
        *(_WORD *)(v152 + 11) = 2082;
        v154 = *(_QWORD *)(v153 + 8);
        v155 = *(_QWORD *)(v153 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        *(_QWORD *)&v206[0] = sub_1A55791B0(v154, v155, &v203);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v152 + 21) = 1040;
        LODWORD(v206[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v152 + 27) = 512;
        LOWORD(v206[0]) = *(_WORD *)(v153 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v152 + 31) = 2160;
        *(_QWORD *)&v206[0] = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v152 + 41) = 2085;
        v156 = *(_DWORD *)(v153 + 40);
        *(_QWORD *)&v206[0] = *(_QWORD *)(v153 + 32);
        DWORD2(v206[0]) = v156;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v157 = v148;
        v158 = sub_1A594B4A8();
        *(_QWORD *)&v206[0] = sub_1A55791B0(v158, v159, &v203);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v200, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v152 + 51) = 1024;
        v160 = v190;
        LODWORD(v206[0]) = v190;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v148, (os_log_type_t)i, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server did not return header data for message %u.", (uint8_t *)v152, 0x39u);
        v161 = v198;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v161, -1, -1);
        MEMORY[0x1A85B1964](v152, -1, -1);

        (*(void (**)(char *, uint64_t))(v181 + 8))(v202, v182);
      }
      else
      {
        sub_1A55034FC(v147, type metadata accessor for MailboxTaskLogger);

        (*(void (**)(char *, uint64_t))(v143 + 8))(v202, v145);
        v160 = v190;
      }
      LODWORD(v203) = v160;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      MessageIdentifierSet.insert(_:)();
      sub_1A55A298C(v35, (uint64_t)v29);
      sub_1A55034FC((uint64_t)v29, _s25MessageSectionsToDownloadVMa);
    }
  }
}

uint64_t sub_1A55D01B8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;

  sub_1A55DD6CC();
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
    return 0xFF00000000;
  v9 = 0;
  while (1)
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1A554B748(v7);
      v7 = result;
    }
    if (v9 >= *(_QWORD *)(v7 + 16))
      break;
    _s25MessageSectionsToDownloadVMa(0);
    if ((~sub_1A55D5B20(a1, a2, a3) & 0xF000000000000007) != 0)
    {
      result = 0x300000001;
      goto LABEL_11;
    }
    if (v8 == ++v9)
    {
      result = 0xFF00000000;
LABEL_11:
      *(_QWORD *)(v3 + 24) = v7;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A55D02B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  int v34;
  char *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  os_log_t v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  Class isa;
  int v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  _BOOL4 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  int v79;
  NSObject *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _DWORD *v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  NSObject *v116;
  NSObject *v117;
  os_log_type_t v118;
  int v119;
  uint64_t v120;
  char *v121;
  unint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  os_log_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  char *v133;
  uint64_t v134;
  int v135;
  NSObject *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  char *v143;
  uint64_t v144;
  char *v145;
  os_log_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  uint64_t v154[2];
  _BYTE v155[192];
  _OWORD v156[10];
  _OWORD v157[2];
  _OWORD v158[10];
  _OWORD v159[3];

  v5 = v4;
  v142 = a3;
  v151 = a2;
  v8 = _s19MessageHeaderStatusOMa(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v147);
  v141 = (uint64_t)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v136 = ((char *)&v130 - v13);
  MEMORY[0x1E0C80A78](v14);
  v144 = (uint64_t)&v130 - v15;
  MEMORY[0x1E0C80A78](v16);
  v138 = (uint64_t)&v130 - v17;
  v18 = sub_1A594A764();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v130 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v137 = (char *)&v130 - v23;
  MEMORY[0x1E0C80A78](v24);
  v148 = (char *)&v130 - v25;
  MEMORY[0x1E0C80A78](v26);
  v143 = (char *)&v130 - v27;
  v139 = _s25MessageSectionsToDownloadVMa(0);
  v146 = *(os_log_t *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v140 = (uint64_t)&v130 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v145 = (char *)&v130 - v30;
  MEMORY[0x1E0C80A78](v31);
  v33 = (int *)((char *)&v130 - v32);
  v34 = a1;
  sub_1A55D3ED8(a1, (uint64_t)v155);
  sub_1A55032A0((uint64_t)v155, (uint64_t)v156, &qword_1EE7A8CA8);
  if (sub_1A55DC20C((uint64_t)v156) == 1)
  {
    v35 = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a4, v18);
    v36 = v141;
    sub_1A55034B8(a4, v141, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_bridgeObjectRetain_n();
    v37 = sub_1A594A74C();
    v38 = sub_1A594C018();
    v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      v40 = swift_slowAlloc();
      v146 = v37;
      v41 = v40;
      v148 = (char *)swift_slowAlloc();
      v152 = (uint64_t)v148;
      *(_DWORD *)v41 = 68159747;
      LODWORD(v158[0]) = 2;
      v135 = v34;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 8) = 256;
      v42 = v36 + *(int *)(v147 + 20);
      LOBYTE(v158[0]) = *(_BYTE *)v42;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 11) = 2082;
      v149 = v19;
      v150 = v18;
      v44 = *(_QWORD *)(v42 + 8);
      v43 = *(_QWORD *)(v42 + 16);
      LODWORD(v147) = v39;
      v45 = v151;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      *(_QWORD *)&v158[0] = sub_1A55791B0(v44, v43, &v152);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 21) = 1040;
      LODWORD(v158[0]) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 27) = 512;
      LOWORD(v158[0]) = *(_WORD *)(v42 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v41 + 31) = 2160;
      *(_QWORD *)&v158[0] = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 41) = 2085;
      v46 = *(_DWORD *)(v42 + 40);
      *(_QWORD *)&v158[0] = *(_QWORD *)(v42 + 32);
      DWORD2(v158[0]) = v46;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v47 = sub_1A594B4A8();
      *(_QWORD *)&v158[0] = sub_1A55791B0(v47, v48, &v152);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v36, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v41 + 51) = 2048;
      v49 = *(_QWORD *)(v45 + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v158[0] = v49;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 61) = 1024;
      LODWORD(v158[0]) = v135;
      sub_1A594C3CC();
      v50 = v146;
      _os_log_impl(&dword_1A4F90000, v146, (os_log_type_t)v147, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Requested to download %ld sections for message %u, but we don’t have a body structure for this message.", (uint8_t *)v41, 0x43u);
      v51 = v148;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v51, -1, -1);
      MEMORY[0x1A85B1964](v41, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v35, v150);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1A55034FC(v36, type metadata accessor for MailboxTaskLogger);

      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v35, v18);
    }
  }
  else
  {
    v53 = v151;
    v141 = a4;
    v133 = v10;
    v158[2] = v156[2];
    v158[3] = v156[3];
    v158[6] = v156[6];
    v158[7] = v156[7];
    v158[4] = v156[4];
    v158[5] = v156[5];
    *(_OWORD *)((char *)v159 + 9) = *(_OWORD *)((char *)v157 + 9);
    v158[9] = v156[9];
    v159[0] = v157[0];
    v158[8] = v156[8];
    v158[0] = v156[0];
    v158[1] = v156[1];
    v54 = *(_QWORD *)(v5 + 24);
    v55 = *(_QWORD *)(v54 + 16);
    v56 = v5;
    v149 = v19;
    v150 = v18;
    v134 = v5;
    if (v55)
    {
      v57 = v34;
      v58 = v54 + ((LOBYTE(v146[10].isa) + 32) & ~(unint64_t)LOBYTE(v146[10].isa));
      isa = v146[9].isa;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      while (1)
      {
        sub_1A55034B8(v58, (uint64_t)v33, _s25MessageSectionsToDownloadVMa);
        v60 = *v33;
        sub_1A55034FC((uint64_t)v33, _s25MessageSectionsToDownloadVMa);
        if (v60 == v57)
          break;
        v58 += (uint64_t)isa;
        if (!--v55)
        {
          swift_bridgeObjectRelease();
          v19 = v149;
          v18 = v150;
          v34 = v57;
          v53 = v151;
          v56 = v134;
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      v112 = v149;
      v113 = v150;
      v114 = v137;
      v115 = v141;
      (*(void (**)(char *, uint64_t, uint64_t))(v149 + 16))(v137, v141, v150);
      v116 = v136;
      sub_1A55034B8(v115, (uint64_t)v136, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_bridgeObjectRetain_n();
      v117 = sub_1A594A74C();
      v118 = sub_1A594C018();
      v119 = v118;
      if (os_log_type_enabled(v117, v118))
      {
        v120 = swift_slowAlloc();
        v148 = (char *)swift_slowAlloc();
        v154[0] = (uint64_t)v148;
        *(_DWORD *)v120 = 68159747;
        LODWORD(v152) = 2;
        v146 = v117;
        sub_1A594C3CC();
        *(_WORD *)(v120 + 8) = 256;
        v121 = (char *)v116 + *(int *)(v147 + 20);
        LOBYTE(v152) = *v121;
        sub_1A594C3CC();
        *(_WORD *)(v120 + 11) = 2082;
        LODWORD(v147) = v119;
        v123 = *((_QWORD *)v121 + 1);
        v122 = *((_QWORD *)v121 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v152 = sub_1A55791B0(v123, v122, v154);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v120 + 21) = 1040;
        LODWORD(v152) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v120 + 27) = 512;
        LOWORD(v152) = *((_WORD *)v121 + 12);
        sub_1A594C3CC();
        *(_WORD *)(v120 + 31) = 2160;
        v152 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v120 + 41) = 2085;
        v124 = *((_DWORD *)v121 + 10);
        v152 = *((_QWORD *)v121 + 4);
        v153 = v124;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v125 = sub_1A594B4A8();
        v152 = sub_1A55791B0(v125, v126, v154);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v136, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v120 + 51) = 2048;
        v127 = *(_QWORD *)(v151 + 16);
        swift_bridgeObjectRelease();
        v152 = v127;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v120 + 61) = 1024;
        LODWORD(v152) = v57;
        sub_1A594C3CC();
        v128 = v146;
        _os_log_impl(&dword_1A4F90000, v146, (os_log_type_t)v147, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Requested to download %ld sections for message %u -- but sections for this message have already been added.", (uint8_t *)v120, 0x43u);
        v129 = v148;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v129, -1, -1);
        MEMORY[0x1A85B1964](v120, -1, -1);
        sub_1A55DC248((uint64_t)v155);

        return (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v137, v150);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1A55DC248((uint64_t)v155);
        sub_1A55034FC((uint64_t)v116, type metadata accessor for MailboxTaskLogger);

        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v114, v113);
      }
    }
    else
    {
LABEL_9:
      v61 = v19;
      v62 = v143;
      v63 = v141;
      v64 = v18;
      v137 = *(char **)(v19 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v137)(v143, v141, v18);
      v65 = v138;
      sub_1A55034B8(v63, v138, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v66 = v53;
      swift_bridgeObjectRetain_n();
      v67 = sub_1A594A74C();
      v68 = sub_1A594C030();
      v136 = v67;
      v132 = v68;
      v69 = os_log_type_enabled(v67, v68);
      v135 = v34;
      if (v69)
      {
        v70 = swift_slowAlloc();
        v131 = swift_slowAlloc();
        v154[0] = v131;
        *(_DWORD *)v70 = 68159747;
        LODWORD(v152) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v70 + 8) = 256;
        v71 = v65 + *(int *)(v147 + 20);
        LOBYTE(v152) = *(_BYTE *)v71;
        sub_1A594C3CC();
        *(_WORD *)(v70 + 11) = 2082;
        v72 = v66;
        v74 = *(_QWORD *)(v71 + 8);
        v73 = *(_QWORD *)(v71 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v152 = sub_1A55791B0(v74, v73, v154);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v70 + 21) = 1040;
        LODWORD(v152) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v70 + 27) = 512;
        LOWORD(v152) = *(_WORD *)(v71 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v70 + 31) = 2160;
        v152 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v70 + 41) = 2085;
        v75 = *(_DWORD *)(v71 + 40);
        v152 = *(_QWORD *)(v71 + 32);
        v153 = v75;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v76 = sub_1A594B4A8();
        v152 = sub_1A55791B0(v76, v77, v154);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v65, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v70 + 51) = 2048;
        v78 = *(_QWORD *)(v72 + 16);
        swift_bridgeObjectRelease();
        v152 = v78;
        v66 = v72;
        v56 = v134;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v70 + 61) = 1024;
        v79 = v135;
        LODWORD(v152) = v135;
        sub_1A594C3CC();
        v80 = v136;
        _os_log_impl(&dword_1A4F90000, v136, (os_log_type_t)v132, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Requested to download %ld sections for message %u.", (uint8_t *)v70, 0x43u);
        v81 = v131;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v81, -1, -1);
        v82 = v70;
        v63 = v141;
        MEMORY[0x1A85B1964](v82, -1, -1);

        v83 = v150;
        v84 = *(uint64_t (**)(char *, uint64_t))(v149 + 8);
        v85 = v84(v143, v150);
      }
      else
      {
        v79 = v34;
        swift_bridgeObjectRelease();
        sub_1A55034FC(v65, type metadata accessor for MailboxTaskLogger);

        swift_bridgeObjectRelease();
        v84 = *(uint64_t (**)(char *, uint64_t))(v61 + 8);
        v85 = v84(v62, v64);
        v83 = v64;
      }
      v86 = (uint64_t)v133;
      v87 = v142;
      if (!*(_QWORD *)(v66 + 16))
      {
        LODWORD(v154[0]) = v79;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        v85 = MessageIdentifierSet.insert(_:)();
      }
      MEMORY[0x1E0C80A78](v85);
      *(&v130 - 4) = (uint64_t)v158;
      *(&v130 - 3) = v56;
      *(&v130 - 2) = v63;
      v88 = v63;
      v89 = sub_1A55CD19C((void (*)(_QWORD *__return_ptr, uint64_t *))sub_1A55DC22C, (uint64_t)(&v130 - 6), v66);
      v90 = type metadata accessor for MessageHeader();
      if ((v87 & 1) != 0)
        v91 = 2;
      else
        v91 = 1;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v86, v91, 3, v90);
      v92 = v139;
      v93 = v145;
      sub_1A55034B8(v86, (uint64_t)&v145[*(int *)(v139 + 20)], _s19MessageHeaderStatusOMa);
      *v93 = v79;
      *(_QWORD *)((char *)v93 + *(int *)(v92 + 24)) = v89;
      *(_QWORD *)((char *)v93 + *(int *)(v92 + 28)) = MEMORY[0x1E0DEE9D8];
      ((void (*)(char *, uint64_t, uint64_t))v137)(v148, v88, v83);
      v94 = v144;
      sub_1A55034B8(v88, v144, type metadata accessor for MailboxTaskLogger);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v95 = sub_1A594A74C();
      v96 = sub_1A594C030();
      v97 = v96;
      if (os_log_type_enabled(v95, v96))
      {
        v98 = swift_slowAlloc();
        v151 = swift_slowAlloc();
        v154[0] = v151;
        *(_DWORD *)v98 = 68160003;
        LODWORD(v152) = 2;
        LODWORD(v143) = v97;
        sub_1A594C3CC();
        *(_WORD *)(v98 + 8) = 256;
        v99 = v94 + *(int *)(v147 + 20);
        LOBYTE(v152) = *(_BYTE *)v99;
        sub_1A594C3CC();
        *(_WORD *)(v98 + 11) = 2082;
        v101 = *(_QWORD *)(v99 + 8);
        v100 = *(_QWORD *)(v99 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v152 = sub_1A55791B0(v101, v100, v154);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v98 + 21) = 1040;
        LODWORD(v152) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v98 + 27) = 512;
        LOWORD(v152) = *(_WORD *)(v99 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v98 + 31) = 2160;
        v152 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v98 + 41) = 2085;
        v102 = *(_DWORD *)(v99 + 40);
        v152 = *(_QWORD *)(v99 + 32);
        v153 = v102;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v103 = sub_1A594B4A8();
        v152 = sub_1A55791B0(v103, v104, v154);
        sub_1A594C3CC();
        v105 = v134;
        swift_bridgeObjectRelease();
        sub_1A55034FC(v144, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v98 + 51) = 2048;
        v106 = v89[2];
        swift_bridgeObjectRelease();
        v152 = v106;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v98 + 61) = 1024;
        LODWORD(v152) = v135;
        v86 = (uint64_t)v133;
        sub_1A594C3CC();
        *(_WORD *)(v98 + 67) = 1024;
        v93 = v145;
        LODWORD(v152) = v142 & 1;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v95, (os_log_type_t)v143, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Adding %ld sections for message %u. Downloading message headers: %{BOOL}d", (uint8_t *)v98, 0x49u);
        v107 = v151;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v107, -1, -1);
        MEMORY[0x1A85B1964](v98, -1, -1);

        (*(void (**)(char *, uint64_t))(v149 + 8))(v148, v150);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1A55034FC(v94, type metadata accessor for MailboxTaskLogger);

        swift_bridgeObjectRelease();
        v84(v148, v83);
        v105 = v134;
      }
      v108 = v140;
      sub_1A55034B8((uint64_t)v93, v140, _s25MessageSectionsToDownloadVMa);
      v109 = *(_QWORD *)(v105 + 24);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v109 = sub_1A54F0548(0, *(_QWORD *)(v109 + 16) + 1, 1, v109);
      v111 = *(_QWORD *)(v109 + 16);
      v110 = *(_QWORD *)(v109 + 24);
      if (v111 >= v110 >> 1)
        v109 = sub_1A54F0548(v110 > 1, v111 + 1, 1, v109);
      *(_QWORD *)(v109 + 16) = v111 + 1;
      sub_1A54E3394(v108, v109+ ((LOBYTE(v146[10].isa) + 32) & ~(unint64_t)LOBYTE(v146[10].isa))+ (unint64_t)v146[9].isa * v111, _s25MessageSectionsToDownloadVMa);
      sub_1A55DC248((uint64_t)v155);
      *(_QWORD *)(v105 + 24) = v109;
      sub_1A55034FC((uint64_t)v93, _s25MessageSectionsToDownloadVMa);
      return sub_1A55034FC(v86, _s19MessageHeaderStatusOMa);
    }
  }
}

uint64_t sub_1A55D1584(__int128 *a1, __int128 *a2)
{
  char v3;
  _BYTE v5[184];
  _QWORD v6[23];
  _QWORD v7[23];
  __int128 v8[11];
  __int128 v9[11];
  _BYTE v10[184];

  sub_1A55D86E0(a1, (uint64_t)v8);
  sub_1A55D86E0(a2, (uint64_t)v9);
  sub_1A55D86E0(v8, (uint64_t)v10);
  if (sub_1A5529F68((uint64_t)v10) == 1)
  {
    sub_1A55D86E0(v9, (uint64_t)v7);
    v3 = sub_1A5529F68((uint64_t)v7) == 1;
  }
  else
  {
    sub_1A55DBFD8(v10, v6);
    sub_1A55D86E0(v9, (uint64_t)v5);
    if (sub_1A5529F68((uint64_t)v5) == 1)
    {
      v3 = 0;
    }
    else
    {
      sub_1A55DBFD8(v5, v7);
      sub_1A55DC438((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF274);
      sub_1A55DC438((uint64_t)v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF274);
      v3 = static MessageAttribute.BodyStructure.__derived_enum_equals(_:_:)(v6, v7);
      sub_1A55DC438((uint64_t)v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
      sub_1A55DC438((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
    }
  }
  return v3 & 1;
}

uint64_t sub_1A55D1690(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t result;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  _QWORD v37[24];
  _BYTE v38[184];
  _BYTE v39[184];
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  char v43;
  unsigned int v44;
  char v45;
  unsigned int v46;
  char v47;

  v36 = a6;
  v12 = _s25MessageSectionsToDownloadVMa(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (int *)((char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A55032A0(a1 + 8, (uint64_t)&v41, &qword_1EE795BE8);
  result = sub_1A55032A0((uint64_t)&v41, (uint64_t)&v44, &qword_1EE795BE8);
  if ((v45 & 1) == 0)
  {
    v35 = a5;
    v17 = v44;
    sub_1A55032A0(a1 + 208, (uint64_t)v38, &qword_1EE7A03D0);
    sub_1A55032A0(a1 + 540, (uint64_t)&v40, &qword_1EE796310);
    sub_1A55032A0((uint64_t)v38, (uint64_t)v39, &qword_1EE7A03D0);
    if (sub_1A5529F68((uint64_t)v39) == 1)
    {
      result = sub_1A55032A0((uint64_t)&v40, (uint64_t)&v42, &qword_1EE796310);
      if ((v43 & 1) == 0)
        return sub_1A55D2044(v17, v42, a2, a3, a4, v35, (uint64_t)v36);
    }
    else
    {
      sub_1A55DBFD8(v39, &v42);
      result = sub_1A55032A0((uint64_t)&v40, (uint64_t)&v46, &qword_1EE796310);
      if ((v47 & 1) == 0)
      {
        v25 = v46;
        sub_1A55032A0((uint64_t)v38, (uint64_t)v37, &qword_1EE7A03D0);
        sub_1A55DC438((uint64_t)v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
        sub_1A55D195C(v17, &v42, v25, a2, a3, a4, v35, (uint64_t)v36);
        return sub_1A55DC438((uint64_t)v38, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524104);
      }
    }
    v18 = *(_QWORD *)(a1 + 200);
    v37[0] = v18;
    v19 = *(_QWORD *)(v6 + 24);
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v34 = v18;
      v35 = v6;
      v21 = v19 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
      v22 = *(_QWORD *)(v13 + 72);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v23 = 0;
      while (1)
      {
        sub_1A55034B8(v21, (uint64_t)v15, _s25MessageSectionsToDownloadVMa);
        v24 = *v15;
        sub_1A55034FC((uint64_t)v15, _s25MessageSectionsToDownloadVMa);
        if (v17 == v24)
          break;
        ++v23;
        v21 += v22;
        if (v20 == v23)
          return swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
      v27 = v34;
      v26 = v35;
      v28 = *(_QWORD *)(v34 + 16);
      if (v28)
      {
        v29 = *(_QWORD *)(type metadata accessor for MessageData.BodySection() - 8);
        v30 = v27 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
        v31 = *(_QWORD *)(v29 + 72);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v32 = v36;
        do
        {
          sub_1A55D2708(v30, v26, v23, v32);
          v30 += v31;
          --v28;
        }
        while (v28);
        return sub_1A54F81BC((uint64_t)v37);
      }
    }
  }
  return result;
}

__n128 sub_1A55D195C(unsigned int a1, const void *a2, unsigned int a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *i;
  unint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  __n128 result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  _BYTE *v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _BYTE v64[4];
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _BYTE *v73;
  _BYTE *v74;
  uint64_t v75;
  _BYTE *v76;
  unsigned int v77;
  __int128 v78[11];
  _OWORD v79[10];
  __n128 v80[2];
  _BYTE v81[184];
  _BYTE v82[192];

  v77 = a1;
  v69 = a8;
  v70 = (uint64_t)a2;
  sub_1A55DBFD8(a2, v81);
  sub_1A55DBFD8(v81, v82);
  v67 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v67);
  v73 = &v64[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v71 = sub_1A594A764();
  v75 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v74 = &v64[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = _s25MessageSectionsToDownloadVMa(0);
  v68 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v76 = &v64[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v16 = sub_1A55DC4D0(a4, a6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v16[2];
  if (!v17)
    goto LABEL_18;
  v65 = a3;
  v66 = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v72 = v16;
  for (i = v16 + 7; ; i += 4)
  {
    v19 = *(i - 2);
    if (!(v19 >> 62))
    {
      v20 = *(i - 3);
      LODWORD(v79[0]) = v77;
      sub_1A54E4334(v20, v19, SBYTE4(v19));
      sub_1A54E3414();
      a6 = a6 & 0xFFFFFF0000000000 | v19 & 0xFFFFFFFFFFLL;
      MessageIdentifierSet.contains(_:)((uint64_t)v79, v20, a6);
      v22 = v21;
      sub_1A55CAA00(v20, v19);
      if ((v22 & 1) != 0)
        break;
    }
    if (!--v17)
    {
      swift_bridgeObjectRelease_n();
      return result;
    }
  }
  swift_bridgeObjectRelease_n();
  v24 = v66;
  v25 = *(_QWORD *)(v66 + 16);
  v26 = *(_QWORD *)(v25 + 16);
  v27 = v74;
  v28 = v75;
  v29 = (uint64_t)v73;
  if (!v26)
  {
LABEL_10:
    v32 = *(_QWORD *)(v66 + 24);
    v33 = *(_QWORD *)(v32 + 16);
    if (!v33)
    {
LABEL_15:
      v38 = v69;
      v39 = v71;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v28 + 16))(v27, v69, v71);
      sub_1A55034B8(v38, v29, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v40 = v27;
      v41 = sub_1A594A74C();
      v42 = sub_1A594C030();
      v43 = v42;
      if (os_log_type_enabled(v41, v42))
      {
        v44 = swift_slowAlloc();
        v76 = (_BYTE *)swift_slowAlloc();
        *(_QWORD *)&v78[0] = v76;
        *(_DWORD *)v44 = 68159491;
        LODWORD(v79[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v44 + 8) = 256;
        v45 = v29 + *(int *)(v67 + 20);
        LOBYTE(v79[0]) = *(_BYTE *)v45;
        sub_1A594C3CC();
        *(_WORD *)(v44 + 11) = 2082;
        LODWORD(v73) = v43;
        v46 = *(_QWORD *)(v45 + 8);
        v47 = *(_QWORD *)(v45 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        *(_QWORD *)&v79[0] = sub_1A55791B0(v46, v47, (uint64_t *)v78);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 21) = 1040;
        LODWORD(v79[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v44 + 27) = 512;
        LOWORD(v79[0]) = *(_WORD *)(v45 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v44 + 31) = 2160;
        *(_QWORD *)&v79[0] = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v44 + 41) = 2085;
        v48 = *(_DWORD *)(v45 + 40);
        *(_QWORD *)&v79[0] = *(_QWORD *)(v45 + 32);
        DWORD2(v79[0]) = v48;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v49 = sub_1A594B4A8();
        *(_QWORD *)&v79[0] = sub_1A55791B0(v49, v50, (uint64_t *)v78);
        sub_1A594C3CC();
        v24 = v66;
        swift_bridgeObjectRelease();
        sub_1A55034FC(v29, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v44 + 51) = 1024;
        LODWORD(v79[0]) = v77;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v41, (os_log_type_t)v73, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received body structure for message %u.", (uint8_t *)v44, 0x39u);
        v51 = v76;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v51, -1, -1);
        MEMORY[0x1A85B1964](v44, -1, -1);

        (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v74, v71);
      }
      else
      {
        sub_1A55034FC(v29, type metadata accessor for MailboxTaskLogger);

        (*(void (**)(_BYTE *, uint64_t))(v28 + 8))(v40, v39);
      }
      v52 = *(_QWORD **)(v24 + 16);
      sub_1A55DC438(v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v52 = sub_1A54F055C(0, v52[2] + 1, 1, v52);
      v54 = v52[2];
      v53 = v52[3];
      if (v54 >= v53 >> 1)
        v52 = sub_1A54F055C((_QWORD *)(v53 > 1), v54 + 1, 1, v52);
      sub_1A55DBFD8(v82, v78);
      nullsub_1(v78);
      *(_QWORD *)&v79[0] = __PAIR64__(v65, v77);
      sub_1A55D86E0(v78, (uint64_t)v79 + 8);
      v52[2] = v54 + 1;
      v55 = &v52[24 * v54];
      v56 = v79[3];
      v57 = v79[0];
      v58 = v79[1];
      *((_OWORD *)v55 + 4) = v79[2];
      *((_OWORD *)v55 + 5) = v56;
      *((_OWORD *)v55 + 2) = v57;
      *((_OWORD *)v55 + 3) = v58;
      v59 = v79[7];
      v61 = v79[4];
      v60 = v79[5];
      *((_OWORD *)v55 + 8) = v79[6];
      *((_OWORD *)v55 + 9) = v59;
      *((_OWORD *)v55 + 6) = v61;
      *((_OWORD *)v55 + 7) = v60;
      v62 = v79[9];
      result = v80[0];
      v63 = v79[8];
      *(__n128 *)((char *)v55 + 201) = *(__n128 *)((char *)v80 + 9);
      *((_OWORD *)v55 + 11) = v62;
      *((__n128 *)v55 + 12) = result;
      *((_OWORD *)v55 + 10) = v63;
      *(_QWORD *)(v24 + 16) = v52;
      return result;
    }
    v34 = v32 + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80));
    v35 = *(_QWORD *)(v68 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v36 = (int *)v76;
    while (1)
    {
      sub_1A55034B8(v34, (uint64_t)v36, _s25MessageSectionsToDownloadVMa);
      v37 = *v36;
      sub_1A55034FC((uint64_t)v36, _s25MessageSectionsToDownloadVMa);
      if (v37 == v77)
        break;
      v34 += v35;
      if (!--v33)
      {
        swift_bridgeObjectRelease();
        v24 = v66;
        v27 = v74;
        v28 = v75;
        v29 = (uint64_t)v73;
        goto LABEL_15;
      }
    }
LABEL_18:
    swift_bridgeObjectRelease();
    return result;
  }
  v30 = (int *)(v25 + 32);
  while (1)
  {
    v31 = *v30;
    v30 += 48;
    if (v31 == v77)
      return result;
    if (!--v26)
      goto LABEL_10;
  }
}

uint64_t sub_1A55D2044(unsigned int a1, unsigned int a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *i;
  unint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  int *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  _BYTE *v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  _OWORD *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE v65[12];
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _BYTE *v75;
  _BYTE *v76;
  unsigned int v77;
  __int128 v78[11];
  _OWORD v79[10];
  _OWORD v80[3];

  v71 = a7;
  v77 = a1;
  v68 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v68);
  v75 = &v65[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_1A594A764();
  v72 = *(_QWORD *)(v13 - 8);
  v73 = v13;
  MEMORY[0x1E0C80A78](v13);
  v76 = &v65[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = _s25MessageSectionsToDownloadVMa(0);
  v69 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v70 = (int *)&v65[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v17 = sub_1A55DC4D0(a3, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v17[2];
  if (!v18)
    return swift_bridgeObjectRelease();
  v66 = a2;
  v67 = v7;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v74 = v17;
  for (i = v17 + 7; ; i += 4)
  {
    v20 = *(i - 2);
    if (v20 >> 62 == 1)
    {
      v21 = *(i - 3);
      LODWORD(v79[0]) = v77;
      sub_1A54E4334(v21, v20, SBYTE4(v20));
      sub_1A54E3414();
      a4 = a4 & 0xFFFFFF0000000000 | v20 & 0xFFFFFFFFFFLL;
      MessageIdentifierSet.contains(_:)((uint64_t)v79, v21, a4);
      v23 = v22;
      sub_1A55CAA00(v21, v20);
      if ((v23 & 1) != 0)
        break;
    }
    if (!--v18)
      return swift_bridgeObjectRelease_n();
  }
  result = swift_bridgeObjectRelease_n();
  v25 = v67;
  v26 = *(_QWORD *)(v67 + 16);
  v27 = *(_QWORD *)(v26 + 16);
  v29 = (uint64_t)v75;
  v28 = v76;
  if (!v27)
  {
LABEL_10:
    v32 = *(_QWORD *)(v67 + 24);
    v33 = *(_QWORD *)(v32 + 16);
    if (!v33)
    {
LABEL_15:
      v38 = v71;
      v39 = v72;
      v40 = v73;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v72 + 16))(v28, v71, v73);
      sub_1A55034B8(v38, v29, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v41 = sub_1A594A74C();
      v42 = sub_1A594C030();
      v43 = v42;
      if (os_log_type_enabled(v41, v42))
      {
        v44 = swift_slowAlloc();
        v75 = (_BYTE *)swift_slowAlloc();
        *(_QWORD *)&v78[0] = v75;
        *(_DWORD *)v44 = 68159491;
        LODWORD(v79[0]) = 2;
        LODWORD(v74) = v43;
        sub_1A594C3CC();
        *(_WORD *)(v44 + 8) = 256;
        v45 = v29 + *(int *)(v68 + 20);
        LOBYTE(v79[0]) = *(_BYTE *)v45;
        sub_1A594C3CC();
        *(_WORD *)(v44 + 11) = 2082;
        v46 = *(_QWORD *)(v45 + 8);
        v47 = *(_QWORD *)(v45 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        *(_QWORD *)&v79[0] = sub_1A55791B0(v46, v47, (uint64_t *)v78);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 21) = 1040;
        LODWORD(v79[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v44 + 27) = 512;
        LOWORD(v79[0]) = *(_WORD *)(v45 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v44 + 31) = 2160;
        *(_QWORD *)&v79[0] = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v44 + 41) = 2085;
        v48 = *(_DWORD *)(v45 + 40);
        *(_QWORD *)&v79[0] = *(_QWORD *)(v45 + 32);
        DWORD2(v79[0]) = v48;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v49 = sub_1A594B4A8();
        *(_QWORD *)&v79[0] = sub_1A55791B0(v49, v50, (uint64_t *)v78);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v29, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v44 + 51) = 1024;
        LODWORD(v79[0]) = v77;
        v25 = v67;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v41, (os_log_type_t)v74, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received body structure for message %u.", (uint8_t *)v44, 0x39u);
        v51 = v75;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v51, -1, -1);
        MEMORY[0x1A85B1964](v44, -1, -1);

        (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v76, v73);
      }
      else
      {
        sub_1A55034FC(v29, type metadata accessor for MailboxTaskLogger);

        (*(void (**)(_BYTE *, uint64_t))(v39 + 8))(v28, v40);
      }
      v52 = *(_QWORD **)(v25 + 16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v52 = sub_1A54F055C(0, v52[2] + 1, 1, v52);
      v54 = v52[2];
      v53 = v52[3];
      if (v54 >= v53 >> 1)
        v52 = sub_1A54F055C((_QWORD *)(v53 > 1), v54 + 1, 1, v52);
      sub_1A55D935C((uint64_t)v78);
      *(_QWORD *)&v79[0] = __PAIR64__(v66, v77);
      result = sub_1A55D86E0(v78, (uint64_t)v79 + 8);
      v52[2] = v54 + 1;
      v55 = &v52[24 * v54];
      v56 = v79[3];
      v57 = v79[0];
      v58 = v79[1];
      v55[4] = v79[2];
      v55[5] = v56;
      v55[2] = v57;
      v55[3] = v58;
      v59 = v79[7];
      v61 = v79[4];
      v60 = v79[5];
      v55[8] = v79[6];
      v55[9] = v59;
      v55[6] = v61;
      v55[7] = v60;
      v63 = v79[9];
      v62 = v80[0];
      v64 = v79[8];
      *(_OWORD *)((char *)v55 + 201) = *(_OWORD *)((char *)v80 + 9);
      v55[11] = v63;
      v55[12] = v62;
      v55[10] = v64;
      *(_QWORD *)(v25 + 16) = v52;
      return result;
    }
    v34 = v32 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
    v35 = *(_QWORD *)(v69 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v36 = v70;
    while (1)
    {
      sub_1A55034B8(v34, (uint64_t)v36, _s25MessageSectionsToDownloadVMa);
      v37 = *v36;
      sub_1A55034FC((uint64_t)v36, _s25MessageSectionsToDownloadVMa);
      if (v37 == v77)
        return swift_bridgeObjectRelease();
      v34 += v35;
      if (!--v33)
      {
        swift_bridgeObjectRelease();
        v25 = v67;
        v29 = (uint64_t)v75;
        v28 = v76;
        goto LABEL_15;
      }
    }
  }
  v30 = (int *)(v26 + 32);
  while (1)
  {
    v31 = *v30;
    v30 += 48;
    if (v31 == v77)
      return result;
    if (!--v27)
      goto LABEL_10;
  }
}

uint64_t sub_1A55D2708(uint64_t a1, uint64_t a2, unint64_t a3, NSObject *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  char *v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  _QWORD *v37;
  char v38;
  uint64_t *v39;
  _QWORD *v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  int v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  os_log_t v69;
  uint64_t v70;
  uint64_t result;
  unint64_t v72;
  uint64_t i;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  os_log_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;

  v84 = sub_1A594AE60();
  v82 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v83 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v78);
  v88 = (uint64_t)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A594A764();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v89 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D48);
  MEMORY[0x1E0C80A78](v13);
  v93 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MessageData.BodyData();
  v91 = *(_QWORD *)(v15 - 8);
  v92 = v15;
  MEMORY[0x1E0C80A78](v15);
  v81 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for MessageData.BodySection();
  MEMORY[0x1E0C80A78](v90);
  v85 = (uint64_t)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v76 - v19;
  v21 = _s19MessageHeaderStatusOMa(0);
  MEMORY[0x1E0C80A78](v21);
  v80 = (uint64_t)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v76 - v24;
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v76 - v28;
  if ((a3 & 0x8000000000000000) != 0)
    goto LABEL_24;
  v97 = a2;
  a3 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a3 + 16) <= (unint64_t)v27)
    goto LABEL_25;
  v86 = v11;
  v87 = v10;
  v30 = v27;
  a2 = _s25MessageSectionsToDownloadVMa(0);
  v31 = *(_QWORD *)(a2 - 8);
  v94 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v32 = *(_QWORD *)(v31 + 72) * (_QWORD)v30;
  v33 = a3 + v94 + *(int *)(a2 + 20);
  v95 = v32;
  v96 = v30;
  v10 = (uint64_t)_s19MessageHeaderStatusOMa;
  sub_1A55034B8(v33 + v32, (uint64_t)v29, _s19MessageHeaderStatusOMa);
  v34 = type metadata accessor for MessageHeader();
  v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v79(v25, 3, 3, v34);
  sub_1A55DBD84((uint64_t)v29, (uint64_t)v25);
  v36 = v35;
  sub_1A55034FC((uint64_t)v25, _s19MessageHeaderStatusOMa);
  sub_1A55034FC((uint64_t)v29, _s19MessageHeaderStatusOMa);
  sub_1A55034B8(a1, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
  if ((v36 & 1) == 0)
  {
    sub_1A55034FC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
    goto LABEL_9;
  }
  v76 = v34;
  v37 = *(_QWORD **)v20;
  v10 = *((_QWORD *)v20 + 1);
  v38 = v20[16];
  v39 = SectionSpecifier.header.unsafeMutableAddressor();
  v77 = a2;
  v40 = (_QWORD *)*v39;
  v41 = v39[1];
  v42 = *((_BYTE *)v39 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55DC724(v41, v42);
  static SectionSpecifier.__derived_struct_equals(_:_:)(v37, v10, v38, v40, v41, v42);
  LOBYTE(v37) = v43;
  swift_bridgeObjectRelease();
  v44 = v41;
  a2 = v77;
  sub_1A55DC738(v44, v42);
  sub_1A55034FC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
  if ((v37 & 1) == 0)
  {
LABEL_9:
    v25 = (char *)v97;
    a3 = *(_QWORD *)(v97 + 24);
    result = swift_isUniquelyReferenced_nonNull_native();
    *((_QWORD *)v25 + 3) = a3;
    if ((result & 1) == 0)
      goto LABEL_26;
    while (*(_QWORD *)(a3 + 16) > (unint64_t)v96)
    {
      v20 = (char *)(a3 + v94 + v95);
      v10 = *(int *)(a2 + 24);
      a3 = *(_QWORD *)&v20[v10];
      if (!*(_QWORD *)(a3 + 16))
        return result;
      v72 = 0;
      for (i = 32; ; i += 240)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v20[v10] = a3;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          a3 = (unint64_t)sub_1A554B75C((_QWORD *)a3);
          *(_QWORD *)&v20[v10] = a3;
        }
        if (v72 >= *(_QWORD *)(a3 + 16))
          break;
        v25 = (char *)(a3 + i);
        result = sub_1A55D3050(a1, a4);
        ++v72;
        a3 = *(_QWORD *)&v20[v10];
        if (v72 == *(_QWORD *)(a3 + 16))
          return result;
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      result = sub_1A554B748(a3);
      a3 = result;
      *((_QWORD *)v25 + 3) = result;
    }
    __break(1u);
LABEL_28:
    result = sub_1A554B748(a3);
    a3 = result;
    *((_QWORD *)v25 + 3) = result;
    goto LABEL_19;
  }
  v45 = v93;
  sub_1A54E330C(a1 + *(int *)(v90 + 24), v93, &qword_1EE797D48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v45, 1, v92) == 1)
  {
    sub_1A5510284(v45, &qword_1EE797D48);
    v47 = v86;
    v46 = v87;
    v48 = v89;
    (*(void (**)(char *, NSObject *, uint64_t))(v86 + 16))(v89, a4, v87);
    v49 = (uint64_t)a4;
    v50 = v88;
    sub_1A55034B8(v49, v88, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v51 = v85;
    sub_1A55034B8(a1, v85, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
    v52 = sub_1A594A74C();
    v53 = sub_1A594C018();
    v54 = v53;
    if (os_log_type_enabled(v52, v53))
    {
      v55 = swift_slowAlloc();
      v96 = v52;
      v56 = v55;
      v97 = swift_slowAlloc();
      v100 = v97;
      *(_DWORD *)v56 = 68159491;
      LODWORD(v98) = 2;
      LODWORD(v95) = v54;
      sub_1A594C3CC();
      *(_WORD *)(v56 + 8) = 256;
      v57 = v50 + *(int *)(v78 + 20);
      LOBYTE(v98) = *(_BYTE *)v57;
      sub_1A594C3CC();
      *(_WORD *)(v56 + 11) = 2082;
      v58 = *(_QWORD *)(v57 + 8);
      v59 = *(_QWORD *)(v57 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v98 = sub_1A55791B0(v58, v59, &v100);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 21) = 1040;
      LODWORD(v98) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v56 + 27) = 512;
      LOWORD(v98) = *(_WORD *)(v57 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v56 + 31) = 2160;
      v98 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v56 + 41) = 2085;
      v60 = *(_DWORD *)(v57 + 40);
      v98 = *(_QWORD *)(v57 + 32);
      v99 = v60;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v61 = sub_1A594B4A8();
      v98 = sub_1A55791B0(v61, v62, &v100);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v88, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v56 + 51) = 2082;
      v63 = *(_QWORD *)v51;
      v64 = *(_QWORD *)(v51 + 8);
      v65 = *(unsigned __int8 *)(v51 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55DC724(v64, v65);
      v66 = SectionSpecifier.debugDescription.getter(v63, v64, v65);
      v68 = v67;
      swift_bridgeObjectRelease();
      sub_1A55DC738(v64, v65);
      v98 = sub_1A55791B0(v66, v68, &v100);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v51, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      v69 = v96;
      _os_log_impl(&dword_1A4F90000, v96, (os_log_type_t)v95, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] No header data in response for '%{public}s'", (uint8_t *)v56, 0x3Du);
      v70 = v97;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v70, -1, -1);
      MEMORY[0x1A85B1964](v56, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v89, v87);
    }
    else
    {
      sub_1A55034FC(v50, type metadata accessor for MailboxTaskLogger);
      sub_1A55034FC(v51, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);

      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v46);
    }
  }
  v20 = v81;
  sub_1A54E3394(v45, (uint64_t)v81, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodyData);
  v75 = (uint64_t)v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v83, v20, v84);
  v10 = v80;
  MessageHeader.init(data:)(v75, v80);
  v79((char *)v10, 0, 3, v76);
  v25 = (char *)v97;
  a3 = *(_QWORD *)(v97 + 24);
  result = swift_isUniquelyReferenced_nonNull_native();
  *((_QWORD *)v25 + 3) = a3;
  if ((result & 1) == 0)
    goto LABEL_28;
LABEL_19:
  if (*(_QWORD *)(a3 + 16) <= (unint64_t)v96)
  {
    __break(1u);
  }
  else
  {
    sub_1A55DC74C(v10, a3 + v94 + *(int *)(a2 + 20) + v95);
    return sub_1A55034FC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodyData);
  }
  return result;
}

uint64_t sub_1A55D3050(uint64_t a1, NSObject *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  _BYTE *v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  _QWORD *v43;
  uint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  _BYTE v52[12];
  int v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(_BYTE *, NSObject *, uint64_t, double);
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  NSObject *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68[2];

  v3 = v2;
  v6 = type metadata accessor for MessageData.BodySection();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v52[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v9);
  v57 = &v52[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v52[-v12];
  v14 = sub_1A594A764();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v59 = &v52[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = &v52[-v19];
  v65 = v3;
  LODWORD(v3) = *(_DWORD *)(v3 + 20);
  v56 = *(void (**)(_BYTE *, NSObject *, uint64_t, double))(v15 + 16);
  v56(&v52[-v19], a2, v14, v18);
  v60 = a2;
  sub_1A55034B8((uint64_t)a2, (uint64_t)v13, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v63 = a1;
  sub_1A55034B8(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
  v64 = v20;
  v21 = sub_1A594A74C();
  v22 = sub_1A594C00C();
  v23 = v22;
  v24 = os_log_type_enabled(v21, v22);
  v62 = v15;
  v61 = v3;
  v55 = v9;
  if (v24)
  {
    v25 = swift_slowAlloc();
    v58 = v14;
    v26 = v25;
    v54 = swift_slowAlloc();
    v68[0] = v54;
    *(_DWORD *)v26 = 68159747;
    LODWORD(v66) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v26 + 8) = 256;
    v27 = &v13[*(int *)(v9 + 20)];
    LOBYTE(v66) = *v27;
    sub_1A594C3CC();
    *(_WORD *)(v26 + 11) = 2082;
    v53 = v23;
    v29 = *((_QWORD *)v27 + 1);
    v28 = *((_QWORD *)v27 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v66 = sub_1A55791B0(v29, v28, v68);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 21) = 1040;
    LODWORD(v66) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v26 + 27) = 512;
    LOWORD(v66) = *((_WORD *)v27 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v26 + 31) = 2160;
    v66 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v26 + 41) = 2085;
    v30 = *((_DWORD *)v27 + 10);
    v66 = *((_QWORD *)v27 + 4);
    v67 = v30;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v31 = sub_1A594B4A8();
    v66 = sub_1A55791B0(v31, v32, v68);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v26 + 51) = 1024;
    LODWORD(v66) = v61;
    sub_1A594C3CC();
    *(_WORD *)(v26 + 57) = 2082;
    v33 = *(_QWORD *)v8;
    v34 = *((_QWORD *)v8 + 1);
    v35 = v8[16];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55DC724(v34, v35);
    v36 = SectionSpecifier.debugDescription.getter(v33, v34, v35);
    v38 = v37;
    swift_bridgeObjectRelease();
    sub_1A55DC738(v34, v35);
    v66 = sub_1A55791B0(v36, v38, v68);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
    _os_log_impl(&dword_1A4F90000, v21, (os_log_type_t)v53, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Received body section data for section '%{public}s'", (uint8_t *)v26, 0x43u);
    v39 = v54;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v39, -1, -1);
    v40 = v26;
    v41 = v58;
    MEMORY[0x1A85B1964](v40, -1, -1);

    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v62 + 8))(v64, v41);
  }
  else
  {
    sub_1A55034FC((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
    sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);

    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v15 + 8))(v64, v14);
  }
  if ((*(_BYTE *)(v65 + 54) & 1) == 0)
  {
    v43 = *(_QWORD **)v63;
    v44 = *(_QWORD *)(v63 + 8);
    v45 = *(_BYTE *)(v63 + 16);
    v46 = (_QWORD *)SectionSpecifier.init(part:kind:)(*(_QWORD *)(v65 + 24), 0, 2u);
    v48 = v47;
    v50 = v49;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    static SectionSpecifier.__derived_struct_equals(_:_:)(v43, v44, v45, v46, v48, v50);
    LOBYTE(v43) = v51;
    swift_bridgeObjectRelease();
    result = sub_1A55DC738(v48, v50);
    if ((v43 & 1) != 0)
      return sub_1A55D6744(v63, v60);
  }
  return result;
}

uint64_t sub_1A55D3980(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD v39[8];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  char *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;

  v3 = type metadata accessor for MessageHeader();
  v49 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797248);
  MEMORY[0x1E0C80A78](v40);
  v42 = (uint64_t)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s19MessageHeaderStatusOMa(0);
  MEMORY[0x1E0C80A78](v7);
  v39[5] = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v41 = (char *)v39 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v39 - v12;
  v14 = _s25MessageSectionsToDownloadVMa(0);
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v46 = (char *)v39 - v17;
  MEMORY[0x1E0C80A78](v18);
  v23 = (int *)((char *)v39 - v22);
  v26 = *(_QWORD *)(v1 + 24);
  v25 = v1 + 24;
  result = v26;
  v45 = *(_QWORD *)(v26 + 16);
  if (v45)
  {
    v48 = v21;
    v39[1] = v20;
    v39[2] = v25;
    v39[3] = v5;
    v39[4] = result;
    v27 = result + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v43 = *(_QWORD *)(v19 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v28 = 0;
    v44 = a1;
    v29 = (uint64_t)v46;
    v39[6] = v14;
    v39[7] = v13;
    do
    {
      sub_1A55034B8(v27, (uint64_t)v23, _s25MessageSectionsToDownloadVMa);
      sub_1A55034B8((uint64_t)v23 + *(int *)(v14 + 20), (uint64_t)v13, _s19MessageHeaderStatusOMa);
      v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
      v47 = v31(v13, 3, v3);
      sub_1A55034FC((uint64_t)v13, _s19MessageHeaderStatusOMa);
      v32 = *v23;
      sub_1A55034B8((uint64_t)v23, v29, _s25MessageSectionsToDownloadVMa);
      if (v32 == v44)
      {
        v33 = *(_QWORD *)(*(_QWORD *)(v29 + *(int *)(v14 + 24)) + 16);
        sub_1A55034FC(v29, _s25MessageSectionsToDownloadVMa);
        v30 = v48;
        sub_1A55034B8((uint64_t)v23, v48, _s25MessageSectionsToDownloadVMa);
        if (!v33)
        {
          v34 = v30 + *(int *)(v14 + 20);
          v35 = (uint64_t)v41;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v41, 1, 3, v3);
          v36 = v42;
          v37 = v42 + *(int *)(v40 + 48);
          sub_1A55034B8(v34, v42, _s19MessageHeaderStatusOMa);
          sub_1A55034B8(v35, v37, _s19MessageHeaderStatusOMa);
          v38 = (char *)&loc_1A55D3D08 + 4 * byte_1A59A9620[v31((char *)v36, 3, v3)];
          __asm { BR              X9 }
        }
      }
      else
      {
        sub_1A55034FC(v29, _s25MessageSectionsToDownloadVMa);
        v30 = v48;
        sub_1A55034B8((uint64_t)v23, v48, _s25MessageSectionsToDownloadVMa);
      }
      sub_1A55034FC(v30, _s25MessageSectionsToDownloadVMa);
      sub_1A55034FC((uint64_t)v23, _s25MessageSectionsToDownloadVMa);
      v29 = (uint64_t)v46;
      ++v28;
      v27 += v43;
    }
    while (v45 != v28);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A55D3ED8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _OWORD v17[10];
  _BYTE v18[25];
  _BYTE __dst[192];
  _BYTE v20[200];

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
  {
LABEL_5:
    sub_1A55DC4A4((uint64_t)__dst);
LABEL_8:
    sub_1A55032A0((uint64_t)__dst, (uint64_t)v20, &qword_1EE7A8CA8);
    return sub_1A55032A0((uint64_t)v20, a2, &qword_1EE7A8CA8);
  }
  v6 = 0;
  v7 = (_OWORD *)(v4 + 32);
  while (*(_DWORD *)v7 != (_DWORD)result)
  {
    ++v6;
    v7 += 12;
    if (v5 == v6)
      goto LABEL_5;
  }
  if (v6 < v5)
  {
    v8 = *v7;
    v9 = v7[1];
    v10 = v7[3];
    v17[2] = v7[2];
    v17[3] = v10;
    v17[0] = v8;
    v17[1] = v9;
    v11 = v7[4];
    v12 = v7[5];
    v13 = v7[7];
    v17[6] = v7[6];
    v17[7] = v13;
    v17[4] = v11;
    v17[5] = v12;
    v14 = v7[8];
    v15 = v7[9];
    v16 = v7[10];
    *(_OWORD *)&v18[9] = *(_OWORD *)((char *)v7 + 169);
    v17[9] = v15;
    *(_OWORD *)v18 = v16;
    v17[8] = v14;
    memmove(__dst, v7, 0xB9uLL);
    nullsub_1(__dst);
    sub_1A55DC368((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF274);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A55D3FC8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v3 = *a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55D405C(v3);
  swift_bridgeObjectRelease();
  return sub_1A55032A0((uint64_t)&v5, a2, &qword_1EE797258);
}

void sub_1A55D405C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unsigned int *v26;
  unsigned int v27;
  double v28;
  BOOL v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int *v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  os_log_t v52;
  NSObject *v53;
  char *v54;
  uint64_t v55;
  int v56;
  unsigned int v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  unsigned int *v62;
  NSObject *v63;
  int v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  int v86;
  _QWORD *v87;
  uint64_t v88;
  int v89;
  _QWORD *v90;
  uint64_t v91;
  int v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  os_log_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  double v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  NSObject *v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  NSObject *v126;
  os_log_type_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  unint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  unint64_t v136;
  unsigned int *v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  NSObject *v143;
  uint64_t v144;
  uint64_t v145;
  uint8_t *v146;
  uint64_t v147;
  _QWORD v148[2];
  uint64_t v149;
  int v150;
  uint8_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  NSObject *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  NSObject *v170;
  uint64_t v171;
  uint64_t v172;
  NSObject *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unsigned int v178;
  uint64_t v179;
  unsigned int *v180;
  _BYTE v181[184];
  _BYTE v182[184];
  _BYTE v183[184];
  _BYTE v184[184];
  _BYTE v185[184];
  _BYTE v186[184];
  _BYTE v187[184];
  _BYTE v188[184];
  _BYTE v189[184];
  uint64_t v190[23];
  uint64_t v191;
  uint64_t v192;
  int v193;
  _BYTE v194[184];
  _BYTE v195[184];
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  _OWORD v209[2];
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  _OWORD v223[2];
  uint64_t v224;
  int v225;
  _BYTE v226[184];
  _BYTE v227[184];
  _BYTE v228[184];
  _BYTE v229[184];
  __int128 v230[11];
  uint64_t v231;
  int v232;
  uint64_t v233;
  _BYTE v234[184];
  _BYTE v235[184];
  _BYTE v236[200];

  MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v178 = v4;
  v179 = v5;
  v7 = v6;
  v9 = v8;
  v174 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v174);
  v11 = (char *)v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v148 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v148 - v16;
  v18 = sub_1A594A764();
  v175 = *(_QWORD *)(v18 - 8);
  v176 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v148 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v173 = ((char *)v148 - v22);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v148 - v24;
  v180 = (unsigned int *)v1;
  sub_1A55D86E0((__int128 *)(v1 + 8), (uint64_t)v230);
  sub_1A55D86E0(v230, (uint64_t)v235);
  if (sub_1A5529F68((uint64_t)v235) == 1)
  {
    sub_1A55D935C((uint64_t)&v224);
  }
  else
  {
    sub_1A55DBFD8(v235, &v210);
    sub_1A55DBFD8(&v210, &v224);
    nullsub_1(&v224);
  }
  sub_1A55032A0((uint64_t)&v224, (uint64_t)v236, &qword_1EE7A03D0);
  v26 = v180;
  sub_1A55DC368((uint64_t)v180, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF274);
  if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v7) & 1) != 0)
  {
    v27 = v26[1];
    v28 = (double)v27 * 1.25;
    if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) == 0)
      goto LABEL_80;
    if (v28 <= -1.0)
      goto LABEL_81;
    if (v28 >= 4294967300.0)
      goto LABEL_82;
    v29 = __CFADD__(v27, 0x4000);
    v30 = v27 + 0x4000;
    if (v29)
      goto LABEL_83;
    if (v30 <= v28)
      v30 = v28;
    v31 = *v26;
    LOBYTE(v196) = 1;
    *((_QWORD *)&v196 + 1) = v179;
    *(_QWORD *)&v197 = __PAIR64__(v31, v178);
    *((_QWORD *)&v197 + 1) = v7;
    LODWORD(v198) = v30;
    *((_QWORD *)&v198 + 1) = MEMORY[0x1E0DEE9D8];
    LODWORD(v199) = 0;
    WORD2(v199) = 2;
    BYTE6(v199) = 0;
    sub_1A55032A0((uint64_t)v236, (uint64_t)&v199 + 8, &qword_1EE7A03D0);
    v222 = v208;
    v223[0] = v209[0];
    *(_OWORD *)((char *)v223 + 9) = *(_OWORD *)((char *)v209 + 9);
    v218 = v204;
    v219 = v205;
    v221 = v207;
    v220 = v206;
    v214 = v200;
    v215 = v201;
    v217 = v203;
    v216 = v202;
    v210 = v196;
    v211 = v197;
    v213 = v199;
    v212 = v198;
    nullsub_1(&v210);
    sub_1A55032A0((uint64_t)&v210, (uint64_t)&v224, &qword_1EE797258);
    goto LABEL_21;
  }
  sub_1A55D86E0(v230, (uint64_t)v234);
  v32 = sub_1A5529F68((uint64_t)v234);
  v177 = v7;
  v172 = v9;
  if (v32 == 1)
    goto LABEL_16;
  sub_1A55DBFD8(v234, &v210);
  sub_1A55DBFD8(&v210, &v224);
  if (sub_1A55DC41C((uint64_t)&v224) == 1)
    goto LABEL_16;
  sub_1A55DC3E0(&v224, &v233);
  sub_1A55DBFD8(&v210, v195);
  sub_1A55DC438((uint64_t)v195, sub_1A552370C);
  BodyStructure.find(_:)(v7, (uint64_t)v226);
  sub_1A55032A0((uint64_t)v226, (uint64_t)&v196, &qword_1EE796948);
  sub_1A55032A0((uint64_t)v226, (uint64_t)v227, &qword_1EE796948);
  if (sub_1A55DC41C((uint64_t)v227) == 1)
  {
    sub_1A55DC368((uint64_t)v180, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
LABEL_16:
    v34 = v175;
    v33 = v176;
    (*(void (**)(char *, uint64_t, uint64_t))(v175 + 16))(v20, v3, v176);
    sub_1A55034B8(v3, (uint64_t)v11, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v35 = v180;
    sub_1A55DC368((uint64_t)v180, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF274);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55DC368((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF274);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v36 = sub_1A594A74C();
    v37 = sub_1A594C018();
    v38 = v37;
    if (os_log_type_enabled(v36, v37))
    {
      v39 = swift_slowAlloc();
      v173 = swift_slowAlloc();
      *(_QWORD *)&v210 = v173;
      *(_DWORD *)v39 = 68159747;
      LODWORD(v224) = 2;
      v171 = (uint64_t)v36;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 8) = 256;
      v40 = &v11[*(int *)(v174 + 20)];
      LOBYTE(v224) = *v40;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 11) = 2082;
      LODWORD(v174) = v38;
      v41 = *((_QWORD *)v40 + 1);
      v42 = *((_QWORD *)v40 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v224 = sub_1A55791B0(v41, v42, (uint64_t *)&v210);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 21) = 1040;
      LODWORD(v224) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 27) = 512;
      LOWORD(v224) = *((_WORD *)v40 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v39 + 31) = 2160;
      v224 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 41) = 2085;
      v43 = *((_QWORD *)v40 + 4);
      v44 = *((_DWORD *)v40 + 10);
      v35 = v180;
      v224 = v43;
      v225 = v44;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v45 = sub_1A594B4A8();
      v224 = sub_1A55791B0(v45, v46, (uint64_t *)&v210);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v39 + 51) = 1024;
      sub_1A55DC368((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
      LODWORD(v224) = *v35;
      sub_1A594C3CC();
      sub_1A55DC368((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
      *(_WORD *)(v39 + 57) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v47 = SectionSpecifier.Part.debugDescription.getter();
      v49 = v48;
      swift_bridgeObjectRelease();
      v50 = v47;
      v7 = v177;
      v224 = sub_1A55791B0(v50, v49, (uint64_t *)&v210);
      v51 = v179;
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v52 = (os_log_t)v171;
      _os_log_impl(&dword_1A4F90000, (os_log_t)v171, (os_log_type_t)v174, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Section '[%{public}s]' not found in complete body structure.", (uint8_t *)v39, 0x43u);
      v53 = v173;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v53, -1, -1);
      MEMORY[0x1A85B1964](v39, -1, -1);

      v54 = v20;
      v55 = v51;
      (*(void (**)(char *, uint64_t))(v175 + 8))(v54, v176);
      goto LABEL_20;
    }
    sub_1A55DC368((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
    sub_1A55034FC((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
    sub_1A55DC368((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v33);
    goto LABEL_19;
  }
  sub_1A55DC3E0(v227, v228);
  sub_1A55DC3E0(v227, v194);
  sub_1A55DC3E0(v228, v229);
  if (sub_1A55DC430((uint64_t)v229) != 1)
  {
    v116 = nullsub_1(v229);
    v171 = *(_QWORD *)(v117 + 80);
    v118 = v175;
    v119 = v25;
    (*(void (**)(char *, uint64_t, uint64_t, double))(v175 + 16))(v25, v3, v176, v116);
    sub_1A55034B8(v3, (uint64_t)v17, type metadata accessor for MailboxTaskLogger);
    sub_1A55032A0((uint64_t)&v196, (uint64_t)&v231, &qword_1EE796948);
    sub_1A55DC438((uint64_t)&v231, sub_1A552370C);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v120 = (uint64_t)v180;
    sub_1A55DC368((uint64_t)v180, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF274);
    sub_1A55DC368(v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF274);
    v169 = BodyStructure.mediaType.getter();
    v170 = v121;
    v123 = v122;
    v125 = v124;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v126 = sub_1A594A74C();
    v127 = sub_1A594C030();
    v128 = v127;
    v173 = v126;
    if (os_log_type_enabled(v126, v127))
    {
      v129 = swift_slowAlloc();
      v168 = (uint64_t)v119;
      v130 = v129;
      v167 = swift_slowAlloc();
      v190[0] = v167;
      *(_DWORD *)v130 = 68160515;
      LODWORD(v192) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v130 + 8) = 256;
      v131 = &v17[*(int *)(v174 + 20)];
      LOBYTE(v192) = *v131;
      sub_1A594C3CC();
      *(_WORD *)(v130 + 11) = 2082;
      LODWORD(v174) = v128;
      v133 = *((_QWORD *)v131 + 1);
      v132 = *((_QWORD *)v131 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v192 = sub_1A55791B0(v133, v132, v190);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v130 + 21) = 1040;
      LODWORD(v192) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v130 + 27) = 512;
      LOWORD(v192) = *((_WORD *)v131 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v130 + 31) = 2160;
      v192 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v130 + 41) = 2085;
      v134 = *((_DWORD *)v131 + 10);
      v192 = *((_QWORD *)v131 + 4);
      v193 = v134;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v135 = sub_1A594B4A8();
      v192 = sub_1A55791B0(v135, v136, v190);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v17, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v130 + 51) = 1024;
      v137 = v180;
      sub_1A55DC368((uint64_t)v180, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
      LODWORD(v192) = *v137;
      v7 = v177;
      sub_1A594C3CC();
      sub_1A55DC368((uint64_t)v137, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
      *(_WORD *)(v130 + 57) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v192 = sub_1A55791B0(v169, v123, v190);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v130 + 67) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v192 = sub_1A55791B0((uint64_t)v170, v125, v190);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v130 + 77) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v138 = SectionSpecifier.Part.debugDescription.getter();
      v140 = v139;
      swift_bridgeObjectRelease();
      v141 = v138;
      v142 = v179;
      v192 = sub_1A55791B0(v141, v140, v190);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v130 + 87) = 2048;
      sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
      v192 = v171;
      sub_1A594C3CC();
      sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
      v143 = v173;
      _os_log_impl(&dword_1A4F90000, v173, (os_log_type_t)v174, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Adding '%{public}s/%{public}s' section '[%{public}s]' (%{iec-bytes}ld)", (uint8_t *)v130, 0x61u);
      v144 = v167;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v144, -1, -1);
      MEMORY[0x1A85B1964](v130, -1, -1);
      sub_1A55DC368((uint64_t)v137, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);

      sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
      v55 = v142;
      sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
      (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v168, v176);
      v35 = v137;
      goto LABEL_20;
    }
    sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
    sub_1A55DC368(v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
    sub_1A55DC368(v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
    sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
    sub_1A55034FC((uint64_t)v17, type metadata accessor for MailboxTaskLogger);
    sub_1A55DC368(v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);

    sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
    (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v176);
    v35 = (unsigned int *)v120;
LABEL_19:
    v55 = v179;
    goto LABEL_20;
  }
  v58 = nullsub_1(v229);
  v60 = v175;
  v59 = v176;
  v61 = v173;
  (*(void (**)(NSObject *, uint64_t, uint64_t, double))(v175 + 16))(v173, v3, v176, v58);
  sub_1A55034B8(v3, (uint64_t)v14, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
  sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
  v62 = v180;
  sub_1A55DC368((uint64_t)v180, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF274);
  sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55DC368((uint64_t)v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF274);
  sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v63 = sub_1A594A74C();
  v64 = sub_1A594C030();
  if (!os_log_type_enabled(v63, (os_log_type_t)v64))
  {
    sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
    sub_1A55DC368((uint64_t)v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
    sub_1A55DC368((uint64_t)v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
    sub_1A55034FC((uint64_t)v14, type metadata accessor for MailboxTaskLogger);
    sub_1A55DC368((uint64_t)v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
    sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
    sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
    swift_bridgeObjectRelease_n();
    sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);

    sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
    (*(void (**)(NSObject *, uint64_t))(v60 + 8))(v61, v59);
    v35 = v62;
    goto LABEL_19;
  }
  v150 = v64;
  v164 = v63;
  v65 = swift_slowAlloc();
  v149 = swift_slowAlloc();
  v191 = v149;
  *(_DWORD *)v65 = 68160259;
  LODWORD(v231) = 2;
  sub_1A594C3CC();
  *(_WORD *)(v65 + 8) = 256;
  v66 = &v14[*(int *)(v174 + 20)];
  LOBYTE(v231) = *v66;
  sub_1A594C3CC();
  *(_WORD *)(v65 + 11) = 2082;
  v67 = *((_QWORD *)v66 + 1);
  v68 = *((_QWORD *)v66 + 2);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v231 = sub_1A55791B0(v67, v68, &v191);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  *(_WORD *)(v65 + 21) = 1040;
  LODWORD(v231) = 2;
  sub_1A594C3CC();
  *(_WORD *)(v65 + 27) = 512;
  LOWORD(v231) = *((_WORD *)v66 + 12);
  sub_1A594C3CC();
  *(_WORD *)(v65 + 31) = 2160;
  v231 = 0x786F626C69616DLL;
  sub_1A594C3CC();
  *(_WORD *)(v65 + 41) = 2085;
  v69 = *((_QWORD *)v66 + 4);
  v70 = *((_DWORD *)v66 + 10);
  v7 = v177;
  v231 = v69;
  v232 = v70;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v71 = sub_1A594B4A8();
  v231 = sub_1A55791B0(v71, v72, &v191);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  sub_1A55034FC((uint64_t)v14, type metadata accessor for MailboxTaskLogger);
  *(_WORD *)(v65 + 51) = 1024;
  sub_1A55DC368((uint64_t)v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
  LODWORD(v231) = *v62;
  sub_1A594C3CC();
  sub_1A55DC368((uint64_t)v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
  *(_WORD *)(v65 + 57) = 2080;
  BodyStructure.mediaType.getter();
  v74 = v73;
  v76 = v75;
  swift_bridgeObjectRelease();
  v231 = sub_1A55791B0(v74, v76, &v191);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
  sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
  *(_WORD *)(v65 + 67) = 2082;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v77 = SectionSpecifier.Part.debugDescription.getter();
  v79 = v78;
  swift_bridgeObjectRelease();
  v231 = sub_1A55791B0(v77, v79, &v191);
  sub_1A594C3CC();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v151 = (uint8_t *)v65;
  *(_WORD *)(v65 + 77) = 2048;
  sub_1A55DC3E0(v194, &v192);
  nullsub_1(&v192);
  v81 = *v80;
  v35 = v62;
  v155 = *(_QWORD *)(*v80 + 16);
  if (!v155)
  {
LABEL_76:
    sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
    v145 = 0;
    v55 = v179;
    v84 = v175;
    v83 = v176;
    v85 = v164;
    goto LABEL_77;
  }
  sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
  v148[1] = v81;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v152 = v81 + 32;
  sub_1A55DC3E0((const void *)(v81 + 32), v189);
  v161 = 0;
  v82 = 1;
  v55 = v179;
  v84 = v175;
  v83 = v176;
  v85 = v164;
LABEL_26:
  sub_1A55DC3E0(v189, v190);
  v86 = sub_1A55DC430((uint64_t)v190);
  nullsub_1(v190);
  if (v86 != 1)
  {
    v115 = v87[10];
    goto LABEL_68;
  }
  v88 = *v87;
  v156 = *(_QWORD *)(*v87 + 16);
  if (!v156)
  {
    v115 = 0;
    goto LABEL_68;
  }
  sub_1A55DC438((uint64_t)v189, sub_1A552370C);
  v154 = v88;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v153 = v88 + 32;
  sub_1A55DC3E0((const void *)(v88 + 32), v187);
  v162 = 1;
  v163 = 0;
  v159 = v82;
LABEL_29:
  sub_1A55DC3E0(v187, v188);
  v89 = sub_1A55DC430((uint64_t)v188);
  nullsub_1(v188);
  if (v89 != 1)
  {
    v113 = v90[10];
    goto LABEL_62;
  }
  v91 = *v90;
  v160 = *(_QWORD *)(*v90 + 16);
  if (!v160)
  {
    v113 = 0;
    goto LABEL_62;
  }
  sub_1A55DC438((uint64_t)v187, sub_1A552370C);
  v158 = v91;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v157 = v91 + 32;
  sub_1A55DC3E0((const void *)(v91 + 32), v185);
  v165 = 1;
  v166 = 0;
  while (1)
  {
    sub_1A55DC3E0(v185, v186);
    v92 = sub_1A55DC430((uint64_t)v186);
    nullsub_1(v186);
    if (v92 != 1)
    {
      v95 = v93[10];
      goto LABEL_57;
    }
    v94 = *v93;
    v170 = *(NSObject **)(*v93 + 16);
    if (v170)
      break;
    v95 = 0;
LABEL_57:
    if (__OFADD__(v166, v95))
      goto LABEL_85;
    v166 += v95;
    if (v165 == v160)
    {
      swift_bridgeObjectRelease();
      sub_1A55DC438((uint64_t)v187, sub_1A55241F0);
      v113 = v166;
LABEL_62:
      if (__OFADD__(v163, v113))
        goto LABEL_86;
      v163 += v113;
      if (v162 != v156)
      {
        v114 = v162;
        sub_1A55DC3E0((const void *)(v153 + 184 * v162), v187);
        v162 = v114 + 1;
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      sub_1A55DC438((uint64_t)v189, sub_1A55241F0);
      v115 = v163;
LABEL_68:
      if (__OFADD__(v161, v115))
        goto LABEL_87;
      v161 += v115;
      if (v82 != v155)
      {
        sub_1A55DC3E0((const void *)(v152 + 184 * v82++), v189);
        goto LABEL_26;
      }
      sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
      swift_bridgeObjectRelease();
      sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
      v145 = v161;
LABEL_77:
      v146 = v151;
      v190[0] = v145;
      sub_1A594C3CC();
      sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
      _os_log_impl(&dword_1A4F90000, v85, (os_log_type_t)v150, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Adding multi-part '%s' section '[%{public}s]' (approx. %{iec-bytes}ld)", v146, 0x57u);
      v147 = v149;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v147, -1, -1);
      MEMORY[0x1A85B1964](v146, -1, -1);
      sub_1A55DC368((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);

      sub_1A55DC438((uint64_t)v226, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5524178);
      (*(void (**)(NSObject *, uint64_t))(v84 + 8))(v173, v83);
LABEL_20:
      v56 = sub_1A55D83C8(v7);
      v57 = *v35;
      LOBYTE(v196) = 1;
      *((_QWORD *)&v196 + 1) = v55;
      *(_QWORD *)&v197 = __PAIR64__(v57, v178);
      *((_QWORD *)&v197 + 1) = v7;
      LODWORD(v198) = v56;
      *((_QWORD *)&v198 + 1) = MEMORY[0x1E0DEE9D8];
      LODWORD(v199) = 0;
      WORD2(v199) = 2;
      BYTE6(v199) = 0;
      sub_1A55032A0((uint64_t)v236, (uint64_t)&v199 + 8, &qword_1EE7A03D0);
      v222 = v208;
      v223[0] = v209[0];
      *(_OWORD *)((char *)v223 + 9) = *(_OWORD *)((char *)v209 + 9);
      v218 = v204;
      v219 = v205;
      v221 = v207;
      v220 = v206;
      v214 = v200;
      v215 = v201;
      v217 = v203;
      v216 = v202;
      v210 = v196;
      v211 = v197;
      v213 = v199;
      v212 = v198;
      nullsub_1(&v210);
      sub_1A55032A0((uint64_t)&v210, (uint64_t)&v224, &qword_1EE797258);
      v9 = v172;
LABEL_21:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55032A0((uint64_t)&v224, v9, &qword_1EE797258);
      return;
    }
    v112 = v165;
    sub_1A55DC3E0((const void *)(v157 + 184 * v165), v185);
    v165 = v112 + 1;
  }
  sub_1A55DC438((uint64_t)v185, sub_1A552370C);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v168 = v94 + 32;
  sub_1A55DC3E0((const void *)(v94 + 32), v183);
  v95 = 0;
  v171 = 1;
  v169 = v94;
  while (1)
  {
    sub_1A55DC3E0(v183, v184);
    v96 = sub_1A55DC430((uint64_t)v184);
    nullsub_1(v184);
    v174 = v95;
    if (v96 != 1)
    {
      v101 = v97[10];
      goto LABEL_51;
    }
    v98 = *v97;
    v35 = *(unsigned int **)(*v97 + 16);
    if (v35)
      break;
    v101 = 0;
    v35 = v180;
LABEL_51:
    v110 = __OFADD__(v174, v101);
    v95 = v174 + v101;
    if (v110)
      goto LABEL_84;
    if (v171 == v170)
    {
      swift_bridgeObjectRelease();
      sub_1A55DC438((uint64_t)v185, sub_1A55241F0);
      goto LABEL_57;
    }
    v111 = (os_log_t)v171;
    sub_1A55DC3E0((const void *)(v168 + 184 * v171), v183);
    v171 = (uint64_t)&v111->isa + 1;
  }
  v99 = v98 + 32;
  sub_1A55DC438((uint64_t)v183, sub_1A552370C);
  v167 = v98;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v100 = 0;
  v101 = 0;
  while (1)
  {
    sub_1A55DC3E0((const void *)(v99 + 184 * v100), v181);
    sub_1A55DC3E0(v181, v182);
    v102 = sub_1A55DC430((uint64_t)v182);
    nullsub_1(v182);
    if (v102 == 1)
    {
      v104 = *v103;
      v105 = *(_QWORD *)(*v103 + 16);
      sub_1A55DC438((uint64_t)v181, sub_1A552370C);
      v106 = (char *)(v104 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v107 = 0;
      v108 = v105 + 1;
      while (--v108)
      {
        v7 = (uint64_t)(v106 + 184);
        sub_1A55DC3E0(v106, &v231);
        v109 = sub_1A55D85CC();
        v106 += 184;
        v110 = __OFADD__(v107, v109);
        v107 += v109;
        if (v110)
        {
          __break(1u);
          goto LABEL_76;
        }
      }
      swift_bridgeObjectRelease();
      sub_1A55DC438((uint64_t)v181, sub_1A55241F0);
      v55 = v179;
      v7 = v177;
    }
    else
    {
      v107 = v103[10];
    }
    v110 = __OFADD__(v101, v107);
    v101 += v107;
    if (v110)
      break;
    if ((unsigned int *)++v100 == v35)
    {
      swift_bridgeObjectRelease();
      sub_1A55DC438((uint64_t)v183, sub_1A55241F0);
      v35 = v180;
      v84 = v175;
      v83 = v176;
      v85 = v164;
      v82 = v159;
      goto LABEL_51;
    }
  }
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
}

uint64_t sub_1A55D5A80@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int *v7;
  int v8;
  _OWORD v10[12];
  _BYTE v11[192];

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = 0;
    v7 = (int *)(v4 + 32);
    while (1)
    {
      v8 = *v7;
      v7 += 48;
      if (v8 == a1)
        break;
      if (v5 == ++v6)
        goto LABEL_5;
    }
    sub_1A55A2780(v6, v10);
    nullsub_1(v10);
  }
  else
  {
LABEL_5:
    sub_1A55DC4A4((uint64_t)v10);
  }
  sub_1A55032A0((uint64_t)v10, (uint64_t)v11, &qword_1EE7A8CA8);
  return sub_1A55032A0((uint64_t)v11, a2, &qword_1EE7A8CA8);
}

uint64_t sub_1A55D5B20(uint64_t a1, int a2, uint64_t a3)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  int v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  BOOL v54;
  BOOL v55;
  char v56;
  uint64_t v57;
  _QWORD *v58;
  int v59;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  unint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[2];
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  int *v122;
  uint64_t v123;
  char *v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  unint64_t v134;
  _OWORD v135[11];
  char v136;
  _OWORD v137[11];
  char v138;
  _BYTE v139[184];
  uint64_t v140[23];
  __int128 v141;
  _QWORD *v142;
  _OWORD v143[2];
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  _OWORD v155[2];
  _BYTE v156[184];
  _BYTE v157[200];

  v117 = a3;
  v119 = a2;
  v131 = a1;
  v116 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v116);
  v121 = (uint64_t)v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594A764();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MessageSectionData(0);
  MEMORY[0x1E0C80A78](v9);
  v120 = (uint64_t)v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v111 - v12;
  v14 = type metadata accessor for SegmentResequencer.PopResult(0);
  MEMORY[0x1E0C80A78](v14);
  v132 = (char *)v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_1A594AE60();
  v130 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v124 = (char *)v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v129 = (char *)v111 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7985B0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for MessageSectionData.Segment(0);
  v127 = *(_QWORD *)(v22 - 8);
  v128 = (_QWORD *)v22;
  MEMORY[0x1E0C80A78](v22);
  v118 = (uint64_t)v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v123 = (uint64_t)v111 - v25;
  v26 = _s25MessageSectionsToDownloadVMa(0);
  v27 = *(int *)(v26 + 24);
  v122 = v3;
  v28 = (_QWORD *)((char *)v3 + v27);
  v29 = *(_QWORD **)((char *)v3 + v27);
  v30 = v29[2];
  if (!v30)
    return 0xF000000000000007;
  v111[0] = v26;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v114 = v5;
  v115 = v13;
  v111[1] = v9;
  v112 = v8;
  v113 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
LABEL_45:
    v29 = sub_1A554B75C(v29);
  v32 = 0;
  *v28 = v29;
  v33 = 56;
  v34 = v133;
  v126 = v30;
  while (1)
  {
    if (v30 == v32)
    {
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    v35 = (_QWORD *)*v28;
    v36 = swift_isUniquelyReferenced_nonNull_native();
    *v28 = v35;
    if ((v36 & 1) == 0)
    {
      v35 = sub_1A554B75C(v35);
      *v28 = v35;
    }
    if (v32 >= v35[2])
      goto LABEL_44;
    v134 = v32;
    v37 = v21;
    v38 = v28;
    v39 = (char *)v35 + v33;
    v40 = v132;
    sub_1A56539B4(v132);
    v41 = v130;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v40, 1, v34) == 1)
    {
      sub_1A55034FC((uint64_t)v40, type metadata accessor for SegmentResequencer.PopResult);
      v42 = v127;
      v29 = v128;
      v21 = v37;
      (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v127 + 56))(v37, 1, 1, v128);
      v43 = v131;
      v28 = v38;
      v44 = v134;
    }
    else
    {
      v45 = v34;
      v46 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
      v46(v129, v40, v45);
      if ((v39[29] & 1) != 0)
      {
        sub_1A55D935C((uint64_t)&v141);
        sub_1A55032A0((uint64_t)&v141, (uint64_t)v143, &qword_1EE798590);
        v43 = v131;
        v28 = v38;
        v21 = v37;
        v44 = v134;
      }
      else
      {
        v39[29] = 1;
        sub_1A55032A0((uint64_t)v35 + v33 + 32, (uint64_t)v140, &qword_1EE7A03D0);
        sub_1A55032A0((uint64_t)v140, (uint64_t)&v141, &qword_1EE7A03D0);
        v47 = sub_1A5529F68((uint64_t)&v141);
        v28 = v38;
        v21 = v37;
        v44 = v134;
        if (v47 == 1 || (sub_1A55DBFD8(&v141, v143), sub_1A55DC41C((uint64_t)v143) == 1))
        {
          sub_1A55DECF8((uint64_t)v143);
          v48 = v143;
        }
        else
        {
          sub_1A55DC3E0(v143, v135);
          nullsub_1(v135);
          sub_1A55032A0((uint64_t)v140, (uint64_t)v137, &qword_1EE7A03D0);
          sub_1A55DC438((uint64_t)v137, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5523694);
          v48 = v135;
        }
        sub_1A55032A0((uint64_t)v48, (uint64_t)v139, &qword_1EE796948);
        sub_1A55032A0((uint64_t)v139, (uint64_t)v157, &qword_1EE796948);
        MessageSectionData.Segment.Initial.init(bodyStructure:)((uint64_t)v157, (uint64_t)v135);
        v137[8] = v135[8];
        v137[9] = v135[9];
        v137[10] = v135[10];
        v138 = v136;
        v137[4] = v135[4];
        v137[5] = v135[5];
        v137[6] = v135[6];
        v137[7] = v135[7];
        v137[0] = v135[0];
        v137[1] = v135[1];
        v137[2] = v135[2];
        v137[3] = v135[3];
        nullsub_1(v137);
        sub_1A55032A0((uint64_t)v137, (uint64_t)v143, &qword_1EE798590);
        v43 = v131;
      }
      sub_1A55032A0((uint64_t)v143, (uint64_t)v156, &qword_1EE798590);
      v49 = *(_QWORD *)((char *)v35 + v33 + 16);
      v50 = *((unsigned __int8 *)v35 + v33 + 28);
      v125 = v125 & 0xFFFFFF0000000000 | *(unsigned int *)((char *)v35 + v33 + 24) | (v50 << 32);
      v51 = sub_1A565434C(v49, v125);
      v54 = !v50 && v53 == 2;
      v55 = v54 && (v51 | v52) == 0;
      v56 = v55;
      v57 = (uint64_t)v124;
      v46(v124, v129, v133);
      MessageSectionData.Segment.init(data:isFinal:initial:)(v57, v56, (uint64_t)v156, (uint64_t)v21);
      v42 = v127;
      v29 = v128;
      (*(void (**)(char *, _QWORD, uint64_t, _QWORD *))(v127 + 56))(v21, 0, 1, v128);
    }
    v58 = (_QWORD *)*v28;
    v59 = (*(uint64_t (**)(char *, uint64_t, _QWORD *))(v42 + 48))(v21, 1, v29);
    v30 = v126;
    if (v59 != 1)
      break;
    v32 = v44 + 1;
    sub_1A5510284((uint64_t)v21, &qword_1EE7985B0);
    v33 += 240;
    v34 = v133;
    if (v30 == v32)
      return 0xF000000000000007;
  }
  v61 = v123;
  sub_1A54E3394((uint64_t)v21, v123, type metadata accessor for MessageSectionData.Segment);
  if (v44 >= v58[2])
  {
    __break(1u);
    goto LABEL_47;
  }
  v29 = (_QWORD *)((char *)v58 + v33 - 24);
  v62 = *(_QWORD *)((char *)v58 + v33);
  v63 = *v122;
  v64 = v61;
  v65 = v118;
  sub_1A55034B8(v64, v118, type metadata accessor for MessageSectionData.Segment);
  v33 = (uint64_t)v115;
  LODWORD(v134) = v63;
  MessageSectionData.init(mailbox:message:section:segment:)(v43, v119, v63, v62, v65, (uint64_t)v115);
  if (v44 >= v58[2])
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v66 = *(_OWORD *)v29;
  v67 = *((_OWORD *)v29 + 2);
  v143[1] = *((_OWORD *)v29 + 1);
  v144 = v67;
  v143[0] = v66;
  v68 = *((_OWORD *)v29 + 3);
  v69 = *((_OWORD *)v29 + 4);
  v70 = *((_OWORD *)v29 + 6);
  v147 = *((_OWORD *)v29 + 5);
  v148 = v70;
  v145 = v68;
  v146 = v69;
  v71 = *((_OWORD *)v29 + 7);
  v72 = *((_OWORD *)v29 + 8);
  v73 = *((_OWORD *)v29 + 10);
  v151 = *((_OWORD *)v29 + 9);
  v152 = v73;
  v149 = v71;
  v150 = v72;
  v74 = *((_OWORD *)v29 + 11);
  v75 = *((_OWORD *)v29 + 12);
  v76 = *((_OWORD *)v29 + 13);
  *(_OWORD *)((char *)v155 + 9) = *(_OWORD *)((char *)v29 + 217);
  v154 = v75;
  v155[0] = v76;
  v153 = v74;
  v77 = *((_QWORD *)&v144 + 1);
  v78 = v145;
  v79 = BYTE4(v145);
  swift_bridgeObjectRetain_n();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55DC014((uint64_t)v143);
  v80 = sub_1A565434C(v77, v78 | (v79 << 32));
  v82 = v81;
  v84 = v83;
  sub_1A55DC110((uint64_t)v143);
  if (!v79 && v84 == 2 && !(v80 | v82))
  {
    sub_1A55A2660(v44, &v141);
    v29 = v142;
    v44 = *(int *)(v111[0] + 28);
    v58 = *(_QWORD **)((char *)v122 + v44);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_36:
      v86 = v58[2];
      v85 = v58[3];
      if (v86 >= v85 >> 1)
        v58 = sub_1A54F1D94((_QWORD *)(v85 > 1), v86 + 1, 1, v58);
      v58[2] = v86 + 1;
      v58[v86 + 4] = v29;
      sub_1A55DC110((uint64_t)&v141);
      *(_QWORD *)((char *)v122 + v44) = v58;
      goto LABEL_39;
    }
LABEL_48:
    v58 = sub_1A54F1D94(0, v58[2] + 1, 1, v58);
    goto LABEL_36;
  }
LABEL_39:
  v87 = v112;
  v88 = v113;
  v89 = v117;
  v90 = v114;
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v112, v117, v114);
  v91 = v121;
  sub_1A55034B8(v89, v121, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v92 = v120;
  sub_1A55034B8(v33, v120, type metadata accessor for MessageSectionData);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v93 = sub_1A594A74C();
  v94 = sub_1A594C00C();
  v95 = v94;
  if (os_log_type_enabled(v93, v94))
  {
    v96 = swift_slowAlloc();
    v133 = swift_slowAlloc();
    v140[0] = v133;
    *(_DWORD *)v96 = 68160003;
    LODWORD(v141) = 2;
    LODWORD(v132) = v95;
    sub_1A594C3CC();
    *(_WORD *)(v96 + 8) = 256;
    v97 = v91 + *(int *)(v116 + 20);
    LOBYTE(v141) = *(_BYTE *)v97;
    sub_1A594C3CC();
    *(_WORD *)(v96 + 11) = 2082;
    v99 = *(_QWORD *)(v97 + 8);
    v98 = *(_QWORD *)(v97 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    *(_QWORD *)&v141 = sub_1A55791B0(v99, v98, v140);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v96 + 21) = 1040;
    LODWORD(v141) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v96 + 27) = 512;
    LOWORD(v141) = *(_WORD *)(v97 + 24);
    sub_1A594C3CC();
    *(_WORD *)(v96 + 31) = 2160;
    *(_QWORD *)&v141 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v96 + 41) = 2085;
    v100 = *(_DWORD *)(v97 + 40);
    *(_QWORD *)&v141 = *(_QWORD *)(v97 + 32);
    DWORD2(v141) = v100;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v101 = sub_1A594B4A8();
    *(_QWORD *)&v141 = sub_1A55791B0(v101, v102, v140);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v121, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v96 + 51) = 1024;
    LODWORD(v141) = v134;
    sub_1A594C3CC();
    *(_WORD *)(v96 + 57) = 2048;
    v103 = v120;
    v104 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
    sub_1A55034FC(v103, type metadata accessor for MessageSectionData);
    *(_QWORD *)&v141 = v104;
    sub_1A594C3CC();
    *(_WORD *)(v96 + 67) = 2082;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v105 = SectionSpecifier.Part.debugDescription.getter();
    v107 = v106;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v141 = sub_1A55791B0(v105, v107, v140);
    v33 = (uint64_t)v115;
    sub_1A594C3CC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v93, (os_log_type_t)v132, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Forwarding %ld bytes for section '[%{public}s]' to the persistence.", (uint8_t *)v96, 0x4Du);
    v108 = v133;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v108, -1, -1);
    MEMORY[0x1A85B1964](v96, -1, -1);

    (*(void (**)(char *, uint64_t))(v113 + 8))(v112, v114);
  }
  else
  {
    sub_1A55034FC(v92, type metadata accessor for MessageSectionData);
    swift_bridgeObjectRelease_n();

    sub_1A55034FC(v91, type metadata accessor for MailboxTaskLogger);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v87, v90);
  }
  sub_1A55034FC(v123, type metadata accessor for MessageSectionData.Segment);
  v109 = swift_allocBox();
  sub_1A54E3394(v33, v110, type metadata accessor for MessageSectionData);
  return v109 | 0x5000000000000000;
}

uint64_t sub_1A55D6744(uint64_t a1, NSObject *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int *v72;
  uint64_t result;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char v78;
  void (*v79)(char *, uint64_t);
  char *v80;
  os_log_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  int v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  os_log_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  void (*v106)(char *, char *, uint64_t);
  char v107;
  char *v108;
  uint64_t v109;
  NSObject *v110;
  char *v111;
  os_log_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  NSObject *v117;
  os_log_type_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t *v125;
  int v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  os_log_t v139;
  char *v140;
  void (*v141)(char *, uint64_t);
  uint64_t v142;
  NSObject *v143;
  os_log_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  NSObject *v148;
  os_log_type_t v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  int v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  os_log_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  NSObject *v169;
  os_log_type_t v170;
  int v171;
  uint64_t v172;
  uint64_t v173;
  os_log_t v174;
  char *v175;
  uint64_t v176;
  unint64_t v177;
  int v178;
  uint64_t v179;
  unint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  os_log_t v191;
  uint64_t v192;
  unsigned int v193;
  uint64_t v194;
  uint64_t v195;
  unsigned int *v196;
  uint64_t v197;
  NSObject *v198;
  uint64_t v199;
  NSObject *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  char v210;
  void (*v211)(char *, uint64_t);
  os_log_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  NSObject *v216;
  os_log_type_t v217;
  int v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  int v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  unint64_t v233;
  os_log_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  os_log_t v254;
  char *v255;
  uint64_t v256;
  int v257;
  char *v258;
  char *v259;
  NSObject *v260;
  char *v261;
  char *v262;
  uint64_t v263;
  char *v264;
  os_log_t v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  int v270;
  char *v271;

  v265 = a2;
  v266 = (char *)a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799F18);
  v245 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v261 = (char *)&v236 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594A26C();
  v250 = *(_QWORD *)(v5 - 8);
  v251 = v5;
  MEMORY[0x1E0C80A78](v5);
  v255 = (char *)&v236 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v246 = (char *)&v236 - v8;
  MEMORY[0x1E0C80A78](v9);
  v249 = (char *)&v236 - v10;
  MEMORY[0x1E0C80A78](v11);
  v240 = (char *)&v236 - v12;
  MEMORY[0x1E0C80A78](v13);
  v239 = (char *)&v236 - v14;
  v15 = type metadata accessor for MessageData.BodySection();
  MEMORY[0x1E0C80A78](v15);
  v253 = (uint64_t)&v236 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v241 = (uint64_t)&v236 - v18;
  MEMORY[0x1E0C80A78](v19);
  v258 = (char *)&v236 - v20;
  MEMORY[0x1E0C80A78](v21);
  v248 = (uint64_t *)((char *)&v236 - v22);
  MEMORY[0x1E0C80A78](v23);
  v252 = (uint64_t)&v236 - v24;
  v256 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v256);
  v259 = (char *)&v236 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v243 = (uint64_t)&v236 - v27;
  MEMORY[0x1E0C80A78](v28);
  v237 = (uint64_t)&v236 - v29;
  MEMORY[0x1E0C80A78](v30);
  v247 = (uint64_t)&v236 - v31;
  MEMORY[0x1E0C80A78](v32);
  v254 = (os_log_t)((char *)&v236 - v33);
  v34 = sub_1A594A764();
  v35 = *(_QWORD *)(v34 - 8);
  v267 = v34;
  v268 = v35;
  MEMORY[0x1E0C80A78](v34);
  v260 = ((char *)&v236 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v37);
  v244 = (char *)&v236 - v38;
  MEMORY[0x1E0C80A78](v39);
  v238 = (char *)&v236 - v40;
  MEMORY[0x1E0C80A78](v41);
  v262 = (char *)&v236 - v42;
  MEMORY[0x1E0C80A78](v43);
  v264 = (char *)&v236 - v44;
  v45 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D48);
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v236 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1A594AE60();
  v49 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v51 = (char *)&v236 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v52);
  v54 = (char *)&v236 - v53;
  MEMORY[0x1E0C80A78](v55);
  v57 = (char *)&v236 - v56;
  MEMORY[0x1E0C80A78](v58);
  v60 = ((char *)&v236 - v59);
  v257 = *(_DWORD *)(v2 + 20);
  v61 = *(int *)(v15 + 24);
  v62 = (uint64_t)v266;
  sub_1A54E330C((uint64_t)&v266[v61], (uint64_t)v47, &qword_1EE797D48);
  v63 = type metadata accessor for MessageData.BodyData();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 48))(v47, 1, v63) != 1)
  {
    v255 = v54;
    v259 = v51;
    v104 = v262;
    v105 = v264;
    v253 = v2;
    v106 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
    v106(v57, v47, v48);
    sub_1A55034FC((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodyData);
    (*(void (**)(NSObject *, char *, uint64_t))(v49 + 32))(v60, v57, v48);
    v107 = *(_BYTE *)(v62 + 24);
    v108 = *(char **)(v268 + 16);
    v109 = v62;
    v110 = v60;
    v260 = v60;
    v242 = v48;
    v236 = v49;
    v244 = v108;
    if ((v107 & 1) != 0)
    {
      v111 = v104;
      v112 = v265;
      v113 = v267;
      ((void (*)(char *, os_log_t, uint64_t))v108)(v104, v265, v267);
      v114 = v247;
      sub_1A55034B8((uint64_t)v112, v247, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v106(v259, (char *)v110, v48);
      v115 = v109;
      v116 = v248;
      sub_1A55034B8(v115, (uint64_t)v248, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      v117 = sub_1A594A74C();
      v118 = sub_1A594C00C();
      v119 = v118;
      if (os_log_type_enabled(v117, v118))
      {
        v120 = swift_slowAlloc();
        v264 = (char *)swift_slowAlloc();
        v271 = v264;
        *(_DWORD *)v120 = 68160003;
        LODWORD(v269) = 2;
        LODWORD(v255) = v119;
        sub_1A594C3CC();
        *(_WORD *)(v120 + 8) = 256;
        v121 = *(int *)(v256 + 20);
        v254 = v117;
        v122 = v114 + v121;
        LOBYTE(v269) = *(_BYTE *)(v114 + v121);
        sub_1A594C3CC();
        *(_WORD *)(v120 + 11) = 2082;
        v123 = *(_QWORD *)(v122 + 8);
        v124 = *(_QWORD *)(v122 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v269 = sub_1A55791B0(v123, v124, (uint64_t *)&v271);
        v125 = v116;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v120 + 21) = 1040;
        LODWORD(v269) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v120 + 27) = 512;
        LOWORD(v269) = *(_WORD *)(v122 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v120 + 31) = 2160;
        v269 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v120 + 41) = 2085;
        v126 = *(_DWORD *)(v122 + 40);
        v269 = *(_QWORD *)(v122 + 32);
        v270 = v126;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v127 = sub_1A594B4A8();
        v269 = sub_1A55791B0(v127, v128, (uint64_t *)&v271);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v114, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v120 + 51) = 1024;
        LODWORD(v269) = v257;
        sub_1A594C3CC();
        *(_WORD *)(v120 + 57) = 2048;
        v129 = (uint64_t)v259;
        v130 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        v131 = (uint64_t)v116;
        v246 = *(char **)(v236 + 8);
        ((void (*)(uint64_t, uint64_t))v246)(v129, v242);
        v269 = v130;
        sub_1A594C3CC();
        *(_WORD *)(v120 + 67) = 2082;
        v132 = *v116;
        v133 = v116[1];
        v134 = *((unsigned __int8 *)v125 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A55DC724(v133, v134);
        v135 = SectionSpecifier.debugDescription.getter(v132, v133, v134);
        v137 = v136;
        swift_bridgeObjectRelease();
        sub_1A55DC738(v133, v134);
        v269 = sub_1A55791B0(v135, v137, (uint64_t *)&v271);
        v138 = v267;
        sub_1A594C3CC();
        v112 = v265;
        swift_bridgeObjectRelease();
        sub_1A55034FC(v131, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
        v139 = v254;
        _os_log_impl(&dword_1A4F90000, v254, (os_log_type_t)v255, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Received %ld bytes for section '%{public}s'", (uint8_t *)v120, 0x4Du);
        v140 = v264;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v140, -1, -1);
        MEMORY[0x1A85B1964](v120, -1, -1);

        v141 = *(void (**)(char *, uint64_t))(v268 + 8);
        v142 = v138;
        v141(v262, v138);
      }
      else
      {
        v246 = *(char **)(v236 + 8);
        ((void (*)(char *, uint64_t))v246)(v259, v48);
        sub_1A55034FC(v114, type metadata accessor for MailboxTaskLogger);
        sub_1A55034FC((uint64_t)v116, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);

        v141 = *(void (**)(char *, uint64_t))(v268 + 8);
        v142 = v113;
        v141(v111, v113);
      }
      v193 = 0;
      v194 = v263;
      v195 = (uint64_t)v258;
      v196 = (unsigned int *)v261;
      v197 = v253;
    }
    else
    {
      LODWORD(v262) = *(_DWORD *)(v62 + 20);
      v112 = v265;
      v167 = v267;
      ((void (*)(char *, os_log_t, uint64_t))v108)(v105, v265, v267);
      sub_1A55034B8((uint64_t)v112, (uint64_t)v254, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v106(v255, (char *)v110, v48);
      v168 = v252;
      sub_1A55034B8(v109, v252, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      v169 = sub_1A594A74C();
      v170 = sub_1A594C00C();
      v171 = v170;
      if (os_log_type_enabled(v169, v170))
      {
        v172 = swift_slowAlloc();
        v248 = (uint64_t *)v169;
        v173 = v172;
        v259 = (char *)swift_slowAlloc();
        v271 = v259;
        *(_DWORD *)v173 = 68160259;
        LODWORD(v269) = 2;
        LODWORD(v247) = v171;
        sub_1A594C3CC();
        *(_WORD *)(v173 + 8) = 256;
        v174 = v254;
        v175 = (char *)v254 + *(int *)(v256 + 20);
        LOBYTE(v269) = *v175;
        sub_1A594C3CC();
        *(_WORD *)(v173 + 11) = 2082;
        v176 = *((_QWORD *)v175 + 1);
        v177 = *((_QWORD *)v175 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v269 = sub_1A55791B0(v176, v177, (uint64_t *)&v271);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v173 + 21) = 1040;
        LODWORD(v269) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v173 + 27) = 512;
        LOWORD(v269) = *((_WORD *)v175 + 12);
        sub_1A594C3CC();
        *(_WORD *)(v173 + 31) = 2160;
        v269 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v173 + 41) = 2085;
        v178 = *((_DWORD *)v175 + 10);
        v269 = *((_QWORD *)v175 + 4);
        v270 = v178;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v179 = sub_1A594B4A8();
        v269 = sub_1A55791B0(v179, v180, (uint64_t *)&v271);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v174, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v173 + 51) = 1024;
        LODWORD(v269) = v257;
        sub_1A594C3CC();
        *(_WORD *)(v173 + 57) = 2048;
        v181 = v255;
        v182 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        v246 = *(char **)(v236 + 8);
        ((void (*)(char *, uint64_t))v246)(v181, v48);
        v269 = v182;
        sub_1A594C3CC();
        *(_WORD *)(v173 + 67) = 1024;
        LODWORD(v269) = (_DWORD)v262;
        sub_1A594C3CC();
        *(_WORD *)(v173 + 73) = 2082;
        v183 = v252;
        v184 = *(_QWORD *)v252;
        v185 = *(_QWORD *)(v252 + 8);
        v186 = *(unsigned __int8 *)(v252 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A55DC724(v185, v186);
        v187 = SectionSpecifier.debugDescription.getter(v184, v185, v186);
        v189 = v188;
        swift_bridgeObjectRelease();
        sub_1A55DC738(v185, v186);
        v269 = sub_1A55791B0(v187, v189, (uint64_t *)&v271);
        v190 = v267;
        sub_1A594C3CC();
        v112 = v265;
        swift_bridgeObjectRelease();
        sub_1A55034FC(v183, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
        v191 = (os_log_t)v248;
        _os_log_impl(&dword_1A4F90000, (os_log_t)v248, (os_log_type_t)v247, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Received %ld bytes (offset %u) for section '%{public}s'", (uint8_t *)v173, 0x53u);
        v192 = (uint64_t)v259;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v192, -1, -1);
        MEMORY[0x1A85B1964](v173, -1, -1);

        v141 = *(void (**)(char *, uint64_t))(v268 + 8);
        v142 = v190;
        v141(v264, v190);
      }
      else
      {
        v246 = *(char **)(v236 + 8);
        ((void (*)(char *, uint64_t))v246)(v255, v48);
        sub_1A55034FC((uint64_t)v254, type metadata accessor for MailboxTaskLogger);
        sub_1A55034FC(v168, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);

        v141 = *(void (**)(char *, uint64_t))(v268 + 8);
        v142 = v167;
        v141(v264, v167);
      }
      v194 = v263;
      v195 = (uint64_t)v258;
      v196 = (unsigned int *)v261;
      v197 = v253;
      v193 = v262;
    }
    v198 = v260;
    sub_1A56523D4(v260, v193, (uint64_t)v112);
    v199 = v194;
    if (v194)
    {
      v200 = v198;
    }
    else
    {
      v264 = (char *)v141;
      if (!*(_BYTE *)(v197 + 52))
      {
        v201 = *(_QWORD *)(v197 + 40);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v202 = v240;
        sub_1A594A260();
        v203 = *(_QWORD *)(v201 + 16);
        if (v203)
        {
          v263 = 0;
          v204 = v201 + ((*(unsigned __int8 *)(v245 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v245 + 80));
          v205 = *(_QWORD *)(v245 + 72);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          while (1)
          {
            sub_1A54E330C(v204, (uint64_t)v196, &qword_1EE799F18);
            result = *v196;
            if (v196[1] < result)
              goto LABEL_40;
            sub_1A594A218();
            sub_1A5510284((uint64_t)v196, &qword_1EE799F18);
            v204 += v205;
            if (!--v203)
            {
              swift_bridgeObjectRelease();
              v142 = v267;
              v199 = v263;
              v195 = (uint64_t)v258;
              break;
            }
          }
        }
        v206 = v250;
        v207 = v251;
        v208 = v239;
        (*(void (**)(char *, char *, uint64_t))(v250 + 32))(v239, v202, v251);
        swift_bridgeObjectRelease();
        v209 = v249;
        sub_1A594A1D0();
        v210 = MEMORY[0x1A85AC66C](v208, v209);
        v211 = *(void (**)(char *, uint64_t))(v206 + 8);
        v211(v209, v207);
        v211(v208, v207);
        v212 = v265;
        if ((v210 & 1) != 0)
        {
          v213 = v238;
          v214 = v142;
          ((void (*)(char *, os_log_t, uint64_t))v244)(v238, v265, v142);
          v215 = v237;
          sub_1A55034B8((uint64_t)v212, v237, type metadata accessor for MailboxTaskLogger);
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          sub_1A55034B8((uint64_t)v266, v195, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
          v216 = sub_1A594A74C();
          v217 = sub_1A594C00C();
          v218 = v217;
          if (os_log_type_enabled(v216, v217))
          {
            v219 = swift_slowAlloc();
            v265 = v216;
            v220 = v219;
            v266 = (char *)swift_slowAlloc();
            v271 = v266;
            *(_DWORD *)v220 = 68159747;
            LODWORD(v269) = 2;
            v263 = v199;
            sub_1A594C3CC();
            *(_WORD *)(v220 + 8) = 256;
            v221 = v215 + *(int *)(v256 + 20);
            LOBYTE(v269) = *(_BYTE *)v221;
            sub_1A594C3CC();
            *(_WORD *)(v220 + 11) = 2082;
            v222 = v195;
            LODWORD(v264) = v218;
            v223 = *(_QWORD *)(v221 + 8);
            v224 = *(_QWORD *)(v221 + 16);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v269 = sub_1A55791B0(v223, v224, (uint64_t *)&v271);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            *(_WORD *)(v220 + 21) = 1040;
            LODWORD(v269) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v220 + 27) = 512;
            LOWORD(v269) = *(_WORD *)(v221 + 24);
            sub_1A594C3CC();
            *(_WORD *)(v220 + 31) = 2160;
            v269 = 0x786F626C69616DLL;
            sub_1A594C3CC();
            *(_WORD *)(v220 + 41) = 2085;
            v225 = *(_DWORD *)(v221 + 40);
            v269 = *(_QWORD *)(v221 + 32);
            v270 = v225;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v226 = sub_1A594B4A8();
            v269 = sub_1A55791B0(v226, v227, (uint64_t *)&v271);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A55034FC(v237, type metadata accessor for MailboxTaskLogger);
            *(_WORD *)(v220 + 51) = 1024;
            LODWORD(v269) = v257;
            sub_1A594C3CC();
            *(_WORD *)(v220 + 57) = 2082;
            v228 = *(_QWORD *)v195;
            v229 = *(_QWORD *)(v195 + 8);
            v230 = *(unsigned __int8 *)(v195 + 16);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A55DC724(v229, v230);
            v231 = SectionSpecifier.debugDescription.getter(v228, v229, v230);
            v233 = v232;
            swift_bridgeObjectRelease();
            sub_1A55DC738(v229, v230);
            v269 = sub_1A55791B0(v231, v233, (uint64_t *)&v271);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A55034FC(v222, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
            v234 = v265;
            _os_log_impl(&dword_1A4F90000, v265, (os_log_type_t)v264, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: All data for section '%{public}s' has been received.", (uint8_t *)v220, 0x43u);
            v235 = (uint64_t)v266;
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v235, -1, -1);
            MEMORY[0x1A85B1964](v220, -1, -1);

            (*(void (**)(char *, uint64_t))(v268 + 8))(v238, v267);
            return (*(uint64_t (**)(NSObject *, uint64_t))(v236 + 8))(v260, v242);
          }

          sub_1A55034FC(v195, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
          sub_1A55034FC(v215, type metadata accessor for MailboxTaskLogger);
          ((void (*)(char *, uint64_t))v264)(v213, v214);
        }
      }
      v200 = v260;
    }
    return ((uint64_t (*)(NSObject *, uint64_t))v246)(v200, v242);
  }
  v64 = v255;
  v65 = v268;
  sub_1A5510284((uint64_t)v47, &qword_1EE797D48);
  if (*(_BYTE *)(v2 + 52))
    goto LABEL_14;
  v66 = *(_QWORD *)(v2 + 40);
  v67 = (char *)*(unsigned int *)(v2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v68 = v64;
  sub_1A594A260();
  v69 = *(_QWORD *)(v66 + 16);
  if (v69)
  {
    v264 = v67;
    v70 = v66 + ((*(unsigned __int8 *)(v245 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v245 + 80));
    v71 = *(_QWORD *)(v245 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v72 = (unsigned int *)v261;
    while (1)
    {
      sub_1A54E330C(v70, (uint64_t)v72, &qword_1EE799F18);
      result = *v72;
      if (v72[1] < result)
        break;
      v68 = v64;
      sub_1A594A218();
      sub_1A5510284((uint64_t)v72, &qword_1EE799F18);
      v70 += v71;
      if (!--v69)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
    return result;
  }
LABEL_8:
  v75 = v250;
  v74 = v251;
  v76 = v246;
  (*(void (**)(char *, char *, uint64_t))(v250 + 32))(v246, v68, v251);
  swift_bridgeObjectRelease();
  v77 = v249;
  sub_1A594A1D0();
  v78 = MEMORY[0x1A85AC66C](v76, v77);
  v79 = *(void (**)(char *, uint64_t))(v75 + 8);
  v79(v77, v74);
  v79(v76, v74);
  if ((v78 & 1) == 0)
  {
LABEL_14:
    v143 = v260;
    v144 = v265;
    v145 = v267;
    (*(void (**)(NSObject *, os_log_t, uint64_t))(v65 + 16))(v260, v265, v267);
    v146 = (uint64_t)v259;
    sub_1A55034B8((uint64_t)v144, (uint64_t)v259, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v147 = v253;
    sub_1A55034B8((uint64_t)v266, v253, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
    v148 = sub_1A594A74C();
    v149 = sub_1A594C018();
    v150 = v149;
    if (os_log_type_enabled(v148, v149))
    {
      v151 = swift_slowAlloc();
      v265 = v148;
      v152 = v151;
      v266 = (char *)swift_slowAlloc();
      v271 = v266;
      *(_DWORD *)v152 = 68159747;
      LODWORD(v269) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v152 + 8) = 256;
      v153 = v146 + *(int *)(v256 + 20);
      LOBYTE(v269) = *(_BYTE *)v153;
      sub_1A594C3CC();
      *(_WORD *)(v152 + 11) = 2082;
      LODWORD(v264) = v150;
      v154 = *(_QWORD *)(v153 + 8);
      v155 = *(_QWORD *)(v153 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v269 = sub_1A55791B0(v154, v155, (uint64_t *)&v271);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v152 + 21) = 1040;
      LODWORD(v269) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v152 + 27) = 512;
      LOWORD(v269) = *(_WORD *)(v153 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v152 + 31) = 2160;
      v269 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v152 + 41) = 2085;
      v156 = *(_DWORD *)(v153 + 40);
      v269 = *(_QWORD *)(v153 + 32);
      v270 = v156;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v157 = sub_1A594B4A8();
      v269 = sub_1A55791B0(v157, v158, (uint64_t *)&v271);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v259, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v152 + 51) = 1024;
      LODWORD(v269) = v257;
      sub_1A594C3CC();
      *(_WORD *)(v152 + 57) = 2082;
      v159 = *(_QWORD *)v147;
      v160 = *(_QWORD *)(v147 + 8);
      v161 = *(unsigned __int8 *)(v147 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55DC724(v160, v161);
      v162 = SectionSpecifier.debugDescription.getter(v159, v160, v161);
      v164 = v163;
      swift_bridgeObjectRelease();
      sub_1A55DC738(v160, v161);
      v269 = sub_1A55791B0(v162, v164, (uint64_t *)&v271);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v147, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      v165 = v265;
      _os_log_impl(&dword_1A4F90000, v265, (os_log_type_t)v264, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Received BodySection with NIL data for section '%{public}s'. Message may have been deleted.", (uint8_t *)v152, 0x43u);
      v166 = (uint64_t)v266;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v166, -1, -1);
      MEMORY[0x1A85B1964](v152, -1, -1);

      (*(void (**)(NSObject *, uint64_t))(v268 + 8))(v260, v267);
    }
    else
    {
      sub_1A55034FC(v146, type metadata accessor for MailboxTaskLogger);
      sub_1A55034FC(v147, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);

      (*(void (**)(NSObject *, uint64_t))(v65 + 8))(v143, v145);
    }
    sub_1A55DC790();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    v80 = v244;
    v81 = v265;
    v82 = v267;
    (*(void (**)(char *, os_log_t, uint64_t))(v65 + 16))(v244, v265, v267);
    v83 = v243;
    sub_1A55034B8((uint64_t)v81, v243, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v84 = v241;
    sub_1A55034B8((uint64_t)v266, v241, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
    v85 = sub_1A594A74C();
    v86 = sub_1A594C030();
    v87 = v86;
    if (os_log_type_enabled(v85, v86))
    {
      v88 = swift_slowAlloc();
      v265 = v85;
      v89 = v88;
      v266 = (char *)swift_slowAlloc();
      v271 = v266;
      *(_DWORD *)v89 = 68159747;
      LODWORD(v269) = 2;
      LODWORD(v264) = v87;
      sub_1A594C3CC();
      *(_WORD *)(v89 + 8) = 256;
      v90 = v83 + *(int *)(v256 + 20);
      LOBYTE(v269) = *(_BYTE *)v90;
      sub_1A594C3CC();
      *(_WORD *)(v89 + 11) = 2082;
      v91 = *(_QWORD *)(v90 + 8);
      v92 = *(_QWORD *)(v90 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v269 = sub_1A55791B0(v91, v92, (uint64_t *)&v271);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v89 + 21) = 1040;
      LODWORD(v269) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v89 + 27) = 512;
      LOWORD(v269) = *(_WORD *)(v90 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v89 + 31) = 2160;
      v269 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v89 + 41) = 2085;
      v93 = *(_DWORD *)(v90 + 40);
      v269 = *(_QWORD *)(v90 + 32);
      v270 = v93;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v94 = sub_1A594B4A8();
      v269 = sub_1A55791B0(v94, v95, (uint64_t *)&v271);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v243, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v89 + 51) = 1024;
      LODWORD(v269) = v257;
      sub_1A594C3CC();
      *(_WORD *)(v89 + 57) = 2082;
      v96 = *(_QWORD *)v84;
      v97 = *(_QWORD *)(v84 + 8);
      v98 = *(unsigned __int8 *)(v84 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55DC724(v97, v98);
      v99 = SectionSpecifier.debugDescription.getter(v96, v97, v98);
      v101 = v100;
      swift_bridgeObjectRelease();
      sub_1A55DC738(v97, v98);
      v269 = sub_1A55791B0(v99, v101, (uint64_t *)&v271);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v84, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      v102 = v265;
      _os_log_impl(&dword_1A4F90000, v265, (os_log_type_t)v264, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Received BodySection with NIL data for section '%{public}s', but we already have all data. Ignoring.", (uint8_t *)v89, 0x43u);
      v103 = (uint64_t)v266;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v103, -1, -1);
      MEMORY[0x1A85B1964](v89, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v268 + 8))(v244, v267);
    }
    else
    {
      sub_1A55034FC(v83, type metadata accessor for MailboxTaskLogger);
      sub_1A55034FC(v84, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);

      return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v80, v82);
    }
  }
}

uint64_t sub_1A55D83C8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  int v4;
  uint64_t v5;
  double v6;
  unsigned int v7;
  uint64_t result;
  _BYTE v9[184];
  _BYTE v10[184];
  _BYTE v11[184];
  _BYTE v12[184];
  _BYTE v13[184];
  __int128 v14[11];
  _BYTE v15[184];
  _BYTE v16[184];

  v2 = v1;
  sub_1A55D86E0((__int128 *)(v1 + 8), (uint64_t)v14);
  sub_1A55D86E0(v14, (uint64_t)v16);
  if (sub_1A5529F68((uint64_t)v16) == 1)
    goto LABEL_5;
  sub_1A55DBFD8(v16, v10);
  sub_1A55DBFD8(v10, v11);
  if (sub_1A55DC41C((uint64_t)v11) == 1)
    goto LABEL_5;
  sub_1A55DC3E0(v11, v15);
  sub_1A55DBFD8(v10, v9);
  sub_1A55DC438((uint64_t)v9, sub_1A552370C);
  BodyStructure.subscript.getter(a1, v12);
  sub_1A55DC368(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
  sub_1A55DC3E0(v12, v13);
  v4 = sub_1A55DC430((uint64_t)v13);
  nullsub_1(v13);
  if (v4 == 1)
  {
    sub_1A55DC438((uint64_t)v12, sub_1A55241F0);
LABEL_5:
    LODWORD(v2) = *(_DWORD *)(v2 + 4);
    goto LABEL_6;
  }
  v2 = *(_QWORD *)(v5 + 80);
  sub_1A55DC438((uint64_t)v12, sub_1A55241F0);
  if ((v2 & 0x8000000000000000) != 0 || HIDWORD(v2))
    goto LABEL_20;
LABEL_6:
  v6 = (double)v2 * 1.25;
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v6 <= -1.0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v6 >= 4294967300.0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v7 = v2 + 0x4000;
  if (v2 >= 0xFFFFC000)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    result = sub_1A594C9B4();
    __break(1u);
    return result;
  }
  if (v7 <= v6)
    return v6;
  else
    return v7;
}

uint64_t sub_1A55D85CC()
{
  const void *v0;
  uint64_t v1;
  int v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  BOOL v11;
  _BYTE v12[184];
  uint64_t v13;
  _BYTE v14[184];

  v1 = (uint64_t)v0;
  sub_1A55DC3E0(v0, v12);
  v2 = sub_1A55DC430((uint64_t)v12);
  nullsub_1(v12);
  if (v2 != 1)
    return v3[10];
  v4 = *v3;
  v13 = v4;
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
    return 0;
  v6 = (char *)(v4 + 32);
  sub_1A54FCA28((uint64_t)&v13);
  sub_1A55DC438(v1, sub_1A552370C);
  v7 = 0;
  while (1)
  {
    sub_1A55DC3E0(v6, v14);
    v8 = sub_1A55DC438((uint64_t)v14, sub_1A552370C);
    v9 = sub_1A55D85CC(v8);
    result = sub_1A55DC438((uint64_t)v14, sub_1A55241F0);
    v11 = __OFADD__(v7, v9);
    v7 += v9;
    if (v11)
      break;
    v6 += 184;
    if (!--v5)
    {
      sub_1A55DC438(v1, sub_1A55241F0);
      sub_1A54F81BC((uint64_t)&v13);
      return v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A55D86E0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[3];
  *(_OWORD *)(a2 + 32) = a1[2];
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[7];
  *(_OWORD *)(a2 + 96) = a1[6];
  *(_OWORD *)(a2 + 112) = v7;
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 80) = v6;
  v8 = a1[8];
  v9 = a1[9];
  v10 = a1[10];
  *(_BYTE *)(a2 + 176) = *((_BYTE *)a1 + 176);
  *(_OWORD *)(a2 + 144) = v9;
  *(_OWORD *)(a2 + 160) = v10;
  *(_OWORD *)(a2 + 128) = v8;
  return a2;
}

uint64_t _s25MessageSectionsToDownloadVMa(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE797228);
}

uint64_t sub_1A55D8734(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t i;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  char v100;
  char v101;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *__dst;
  uint64_t v119;

  v3 = a1[1];
  result = sub_1A594CC78();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v92 = *a1;
      v93 = *a1 + 24;
      v94 = -1;
      for (i = 1; i != v3; ++i)
      {
        v96 = v94;
        v97 = v93;
        do
        {
          v98 = *(_DWORD *)v97;
          if (*(_DWORD *)(v97 - 24) >= *(_DWORD *)v97)
            break;
          if (!v92)
            goto LABEL_141;
          v99 = *(_QWORD *)(v97 + 8);
          v100 = *(_BYTE *)(v97 + 16);
          v101 = *(_BYTE *)(v97 + 17);
          *(_OWORD *)v97 = *(_OWORD *)(v97 - 24);
          *(_QWORD *)(v97 + 16) = *(_QWORD *)(v97 - 8);
          *(_QWORD *)(v97 - 16) = v99;
          *(_BYTE *)(v97 - 8) = v100;
          *(_BYTE *)(v97 - 7) = v101;
          *(_DWORD *)(v97 - 24) = v98;
          v97 -= 24;
        }
        while (!__CFADD__(v96++, 1));
        v93 += 24;
        --v94;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v119 = v1;
  v112 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v103 = v12;
      v114 = v9;
      if (v13 >= 2)
      {
        v104 = *v112;
        do
        {
          v105 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v104)
            goto LABEL_145;
          v106 = v103;
          v107 = *(_QWORD *)&v103[16 * v105 + 32];
          v108 = *(_QWORD *)&v103[16 * v13 + 24];
          sub_1A55D8E78((char *)(v104 + 24 * v107), (char *)(v104 + 24 * *(_QWORD *)&v103[16 * v13 + 16]), v104 + 24 * v108, __dst);
          if (v119)
            break;
          if (v108 < v107)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v106 = sub_1A558A0A4((uint64_t)v106);
          if (v105 >= *((_QWORD *)v106 + 2))
            goto LABEL_134;
          v109 = &v106[16 * v105 + 32];
          *(_QWORD *)v109 = v107;
          *((_QWORD *)v109 + 1) = v108;
          v110 = *((_QWORD *)v106 + 2);
          if (v13 > v110)
            goto LABEL_135;
          memmove(&v106[16 * v13 + 16], &v106[16 * v13 + 32], 16 * (v110 - v13));
          v103 = v106;
          *((_QWORD *)v106 + 2) = v110 - 1;
          v13 = v110 - 1;
        }
        while (v110 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v114 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v114 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8CA0);
    v8 = sub_1A594BA18();
    *(_QWORD *)(v8 + 16) = v7;
    v114 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v113 = *a1 + 24;
  v111 = *a1 - 24;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v115 = v6;
  v116 = v3;
  v117 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_DWORD *)(v11 + 24 * v10);
      v16 = *(_DWORD *)(v11 + 24 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (unsigned int *)(v113 + 24 * v14);
        v18 = v17;
        while (1)
        {
          v19 = v18[6];
          v18 += 6;
          if (v16 < v15 == *v17 >= v19)
            break;
          ++v10;
          v17 = v18;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 24 * v10;
          v21 = 24 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v21;
              v25 = *(_DWORD *)(v11 + v21);
              v26 = v11 + v20;
              v27 = *(_QWORD *)(v11 + v21 + 8);
              v28 = *(_BYTE *)(v11 + v21 + 16);
              v29 = *(_BYTE *)(v11 + v21 + 17);
              v30 = *(_QWORD *)(v11 + v20 - 8);
              *(_OWORD *)v24 = *(_OWORD *)(v11 + v20 - 24);
              *(_QWORD *)(v24 + 16) = v30;
              *(_DWORD *)(v26 - 24) = v25;
              *(_QWORD *)(v26 - 16) = v27;
              *(_BYTE *)(v26 - 8) = v28;
              *(_BYTE *)(v26 - 7) = v29;
            }
            ++v23;
            v20 -= 24;
            v21 += 24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v31 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v31 >= v3)
      v31 = v3;
    if (v31 < v14)
      break;
    if (v10 != v31)
    {
      v32 = v111 + 24 * v10;
      do
      {
        v33 = v14;
        v34 = v32;
        do
        {
          v35 = v34 + 24;
          v36 = *(_DWORD *)(v34 + 24);
          if (*(_DWORD *)v34 >= v36)
            break;
          if (!v11)
            goto LABEL_142;
          v37 = *(_QWORD *)(v34 + 32);
          v38 = *(_BYTE *)(v34 + 40);
          v39 = *(_BYTE *)(v34 + 41);
          *(_OWORD *)v35 = *(_OWORD *)v34;
          v40 = *(_QWORD *)(v34 + 16);
          *(_DWORD *)v34 = v36;
          *(_QWORD *)(v34 + 8) = v37;
          *(_BYTE *)(v34 + 16) = v38;
          *(_BYTE *)(v34 + 17) = v39;
          v34 -= 24;
          ++v33;
          *(_QWORD *)(v35 + 16) = v40;
        }
        while (v10 != v33);
        ++v10;
        v32 += 24;
      }
      while (v10 != v31);
      v10 = v31;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A5589B40(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v42 = *((_QWORD *)v12 + 2);
    v41 = *((_QWORD *)v12 + 3);
    v13 = v42 + 1;
    v11 = v117;
    if (v42 >= v41 >> 1)
    {
      v91 = sub_1A5589B40((char *)(v41 > 1), v42 + 1, 1, v12);
      v11 = v117;
      v12 = v91;
    }
    *((_QWORD *)v12 + 2) = v13;
    v43 = v12 + 32;
    v44 = &v12[16 * v42 + 32];
    *(_QWORD *)v44 = v14;
    *((_QWORD *)v44 + 1) = v10;
    if (v42)
    {
      while (1)
      {
        v45 = v13 - 1;
        if (v13 >= 4)
        {
          v50 = &v43[16 * v13];
          v51 = *((_QWORD *)v50 - 8);
          v52 = *((_QWORD *)v50 - 7);
          v56 = __OFSUB__(v52, v51);
          v53 = v52 - v51;
          if (v56)
            goto LABEL_120;
          v55 = *((_QWORD *)v50 - 6);
          v54 = *((_QWORD *)v50 - 5);
          v56 = __OFSUB__(v54, v55);
          v48 = v54 - v55;
          v49 = v56;
          if (v56)
            goto LABEL_121;
          v57 = v13 - 2;
          v58 = &v43[16 * v13 - 32];
          v60 = *(_QWORD *)v58;
          v59 = *((_QWORD *)v58 + 1);
          v56 = __OFSUB__(v59, v60);
          v61 = v59 - v60;
          if (v56)
            goto LABEL_123;
          v56 = __OFADD__(v48, v61);
          v62 = v48 + v61;
          if (v56)
            goto LABEL_126;
          if (v62 >= v53)
          {
            v80 = &v43[16 * v45];
            v82 = *(_QWORD *)v80;
            v81 = *((_QWORD *)v80 + 1);
            v56 = __OFSUB__(v81, v82);
            v83 = v81 - v82;
            if (v56)
              goto LABEL_130;
            v73 = v48 < v83;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v74 = *((_QWORD *)v12 + 4);
            v75 = *((_QWORD *)v12 + 5);
            v56 = __OFSUB__(v75, v74);
            v67 = v75 - v74;
            v68 = v56;
            goto LABEL_77;
          }
          v47 = *((_QWORD *)v12 + 4);
          v46 = *((_QWORD *)v12 + 5);
          v56 = __OFSUB__(v46, v47);
          v48 = v46 - v47;
          v49 = v56;
        }
        if ((v49 & 1) != 0)
          goto LABEL_122;
        v57 = v13 - 2;
        v63 = &v43[16 * v13 - 32];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        v66 = __OFSUB__(v64, v65);
        v67 = v64 - v65;
        v68 = v66;
        if (v66)
          goto LABEL_125;
        v69 = &v43[16 * v45];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v56 = __OFSUB__(v70, v71);
        v72 = v70 - v71;
        if (v56)
          goto LABEL_128;
        if (__OFADD__(v67, v72))
          goto LABEL_129;
        if (v67 + v72 >= v48)
        {
          v73 = v48 < v72;
LABEL_83:
          if (v73)
            v45 = v57;
          goto LABEL_85;
        }
LABEL_77:
        if ((v68 & 1) != 0)
          goto LABEL_124;
        v76 = &v43[16 * v45];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v56 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v56)
          goto LABEL_127;
        if (v79 < v67)
          goto LABEL_15;
LABEL_85:
        v84 = v45 - 1;
        if (v45 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v85 = v12;
        v86 = &v43[16 * v84];
        v87 = *(_QWORD *)v86;
        v88 = &v43[16 * v45];
        v89 = *((_QWORD *)v88 + 1);
        sub_1A55D8E78((char *)(v11 + 24 * *(_QWORD *)v86), (char *)(v11 + 24 * *(_QWORD *)v88), v11 + 24 * v89, __dst);
        if (v119)
          goto LABEL_93;
        if (v89 < v87)
          goto LABEL_117;
        if (v45 > *((_QWORD *)v85 + 2))
          goto LABEL_118;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v43[16 * v84 + 8] = v89;
        v90 = *((_QWORD *)v85 + 2);
        if (v45 >= v90)
          goto LABEL_119;
        v12 = v85;
        v13 = v90 - 1;
        memmove(&v43[16 * v45], v88 + 16, 16 * (v90 - 1 - v45));
        *((_QWORD *)v85 + 2) = v90 - 1;
        v11 = v117;
        if (v90 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v115;
    v3 = v116;
    if (v10 >= v116)
    {
      v9 = v114;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t sub_1A55D8E78(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  char *v20;
  char *v21;
  unsigned int v22;
  __int128 v23;
  __int128 v24;
  uint64_t result;
  char *v26;
  char *v27;
  char *v28;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  v27 = __dst;
  v28 = __src;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      v17 = 24 * v11;
      if (__dst != a2 || &a2[v17] <= __dst)
        memmove(__dst, a2, 24 * v11);
      v18 = &v4[v17];
      v26 = &v4[v17];
      v28 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        v19 = a3 - 24;
        v20 = v6;
        while (1)
        {
          v21 = (char *)(v19 + 24);
          v22 = *((_DWORD *)v20 - 6);
          v20 -= 24;
          if (v22 >= *((_DWORD *)v18 - 6))
          {
            v26 = v18 - 24;
            if (v21 < v18 || v19 >= (unint64_t)v18 || v21 != v18)
            {
              v24 = *(_OWORD *)(v18 - 24);
              *(_QWORD *)(v19 + 16) = *((_QWORD *)v18 - 1);
              *(_OWORD *)v19 = v24;
            }
            v20 = v6;
            v18 -= 24;
            if (v6 <= v7)
              goto LABEL_38;
          }
          else
          {
            if (v21 != v6 || v19 >= (unint64_t)v6)
            {
              v23 = *(_OWORD *)v20;
              *(_QWORD *)(v19 + 16) = *((_QWORD *)v20 + 2);
              *(_OWORD *)v19 = v23;
            }
            v28 = v20;
            if (v20 <= v7)
              goto LABEL_38;
          }
          v19 -= 24;
          v6 = v20;
          if (v18 <= v4)
            goto LABEL_38;
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -23)
  {
    v12 = 24 * v9;
    if (__dst != __src || &__src[v12] <= __dst)
      memmove(__dst, __src, v12);
    v13 = &v4[v12];
    v26 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        if (*(_DWORD *)v4 >= *(_DWORD *)v6)
        {
          if (v7 != v4)
          {
            v16 = *(_OWORD *)v4;
            *((_QWORD *)v7 + 2) = *((_QWORD *)v4 + 2);
            *(_OWORD *)v7 = v16;
          }
          v4 += 24;
          v27 = v4;
          v14 = v6;
        }
        else
        {
          v14 = v6 + 24;
          if (v7 < v6 || v7 >= v14 || v7 != v6)
          {
            v15 = *(_OWORD *)v6;
            *((_QWORD *)v7 + 2) = *((_QWORD *)v6 + 2);
            *(_OWORD *)v7 = v15;
          }
        }
        v7 += 24;
        if (v4 >= v13)
          break;
        v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      v28 = v7;
    }
LABEL_38:
    sub_1A5589CE0(&v28, &v27, &v26);
    return 1;
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55D9118(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;

  v2 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  sub_1A555CFA8(v3, 0);
  sub_1A54F4C2C(0, v3, 0);
  v22 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v23 = (unint64_t)(v4 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v14 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * i);
    v15 = *(_QWORD *)(a1 + 56) + 16 * i;
    v16 = *(_QWORD *)v15;
    v17 = *(_BYTE *)(v15 + 8);
    v18 = *(_BYTE *)(v15 + 9);
    result = sub_1A55D9384(v14);
    v20 = *(_QWORD *)(v2 + 16);
    v19 = *(_QWORD *)(v2 + 24);
    if (v20 >= v19 >> 1)
      result = sub_1A54F4C2C(v19 > 1, v20 + 1, 1);
    *(_QWORD *)(v2 + 16) = v20 + 1;
    v21 = v2 + 16 * v20;
    *(_QWORD *)(v21 + 32) = v16;
    *(_BYTE *)(v21 + 40) = v17;
    *(_BYTE *)(v21 + 41) = v18;
    if (v6)
      goto LABEL_4;
LABEL_5:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v23)
      goto LABEL_25;
    v12 = *(_QWORD *)(v22 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v23)
        goto LABEL_25;
      v12 = *(_QWORD *)(v22 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v23)
          goto LABEL_25;
        v12 = *(_QWORD *)(v22 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v23)
            goto LABEL_25;
          v12 = *(_QWORD *)(v22 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v23)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  v12 = *(_QWORD *)(v22 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v23)
      goto LABEL_25;
    v12 = *(_QWORD *)(v22 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

double sub_1A55D935C(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 176) = -2;
  return result;
}

uint64_t sub_1A55D9384(int a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  v4 = v1 + 1;
  v5 = v1[1];
  result = swift_isUniquelyReferenced_nonNull_native();
  *v4 = v5;
  if ((result & 1) == 0)
  {
    result = sub_1A54F4B84(0, *(_QWORD *)(v5 + 16) + 1, 1);
    v5 = *v4;
  }
  v8 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v5 + 24);
  if (v8 >= v7 >> 1)
  {
    result = sub_1A54F4B84(v7 > 1, v8 + 1, 1);
    v5 = *v4;
  }
  *(_QWORD *)(v5 + 16) = v8 + 1;
  *(_DWORD *)(v5 + 4 * v8 + 32) = a1;
  v2[1] = v5;
  v9 = *v2;
  if (!*v2)
  {
    if (v8 < 0xF)
      return result;
    return sub_1A555B600();
  }
  swift_beginAccess();
  if (MEMORY[0x1A85AC894](*(_QWORD *)(v9 + 16) & 0x3FLL) <= (uint64_t)v8)
    return sub_1A555B600();
  result = swift_isUniquelyReferenced_native();
  v10 = *v2;
  if (!(_DWORD)result)
  {
    if (!v10)
    {
LABEL_20:
      __break(1u);
      return result;
    }
    v10 = sub_1A594A434();
    result = swift_release();
    *v2 = v10;
  }
  if (!v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_1A594CE64();
  sub_1A594CEAC();
  result = sub_1A594CED0();
  if (__OFSUB__(1 << *(_QWORD *)(v10 + 16), 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if (sub_1A594A3D4())
  {
    while (1)
      sub_1A594A410();
  }
  return sub_1A594A404();
}

void _s7SectionVwxx(uint64_t a1)
{
  unsigned int v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 232);
  if (v2 <= 0xFD)
    sub_1A55241F0(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168), *(_QWORD *)(a1 + 176), *(_QWORD *)(a1 + 184), *(_QWORD *)(a1 + 192), *(_QWORD *)(a1 + 200),
      *(_QWORD *)(a1 + 208),
      *(_QWORD *)(a1 + 216),
      *(_QWORD *)(a1 + 224),
      v2 & 1);
}

uint64_t _s7SectionVwcp(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  int v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_WORD *)(a1 + 52) = *(_WORD *)(a2 + 52);
  *(_BYTE *)(a1 + 54) = *(_BYTE *)(a2 + 54);
  v4 = (_OWORD *)(a1 + 56);
  v5 = a2 + 56;
  v6 = *(unsigned __int8 *)(a2 + 232);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v6 == 254 || v6 == 255)
  {
    v7 = *(_OWORD *)(v5 + 144);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(v5 + 128);
    *(_OWORD *)(a1 + 200) = v7;
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(v5 + 160);
    *(_BYTE *)(a1 + 232) = *(_BYTE *)(v5 + 176);
    v8 = *(_OWORD *)(v5 + 80);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(v5 + 64);
    *(_OWORD *)(a1 + 136) = v8;
    v9 = *(_OWORD *)(v5 + 112);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(v5 + 96);
    *(_OWORD *)(a1 + 168) = v9;
    v10 = *(_OWORD *)(v5 + 16);
    *v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 72) = v10;
    v11 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(a1 + 104) = v11;
  }
  else
  {
    v39 = v6 & 1;
    v12 = *(_QWORD *)(a2 + 56);
    v13 = *(_QWORD *)(a2 + 64);
    v14 = *(_QWORD *)(a2 + 72);
    v15 = *(_QWORD *)(a2 + 80);
    v16 = *(_QWORD *)(a2 + 88);
    v17 = *(_QWORD *)(a2 + 96);
    v19 = *(_QWORD *)(a2 + 104);
    v18 = *(_QWORD *)(a2 + 112);
    v26 = *(_QWORD *)(a2 + 128);
    v27 = *(_QWORD *)(a2 + 136);
    v28 = *(_QWORD *)(a2 + 144);
    v29 = *(_QWORD *)(a2 + 152);
    v30 = *(_QWORD *)(a2 + 160);
    v31 = *(_QWORD *)(a2 + 168);
    v32 = *(_QWORD *)(a2 + 176);
    v33 = *(_QWORD *)(a2 + 184);
    v34 = *(_QWORD *)(a2 + 192);
    v35 = *(_QWORD *)(a2 + 200);
    v36 = *(_QWORD *)(a2 + 208);
    v37 = *(_QWORD *)(a2 + 216);
    v38 = *(_QWORD *)(a2 + 224);
    v20 = *(_QWORD *)(a2 + 120);
    v21 = v12;
    v22 = v13;
    v23 = v14;
    v24 = v18;
    sub_1A552370C(v12, v13, v14, v15, v16, v17, v19, v18, v20, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v39);
    *(_QWORD *)(a1 + 56) = v21;
    *(_QWORD *)(a1 + 64) = v22;
    *(_QWORD *)(a1 + 72) = v23;
    *(_QWORD *)(a1 + 80) = v15;
    *(_QWORD *)(a1 + 88) = v16;
    *(_QWORD *)(a1 + 96) = v17;
    *(_QWORD *)(a1 + 104) = v19;
    *(_QWORD *)(a1 + 112) = v24;
    *(_QWORD *)(a1 + 120) = v20;
    *(_QWORD *)(a1 + 128) = v26;
    *(_QWORD *)(a1 + 136) = v27;
    *(_QWORD *)(a1 + 144) = v28;
    *(_QWORD *)(a1 + 152) = v29;
    *(_QWORD *)(a1 + 160) = v30;
    *(_QWORD *)(a1 + 168) = v31;
    *(_QWORD *)(a1 + 176) = v32;
    *(_QWORD *)(a1 + 184) = v33;
    *(_QWORD *)(a1 + 192) = v34;
    *(_QWORD *)(a1 + 200) = v35;
    *(_QWORD *)(a1 + 208) = v36;
    *(_QWORD *)(a1 + 216) = v37;
    *(_QWORD *)(a1 + 224) = v38;
    *(_BYTE *)(a1 + 232) = v39;
  }
  return a1;
}

uint64_t _s7SectionVwca(uint64_t a1, uint64_t a2)
{
  int v4;
  _OWORD *v5;
  __int128 *v6;
  int v7;
  int v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 53) = *(_BYTE *)(a2 + 53);
  *(_BYTE *)(a1 + 54) = *(_BYTE *)(a2 + 54);
  v5 = (_OWORD *)(a1 + 56);
  v6 = (__int128 *)(a2 + 56);
  v7 = *(unsigned __int8 *)(a1 + 232);
  v8 = *(unsigned __int8 *)(a2 + 232);
  if (v7 == 254)
  {
    if (v8 == 254)
      goto LABEL_8;
    goto LABEL_7;
  }
  if (v8 == 254)
  {
    sub_1A55D9BF0(a1 + 56);
LABEL_12:
    v31 = *(_OWORD *)(a2 + 104);
    v33 = *v6;
    v32 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v31;
    *v5 = v33;
    *(_OWORD *)(a1 + 72) = v32;
    v34 = *(_OWORD *)(a2 + 168);
    v36 = *(_OWORD *)(a2 + 120);
    v35 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v34;
    *(_OWORD *)(a1 + 120) = v36;
    *(_OWORD *)(a1 + 136) = v35;
    v38 = *(_OWORD *)(a2 + 200);
    v37 = *(_OWORD *)(a2 + 216);
    v39 = *(_OWORD *)(a2 + 184);
    *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
    *(_OWORD *)(a1 + 200) = v38;
    *(_OWORD *)(a1 + 216) = v37;
    *(_OWORD *)(a1 + 184) = v39;
    return a1;
  }
  if (v7 != 255)
  {
    if (v8 != 255)
    {
      v94 = v8 & 1;
      v41 = *(_QWORD *)(a2 + 56);
      v42 = *(_QWORD *)(a2 + 64);
      v43 = *(_QWORD *)(a2 + 72);
      v44 = *(_QWORD *)(a2 + 80);
      v45 = *(_QWORD *)(a2 + 88);
      v46 = *(_QWORD *)(a2 + 96);
      v47 = *(_QWORD *)(a2 + 104);
      v48 = *(_QWORD *)(a2 + 112);
      v68 = *(_QWORD *)(a2 + 128);
      v70 = *(_QWORD *)(a2 + 136);
      v72 = *(_QWORD *)(a2 + 144);
      v74 = *(_QWORD *)(a2 + 152);
      v76 = *(_QWORD *)(a2 + 160);
      v78 = *(_QWORD *)(a2 + 168);
      v80 = *(_QWORD *)(a2 + 176);
      v82 = *(_QWORD *)(a2 + 184);
      v84 = *(_QWORD *)(a2 + 192);
      v86 = *(_QWORD *)(a2 + 200);
      v88 = *(_QWORD *)(a2 + 208);
      v90 = *(_QWORD *)(a2 + 216);
      v92 = *(_QWORD *)(a2 + 224);
      v49 = *(_QWORD *)(a2 + 120);
      sub_1A552370C(v41, v42, v43, v44, v45, v46, v47, v48, v49, v68, v70, v72, v74, v76, v78, v80, v82, v84, v86,
        v88,
        v90,
        v92,
        v8 & 1);
      v50 = *(_QWORD *)(a1 + 56);
      v51 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)(a1 + 56) = v41;
      *(_QWORD *)(a1 + 64) = v42;
      v52 = *(_QWORD *)(a1 + 72);
      v53 = *(_QWORD *)(a1 + 80);
      *(_QWORD *)(a1 + 72) = v43;
      *(_QWORD *)(a1 + 80) = v44;
      v54 = *(_QWORD *)(a1 + 88);
      v55 = *(_QWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 88) = v45;
      *(_QWORD *)(a1 + 96) = v46;
      v56 = *(_QWORD *)(a1 + 104);
      v57 = *(_QWORD *)(a1 + 112);
      *(_QWORD *)(a1 + 104) = v47;
      *(_QWORD *)(a1 + 112) = v48;
      v58 = *(_OWORD *)(a1 + 120);
      *(_QWORD *)(a1 + 120) = v49;
      *(_QWORD *)(a1 + 128) = v68;
      v59 = *(_OWORD *)(a1 + 136);
      *(_QWORD *)(a1 + 136) = v70;
      *(_QWORD *)(a1 + 144) = v72;
      v60 = *(_OWORD *)(a1 + 152);
      *(_QWORD *)(a1 + 152) = v74;
      *(_QWORD *)(a1 + 160) = v76;
      v61 = *(_OWORD *)(a1 + 168);
      *(_QWORD *)(a1 + 168) = v78;
      *(_QWORD *)(a1 + 176) = v80;
      v62 = *(_OWORD *)(a1 + 184);
      *(_QWORD *)(a1 + 184) = v82;
      *(_QWORD *)(a1 + 192) = v84;
      v63 = *(_OWORD *)(a1 + 200);
      *(_QWORD *)(a1 + 200) = v86;
      *(_QWORD *)(a1 + 208) = v88;
      v64 = *(_QWORD *)(a1 + 216);
      v65 = *(_QWORD *)(a1 + 224);
      *(_QWORD *)(a1 + 216) = v90;
      *(_QWORD *)(a1 + 224) = v92;
      v66 = *(_BYTE *)(a1 + 232);
      *(_BYTE *)(a1 + 232) = v94;
      sub_1A55241F0(v50, v51, v52, v53, v54, v55, v56, v57, v58, *((uint64_t *)&v58 + 1), v59, *((uint64_t *)&v59 + 1), v60, *((uint64_t *)&v60 + 1), v61, *((uint64_t *)&v61 + 1), v62, *((uint64_t *)&v62 + 1), v63,
        *((uint64_t *)&v63 + 1),
        v64,
        v65,
        v66);
      return a1;
    }
    sub_1A55D9BBC(a1 + 56);
    goto LABEL_12;
  }
LABEL_7:
  if (v8 != 255)
  {
    v93 = v8 & 1;
    v18 = *(_QWORD *)(a2 + 56);
    v19 = *(_QWORD *)(a2 + 64);
    v20 = *(_QWORD *)(a2 + 72);
    v21 = *(_QWORD *)(a2 + 80);
    v22 = *(_QWORD *)(a2 + 88);
    v23 = *(_QWORD *)(a2 + 96);
    v25 = *(_QWORD *)(a2 + 104);
    v24 = *(_QWORD *)(a2 + 112);
    v67 = *(_QWORD *)(a2 + 128);
    v69 = *(_QWORD *)(a2 + 136);
    v71 = *(_QWORD *)(a2 + 144);
    v73 = *(_QWORD *)(a2 + 152);
    v75 = *(_QWORD *)(a2 + 160);
    v77 = *(_QWORD *)(a2 + 168);
    v79 = *(_QWORD *)(a2 + 176);
    v81 = *(_QWORD *)(a2 + 184);
    v83 = *(_QWORD *)(a2 + 192);
    v85 = *(_QWORD *)(a2 + 200);
    v87 = *(_QWORD *)(a2 + 208);
    v89 = *(_QWORD *)(a2 + 216);
    v91 = *(_QWORD *)(a2 + 224);
    v26 = *(_QWORD *)(a2 + 120);
    v27 = v18;
    v28 = v19;
    v29 = v20;
    v30 = v24;
    sub_1A552370C(v18, v19, v20, v21, v22, v23, v25, v24, v26, v67, v69, v71, v73, v75, v77, v79, v81, v83, v85,
      v87,
      v89,
      v91,
      v8 & 1);
    *(_QWORD *)(a1 + 56) = v27;
    *(_QWORD *)(a1 + 64) = v28;
    *(_QWORD *)(a1 + 72) = v29;
    *(_QWORD *)(a1 + 80) = v21;
    *(_QWORD *)(a1 + 88) = v22;
    *(_QWORD *)(a1 + 96) = v23;
    *(_QWORD *)(a1 + 104) = v25;
    *(_QWORD *)(a1 + 112) = v30;
    *(_QWORD *)(a1 + 120) = v26;
    *(_QWORD *)(a1 + 128) = v67;
    *(_QWORD *)(a1 + 136) = v69;
    *(_QWORD *)(a1 + 144) = v71;
    *(_QWORD *)(a1 + 152) = v73;
    *(_QWORD *)(a1 + 160) = v75;
    *(_QWORD *)(a1 + 168) = v77;
    *(_QWORD *)(a1 + 176) = v79;
    *(_QWORD *)(a1 + 184) = v81;
    *(_QWORD *)(a1 + 192) = v83;
    *(_QWORD *)(a1 + 200) = v85;
    *(_QWORD *)(a1 + 208) = v87;
    *(_QWORD *)(a1 + 216) = v89;
    *(_QWORD *)(a1 + 224) = v91;
    *(_BYTE *)(a1 + 232) = v93;
    return a1;
  }
LABEL_8:
  v9 = *v6;
  v10 = *(_OWORD *)(a2 + 72);
  v11 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v11;
  *v5 = v9;
  *(_OWORD *)(a1 + 72) = v10;
  v12 = *(_OWORD *)(a2 + 120);
  v13 = *(_OWORD *)(a2 + 136);
  v14 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v14;
  *(_OWORD *)(a1 + 120) = v12;
  *(_OWORD *)(a1 + 136) = v13;
  v15 = *(_OWORD *)(a2 + 184);
  v16 = *(_OWORD *)(a2 + 200);
  v17 = *(_OWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_OWORD *)(a1 + 200) = v16;
  *(_OWORD *)(a1 + 216) = v17;
  *(_OWORD *)(a1 + 184) = v15;
  return a1;
}

uint64_t sub_1A55D9BBC(uint64_t a1)
{
  destroy for BodyStructure(a1);
  return a1;
}

uint64_t sub_1A55D9BF0(uint64_t a1)
{
  _s13BodyStructureOwxx(a1);
  return a1;
}

__n128 __swift_memcpy233_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[13];
  *(_OWORD *)(a1 + 217) = *(__int128 *)((char *)a2 + 217);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t _s7SectionVwta(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_BYTE *)(a1 + 53) = *(_BYTE *)(a2 + 53);
  *(_BYTE *)(a1 + 54) = *(_BYTE *)(a2 + 54);
  v4 = *(unsigned __int8 *)(a1 + 232);
  v5 = *(unsigned __int8 *)(a2 + 232);
  if (v4 != 254)
  {
    if (v5 == 254)
    {
      sub_1A55D9BF0(a1 + 56);
    }
    else if (v4 != 255)
    {
      if (v5 != 255)
      {
        v12 = *(_QWORD *)(a1 + 56);
        v13 = *(_QWORD *)(a1 + 64);
        v14 = *(_QWORD *)(a1 + 72);
        v15 = *(_QWORD *)(a1 + 80);
        v16 = *(_QWORD *)(a1 + 88);
        v17 = *(_QWORD *)(a1 + 96);
        v18 = *(_QWORD *)(a1 + 104);
        v19 = *(_QWORD *)(a1 + 112);
        v20 = *(_OWORD *)(a1 + 120);
        v21 = *(_OWORD *)(a1 + 136);
        v22 = *(_OWORD *)(a1 + 152);
        v23 = *(_OWORD *)(a1 + 168);
        v24 = *(_OWORD *)(a1 + 184);
        v25 = *(_OWORD *)(a1 + 200);
        v26 = *(_QWORD *)(a1 + 216);
        v27 = *(_QWORD *)(a1 + 224);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
        *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
        *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
        *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
        *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
        *(_BYTE *)(a1 + 232) = v5 & 1;
        sub_1A55241F0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
          *((uint64_t *)&v25 + 1),
          v26,
          v27,
          v4 & 1);
        return a1;
      }
      sub_1A55D9BBC(a1 + 56);
    }
  }
  v6 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v6;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  v7 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v7;
  v8 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v8;
  v9 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v9;
  v10 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v10;
  return a1;
}

uint64_t _s7SectionVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 233))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s7SectionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 232) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 233) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 233) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s7SectionVMa()
{
  return &_s7SectionVN;
}

uint64_t *sub_1A55D9F18(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for MessageHeader();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 3, v10))
    {
      v12 = _s19MessageHeaderStatusOMa(0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = sub_1A594AE60();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 3, v10);
    }
    v15 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v4;
}

uint64_t _s19MessageHeaderStatusOMa(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE797238);
}

uint64_t sub_1A55DA04C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for MessageHeader();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 3, v3))
  {
    v4 = sub_1A594AE60();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_DWORD *sub_1A55DA0D0(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for MessageHeader();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 3, v9))
  {
    v11 = _s19MessageHeaderStatusOMa(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_1A594AE60();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v8, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 3, v9);
  }
  v13 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_DWORD *sub_1A55DA1C4(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for MessageHeader();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 3, v9);
  v13 = v11(v8, 3, v9);
  if (!v12)
  {
    if (!v13)
    {
      v17 = sub_1A594AE60();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v7, v8, v17);
      goto LABEL_7;
    }
    sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for MessageHeader);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = _s19MessageHeaderStatusOMa(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v14 = sub_1A594AE60();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 3, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

_DWORD *sub_1A55DA328(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for MessageHeader();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 3, v9))
  {
    v11 = _s19MessageHeaderStatusOMa(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_1A594AE60();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 3, v9);
  }
  v13 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  return a1;
}

_DWORD *sub_1A55DA410(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for MessageHeader();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 3, v9);
  v13 = v11(v8, 3, v9);
  if (!v12)
  {
    if (!v13)
    {
      v17 = sub_1A594AE60();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v7, v8, v17);
      goto LABEL_7;
    }
    sub_1A55034FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for MessageHeader);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = _s19MessageHeaderStatusOMa(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v14 = sub_1A594AE60();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 3, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A55DA564()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A55DA570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = _s19MessageHeaderStatusOMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1A55DA5F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A55DA5FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = _s19MessageHeaderStatusOMa(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1A55DA678()
{
  uint64_t result;
  unint64_t v1;

  result = _s19MessageHeaderStatusOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A55DA700(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for MessageHeader();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_1A594AE60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t sub_1A55DA7D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = type metadata accessor for MessageHeader();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1A594AE60();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_1A55DA838(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for MessageHeader();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1A594AE60();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *sub_1A55DA8E8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = type metadata accessor for MessageHeader();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_1A594AE60();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_1A55034FC((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for MessageHeader);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_1A594AE60();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

void *sub_1A55DA9F0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for MessageHeader();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1A594AE60();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *sub_1A55DAAA0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = type metadata accessor for MessageHeader();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_1A594AE60();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_1A55034FC((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for MessageHeader);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_1A594AE60();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t sub_1A55DABA8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A55DABB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for MessageHeader();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4)
    return v5 - 3;
  else
    return 0;
}

uint64_t sub_1A55DAC00()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A55DAC0C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 3);
  else
    v5 = 0;
  v6 = type metadata accessor for MessageHeader();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1A55DAC60(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MessageHeader();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
}

uint64_t sub_1A55DAC98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MessageHeader();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 3, v4);
}

uint64_t sub_1A55DACD8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594AE60();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void _s28MessageWaitingForSectionInfoVwxx(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 184);
  if (v1 <= 0xFD)
    sub_1A55241F0(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152),
      *(_QWORD *)(a1 + 160),
      *(_QWORD *)(a1 + 168),
      *(_QWORD *)(a1 + 176),
      v1 & 1);
}

uint64_t _s28MessageWaitingForSectionInfoVwcp(uint64_t a1, uint64_t a2)
{
  int v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(unsigned __int8 *)(a2 + 184);
  if (v3 == 254 || v3 == 255)
  {
    v4 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v4;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
    v5 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v5;
    v6 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v6;
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
    v8 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v8;
  }
  else
  {
    v32 = v3 & 1;
    v9 = *(_QWORD *)(a2 + 40);
    v10 = *(_QWORD *)(a2 + 48);
    v11 = *(_QWORD *)(a2 + 56);
    v12 = *(_QWORD *)(a2 + 64);
    v19 = *(_QWORD *)(a2 + 80);
    v20 = *(_QWORD *)(a2 + 88);
    v21 = *(_QWORD *)(a2 + 96);
    v22 = *(_QWORD *)(a2 + 104);
    v23 = *(_QWORD *)(a2 + 112);
    v24 = *(_QWORD *)(a2 + 120);
    v25 = *(_QWORD *)(a2 + 128);
    v26 = *(_QWORD *)(a2 + 136);
    v27 = *(_QWORD *)(a2 + 144);
    v28 = *(_QWORD *)(a2 + 152);
    v29 = *(_QWORD *)(a2 + 160);
    v30 = *(_QWORD *)(a2 + 168);
    v31 = *(_QWORD *)(a2 + 176);
    v13 = *(_QWORD *)(a2 + 72);
    v14 = *(_QWORD *)(a2 + 8);
    v15 = *(_QWORD *)(a2 + 16);
    v16 = *(_QWORD *)(a2 + 24);
    v17 = *(_QWORD *)(a2 + 32);
    sub_1A552370C(v14, v15, v16, v17, v9, v10, v11, v12, v13, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
      v29,
      v30,
      v31,
      v3 & 1);
    *(_QWORD *)(a1 + 8) = v14;
    *(_QWORD *)(a1 + 16) = v15;
    *(_QWORD *)(a1 + 24) = v16;
    *(_QWORD *)(a1 + 32) = v17;
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    *(_QWORD *)(a1 + 72) = v13;
    *(_QWORD *)(a1 + 80) = v19;
    *(_QWORD *)(a1 + 88) = v20;
    *(_QWORD *)(a1 + 96) = v21;
    *(_QWORD *)(a1 + 104) = v22;
    *(_QWORD *)(a1 + 112) = v23;
    *(_QWORD *)(a1 + 120) = v24;
    *(_QWORD *)(a1 + 128) = v25;
    *(_QWORD *)(a1 + 136) = v26;
    *(_QWORD *)(a1 + 144) = v27;
    *(_QWORD *)(a1 + 152) = v28;
    *(_QWORD *)(a1 + 160) = v29;
    *(_QWORD *)(a1 + 168) = v30;
    *(_QWORD *)(a1 + 176) = v31;
    *(_BYTE *)(a1 + 184) = v32;
  }
  return a1;
}

uint64_t _s28MessageWaitingForSectionInfoVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 *v4;
  int v5;
  int v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v3 = a1 + 8;
  v4 = (__int128 *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a1 + 184);
  v6 = *(unsigned __int8 *)(a2 + 184);
  if (v5 == 254)
  {
    if (v6 == 254)
      goto LABEL_8;
    goto LABEL_7;
  }
  if (v6 == 254)
  {
    sub_1A55D9BF0(a1 + 8);
LABEL_12:
    v25 = v4[3];
    v27 = *v4;
    v26 = v4[1];
    *(_OWORD *)(v3 + 32) = v4[2];
    *(_OWORD *)(v3 + 48) = v25;
    *(_OWORD *)v3 = v27;
    *(_OWORD *)(v3 + 16) = v26;
    v28 = v4[7];
    v30 = v4[4];
    v29 = v4[5];
    *(_OWORD *)(v3 + 96) = v4[6];
    *(_OWORD *)(v3 + 112) = v28;
    *(_OWORD *)(v3 + 64) = v30;
    *(_OWORD *)(v3 + 80) = v29;
    v32 = v4[9];
    v31 = v4[10];
    v33 = v4[8];
    *(_BYTE *)(v3 + 176) = *((_BYTE *)v4 + 176);
    *(_OWORD *)(v3 + 144) = v32;
    *(_OWORD *)(v3 + 160) = v31;
    *(_OWORD *)(v3 + 128) = v33;
    return a1;
  }
  if (v5 != 255)
  {
    if (v6 != 255)
    {
      v88 = v6 & 1;
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(_QWORD *)(a2 + 16);
      v37 = *(_QWORD *)(a2 + 24);
      v38 = *(_QWORD *)(a2 + 32);
      v39 = *(_QWORD *)(a2 + 40);
      v40 = *(_QWORD *)(a2 + 48);
      v41 = *(_QWORD *)(a2 + 56);
      v42 = *(_QWORD *)(a2 + 64);
      v43 = *(_QWORD *)(a2 + 72);
      v62 = *(_QWORD *)(a2 + 80);
      v64 = *(_QWORD *)(a2 + 88);
      v66 = *(_QWORD *)(a2 + 96);
      v68 = *(_QWORD *)(a2 + 104);
      v70 = *(_QWORD *)(a2 + 112);
      v72 = *(_QWORD *)(a2 + 120);
      v74 = *(_QWORD *)(a2 + 128);
      v76 = *(_QWORD *)(a2 + 136);
      v78 = *(_QWORD *)(a2 + 144);
      v80 = *(_QWORD *)(a2 + 152);
      v82 = *(_QWORD *)(a2 + 160);
      v84 = *(_QWORD *)(a2 + 168);
      v86 = *(_QWORD *)(a2 + 176);
      sub_1A552370C(v35, v36, v37, v38, v39, v40, v41, v42, v43, v62, v64, v66, v68, v70, v72, v74, v76, v78, v80,
        v82,
        v84,
        v86,
        v6 & 1);
      v44 = *(_QWORD *)(a1 + 8);
      v45 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 8) = v35;
      *(_QWORD *)(a1 + 16) = v36;
      v46 = *(_QWORD *)(a1 + 24);
      v47 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v37;
      *(_QWORD *)(a1 + 32) = v38;
      v48 = *(_QWORD *)(a1 + 40);
      v49 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 40) = v39;
      *(_QWORD *)(a1 + 48) = v40;
      v50 = *(_QWORD *)(a1 + 56);
      v51 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)(a1 + 56) = v41;
      *(_QWORD *)(a1 + 64) = v42;
      v52 = *(_OWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 72) = v43;
      *(_QWORD *)(a1 + 80) = v62;
      v53 = *(_OWORD *)(a1 + 88);
      *(_QWORD *)(a1 + 88) = v64;
      *(_QWORD *)(a1 + 96) = v66;
      v54 = *(_OWORD *)(a1 + 104);
      *(_QWORD *)(a1 + 104) = v68;
      *(_QWORD *)(a1 + 112) = v70;
      v55 = *(_OWORD *)(a1 + 120);
      *(_QWORD *)(a1 + 120) = v72;
      *(_QWORD *)(a1 + 128) = v74;
      v56 = *(_OWORD *)(a1 + 136);
      *(_QWORD *)(a1 + 136) = v76;
      *(_QWORD *)(a1 + 144) = v78;
      v57 = *(_OWORD *)(a1 + 152);
      *(_QWORD *)(a1 + 152) = v80;
      *(_QWORD *)(a1 + 160) = v82;
      v58 = *(_QWORD *)(a1 + 168);
      v59 = *(_QWORD *)(a1 + 176);
      *(_QWORD *)(a1 + 168) = v84;
      *(_QWORD *)(a1 + 176) = v86;
      v60 = *(_BYTE *)(a1 + 184);
      *(_BYTE *)(a1 + 184) = v88;
      sub_1A55241F0(v44, v45, v46, v47, v48, v49, v50, v51, v52, *((uint64_t *)&v52 + 1), v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55, *((uint64_t *)&v55 + 1), v56, *((uint64_t *)&v56 + 1), v57,
        *((uint64_t *)&v57 + 1),
        v58,
        v59,
        v60);
      return a1;
    }
    sub_1A55D9BBC(a1 + 8);
    goto LABEL_12;
  }
LABEL_7:
  if (v6 != 255)
  {
    v87 = v6 & 1;
    v16 = *(_QWORD *)(a2 + 40);
    v17 = *(_QWORD *)(a2 + 48);
    v18 = *(_QWORD *)(a2 + 56);
    v19 = *(_QWORD *)(a2 + 64);
    v61 = *(_QWORD *)(a2 + 80);
    v63 = *(_QWORD *)(a2 + 88);
    v65 = *(_QWORD *)(a2 + 96);
    v67 = *(_QWORD *)(a2 + 104);
    v69 = *(_QWORD *)(a2 + 112);
    v71 = *(_QWORD *)(a2 + 120);
    v73 = *(_QWORD *)(a2 + 128);
    v75 = *(_QWORD *)(a2 + 136);
    v77 = *(_QWORD *)(a2 + 144);
    v79 = *(_QWORD *)(a2 + 152);
    v81 = *(_QWORD *)(a2 + 160);
    v83 = *(_QWORD *)(a2 + 168);
    v85 = *(_QWORD *)(a2 + 176);
    v20 = *(_QWORD *)(a2 + 72);
    v21 = *(_QWORD *)(a2 + 8);
    v22 = *(_QWORD *)(a2 + 16);
    v23 = *(_QWORD *)(a2 + 24);
    v24 = *(_QWORD *)(a2 + 32);
    sub_1A552370C(v21, v22, v23, v24, v16, v17, v18, v19, v20, v61, v63, v65, v67, v69, v71, v73, v75, v77, v79,
      v81,
      v83,
      v85,
      v6 & 1);
    *(_QWORD *)(a1 + 8) = v21;
    *(_QWORD *)(a1 + 16) = v22;
    *(_QWORD *)(a1 + 24) = v23;
    *(_QWORD *)(a1 + 32) = v24;
    *(_QWORD *)(a1 + 40) = v16;
    *(_QWORD *)(a1 + 48) = v17;
    *(_QWORD *)(a1 + 56) = v18;
    *(_QWORD *)(a1 + 64) = v19;
    *(_QWORD *)(a1 + 72) = v20;
    *(_QWORD *)(a1 + 80) = v61;
    *(_QWORD *)(a1 + 88) = v63;
    *(_QWORD *)(a1 + 96) = v65;
    *(_QWORD *)(a1 + 104) = v67;
    *(_QWORD *)(a1 + 112) = v69;
    *(_QWORD *)(a1 + 120) = v71;
    *(_QWORD *)(a1 + 128) = v73;
    *(_QWORD *)(a1 + 136) = v75;
    *(_QWORD *)(a1 + 144) = v77;
    *(_QWORD *)(a1 + 152) = v79;
    *(_QWORD *)(a1 + 160) = v81;
    *(_QWORD *)(a1 + 168) = v83;
    *(_QWORD *)(a1 + 176) = v85;
    *(_BYTE *)(a1 + 184) = v87;
    return a1;
  }
LABEL_8:
  v7 = *v4;
  v8 = *(_OWORD *)(a2 + 24);
  v9 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v9;
  *(_OWORD *)v3 = v7;
  *(_OWORD *)(a1 + 24) = v8;
  v10 = *(_OWORD *)(a2 + 72);
  v11 = *(_OWORD *)(a2 + 88);
  v12 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v12;
  *(_OWORD *)(a1 + 72) = v10;
  *(_OWORD *)(a1 + 88) = v11;
  v13 = *(_OWORD *)(a2 + 136);
  v14 = *(_OWORD *)(a2 + 152);
  v15 = *(_OWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_OWORD *)(a1 + 152) = v14;
  *(_OWORD *)(a1 + 168) = v15;
  *(_OWORD *)(a1 + 136) = v13;
  return a1;
}

__n128 __swift_memcpy185_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_OWORD *)(a1 + 169) = *(__int128 *)((char *)a2 + 169);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t _s28MessageWaitingForSectionInfoVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = a1 + 8;
  v4 = a2 + 8;
  v5 = *(unsigned __int8 *)(a1 + 184);
  v6 = *(unsigned __int8 *)(a2 + 184);
  if (v5 != 254)
  {
    if (v6 == 254)
    {
      sub_1A55D9BF0(a1 + 8);
    }
    else if (v5 != 255)
    {
      if (v6 != 255)
      {
        v13 = *(_QWORD *)(a1 + 8);
        v14 = *(_QWORD *)(a1 + 16);
        v15 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        v17 = *(_QWORD *)(a1 + 40);
        v18 = *(_QWORD *)(a1 + 48);
        v19 = *(_QWORD *)(a1 + 56);
        v20 = *(_QWORD *)(a1 + 64);
        v21 = *(_OWORD *)(a1 + 72);
        v22 = *(_OWORD *)(a1 + 88);
        v23 = *(_OWORD *)(a1 + 104);
        v24 = *(_OWORD *)(a1 + 120);
        v25 = *(_OWORD *)(a1 + 136);
        v26 = *(_OWORD *)(a1 + 152);
        v27 = *(_QWORD *)(a1 + 168);
        v28 = *(_QWORD *)(a1 + 176);
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
        *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
        *(_BYTE *)(a1 + 184) = v6 & 1;
        sub_1A55241F0(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26,
          *((uint64_t *)&v26 + 1),
          v27,
          v28,
          v5 & 1);
        return a1;
      }
      sub_1A55D9BBC(a1 + 8);
    }
  }
  v7 = *(_OWORD *)(v4 + 144);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v4 + 128);
  *(_OWORD *)(v3 + 144) = v7;
  *(_OWORD *)(v3 + 160) = *(_OWORD *)(v4 + 160);
  *(_BYTE *)(v3 + 176) = *(_BYTE *)(v4 + 176);
  v8 = *(_OWORD *)(v4 + 80);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v4 + 64);
  *(_OWORD *)(v3 + 80) = v8;
  v9 = *(_OWORD *)(v4 + 112);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v4 + 96);
  *(_OWORD *)(v3 + 112) = v9;
  v10 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)v3 = *(_OWORD *)v4;
  *(_OWORD *)(v3 + 16) = v10;
  v11 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v3 + 48) = v11;
  return a1;
}

uint64_t _s28MessageWaitingForSectionInfoVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;
  int v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 185))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 184);
  v4 = v3 ^ 0xFF;
  if ((int)(v3 ^ 0xFF) <= 1)
    v4 = 1;
  v5 = v4 - 2;
  if (v3 <= 1)
    v6 = -1;
  else
    v6 = v5;
  return (v6 + 1);
}

uint64_t _s28MessageWaitingForSectionInfoVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 184) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 185) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 185) = 0;
    if (a2)
      *(_BYTE *)(result + 184) = -2 - a2;
  }
  return result;
}

ValueMetadata *_s28MessageWaitingForSectionInfoVMa()
{
  return &_s28MessageWaitingForSectionInfoVN;
}

void _s13BodyStructureOwxx(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 176);
  if (v1 <= 1)
    sub_1A55241F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
      *(_QWORD *)(a1 + 152),
      *(_QWORD *)(a1 + 160),
      *(_QWORD *)(a1 + 168),
      v1 != 0);
}

uint64_t _s28MessageWaitingForSectionInfoV13BodyStructureOwcp(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v3 = *((unsigned __int8 *)a2 + 176);
  if ((v3 + 1) > 2u || v3 > 1)
  {
    v13 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 144) = v13;
    *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
    v14 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v14;
    v15 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v15;
    v16 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    v17 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v17;
  }
  else
  {
    v32 = *((_BYTE *)a2 + 176);
    v4 = a2[4];
    v5 = a2[5];
    v6 = a2[6];
    v7 = a2[7];
    v19 = a2[9];
    v20 = a2[10];
    v21 = a2[11];
    v22 = a2[12];
    v23 = a2[13];
    v24 = a2[14];
    v25 = a2[15];
    v26 = a2[16];
    v27 = a2[17];
    v28 = a2[18];
    v29 = a2[19];
    v30 = a2[20];
    v31 = a2[21];
    v8 = a2[8];
    v9 = *a2;
    v10 = a2[1];
    v11 = a2[2];
    v12 = a2[3];
    sub_1A552370C(*a2, v10, v11, v12, v4, v5, v6, v7, v8, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
      v29,
      v30,
      v31,
      v3 & 1);
    *(_QWORD *)a1 = v9;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = v11;
    *(_QWORD *)(a1 + 24) = v12;
    *(_QWORD *)(a1 + 32) = v4;
    *(_QWORD *)(a1 + 40) = v5;
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = v19;
    *(_QWORD *)(a1 + 80) = v20;
    *(_QWORD *)(a1 + 88) = v21;
    *(_QWORD *)(a1 + 96) = v22;
    *(_QWORD *)(a1 + 104) = v23;
    *(_QWORD *)(a1 + 112) = v24;
    *(_QWORD *)(a1 + 120) = v25;
    *(_QWORD *)(a1 + 128) = v26;
    *(_QWORD *)(a1 + 136) = v27;
    *(_QWORD *)(a1 + 144) = v28;
    *(_QWORD *)(a1 + 152) = v29;
    *(_QWORD *)(a1 + 160) = v30;
    *(_QWORD *)(a1 + 168) = v31;
    *(_BYTE *)(a1 + 176) = v32;
  }
  return a1;
}

uint64_t _s28MessageWaitingForSectionInfoV13BodyStructureOwca(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;

  v4 = *(unsigned __int8 *)(a1 + 176);
  v5 = *((unsigned __int8 *)a2 + 176);
  if ((v4 + 1) > 2u)
  {
    if ((v5 + 1) > 2u)
      goto LABEL_11;
    goto LABEL_7;
  }
  if ((v5 + 1) > 2u)
  {
    if (v4 <= 1)
      goto LABEL_10;
LABEL_11:
    v41 = *a2;
    v42 = a2[1];
    v43 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v43;
    *(_OWORD *)a1 = v41;
    *(_OWORD *)(a1 + 16) = v42;
    v44 = a2[4];
    v45 = a2[5];
    v46 = a2[7];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v46;
    *(_OWORD *)(a1 + 64) = v44;
    *(_OWORD *)(a1 + 80) = v45;
    v47 = a2[8];
    v48 = a2[9];
    v49 = a2[10];
    *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
    *(_OWORD *)(a1 + 144) = v48;
    *(_OWORD *)(a1 + 160) = v49;
    *(_OWORD *)(a1 + 128) = v47;
    return a1;
  }
  if (v4 > 1)
  {
LABEL_7:
    if (v5 <= 1)
    {
      v78 = *((_BYTE *)a2 + 176);
      v32 = *((_QWORD *)a2 + 3);
      v33 = *((_QWORD *)a2 + 4);
      v34 = *((_QWORD *)a2 + 5);
      v35 = *((_QWORD *)a2 + 6);
      v52 = *((_QWORD *)a2 + 9);
      v54 = *((_QWORD *)a2 + 10);
      v56 = *((_QWORD *)a2 + 11);
      v58 = *((_QWORD *)a2 + 12);
      v60 = *((_QWORD *)a2 + 13);
      v62 = *((_QWORD *)a2 + 14);
      v64 = *((_QWORD *)a2 + 15);
      v66 = *((_QWORD *)a2 + 16);
      v68 = *((_QWORD *)a2 + 17);
      v70 = *((_QWORD *)a2 + 18);
      v72 = *((_QWORD *)a2 + 19);
      v74 = *((_QWORD *)a2 + 20);
      v76 = *((_QWORD *)a2 + 21);
      v36 = *((_QWORD *)a2 + 8);
      v37 = *(_QWORD *)a2;
      v38 = *((_QWORD *)a2 + 1);
      v39 = *((_QWORD *)a2 + 2);
      v40 = *((_QWORD *)a2 + 7);
      sub_1A552370C(*(_QWORD *)a2, v38, v39, v32, v33, v34, v35, v40, v36, v52, v54, v56, v58, v60, v62, v64, v66, v68, v70,
        v72,
        v74,
        v76,
        v5 & 1);
      *(_QWORD *)a1 = v37;
      *(_QWORD *)(a1 + 8) = v38;
      *(_QWORD *)(a1 + 16) = v39;
      *(_QWORD *)(a1 + 24) = v32;
      *(_QWORD *)(a1 + 32) = v33;
      *(_QWORD *)(a1 + 40) = v34;
      *(_QWORD *)(a1 + 48) = v35;
      *(_QWORD *)(a1 + 56) = v40;
      *(_QWORD *)(a1 + 64) = v36;
      *(_QWORD *)(a1 + 72) = v52;
      *(_QWORD *)(a1 + 80) = v54;
      *(_QWORD *)(a1 + 88) = v56;
      *(_QWORD *)(a1 + 96) = v58;
      *(_QWORD *)(a1 + 104) = v60;
      *(_QWORD *)(a1 + 112) = v62;
      *(_QWORD *)(a1 + 120) = v64;
      *(_QWORD *)(a1 + 128) = v66;
      *(_QWORD *)(a1 + 136) = v68;
      *(_QWORD *)(a1 + 144) = v70;
      *(_QWORD *)(a1 + 152) = v72;
      *(_QWORD *)(a1 + 160) = v74;
      *(_QWORD *)(a1 + 168) = v76;
      *(_BYTE *)(a1 + 176) = v78;
      return a1;
    }
    goto LABEL_11;
  }
  if (v5 > 1)
  {
LABEL_10:
    sub_1A55241F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
      *(_QWORD *)(a1 + 152),
      *(_QWORD *)(a1 + 160),
      *(_QWORD *)(a1 + 168),
      v4 & 1);
    goto LABEL_11;
  }
  v77 = *((_BYTE *)a2 + 176);
  v6 = *(_QWORD *)a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  v9 = *((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 4);
  v11 = *((_QWORD *)a2 + 5);
  v12 = *((_QWORD *)a2 + 6);
  v13 = *((_QWORD *)a2 + 7);
  v51 = *((_QWORD *)a2 + 9);
  v53 = *((_QWORD *)a2 + 10);
  v55 = *((_QWORD *)a2 + 11);
  v57 = *((_QWORD *)a2 + 12);
  v59 = *((_QWORD *)a2 + 13);
  v61 = *((_QWORD *)a2 + 14);
  v63 = *((_QWORD *)a2 + 15);
  v65 = *((_QWORD *)a2 + 16);
  v67 = *((_QWORD *)a2 + 17);
  v69 = *((_QWORD *)a2 + 18);
  v71 = *((_QWORD *)a2 + 19);
  v73 = *((_QWORD *)a2 + 20);
  v75 = *((_QWORD *)a2 + 21);
  v14 = *((_QWORD *)a2 + 8);
  sub_1A552370C(*(_QWORD *)a2, v7, v8, v9, v10, v11, v12, v13, v14, v51, v53, v55, v57, v59, v61, v63, v65, v67, v69,
    v71,
    v73,
    v75,
    v5 & 1);
  v15 = *(_QWORD *)a1;
  v16 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  v17 = *(_QWORD *)(a1 + 16);
  v18 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  v19 = *(_QWORD *)(a1 + 32);
  v20 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  v21 = *(_QWORD *)(a1 + 48);
  v22 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v13;
  v23 = *(_OWORD *)(a1 + 64);
  v24 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v51;
  *(_QWORD *)(a1 + 80) = v53;
  *(_QWORD *)(a1 + 88) = v55;
  v25 = *(_OWORD *)(a1 + 96);
  v26 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v57;
  *(_QWORD *)(a1 + 104) = v59;
  *(_QWORD *)(a1 + 112) = v61;
  *(_QWORD *)(a1 + 120) = v63;
  v27 = *(_OWORD *)(a1 + 128);
  v28 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v65;
  *(_QWORD *)(a1 + 136) = v67;
  *(_QWORD *)(a1 + 144) = v69;
  *(_QWORD *)(a1 + 152) = v71;
  v29 = *(_QWORD *)(a1 + 160);
  v30 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = v73;
  *(_QWORD *)(a1 + 168) = v75;
  v31 = *(_BYTE *)(a1 + 176);
  *(_BYTE *)(a1 + 176) = v77;
  sub_1A55241F0(v15, v16, v17, v18, v19, v20, v21, v22, v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28,
    *((uint64_t *)&v28 + 1),
    v29,
    v30,
    v31);
  return a1;
}

__n128 __swift_memcpy177_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t _s28MessageWaitingForSectionInfoV13BodyStructureOwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  v4 = *(unsigned __int8 *)(a1 + 176);
  if ((v4 + 1) > 2u)
    goto LABEL_8;
  v5 = *(unsigned __int8 *)(a2 + 176);
  if ((v5 + 1) > 2u)
  {
    if (v4 <= 1)
      goto LABEL_7;
LABEL_8:
    v27 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v27;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    v28 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v28;
    v29 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v29;
    v30 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v30;
    v31 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v31;
    return a1;
  }
  if (v4 > 1)
    goto LABEL_8;
  if (v5 > 1)
  {
LABEL_7:
    sub_1A55241F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
      *(_QWORD *)(a1 + 152),
      *(_QWORD *)(a1 + 160),
      *(_QWORD *)(a1 + 168),
      v4 & 1);
    goto LABEL_8;
  }
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_OWORD *)(a1 + 64);
  v15 = *(_OWORD *)(a1 + 80);
  v16 = *(_OWORD *)(a1 + 96);
  v17 = *(_OWORD *)(a1 + 112);
  v18 = *(_OWORD *)(a1 + 128);
  v19 = *(_OWORD *)(a1 + 144);
  v20 = *(_QWORD *)(a1 + 160);
  v21 = *(_QWORD *)(a1 + 168);
  v22 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v22;
  v23 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v23;
  v24 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v24;
  v25 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v25;
  v26 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v26;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 176) = v5 & 1;
  sub_1A55241F0(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19,
    *((uint64_t *)&v19 + 1),
    v20,
    v21,
    v4 & 1);
  return a1;
}

uint64_t _s28MessageWaitingForSectionInfoV13BodyStructureOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 177))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 176);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  if (v4 + 1 < 2)
    v4 = 0;
  if (v4 >= 2)
    return v4 - 1;
  else
    return 0;
}

uint64_t _s28MessageWaitingForSectionInfoV13BodyStructureOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 176) = 0;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 177) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 177) = 0;
    if (a2)
      *(_BYTE *)(result + 176) = -2 - a2;
  }
  return result;
}

uint64_t sub_1A55DBD10(uint64_t a1)
{
  unsigned int v1;
  unsigned int v2;

  v1 = *(unsigned __int8 *)(a1 + 176);
  if (v1 <= 1)
    v2 = -1;
  else
    v2 = v1 ^ 0xFF;
  if (v2 + 1 >= 2)
    return v2;
  else
    return 0;
}

double sub_1A55DBD30(uint64_t a1, unsigned int a2)
{
  double result;

  if (a2 > 0xFD)
  {
    *(_BYTE *)(a1 + 176) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 144) = 0u;
    *(_OWORD *)(a1 + 160) = 0u;
    *(_OWORD *)(a1 + 112) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_DWORD *)a1 = a2 - 254;
  }
  else if (a2)
  {
    *(_BYTE *)(a1 + 176) = ~(_BYTE)a2;
  }
  return result;
}

ValueMetadata *_s28MessageWaitingForSectionInfoV13BodyStructureOMa()
{
  return &_s28MessageWaitingForSectionInfoV13BodyStructureON;
}

void sub_1A55DBD84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = type metadata accessor for MessageHeader();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = _s19MessageHeaderStatusOMa(0);
  MEMORY[0x1E0C80A78](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797248);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v9[*(int *)(v10 + 48)];
  sub_1A55034B8(a1, (uint64_t)v9, _s19MessageHeaderStatusOMa);
  sub_1A55034B8(a2, v11, _s19MessageHeaderStatusOMa);
  v12 = (char *)sub_1A55DBEAC
      + 4 * byte_1A59A9624[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 3, v4)];
  __asm { BR              X10 }
}

uint64_t sub_1A55DBEAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  char v6;

  sub_1A55034B8(v0, v3, _s19MessageHeaderStatusOMa);
  if (v4(v5, 3, v1))
  {
    sub_1A55034FC(v3, (uint64_t (*)(_QWORD))type metadata accessor for MessageHeader);
    sub_1A5510284(v0, &qword_1EE797248);
    v6 = 0;
  }
  else
  {
    sub_1A54E3394(v5, v2, (uint64_t (*)(_QWORD))type metadata accessor for MessageHeader);
    v6 = static MessageHeader.== infix(_:_:)();
    sub_1A55034FC(v2, (uint64_t (*)(_QWORD))type metadata accessor for MessageHeader);
    sub_1A55034FC(v3, (uint64_t (*)(_QWORD))type metadata accessor for MessageHeader);
    sub_1A55034FC(v0, _s19MessageHeaderStatusOMa);
  }
  return v6 & 1;
}

void *sub_1A55DBFD8(const void *a1, void *a2)
{
  __swift_memcpy177_8_0(a2, a1);
  return a2;
}

uint64_t sub_1A55DC014(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 56);
  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v16 = *(_QWORD *)(a1 + 112);
  v17 = *(_QWORD *)(a1 + 72);
  v14 = *(_OWORD *)(a1 + 136);
  v15 = *(_OWORD *)(a1 + 120);
  v12 = *(_OWORD *)(a1 + 168);
  v13 = *(_OWORD *)(a1 + 152);
  v10 = *(_OWORD *)(a1 + 200);
  v11 = *(_OWORD *)(a1 + 184);
  v6 = *(_QWORD *)(a1 + 216);
  v7 = *(_QWORD *)(a1 + 224);
  v8 = *(_BYTE *)(a1 + 232);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5523620(v19, v18, v17, v2, v3, v4, v5, v16, v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10,
    *((uint64_t *)&v10 + 1),
    v6,
    v7,
    v8);
  return a1;
}

uint64_t sub_1A55DC110(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 56);
  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v16 = *(_QWORD *)(a1 + 112);
  v17 = *(_QWORD *)(a1 + 72);
  v14 = *(_OWORD *)(a1 + 136);
  v15 = *(_OWORD *)(a1 + 120);
  v12 = *(_OWORD *)(a1 + 168);
  v13 = *(_OWORD *)(a1 + 152);
  v10 = *(_OWORD *)(a1 + 200);
  v11 = *(_OWORD *)(a1 + 184);
  v6 = *(_QWORD *)(a1 + 216);
  v7 = *(_QWORD *)(a1 + 224);
  v8 = *(_BYTE *)(a1 + 232);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5524104(v19, v18, v17, v2, v3, v4, v5, v16, v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10,
    *((uint64_t *)&v10 + 1),
    v6,
    v7,
    v8);
  return a1;
}

uint64_t sub_1A55DC20C(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 184);
  v2 = v1 ^ 0xFF;
  if ((int)(v1 ^ 0xFF) <= 1)
    v2 = 1;
  v3 = v2 - 1;
  if (v1 <= 1)
    return 0;
  else
    return v3;
}

uint64_t sub_1A55DC22C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A55D3FC8(a1, a2);
}

uint64_t sub_1A55DC248(uint64_t a1)
{
  sub_1A55DC2B8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_BYTE *)(a1 + 184));
  return a1;
}

void sub_1A55DC2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned __int8 a24)
{
  if (a24 != 253)
    sub_1A5524104(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
      a21,
      a22,
      a23,
      a24);
}

uint64_t sub_1A55DC350(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1A55DC368(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 184);
  a2(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    v4);
  return a1;
}

void *sub_1A55DC3E0(const void *a1, void *a2)
{
  __swift_memcpy177_8_0(a2, a1);
  return a2;
}

uint64_t sub_1A55DC41C(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 176);
  if (v1 > 1)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1A55DC430(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 176);
}

uint64_t sub_1A55DC438(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 176);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    v4);
  return a1;
}

double sub_1A55DC4A4(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 176) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 184) = -3;
  return result;
}

_QWORD *sub_1A55DC4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _QWORD *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD v28[3];
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v5 = type metadata accessor for TaskHistory.Running(0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v28[1] = a1;
  v28[2] = v2;
  v10 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v11 = *(_QWORD *)(v6 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = 0;
  v29 = (_QWORD *)(a2 + 104);
  v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v32 = v9;
  v33 = v5;
  v30 = v11;
  v31 = v10;
  while (1)
  {
    sub_1A55034B8(v10 + v11 * v12, (uint64_t)v8, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A55034FC((uint64_t)v8, type metadata accessor for TaskHistory.Running);
      goto LABEL_4;
    }
    v13 = *((_DWORD *)v8 + 2);
    v14 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
    result = (_QWORD *)sub_1A55034FC((uint64_t)&v8[*(int *)(v14 + 64)], type metadata accessor for ClientCommand);
    v16 = *(_QWORD *)(a2 + 16);
    if (v16)
    {
      if (*(_DWORD *)(a2 + 32) == v13)
      {
        v18 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(a2 + 64);
        v20 = *(_QWORD *)(a2 + 40);
        v19 = *(_QWORD *)(a2 + 48);
LABEL_16:
        sub_1A55CA998(v20, v19);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v24 = v34;
        else
          v24 = sub_1A54F2208(0, v34[2] + 1, 1, v34);
        v26 = v24[2];
        v25 = v24[3];
        if (v26 >= v25 >> 1)
          v24 = sub_1A54F2208((_QWORD *)(v25 > 1), v26 + 1, 1, v24);
        v24[2] = v26 + 1;
        v34 = v24;
        v27 = &v24[4 * v26];
        v27[4] = v20;
        v27[5] = v19;
        v27[6] = v18;
        v27[7] = v17;
        v9 = v32;
        v11 = v30;
        v10 = v31;
        goto LABEL_4;
      }
      if (v16 != 1)
        break;
    }
LABEL_4:
    if (++v12 == v9)
    {
      swift_bridgeObjectRelease();
      return v34;
    }
  }
  v21 = 1;
  v22 = v29;
  while (1)
  {
    v23 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (*((_DWORD *)v22 - 8) == v13)
    {
      v20 = *(v22 - 3);
      v19 = *(v22 - 2);
      v18 = *(v22 - 1);
      v17 = *v22;
      goto LABEL_16;
    }
    v22 += 5;
    ++v21;
    if (v23 == v16)
      goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A55DC724(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 1u)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t sub_1A55DC738(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A55DC74C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s19MessageHeaderStatusOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A55DC790()
{
  unint64_t result;

  result = qword_1EE7A8CB0;
  if (!qword_1EE7A8CB0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A97A0, &_s7SectionV16MessageDataIsNilVN);
    atomic_store(result, (unint64_t *)&qword_1EE7A8CB0);
  }
  return result;
}

uint64_t sub_1A55DC7D4(uint64_t a1)
{
  unint64_t v1;
  uint64_t result;

  v1 = 393216 * (a1 / 393216);
  if ((v1 & 0x8000000000000000) == 0 && !HIDWORD(v1) && v1 <= 0xFFFA0000)
  {
    if ((int)v1 + 393215 >= v1)
      return v1 | ((v1 + 393215) << 32);
    __break(1u);
  }
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t sub_1A55DC8C0(uint64_t a1, int a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  __int128 *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE v92[184];
  uint64_t v93[23];
  uint64_t v94;
  int v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _OWORD v106[2];
  _QWORD v107[3];

  v76 = a6;
  v84 = a5;
  v91 = a4;
  v10 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v10);
  v77 = (uint64_t)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A594A764();
  v79 = *(_QWORD *)(v12 - 8);
  v80 = v12;
  MEMORY[0x1E0C80A78](v12);
  v78 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskHistory.Previous(0);
  v88 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v6 + 16);
  v107[0] = v17;
  v82 = *(_QWORD *)(v17 + 16);
  if (!v82)
    return 0xFF00000000;
  v72 = v10;
  v75 = a1;
  v73 = a3 & 1;
  v74 = a2;
  v81 = v17 + 32;
  v18 = swift_bridgeObjectRetain_n();
  v19 = 0;
  v20 = *(_OWORD *)(v17 + 176);
  v104 = *(_OWORD *)(v17 + 160);
  v105 = v20;
  v106[0] = *(_OWORD *)(v17 + 192);
  *(_OWORD *)((char *)v106 + 9) = *(_OWORD *)(v17 + 201);
  v21 = *(_OWORD *)(v17 + 112);
  v100 = *(_OWORD *)(v17 + 96);
  v101 = v21;
  v22 = *(_OWORD *)(v17 + 144);
  v102 = *(_OWORD *)(v17 + 128);
  v103 = v22;
  v23 = *(_OWORD *)(v17 + 48);
  v96 = *(_OWORD *)(v17 + 32);
  v97 = v23;
  v24 = *(_OWORD *)(v17 + 80);
  v98 = *(_OWORD *)(v17 + 64);
  v99 = v24;
  v86 = 1;
  while (2)
  {
    v83 = v96;
    LODWORD(v93[0]) = v96;
    BYTE4(v93[0]) = 0;
    MEMORY[0x1E0C80A78](v18);
    *(&v71 - 2) = (uint64_t)v93;
    sub_1A55DC368((uint64_t)&v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF274);
    v25 = v84;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v26 = sub_1A5628868((uint64_t)sub_1A55DEC64, (uint64_t)(&v71 - 4), v25);
    v85 = v19;
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      v94 = MEMORY[0x1E0DEE9D8];
      sub_1A54F4F90(0, v27, 0);
      v28 = v94;
      v29 = *(_QWORD *)(v94 + 16);
      v30 = 32;
      do
      {
        v31 = *(_DWORD *)(v26 + v30);
        v94 = v28;
        v32 = *(_QWORD *)(v28 + 24);
        if (v29 >= v32 >> 1)
        {
          sub_1A54F4F90(v32 > 1, v29 + 1, 1);
          v28 = v94;
        }
        *(_QWORD *)(v28 + 16) = v29 + 1;
        *(_DWORD *)(v28 + 4 * v29 + 32) = v31;
        v30 += 12;
        ++v29;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v28 = MEMORY[0x1E0DEE9D8];
    }
    v90 = *(_QWORD *)(v28 + 16);
    if (!v90)
    {
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    v89 = v28 + 32;
    v33 = *(_QWORD *)(v91 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v34 = 0;
    v87 = v33;
    while (!v33)
    {
LABEL_13:
      if (++v34 == v90)
      {
        swift_bridgeObjectRelease_n();
LABEL_24:
        sub_1A54F81BC((uint64_t)v107);
        sub_1A54F81BC((uint64_t)v107);
        v51 = v78;
        v50 = v79;
        v52 = v76;
        v53 = v80;
        (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v76, v80);
        v54 = v77;
        sub_1A55034B8(v52, v77, type metadata accessor for MailboxTaskLogger);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        sub_1A55DC368((uint64_t)&v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF274);
        sub_1A55DC368((uint64_t)&v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF274);
        v55 = sub_1A594A74C();
        v56 = sub_1A594C030();
        if (os_log_type_enabled(v55, v56))
        {
          v57 = swift_slowAlloc();
          v91 = swift_slowAlloc();
          v93[0] = v91;
          *(_DWORD *)v57 = 68159491;
          LODWORD(v94) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v57 + 8) = 256;
          v58 = v54 + *(int *)(v72 + 20);
          LOBYTE(v94) = *(_BYTE *)v58;
          sub_1A594C3CC();
          *(_WORD *)(v57 + 11) = 2082;
          v59 = *(_QWORD *)(v58 + 8);
          v60 = *(_QWORD *)(v58 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v94 = sub_1A55791B0(v59, v60, v93);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v57 + 21) = 1040;
          LODWORD(v94) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v57 + 27) = 512;
          LOWORD(v94) = *(_WORD *)(v58 + 24);
          sub_1A594C3CC();
          *(_WORD *)(v57 + 31) = 2160;
          v94 = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v57 + 41) = 2085;
          v61 = *(_DWORD *)(v58 + 40);
          v94 = *(_QWORD *)(v58 + 32);
          v95 = v61;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v62 = sub_1A594B4A8();
          v94 = sub_1A55791B0(v62, v63, v93);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC(v77, type metadata accessor for MailboxTaskLogger);
          *(_WORD *)(v57 + 51) = 1024;
          sub_1A55DC368((uint64_t)&v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
          v64 = v83;
          LODWORD(v94) = v83;
          sub_1A594C3CC();
          sub_1A55DC368((uint64_t)&v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
          _os_log_impl(&dword_1A4F90000, v55, v56, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Requesting sections to download for message %u.", (uint8_t *)v57, 0x39u);
          v65 = v91;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v65, -1, -1);
          MEMORY[0x1A85B1964](v57, -1, -1);

          (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v80);
          v66 = v75;
          v67 = v74;
        }
        else
        {
          sub_1A55DC368((uint64_t)&v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
          sub_1A55034FC(v54, type metadata accessor for MailboxTaskLogger);
          sub_1A55DC368((uint64_t)&v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);

          (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v53);
          v66 = v75;
          v67 = v74;
          v64 = v83;
        }
        sub_1A55D86E0((__int128 *)((char *)&v96 + 8), (uint64_t)&v94);
        if (sub_1A5529F68((uint64_t)&v94) == 1)
        {
          sub_1A55D935C((uint64_t)v92);
        }
        else
        {
          sub_1A55DBFD8(&v94, v92);
          nullsub_1(v92);
        }
        sub_1A55032A0((uint64_t)v92, (uint64_t)v93, &qword_1EE7A03D0);
        v68 = swift_allocObject();
        *(_QWORD *)(v68 + 16) = v66;
        *(_DWORD *)(v68 + 24) = v67;
        *(_BYTE *)(v68 + 28) = v73;
        v69 = DWORD1(v96);
        *(_DWORD *)(v68 + 32) = v64;
        *(_DWORD *)(v68 + 36) = v69;
        sub_1A55032A0((uint64_t)v93, v68 + 40, &qword_1EE7A03D0);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        return v64;
      }
    }
    v35 = v88;
    v36 = *(_DWORD *)(v89 + 4 * v34);
    v37 = v91 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
    swift_bridgeObjectRetain_n();
    v38 = *(_QWORD *)(v35 + 72);
    while (1)
    {
      sub_1A55034B8(v37, (uint64_t)v16, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
        break;
      sub_1A55034FC((uint64_t)v16, type metadata accessor for TaskHistory.Previous);
LABEL_17:
      v37 += v38;
      if (!--v33)
      {
        swift_bridgeObjectRelease_n();
        v33 = v87;
        goto LABEL_13;
      }
    }
    v39 = *((_DWORD *)v16 + 2);
    swift_release();
    if (v39 != v36)
      goto LABEL_17;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v18 = sub_1A55DC368((uint64_t)&v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A55DF2B8);
    if (v86 != v82)
    {
      v40 = (__int128 *)(v81 + 192 * v86);
      v41 = *v40;
      v42 = v40[1];
      v43 = v40[3];
      v98 = v40[2];
      v99 = v43;
      v96 = v41;
      v97 = v42;
      v44 = v40[4];
      v45 = v40[5];
      v46 = v40[7];
      v102 = v40[6];
      v103 = v46;
      v100 = v44;
      v101 = v45;
      v47 = v40[8];
      v48 = v40[9];
      v49 = v40[10];
      *(_OWORD *)((char *)v106 + 9) = *(__int128 *)((char *)v40 + 169);
      v105 = v48;
      v106[0] = v49;
      v104 = v47;
      ++v86;
      v19 = v85;
      continue;
    }
    break;
  }
  sub_1A54F81BC((uint64_t)v107);
  sub_1A54F81BC((uint64_t)v107);
  return 0xFF00000000;
}

uint64_t sub_1A55DD148(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  unsigned int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[4];
  int v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  char v82;

  v66 = a2;
  v79 = a1;
  v7 = type metadata accessor for MessageHeader();
  v74 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v55[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for TaskHistory.Previous(0);
  v73 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v55[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = _s19MessageHeaderStatusOMa(0);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  v67 = &v55[-v16];
  v17 = *(_QWORD *)(v4 + 24);
  v70 = *(_QWORD *)(v17 + 16);
  if (!v70)
    return 0xFF00000000;
  v59 = v15;
  v60 = v4;
  v61 = v9;
  v56 = a4;
  v57 = a3;
  v75 = _s25MessageSectionsToDownloadVMa(0);
  v18 = *(_QWORD *)(v75 - 8);
  v58 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v71 = *(_QWORD *)(v18 + 72);
  v72 = v17 + v58;
  v62 = v17;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v19 = 0;
  v68 = 0;
  v20 = (uint64_t)v67;
  v21 = v7;
  v65 = v7;
LABEL_4:
  v78 = v19;
  v22 = v71 * v19;
  v23 = (int *)(v72 + v71 * v19);
  sub_1A55034B8((uint64_t)v23 + *(int *)(v75 + 20), v20, _s19MessageHeaderStatusOMa);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
  v25 = v24(v20, 3, v21);
  v26 = sub_1A55034FC(v20, _s19MessageHeaderStatusOMa);
  if (v25)
    goto LABEL_3;
  v63 = v22;
  v64 = v24;
  v81 = *v23;
  v82 = 1;
  MEMORY[0x1E0C80A78](v26);
  *(_QWORD *)&v55[-16] = &v81;
  v27 = v66;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v28 = v27;
  v29 = v68;
  v30 = sub_1A5628868((uint64_t)sub_1A55DEC64, (uint64_t)&v55[-32], v28);
  v68 = v29;
  v31 = *(_QWORD *)(v30 + 16);
  if (v31)
  {
    v80 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F90(0, v31, 0);
    v32 = v80;
    v33 = *(_QWORD *)(v80 + 16);
    v34 = 32;
    do
    {
      v35 = *(_DWORD *)(v30 + v34);
      v80 = v32;
      v36 = *(_QWORD *)(v32 + 24);
      if (v33 >= v36 >> 1)
      {
        sub_1A54F4F90(v36 > 1, v33 + 1, 1);
        v32 = v80;
      }
      *(_QWORD *)(v32 + 16) = v33 + 1;
      *(_DWORD *)(v32 + 4 * v33 + 32) = v35;
      v34 += 12;
      ++v33;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v32 = MEMORY[0x1E0DEE9D8];
  }
  v77 = *(_QWORD *)(v32 + 16);
  if (v77)
  {
    v76 = v32 + 32;
    v37 = *(_QWORD *)(v79 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v38 = 0;
    v69 = v37;
    do
    {
      if (v37)
      {
        v39 = *(_DWORD *)(v76 + 4 * v38);
        v40 = v73;
        v41 = v79 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
        swift_bridgeObjectRetain_n();
        v42 = *(_QWORD *)(v40 + 72);
        while (1)
        {
          sub_1A55034B8(v41, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v43 = *((_DWORD *)v12 + 2);
            swift_release();
            if (v43 == v39)
            {
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              v21 = v65;
              v20 = (uint64_t)v67;
LABEL_3:
              v19 = v78 + 1;
              if (v78 + 1 != v70)
                goto LABEL_4;
              swift_bridgeObjectRelease();
              return 0xFF00000000;
            }
          }
          else
          {
            sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
          }
          v41 += v42;
          if (!--v37)
          {
            swift_bridgeObjectRelease_n();
            v37 = v69;
            break;
          }
        }
      }
      ++v38;
    }
    while (v38 != v77);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v45 = *(_QWORD *)(v60 + 24);
  v46 = (uint64_t)v61;
  v47 = v59;
  v48 = v64;
  if (v78 < *(_QWORD *)(v45 + 16))
  {
    v49 = (unsigned int *)(v45 + v58 + v63);
    v50 = *v49;
    sub_1A55034B8((uint64_t)v49 + *(int *)(v75 + 20), v59, _s19MessageHeaderStatusOMa);
    if (v48(v47, 3, v65))
    {
      sub_1A55034FC(v47, _s19MessageHeaderStatusOMa);
      return 0xFF00000000;
    }
    sub_1A54E3394(v47, v46, (uint64_t (*)(_QWORD))type metadata accessor for MessageHeader);
    v52 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8CB8);
    swift_allocBox();
    v54 = v53 + *(int *)(v52 + 64);
    *(_QWORD *)v53 = v57;
    *(_DWORD *)(v53 + 8) = v56;
    *(_DWORD *)(v53 + 12) = v50;
    sub_1A54E3394(v46, v54, (uint64_t (*)(_QWORD))type metadata accessor for MessageHeader);
    v51 = v50 | 0x100000000;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return v51;
  }
  __break(1u);
  return result;
}

void sub_1A55DD6CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _DWORD *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _QWORD *v39;
  char isUniquelyReferenced_nonNull_native;
  _OWORD *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  char v64;
  _OWORD *v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  _OWORD v91[13];
  _BYTE v92[25];
  _OWORD v93[13];
  _OWORD v94[2];
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  _OWORD v108[2];
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  _OWORD v122[3];

  v1 = *(_QWORD **)(v0 + 24);
  v2 = v1[2];
  if (v2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_47:
      v1 = (_QWORD *)sub_1A554B748((unint64_t)v1);
    v3 = 0;
    v90 = v2;
    v89 = v1;
    do
    {
      if (v3 == v2)
        goto LABEL_42;
      if (v3 >= v1[2])
        goto LABEL_43;
      v4 = _s25MessageSectionsToDownloadVMa(0);
      v5 = (_DWORD *)((char *)v1
                    + ((*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80))
                    + *(_QWORD *)(*(_QWORD *)(v4 - 8) + 72) * v3);
      v6 = (char *)v5 + *(int *)(v4 + 24);
      v7 = *(_QWORD *)v6;
      v8 = *(_QWORD *)(*(_QWORD *)v6 + 16);
      if (v8)
      {
        v9 = 0;
        v10 = 34;
        v11 = 86;
        while ((*(_BYTE *)(v7 + v11) & 1) == 0)
        {
          ++v9;
          v11 += 240;
          v10 += 30;
          if (v8 == v9)
          {
            v12 = *(_QWORD *)(*(_QWORD *)v6 + 16);
            v9 = v12;
            goto LABEL_16;
          }
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
          goto LABEL_46;
        v12 = *(_QWORD *)(*(_QWORD *)v6 + 16);
        if (v13 != v8)
        {
          while (v13 < v12)
          {
            if ((*(_BYTE *)(v7 + v10 * 8 + 54) & 1) == 0)
            {
              if (v13 != v9)
              {
                if (v9 < 0)
                  goto LABEL_38;
                if (v9 >= v12)
                  goto LABEL_39;
                v2 = 240 * v9;
                v15 = (__int128 *)(v7 + 32 + 240 * v9);
                v16 = *v15;
                v17 = v15[2];
                v96 = v15[1];
                v97 = v17;
                v95 = v16;
                v18 = v15[3];
                v19 = v15[4];
                v20 = v15[6];
                v100 = v15[5];
                v101 = v20;
                v98 = v18;
                v99 = v19;
                v21 = v15[7];
                v22 = v15[8];
                v23 = v15[10];
                v104 = v15[9];
                v105 = v23;
                v102 = v21;
                v103 = v22;
                v24 = v15[11];
                v25 = v15[12];
                v26 = v15[13];
                *(_OWORD *)((char *)v108 + 9) = *(__int128 *)((char *)v15 + 217);
                v107 = v25;
                v108[0] = v26;
                v106 = v24;
                if (v13 >= *(_QWORD *)(*(_QWORD *)v6 + 16))
                  goto LABEL_40;
                v27 = (__int128 *)(*(_QWORD *)v6 + v10 * 8);
                v28 = *v27;
                v29 = v27[2];
                v110 = v27[1];
                v111 = v29;
                v109 = v28;
                v30 = v27[3];
                v31 = v27[4];
                v32 = v27[6];
                v114 = v27[5];
                v115 = v32;
                v112 = v30;
                v113 = v31;
                v33 = v27[7];
                v34 = v27[8];
                v35 = v27[10];
                v118 = v27[9];
                v119 = v35;
                v116 = v33;
                v117 = v34;
                v36 = v27[11];
                v37 = v27[12];
                v38 = v27[13];
                *(_OWORD *)((char *)v122 + 9) = *(__int128 *)((char *)v27 + 217);
                v121 = v37;
                v122[0] = v38;
                v120 = v36;
                v39 = *(_QWORD **)v6;
                sub_1A55DC014((uint64_t)&v95);
                sub_1A55DC014((uint64_t)&v109);
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *(_QWORD *)v6 = v39;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  v39 = sub_1A554B75C(v39);
                  *(_QWORD *)v6 = v39;
                }
                v41 = (_OWORD *)((char *)v39 + v2);
                v42 = *(_OWORD *)((char *)v39 + v2 + 32);
                v43 = *(_OWORD *)((char *)v39 + v2 + 64);
                v93[1] = *(_OWORD *)((char *)v39 + v2 + 48);
                v93[2] = v43;
                v93[0] = v42;
                v44 = *(_OWORD *)((char *)v39 + v2 + 80);
                v45 = *(_OWORD *)((char *)v39 + v2 + 96);
                v46 = *(_OWORD *)((char *)v39 + v2 + 128);
                v93[5] = *(_OWORD *)((char *)v39 + v2 + 112);
                v93[6] = v46;
                v93[3] = v44;
                v93[4] = v45;
                v47 = *(_OWORD *)((char *)v39 + v2 + 144);
                v48 = *(_OWORD *)((char *)v39 + v2 + 160);
                v49 = *(_OWORD *)((char *)v39 + v2 + 192);
                v93[9] = *(_OWORD *)((char *)v39 + v2 + 176);
                v93[10] = v49;
                v93[7] = v47;
                v93[8] = v48;
                v50 = *(_OWORD *)((char *)v39 + v2 + 208);
                v51 = *(_OWORD *)((char *)v39 + v2 + 224);
                v52 = *(_OWORD *)((char *)v39 + v2 + 240);
                *(_OWORD *)((char *)v94 + 9) = *(_OWORD *)((char *)v39 + v2 + 249);
                v93[12] = v51;
                v94[0] = v52;
                v93[11] = v50;
                v53 = v109;
                v54 = v111;
                v41[3] = v110;
                v41[4] = v54;
                v41[2] = v53;
                v55 = v112;
                v56 = v113;
                v57 = v115;
                v41[7] = v114;
                v41[8] = v57;
                v41[5] = v55;
                v41[6] = v56;
                v58 = v116;
                v59 = v117;
                v60 = v119;
                v41[11] = v118;
                v41[12] = v60;
                v41[9] = v58;
                v41[10] = v59;
                v61 = v120;
                v62 = v121;
                v63 = v122[0];
                *(_OWORD *)((char *)v41 + 249) = *(_OWORD *)((char *)v122 + 9);
                v41[14] = v62;
                v41[15] = v63;
                v41[13] = v61;
                sub_1A55DC110((uint64_t)v93);
                v1 = *(_QWORD **)v6;
                v64 = swift_isUniquelyReferenced_nonNull_native();
                *(_QWORD *)v6 = v1;
                if ((v64 & 1) == 0)
                {
                  v1 = sub_1A554B75C(v1);
                  *(_QWORD *)v6 = v1;
                }
                if (v13 >= v1[2])
                  goto LABEL_41;
                v65 = &v1[v10];
                v66 = *(_OWORD *)&v1[v10];
                v67 = *(_OWORD *)&v1[v10 + 4];
                v91[1] = *(_OWORD *)&v1[v10 + 2];
                v91[2] = v67;
                v91[0] = v66;
                v68 = *(_OWORD *)&v1[v10 + 6];
                v69 = *(_OWORD *)&v1[v10 + 8];
                v70 = *(_OWORD *)&v1[v10 + 12];
                v91[5] = *(_OWORD *)&v1[v10 + 10];
                v91[6] = v70;
                v91[3] = v68;
                v91[4] = v69;
                v71 = *(_OWORD *)&v1[v10 + 14];
                v72 = *(_OWORD *)&v1[v10 + 16];
                v73 = *(_OWORD *)&v1[v10 + 20];
                v91[9] = *(_OWORD *)&v1[v10 + 18];
                v91[10] = v73;
                v91[7] = v71;
                v91[8] = v72;
                v74 = *(_OWORD *)&v1[v10 + 22];
                v75 = *(_OWORD *)&v1[v10 + 24];
                v76 = *(_OWORD *)&v1[v10 + 26];
                *(_OWORD *)&v92[9] = *(_OWORD *)((char *)&v1[v10 + 27] + 1);
                v91[12] = v75;
                *(_OWORD *)v92 = v76;
                v91[11] = v74;
                v77 = v95;
                v78 = v97;
                v65[1] = v96;
                v65[2] = v78;
                *v65 = v77;
                v79 = v98;
                v80 = v99;
                v81 = v101;
                v65[5] = v100;
                v65[6] = v81;
                v65[3] = v79;
                v65[4] = v80;
                v82 = v102;
                v83 = v103;
                v84 = v105;
                v65[9] = v104;
                v65[10] = v84;
                v65[7] = v82;
                v65[8] = v83;
                v85 = v106;
                v86 = v107;
                v87 = v108[0];
                *(_OWORD *)((char *)v65 + 217) = *(_OWORD *)((char *)v108 + 9);
                v65[12] = v86;
                v65[13] = v87;
                v65[11] = v85;
                sub_1A55DC110((uint64_t)v91);
              }
              if (__OFADD__(v9++, 1))
                goto LABEL_37;
              v7 = *(_QWORD *)v6;
              v12 = *(_QWORD *)(*(_QWORD *)v6 + 16);
            }
            ++v13;
            v10 += 30;
            if (v13 == v12)
              goto LABEL_15;
          }
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
LABEL_15:
        v1 = v89;
        v2 = v90;
        if ((uint64_t)v12 < v9)
          goto LABEL_44;
      }
      else
      {
        v12 = 0;
        v9 = 0;
      }
LABEL_16:
      sub_1A558DCA0(v9, v12);
      if (v3 >= v1[2])
        goto LABEL_45;
      if (v8 != *(_QWORD *)(*(_QWORD *)((char *)v5 + *(int *)(v4 + 24)) + 16))
      {
        LODWORD(v95) = *v5;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        MessageIdentifierSet.insert(_:)();
      }
      ++v3;
    }
    while (v3 != v2);
    *(_QWORD *)(v88 + 24) = v1;
  }
}

uint64_t sub_1A55DDB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD v60[5];
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;

  v64 = a3;
  v68 = a2;
  v93 = a1;
  v61 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v61);
  v5 = (char *)v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v60 - v7;
  v9 = sub_1A594A764();
  v65 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v63 = (char *)v60 - v13;
  v101 = type metadata accessor for TaskHistory.Previous(0);
  v72 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v14 = type metadata accessor for MessageHeader();
  v15 = *(_QWORD *)(v14 - 8);
  v91 = v14;
  v92 = v15;
  MEMORY[0x1E0C80A78](v14);
  v62 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797248);
  MEMORY[0x1E0C80A78](v70);
  v69 = (uint64_t)v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = _s25MessageSectionsToDownloadVMa(0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v75 = (char *)v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v74 = (char *)v60 - v22;
  MEMORY[0x1E0C80A78](v23);
  v67 = (char *)v60 - v24;
  MEMORY[0x1E0C80A78](v25);
  v88 = (uint64_t)v60 - v26;
  MEMORY[0x1E0C80A78](v27);
  v90 = (uint64_t)v60 - v28;
  v29 = _s19MessageHeaderStatusOMa(0);
  MEMORY[0x1E0C80A78](v29);
  MEMORY[0x1E0C80A78](v30);
  v76 = (char *)v60 - v31;
  MEMORY[0x1E0C80A78](v32);
  v85 = (uint64_t)v60 - v34;
  v35 = v3[3];
  v84 = *(_QWORD *)(v35 + 16);
  if (v84)
  {
    v66 = v33;
    v60[3] = v11;
    v60[4] = v9;
    v60[0] = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v60[1] = v5;
    v80 = v35 + v60[0];
    v36 = *v3;
    v37 = v3[4];
    v98 = v3[2];
    v99 = v37;
    v100 = v8;
    v95 = *((_DWORD *)v3 + 10);
    v38 = *((unsigned __int8 *)v3 + 44);
    v96 = v3[6];
    v97 = v35;
    v39 = v18;
    v40 = *((unsigned int *)v3 + 14);
    v60[2] = v3;
    v41 = *((unsigned __int8 *)v3 + 60);
    v79 = *(_QWORD *)(v19 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v42 = 0;
    v71 = 0;
    v78 = v39;
    v43 = v92;
    v44 = v40;
    v82 = v38;
    v83 = v40;
    v45 = v38;
    v46 = v41;
    v81 = v41;
    v86 = v36;
    do
    {
      v94 = v42;
      v77 = v79 * v42;
      v49 = v80 + v79 * v42;
      v50 = v85;
      sub_1A55034B8(v49 + *(int *)(v39 + 20), v85, _s19MessageHeaderStatusOMa);
      v89 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
      v87 = v89(v50, 3, v91);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E4334(v99, v95, v45);
      sub_1A54E4334(v96, v44, v46);
      sub_1A55034FC(v50, _s19MessageHeaderStatusOMa);
      v51 = *(_QWORD *)(*(_QWORD *)(v49 + *(int *)(v39 + 24)) + 16);
      v52 = v90;
      sub_1A55034B8(v49, v90, _s25MessageSectionsToDownloadVMa);
      if (!v51)
      {
        v53 = v52 + *(int *)(v39 + 20);
        v54 = v91;
        v55 = (uint64_t)v76;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v76, 1, 3, v91);
        v56 = v69;
        v57 = v69 + *(int *)(v70 + 48);
        sub_1A55034B8(v53, v69, _s19MessageHeaderStatusOMa);
        sub_1A55034B8(v55, v57, _s19MessageHeaderStatusOMa);
        v58 = (char *)&loc_1A55DE084 + dword_1A55DEC54[v89(v56, 3, v54)];
        v73 = v49;
        __asm { BR              X9 }
      }
      sub_1A55034FC(v52, _s25MessageSectionsToDownloadVMa);
      v47 = v88;
      sub_1A55034B8(v49, v88, _s25MessageSectionsToDownloadVMa);
      v48 = v99;
      sub_1A55034FC(v47, _s25MessageSectionsToDownloadVMa);
      swift_bridgeObjectRelease();
      v39 = v78;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v45 = v82;
      sub_1A54E3458(v48, v95, v82);
      v44 = v83;
      v46 = v81;
      sub_1A54E3458(v96, v83, v81);
      v42 = v94 + 1;
      v43 = v92;
    }
    while (v94 + 1 != v84);
    swift_bridgeObjectRelease();
  }
  return 0x100000000;
}

uint64_t sub_1A55DEC64(uint64_t a1)
{
  return sub_1A55DED20(a1) & 1;
}

uint64_t sub_1A55DEC7C(uint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_1A55DEC9C + 4 * byte_1A59A9628[BYTE4(a1)]))();
}

BOOL sub_1A55DEC9C@<W0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  return !a3 && a2 == a1;
}

double sub_1A55DECF8(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 176) = -1;
  return result;
}

uint64_t sub_1A55DED20(uint64_t a1)
{
  return sub_1A55DEC7C(*(unsigned int *)(a1 + 4) | ((unint64_t)*(unsigned __int8 *)(a1 + 8) << 32)) & 1;
}

uint64_t sub_1A55DED54()
{
  uint64_t v0;
  unsigned int v1;

  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 216);
  if (v1 <= 0xFD)
    sub_1A55241F0(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184),
      *(_QWORD *)(v0 + 192),
      *(_QWORD *)(v0 + 200),
      *(_QWORD *)(v0 + 208),
      v1 & 1);
  return swift_deallocObject();
}

uint64_t sub_1A55DEDD4(uint64_t a1)
{
  char v1;

  sub_1A562B3A4(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return v1 & 1;
}

ValueMetadata *_s7SectionV16MessageDataIsNilVMa()
{
  return &_s7SectionV16MessageDataIsNilVN;
}

uint64_t _s18InProgressMessagesVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40), *(_BYTE *)(a1 + 44));
  return sub_1A54E3458(*(_QWORD *)(a1 + 48), *(unsigned int *)(a1 + 56), *(_BYTE *)(a1 + 60));
}

uint64_t _s18InProgressMessagesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(unsigned int *)(a2 + 40);
  v7 = *(_BYTE *)(a2 + 44);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v5, v6, v7);
  *(_QWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 44) = v7;
  v8 = *(_QWORD *)(v2 + 48);
  v9 = *(unsigned int *)(v2 + 56);
  LOBYTE(v2) = *(_BYTE *)(v2 + 60);
  sub_1A54E4334(v8, v9, v2);
  *(_QWORD *)(a1 + 48) = v8;
  *(_DWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 60) = v2;
  return a1;
}

uint64_t _s18InProgressMessagesVwca(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *((_DWORD *)v2 + 2);
  *(_QWORD *)(a1 + 16) = v2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = v2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = v2[4];
  v5 = *((_DWORD *)v2 + 10);
  v6 = *((_BYTE *)v2 + 44);
  sub_1A54E4334(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(unsigned int *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 40) = v5;
  v9 = *(_BYTE *)(a1 + 44);
  *(_BYTE *)(a1 + 44) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = v2[6];
  v11 = *((unsigned int *)v2 + 14);
  LOBYTE(v2) = *((_BYTE *)v2 + 60);
  sub_1A54E4334(v10, v11, (char)v2);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(unsigned int *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  *(_DWORD *)(a1 + 56) = v11;
  v14 = *(_BYTE *)(a1 + 60);
  *(_BYTE *)(a1 + 60) = (_BYTE)v2;
  sub_1A54E3458(v12, v13, v14);
  return a1;
}

uint64_t _s18InProgressMessagesVwta(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 40);
  v5 = *(_BYTE *)(a2 + 44);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(unsigned int *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = v4;
  v8 = *(_BYTE *)(a1 + 44);
  *(_BYTE *)(a1 + 44) = v5;
  sub_1A54E3458(v6, v7, v8);
  v9 = *(_DWORD *)(a2 + 56);
  v10 = *(_BYTE *)(a2 + 60);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(unsigned int *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = v9;
  v13 = *(_BYTE *)(a1 + 60);
  *(_BYTE *)(a1 + 60) = v10;
  sub_1A54E3458(v11, v12, v13);
  return a1;
}

uint64_t _s18InProgressMessagesVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 61))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s18InProgressMessagesVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 61) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 61) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s18InProgressMessagesVMa()
{
  return &_s18InProgressMessagesVN;
}

uint64_t _s7SectionV4PartOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A55DF1AC + 4 * byte_1A59A9631[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A55DF1E0 + 4 * byte_1A59A962C[v4]))();
}

uint64_t sub_1A55DF1E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55DF1E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A55DF1F0);
  return result;
}

uint64_t sub_1A55DF1FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A55DF204);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A55DF208(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55DF210(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7SectionV4PartOMa()
{
  return &_s7SectionV4PartON;
}

unint64_t sub_1A55DF230()
{
  unint64_t result;

  result = qword_1EE7A8CC0;
  if (!qword_1EE7A8CC0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9738, &_s7SectionV4PartON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8CC0);
  }
  return result;
}

__n128 sub_1A55DF274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  __n128 result;

  sub_1A5523620(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23);
  return result;
}

__n128 sub_1A55DF2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  __n128 result;

  sub_1A5524104(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23);
  return result;
}

uint64_t sub_1A55DF2FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = HIDWORD(a3);
  sub_1A54E4334(a2, a3, SBYTE4(a3));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10 = sub_1A55E0A78(v9, a4);
  sub_1A54E3458(a2, a3, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A54EBB34(v10);
  static ClientCommand.uidFetch(messages:items:)(a2, a3 & 0xFFFFFFFFFFLL, (uint64_t)&unk_1E4E67838, a1);
  swift_bridgeObjectRelease();
  sub_1A54E4334(a2, a3, v8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a2;
}

void sub_1A55DF410(uint64_t a1, uint64_t a2)
{
  int32x2_t *v2;
  uint64_t v3;
  uint64_t v4;
  int32x2_t *v5;
  uint64_t v6;
  int32x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  int32x2_t *v10;
  char v11;

  v2 = *(int32x2_t **)a1;
  v3 = *(unsigned int *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 12);
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(int32x2_t **)(a1 + 24);
  v7 = *(int32x2_t **)a2;
  v8 = *(unsigned int *)(a2 + 8);
  v9 = *(unsigned __int8 *)(a2 + 12);
  v10 = *(int32x2_t **)(a2 + 24);
  sub_1A54E3414();
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v2, v3 | (v4 << 32), v7, v8 | (v9 << 32));
  if ((v11 & 1) != 0 && (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v6) & 1) != 0)
    sub_1A5538240(v5, v10);
}

uint64_t sub_1A55DF4C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int *v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  __int128 *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _QWORD *v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t *v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  int64_t v60;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t result;
  _QWORD v109[2];
  uint64_t v110;
  uint64_t v111;
  char *v112;
  _DWORD *v113;
  unint64_t v114;
  unint64_t v115;
  int *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  __int128 *v120;
  uint64_t v121;
  int64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  int v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  int v132;
  _QWORD *v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  _OWORD v147[2];
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  _OWORD v161[2];
  uint64_t v162;
  __int128 v163;
  int v164;
  uint64_t v165;
  int v166;
  __int16 v167;
  char v168;
  uint64_t v169;
  __int128 v170;
  int v171;
  uint64_t v172;
  int v173;
  __int16 v174;
  char v175;

  v10 = _s25MessageSectionsToDownloadVMa(0);
  MEMORY[0x1E0C80A78](v10);
  v116 = (int *)((char *)v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v14 = (_DWORD *)((char *)v109 - v13);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v109 - v17;
  v114 = *(_QWORD *)(a5 + 16);
  if (!v114)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v71 = 0;
    goto LABEL_70;
  }
  v19 = a5 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  v20 = *(_QWORD *)(v16 + 72);
  v118 = a1;
  v21 = v19;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v117 = a4;
  swift_bridgeObjectRetain_n();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v22 = 0;
  v119 = (uint64_t *)(a3 + 64);
  v126 = a3;
  v23 = v116;
  v131 = v20;
  v121 = a2;
  v109[1] = a5;
  v110 = v10;
  v112 = v18;
  v113 = v14;
  v109[0] = v21;
  while (1)
  {
    v115 = v22;
    v111 = v21 + v20 * v22;
    sub_1A55E0BAC(v111, (uint64_t)v18);
    v24 = *(_QWORD *)&v18[*(int *)(v10 + 24)];
    sub_1A55E0BAC((uint64_t)v18, (uint64_t)v14);
    sub_1A55E0BAC((uint64_t)v18, (uint64_t)v23);
    v123 = *(_QWORD *)(v24 + 16);
    if (v123)
      break;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_46:
    v14 = v113;
    sub_1A55E0BF0((uint64_t)v113);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = v116;
    sub_1A55E0BF0((uint64_t)v116);
    v18 = v112;
    sub_1A55E0BF0((uint64_t)v112);
    swift_bridgeObjectRelease();
    v22 = v115 + 1;
    v10 = v110;
    if (v115 + 1 == v114)
    {
LABEL_66:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v71 = 0;
      goto LABEL_70;
    }
  }
  v128 = *v23;
  v124 = v24 + 32;
  v25 = *(_QWORD *)(a3 + 16);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v26 = 0;
  v125 = v24;
  v122 = v25;
  while (1)
  {
    v127 = v26;
    v27 = (__int128 *)(v124 + 240 * v26);
    v28 = *v27;
    v29 = v27[2];
    v149 = v27[1];
    v150 = v29;
    v148 = v28;
    v30 = v27[3];
    v31 = v27[4];
    v32 = v27[6];
    v153 = v27[5];
    v154 = v32;
    v151 = v30;
    v152 = v31;
    v33 = v27[7];
    v34 = v27[8];
    v35 = v27[10];
    v157 = v27[9];
    v158 = v35;
    v155 = v33;
    v156 = v34;
    v36 = v27[11];
    v37 = v27[12];
    v38 = v27[13];
    v120 = v27;
    *(_OWORD *)((char *)v161 + 9) = *(__int128 *)((char *)v27 + 217);
    v160 = v37;
    v161[0] = v38;
    v159 = v36;
    v169 = *((_QWORD *)&v148 + 1);
    v170 = v149;
    v172 = *((_QWORD *)&v150 + 1);
    v171 = v150;
    v173 = v151;
    v174 = WORD2(v151);
    v175 = BYTE6(v151);
    v130 = *((_QWORD *)&v149 + 1);
    if (v25)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55DC014((uint64_t)&v148);
      *(_QWORD *)&v134 = MEMORY[0x1E0DEE9D8];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F5038(0, v25, 0);
      v39 = (_QWORD *)v134;
      v40 = v119;
      v41 = v25;
      do
      {
        v42 = *(v40 - 3);
        v43 = *(v40 - 2);
        v44 = *(v40 - 1);
        v45 = *v40;
        sub_1A55CA998(v42, v43);
        *(_QWORD *)&v134 = v39;
        v47 = v39[2];
        v46 = v39[3];
        if (v47 >= v46 >> 1)
        {
          sub_1A54F5038(v46 > 1, v47 + 1, 1);
          v39 = (_QWORD *)v134;
        }
        v40 += 5;
        v39[2] = v47 + 1;
        v48 = &v39[4 * v47];
        v48[4] = v42;
        v48[5] = v43;
        v48[6] = v44;
        v48[7] = v45;
        --v41;
      }
      while (v41);
      a3 = v126;
      swift_bridgeObjectRelease();
      v20 = v131;
      v49 = v39[2];
      if (v49)
      {
LABEL_11:
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v50 = v39 + 7;
        v51 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        while (1)
        {
          v52 = *(v50 - 2);
          if (v52 >> 62 == 3)
          {
            v53 = *(v50 - 3);
            v54 = *(v50 - 1);
            v55 = *v50;
            sub_1A54E4334(v53, *(v50 - 2), SBYTE4(v52));
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v54) & 1) != 0
              && (LODWORD(v134) = v128,
                  sub_1A54E3414(),
                  v129 = v129 & 0xFFFFFF0000000000 | v52 & 0xFFFFFFFFFFLL,
                  MessageIdentifierSet.contains(_:)((uint64_t)&v134, v53, v129),
                  (v56 & 1) != 0))
            {
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v57 = v55;
            }
            else
            {
              v57 = MEMORY[0x1E0DEE9D8];
            }
            sub_1A55CAA00(v53, v52);
          }
          else
          {
            v57 = MEMORY[0x1E0DEE9D8];
          }
          v58 = *(_QWORD *)(v57 + 16);
          v59 = v51[2];
          v60 = v59 + v58;
          if (__OFADD__(v59, v58))
          {
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
            goto LABEL_78;
          }
          isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
          if ((_DWORD)isUniquelyReferenced_nonNull_native && v60 <= v51[3] >> 1)
          {
            if (*(_QWORD *)(v57 + 16))
              goto LABEL_30;
          }
          else
          {
            if (v59 <= v60)
              v62 = v59 + v58;
            else
              v62 = v59;
            v51 = sub_1A54F1704(isUniquelyReferenced_nonNull_native, v62, 1, v51);
            if (*(_QWORD *)(v57 + 16))
            {
LABEL_30:
              v63 = v51[2];
              if ((v51[3] >> 1) - v63 < v58)
                goto LABEL_73;
              v64 = &v51[v63 + 4];
              if (v57 + 32 < (unint64_t)&v64[v58] && (unint64_t)v64 < v57 + 32 + 8 * v58)
                goto LABEL_81;
              memcpy(v64, (const void *)(v57 + 32), 8 * v58);
              if (v58)
              {
                v66 = v51[2];
                v67 = __OFADD__(v66, v58);
                v68 = v66 + v58;
                if (v67)
                  goto LABEL_74;
                v51[2] = v68;
              }
              goto LABEL_13;
            }
          }
          if (v58)
            goto LABEL_72;
LABEL_13:
          v50 += 4;
          swift_bridgeObjectRelease();
          --v49;
          v20 = v131;
          if (!v49)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a3 = v126;
            goto LABEL_42;
          }
        }
      }
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55DC014((uint64_t)&v148);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v39 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v49 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v49)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    v51 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_42:
    swift_bridgeObjectRelease();
    v69 = sub_1A55E0E6C(1, v51);
    swift_bridgeObjectRelease();
    v70 = v121;
    v25 = v122;
    if (*(_QWORD *)(v69 + 16))
      break;
    swift_bridgeObjectRelease();
    sub_1A55DC110((uint64_t)&v148);
    swift_bridgeObjectRelease();
    v26 = v127 + 1;
    if (v127 + 1 == v123)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = v109[0];
      goto LABEL_46;
    }
  }
  LODWORD(v134) = v128;
  v72 = sub_1A54E3414();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MessageIdentifierSet.init(_:)();
  v131 = v72;
  v75 = MessageIdentifierSetNonEmpty.init(set:)(v74, v73 & 0xFFFFFFFFFFLL);
  if (BYTE4(v76) == 255)
    goto LABEL_77;
  v77 = v75;
  v78 = v76;
  sub_1A55DC110((uint64_t)&v148);
  v79 = v125;
  swift_bridgeObjectRelease();
  sub_1A5503B8C(v77, v78);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v127 >= *(_QWORD *)(v79 + 16))
    goto LABEL_75;
  v80 = *v120;
  v81 = v120[2];
  v135 = v120[1];
  v136 = v81;
  v134 = v80;
  v82 = v120[3];
  v83 = v120[4];
  v84 = v120[6];
  v139 = v120[5];
  v140 = v84;
  v137 = v82;
  v138 = v83;
  v85 = v120[7];
  v86 = v120[8];
  v87 = v120[10];
  v143 = v120[9];
  v144 = v87;
  v142 = v86;
  v141 = v85;
  v88 = v120[11];
  v89 = v120[12];
  v90 = v120[13];
  *(_OWORD *)((char *)v147 + 9) = *(__int128 *)((char *)v120 + 217);
  v146 = v89;
  v147[0] = v90;
  v145 = v88;
  v162 = *((_QWORD *)&v134 + 1);
  v163 = v135;
  v165 = *((_QWORD *)&v136 + 1);
  v164 = v136;
  v166 = v137;
  v167 = WORD2(v137);
  v168 = BYTE6(v137);
  LODWORD(v130) = *v113;
  sub_1A55DC014((uint64_t)&v134);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v91 = sub_1A55F391C(a3);
  v133 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v92 = *(_QWORD *)(v91 + 16);
  if (v92)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v129 = v91;
    v93 = (uint64_t *)(v91 + 56);
    do
    {
      v95 = *(v93 - 2);
      if (v95 >> 62 == 3)
      {
        v96 = *(v93 - 3);
        v98 = *(v93 - 1);
        v97 = *v93;
        sub_1A54E4334(v96, *(v93 - 2), SBYTE4(v95));
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v98) & 1) != 0
          && (v132 = v130,
              a3 = a3 & 0xFFFFFF0000000000 | v95 & 0xFFFFFFFFFFLL,
              MessageIdentifierSet.contains(_:)((uint64_t)&v132, v96, a3),
              (v99 & 1) != 0))
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v94 = v97;
        }
        else
        {
          v94 = MEMORY[0x1E0DEE9D8];
        }
        sub_1A55CAA00(v96, v95);
      }
      else
      {
        v94 = MEMORY[0x1E0DEE9D8];
      }
      v93 += 4;
      sub_1A54EB9F0(v94);
      --v92;
    }
    while (v92);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v100 = v133;
    v70 = v121;
    a3 = v126;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v100 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v101 = sub_1A55E0E6C(1, v100);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v101 + 16))
  {
LABEL_78:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A55E0BF0((uint64_t)v113);
    sub_1A55DC110((uint64_t)&v134);
    __break(1u);
    goto LABEL_79;
  }
  LODWORD(v133) = v130;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MessageIdentifierSet.init(_:)();
  v104 = MessageIdentifierSetNonEmpty.init(set:)(v103, v102 & 0xFFFFFFFFFFLL);
  if (BYTE4(v105) == 255)
  {
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    result = sub_1A594CA68();
    __break(1u);
    return result;
  }
  v106 = v104;
  v107 = v105;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A55E0BF0((uint64_t)v113);
  sub_1A55DC110((uint64_t)&v134);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A55E0BF0((uint64_t)v116);
  sub_1A55E0BF0((uint64_t)v112);
  swift_bridgeObjectRelease();
  sub_1A5503B8C(v106, v107);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v115 == v114)
    goto LABEL_66;
  if (v115 >= v114)
    goto LABEL_76;
  sub_1A55E00CC(v111, v118, v70, a3, v117, (uint64_t *)&v148);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(_QWORD)v149)
    goto LABEL_80;
  v71 = v148;
LABEL_70:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v71;
}

uint64_t sub_1A55E00CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  __int128 *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _QWORD *v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t *v44;
  _QWORD *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  int64_t v54;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t result;
  _QWORD v105[2];
  _DWORD *v106;
  uint64_t *v107;
  _DWORD *v108;
  uint64_t *v109;
  int64_t v110;
  __int128 *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  int v122;
  _QWORD *v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  _OWORD v137[2];
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  _OWORD v151[2];
  uint64_t v152;
  __int128 v153;
  int v154;
  uint64_t v155;
  int v156;
  __int16 v157;
  char v158;
  uint64_t v159;
  __int128 v160;
  int v161;
  uint64_t v162;
  int v163;
  __int16 v164;
  char v165;

  v107 = a6;
  v11 = _s25MessageSectionsToDownloadVMa(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_DWORD *)((char *)v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v16 = *(_QWORD *)(a1 + *(int *)(v15 + 24));
  v108 = (_DWORD *)((char *)v105 - v17);
  sub_1A55E0BAC(a1, (uint64_t)v105 - v17);
  sub_1A55E0BAC(a1, (uint64_t)v13);
  v18 = *(_QWORD *)(v16 + 16);
  v117 = a4;
  v115 = v18;
  v106 = v13;
  if (!v18)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_57:
    sub_1A55E0BF0((uint64_t)v108);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v93 = 0;
    v94 = 0;
    v83 = 0;
    v95 = 0;
    goto LABEL_63;
  }
  LODWORD(v119) = *v13;
  v116 = v16 + 32;
  v19 = *(_QWORD *)(a4 + 16);
  v105[1] = a2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v20 = 0;
  v109 = (uint64_t *)(a4 + 64);
  v110 = v19;
  v112 = v16;
  v113 = a5;
  v114 = a3;
  while (1)
  {
    v118 = v20;
    v21 = (__int128 *)(v116 + 240 * v20);
    v22 = *v21;
    v23 = v21[2];
    v139 = v21[1];
    v140 = v23;
    v138 = v22;
    v24 = v21[3];
    v25 = v21[4];
    v26 = v21[6];
    v143 = v21[5];
    v144 = v26;
    v141 = v24;
    v142 = v25;
    v27 = v21[7];
    v28 = v21[8];
    v29 = v21[10];
    v147 = v21[9];
    v148 = v29;
    v145 = v27;
    v146 = v28;
    v30 = v21[11];
    v31 = v21[12];
    v32 = v21[13];
    v111 = v21;
    *(_OWORD *)((char *)v151 + 9) = *(__int128 *)((char *)v21 + 217);
    v150 = v31;
    v151[0] = v32;
    v149 = v30;
    v159 = *((_QWORD *)&v138 + 1);
    v160 = v139;
    v162 = *((_QWORD *)&v140 + 1);
    v161 = v140;
    v163 = v141;
    v164 = WORD2(v141);
    v165 = BYTE6(v141);
    v121 = *((_QWORD *)&v139 + 1);
    if (v19)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55DC014((uint64_t)&v138);
      *(_QWORD *)&v124 = MEMORY[0x1E0DEE9D8];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F5038(0, v19, 0);
      v33 = (_QWORD *)v124;
      v34 = v109;
      v35 = v19;
      do
      {
        v36 = *(v34 - 3);
        v37 = *(v34 - 2);
        v38 = *(v34 - 1);
        v39 = *v34;
        sub_1A55CA998(v36, v37);
        *(_QWORD *)&v124 = v33;
        v41 = v33[2];
        v40 = v33[3];
        if (v41 >= v40 >> 1)
        {
          sub_1A54F5038(v40 > 1, v41 + 1, 1);
          v33 = (_QWORD *)v124;
        }
        v34 += 5;
        v33[2] = v41 + 1;
        v42 = &v33[4 * v41];
        v42[4] = v36;
        v42[5] = v37;
        v42[6] = v38;
        v42[7] = v39;
        --v35;
      }
      while (v35);
      a4 = v117;
      swift_bridgeObjectRelease();
      v43 = v33[2];
      if (v43)
      {
LABEL_9:
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v44 = v33 + 7;
        v45 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        while (1)
        {
          v46 = *(v44 - 2);
          if (v46 >> 62 == 3)
          {
            v47 = *(v44 - 3);
            v48 = *(v44 - 1);
            v49 = *v44;
            sub_1A54E4334(v47, *(v44 - 2), SBYTE4(v46));
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v48) & 1) != 0
              && (LODWORD(v124) = v119,
                  sub_1A54E3414(),
                  v120 = v120 & 0xFFFFFF0000000000 | v46 & 0xFFFFFFFFFFLL,
                  MessageIdentifierSet.contains(_:)((uint64_t)&v124, v47, v120),
                  (v50 & 1) != 0))
            {
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v51 = v49;
            }
            else
            {
              v51 = MEMORY[0x1E0DEE9D8];
            }
            sub_1A55CAA00(v47, v46);
          }
          else
          {
            v51 = MEMORY[0x1E0DEE9D8];
          }
          v52 = *(_QWORD *)(v51 + 16);
          v53 = v45[2];
          v54 = v53 + v52;
          if (__OFADD__(v53, v52))
          {
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
          isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
          if ((_DWORD)isUniquelyReferenced_nonNull_native && v54 <= v45[3] >> 1)
          {
            if (*(_QWORD *)(v51 + 16))
              goto LABEL_28;
          }
          else
          {
            if (v53 <= v54)
              v56 = v53 + v52;
            else
              v56 = v53;
            v45 = sub_1A54F1704(isUniquelyReferenced_nonNull_native, v56, 1, v45);
            if (*(_QWORD *)(v51 + 16))
            {
LABEL_28:
              v57 = v45[2];
              if ((v45[3] >> 1) - v57 < v52)
                goto LABEL_66;
              v58 = &v45[v57 + 4];
              if (v51 + 32 < (unint64_t)&v58[v52] && (unint64_t)v58 < v51 + 32 + 8 * v52)
                goto LABEL_72;
              memcpy(v58, (const void *)(v51 + 32), 8 * v52);
              if (v52)
              {
                v60 = v45[2];
                v61 = __OFADD__(v60, v52);
                v62 = v60 + v52;
                if (v61)
                  goto LABEL_67;
                v45[2] = v62;
              }
              goto LABEL_11;
            }
          }
          if (v52)
            goto LABEL_65;
LABEL_11:
          v44 += 4;
          swift_bridgeObjectRelease();
          if (!--v43)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a4 = v117;
            goto LABEL_40;
          }
        }
      }
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55DC014((uint64_t)&v138);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v43 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v43)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    v45 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_40:
    swift_bridgeObjectRelease();
    v63 = sub_1A55E0E6C(1, v45);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v63 + 16))
      break;
    swift_bridgeObjectRelease();
    sub_1A55DC110((uint64_t)&v138);
    swift_bridgeObjectRelease();
    v20 = v118 + 1;
    if (v118 + 1 == v115)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_57;
    }
    v19 = v110;
  }
  LODWORD(v124) = v119;
  v64 = sub_1A54E3414();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MessageIdentifierSet.init(_:)();
  v120 = v64;
  v67 = MessageIdentifierSetNonEmpty.init(set:)(v66, v65 & 0xFFFFFFFFFFLL);
  v69 = v112;
  if (BYTE4(v68) == 255)
    goto LABEL_69;
  v70 = v67;
  v71 = v68;
  sub_1A55DC110((uint64_t)&v138);
  swift_bridgeObjectRelease();
  sub_1A5503B8C(v70, v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v118 >= *(_QWORD *)(v69 + 16))
    goto LABEL_68;
  v72 = *v111;
  v73 = v111[2];
  v125 = v111[1];
  v126 = v73;
  v124 = v72;
  v74 = v111[3];
  v75 = v111[4];
  v76 = v111[6];
  v129 = v111[5];
  v130 = v76;
  v127 = v74;
  v128 = v75;
  v77 = v111[7];
  v78 = v111[8];
  v79 = v111[10];
  v133 = v111[9];
  v134 = v79;
  v132 = v78;
  v131 = v77;
  v80 = v111[11];
  v81 = v111[12];
  v82 = v111[13];
  *(_OWORD *)((char *)v137 + 9) = *(__int128 *)((char *)v111 + 217);
  v136 = v81;
  v137[0] = v82;
  v135 = v80;
  v83 = *((_QWORD *)&v125 + 1);
  v152 = *((_QWORD *)&v124 + 1);
  v153 = v125;
  v155 = *((_QWORD *)&v126 + 1);
  v154 = v126;
  v156 = v127;
  v157 = WORD2(v127);
  v158 = BYTE6(v127);
  LODWORD(v121) = *v108;
  sub_1A55DC014((uint64_t)&v124);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v84 = sub_1A55F391C(a4);
  v123 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v85 = *(_QWORD *)(v84 + 16);
  if (v85)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v119 = v84;
    v86 = (uint64_t *)(v84 + 56);
    do
    {
      v88 = *(v86 - 2);
      if (v88 >> 62 == 3)
      {
        v89 = *(v86 - 3);
        v90 = *(v86 - 1);
        v91 = *v86;
        sub_1A54E4334(v89, *(v86 - 2), SBYTE4(v88));
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v90) & 1) != 0
          && (v122 = v121,
              v69 = v69 & 0xFFFFFF0000000000 | v88 & 0xFFFFFFFFFFLL,
              MessageIdentifierSet.contains(_:)((uint64_t)&v122, v89, v69),
              (v92 & 1) != 0))
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v87 = v91;
        }
        else
        {
          v87 = MEMORY[0x1E0DEE9D8];
        }
        sub_1A55CAA00(v89, v88);
      }
      else
      {
        v87 = MEMORY[0x1E0DEE9D8];
      }
      v86 += 4;
      sub_1A54EB9F0(v87);
      --v85;
    }
    while (v85);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v96 = v123;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v96 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v95 = sub_1A55E0E6C(1, v96);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v95 + 16))
  {
LABEL_70:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A55E0BF0((uint64_t)v108);
    sub_1A55DC110((uint64_t)&v124);
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    result = sub_1A594CA68();
    __break(1u);
    return result;
  }
  LODWORD(v123) = v121;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MessageIdentifierSet.init(_:)();
  v99 = MessageIdentifierSetNonEmpty.init(set:)(v98, v97 & 0xFFFFFFFFFFLL);
  if ((~v100 & 0xFF00000000) == 0)
    goto LABEL_71;
  v93 = v99;
  v101 = v100;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v94 = v101 & 0xFFFFFFFFFFLL;
  sub_1A55E0BF0((uint64_t)v108);
  sub_1A55DC110((uint64_t)&v124);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_63:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v102 = (uint64_t)v106;
  v103 = v107;
  *v107 = v93;
  v103[1] = v94;
  v103[2] = v83;
  v103[3] = v95;
  return sub_1A55E0BF0(v102);
}

uint64_t sub_1A55E0A78(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v16;
  int v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1A54F5054(0, v2, 0);
    v3 = v18;
    v5 = (int *)(a1 + 36);
    do
    {
      v16 = *(v5 - 1);
      v17 = *v5;
      v6 = SectionSpecifier.init(part:kind:)(a2, 0, 2u);
      v8 = v7;
      v10 = v9;
      v11 = *(_QWORD *)(v18 + 16);
      v12 = *(_QWORD *)(v18 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v11 >= v12 >> 1)
        sub_1A54F5054(v12 > 1, v11 + 1, 1);
      v5 += 2;
      *(_QWORD *)(v18 + 16) = v11 + 1;
      v13 = v18 + 40 * v11;
      *(_QWORD *)(v13 + 32) = 1;
      *(_QWORD *)(v13 + 40) = v6;
      *(_QWORD *)(v13 + 48) = v8;
      *(_QWORD *)(v13 + 56) = v10 | (unint64_t)(v16 << 32);
      *(_BYTE *)(v13 + 68) = 32;
      *(_DWORD *)(v13 + 64) = v17;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1A55E0BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s25MessageSectionsToDownloadVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A55E0BF0(uint64_t a1)
{
  uint64_t v2;

  v2 = _s25MessageSectionsToDownloadVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s18SectionDataRequestVwxx(uint64_t a1)
{
  sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s18SectionDataRequestVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 12);
  sub_1A54E4334(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 12) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s18SectionDataRequestVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 12);
  sub_1A54E4334(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v6;
  sub_1A54E3458(v7, v8, v9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18SectionDataRequestVwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *a2;
  v5 = *((_DWORD *)a2 + 2);
  v6 = *((_BYTE *)a2 + 12);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v6;
  sub_1A54E3458(v7, v8, v9);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PushRegistrationResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushRegistrationResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s18SectionDataRequestVMa()
{
  return &_s18SectionDataRequestVN;
}

uint64_t sub_1A55E0E6C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  _DWORD *v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(_QWORD *, _QWORD);
  uint64_t *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t result;
  _QWORD v61[2];
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  _QWORD v82[5];
  _BYTE v83[13];
  int v84;
  char v85[4];

  v5 = sub_1A594A248();
  v69 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799F18);
  v62 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_DWORD *)((char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v81 = sub_1A594A26C();
  v79 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v73 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v72 = (char *)v61 - v13;
  MEMORY[0x1E0C80A78](v14);
  v71 = (char *)v61 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v61 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v61 - v20;
  MEMORY[0x1E0C80A78](v22);
  v70 = (char *)v61 - v23;
  MEMORY[0x1E0C80A78](v24);
  v80 = (char *)v61 - v25;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v61 - v27;
  v68 = a1;
  if (a1 < 1 || (*(_BYTE *)(v2 + 46) & 1) != 0)
  {
    return MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v66 = v7;
    *(_QWORD *)v83 = *(_QWORD *)(v2 + 32);
    *(_QWORD *)&v83[5] = *(_QWORD *)(v2 + 37);
    sub_1A55E15D4((int *)&v83[8], (uint64_t)&v84);
    v75 = *(_QWORD *)v83;
    v74 = *(_QWORD *)(*(_QWORD *)v83 + 16);
    v61[1] = v2 + 24;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v67 = v5;
    v64 = v21;
    v63 = v18;
    v65 = v28;
    while (1)
    {
      sub_1A55E15D4(&v84, (uint64_t)v85);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594A1D0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594A260();
      if (v74)
        break;
LABEL_9:
      v34 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
      v34(v21, v18, v81);
      sub_1A54F81BC((uint64_t)v83);
      v35 = a2[2];
      if (v35)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v36 = (_DWORD *)a2 + 9;
        while (*v36 != -1)
        {
          if ((*v36 + 1) < *(v36 - 1))
            goto LABEL_35;
          sub_1A594A218();
          v36 += 2;
          if (!--v35)
          {
            swift_bridgeObjectRelease();
            goto LABEL_15;
          }
        }
        goto LABEL_34;
      }
LABEL_15:
      v77 = v29;
      v78 = a2;
      v37 = v34;
      v76 = v34;
      v38 = v70;
      v39 = v81;
      v37(v70, v21, v81);
      v41 = v79;
      v40 = v80;
      v42 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
      v42(v72, v80, v39);
      v42(v73, v38, v39);
      sub_1A55E1698(&qword_1EE796520, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB13A0], MEMORY[0x1E0CB13E8]);
      v43 = v71;
      sub_1A594C558();
      sub_1A594C54C();
      v44 = *(void (**)(char *, uint64_t))(v41 + 8);
      v45 = v43;
      v46 = v65;
      v44(v45, v39);
      v44(v38, v39);
      v76(v46, v40, v39);
      v47 = v66;
      sub_1A594A254();
      sub_1A55E1698(&qword_1EE796518, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1358], MEMORY[0x1E0CB1378]);
      v48 = v67;
      sub_1A594BD60();
      sub_1A594BDB4();
      if (v82[4] == v82[0])
      {
        (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v48);
        v44(v46, v81);
        swift_bridgeObjectRelease();
        v29 = v77;
LABEL_31:
        swift_bridgeObjectRelease();
        return (uint64_t)v29;
      }
      v49 = (void (*)(_QWORD *, _QWORD))sub_1A594BED4();
      v51 = *v50;
      v49(v82, 0);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v48);
      v52 = 393216 * (v51 / 393216);
      if ((v52 & 0x8000000000000000) != 0)
        goto LABEL_36;
      v21 = v64;
      v18 = v63;
      v29 = v77;
      if (HIDWORD(v52))
        goto LABEL_36;
      a2 = v78;
      if (v52 >= 0xFFFA0001)
        goto LABEL_36;
      v44(v46, v81);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        a2 = sub_1A54F1704(0, a2[2] + 1, 1, a2);
      v54 = a2[2];
      v53 = a2[3];
      if (v54 >= v53 >> 1)
        a2 = sub_1A54F1704((_QWORD *)(v53 > 1), v54 + 1, 1, a2);
      a2[2] = v54 + 1;
      v55 = &a2[v54];
      *((_DWORD *)v55 + 8) = v52;
      *((_DWORD *)v55 + 9) = v52 + 393215;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v29 = sub_1A54F1704(0, v29[2] + 1, 1, v29);
      v57 = v29[2];
      v56 = v29[3];
      v58 = v57 + 1;
      if (v57 >= v56 >> 1)
        v29 = sub_1A54F1704((_QWORD *)(v56 > 1), v57 + 1, 1, v29);
      v29[2] = v58;
      v59 = &v29[v57];
      *((_DWORD *)v59 + 8) = v52;
      *((_DWORD *)v59 + 9) = v52 + 393215;
      if (v58 >= v68)
        goto LABEL_31;
    }
    v30 = v62;
    v31 = v75 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v32 = *(_QWORD *)(v30 + 72);
    v33 = v74;
    while (1)
    {
      sub_1A55E1610(v31, (uint64_t)v10);
      if (v10[1] < *v10)
        break;
      sub_1A594A218();
      sub_1A55E1658((uint64_t)v10);
      v31 += v32;
      if (!--v33)
      {
        sub_1A54F81BC((uint64_t)v83);
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    result = sub_1A594C9B4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1A55E15D4(int *a1, uint64_t a2)
{
  __swift_memcpy5_4(a2, a1);
  return a2;
}

uint64_t sub_1A55E1610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799F18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A55E1658(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799F18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A55E1698(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1A85B1874](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s21SectionDownloadStatusVwcp(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
  *(_BYTE *)(a1 + 46) = *(_BYTE *)(a2 + 46);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s21SectionDownloadStatusVwca(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 45) = *(_BYTE *)(a2 + 45);
  *(_BYTE *)(a1 + 46) = *(_BYTE *)(a2 + 46);
  return a1;
}

__n128 __swift_memcpy47_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s21SectionDownloadStatusVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_BYTE *)(a1 + 45) = *(_BYTE *)(a2 + 45);
  *(_BYTE *)(a1 + 46) = *(_BYTE *)(a2 + 46);
  return a1;
}

uint64_t _s21SectionDownloadStatusVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 47))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s21SectionDownloadStatusVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 46) = 0;
    *(_WORD *)(result + 44) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 47) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 47) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s21SectionDownloadStatusVMa()
{
  return &_s21SectionDownloadStatusVN;
}

uint64_t sub_1A55E1944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  ValueMetadata *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v9;
  int v10;
  char v11;
  uint64_t v12;
  ValueMetadata *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  ValueMetadata *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t result;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  int v59;
  char v60;

  if (a1 < 0)
  {
LABEL_24:
    __break(1u);
  }
  else
  {
    v6 = a1;
    if (!a1)
    {
      v33 = sub_1A54E3414();
      return MessageIdentifierSet.init()(&type metadata for UID, v33);
    }
    v9 = sub_1A54E3414();
    v58 = MessageIdentifierSet.init()(&type metadata for UID, v9);
    v59 = v10;
    v60 = v11;
    MessageIdentifierSet.ranges.getter(a2, a3 & 0xFFFFFFFFFFLL);
    v5 = v12;
    v4 = v13;
    v3 = (unint64_t)v13 >> 32;
    v14 = (unint64_t)v13 & 0xFFFFFFFFFFLL;
    v15 = MessageIdentifierSet.RangeView.endIndex.getter(v12, (unint64_t)v13 & 0xFFFFFFFFFFLL);
    if (v15)
    {
      v16 = v15;
      v51 = v3;
      v52 = (uint64_t)v4;
      v3 = 0;
      v4 = &type metadata for UID;
      v53 = v6;
      while (1)
      {
        if (__OFSUB__(v16--, 1))
        {
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
        v18 = MessageIdentifierSet.RangeView.endIndex.getter(v5, v14);
        if (v16 < 0 || v16 >= v18)
          goto LABEL_22;
        MessageIdentifierSet.RangeView.subscript.getter(v16, v5, v14);
        v20 = v57 - (unint64_t)v56 + 1;
        v21 = v3 + v20;
        if (__OFADD__(v3, v20))
          goto LABEL_23;
        if (v21 > v6)
          break;
        v54 = v56;
        v55 = v57;
        v22 = v4;
        v23 = v9;
        MessageIdentifierSet.init(_:)((uint64_t)&v54, (uint64_t)v4, v9, v19);
        v25 = v24;
        v27 = v26;
        v28 = HIDWORD(v26);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        MessageIdentifierSet.formUnion(_:)(v25, v27 & 0xFFFFFFFFFFLL);
        v29 = v27;
        v6 = v53;
        sub_1A54E3458(v25, v29, v28);
        if (v21 < v53)
        {
          v3 = v21;
          v4 = v22;
          v9 = v23;
          if (v16)
            continue;
        }
        v30 = v5;
        v32 = v51;
        v31 = v52;
        goto LABEL_19;
      }
      result = v6 - v3;
      if (__OFSUB__(v6, v3))
      {
        __break(1u);
      }
      else
      {
        v35 = sub_1A55E1F24(result, v56 | ((unint64_t)v57 << 32), (uint64_t (*)(uint64_t))sub_1A55E4E08);
        v37 = v36;
        v38 = HIDWORD(v35) & 1;
        LOBYTE(v54) = BYTE4(v35) & 1;
        v40 = HIDWORD(v39) & 1;
        v41 = v35;
        v42 = v39;
        result = sub_1A5640CE4(v35 | (unint64_t)(v38 << 32), v39 | ((unint64_t)(BYTE4(v39) & 1) << 32));
        if ((result & 0x100000000) != 0)
        {
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        v43 = result;
        LOBYTE(v54) = v38;
        result = sub_1A5640FE0(v41 | (v38 << 32), v42 | (v40 << 32), v37);
        if ((result & 0x100000000) != 0)
        {
LABEL_29:
          __break(1u);
          return result;
        }
        v44 = result;
        result = sub_1A54E3458(v5, v52, v51);
        if (v44 >= v43)
        {
          v54 = v43;
          v55 = v44;
          MessageIdentifierSet.init(_:)((uint64_t)&v54, (uint64_t)&type metadata for UID, v9, v45);
          v47 = v46;
          v49 = v48;
          v50 = HIDWORD(v48);
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
          MessageIdentifierSet.formUnion(_:)(v47, v49 & 0xFFFFFFFFFFLL);
          v30 = v47;
          v31 = v49;
          v32 = v50;
          goto LABEL_19;
        }
      }
      __break(1u);
      goto LABEL_28;
    }
  }
  v30 = v5;
  v31 = (uint64_t)v4;
  v32 = v3;
LABEL_19:
  sub_1A54E3458(v30, v31, v32);
  return v58;
}

uint64_t sub_1A55E1C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  ValueMetadata *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v9;
  int v10;
  char v11;
  uint64_t v12;
  ValueMetadata *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  ValueMetadata *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t result;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  int v59;
  char v60;

  if (a1 < 0)
  {
LABEL_24:
    __break(1u);
  }
  else
  {
    v6 = a1;
    if (!a1)
    {
      v33 = sub_1A5534BE4();
      return MessageIdentifierSet.init()(&type metadata for SequenceNumber, v33);
    }
    v9 = sub_1A5534BE4();
    v58 = MessageIdentifierSet.init()(&type metadata for SequenceNumber, v9);
    v59 = v10;
    v60 = v11;
    MessageIdentifierSet.ranges.getter(a2, a3 & 0xFFFFFFFFFFLL);
    v5 = v12;
    v4 = v13;
    v3 = (unint64_t)v13 >> 32;
    v14 = (unint64_t)v13 & 0xFFFFFFFFFFLL;
    v15 = MessageIdentifierSet.RangeView.endIndex.getter(v12, (unint64_t)v13 & 0xFFFFFFFFFFLL);
    if (v15)
    {
      v16 = v15;
      v51 = v3;
      v52 = (uint64_t)v4;
      v3 = 0;
      v4 = &type metadata for SequenceNumber;
      v53 = v6;
      while (1)
      {
        if (__OFSUB__(v16--, 1))
        {
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
        v18 = MessageIdentifierSet.RangeView.endIndex.getter(v5, v14);
        if (v16 < 0 || v16 >= v18)
          goto LABEL_22;
        MessageIdentifierSet.RangeView.subscript.getter(v16, v5, v14);
        v20 = v57 - (unint64_t)v56 + 1;
        v21 = v3 + v20;
        if (__OFADD__(v3, v20))
          goto LABEL_23;
        if (v21 > v6)
          break;
        v54 = v56;
        v55 = v57;
        v22 = v4;
        v23 = v9;
        MessageIdentifierSet.init(_:)((uint64_t)&v54, (uint64_t)v4, v9, v19);
        v25 = v24;
        v27 = v26;
        v28 = HIDWORD(v26);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8760);
        MessageIdentifierSet.formUnion(_:)(v25, v27 & 0xFFFFFFFFFFLL);
        v29 = v27;
        v6 = v53;
        sub_1A54E3458(v25, v29, v28);
        if (v21 < v53)
        {
          v3 = v21;
          v4 = v22;
          v9 = v23;
          if (v16)
            continue;
        }
        v30 = v5;
        v32 = v51;
        v31 = v52;
        goto LABEL_19;
      }
      result = v6 - v3;
      if (__OFSUB__(v6, v3))
      {
        __break(1u);
      }
      else
      {
        v35 = sub_1A55E1F24(result, v56 | ((unint64_t)v57 << 32), (uint64_t (*)(uint64_t))sub_1A55E4E08);
        v37 = v36;
        v38 = HIDWORD(v35) & 1;
        LOBYTE(v54) = BYTE4(v35) & 1;
        v40 = HIDWORD(v39) & 1;
        v41 = v35;
        v42 = v39;
        result = sub_1A5640CE4(v35 | (unint64_t)(v38 << 32), v39 | ((unint64_t)(BYTE4(v39) & 1) << 32));
        if ((result & 0x100000000) != 0)
        {
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        v43 = result;
        LOBYTE(v54) = v38;
        result = sub_1A5640FE0(v41 | (v38 << 32), v42 | (v40 << 32), v37);
        if ((result & 0x100000000) != 0)
        {
LABEL_29:
          __break(1u);
          return result;
        }
        v44 = result;
        result = sub_1A54E3458(v5, v52, v51);
        if (v44 >= v43)
        {
          v54 = v43;
          v55 = v44;
          MessageIdentifierSet.init(_:)((uint64_t)&v54, (uint64_t)&type metadata for SequenceNumber, v9, v45);
          v47 = v46;
          v49 = v48;
          v50 = HIDWORD(v48);
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8760);
          MessageIdentifierSet.formUnion(_:)(v47, v49 & 0xFFFFFFFFFFLL);
          v30 = v47;
          v31 = v49;
          v32 = v50;
          goto LABEL_19;
        }
      }
      __break(1u);
      goto LABEL_28;
    }
  }
  v30 = v5;
  v31 = (uint64_t)v4;
  v32 = v3;
LABEL_19:
  sub_1A54E3458(v30, v31, v32);
  return v58;
}

unint64_t sub_1A55E1F24(unint64_t result, unint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a2;
    v4 = a2 + ~HIDWORD(a2);
    if (v4 > 0 || v4 <= -(uint64_t)result)
    {
      v6 = a3(0x100000000);
      v7 = HIDWORD(v6) & 1;
      v3 = v6;
    }
    else
    {
      LOBYTE(v7) = 0;
    }
    return v3 | ((unint64_t)v7 << 32);
  }
  return result;
}

uint64_t sub_1A55E1FBC()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E67FB8);
  qword_1EE7F9678 = result;
  return result;
}

uint64_t sub_1A55E1FE0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, unsigned int a10, char a11, char a12)
{
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v38[13];
  __int128 v39;

  *(_QWORD *)a9 = sub_1A5552638((uint64_t)&unk_1E4EF22D8);
  *(_BYTE *)(a9 + 8) = 0;
  v20 = a1[1];
  v39 = *a1;
  v21 = *((_QWORD *)a1 + 3);
  v22 = *((unsigned int *)a1 + 8);
  *(_OWORD *)(a9 + 16) = v39;
  *(_OWORD *)(a9 + 32) = v20;
  *(_DWORD *)(a9 + 48) = v22;
  *(_QWORD *)(a9 + 88) = &type metadata for FetchMessages;
  *(_QWORD *)v38 = v21;
  *(_DWORD *)&v38[8] = v22;
  swift_bridgeObjectRetain_n();
  sub_1A54FCA28((uint64_t)&v39);
  sub_1A550F734();
  sub_1A594C6B4();
  *(_QWORD *)(a9 + 56) = a2;
  *(_QWORD *)(a9 + 64) = a3;
  *(_QWORD *)(a9 + 72) = a4;
  *(_BYTE *)(a9 + 84) = BYTE4(a5);
  *(_DWORD *)(a9 + 80) = a5;
  v23 = *(_QWORD *)a6;
  v24 = *(unsigned int *)(a6 + 8);
  v25 = *(unsigned __int8 *)(a6 + 12);
  *(_QWORD *)v38 = *(_QWORD *)(a6 + 16);
  *(_QWORD *)&v38[5] = *(_QWORD *)(a6 + 21);
  *(_OWORD *)(a9 + 184) = *(_OWORD *)a6;
  *(_OWORD *)(a9 + 200) = *(_OWORD *)(a6 + 16);
  *(_QWORD *)(a9 + 213) = *(_QWORD *)(a6 + 29);
  sub_1A54E4334(v23, v24, v25);
  sub_1A550F318((uint64_t)v38);
  v26 = sub_1A55E1944(47, v23, v24 | (v25 << 32));
  v28 = v27;
  sub_1A54E3458(v23, v24, v25);
  sub_1A550F348((uint64_t)v38);
  sub_1A54E3414();
  v29 = MessageIdentifierSetNonEmpty.init(set:)(v26, v28 & 0xFFFFFFFFFFLL);
  if ((~v30 & 0xFF00000000) != 0)
  {
    v32 = v29;
    v36 = v30;
    result = sub_1A54F81BC((uint64_t)&v39);
    v33 = v36 & 0xFFFFFFFFFFLL | ((unint64_t)(a10 & 0x1010101) << 40);
    v34 = HIBYTE(a10) & 1 | (unint64_t)((a11 & 1) << 8) | ((unint64_t)(a12 & 1) << 16);
    v35 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1A54F81BC((uint64_t)&v39);
    result = swift_bridgeObjectRelease();
    v21 = 0;
    v22 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
  }
  *(_QWORD *)(a9 + 136) = v21;
  *(_QWORD *)(a9 + 144) = v22;
  *(_QWORD *)(a9 + 152) = v32;
  *(_QWORD *)(a9 + 160) = v33;
  *(_QWORD *)(a9 + 168) = v34;
  *(_QWORD *)(a9 + 176) = v35;
  *(_QWORD *)(a9 + 224) = a7;
  *(_BYTE *)(a9 + 232) = a8 & 1;
  return result;
}

uint64_t sub_1A55E21F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  int v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  int v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  NSObject *v54;
  os_log_type_t v55;
  int v56;
  uint64_t v57;
  int v58;
  os_log_t v59;
  uint64_t v60;
  _QWORD v61[2];
  uint64_t v62;
  int v63;
  os_log_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  int v74;
  char v75;
  uint64_t v76;
  _DWORD v77[55];
  char v78;
  uint64_t v79;
  char v80;
  uint64_t v81[24];
  unsigned int v82;
  unsigned __int8 v83;
  uint64_t v84;
  char v85;

  v2 = v1;
  v66 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v66);
  v5 = (char *)v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v61 - v7;
  v9 = sub_1A594A764();
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v61 - v13;
  v15 = *(_QWORD *)(v2 + 184);
  v16 = *(unsigned int *)(v2 + 192);
  v17 = *(unsigned __int8 *)(v2 + 196);
  v65 = sub_1A54E3414();
  if (MessageIdentifierSet.isEmpty.getter(v15, v16 | (v17 << 32)) || !*(_QWORD *)(v2 + 136))
  {
    v41 = v67;
    v40 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v11, a1, v68);
    sub_1A55034B8(a1, (uint64_t)v5, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A55102C0(v2, (uint64_t)v81);
    sub_1A55102C0(v2, (uint64_t)v77);
    v42 = sub_1A594A74C();
    v43 = sub_1A594C030();
    if (os_log_type_enabled(v42, (os_log_type_t)v43))
    {
      v63 = v43;
      v64 = v42;
      v44 = swift_slowAlloc();
      v65 = swift_slowAlloc();
      v70 = v65;
      *(_DWORD *)v44 = 68159747;
      LODWORD(v72) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v44 + 8) = 256;
      v45 = &v5[*(int *)(v66 + 20)];
      LOBYTE(v72) = *v45;
      sub_1A594C3CC();
      *(_WORD *)(v44 + 11) = 2082;
      v47 = *((_QWORD *)v45 + 1);
      v46 = *((_QWORD *)v45 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v72 = sub_1A55791B0(v47, v46, &v70);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 21) = 1040;
      LODWORD(v72) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v44 + 27) = 512;
      LOWORD(v72) = *((_WORD *)v45 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v44 + 31) = 2160;
      v72 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v44 + 41) = 2085;
      v48 = *((_DWORD *)v45 + 10);
      v72 = *((_QWORD *)v45 + 4);
      LODWORD(v73) = v48;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v49 = sub_1A594B4A8();
      v72 = sub_1A55791B0(v49, v50, &v70);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v5, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v44 + 51) = 2080;
      if ((v85 & 1) != 0)
      {
        v51 = 0xE100000000000000;
        v52 = 45;
      }
      else
      {
        v72 = 0;
        v73 = 0xE000000000000000;
        v76 = v84;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
        sub_1A594C924();
        v52 = v72;
        v51 = v73;
      }
      v54 = v64;
      v55 = v63;
      v72 = sub_1A55791B0(v52, v51, &v70);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55103B8((uint64_t)v81);
      *(_WORD *)(v44 + 61) = 1024;
      if (v78)
        v56 = 0;
      else
        v56 = v77[54];
      sub_1A55103B8((uint64_t)v77);
      LODWORD(v72) = v56;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v54, v55, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task with fetched-window %s (persisted) -> %u (new)", (uint8_t *)v44, 0x43u);
      v57 = v65;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v57, -1, -1);
      MEMORY[0x1A85B1964](v44, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v11, v68);
    }
    else
    {
      sub_1A55103B8((uint64_t)v77);
      sub_1A55034FC((uint64_t)v5, type metadata accessor for MailboxTaskLogger);
      sub_1A55103B8((uint64_t)v81);

      return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v11, v40);
    }
  }
  else
  {
    v18 = *(_QWORD *)(v2 + 152);
    v19 = *(_QWORD *)(v2 + 160);
    v21 = v67;
    v20 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v14, a1, v68);
    sub_1A55034B8(a1, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    sub_1A54E4334(v18, v19, SBYTE4(v19));
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A55102C0(v2, (uint64_t)v81);
    sub_1A55102C0(v2, (uint64_t)v77);
    sub_1A55102C0(v2, (uint64_t)&v72);
    sub_1A54E4334(v18, v19, SBYTE4(v19));
    sub_1A54E4334(v18, v19, SBYTE4(v19));
    sub_1A54E4334(v18, v19, SBYTE4(v19));
    v22 = sub_1A594A74C();
    v23 = sub_1A594C030();
    if (os_log_type_enabled(v22, (os_log_type_t)v23))
    {
      v63 = v23;
      v64 = v22;
      v24 = swift_slowAlloc();
      v62 = swift_slowAlloc();
      v76 = v62;
      *(_DWORD *)v24 = 68160515;
      LODWORD(v70) = 2;
      v61[1] = (char *)&v70 + 4;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 8) = 256;
      v25 = &v8[*(int *)(v66 + 20)];
      LOBYTE(v70) = *v25;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 11) = 2082;
      v66 = (uint64_t)v14;
      v27 = *((_QWORD *)v25 + 1);
      v26 = *((_QWORD *)v25 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v70 = sub_1A55791B0(v27, v26, &v76);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 21) = 1040;
      LODWORD(v70) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 27) = 512;
      LOWORD(v70) = *((_WORD *)v25 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v24 + 31) = 2160;
      v70 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 41) = 2085;
      v28 = *((_DWORD *)v25 + 10);
      v70 = *((_QWORD *)v25 + 4);
      LODWORD(v71) = v28;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v29 = sub_1A594B4A8();
      v70 = sub_1A55791B0(v29, v30, &v76);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v24 + 51) = 2048;
      v31 = MessageIdentifierSet.count.getter(v81[23], v82 | ((unint64_t)v83 << 32));
      sub_1A55103B8((uint64_t)v81);
      v70 = v31;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 61) = 2048;
      v32 = MessageIdentifierSet.count.getter(v18, v19 & 0xFFFFFFFFFFLL);
      sub_1A54E3458(v18, v19, SBYTE4(v19));
      v70 = v32;
      sub_1A594C3CC();
      sub_1A54E3458(v18, v19, SBYTE4(v19));
      *(_WORD *)(v24 + 71) = 2082;
      sub_1A54E4334(v18, v19, SBYTE4(v19));
      MessageIdentifierSet.debugDescription.getter();
      v34 = v33;
      v36 = v35;
      sub_1A54E3458(v18, v19, SBYTE4(v19));
      v70 = sub_1A55791B0(v34, v36, &v76);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v18, v19, SBYTE4(v19));
      sub_1A54E3458(v18, v19, SBYTE4(v19));
      *(_WORD *)(v24 + 81) = 2080;
      v37 = v66;
      if ((v80 & 1) != 0)
      {
        v38 = 0xE100000000000000;
        v39 = 45;
      }
      else
      {
        v70 = 0;
        v71 = 0xE000000000000000;
        v69 = v79;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
        sub_1A594C924();
        v39 = v70;
        v38 = v71;
      }
      v70 = sub_1A55791B0(v39, v38, &v76);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55103B8((uint64_t)v77);
      *(_WORD *)(v24 + 91) = 1024;
      if (v75)
        v58 = 0;
      else
        v58 = v74;
      sub_1A55103B8((uint64_t)&v72);
      LODWORD(v70) = v58;
      sub_1A594C3CC();
      v59 = v64;
      _os_log_impl(&dword_1A4F90000, v64, (os_log_type_t)v63, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task with missing %ld, batch %ld UIDs %{public}s, fetched-window %s (persisted) -> %u (new)", (uint8_t *)v24, 0x61u);
      v60 = v62;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v60, -1, -1);
      MEMORY[0x1A85B1964](v24, -1, -1);

      return (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 8))(v37, v68);
    }
    else
    {
      sub_1A55103B8((uint64_t)&v72);
      sub_1A54E3458(v18, v19, SBYTE4(v19));
      sub_1A55103B8((uint64_t)v81);
      sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
      sub_1A54E3458(v18, v19, SBYTE4(v19));
      sub_1A54E3458(v18, v19, SBYTE4(v19));
      sub_1A54E3458(v18, v19, SBYTE4(v19));
      sub_1A55103B8((uint64_t)v77);

      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v14, v20);
    }
  }
}

uint64_t sub_1A55E2CB0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  char v41;
  char v42;
  char v43;
  char v44;
  __int16 v45;
  char v46;
  uint64_t v47;

  v35 = a3;
  v6 = type metadata accessor for TaskHistory.Previous(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v30 - v11;
  if (*(_QWORD *)(v3 + 136))
  {
    v13 = *(_QWORD *)(v3 + 176);
    v14 = *(_DWORD *)(v3 + 168);
    v16 = *(_QWORD *)(v3 + 152);
    v15 = *(_QWORD *)(v3 + 160);
    v17 = *(_QWORD *)(v3 + 144);
    v37 = *(_QWORD *)(v3 + 136);
    v38 = v17;
    v39 = v16;
    v40 = v15;
    v41 = BYTE4(v15);
    v42 = BYTE5(v15) & 1;
    v43 = BYTE6(v15) & 1;
    v44 = HIBYTE(v15) & 1;
    v45 = v14 & 0x101;
    v46 = BYTE2(v14) & 1;
    v47 = v13;
    v18 = sub_1A562ACE0(a2);
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v20 = 0;
      v30[1] = v18;
      v33 = v18 + 32;
      v36 = *(_QWORD *)(a1 + 16);
      v34 = a1;
      v31 = v19;
      v32 = v7;
      do
      {
        if (v36)
        {
          v21 = *(_DWORD *)(v33 + 4 * v20);
          v22 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v23 = *(_QWORD *)(v7 + 72);
          v24 = v36;
          while (1)
          {
            sub_1A55034B8(v22, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
            sub_1A55034B8((uint64_t)v12, (uint64_t)v9, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_1A55034FC((uint64_t)v9, type metadata accessor for TaskHistory.Previous);
            }
            else
            {
              v25 = *(_DWORD *)&v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
              sub_1A55034FC((uint64_t)v9, type metadata accessor for ClientCommand);
              if (v25 == v21)
              {
                sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_13;
              }
            }
            sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
            v22 += v23;
            if (!--v24)
            {
              a1 = v34;
              swift_bridgeObjectRelease();
              v19 = v31;
              v7 = v32;
              break;
            }
          }
        }
        ++v20;
      }
      while (v20 != v19);
    }
    swift_bridgeObjectRelease();
    v28 = v35;
    sub_1A561F2B0(v35);
    v29 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7972A0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
  }
  else
  {
LABEL_13:
    v26 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7972A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v35, 1, 1, v26);
  }
}

uint64_t sub_1A55E2F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;

  v5 = v4;
  v73 = a1;
  v80 = type metadata accessor for TaskHistory.Running(0);
  v71 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v79 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v81 = (uint64_t)&v68 - v11;
  v12 = type metadata accessor for TaskHistory.Previous(0);
  v77 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v82 = (uint64_t)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v68 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v68 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v68 - v21;
  v23 = sub_1A55B00E4(0, a4);
  v24 = *(_QWORD *)(v23 + 16);
  v83 = v16;
  if (v24)
  {
    v69 = a3;
    v70 = v4;
    v25 = 0;
    v72 = v23;
    v76 = v23 + 32;
    v26 = *(_QWORD *)(a2 + 16);
    v78 = a2;
    v74 = v26;
    v75 = v24;
    do
    {
      if (v26)
      {
        v27 = v77;
        v28 = *(_DWORD *)(v76 + 4 * v25);
        v29 = a2 + ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80));
        swift_bridgeObjectRetain_n();
        v30 = *(_QWORD *)(v27 + 72);
        do
        {
          sub_1A55034B8(v29, (uint64_t)v22, type metadata accessor for TaskHistory.Previous);
          sub_1A55034B8((uint64_t)v22, (uint64_t)v19, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v31 = *((_DWORD *)v19 + 2);
            swift_release();
            if (v31 == v28)
            {
              sub_1A55034FC((uint64_t)v22, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              v32 = 2;
              swift_bridgeObjectRelease_n();
              return v32;
            }
          }
          else
          {
            sub_1A55034FC((uint64_t)v19, type metadata accessor for TaskHistory.Previous);
          }
          sub_1A55034FC((uint64_t)v22, type metadata accessor for TaskHistory.Previous);
          v29 += v30;
          --v26;
        }
        while (v26);
        a2 = v78;
        swift_bridgeObjectRelease_n();
        v16 = v83;
        v26 = v74;
        v24 = v75;
      }
      ++v25;
    }
    while (v25 != v24);
    swift_bridgeObjectRelease();
    a3 = v69;
    v5 = v70;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v33 = v81;
  if (!v5[17])
  {
    v54 = sub_1A55E34E8();
    if ((v55 & 1) == 0)
    {
      v56 = v54;
      v57 = swift_allocObject();
      v58 = v5[3];
      v59 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v57 + 16) = v5[2];
      *(_QWORD *)(v57 + 24) = v58;
      *(_QWORD *)(v57 + 32) = v59;
      *(_QWORD *)(v57 + 40) = v56;
      *(_BYTE *)(v57 + 48) = 0;
      goto LABEL_37;
    }
    return 2;
  }
  v34 = v5[22];
  v35 = sub_1A562ACE0(a3);
  v36 = *(_QWORD *)(v35 + 16);
  if (!v36)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    return 2;
  }
  v68 = v34;
  v69 = v35;
  v70 = v5;
  v37 = 0;
  v75 = v35 + 32;
  v78 = a2;
  v38 = *(_QWORD *)(a2 + 16);
  v74 = v36;
  v72 = v38;
  while (!v38)
  {
LABEL_17:
    if (++v37 == v36)
      goto LABEL_39;
  }
  v76 = v37;
  v39 = *(_DWORD *)(v75 + 4 * v37);
  v40 = v77;
  v41 = v78 + ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v42 = *(_QWORD *)(v40 + 72);
  while (1)
  {
    sub_1A55034B8(v41, (uint64_t)v16, type metadata accessor for TaskHistory.Previous);
    v43 = (uint64_t)v16;
    v44 = v82;
    sub_1A55034B8(v43, v82, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    sub_1A55034FC(v44, type metadata accessor for TaskHistory.Previous);
LABEL_21:
    v16 = v83;
    sub_1A55034FC((uint64_t)v83, type metadata accessor for TaskHistory.Previous);
    v41 += v42;
    if (!--v38)
    {
LABEL_16:
      v36 = v74;
      v37 = v76;
      v38 = v72;
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  v45 = *(_DWORD *)(v44 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48));
  sub_1A55034FC(v44, type metadata accessor for ClientCommand);
  if (v45 != v39)
    goto LABEL_21;
  v16 = v83;
  sub_1A55034FC((uint64_t)v83, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v46 = *(_QWORD *)(v73 + 16);
  if (v46)
  {
    v47 = v71;
    v48 = v73 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v49 = *(_QWORD *)(v47 + 72);
    do
    {
      sub_1A55034B8(v48, v33, type metadata accessor for TaskHistory.Running);
      v50 = v33;
      v51 = v79;
      sub_1A55034B8(v50, v79, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A55034FC(v51, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        v52 = *(_DWORD *)(v51 + 8);
        v53 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
        sub_1A55034FC(v51 + *(int *)(v53 + 64), type metadata accessor for ClientCommand);
        if (v52 == v39)
        {
          v33 = v81;
          sub_1A55034FC(v81, type metadata accessor for TaskHistory.Running);
          goto LABEL_16;
        }
      }
      v33 = v81;
      sub_1A55034FC(v81, type metadata accessor for TaskHistory.Running);
      v48 += v49;
      --v46;
    }
    while (v46);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v60 = v70;
  v62 = sub_1A55E34E8();
  v63 = v61 & 1;
  v64 = v68;
  if (!*(_QWORD *)(v68 + 16) && (v61 & 1) != 0)
    return 2;
  v65 = swift_allocObject();
  v66 = v60[3];
  *(_QWORD *)(v65 + 16) = v60[2];
  *(_QWORD *)(v65 + 24) = v66;
  *(_QWORD *)(v65 + 32) = v64;
  *(_QWORD *)(v65 + 40) = v62;
  *(_BYTE *)(v65 + 48) = v63;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_37:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return 0;
}

