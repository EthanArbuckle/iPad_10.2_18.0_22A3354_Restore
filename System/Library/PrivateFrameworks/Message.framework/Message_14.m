uint64_t *sub_1A58BE054(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1A594AE60();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[6];
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    v15 = _s12OutputHelperV5ChunkVMa(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7982C8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v11(v13, v14, v10);
      v13[*(int *)(v15 + 20)] = v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  swift_retain();
  return v4;
}

uint64_t sub_1A58BE198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1A594AE60();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = _s12OutputHelperV5ChunkVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    v6(v7, v5);
  return swift_release();
}

_QWORD *sub_1A58BE230(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A594AE60();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = _s12OutputHelperV5ChunkVMa(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7982C8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    v12[*(int *)(v14 + 20)] = v13[*(int *)(v14 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  return a1;
}

_QWORD *sub_1A58BE34C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A594AE60();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v22 = a2;
  v23 = a3;
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = _s12OutputHelperV5ChunkVMa(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      v11(v13, v14, v9);
      v13[*(int *)(v15 + 20)] = v14[*(int *)(v15 + 20)];
      goto LABEL_7;
    }
    sub_1A55034FC((uint64_t)v13, _s12OutputHelperV5ChunkVMa);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7982C8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  v13[*(int *)(v15 + 20)] = v14[*(int *)(v15 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(v23 + 28)) = *(_QWORD *)((char *)v22 + *(int *)(v23 + 28));
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_1A58BE4D4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A594AE60();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = _s12OutputHelperV5ChunkVMa(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7982C8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    v12[*(int *)(v14 + 20)] = v13[*(int *)(v14 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_1A58BE5EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A594AE60();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v22 = a2;
  v23 = a3;
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = _s12OutputHelperV5ChunkVMa(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      v11(v13, v14, v9);
      v13[*(int *)(v15 + 20)] = v14[*(int *)(v15 + 20)];
      goto LABEL_7;
    }
    sub_1A55034FC((uint64_t)v13, _s12OutputHelperV5ChunkVMa);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7982C8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v14, v9);
  v13[*(int *)(v15 + 20)] = v14[*(int *)(v15 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(v23 + 28)) = *(_QWORD *)((char *)v22 + *(int *)(v23 + 28));
  swift_release();
  return a1;
}

uint64_t sub_1A58BE76C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58BE778(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = sub_1A594AE60();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7982C8);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[7]);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t sub_1A58BE820()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58BE82C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = sub_1A594AE60();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7982C8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
  return result;
}

void sub_1A58BE8D0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A594AE60();
  if (v0 <= 0x3F)
  {
    sub_1A58BE970();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1A58BE970()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE7982D8)
  {
    _s12OutputHelperV5ChunkVMa(255);
    v0 = sub_1A594C354();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE7982D8);
  }
}

_QWORD *sub_1A58BE9C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594AE60();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1A58BEA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1A58BEAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1A58BEB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1A58BEB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1A58BEBBC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58BEBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1A594AE60();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t sub_1A58BEC40()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58BEC4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A594AE60();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1A58BECC4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594AE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void Event.Payload.shortLogIdentifier.getter(uint64_t a1)
{
  __asm { BR              X11 }
}

unint64_t sub_1A58BED94@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    v20 = v2;
    sub_1A58BF7A4(0, v3, 0);
    v4 = v20;
    v5 = sub_1A558A0BC(v20);
    v7 = v6;
    v9 = v8 & 1;
    do
    {
      if (v5 < 0 || v5 >= 1 << *(_BYTE *)(v4 + 32))
      {
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
        JUMPOUT(0x1A58BF598);
      }
      if (((*(_QWORD *)(v20 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(v4 + 36) != v7)
        goto LABEL_14;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v10 = sub_1A594B490();
      v12 = v11;
      v14 = *(_QWORD *)(v21 + 16);
      v13 = *(_QWORD *)(v21 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1A58BF7A4(v13 > 1, v14 + 1, 1);
        v4 = v20;
      }
      *(_QWORD *)(v21 + 16) = v14 + 1;
      v15 = v21 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
      v16 = sub_1A558A160(v5, v7, v9 & 1, v4);
      v5 = v16;
      v7 = v17;
      v9 = v18 & 1;
      --v3;
    }
    while (v3);
    sub_1A5529B00(v16, v17, v18 & 1);
    v1 = 0xD000000000000010;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A60);
  sub_1A5862BD0();
  sub_1A594B268();
  swift_bridgeObjectRelease();
  sub_1A594C720();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  return v1 + 14;
}

uint64_t Event.connection.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t Event.connection.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*Event.connection.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t Event.payload.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1A5893E60(v1);
  return v1;
}

unint64_t Event.payload.setter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5893E90(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

double (*Event.payload.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t Event.runningCommandIDs.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned int *)(v0 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t Event.runningCommandIDs.setter(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_DWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = a3;
  return result;
}

double (*Event.runningCommandIDs.modify())(_QWORD)
{
  return nullsub_1;
}

void sub_1A58BF6DC(uint64_t *a1)
{
  _s15IMAP2Connection5EventV7PayloadO21__derived_enum_equalsySbAE_AEtFZ_0(*a1);
}

unint64_t Event.Payload.forEachCommand(_:)(unint64_t result, uint64_t a2, unint64_t a3)
{
  void (*v3)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a3 >> 60 == 4)
  {
    v3 = (void (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))result;
    v4 = *(_QWORD *)(a3 + 16);
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(a3 + 32);
    v7 = *(_QWORD *)(a3 + 40);
    v8 = *(unsigned __int8 *)(a3 + 48);
    sub_1A5892368(v5, v6, v7, v8);
    v3(v4, v5, v6, v7, v8);
    return sub_1A58921EC(v5, v6, v7, v8);
  }
  return result;
}

BOOL Event.Payload.didFail.getter(unint64_t a1)
{
  return a1 >> 60 == 1;
}

uint64_t sub_1A58BF788(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A58E8C0C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A58BF7A4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A58E8D68(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A58BF7C0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A58E8ED0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A58BF7DC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A58E9050(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A58BF7F8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A58E919C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A58BF814(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A58E92E8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A58BF830(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A58E9470(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A58BF84C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A58E95CC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A58BF868(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A58E9724(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

void _s15IMAP2Connection5EventV7PayloadO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A58BF8C4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;
  _OWORD v16[37];
  _OWORD v17[48];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_OWORD *)(a1 + 152);
  v16[7] = *(_OWORD *)(a1 + 136);
  v16[8] = v3;
  v4 = *(_OWORD *)(a1 + 184);
  v16[9] = *(_OWORD *)(a1 + 168);
  v16[10] = v4;
  v5 = *(_OWORD *)(a1 + 88);
  v16[3] = *(_OWORD *)(a1 + 72);
  v16[4] = v5;
  v6 = *(_OWORD *)(a1 + 120);
  v16[5] = *(_OWORD *)(a1 + 104);
  v16[6] = v6;
  v7 = *(_OWORD *)(a1 + 40);
  v16[0] = *(_OWORD *)(a1 + 24);
  v16[1] = v7;
  v16[2] = *(_OWORD *)(a1 + 56);
  if (v1 >> 60)
    goto LABEL_4;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_OWORD *)(v1 + 152);
  v17[7] = *(_OWORD *)(v1 + 136);
  v17[8] = v9;
  v10 = *(_OWORD *)(v1 + 184);
  v17[9] = *(_OWORD *)(v1 + 168);
  v17[10] = v10;
  v11 = *(_OWORD *)(v1 + 88);
  v17[3] = *(_OWORD *)(v1 + 72);
  v17[4] = v11;
  v12 = *(_OWORD *)(v1 + 120);
  v17[5] = *(_OWORD *)(v1 + 104);
  v17[6] = v12;
  v13 = *(_OWORD *)(v1 + 40);
  v17[0] = *(_OWORD *)(v1 + 24);
  v17[1] = v13;
  v17[2] = *(_OWORD *)(v1 + 56);
  if ((sub_1A5894DB8(v2, v8) & 1) == 0)
LABEL_4:
    v14 = 0;
  else
    v14 = static ServerID.__derived_struct_equals(_:_:)(v16, v17);
  return v14 & 1;
}

uint64_t initializeWithCopy for Event(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  sub_1A5893E60(v4);
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithTake for Event(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1A5893E90(v4);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t *initializeBufferWithCopyOfBuffer for Event.Payload(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1A5893E60(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for Event.Payload(unint64_t *a1)
{
  return sub_1A5893E90(*a1);
}

unint64_t *assignWithCopy for Event.Payload(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1A5893E60(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1A5893E90(v4);
  return a1;
}

unint64_t *assignWithTake for Event.Payload(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1A5893E90(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for Event.Payload(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x78 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 120);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x77)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Event.Payload(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x77)
  {
    *(_QWORD *)result = a2 - 120;
    if (a3 >= 0x78)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x78)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A58BFFB4(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 60;
  if (v1 <= 7)
    return v1;
  else
    return (*a1 >> 3) + 8;
}

unint64_t *sub_1A58BFFD0(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 8)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 60;
  }
  else
  {
    v2 = 8 * (a2 - 8);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for Event.Payload()
{
  return &type metadata for Event.Payload;
}

uint64_t sub_1A58C000C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7AADA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A58C0054(uint64_t a1)
{
  sub_1A58942F8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return a1;
}

uint64_t sub_1A58C0080(uint64_t a1)
{
  sub_1A5892148(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return a1;
}

uint64_t sub_1A58C00B0(__int16 a1)
{
  uint64_t v1;
  unsigned int v2;
  char v3;
  __int128 v6[2];
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AADF8);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AADE0);
  if (swift_dynamicCast())
  {
    sub_1A54FBF38(v6, (uint64_t)&v8);
    __swift_project_boxed_opaque_existential_1_0(&v8, v9);
    sub_1A5949C9C();
    swift_release();
    v1 = *(_QWORD *)&v6[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1A5510284((uint64_t)v6, (uint64_t *)&unk_1EE7AADE8);
    v8 = xmmword_1A59ABE10;
    swift_retain();
    *(_QWORD *)((char *)v6 + 7) = 0;
    *(_QWORD *)&v6[0] = 0;
    sub_1A594CA80();
    if ((a1 & 0x100) == 0)
    {
      LOBYTE(v2) = 0;
      v3 = a1;
      do
      {
        *((_BYTE *)v6 + v2) = v3;
        v2 = v2 + 1;
        if (((v2 >> 8) & 1) != 0)
          __break(1u);
        if (v2 == 14)
        {
          a1 = v6[0];
          sub_1A5949F60();
          LOBYTE(v2) = 0;
        }
        sub_1A594CA80();
        v3 = a1;
      }
      while ((a1 & 0x100) == 0);
      if ((_BYTE)v2)
        sub_1A5949F60();
    }
    swift_release();
    swift_release();
    return v8;
  }
  return v1;
}

uint64_t sub_1A58C02DC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AADE0);
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_1A5510284((uint64_t)v14, (uint64_t *)&unk_1EE7AADE8);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_1A594C7D4();
      }
      if (v2)
        v4 = (_BYTE *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_BYTE *)v2;
    }
    v6 = sub_1A58C82B0(v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_1A594B640();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = sub_1A58C8314(v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x1E0C80A78](*(_QWORD *)&v14[0]);
    sub_1A58C75E0();
    __asm { BR              X12 }
  }
  sub_1A54FBF38(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1_0(v17, v17[3]);
  sub_1A5949C9C();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

uint64_t sub_1A58C07E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23[2];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AADD8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594AD04();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A594AE60();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9, v11);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AADE0);
  if (swift_dynamicCast())
  {
    sub_1A54FBF38(v23, (uint64_t)&v25);
    __swift_project_boxed_opaque_existential_1_0(&v25, v27);
    sub_1A5949C9C();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    v23[0] = v22;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    v20 = v6;
    v21 = v10;
    v24 = 0;
    memset(v23, 0, sizeof(v23));
    sub_1A5510284((uint64_t)v23, (uint64_t *)&unk_1EE7AADE8);
    sub_1A58CA11C((unint64_t *)&unk_1EE798F10, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF648], MEMORY[0x1E0DEF660]);
    sub_1A594B754();
    v13 = a1;
    v14 = v25;
    v15 = v26;
    if (v26 >> 60 == 15)
    {
      v19[2] = v26;
      v16 = sub_1A594B748();
      *(_QWORD *)&v23[0] = sub_1A58C8314(v16);
      *((_QWORD *)&v23[0] + 1) = v17;
      MEMORY[0x1E0C80A78](*(_QWORD *)&v23[0]);
      v19[1] = v13;
      v19[-2] = v13;
      sub_1A58C78D0();
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v8, v4, v5);
      __asm { BR              X12 }
    }
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v13, v9);
    *(_QWORD *)&v23[0] = v14;
    *((_QWORD *)&v23[0] + 1) = v15;
  }
  return *(_QWORD *)&v23[0];
}

uint64_t sub_1A58C0D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (**v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  unint64_t v38;

  v34 = a5;
  v33 = a4;
  v30 = a3;
  v29 = sub_1A594A62C();
  v7 = *(_QWORD *)(v29 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v29);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A594A968();
  v31 = *(_QWORD *)(v10 - 8);
  v32 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t (**)(uint64_t))((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798F68);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A58C83B0(a1, a2);
  v37 = 0;
  v38 = 0xE000000000000000;
  v35 = a1;
  v36 = HIDWORD(a1);
  sub_1A594C924();
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B3B0);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1A59ABE60;
  *(_QWORD *)(v17 + 32) = v16;
  v37 = v17;
  sub_1A594B988();
  sub_1A594A95C();
  swift_allocObject();
  swift_retain();
  v18 = sub_1A594A938();
  sub_1A594AE24();
  v19 = sub_1A594AE60();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v15, 0, 1, v19);
  v20 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v30, v29);
  v21 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v22 = (v8 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v23 + v21, v9, v20);
  v24 = (_QWORD *)(v23 + v22);
  v25 = v34;
  *v24 = v33;
  v24[1] = v25;
  *v12 = sub_1A58CA1D4;
  v12[1] = (uint64_t (*)(uint64_t))v23;
  v27 = v31;
  v26 = v32;
  (*(void (**)(uint64_t (**)(uint64_t), _QWORD, uint64_t))(v31 + 104))(v12, *MEMORY[0x1E0CCE460], v32);
  swift_retain();
  sub_1A58C2DB8((uint64_t)v15, v18, 1, (uint64_t)v12);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v27 + 8))(v12, v26);
  return sub_1A5510284((uint64_t)v15, &qword_1EE798F68);
}

uint64_t sub_1A58C1000(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (**v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = sub_1A594A62C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = sub_1A594A968();
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t (**)(uint64_t))((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798F68);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE798238 != -1)
    swift_once();
  sub_1A594ABC0();
  swift_allocObject();
  swift_retain();
  v11 = sub_1A594ABA8();
  v24 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v23) = 1;
  sub_1A594ABD8();
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B3B0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1A59ABE60;
  *(_QWORD *)(v12 + 32) = v11;
  v23 = v12;
  sub_1A594B988();
  sub_1A594A95C();
  swift_allocObject();
  swift_retain();
  v13 = sub_1A594A938();
  sub_1A594AE24();
  v14 = sub_1A594AE60();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 0, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v15 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v16 + v15, (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  *v7 = sub_1A58CA0C8;
  v7[1] = (uint64_t (*)(uint64_t))v16;
  v18 = v21;
  v17 = v22;
  (*(void (**)(uint64_t (**)(uint64_t), _QWORD, uint64_t))(v21 + 104))(v7, *MEMORY[0x1E0CCE460], v22);
  sub_1A58C2DB8((uint64_t)v10, v13, 1, (uint64_t)v7);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v18 + 8))(v7, v17);
  return sub_1A5510284((uint64_t)v10, &qword_1EE798F68);
}

uint64_t sub_1A58C12F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[4];

  v6 = sub_1A594A968();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (_QWORD *)((char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798F68);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE798238 != -1)
    swift_once();
  sub_1A594ABC0();
  swift_allocObject();
  swift_retain();
  v13 = sub_1A594ABA8();
  v19[3] = sub_1A594AC8C();
  v19[0] = a1;
  swift_retain();
  sub_1A594ABD8();
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B3B0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1A59ABE60;
  *(_QWORD *)(v14 + 32) = v13;
  v19[0] = v14;
  sub_1A594B988();
  sub_1A594A95C();
  swift_allocObject();
  swift_retain();
  v15 = sub_1A594A938();
  sub_1A594AE24();
  v16 = sub_1A594AE60();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v12, 0, 1, v16);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  *v9 = sub_1A58CA2C4;
  v9[1] = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CCE460], v6);
  swift_retain();
  sub_1A58C2DB8((uint64_t)v12, v15, 1, (uint64_t)v9);
  swift_release();
  swift_release();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  return sub_1A5510284((uint64_t)v12, &qword_1EE798F68);
}

uint64_t sub_1A58C1594(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v2 = sub_1A594A968();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798F68);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE798238 != -1)
    swift_once();
  sub_1A594ABC0();
  swift_allocObject();
  swift_retain();
  v9 = sub_1A594ABA8();
  v14[3] = &type metadata for ClientCommand.EncodingOptions;
  LOWORD(v14[0]) = a1 & 0x1FF;
  BYTE2(v14[0]) = BYTE2(a1) & 1;
  sub_1A594ABD8();
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B3B0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1A59ABE60;
  *(_QWORD *)(v10 + 32) = v9;
  v14[0] = v10;
  sub_1A594B988();
  sub_1A594A95C();
  swift_allocObject();
  swift_retain();
  v11 = sub_1A594A938();
  sub_1A594AE24();
  v12 = sub_1A594AE60();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CCE458], v2);
  sub_1A58C2DB8((uint64_t)v8, v11, 1, (uint64_t)v5);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_1A5510284((uint64_t)v8, &qword_1EE798F68);
}

uint64_t sub_1A58C180C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];

  v4 = sub_1A594A968();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798F68);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE798238 != -1)
    swift_once();
  sub_1A594ABC0();
  swift_allocObject();
  swift_retain();
  v11 = sub_1A594ABA8();
  v17[3] = MEMORY[0x1E0DEAFA0];
  LOBYTE(v17[0]) = 1;
  sub_1A594ABD8();
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B3B0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1A59ABE60;
  *(_QWORD *)(v12 + 32) = v11;
  v17[0] = v12;
  sub_1A594B988();
  sub_1A594A95C();
  swift_allocObject();
  swift_retain();
  v13 = sub_1A594A938();
  sub_1A594AE24();
  v14 = sub_1A594AE60();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 0, 1, v14);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  *v7 = sub_1A58CA2C4;
  v7[1] = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CCE460], v4);
  swift_retain();
  sub_1A58C2DB8((uint64_t)v10, v13, 1, (uint64_t)v7);
  swift_release();
  swift_release();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  return sub_1A5510284((uint64_t)v10, &qword_1EE798F68);
}

uint64_t sub_1A58C1AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];

  v0 = sub_1A594A968();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798F68);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE798238 != -1)
    swift_once();
  sub_1A594ABC0();
  swift_allocObject();
  swift_retain();
  v7 = sub_1A594ABA8();
  v12[3] = &_s10WorkaroundON;
  sub_1A594ABD8();
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B3B0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A59ABE60;
  *(_QWORD *)(v8 + 32) = v7;
  v12[0] = v8;
  sub_1A594B988();
  sub_1A594A95C();
  swift_allocObject();
  swift_retain();
  v9 = sub_1A594A938();
  sub_1A594AE24();
  v10 = sub_1A594AE60();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CCE458], v0);
  sub_1A58C2DB8((uint64_t)v6, v9, 1, (uint64_t)v3);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_1A5510284((uint64_t)v6, &qword_1EE798F68);
}

uint64_t sub_1A58C1D10()
{
  uint64_t v0;

  v0 = sub_1A594A764();
  __swift_allocate_value_buffer_0(v0, qword_1EE795D58);
  __swift_project_value_buffer_0(v0, (uint64_t)qword_1EE795D58);
  return sub_1A594A758();
}

uint64_t sub_1A58C1D88()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for Framer();
  sub_1A58CA11C(&qword_1EE798278, v0, (uint64_t (*)(uint64_t))type metadata accessor for Framer, (uint64_t)&unk_1A59DF470);
  sub_1A594AB90();
  swift_allocObject();
  result = sub_1A594AB84();
  qword_1EE7F9358 = result;
  return result;
}

uint64_t sub_1A58C1DF8()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _BYTE *v7;
  char v8;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v20;
  unsigned int v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[12];

  ServerResponseFramingParser.init()((uint64_t)v25);
  v1 = v25[9];
  *(_OWORD *)(v0 + 144) = v25[8];
  *(_OWORD *)(v0 + 160) = v1;
  v2 = v25[11];
  *(_OWORD *)(v0 + 176) = v25[10];
  *(_OWORD *)(v0 + 192) = v2;
  v3 = v25[5];
  *(_OWORD *)(v0 + 80) = v25[4];
  *(_OWORD *)(v0 + 96) = v3;
  v4 = v25[7];
  *(_OWORD *)(v0 + 112) = v25[6];
  *(_OWORD *)(v0 + 128) = v4;
  v5 = v25[1];
  *(_OWORD *)(v0 + 16) = v25[0];
  *(_OWORD *)(v0 + 32) = v5;
  v6 = v25[3];
  *(_OWORD *)(v0 + 48) = v25[2];
  *(_OWORD *)(v0 + 64) = v6;
  *(_QWORD *)(v0 + 208) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 216) = 0;
  *(_QWORD *)(v0 + 224) = 0;
  *(_QWORD *)(v0 + 232) = 0;
  *(_WORD *)(v0 + 240) = 256;
  v7 = ClientCommand.EncodingOptions.rfc3501.unsafeMutableAddressor();
  v8 = v7[1];
  v9 = v7[2];
  *(_BYTE *)(v0 + 242) = *v7;
  *(_BYTE *)(v0 + 243) = v8;
  *(_BYTE *)(v0 + 244) = v9;
  *(_QWORD *)(v0 + 248) = 0;
  *(_QWORD *)(v0 + 256) = 0;
  if (qword_1EE798290 != -1)
    swift_once();
  v10 = sub_1A594A764();
  __swift_project_value_buffer_0(v10, (uint64_t)qword_1EE795D58);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v11 = sub_1A594A74C();
  v12 = sub_1A594C000();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v24 = v14;
    *(_DWORD *)v13 = 68158210;
    LODWORD(v22[0]) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v13 + 8) = 256;
    sub_1A594AC74();
    sub_1A594ABFC();
    if (v23)
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v15 = v20;
        swift_release();
        goto LABEL_10;
      }
    }
    else
    {
      sub_1A5510284((uint64_t)v22, &qword_1EE79B530);
    }
    swift_release();
    v15 = *ConnectionLoggerID.invalid.unsafeMutableAddressor();
LABEL_10:
    LOBYTE(v22[0]) = v15;
    sub_1A594C3CC();
    *(_WORD *)(v13 + 11) = 2082;
    sub_1A594AC74();
    sub_1A594ABFC();
    if (v23)
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v16 = v21;
        swift_release();
LABEL_15:
        v17 = ConnectionID.debugDescription.getter(v16);
        v22[0] = sub_1A589167C(v17, v18, &v24);
        sub_1A594C3CC();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v11, v12, "[%.*hhx-%{public}s] New IMAP framer", (uint8_t *)v13, 0x15u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v14, -1, -1);
        MEMORY[0x1A85B1964](v13, -1, -1);

        swift_release();
        return v0;
      }
    }
    else
    {
      sub_1A5510284((uint64_t)v22, &qword_1EE79B530);
    }
    swift_release();
    v16 = *((unsigned int *)ConnectionLoggerID.invalid.unsafeMutableAddressor() + 1);
    goto LABEL_15;
  }

  swift_release_n();
  return v0;
}

unint64_t sub_1A58C2174()
{
  unsigned int v0;
  uint64_t v1;
  char *v2;
  unsigned __int8 v4;
  unsigned int v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_1A594AC74();
  sub_1A594ABFC();
  if (!v7)
  {
    sub_1A5510284((uint64_t)v6, &qword_1EE79B530);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    swift_release();
    v2 = ConnectionLoggerID.invalid.unsafeMutableAddressor();
    v0 = *v2;
    v1 = *((unsigned int *)v2 + 1);
    return v0 | (unint64_t)(v1 << 32);
  }
  v0 = v4;
  v1 = v5;
  swift_release();
  return v0 | (unint64_t)(v1 << 32);
}

uint64_t sub_1A58C2234@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22[3];
  uint64_t v23;

  sub_1A594AC74();
  sub_1A594ABFC();
  v2 = v23;
  sub_1A5510284((uint64_t)v22, &qword_1EE79B530);
  swift_release();
  if (v2)
  {
    if (qword_1EE798290 != -1)
      swift_once();
    v3 = sub_1A594A764();
    __swift_project_value_buffer_0(v3, (uint64_t)qword_1EE795D58);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v4 = sub_1A594A74C();
    v5 = sub_1A594C000();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = swift_slowAlloc();
      v7 = swift_slowAlloc();
      v22[0] = v7;
      *(_DWORD *)v6 = 68158210;
      sub_1A594C3CC();
      *(_WORD *)(v6 + 8) = 256;
      sub_1A58C2174();
      sub_1A594C3CC();
      *(_WORD *)(v6 + 11) = 2082;
      v8 = sub_1A58C2174();
      v9 = ConnectionID.debugDescription.getter(HIDWORD(v8));
      sub_1A589167C(v9, v10, v22);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v4, v5, "[%.*hhx-%{public}s] (post STARTTLS) IMAP framer loaded.", (uint8_t *)v6, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v7, -1, -1);
      MEMORY[0x1A85B1964](v6, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_1A594ABC0();
    swift_retain();
    sub_1A594ABB4();
    v23 = MEMORY[0x1E0DEAFA0];
    LOBYTE(v22[0]) = 1;
    sub_1A594ABD8();
    sub_1A594AC5C();
    swift_release();
  }
  else
  {
    if (qword_1EE798290 != -1)
      swift_once();
    v11 = sub_1A594A764();
    __swift_project_value_buffer_0(v11, (uint64_t)qword_1EE795D58);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v12 = sub_1A594A74C();
    v13 = sub_1A594C000();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v22[0] = v15;
      *(_DWORD *)v14 = 68158210;
      sub_1A594C3CC();
      *(_WORD *)(v14 + 8) = 256;
      sub_1A58C2174();
      sub_1A594C3CC();
      *(_WORD *)(v14 + 11) = 2082;
      v16 = sub_1A58C2174();
      v17 = ConnectionID.debugDescription.getter(HIDWORD(v16));
      sub_1A589167C(v17, v18, v22);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v12, v13, "[%.*hhx-%{public}s] IMAP framer loaded.", (uint8_t *)v14, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v15, -1, -1);
      MEMORY[0x1A85B1964](v14, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
  v19 = *MEMORY[0x1E0CCE870];
  v20 = sub_1A594AB9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(a1, v19, v20);
}

uint64_t sub_1A58C26D0()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[12];

  v1 = *(_OWORD *)(v0 + 160);
  v8[8] = *(_OWORD *)(v0 + 144);
  v8[9] = v1;
  v2 = *(_OWORD *)(v0 + 192);
  v8[10] = *(_OWORD *)(v0 + 176);
  v8[11] = v2;
  v3 = *(_OWORD *)(v0 + 96);
  v8[4] = *(_OWORD *)(v0 + 80);
  v8[5] = v3;
  v4 = *(_OWORD *)(v0 + 128);
  v8[6] = *(_OWORD *)(v0 + 112);
  v8[7] = v4;
  v5 = *(_OWORD *)(v0 + 32);
  v8[0] = *(_OWORD *)(v0 + 16);
  v8[1] = v5;
  v6 = *(_OWORD *)(v0 + 64);
  v8[2] = *(_OWORD *)(v0 + 48);
  v8[3] = v6;
  sub_1A58C9B2C((uint64_t)v8);
  swift_bridgeObjectRelease();
  sub_1A58C9B00(*(_QWORD *)(v0 + 248));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Framer()
{
  return objc_opt_self();
}

uint64_t sub_1A58C2760()
{
  return 0x347650414D49;
}

uint64_t sub_1A58C2774()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1A58C1DF8();
  return v0;
}

uint64_t sub_1A58C27B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1A58C2234(a1);
}

uint64_t sub_1A58C27C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
  MEMORY[0x1E0C80A78](v3);
  while (!sub_1A58C3260())
    ;
  sub_1A58C34B0(a1);
  sub_1A58C3AEC(a1);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 192))
    return 0;
  else
    return *(_QWORD *)(v1 + 184);
}

uint64_t sub_1A58C2910(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  os_signpost_type_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  os_signpost_id_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  NSObject *v36;
  int v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  os_signpost_id_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  _QWORD v48[2];
  int v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v55 = a4;
  v56 = a3;
  v50 = a2;
  v5 = sub_1A594A62C();
  v52 = *(_QWORD *)(v5 - 8);
  v53 = v5;
  MEMORY[0x1E0C80A78](v5);
  v51 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A65C();
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v48 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A594ACEC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v48 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v48 - v24;
  v54 = a1;
  sub_1A54E330C(a1, (uint64_t)v15, &qword_1EE798EB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1A5510284((uint64_t)v15, &qword_1EE798EB8);
    v26 = tracingSignposter.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v12, v26, v58);
    v27 = sub_1A594A650();
    v28 = sub_1A594C150();
    if ((sub_1A594C318() & 1) != 0)
    {
      v29 = v51;
      v30 = v52;
      v31 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v50, v53);
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      v33 = sub_1A594A620();
      _os_signpost_emit_with_name_impl(&dword_1A4F90000, v27, v28, v33, "Connection.didEnqueue", "", v32, 2u);
      MEMORY[0x1A85B1964](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v12, v58);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v57 + 8))(v12, v58);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v25, v15, v16);
    v34 = tracingSignposter.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v9, v34, v58);
    v35 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v35(v22, v25, v16);
    v36 = sub_1A594A650();
    v37 = sub_1A594C150();
    if ((sub_1A594C318() & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v50, v53);
      v38 = swift_slowAlloc();
      v49 = v37;
      v39 = (uint8_t *)v38;
      v50 = swift_slowAlloc();
      v60 = v50;
      *(_DWORD *)v39 = 136315138;
      v48[1] = v39 + 4;
      v35(v19, v22, v16);
      v40 = sub_1A594B4A8();
      v59 = sub_1A589167C(v40, v41, &v60);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v42 = *(void (**)(char *, uint64_t))(v17 + 8);
      v42(v22, v16);
      v43 = v51;
      v44 = sub_1A594A620();
      _os_signpost_emit_with_name_impl(&dword_1A4F90000, v36, (os_signpost_type_t)v49, v44, "Connection.didFailToSendData", "%s", v39, 0xCu);
      v45 = v50;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v45, -1, -1);
      MEMORY[0x1A85B1964](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v9, v58);
      v42(v25, v16);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v53);
    }
    else
    {

      v46 = *(void (**)(char *, uint64_t))(v17 + 8);
      v46(v22, v16);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v9, v58);
      v46(v25, v16);
    }
  }
  return v56(v54);
}

uint64_t sub_1A58C2DB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD v31[2];
  int v32;

  v31[1] = a4;
  v32 = a3;
  v31[0] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798F68);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v31 - v9;
  v11 = sub_1A594AE60();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v31 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v31 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v31 - v22;
  v24 = a1;
  sub_1A54E330C(a1, (uint64_t)v10, &qword_1EE798F68);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v25(v10, 1, v11) == 1)
  {
    sub_1A5510284((uint64_t)v10, &qword_1EE798F68);
    sub_1A54E330C(v24, (uint64_t)v7, &qword_1EE798F68);
    if (v25(v7, 1, v11) == 1)
    {
      sub_1A5510284((uint64_t)v7, &qword_1EE798F68);
      return sub_1A594AA28();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v7, v11);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
      v28 = sub_1A58C07E0((uint64_t)v14);
      v30 = v29;
      sub_1A594AA28();
      sub_1A54E46E8(v28, v30);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
  }
  else
  {
    v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v27(v20, v10, v11);
    v27(v23, v20, v11);
    sub_1A594AA1C();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v23, v11);
  }
}

uint64_t sub_1A58C3040(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_signpost_type_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  uint64_t v17;

  v3 = sub_1A594A62C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A65C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = tracingSignposter.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_1A594A650();
  v13 = sub_1A594C150();
  if ((sub_1A594C318() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_1A594A620();
    _os_signpost_emit_with_name_impl(&dword_1A4F90000, v12, v13, v15, "Connection.didFlush", "", v14, 2u);
    MEMORY[0x1A85B1964](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1A58C31D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v9;
  uint64_t v10;

  if (a3)
  {
    swift_retain();
    v9 = sub_1A58C9E20();
    v10 = sub_1A594A950();
  }
  else
  {
    v10 = 0;
    v9 = 1;
  }
  a6(v9, v10, a4 & 1, a5);
  swift_bridgeObjectRelease();
  return sub_1A58CA31C(v9);
}

BOOL sub_1A58C3260()
{
  char v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v0 = sub_1A594AC20();
  if (qword_1EE798290 != -1)
    swift_once();
  v1 = sub_1A594A764();
  __swift_project_value_buffer_0(v1, (uint64_t)qword_1EE795D58);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v2 = sub_1A594A74C();
  v3 = sub_1A594C00C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 68158466;
    sub_1A594C3CC();
    *(_WORD *)(v4 + 8) = 256;
    sub_1A58C2174();
    sub_1A594C3CC();
    *(_WORD *)(v4 + 11) = 2082;
    v6 = sub_1A58C2174();
    v7 = ConnectionID.debugDescription.getter(HIDWORD(v6));
    sub_1A589167C(v7, v8, &v10);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 21) = 1024;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v2, v3, "[%.*hhx-%{public}s] parseInput() returned %{BOOL}d", (uint8_t *)v4, 0x1Bu);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v5, -1, -1);
    MEMORY[0x1A85B1964](v4, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return (v0 & 1) == 0;
}

uint64_t sub_1A58C34B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  const void *v18;
  __int128 *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[4];
  unsigned int v49;
  _QWORD v50[3];
  uint64_t v51;
  _BYTE v52[184];
  _BYTE v53[184];
  _BYTE v54[184];
  uint64_t v55;
  _BYTE v56[184];
  __int128 v57;
  _OWORD v58[2];
  _BYTE v59[184];
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[32];
  __int128 v63[12];
  uint64_t v64;

  v3 = v1;
  v47 = a1;
  v4 = _s19CommandOutputBufferV7ElementOMa(0);
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v7 = ServerResponseFramingParser.popAllFrames()();
  swift_endAccess();
  v8 = sub_1A58D46A8(0, *(_QWORD *)(v7 + 16), 0, MEMORY[0x1E0DEE9D8]);
  v9 = *(_QWORD *)(v7 + 16);
  if (!v9)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    if (!v8[2])
      return swift_bridgeObjectRelease();
    sub_1A594ABC0();
    swift_retain_n();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594ABB4();
    v51 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE799500);
    v50[0] = v8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594ABD8();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1A594AC5C();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v44 = v6;
  v64 = v3 + 208;
  sub_1A58C9BDC((__int128 *)(v7 + 32), (uint64_t)v63);
  v41 = v58;
  v39 = v7;
  v10 = (__int128 *)(v7 + 216);
  v11 = v9 - 1;
  v46 = MEMORY[0x1E0DEE9B8] + 8;
  while (1)
  {
    sub_1A57BC84C((uint64_t)v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A58C9C18);
    sub_1A57BC84C((uint64_t)v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A58C9C18);
    sub_1A594AC74();
    sub_1A594ABFC();
    if (v51)
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v12 = v48[0];
        v13 = v49;
        swift_release();
        goto LABEL_8;
      }
    }
    else
    {
      sub_1A5510284((uint64_t)v50, &qword_1EE79B530);
    }
    swift_release();
    v14 = ConnectionLoggerID.invalid.unsafeMutableAddressor();
    v12 = *v14;
    v13 = *((unsigned int *)v14 + 1);
LABEL_8:
    sub_1A58C84D0(v63, v12 | (v13 << 32), v52);
    if (v2)
    {
      sub_1A57BC84C((uint64_t)v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A58C9CEC);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_1A57BC8E8(v52, v50);
    swift_beginAccess();
    if ((*(_BYTE *)(v3 + 241) & 1) != 0)
    {
      v15 = v59;
      sub_1A57BC8E8(v52, v59);
      if (sub_1A56EF358((uint64_t)v59) == 1)
      {
        v16 = (const void *)sub_1A56EF364((uint64_t)v59);
        sub_1A5715EC4(v16, &v61);
LABEL_29:
        swift_endAccess();
        sub_1A58A7E68((uint64_t)v52, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A7EE4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A69C4);
        v38 = v8[2];
        v37 = v8[3];
        if (v38 >= v37 >> 1)
          v8 = sub_1A58D46A8((_QWORD *)(v37 > 1), v38 + 1, 1, v8);
        v8[2] = v38 + 1;
        sub_1A57BC8E8(v52, &v8[23 * v38 + 4]);
        goto LABEL_32;
      }
      v27 = &v60;
    }
    else
    {
      v17 = *(_QWORD *)(v3 + 232);
      v45 = *(unsigned __int8 *)(v3 + 240);
      v15 = v53;
      sub_1A57BC8E8(v52, v53);
      if (sub_1A56EF358((uint64_t)v53) == 1)
      {
        v18 = (const void *)sub_1A56EF364((uint64_t)v53);
        sub_1A5715EC4(v18, v54);
        sub_1A5715EC4(v54, v56);
        if (sub_1A56EFC28((uint64_t)v56) == 2)
        {
          v40 = v17;
          nullsub_1(v56);
          v20 = *(__int128 *)((char *)v19 + 25);
          v21 = v19[1];
          v57 = *v19;
          v58[0] = v21;
          *(_OWORD *)((char *)v58 + 9) = v20;
          v23 = *((_QWORD *)&v57 + 1);
          v22 = v57;
          sub_1A57BC8E8(v50, v48);
          v24 = sub_1A56EF364((uint64_t)v48);
          sub_1A58A6954(v24);
          sub_1A58A6954(v24);
          v25 = Tag.init(_:)(v22, v23);
          LOBYTE(v23) = v26;
          sub_1A56F12F8((uint64_t)v41, (uint64_t)v62);
          sub_1A58C9DC0((uint64_t)v62);
          sub_1A58A7E68((uint64_t)v52, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FE4);
          if ((v23 & 1) == 0
            && (v45 & 1) == 0
            && v40 == v25
            && HIDWORD(v40) == HIDWORD(v25))
          {
            *(_QWORD *)(v3 + 232) = 0;
            *(_WORD *)(v3 + 240) = 1;
          }
        }
        goto LABEL_29;
      }
      v27 = &v55;
    }
    v28 = sub_1A56EF364((uint64_t)v15);
    result = sub_1A56EFAF4(v28, (uint64_t)v27);
    if (!*(_QWORD *)(*(_QWORD *)v64 + 16))
      goto LABEL_27;
    v30 = (uint64_t)v44;
    sub_1A55034B8(*(_QWORD *)v64 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80)), (uint64_t)v44, _s19CommandOutputBufferV7ElementOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 1) >= 2)
      break;
    result = sub_1A55034FC(v30, _s19CommandOutputBufferV7ElementOMa);
    v32 = *(_QWORD *)(v3 + 216);
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_41;
    *(_QWORD *)(v3 + 216) = v34;
    swift_endAccess();
LABEL_32:
    sub_1A57BC84C((uint64_t)v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A58C9CEC);
    sub_1A58A7E68((uint64_t)v52, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FE4);
    if (!v11)
      goto LABEL_36;
    sub_1A58C9BDC(v10, (uint64_t)v63);
    v10 = (__int128 *)((char *)v10 + 184);
    --v11;
  }
  if (EnumCaseMultiPayload != 3)
  {
    sub_1A5899210();
    swift_allocError();
    swift_willThrow();
    sub_1A55034FC((uint64_t)v44, _s19CommandOutputBufferV7ElementOMa);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1A58A7E68((uint64_t)v52, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FE4);
    sub_1A57BC84C((uint64_t)v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A58C9CEC);
    return swift_bridgeObjectRelease();
  }
  result = sub_1A55034FC((uint64_t)v44, _s19CommandOutputBufferV7ElementOMa);
LABEL_27:
  v35 = *(_QWORD *)(v3 + 224);
  v33 = __OFADD__(v35, 1);
  v36 = v35 + 1;
  if (!v33)
  {
    *(_QWORD *)(v3 + 224) = v36;
    goto LABEL_29;
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A58C3AEC(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;

  v4 = _s11CompressionO12OutgoingDataVMa();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 208) + 16))
  {
    sub_1A58C60C0(a1, (uint64_t)v6);
    if (v2)
    {
      if (qword_1EE798290 != -1)
        swift_once();
      v8 = sub_1A594A764();
      __swift_project_value_buffer_0(v8, (uint64_t)qword_1EE795D58);
      swift_retain_n();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v9 = v2;
      v10 = v2;
      v11 = sub_1A594A74C();
      v12 = sub_1A594C018();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = swift_slowAlloc();
        v14 = (_QWORD *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v42 = v35;
        *(_DWORD *)v13 = 68158466;
        LODWORD(v36) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v13 + 8) = 256;
        LOBYTE(v36) = sub_1A58C2174();
        sub_1A594C3CC();
        *(_WORD *)(v13 + 11) = 2082;
        v15 = sub_1A58C2174();
        v16 = ConnectionID.debugDescription.getter(HIDWORD(v15));
        v36 = sub_1A589167C(v16, v17, &v42);
        sub_1A594C3CC();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 21) = 2112;
        v18 = sub_1A5949D98();
        v36 = v18;
        sub_1A594C3CC();
        *v14 = v18;

        _os_log_impl(&dword_1A4F90000, v11, v12, "[%.*hhx-%{public}s] Protocol error while sending. %@", (uint8_t *)v13, 0x1Fu);
        __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v14, -1, -1);
        v19 = v35;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v19, -1, -1);
        MEMORY[0x1A85B1964](v13, -1, -1);
      }
      else
      {
        swift_release_n();

      }
      return swift_willThrow();
    }
    else
    {
      sub_1A58C8DC0((uint64_t)v6);
      if (*(_QWORD *)(*(_QWORD *)(v1 + 208) + 16))
      {
        v20 = *(_QWORD *)(v1 + 232);
        v21 = *(_BYTE *)(v1 + 240);
        v22 = *(_BYTE *)(v1 + 241);
        v37 = *(_QWORD *)(v1 + 208);
        v38 = *(_OWORD *)(v1 + 216);
        v39 = v20;
        v40 = v21;
        v41 = v22;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v23 = sub_1A58978F8();
        swift_bridgeObjectRelease();
        if (qword_1EE798290 != -1)
          swift_once();
        v24 = sub_1A594A764();
        __swift_project_value_buffer_0(v24, (uint64_t)qword_1EE795D58);
        swift_retain_n();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v25 = sub_1A594A74C();
        v26 = sub_1A594C00C();
        if (os_log_type_enabled(v25, v26))
        {
          v27 = swift_slowAlloc();
          v34 = v23;
          v28 = v27;
          v35 = swift_slowAlloc();
          v42 = v35;
          *(_DWORD *)v28 = 68158466;
          LODWORD(v36) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v28 + 8) = 256;
          LOBYTE(v36) = sub_1A58C2174();
          sub_1A594C3CC();
          *(_WORD *)(v28 + 11) = 2082;
          v29 = sub_1A58C2174();
          v30 = ConnectionID.debugDescription.getter(HIDWORD(v29));
          v36 = sub_1A589167C(v30, v31, &v42);
          sub_1A594C3CC();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v28 + 21) = 2048;
          v36 = v34;
          sub_1A594C3CC();
          _os_log_impl(&dword_1A4F90000, v25, v26, "[%.*hhx-%{public}s] Output buffer still holds %{iec-bytes}ld. Waiting for server response.", (uint8_t *)v28, 0x1Fu);
          v32 = v35;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v32, -1, -1);
          MEMORY[0x1A85B1964](v28, -1, -1);
        }
        else
        {
          swift_release_n();
        }

      }
      return sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);
    }
  }
  return result;
}

uint64_t sub_1A58C4060(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;

  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
  MEMORY[0x1E0C80A78](v10);
  v11 = 0;
  if ((a3 & 1) == 0)
  {
    if (a1)
    {
      v11 = a2 - a1;
      if (a2 != a1)
        sub_1A58C4350(a1, a2, a6);
    }
  }
  return v11;
}

void sub_1A58C4350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  NSObject *v29;
  int v30;
  void (*v31)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  os_signpost_id_t v35;
  void (*v36)(_BYTE *, uint64_t);
  _OWORD *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[12];
  int v54;
  uint64_t v55;
  _BYTE *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;

  v59 = a3;
  v58 = sub_1A594A65C();
  v61 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v60 = &v53[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798838);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v53[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v62 = sub_1A594A62C();
  v63 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v11 = &v53[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v14 = &v53[-v13];
  if (a1)
    v15 = a2 - a1;
  else
    v15 = 0;
  v17 = *(_QWORD *)(v3 + 248);
  v16 = *(_QWORD *)(v3 + 256);
  if (!a1)
    a2 = 0;
  swift_retain();
  sub_1A58C9AD4(v17);
  v18 = v79;
  v19 = sub_1A58CCFD4(a1, a2, v17, v16, v3);
  swift_release();
  sub_1A58C9B00(v17);
  if (!v18)
  {
    v55 = v15;
    v56 = v11;
    v20 = v14;
    v79 = v3;
    v21 = v60;
    v22 = v61;
    v23 = v58;
    v57 = v19;
    sub_1A58C4A70((uint64_t)v9);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v63 + 48))(v9, 1, v62) == 1)
    {
      sub_1A5510284((uint64_t)v9, &qword_1EE798838);
    }
    else
    {
      v24 = v20;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v63 + 32))(v20, v9, v62);
      v25 = tracingSignposter.unsafeMutableAddressor();
      v26 = v22;
      v27 = v23;
      v28 = v21;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v22 + 16))(v21, v25, v27);
      v29 = sub_1A594A650();
      v30 = sub_1A594C150();
      if ((sub_1A594C318() & 1) != 0)
      {
        v31 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v63 + 16);
        v54 = v30;
        v32 = v62;
        v31(v56, v24, v62);
        v33 = swift_slowAlloc();
        *(_DWORD *)v33 = 134218240;
        v65 = v55;
        sub_1A594C3CC();
        *(_WORD *)(v33 + 12) = 2048;
        v65 = (uint64_t)v57;
        sub_1A594C3CC();
        v34 = v56;
        v35 = sub_1A594A620();
        _os_signpost_emit_with_name_impl(&dword_1A4F90000, v29, (os_signpost_type_t)v54, v35, "Connection.didReceiveData", "%ld,%ld", (uint8_t *)v33, 0x16u);
        MEMORY[0x1A85B1964](v33, -1, -1);

        (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v60, v27);
        v36 = *(void (**)(_BYTE *, uint64_t))(v63 + 8);
        v36(v24, v32);
        v36(v34, v32);
      }
      else
      {

        (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v28, v27);
        (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v24, v62);
      }
    }
    v37 = (_OWORD *)v79;
    if (qword_1EE798290 != -1)
      swift_once();
    v38 = sub_1A594A764();
    __swift_project_value_buffer_0(v38, (uint64_t)qword_1EE795D58);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_retain_n();
    v39 = sub_1A594A74C();
    v40 = sub_1A594C00C();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v79 = swift_slowAlloc();
      v66 = v79;
      *(_DWORD *)v41 = 68158722;
      LODWORD(v65) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 8) = 256;
      LOBYTE(v65) = sub_1A58C2174();
      sub_1A594C3CC();
      *(_WORD *)(v41 + 11) = 2082;
      v42 = sub_1A58C2174();
      v43 = ConnectionID.debugDescription.getter(HIDWORD(v42));
      v65 = sub_1A589167C(v43, v44, &v66);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 21) = 2048;
      v65 = (uint64_t)v57;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 31) = 2048;
      swift_beginAccess();
      v45 = v37[10];
      v75 = v37[9];
      v76 = v45;
      v46 = v37[12];
      v77 = v37[11];
      v78 = v46;
      v47 = v37[6];
      v71 = v37[5];
      v72 = v47;
      v48 = v37[8];
      v73 = v37[7];
      v74 = v48;
      v49 = v37[2];
      v67 = v37[1];
      v68 = v49;
      v50 = v37[4];
      v69 = v37[3];
      v70 = v50;
      v51 = ServerResponseFramingParser.count.getter();
      swift_release();
      v64 = v51;
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, v39, v40, "[%.*hhx-%{public}s] Appending %{iec-bytes}ld to receive buffer. Now has %{iec-bytes}ld.", (uint8_t *)v41, 0x29u);
      v52 = v79;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v52, -1, -1);
      MEMORY[0x1A85B1964](v41, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
  }
}

uint64_t sub_1A58C4A10(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  ServerResponseFramingParser.append(_:)(a1, a2);
  return swift_endAccess();
}

uint64_t sub_1A58C4A70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  _QWORD v6[4];

  sub_1A594AC74();
  sub_1A594ABFC();
  if (v6[3])
  {
    v2 = sub_1A594A62C();
    v3 = swift_dynamicCast();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, v3 ^ 1u, 1, v2);
  }
  else
  {
    sub_1A5510284((uint64_t)v6, &qword_1EE79B530);
    v4 = sub_1A594A62C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
  return swift_release();
}

uint64_t sub_1A58C4B50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  char v15;
  char v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  uint64_t v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798130);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OutboundContent(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A594ABCC();
  if (!v24)
  {
    v12 = &qword_1EE79B530;
    v13 = v23;
LABEL_9:
    sub_1A5510284((uint64_t)v13, v12);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v9 = v22;
    sub_1A594ABCC();
    if (v24)
    {
      v10 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, v10 ^ 1u, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        swift_release();
        sub_1A54E3394((uint64_t)v4, (uint64_t)v8, type metadata accessor for OutboundContent);
        v11 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798318) + 48);
        *(_QWORD *)a1 = v9;
        sub_1A54E3394((uint64_t)v8, v11, type metadata accessor for OutboundContent);
        type metadata accessor for Framer.OutboundMessage();
        return swift_storeEnumTagMultiPayload();
      }
    }
    else
    {
      sub_1A5510284((uint64_t)v23, &qword_1EE79B530);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    }
    v12 = (uint64_t *)&unk_1EE798130;
    v13 = v4;
    goto LABEL_9;
  }
LABEL_10:
  sub_1A594ABCC();
  if (v24)
    goto LABEL_11;
  sub_1A5510284((uint64_t)v23, &qword_1EE79B530);
  sub_1A594ABCC();
  if (v24)
  {
    sub_1A594AC8C();
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_release();
      *(_QWORD *)a1 = v22;
      type metadata accessor for Framer.OutboundMessage();
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    sub_1A5510284((uint64_t)v23, &qword_1EE79B530);
  }
  sub_1A594ABCC();
  if (v24)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_release();
      v15 = BYTE1(v22);
      v16 = BYTE2(v22);
      *(_BYTE *)a1 = v22;
      *(_BYTE *)(a1 + 1) = v15;
      *(_BYTE *)(a1 + 2) = v16;
      type metadata accessor for Framer.OutboundMessage();
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    sub_1A5510284((uint64_t)v23, &qword_1EE79B530);
  }
  sub_1A594ABCC();
  if (v24)
  {
LABEL_11:
    swift_release();
    sub_1A5510284((uint64_t)v23, &qword_1EE79B530);
    type metadata accessor for Framer.OutboundMessage();
    return swift_storeEnumTagMultiPayload();
  }
  sub_1A5510284((uint64_t)v23, &qword_1EE79B530);
  sub_1A594ABCC();
  if (v24)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_release();
      type metadata accessor for Framer.OutboundMessage();
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    sub_1A5510284((uint64_t)v23, &qword_1EE79B530);
  }
  if (qword_1EE798290 != -1)
    swift_once();
  v17 = sub_1A594A764();
  __swift_project_value_buffer_0(v17, (uint64_t)qword_1EE795D58);
  v18 = sub_1A594A74C();
  v19 = sub_1A594C018();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1A4F90000, v18, v19, "Message has no outbound content.", v20, 2u);
    MEMORY[0x1A85B1964](v20, -1, -1);
  }

  sub_1A58C9B98();
  swift_allocError();
  swift_willThrow();
  return swift_release();
}

uint64_t sub_1A58C5108(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char *v37;
  char v38;
  char v39;
  char v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _OWORD v59[12];
  uint64_t v60;

  v3 = v2;
  v44 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798838);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v45 = (char *)&v42 - v8;
  if (qword_1EE798290 != -1)
    swift_once();
  v9 = sub_1A594A764();
  __swift_project_value_buffer_0(v9, (uint64_t)qword_1EE795D58);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v10 = sub_1A594A74C();
  v11 = sub_1A594C030();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v43 = v2;
    v13 = v12;
    v14 = swift_slowAlloc();
    *(_QWORD *)&v47 = v14;
    *(_DWORD *)v13 = 68158210;
    LODWORD(v46) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v13 + 8) = 256;
    LOBYTE(v46) = sub_1A58C2174();
    sub_1A594C3CC();
    *(_WORD *)(v13 + 11) = 2082;
    v15 = sub_1A58C2174();
    v16 = ConnectionID.debugDescription.getter(HIDWORD(v15));
    v46 = sub_1A589167C(v16, v17, (uint64_t *)&v47);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v10, v11, "[%.*hhx-%{public}s] Adding TLS to the protocol stack.", (uint8_t *)v13, 0x15u);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v14, -1, -1);
    v18 = v13;
    v3 = v43;
    MEMORY[0x1A85B1964](v18, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v19 = (uint64_t)v45;
  if (qword_1EE798238 != -1)
    swift_once();
  sub_1A594ABF0();
  swift_allocObject();
  swift_retain();
  sub_1A594ABE4();
  *((_QWORD *)&v48 + 1) = MEMORY[0x1E0DEAFA0];
  LOBYTE(v47) = 1;
  sub_1A594AC08();
  sub_1A58C4A70(v19);
  sub_1A54E330C(v19, (uint64_t)v6, &qword_1EE798838);
  v20 = sub_1A594A62C();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v20) == 1)
  {
    sub_1A5510284((uint64_t)v6, &qword_1EE798838);
    v47 = 0u;
    v48 = 0u;
  }
  else
  {
    *((_QWORD *)&v48 + 1) = v20;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v47);
    (*(void (**)(uint64_t *, char *, uint64_t))(v21 + 32))(boxed_opaque_existential_1, v6, v20);
  }
  sub_1A594AC08();
  sub_1A5510284(v19, &qword_1EE798838);
  v23 = sub_1A58C2174();
  *((_QWORD *)&v48 + 1) = &type metadata for ConnectionLoggerID;
  LOBYTE(v47) = v23;
  DWORD1(v47) = HIDWORD(v23);
  sub_1A594AC08();
  v24 = v60;
  sub_1A594AC68();
  if (v24)
    return swift_release();
  sub_1A594AC68();
  sub_1A594AC38();
  sub_1A594AC44();
  sub_1A594AC80();
  ServerResponseFramingParser.init()((uint64_t)v59);
  swift_beginAccess();
  v25 = *(_OWORD *)(v3 + 160);
  v55 = *(_OWORD *)(v3 + 144);
  v56 = v25;
  v26 = *(_OWORD *)(v3 + 192);
  v57 = *(_OWORD *)(v3 + 176);
  v58 = v26;
  v27 = *(_OWORD *)(v3 + 96);
  v51 = *(_OWORD *)(v3 + 80);
  v52 = v27;
  v28 = *(_OWORD *)(v3 + 128);
  v53 = *(_OWORD *)(v3 + 112);
  v54 = v28;
  v29 = *(_OWORD *)(v3 + 32);
  v47 = *(_OWORD *)(v3 + 16);
  v48 = v29;
  v30 = *(_OWORD *)(v3 + 64);
  v49 = *(_OWORD *)(v3 + 48);
  v50 = v30;
  v31 = v59[9];
  *(_OWORD *)(v3 + 144) = v59[8];
  *(_OWORD *)(v3 + 160) = v31;
  v32 = v59[11];
  *(_OWORD *)(v3 + 176) = v59[10];
  *(_OWORD *)(v3 + 192) = v32;
  v33 = v59[5];
  *(_OWORD *)(v3 + 80) = v59[4];
  *(_OWORD *)(v3 + 96) = v33;
  v34 = v59[7];
  *(_OWORD *)(v3 + 112) = v59[6];
  *(_OWORD *)(v3 + 128) = v34;
  v35 = v59[1];
  *(_OWORD *)(v3 + 16) = v59[0];
  *(_OWORD *)(v3 + 32) = v35;
  v36 = v59[3];
  *(_OWORD *)(v3 + 48) = v59[2];
  *(_OWORD *)(v3 + 64) = v36;
  sub_1A58C9B2C((uint64_t)&v47);
  swift_beginAccess();
  *(_QWORD *)(v3 + 208) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_WORD *)(v3 + 240) = 256;
  swift_bridgeObjectRelease();
  v37 = (char *)ClientCommand.EncodingOptions.rfc3501.unsafeMutableAddressor();
  v38 = *v37;
  v39 = v37[1];
  v40 = v37[2];
  result = swift_release();
  *(_BYTE *)(v3 + 242) = v38;
  *(_BYTE *)(v3 + 243) = v39;
  *(_BYTE *)(v3 + 244) = v40;
  return result;
}

uint64_t sub_1A58C5684()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  if (qword_1EE798290 != -1)
    swift_once();
  v1 = sub_1A594A764();
  __swift_project_value_buffer_0(v1, (uint64_t)qword_1EE795D58);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v2 = sub_1A594A74C();
  v3 = sub_1A594C030();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v13 = v5;
    *(_DWORD *)v4 = 68158210;
    sub_1A594C3CC();
    *(_WORD *)(v4 + 8) = 256;
    sub_1A58C2174();
    sub_1A594C3CC();
    *(_WORD *)(v4 + 11) = 2082;
    v6 = sub_1A58C2174();
    v7 = ConnectionID.debugDescription.getter(HIDWORD(v6));
    sub_1A589167C(v7, v8, &v13);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v2, v3, "[%.*hhx-%{public}s] Enabling RFC 4978 compression.", (uint8_t *)v4, 0x15u);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v5, -1, -1);
    MEMORY[0x1A85B1964](v4, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  type metadata accessor for Deflate.Compressor();
  swift_allocObject();
  v9 = sub_1A58B9B30();
  type metadata accessor for Deflate.Decompressor();
  swift_allocObject();
  v10 = sub_1A58BAEB8();
  v11 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 248) = v9;
  *(_QWORD *)(v0 + 256) = v10;
  return sub_1A58C9B00(v11);
}

uint64_t sub_1A58C58D0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v56;
  unsigned __int8 *v57;
  int v58;
  int v59;
  uint64_t v60;
  BOOL v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[3];
  uint64_t v71;

  v68 = a3;
  v4 = v3;
  v67 = HIDWORD(a1);
  v7 = type metadata accessor for HandshakeReply.Encoded();
  MEMORY[0x1E0C80A78](v7);
  v65 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ClientCommand.Encoded();
  MEMORY[0x1E0C80A78](v9);
  v11 = (void (*)(_QWORD))((char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = type metadata accessor for ConnectionCommand(0);
  MEMORY[0x1E0C80A78](v66);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v64 = (uint64_t)&v63 - v15;
  v16 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v63 - v20;
  v22 = type metadata accessor for OutboundContent(0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(a2, (uint64_t)v24, v25);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1A54E3394((uint64_t)v24, (uint64_t)v21, type metadata accessor for ClientCommand);
    sub_1A55034B8((uint64_t)v21, (uint64_t)v18, type metadata accessor for ClientCommand);
    v33 = *(unsigned __int8 *)(v4 + 242);
    v34 = *(unsigned __int8 *)(v4 + 243);
    v35 = *(unsigned __int8 *)(v4 + 244);
    *v13 = a1;
    *((_DWORD *)v13 + 1) = v67;
    if (v35)
      v36 = 0x10000;
    else
      v36 = 0;
    if (v34)
      v37 = 256;
    else
      v37 = 0;
    ClientCommand.encode(tag:options:)(v37 | v33 | v36, v11);
    sub_1A55034FC((uint64_t)v18, type metadata accessor for ClientCommand);
    sub_1A54E3394((uint64_t)v11, (uint64_t)&v13[*(int *)(v66 + 20)], (uint64_t (*)(_QWORD))type metadata accessor for ClientCommand.Encoded);
    v38 = v64;
    sub_1A54E3394((uint64_t)v13, v64, type metadata accessor for ConnectionCommand);
    v39 = swift_beginAccess();
    if (!*(_QWORD *)(v4 + 224))
    {
      MEMORY[0x1E0C80A78](v39);
      *(&v63 - 2) = v38;
      v56 = sub_1A5898070((void (*)(uint64_t))sub_1A58C9A80);
      swift_endAccess();
      sub_1A55034FC(v38, type metadata accessor for ConnectionCommand);
      sub_1A55034FC((uint64_t)v21, type metadata accessor for ClientCommand);
      return v56;
    }
    sub_1A58991CC();
    v40 = (void *)swift_allocError();
    swift_willThrow();
    swift_endAccess();
    sub_1A55034FC(v38, type metadata accessor for ConnectionCommand);
    v41 = type metadata accessor for ClientCommand;
    v42 = (uint64_t)v21;
LABEL_18:
    sub_1A55034FC(v42, v41);
    goto LABEL_19;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v27 = *(_QWORD *)v24;
    v28 = *((_QWORD *)v24 + 1);
    v29 = v24[16];
    sub_1A5862C1C(v27, v28, v29);
    v30 = a1 & 0xFFFFFFFF000000FFLL;
    v31 = v65;
    sub_1A58C6D18(v27, v28, v29, v30, v65);
    v32 = swift_beginAccess();
    if (*(_QWORD *)(v4 + 224))
    {
      if (!*(_QWORD *)(*(_QWORD *)(v4 + 208) + 16))
      {
        MEMORY[0x1E0C80A78](v32);
        *(&v63 - 2) = (uint64_t)v31;
        v62 = sub_1A5898070((void (*)(uint64_t))sub_1A58C9A34);
        swift_endAccess();
        sub_1A585C500(v27, v28, v29);
        sub_1A55034FC((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for HandshakeReply.Encoded);
        return v62;
      }
      sub_1A58C99F0();
    }
    else
    {
      sub_1A58C9A3C();
    }
    v40 = (void *)swift_allocError();
    swift_willThrow();
    swift_endAccess();
    sub_1A585C500(v27, v28, v29);
    v41 = (uint64_t (*)(_QWORD))type metadata accessor for HandshakeReply.Encoded;
    v42 = (uint64_t)v31;
    goto LABEL_18;
  }
  swift_beginAccess();
  if (!*(_QWORD *)(v4 + 224))
  {
    v57 = (unsigned __int8 *)ClientCommand.EncodingOptions.rfc3501.unsafeMutableAddressor();
    if (v57[2])
      v58 = 0x10000;
    else
      v58 = 0;
    if (v57[1])
      v59 = 256;
    else
      v59 = 0;
    v60 = ClientCommandEncoder.idle(tag:)(a1 & 0xFFFFFFFF000000FFLL, v59 | *v57 | v58, (unint64_t)&v13[*(int *)(v66 + 20)]);
    *v13 = a1;
    *((_DWORD *)v13 + 1) = v67;
    MEMORY[0x1E0C80A78](v60);
    *(&v63 - 2) = (uint64_t)v13;
    v61 = sub_1A5898070((void (*)(uint64_t))sub_1A58C99E8);
    sub_1A55034FC((uint64_t)v13, type metadata accessor for ConnectionCommand);
    swift_endAccess();
    return v61;
  }
  sub_1A58991CC();
  v40 = (void *)swift_allocError();
  swift_willThrow();
  swift_endAccess();
LABEL_19:
  if (qword_1EE798290 != -1)
    swift_once();
  v43 = sub_1A594A764();
  __swift_project_value_buffer_0(v43, (uint64_t)qword_1EE795D58);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v44 = v40;
  v45 = v40;
  v46 = sub_1A594A74C();
  v47 = sub_1A594C018();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = swift_slowAlloc();
    v49 = (_QWORD *)swift_slowAlloc();
    v69 = swift_slowAlloc();
    v70[0] = v69;
    *(_DWORD *)v48 = 68158466;
    LODWORD(v71) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v48 + 8) = 256;
    LOBYTE(v71) = sub_1A58C2174();
    sub_1A594C3CC();
    *(_WORD *)(v48 + 11) = 2082;
    v50 = sub_1A58C2174();
    v51 = ConnectionID.debugDescription.getter(HIDWORD(v50));
    v71 = sub_1A589167C(v51, v52, v70);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 21) = 2112;
    v53 = sub_1A5949D98();
    v71 = v53;
    sub_1A594C3CC();
    *v49 = v53;

    _os_log_impl(&dword_1A4F90000, v46, v47, "[%.*hhx-%{public}s] Unable to append command to output buffer. Invalid state. %@", (uint8_t *)v48, 0x1Fu);
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v49, -1, -1);
    v54 = v69;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v54, -1, -1);
    MEMORY[0x1A85B1964](v48, -1, -1);
  }
  else
  {
    swift_release_n();

  }
  return swift_willThrow();
}

void sub_1A58C60C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  int v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  _BYTE v79[4];
  int v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  _OWORD v89[2];
  __int16 v90;
  _BYTE *v91;

  v3 = v2;
  v85 = a1;
  v86 = (int *)_s11CompressionO12OutgoingDataVMa();
  MEMORY[0x1E0C80A78](v86);
  v6 = &v79[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v79[-v8];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v79[-v11];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v79[-v14];
  swift_beginAccess();
  v16 = *(_OWORD *)(v2 + 224);
  v89[0] = *(_OWORD *)(v2 + 208);
  v89[1] = v16;
  v90 = *(_WORD *)(v2 + 240);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v17 = sub_1A58978F8();
  sub_1A54F81BC((uint64_t)v89);
  v18 = *(_QWORD *)(v2 + 248);
  v19 = *(_QWORD *)(v3 + 256);
  swift_retain();
  sub_1A58C9AD4(v18);
  v20 = v87;
  sub_1A58CC10C(v18, v19, v3, a2);
  sub_1A58C9B00(v18);
  if (!v20)
  {
    v82 = v15;
    v83 = v12;
    v87 = 0;
    v84 = (uint64_t)v9;
    sub_1A594AE60();
    sub_1A58CA11C((unint64_t *)&qword_1EE798F38, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF648], MEMORY[0x1E0DEF670]);
    sub_1A594BD60();
    sub_1A594BDB4();
    if (v91 != (_BYTE *)v88)
    {
      v21 = a2 + v86[7];
      if ((*(_BYTE *)(v21 + 8) & 1) == 0)
      {
        v81 = *(_QWORD *)v21;
        v22 = a2 + v86[8];
        if (*(_QWORD *)(a2 + v86[5]) == v17)
        {
          if ((*(_BYTE *)(v22 + 8) & 1) != 0)
          {
            if (qword_1EE798290 != -1)
              swift_once();
            v23 = sub_1A594A764();
            __swift_project_value_buffer_0(v23, (uint64_t)qword_1EE795D58);
            swift_retain_n();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            v24 = (uint64_t)v82;
            sub_1A55034B8(a2, (uint64_t)v82, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);
            v25 = sub_1A594A74C();
            v26 = sub_1A594C00C();
            v27 = v26;
            if (os_log_type_enabled(v25, v26))
            {
              v28 = swift_slowAlloc();
              v84 = swift_slowAlloc();
              v91 = (_BYTE *)v84;
              *(_DWORD *)v28 = 68158978;
              LODWORD(v88) = 2;
              sub_1A594C3CC();
              *(_WORD *)(v28 + 8) = 256;
              LODWORD(v83) = v27;
              LOBYTE(v88) = sub_1A58C2174();
              sub_1A594C3CC();
              *(_WORD *)(v28 + 11) = 2082;
              v29 = sub_1A58C2174();
              v30 = ConnectionID.debugDescription.getter(HIDWORD(v29));
              v88 = sub_1A589167C(v30, v31, (uint64_t *)&v91);
              sub_1A594C3CC();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v28 + 21) = 2048;
              v32 = *(_QWORD *)(v24 + v86[5]);
              sub_1A55034FC(v24, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);
              v88 = v32;
              sub_1A594C3CC();
              *(_WORD *)(v28 + 31) = 2048;
              v88 = v17;
              sub_1A594C3CC();
              *(_WORD *)(v28 + 41) = 2082;
              v33 = Tag.debugDescription.getter(v81 & 0xFFFFFFFF000000FFLL);
              v88 = sub_1A589167C(v33, v34, (uint64_t *)&v91);
              sub_1A594C3CC();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1A4F90000, v25, (os_log_type_t)v83, "[%.*hhx-%{public}s] Flushing %{iec-bytes}ld (of total %{iec-bytes}ld) from output buffer to network (tag %{public}s).", (uint8_t *)v28, 0x33u);
              v35 = v84;
              swift_arrayDestroy();
              MEMORY[0x1A85B1964](v35, -1, -1);
              MEMORY[0x1A85B1964](v28, -1, -1);

              return;
            }
            sub_1A55034FC(v24, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);

            goto LABEL_27;
          }
          v84 = *(_QWORD *)v22;
          if (qword_1EE798290 != -1)
            swift_once();
          v49 = sub_1A594A764();
          __swift_project_value_buffer_0(v49, (uint64_t)qword_1EE795D58);
          swift_retain_n();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          v37 = (uint64_t)v83;
          sub_1A55034B8(a2, (uint64_t)v83, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);
          v38 = sub_1A594A74C();
          v50 = sub_1A594C00C();
          v51 = v50;
          if (os_log_type_enabled(v38, v50))
          {
            v52 = swift_slowAlloc();
            v82 = (_BYTE *)swift_slowAlloc();
            v91 = v82;
            *(_DWORD *)v52 = 68159234;
            LODWORD(v88) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v52 + 8) = 256;
            v80 = v51;
            LOBYTE(v88) = sub_1A58C2174();
            sub_1A594C3CC();
            *(_WORD *)(v52 + 11) = 2082;
            v53 = sub_1A58C2174();
            v54 = ConnectionID.debugDescription.getter(HIDWORD(v53));
            v88 = sub_1A589167C(v54, v55, (uint64_t *)&v91);
            sub_1A594C3CC();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v52 + 21) = 2048;
            v56 = *(_QWORD *)(v37 + v86[5]);
            sub_1A55034FC(v37, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);
            v88 = v56;
            sub_1A594C3CC();
            *(_WORD *)(v52 + 31) = 2048;
            v88 = v17;
            sub_1A594C3CC();
            *(_WORD *)(v52 + 41) = 2082;
            v57 = Tag.debugDescription.getter(v81 & 0xFFFFFFFF000000FFLL);
            v88 = sub_1A589167C(v57, v58, (uint64_t *)&v91);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            *(_WORD *)(v52 + 51) = 2082;
            v59 = Tag.debugDescription.getter(v84 & 0xFFFFFFFF000000FFLL);
            v88 = sub_1A589167C(v59, v60, (uint64_t *)&v91);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1A4F90000, v38, (os_log_type_t)v80, "[%.*hhx-%{public}s] Flushing %{iec-bytes}ld (of total %{iec-bytes}ld) from output buffer to network (tags %{public}s - %{public}s).", (uint8_t *)v52, 0x3Du);
            v61 = (uint64_t)v82;
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v61, -1, -1);
            v48 = v52;
            goto LABEL_19;
          }
        }
        else
        {
          if ((*(_BYTE *)(v22 + 8) & 1) == 0)
          {
            v84 = *(_QWORD *)v22;
            v62 = v86;
            if (qword_1EE798290 != -1)
              swift_once();
            v63 = sub_1A594A764();
            __swift_project_value_buffer_0(v63, (uint64_t)qword_1EE795D58);
            swift_retain_n();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            v64 = (uint64_t)v6;
            sub_1A55034B8(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);
            v65 = sub_1A594A74C();
            v66 = sub_1A594C00C();
            v67 = v66;
            if (os_log_type_enabled(v65, v66))
            {
              v68 = swift_slowAlloc();
              LODWORD(v82) = v67;
              v69 = v68;
              v83 = (_BYTE *)swift_slowAlloc();
              v91 = v83;
              *(_DWORD *)v69 = 68158978;
              LODWORD(v88) = 2;
              sub_1A594C3CC();
              *(_WORD *)(v69 + 8) = 256;
              LOBYTE(v88) = sub_1A58C2174();
              sub_1A594C3CC();
              *(_WORD *)(v69 + 11) = 2082;
              v70 = sub_1A58C2174();
              v71 = ConnectionID.debugDescription.getter(HIDWORD(v70));
              v88 = sub_1A589167C(v71, v72, (uint64_t *)&v91);
              sub_1A594C3CC();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v69 + 21) = 2048;
              v73 = *(_QWORD *)(v64 + v62[5]);
              sub_1A55034FC(v64, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);
              v88 = v73;
              sub_1A594C3CC();
              *(_WORD *)(v69 + 31) = 2082;
              v74 = Tag.debugDescription.getter(v81 & 0xFFFFFFFF000000FFLL);
              v88 = sub_1A589167C(v74, v75, (uint64_t *)&v91);
              sub_1A594C3CC();
              swift_bridgeObjectRelease();
              *(_WORD *)(v69 + 41) = 2082;
              v76 = Tag.debugDescription.getter(v84 & 0xFFFFFFFF000000FFLL);
              v88 = sub_1A589167C(v76, v77, (uint64_t *)&v91);
              sub_1A594C3CC();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1A4F90000, v65, (os_log_type_t)v82, "[%.*hhx-%{public}s] Flushing %{iec-bytes}ld from output buffer to network (tags %{public}s - %{public}s).", (uint8_t *)v69, 0x33u);
              v78 = (uint64_t)v83;
              swift_arrayDestroy();
              MEMORY[0x1A85B1964](v78, -1, -1);
              MEMORY[0x1A85B1964](v69, -1, -1);

              return;
            }
            sub_1A55034FC(v64, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);

            goto LABEL_27;
          }
          if (qword_1EE798290 != -1)
            swift_once();
          v36 = sub_1A594A764();
          __swift_project_value_buffer_0(v36, (uint64_t)qword_1EE795D58);
          swift_retain_n();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          v37 = v84;
          sub_1A55034B8(a2, v84, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);
          v38 = sub_1A594A74C();
          v39 = sub_1A594C00C();
          if (os_log_type_enabled(v38, v39))
          {
            v40 = swift_slowAlloc();
            v41 = swift_slowAlloc();
            v91 = (_BYTE *)v41;
            *(_DWORD *)v40 = 68158722;
            LODWORD(v88) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v40 + 8) = 256;
            LOBYTE(v88) = sub_1A58C2174();
            sub_1A594C3CC();
            *(_WORD *)(v40 + 11) = 2082;
            v42 = sub_1A58C2174();
            v43 = ConnectionID.debugDescription.getter(HIDWORD(v42));
            v88 = sub_1A589167C(v43, v44, (uint64_t *)&v91);
            sub_1A594C3CC();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v40 + 21) = 2048;
            v45 = *(_QWORD *)(v37 + v86[5]);
            sub_1A55034FC(v37, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);
            v88 = v45;
            sub_1A594C3CC();
            *(_WORD *)(v40 + 31) = 2082;
            v46 = Tag.debugDescription.getter(v81 & 0xFFFFFFFF000000FFLL);
            v88 = sub_1A589167C(v46, v47, (uint64_t *)&v91);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1A4F90000, v38, v39, "[%.*hhx-%{public}s] Flushing %{iec-bytes}ld from output buffer to network (tag %{public}s).", (uint8_t *)v40, 0x29u);
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v41, -1, -1);
            v48 = v40;
LABEL_19:
            MEMORY[0x1A85B1964](v48, -1, -1);

            return;
          }
        }
        sub_1A55034FC(v37, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);

LABEL_27:
        swift_release_n();
      }
    }
  }
}

uint64_t sub_1A58C6D18@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, unint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char v33;
  unint64_t v34;
  char *v35;
  uint64_t result;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v41 = a5;
  v46 = *MEMORY[0x1E0C80C00];
  v9 = sub_1A594AE60();
  v40 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - v14;
  if ((a3 & 1) != 0)
  {
    sub_1A54E42B4(a1, a2);
    v42 = sub_1A5949F00();
    v43 = v28;
    v29 = sub_1A58C8218((uint64_t)&unk_1E4E74838);
    v31 = v30;
    sub_1A58C7DC0(v29, v30);
    sub_1A54E46E8(v29, v31);
    __asm { BR              X10 }
  }
  v39 = a4;
  v16 = HIBYTE(a2) & 0xF;
  v42 = a1;
  v43 = a2;
  if ((a2 & 0x2000000000000000) == 0)
    v16 = a1 & 0xFFFFFFFFFFFFLL;
  v44 = 0;
  v45 = v16;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v17 = sub_1A594B634();
  if (v18)
  {
    v19 = v17;
    v20 = v18;
    v21 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      if (v19 == 2573 && v20 == 0xE200000000000000 || (sub_1A594CD38() & 1) != 0 || (sub_1A594B1B4() & 1) == 0)
        goto LABEL_6;
      v23 = sub_1A57A76A0(v19, v20);
      if ((v23 & 0x100000000) != 0)
      {
        __break(1u);
LABEL_26:
        __break(1u);
      }
      if ((v23 & 0xFFFFFF80) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
      }
      else
      {
        v24 = sub_1A57A76A0(v19, v20);
        if ((v24 & 0x100000000) != 0)
          goto LABEL_26;
        v25 = v24;
        swift_bridgeObjectRelease();
        if ((v25 & 0xFFFFFF00) != 0)
        {
          __break(1u);
          JUMPOUT(0x1A58C7274);
        }
        if (v25 - 127 >= 0xFFFFFFA1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v21 = sub_1A58D3CAC(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
          v27 = *((_QWORD *)v21 + 2);
          v26 = *((_QWORD *)v21 + 3);
          if (v27 >= v26 >> 1)
            v21 = sub_1A58D3CAC((char *)(v26 > 1), v27 + 1, 1, v21);
          *((_QWORD *)v21 + 2) = v27 + 1;
          v21[v27 + 32] = v25;
        }
      }
      v19 = sub_1A594B634();
      v20 = v22;
    }
    while (v22);
  }
  swift_bridgeObjectRelease();
  sub_1A594AE0C();
  sub_1A585C500(a1, a2, 0);
  swift_bridgeObjectRelease();
  v32 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  v32(v15, v12, v9);
  v33 = v39;
  v34 = HIDWORD(v39);
  v35 = v41;
  v32(v41, v15, v9);
  result = type metadata accessor for HandshakeReply.Encoded();
  v37 = &v35[*(int *)(result + 20)];
  *v37 = v33;
  *((_DWORD *)v37 + 1) = v34;
  return result;
}

uint64_t sub_1A58C72A0(uint64_t (*a1)(void))
{
  uint64_t v1;

  v1 = a1();
  return Tag.debugDescription.getter(v1 & 0xFFFFFFFF000000FFLL);
}

void sub_1A58C72C4(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_1A594C3CC();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_1A58C7374(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1A58C7398@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1A58C73C0@<X0>(uint64_t __src@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!__src)
    goto LABEL_7;
  if (!a2)
  {
    __src = 0;
LABEL_7:
    v6 = 0xC000000000000000;
    goto LABEL_10;
  }
  if (a2 <= 14)
  {
    __src = sub_1A58C8060((_BYTE *)__src, (_BYTE *)(__src + a2));
    v6 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else
  {
    sub_1A5949C18();
    swift_allocObject();
    v5 = sub_1A5949BDC();
    if ((unint64_t)a2 >= 0x7FFFFFFF)
    {
      sub_1A5949F3C();
      __src = swift_allocObject();
      *(_QWORD *)(__src + 16) = 0;
      *(_QWORD *)(__src + 24) = a2;
      v6 = v5 | 0x8000000000000000;
    }
    else
    {
      __src = a2 << 32;
      v6 = v5 | 0x4000000000000000;
    }
  }
LABEL_10:
  *a3 = __src;
  a3[1] = v6;
  return __src;
}

uint64_t sub_1A58C7488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1A594AE60();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AADD8) + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    sub_1A58CA11C((unint64_t *)&unk_1EE798F10, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF648], MEMORY[0x1E0DEF660]);
    result = sub_1A594B73C();
    *(_QWORD *)(a3 + v10) = result;
  }
  else
  {
    v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AADD8) + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    sub_1A58CA11C((unint64_t *)&unk_1EE798F10, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF648], MEMORY[0x1E0DEF660]);
    result = sub_1A594B73C();
    *(_QWORD *)(a3 + v12) = result;
  }
  return result;
}

void sub_1A58C75E0()
{
  __asm { BR              X11 }
}

_QWORD *sub_1A58C7640@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

void sub_1A58C78D0()
{
  __asm { BR              X12 }
}

uint64_t sub_1A58C7930@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *, char *);
  _QWORD *v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;

  v6 = v1;
  LOWORD(v7) = a1;
  BYTE2(v7) = BYTE2(a1);
  HIBYTE(v7) = BYTE3(a1);
  v8 = BYTE4(a1);
  v9 = BYTE5(a1);
  v10 = BYTE6(a1);
  result = v2(&v6, (char *)&v6 + BYTE6(a1));
  v5 = v7 | ((unint64_t)v8 << 32) | ((unint64_t)v9 << 40) | ((unint64_t)v10 << 48);
  *v3 = v6;
  v3[1] = v5;
  return result;
}

_BYTE *sub_1A58C7B04@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_1A58C8060(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_1A58C8120((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_1A58C8198((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_1A58C7B78(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

uint64_t sub_1A58C7BDC(uint64_t (*a1)(uint64_t, uint64_t))
{
  int *v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = sub_1A5949F24();
  v4 = *v1;
  v5 = v1[1];
  if ((int)v5 < (int)v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = sub_1A5949BE8();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v6 = result;
  result = sub_1A5949C0C();
  v7 = v4 - result;
  if (__OFSUB__(v4, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = v5 - v4;
  v9 = sub_1A5949C00();
  if (v9 >= v8)
    v10 = v8;
  else
    v10 = v9;
  return a1(v6 + v7, v6 + v7 + v10);
}

char *sub_1A58C7C84(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_1A5949BE8();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_1A5949C0C();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_1A5949C00();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_1A58C7D30(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1A5949BE8();
  if (!result || (result = sub_1A5949C0C(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1A5949C00();
      return sub_1A5949F60();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1A58C7DC0(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[6];

  v3[5] = *MEMORY[0x1E0C80C00];
  v3[3] = MEMORY[0x1E0CB0338];
  v3[4] = MEMORY[0x1E0CB0318];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_1A58C7E24
     + *((int *)qword_1A58C7FC8 + (__swift_project_boxed_opaque_existential_1_0(v3, MEMORY[0x1E0CB0338])[1] >> 62));
  __asm { BR              X10 }
}

uint64_t sub_1A58C7E34()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_1A54E42B4(v1, v0);
  sub_1A5949F60();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
}

uint64_t sub_1A58C7FD8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  char v3;
  uint64_t v4;

  if (result)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A594C72C();
    if ((v3 & 1) == 0)
    {
      v4 = result;
      result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A58C8060(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_1A58C8120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1A5949C18();
  swift_allocObject();
  result = sub_1A5949BDC();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1A5949F3C();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1A58C8198(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1A5949C18();
  swift_allocObject();
  result = sub_1A5949BDC();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1A58C8218(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  unint64_t v10;

  v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796038);
  v10 = sub_1A58C9A88();
  v8[0] = a1;
  v2 = __swift_project_boxed_opaque_existential_1_0(v8, v9);
  v3 = (_BYTE *)(*v2 + 32);
  v4 = &v3[*(_QWORD *)(*v2 + 16)];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A58C7B04(v3, v4, &v7);
  v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

_BYTE *sub_1A58C82B0(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_1A58C8060(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_1A58C8120((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_1A58C8198((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_1A58C8314(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_1A5949C18();
      swift_allocObject();
      sub_1A5949BF4();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1A5949F3C();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_1A58C83B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7[4];

  if (qword_1EE798238 != -1)
    swift_once();
  sub_1A594ABC0();
  swift_allocObject();
  swift_retain();
  v4 = sub_1A594ABA8();
  v7[0] = a1;
  sub_1A594ABD8();
  v7[3] = type metadata accessor for OutboundContent(0);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
  sub_1A55034B8(a2, (uint64_t)boxed_opaque_existential_1, type metadata accessor for OutboundContent);
  sub_1A594ABD8();
  return v4;
}

void *sub_1A58C84D0@<X0>(__int128 *a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4;
  int v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  const void *v20;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  os_log_type_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_log_type_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[23];
  uint64_t v54;
  _BYTE v55[184];
  uint64_t v56;

  v4 = (uint64_t)a1;
  v56 = *MEMORY[0x1E0C80C00];
  sub_1A58C9BDC(a1, (uint64_t)v55);
  v6 = sub_1A57BC318((uint64_t)v55);
  if (!v6)
  {
    v20 = (const void *)sub_1A58C9DF0((uint64_t)v55);
    sub_1A57BC8E8(v20, v53);
    return sub_1A57BC8E8(v53, a3);
  }
  v7 = HIDWORD(a2);
  if (v6 != 1)
  {
    v22 = sub_1A58C9DF0((uint64_t)v55);
    v9 = *(id *)v22;
    v23 = *(unsigned int *)(v22 + 16);
    v49 = *(_DWORD *)(v22 + 20);
    v24 = *(id *)v22;
    v25 = qword_1EE798290;
    swift_retain();
    if (v25 != -1)
      swift_once();
    v26 = sub_1A594A764();
    __swift_project_value_buffer_0(v26, (uint64_t)qword_1EE795D58);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_retain();
    v27 = v9;
    swift_retain();
    v28 = v9;
    swift_retain();
    v14 = sub_1A594A74C();
    v29 = sub_1A594C024();
    if (!os_log_type_enabled(v14, v29))
    {

      goto LABEL_19;
    }
    v48 = v29;
    v51 = v4;
    v30 = swift_slowAlloc();
    v31 = (_QWORD *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    v54 = v47;
    *(_DWORD *)v30 = 68158979;
    v4 = v23;
    sub_1A594C3CC();
    *(_WORD *)(v30 + 8) = 256;
    sub_1A594C3CC();
    *(_WORD *)(v30 + 11) = 2082;
    v32 = ConnectionID.debugDescription.getter(HIDWORD(a2));
    sub_1A589167C(v32, v33, &v54);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 21) = 2112;
    v7 = v30 + 23;
    a2 = sub_1A5949D98();
    v53[0] = a2;
    sub_1A594C3CC();
    *v31 = a2;

    *(_WORD *)(v30 + 31) = 1040;
    if (v49 < v23)
    {
      __break(1u);
    }
    else if (((v49 - (_DWORD)v23) & 0x80000000) == 0)
    {
      LODWORD(v53[0]) = v49 - v23;
      sub_1A594C3CC();
      *(_WORD *)(v30 + 37) = 2101;
      swift_beginAccess();
      sub_1A594C3CC();
      swift_release_n();
      _os_log_impl(&dword_1A4F90000, v14, v48, "[%.*hhx-%{public}s]: Failed to parse: %@. Buffer: %{sensitive}.*P", (uint8_t *)v30, 0x2Fu);
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v31, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v47, -1, -1);
      v19 = v30;
      goto LABEL_17;
    }
    __break(1u);
    goto LABEL_28;
  }
  v8 = sub_1A58C9DF0((uint64_t)v55);
  v9 = *(id *)v8;
  if (*(_QWORD *)(v8 + 8))
  {
    v10 = *(_QWORD *)(v8 + 16);
    v11 = v9;
    v12 = qword_1EE798290;
    swift_retain();
    if (v12 != -1)
      swift_once();
    v13 = sub_1A594A764();
    __swift_project_value_buffer_0(v13, (uint64_t)qword_1EE795D58);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_retain_n();
    v14 = sub_1A594A74C();
    v15 = sub_1A594C024();
    if (os_log_type_enabled(v14, v15))
    {
      v51 = v4;
      v16 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v54 = v46;
      *(_DWORD *)v16 = 68158723;
      sub_1A594C3CC();
      *(_WORD *)(v16 + 8) = 256;
      sub_1A594C3CC();
      *(_WORD *)(v16 + 11) = 2082;
      v17 = ConnectionID.debugDescription.getter(HIDWORD(a2));
      v53[0] = sub_1A589167C(v17, v18, &v54);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 21) = 1040;
      if (HIDWORD(v10) < v10)
      {
        __break(1u);
      }
      else if (((HIDWORD(v10) - (_DWORD)v10) & 0x80000000) == 0)
      {
        LODWORD(v53[0]) = HIDWORD(v10) - v10;
        sub_1A594C3CC();
        *(_WORD *)(v16 + 27) = 2101;
        swift_beginAccess();
        sub_1A594C3CC();
        swift_release_n();
        _os_log_impl(&dword_1A4F90000, v14, v15, "[%.*hhx-%{public}s]: Framing error. Buffer: %{sensitive}.*P", (uint8_t *)v16, 0x25u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v46, -1, -1);
        v19 = v16;
LABEL_17:
        MEMORY[0x1A85B1964](v19, -1, -1);

        v4 = v51;
LABEL_20:
        swift_willThrow();
        sub_1A57BC84C(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A58C9CEC);
        return (void *)swift_release();
      }
      __break(1u);
    }
LABEL_19:

    swift_release_n();
    goto LABEL_20;
  }
  v34 = v9;
  if (qword_1EE798290 != -1)
LABEL_28:
    swift_once();
  v35 = sub_1A594A764();
  __swift_project_value_buffer_0(v35, (uint64_t)qword_1EE795D58);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v36 = v9;
  v37 = v9;
  v38 = sub_1A594A74C();
  v39 = sub_1A594C024();
  if (os_log_type_enabled(v38, v39))
  {
    v52 = v4;
    v40 = swift_slowAlloc();
    v41 = (_QWORD *)swift_slowAlloc();
    v50 = swift_slowAlloc();
    v53[0] = v50;
    *(_DWORD *)v40 = 68158466;
    LODWORD(v54) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v40 + 8) = 256;
    LOBYTE(v54) = a2;
    sub_1A594C3CC();
    *(_WORD *)(v40 + 11) = 2082;
    v42 = ConnectionID.debugDescription.getter(v7);
    v54 = sub_1A589167C(v42, v43, v53);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 21) = 2112;
    v44 = sub_1A5949D98();
    v54 = v44;
    sub_1A594C3CC();
    *v41 = v44;

    _os_log_impl(&dword_1A4F90000, v38, v39, "[%.*hhx-%{public}s]: Framing error: %@", (uint8_t *)v40, 0x1Fu);
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v41, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v50, -1, -1);
    v45 = v40;
    v4 = v52;
    MEMORY[0x1A85B1964](v45, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  return (void *)sub_1A57BC84C(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A58C9CEC);
}

uint64_t sub_1A58C8DC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t result;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE *v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  os_signpost_id_t v37;
  void (*v38)(_BYTE *, uint64_t);
  _BYTE v39[12];
  int v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v41 = _s11CompressionO12OutgoingDataVMa();
  MEMORY[0x1E0C80A78](v41);
  v44 = &v39[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v3);
  v42 = &v39[-v4];
  v5 = sub_1A594A65C();
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  MEMORY[0x1E0C80A78](v5);
  v46 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798838);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1A594A62C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v43 = &v39[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v45 = &v39[-v14];
  v15 = sub_1A594AE60();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = &v39[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A58CA11C((unint64_t *)&qword_1EE798F38, 255, v19, MEMORY[0x1E0DEF670]);
  sub_1A594BD60();
  result = sub_1A594BDB4();
  if (v50 != v49)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
    sub_1A594AC2C();
    (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v18, v15);
    sub_1A58C4A70((uint64_t)v9);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      return sub_1A5510284((uint64_t)v9, &qword_1EE798838);
    }
    else
    {
      v21 = v45;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v45, v9, v10);
      v22 = tracingSignposter.unsafeMutableAddressor();
      v24 = v46;
      v23 = v47;
      v25 = v48;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v47 + 16))(v46, v22, v48);
      v26 = v42;
      sub_1A55034B8(a1, (uint64_t)v42, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);
      v27 = a1;
      v28 = v44;
      sub_1A55034B8(v27, (uint64_t)v44, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);
      v29 = sub_1A594A650();
      v40 = sub_1A594C150();
      if ((sub_1A594C318() & 1) != 0)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v43, v21, v10);
        v30 = (uint64_t)v26;
        v31 = (uint64_t)v28;
        v32 = swift_slowAlloc();
        *(_DWORD *)v32 = 134218240;
        v33 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        sub_1A55034FC(v30, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);
        v50 = v33;
        sub_1A594C3CC();
        *(_WORD *)(v32 + 12) = 2048;
        v34 = v21;
        v35 = *(_QWORD *)(v31 + *(int *)(v41 + 20));
        sub_1A55034FC(v31, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);
        v50 = v35;
        sub_1A594C3CC();
        v36 = v43;
        v37 = sub_1A594A620();
        _os_signpost_emit_with_name_impl(&dword_1A4F90000, v29, (os_signpost_type_t)v40, v37, "Connection.didSendData", "%ld,%ld", (uint8_t *)v32, 0x16u);
        MEMORY[0x1A85B1964](v32, -1, -1);

        (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v46, v48);
        v38 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
        v38(v34, v10);
        return ((uint64_t (*)(_BYTE *, uint64_t))v38)(v36, v10);
      }
      else
      {
        sub_1A55034FC((uint64_t)v28, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);
        sub_1A55034FC((uint64_t)v26, (uint64_t (*)(_QWORD))_s11CompressionO12OutgoingDataVMa);

        (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v24, v25);
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v21, v10);
      }
    }
  }
  return result;
}

uint64_t sub_1A58C922C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10[3];

  if (qword_1EE798290 != -1)
    swift_once();
  v1 = sub_1A594A764();
  __swift_project_value_buffer_0(v1, (uint64_t)qword_1EE795D58);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v2 = sub_1A594A74C();
  v3 = sub_1A594C030();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10[0] = v5;
    *(_DWORD *)v4 = 68158210;
    sub_1A594C3CC();
    *(_WORD *)(v4 + 8) = 256;
    sub_1A58C2174();
    sub_1A594C3CC();
    *(_WORD *)(v4 + 11) = 2082;
    v6 = sub_1A58C2174();
    v7 = ConnectionID.debugDescription.getter(HIDWORD(v6));
    sub_1A589167C(v7, v8, v10);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v2, v3, "[%.*hhx-%{public}s] Enabling Openwave Messaging workaround.", (uint8_t *)v4, 0x15u);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v5, -1, -1);
    MEMORY[0x1A85B1964](v4, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  result = swift_beginAccess();
  if (*(_BYTE *)(v0 + 241) == 1)
  {
    *(_QWORD *)(v0 + 232) = 0;
    *(_WORD *)(v0 + 240) = 1;
  }
  return result;
}

void sub_1A58C9458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
  MEMORY[0x1E0C80A78](v0);
  v1 = type metadata accessor for OutboundContent(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for Framer.OutboundMessage();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1A58C4B50((uint64_t)v4);
  v5 = (char *)&loc_1A58C9568 + 4 * byte_1A59DF398[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t type metadata accessor for Framer.OutboundMessage()
{
  uint64_t result;

  result = qword_1EE798260;
  if (!qword_1EE798260)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A58C99E8(unint64_t *a1)
{
  uint64_t v1;

  return sub_1A589815C(a1, *(unsigned __int8 **)(v1 + 16));
}

unint64_t sub_1A58C99F0()
{
  unint64_t result;

  result = qword_1EE7AADB0;
  if (!qword_1EE7AADB0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DE604, &_s19CommandOutputBufferV40CanNotAppendHandshakeUnlessBufferIsEmptyVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AADB0);
  }
  return result;
}

uint64_t sub_1A58C9A34(unint64_t *a1)
{
  uint64_t v1;

  return sub_1A5898450(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1A58C9A3C()
{
  unint64_t result;

  result = qword_1EE7AADB8;
  if (!qword_1EE7AADB8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DE5C4, &_s19CommandOutputBufferV33ServerDoesNotExpectHandshakeReplyVN);
    atomic_store(result, (unint64_t *)&qword_1EE7AADB8);
  }
  return result;
}

uint64_t sub_1A58C9A80(unint64_t *a1)
{
  uint64_t v1;

  return sub_1A5897BD4(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1A58C9A88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE799DB0;
  if (!qword_1EE799DB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE796038);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CB1B08], v1);
    atomic_store(result, (unint64_t *)&qword_1EE799DB0);
  }
  return result;
}

uint64_t sub_1A58C9AD4(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1A58C9B00(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A58C9B2C(uint64_t a1)
{
  sub_1A5685DEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_1A58C9B98()
{
  unint64_t result;

  result = qword_1EE7AADC8;
  if (!qword_1EE7AADC8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DF530, &type metadata for Framer.OutboundMessage.NoContent);
    atomic_store(result, (unint64_t *)&qword_1EE7AADC8);
  }
  return result;
}

uint64_t sub_1A58C9BDC(__int128 *a1, uint64_t a2)
{
  __swift_memcpy179_8_0(a2, a1);
  return a2;
}

void *sub_1A58C9C18(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23)
{
  int v23;
  id v24;

  v23 = (a23 >> 21) & 3;
  if (v23 == 2 || v23 == 1)
  {
    v24 = result;
    return (void *)swift_retain();
  }
  else if (!v23)
  {
    return (void *)sub_1A56EFB98((uint64_t)result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                     a20,
                     a21,
                     a22,
                     a23,
                     (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A7EE4,
                     (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A69C4);
  }
  return result;
}

void *sub_1A58C9CEC(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23)
{
  int v23;

  v23 = (a23 >> 21) & 3;
  if (v23 == 2 || v23 == 1)
  {

    return (void *)swift_release();
  }
  else if (!v23)
  {
    return (void *)sub_1A56EFB98((uint64_t)result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                     a20,
                     a21,
                     a22,
                     a23,
                     (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FB8,
                     (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A58A6FE4);
  }
  return result;
}

uint64_t sub_1A58C9DC0(uint64_t a1)
{
  sub_1A58921EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return a1;
}

uint64_t sub_1A58C9DF0(uint64_t result)
{
  unsigned int v1;

  v1 = (*(unsigned __int16 *)(result + 176) | (*(unsigned __int8 *)(result + 178) << 16)) & 0xFF9FFFFF;
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176);
  *(_BYTE *)(result + 178) = BYTE2(v1);
  return result;
}

uint64_t sub_1A58C9E14(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A58C4060(a1, a2, a3 & 1, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1A58C9E20()
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _BYTE v6[24];
  uint64_t v7;

  if (qword_1EE798238 != -1)
    swift_once();
  if (!sub_1A594A944())
    goto LABEL_9;
  sub_1A594ABC0();
  if (!swift_dynamicCastClass())
  {
    swift_release();
LABEL_9:
    swift_release();
    return 1;
  }
  sub_1A594ABCC();
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE799500);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_release();
      swift_release();
      return v5;
    }
  }
  else
  {
    sub_1A5510284((uint64_t)v6, &qword_1EE79B530);
  }
  sub_1A594ABCC();
  if (!v7)
  {
    sub_1A5510284((uint64_t)v6, &qword_1EE79B530);
    if (qword_1EE798290 != -1)
      swift_once();
    v1 = sub_1A594A764();
    __swift_project_value_buffer_0(v1, (uint64_t)qword_1EE795D58);
    v2 = sub_1A594A74C();
    v3 = sub_1A594C024();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A4F90000, v2, v3, "Received invalid message.", v4, 2u);
      MEMORY[0x1A85B1964](v4, -1, -1);
    }

    swift_release();
    goto LABEL_9;
  }
  swift_release();
  swift_release();
  sub_1A5510284((uint64_t)v6, &qword_1EE79B530);
  return 0;
}

uint64_t sub_1A58CA068()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A594A62C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A58CA0C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A594A62C() - 8) + 80);
  return sub_1A58C3040(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1A58CA104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A58C7488(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1A58CA11C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1A85B1874](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A58CA15C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A594A62C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A58CA1D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(sub_1A594A62C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1A58C2910(a1, v1 + v4, *(uint64_t (**)(uint64_t))v5, *(_QWORD *)(v5 + 8));
}

_QWORD *sub_1A58CA228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_1A58C7B78((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1A58CA284, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_1A58CA284@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A58C7FD8(a1, a2);
}

uint64_t sub_1A58CA2A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A58CA2C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(_BOOL8);
  uint64_t v4;
  _BOOL8 v5;

  v3 = *(uint64_t (**)(_BOOL8))(v1 + 16);
  v4 = sub_1A594ACEC();
  v5 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4) == 1;
  return v3(v5);
}

uint64_t sub_1A58CA31C(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

ValueMetadata *type metadata accessor for Framer.OutboundMessage.NoContent()
{
  return &type metadata for Framer.OutboundMessage.NoContent;
}

uint64_t *sub_1A58CA33C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  unsigned int v36;
  char v37;
  unint64_t v38;
  unsigned int v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  char *__dst;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
      goto LABEL_32;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798318) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for OutboundContent(0);
      v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 1)
      {
        v16 = *(_QWORD *)v10;
        v17 = *((_QWORD *)v10 + 1);
        v18 = v10[16];
        sub_1A5862C1C(v16, v17, v18);
        *(_QWORD *)v9 = v16;
        *((_QWORD *)v9 + 1) = v17;
        v9[16] = v18;
LABEL_31:
        swift_storeEnumTagMultiPayload();
        goto LABEL_32;
      }
      if (!v12)
      {
        v13 = type metadata accessor for ClientCommand(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v14 = *((_QWORD *)v10 + 1);
            *(_QWORD *)v9 = *(_QWORD *)v10;
            *((_QWORD *)v9 + 1) = v14;
            *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
            *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
            *((_DWORD *)v9 + 8) = *((_DWORD *)v10 + 8);
            *(_DWORD *)(v9 + 35) = *(_DWORD *)(v10 + 35);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            swift_retain();
            goto LABEL_30;
          case 1u:
            v19 = *((_QWORD *)v10 + 1);
            *(_QWORD *)v9 = *(_QWORD *)v10;
            *((_QWORD *)v9 + 1) = v19;
            v20 = *((_QWORD *)v10 + 2);
            v21 = *((_QWORD *)v10 + 3);
            *((_QWORD *)v9 + 2) = v20;
            *((_QWORD *)v9 + 3) = v21;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_30;
          case 2u:
          case 8u:
            *(_QWORD *)v9 = *(_QWORD *)v10;
            *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
            *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_30;
          case 3u:
          case 4u:
          case 5u:
            *(_QWORD *)v9 = *(_QWORD *)v10;
            *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_30;
          case 6u:
            *(_QWORD *)v9 = *(_QWORD *)v10;
            *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
            *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
            *((_DWORD *)v9 + 6) = *((_DWORD *)v10 + 6);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_30;
          case 7u:
            *(_QWORD *)v9 = *(_QWORD *)v10;
            *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
            *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
            *((_DWORD *)v9 + 6) = *((_DWORD *)v10 + 6);
            *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_30;
          case 9u:
            *(_QWORD *)v9 = *(_QWORD *)v10;
            *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
            *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v22 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796830);
            v23 = *(int *)(v22 + 64);
            __dst = &v9[v23];
            v24 = &v10[v23];
            v25 = sub_1A594A0EC();
            v26 = *(_QWORD *)(v25 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
            {
              v27 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796488);
              memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
            }
            v45 = *(int *)(v22 + 80);
            v46 = (uint64_t *)&v9[v45];
            v47 = (uint64_t *)&v10[v45];
            v48 = *v47;
            v49 = v47[1];
            sub_1A54E42B4(*v47, v49);
            *v46 = v48;
            v46[1] = v49;
            goto LABEL_30;
          case 0xAu:
          case 0xCu:
            v28 = *(_QWORD *)v10;
            sub_1A589D3EC(v28);
            *(_QWORD *)v9 = v28;
            goto LABEL_30;
          case 0xBu:
          case 0xDu:
            v29 = *(_QWORD *)v10;
            sub_1A589D3EC(*(_QWORD *)v10);
            v30 = *((_QWORD *)v10 + 1);
            *(_QWORD *)v9 = v29;
            *((_QWORD *)v9 + 1) = v30;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_30;
          case 0xEu:
            v31 = *(_QWORD *)v10;
            v32 = *((_DWORD *)v10 + 2);
            v33 = v10[12];
            sub_1A54E4334(*(_QWORD *)v10, v32, v33);
            *(_QWORD *)v9 = v31;
            *((_DWORD *)v9 + 2) = v32;
            v9[12] = v33;
            v34 = *((_QWORD *)v10 + 3);
            *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
            *((_QWORD *)v9 + 3) = v34;
            v9[32] = v10[32];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_30;
          case 0xFu:
            v35 = *(_QWORD *)v10;
            v36 = *((_DWORD *)v10 + 2);
            v37 = v10[12];
            sub_1A54E4334(*(_QWORD *)v10, v36, v37);
            *(_QWORD *)v9 = v35;
            *((_DWORD *)v9 + 2) = v36;
            v9[12] = v37;
            *((_WORD *)v9 + 8) = *((_WORD *)v10 + 8);
            *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_30;
          case 0x10u:
          case 0x11u:
            v38 = *(_QWORD *)v10;
            v39 = *((_DWORD *)v10 + 2);
            v40 = v10[12];
            sub_1A54E4334(*(_QWORD *)v10, v39, v40);
            *(_QWORD *)v9 = v38;
            *((_DWORD *)v9 + 2) = v39;
            v9[12] = v40;
            *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
            *((_DWORD *)v9 + 6) = *((_DWORD *)v10 + 6);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_30;
          case 0x12u:
            v41 = *((_QWORD *)v10 + 1);
            *(_QWORD *)v9 = *(_QWORD *)v10;
            *((_QWORD *)v9 + 1) = v41;
            *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
            swift_retain();
            swift_retain();
            swift_retain();
            goto LABEL_30;
          case 0x13u:
            *(_DWORD *)v9 = *(_DWORD *)v10;
            v42 = *((_QWORD *)v10 + 2);
            *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
            *((_QWORD *)v9 + 2) = v42;
            v43 = *((_QWORD *)v10 + 4);
            *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
            *((_QWORD *)v9 + 4) = v43;
            v44 = *((_QWORD *)v10 + 6);
            *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
            *((_QWORD *)v9 + 6) = v44;
            *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_30:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        goto LABEL_31;
      }
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_32:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

unint64_t sub_1A58CAA00(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
    return swift_release();
  if (!(_DWORD)result)
  {
    v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798318) + 48);
    type metadata accessor for OutboundContent(0);
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 1)
    {
      return sub_1A585C500(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_BYTE *)(v3 + 16));
    }
    else if (!(_DWORD)result)
    {
      type metadata accessor for ClientCommand(0);
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          swift_bridgeObjectRelease();
          return swift_release();
        case 1:
          swift_bridgeObjectRelease();
          goto LABEL_24;
        case 2:
        case 6:
        case 8:
          swift_bridgeObjectRelease();
          goto LABEL_24;
        case 3:
        case 4:
        case 5:
          goto LABEL_24;
        case 7:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_24;
        case 9:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796830);
          v5 = v3 + *(int *)(v4 + 64);
          v6 = sub_1A594A0EC();
          v7 = *(_QWORD *)(v6 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
            (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
          return sub_1A54E46E8(*(_QWORD *)(v3 + *(int *)(v4 + 80)), *(_QWORD *)(v3 + *(int *)(v4 + 80) + 8));
        case 10:
        case 12:
          return sub_1A589D620(*(_QWORD *)v3);
        case 11:
        case 13:
          sub_1A589D620(*(_QWORD *)v3);
          goto LABEL_24;
        case 14:
        case 16:
        case 17:
          sub_1A54E3458(*(_QWORD *)v3, *(unsigned int *)(v3 + 8), *(_BYTE *)(v3 + 12));
          goto LABEL_24;
        case 15:
          sub_1A54E3458(*(_QWORD *)v3, *(unsigned int *)(v3 + 8), *(_BYTE *)(v3 + 12));
          goto LABEL_24;
        case 18:
          swift_release();
          swift_release();
          return swift_release();
        case 19:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_24:
          result = swift_bridgeObjectRelease();
          break;
        default:
          return result;
      }
    }
  }
  return result;
}

_QWORD *sub_1A58CAC44(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  char v35;
  unint64_t v36;
  unsigned int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  char *__dst;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
    goto LABEL_30;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798318) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for OutboundContent(0);
    v11 = swift_getEnumCaseMultiPayload();
    if (v11 == 1)
    {
      v14 = *(_QWORD *)v9;
      v15 = *((_QWORD *)v9 + 1);
      v16 = v9[16];
      sub_1A5862C1C(v14, v15, v16);
      *(_QWORD *)v8 = v14;
      *((_QWORD *)v8 + 1) = v15;
      v8[16] = v16;
LABEL_29:
      swift_storeEnumTagMultiPayload();
      goto LABEL_30;
    }
    if (!v11)
    {
      v12 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v13 = *((_QWORD *)v9 + 1);
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_QWORD *)v8 + 1) = v13;
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          *((_QWORD *)v8 + 3) = *((_QWORD *)v9 + 3);
          *((_DWORD *)v8 + 8) = *((_DWORD *)v9 + 8);
          *(_DWORD *)(v8 + 35) = *(_DWORD *)(v9 + 35);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          goto LABEL_28;
        case 1u:
          v17 = *((_QWORD *)v9 + 1);
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_QWORD *)v8 + 1) = v17;
          v18 = *((_QWORD *)v9 + 2);
          v19 = *((_QWORD *)v9 + 3);
          *((_QWORD *)v8 + 2) = v18;
          *((_QWORD *)v8 + 3) = v19;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_28;
        case 2u:
        case 8u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_28;
        case 3u:
        case 4u:
        case 5u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_28;
        case 6u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_28;
        case 7u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
          *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_28;
        case 9u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v20 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796830);
          v21 = *(int *)(v20 + 64);
          __dst = &v8[v21];
          v22 = &v9[v21];
          v23 = sub_1A594A0EC();
          v24 = *(_QWORD *)(v23 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
          {
            v25 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796488);
            memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
          }
          v43 = *(int *)(v20 + 80);
          v44 = (uint64_t *)&v8[v43];
          v45 = (uint64_t *)&v9[v43];
          v46 = *v45;
          v47 = v45[1];
          sub_1A54E42B4(*v45, v47);
          *v44 = v46;
          v44[1] = v47;
          goto LABEL_28;
        case 0xAu:
        case 0xCu:
          v26 = *(_QWORD *)v9;
          sub_1A589D3EC(v26);
          *(_QWORD *)v8 = v26;
          goto LABEL_28;
        case 0xBu:
        case 0xDu:
          v27 = *(_QWORD *)v9;
          sub_1A589D3EC(*(_QWORD *)v9);
          v28 = *((_QWORD *)v9 + 1);
          *(_QWORD *)v8 = v27;
          *((_QWORD *)v8 + 1) = v28;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_28;
        case 0xEu:
          v29 = *(_QWORD *)v9;
          v30 = *((_DWORD *)v9 + 2);
          v31 = v9[12];
          sub_1A54E4334(*(_QWORD *)v9, v30, v31);
          *(_QWORD *)v8 = v29;
          *((_DWORD *)v8 + 2) = v30;
          v8[12] = v31;
          v32 = *((_QWORD *)v9 + 3);
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          *((_QWORD *)v8 + 3) = v32;
          v8[32] = v9[32];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_28;
        case 0xFu:
          v33 = *(_QWORD *)v9;
          v34 = *((_DWORD *)v9 + 2);
          v35 = v9[12];
          sub_1A54E4334(*(_QWORD *)v9, v34, v35);
          *(_QWORD *)v8 = v33;
          *((_DWORD *)v8 + 2) = v34;
          v8[12] = v35;
          *((_WORD *)v8 + 8) = *((_WORD *)v9 + 8);
          *((_QWORD *)v8 + 3) = *((_QWORD *)v9 + 3);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_28;
        case 0x10u:
        case 0x11u:
          v36 = *(_QWORD *)v9;
          v37 = *((_DWORD *)v9 + 2);
          v38 = v9[12];
          sub_1A54E4334(*(_QWORD *)v9, v37, v38);
          *(_QWORD *)v8 = v36;
          *((_DWORD *)v8 + 2) = v37;
          v8[12] = v38;
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_28;
        case 0x12u:
          v39 = *((_QWORD *)v9 + 1);
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_QWORD *)v8 + 1) = v39;
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_28;
        case 0x13u:
          *(_DWORD *)v8 = *(_DWORD *)v9;
          v40 = *((_QWORD *)v9 + 2);
          *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
          *((_QWORD *)v8 + 2) = v40;
          v41 = *((_QWORD *)v9 + 4);
          *((_QWORD *)v8 + 3) = *((_QWORD *)v9 + 3);
          *((_QWORD *)v8 + 4) = v41;
          v42 = *((_QWORD *)v9 + 6);
          *((_QWORD *)v8 + 5) = *((_QWORD *)v9 + 5);
          *((_QWORD *)v8 + 6) = v42;
          *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_28:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      goto LABEL_29;
    }
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_30:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_1A58CB2E0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int v30;
  char v31;
  unint64_t v32;
  unsigned int v33;
  char v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  char *__dst;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for Framer.OutboundMessage);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
      goto LABEL_31;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798318) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for OutboundContent(0);
      v11 = swift_getEnumCaseMultiPayload();
      if (v11 == 1)
      {
        v14 = *(_QWORD *)v9;
        v15 = *((_QWORD *)v9 + 1);
        v16 = v9[16];
        sub_1A5862C1C(v14, v15, v16);
        *(_QWORD *)v8 = v14;
        *((_QWORD *)v8 + 1) = v15;
        v8[16] = v16;
LABEL_30:
        swift_storeEnumTagMultiPayload();
        goto LABEL_31;
      }
      if (!v11)
      {
        v12 = type metadata accessor for ClientCommand(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
            *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
            *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
            *((_DWORD *)v8 + 7) = *((_DWORD *)v9 + 7);
            v13 = *((_DWORD *)v9 + 8);
            *(_DWORD *)(v8 + 35) = *(_DWORD *)(v9 + 35);
            *((_DWORD *)v8 + 8) = v13;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            swift_retain();
            goto LABEL_29;
          case 1u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
            *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
            *((_QWORD *)v8 + 3) = *((_QWORD *)v9 + 3);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_29;
          case 2u:
          case 8u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
            *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_29;
          case 3u:
          case 4u:
          case 5u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_29;
          case 6u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
            *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
            *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_29;
          case 7u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
            *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
            *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
            *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_29;
          case 9u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
            *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v17 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796830);
            v18 = *(int *)(v17 + 64);
            __dst = &v8[v18];
            v19 = &v9[v18];
            v20 = sub_1A594A0EC();
            v21 = *(_QWORD *)(v20 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
            {
              v22 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796488);
              memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v19, v20);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
            }
            v35 = *(int *)(v17 + 80);
            v36 = (uint64_t *)&v8[v35];
            v37 = (uint64_t *)&v9[v35];
            v38 = *v37;
            v39 = v37[1];
            sub_1A54E42B4(*v37, v39);
            *v36 = v38;
            v36[1] = v39;
            goto LABEL_29;
          case 0xAu:
          case 0xCu:
            v23 = *(_QWORD *)v9;
            sub_1A589D3EC(v23);
            *(_QWORD *)v8 = v23;
            goto LABEL_29;
          case 0xBu:
          case 0xDu:
            v24 = *(_QWORD *)v9;
            sub_1A589D3EC(*(_QWORD *)v9);
            *(_QWORD *)v8 = v24;
            *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_29;
          case 0xEu:
            v25 = *(_QWORD *)v9;
            v26 = *((_DWORD *)v9 + 2);
            v27 = v9[12];
            sub_1A54E4334(*(_QWORD *)v9, v26, v27);
            *(_QWORD *)v8 = v25;
            *((_DWORD *)v8 + 2) = v26;
            v8[12] = v27;
            *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
            v28 = *((_QWORD *)v9 + 3);
            v8[32] = v9[32];
            *((_QWORD *)v8 + 3) = v28;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_29;
          case 0xFu:
            v29 = *(_QWORD *)v9;
            v30 = *((_DWORD *)v9 + 2);
            v31 = v9[12];
            sub_1A54E4334(*(_QWORD *)v9, v30, v31);
            *(_QWORD *)v8 = v29;
            *((_DWORD *)v8 + 2) = v30;
            v8[12] = v31;
            v8[16] = v9[16];
            v8[17] = v9[17];
            *((_QWORD *)v8 + 3) = *((_QWORD *)v9 + 3);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_29;
          case 0x10u:
          case 0x11u:
            v32 = *(_QWORD *)v9;
            v33 = *((_DWORD *)v9 + 2);
            v34 = v9[12];
            sub_1A54E4334(*(_QWORD *)v9, v33, v34);
            *(_QWORD *)v8 = v32;
            *((_DWORD *)v8 + 2) = v33;
            v8[12] = v34;
            *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
            *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_29;
          case 0x12u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
            *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
            swift_retain();
            swift_retain();
            swift_retain();
            goto LABEL_29;
          case 0x13u:
            *(_DWORD *)v8 = *(_DWORD *)v9;
            *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
            *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
            *((_QWORD *)v8 + 3) = *((_QWORD *)v9 + 3);
            *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
            *((_QWORD *)v8 + 5) = *((_QWORD *)v9 + 5);
            *((_QWORD *)v8 + 6) = *((_QWORD *)v9 + 6);
            *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_29:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
            break;
        }
        goto LABEL_30;
      }
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_31:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1A58CB9EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *__dst;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798318) + 48);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    v9 = type metadata accessor for OutboundContent(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for ClientCommand(0);
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        *v7 = *v8;
        *((_DWORD *)v7 + 2) = *((_DWORD *)v8 + 2);
        v7[2] = v8[2];
        v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796830);
        v12 = *(int *)(v11 + 64);
        __dst = (char *)v7 + v12;
        v13 = (char *)v8 + v12;
        v14 = sub_1A594A0EC();
        v15 = *(_QWORD *)(v14 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        {
          v16 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796488);
          memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 32))(__dst, v13, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
        }
        *(_OWORD *)((char *)v7 + *(int *)(v11 + 80)) = *(_OWORD *)((char *)v8 + *(int *)(v11 + 80));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1A58CBBDC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *__dst;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for Framer.OutboundMessage);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798318) + 48);
      v7 = (_QWORD *)((char *)a1 + v6);
      v8 = (_QWORD *)((char *)a2 + v6);
      v9 = type metadata accessor for OutboundContent(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v10 = type metadata accessor for ClientCommand(0);
        if (swift_getEnumCaseMultiPayload() == 9)
        {
          *v7 = *v8;
          *((_DWORD *)v7 + 2) = *((_DWORD *)v8 + 2);
          v7[2] = v8[2];
          v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796830);
          v12 = *(int *)(v11 + 64);
          __dst = (char *)v7 + v12;
          v13 = (char *)v8 + v12;
          v14 = sub_1A594A0EC();
          v15 = *(_QWORD *)(v14 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
          {
            v16 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796488);
            memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v15 + 32))(__dst, v13, v14);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
          }
          *(_OWORD *)((char *)v7 + *(int *)(v11 + 80)) = *(_OWORD *)((char *)v8 + *(int *)(v11 + 80));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A58CBDE4()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char *v3;
  uint64_t v4;
  void *v5;

  result = type metadata accessor for OutboundContent(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v3 = &v2;
    v4 = MEMORY[0x1E0DE9D48] + 64;
    v5 = &unk_1A59DF508;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t _s11CompressionOwxx(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t _s11CompressionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_retain();
    swift_retain();
  }
  return a1;
}

unint64_t *_s11CompressionOwca(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_release();
    swift_release();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *_s11CompressionOwta(_QWORD *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
    swift_release();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(_QWORD *)a2;
  swift_release();
  a1[1] = *(_QWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t _s11CompressionOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s11CompressionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

_QWORD *sub_1A58CC0DC(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *_s11CompressionOMa()
{
  return &_s11CompressionON;
}

int *sub_1A58CC10C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  int *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(void);
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  unsigned __int8 *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  int *result;
  BOOL v66;
  char *v67;
  int v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(void);
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, char *, uint64_t);
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  char v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(void);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char v151;
  unint64_t v152;
  char v153;
  char v154;
  uint64_t v155;
  uint64_t v156;

  v130 = a3;
  v126 = a2;
  v128 = a1;
  v122 = a4;
  v125 = type metadata accessor for Deflate.InputBuffer(0);
  MEMORY[0x1E0C80A78](v125);
  v124 = (char *)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Deflate.Result(0);
  MEMORY[0x1E0C80A78](v5);
  v123 = (uint64_t)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7982C8);
  MEMORY[0x1E0C80A78](v7);
  v127 = (uint64_t)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7982E0);
  MEMORY[0x1E0C80A78](v139);
  v133 = (uint64_t)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s12OutputHelperV5ChunkVMa(0);
  v144 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v129 = (uint64_t)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v135 = (uint64_t)&v116 - v13;
  MEMORY[0x1E0C80A78](v14);
  v132 = (uint64_t)&v116 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797FB8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v116 - v20;
  v155 = _s19CommandOutputBufferV8SendDataVMa(0);
  v146 = *(_QWORD *)(v155 - 8);
  MEMORY[0x1E0C80A78](v155);
  v141 = (uint64_t)&v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v140 = (uint64_t)&v116 - v24;
  MEMORY[0x1E0C80A78](v25);
  v142 = (uint64_t)&v116 - v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v116 - v28;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v116 - v31;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v116 - v34;
  v36 = (int *)_s12OutputHelperVMa(0);
  MEMORY[0x1E0C80A78](v36);
  v38 = (uint64_t *)((char *)&v116 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v145 = sub_1A594AE60();
  v143 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  MEMORY[0x1E0C80A78](v39);
  v121 = (char *)&v116 - v40;
  MEMORY[0x1E0C80A78](v41);
  v44 = (char *)&v116 - v43;
  v152 = 0;
  v138 = &v153;
  v153 = 1;
  v150 = 0;
  v131 = &v151;
  v151 = 1;
  if (v128)
  {
    v45 = v128;
    v117 = v42;
    *v38 = 0;
    v46 = (char *)v38 + v36[5];
    v47 = v45;
    swift_retain_n();
    v48 = v10;
    swift_retain();
    v119 = v46;
    sub_1A594AE24();
    v49 = *(void (**)(void))(v144 + 56);
    v149 = (char *)v38 + v36[6];
    v134 = v49;
    v49();
    v120 = v36[7];
    *(_QWORD *)((char *)v38 + v120) = v47;
    v50 = v130 + 208;
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    v51 = v148;
    sub_1A589860C((uint64_t)v18);
    v52 = v51;
    if (!v51)
    {
      v136 = v50;
      v118 = v38;
      v137 = v48;
      v53 = 0;
      v54 = v133;
      v55 = v132;
      v56 = v142;
      while (1)
      {
        swift_endAccess();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48))(v18, 1, v155) == 1)
        {
          sub_1A5510284((uint64_t)v18, &qword_1EE797FB8);
          v93 = v117;
          v94 = (uint64_t)v118;
          sub_1A58BDCAC(v117);
          v100 = v143;
          v101 = v121;
          v102 = v145;
          (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v121, v93, v145);
          v155 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
          swift_release();
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v93, v102);
          sub_1A55034FC(v94, _s12OutputHelperVMa);
          v103 = v153;
          v104 = v150;
          v105 = v151;
          v106 = v122;
          v107 = v101;
          v108 = v152;
          (*(void (**)(uint64_t, char *, uint64_t))(v100 + 32))(v122, v107, v102);
          swift_release();
          result = (int *)_s11CompressionO12OutgoingDataVMa();
          v109 = 0;
          *(_QWORD *)(v106 + result[5]) = v53;
          v110 = v103;
          v111 = v106;
          v112 = v106 + result[6];
          *(_QWORD *)v112 = v155;
          goto LABEL_46;
        }
        v57 = v141;
        sub_1A54E3394((uint64_t)v18, v141, _s19CommandOutputBufferV8SendDataVMa);
        if ((v153 & 1) != 0)
          break;
        v59 = (unsigned __int8 *)(v57 + *(int *)(v155 + 20));
        v60 = *v59;
        v61 = *((unsigned int *)v59 + 1);
        v62 = (_DWORD)v60 == v152 && (_DWORD)v61 == HIDWORD(v152);
        if (!v62)
        {
          v150 = v60 | (v61 << 32);
          v58 = (uint64_t *)&v154;
          goto LABEL_15;
        }
LABEL_16:
        v63 = v57;
        v64 = v140;
        sub_1A54E3394(v63, v140, _s19CommandOutputBufferV8SendDataVMa);
        sub_1A54E3394(v64, v56, _s19CommandOutputBufferV8SendDataVMa);
        result = (int *)_s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        v66 = __OFADD__(v53, result);
        v67 = (char *)result + (_QWORD)v53;
        if (v66)
        {
          __break(1u);
          return result;
        }
        v147 = v52;
        v148 = v67;
        v68 = *(unsigned __int8 *)(v56 + *(int *)(v155 + 24));
        v69 = v56;
        v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v143 + 16);
        v70(v55, v69, v145);
        v71 = v137;
        *(_BYTE *)(v55 + *(int *)(v137 + 20)) = v68;
        v72 = *(int *)(v139 + 48);
        v73 = (uint64_t)v149;
        sub_1A58BDF88((uint64_t)v149, v54);
        *(_BYTE *)(v54 + v72) = v68;
        v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48);
        if (v74(v54, 1, v71) == 1)
        {
          sub_1A5510284(v73, (uint64_t *)&unk_1EE7982C8);
          sub_1A58CCF90(v55, v73);
          ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v134)(v73, 0, 1, v71);
          v56 = v142;
          v52 = v147;
LABEL_5:
          v53 = v148;
          goto LABEL_6;
        }
        v75 = v135;
        sub_1A58CCF90(v54, v135);
        v76 = v71;
        if (v68 == *(unsigned __int8 *)(v75 + *(int *)(v71 + 20)))
        {
          v81 = v74((uint64_t)v149, 1, v71);
          v55 = v132;
          v52 = v147;
          if (!v81)
            sub_1A594AE30();
          sub_1A55034FC(v135, _s12OutputHelperV5ChunkVMa);
          v54 = v133;
          sub_1A55034FC(v133, _s12OutputHelperV5ChunkVMa);
          v56 = v142;
          goto LABEL_5;
        }
        sub_1A55034FC(v75, _s12OutputHelperV5ChunkVMa);
        v77 = v127;
        sub_1A58BDF88((uint64_t)v149, v127);
        v62 = v74(v77, 1, v71) == 1;
        v78 = v129;
        v52 = v147;
        if (v62)
        {
          sub_1A5510284(v77, (uint64_t *)&unk_1EE7982C8);
          v79 = v134;
          v53 = v148;
          v80 = (uint64_t)v149;
        }
        else
        {
          sub_1A54E3394(v77, v129, _s12OutputHelperV5ChunkVMa);
          v82 = (uint64_t)v124;
          v70((uint64_t)v124, v78, v145);
          swift_storeEnumTagMultiPayload();
          v83 = *(unsigned __int8 *)(v78 + *(int *)(v71 + 20));
          v84 = v71;
          v85 = v123;
          sub_1A58B9C5C(v82, v83, v123);
          v53 = v148;
          if (v52)
          {
            sub_1A55034FC(v82, type metadata accessor for Deflate.InputBuffer);
            v115 = (uint64_t)v149;
            sub_1A5510284((uint64_t)v149, (uint64_t *)&unk_1EE7982C8);
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v134)(v115, 1, 1, v84);
            sub_1A55034FC(v129, _s12OutputHelperV5ChunkVMa);
            sub_1A55034FC(v133, _s12OutputHelperV5ChunkVMa);
            sub_1A55034FC(v132, _s12OutputHelperV5ChunkVMa);
            swift_release();
            swift_release();
            sub_1A55034FC(v142, _s19CommandOutputBufferV8SendDataVMa);
            sub_1A55034FC((uint64_t)v118, _s12OutputHelperVMa);
            return (int *)swift_release();
          }
          sub_1A55034FC(v82, type metadata accessor for Deflate.InputBuffer);
          sub_1A594AE30();
          sub_1A55034FC(v85, type metadata accessor for Deflate.Result);
          v80 = (uint64_t)v149;
          sub_1A5510284((uint64_t)v149, (uint64_t *)&unk_1EE7982C8);
          v79 = v134;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v134)(v80, 1, 1, v84);
          sub_1A55034FC(v129, _s12OutputHelperV5ChunkVMa);
          v76 = v84;
        }
        sub_1A5510284(v80, (uint64_t *)&unk_1EE7982C8);
        v55 = v132;
        sub_1A58CCF90(v132, v80);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v79)(v80, 0, 1, v76);
        v54 = v133;
        sub_1A55034FC(v133, _s12OutputHelperV5ChunkVMa);
        v56 = v142;
LABEL_6:
        sub_1A55034FC(v55, _s12OutputHelperV5ChunkVMa);
        sub_1A55034FC(v56, _s19CommandOutputBufferV8SendDataVMa);
        swift_beginAccess();
        sub_1A589860C((uint64_t)v18);
        if (v52)
        {
          v38 = v118;
          goto LABEL_42;
        }
      }
      v152 = *(unsigned __int8 *)(v57 + *(int *)(v155 + 20)) | ((unint64_t)*(unsigned int *)(v57
                                                                                                  + *(int *)(v155 + 20)
                                                                                                  + 4) << 32);
      v58 = &v156;
LABEL_15:
      *(_BYTE *)*(v58 - 32) = 0;
      goto LABEL_16;
    }
LABEL_42:
    swift_endAccess();
    sub_1A55034FC((uint64_t)v38, _s12OutputHelperVMa);
    swift_release();
    swift_release();
    return (int *)swift_release();
  }
  v149 = v32;
  sub_1A594AE24();
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  v86 = v148;
  sub_1A589860C((uint64_t)v21);
  if (v86)
  {
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v143 + 8))(v44, v145);
    return (int *)swift_release();
  }
  v87 = (uint64_t)v149;
  while (1)
  {
    swift_endAccess();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48))(v21, 1, v155) == 1)
      break;
    sub_1A54E3394((uint64_t)v21, (uint64_t)v29, _s19CommandOutputBufferV8SendDataVMa);
    if ((v153 & 1) != 0)
    {
      v152 = v29[*(int *)(v155 + 20)] | ((unint64_t)*(unsigned int *)&v29[*(int *)(v155 + 20)
                                                                                                + 4] << 32);
      v88 = &v156;
LABEL_31:
      *(_BYTE *)*(v88 - 32) = 0;
      goto LABEL_32;
    }
    v89 = &v29[*(int *)(v155 + 20)];
    v90 = *v89;
    v91 = *((unsigned int *)v89 + 1);
    if ((_DWORD)v90 != v152 || (_DWORD)v91 != HIDWORD(v152))
    {
      v150 = v90 | (v91 << 32);
      v88 = (uint64_t *)&v154;
      goto LABEL_31;
    }
LABEL_32:
    sub_1A54E3394((uint64_t)v29, v87, _s19CommandOutputBufferV8SendDataVMa);
    sub_1A54E3394(v87, (uint64_t)v35, _s19CommandOutputBufferV8SendDataVMa);
    sub_1A594AE30();
    sub_1A55034FC((uint64_t)v35, _s19CommandOutputBufferV8SendDataVMa);
    swift_beginAccess();
    sub_1A589860C((uint64_t)v21);
  }
  sub_1A5510284((uint64_t)v21, &qword_1EE797FB8);
  v95 = v143;
  v96 = v121;
  v97 = v145;
  (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v121, v44, v145);
  v98 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v44, v97);
  v108 = v152;
  v110 = v153;
  v104 = v150;
  v105 = v151;
  v99 = *(void (**)(uint64_t, char *, uint64_t))(v95 + 32);
  v111 = v122;
  v99(v122, v96, v97);
  swift_release();
  result = (int *)_s11CompressionO12OutgoingDataVMa();
  *(_QWORD *)(v111 + result[5]) = v98;
  v112 = v111 + result[6];
  *(_QWORD *)v112 = 0;
  v109 = 1;
LABEL_46:
  *(_BYTE *)(v112 + 8) = v109;
  v113 = v111 + result[7];
  *(_QWORD *)v113 = v108;
  *(_BYTE *)(v113 + 8) = v110;
  v114 = v111 + result[8];
  *(_QWORD *)v114 = v104;
  *(_BYTE *)(v114 + 8) = v105;
  return result;
}

uint64_t _s11CompressionO12OutgoingDataVMa()
{
  uint64_t result;

  result = qword_1EE798248;
  if (!qword_1EE798248)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A58CCF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s12OutputHelperV5ChunkVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1A58CCFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a4;
  v23 = sub_1A594AE60();
  v9 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Deflate.InputBuffer(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for Deflate.Result(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    *v14 = a1;
    v14[1] = a2;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_retain();
    v18 = v25;
    sub_1A58BAFD4((uint64_t)v14, (uint64_t)v17);
    if (v18)
    {
      swift_release();
      swift_release();
      sub_1A55034FC((uint64_t)v14, type metadata accessor for Deflate.InputBuffer);
    }
    else
    {
      sub_1A55034FC((uint64_t)v14, type metadata accessor for Deflate.InputBuffer);
      v19 = v23;
      v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 16))(v11, v17, v23);
      MEMORY[0x1E0C80A78](v20);
      *(&v22 - 2) = (uint64_t)sub_1A58CD224;
      *(&v22 - 1) = a5;
      sub_1A594ADDC();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
      v14 = (_QWORD *)_s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      swift_release();
      swift_release();
      sub_1A55034FC((uint64_t)v17, type metadata accessor for Deflate.Result);
    }
  }
  else
  {
    swift_beginAccess();
    ServerResponseFramingParser.append(_:)(a1, a2);
    swift_endAccess();
    if (a1)
      return (_QWORD *)(a2 - a1);
    else
      return 0;
  }
  return v14;
}

uint64_t sub_1A58CD224(uint64_t a1, uint64_t a2)
{
  return sub_1A58C4A10(a1, a2);
}

uint64_t sub_1A58CD22C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a1)
    v3 = a1 + a2;
  else
    v3 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(a1, v3);
}

uint64_t *sub_1A58CD258(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594AE60();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v9[8] = v10[8];
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v11 = a3[7];
    v12 = a3[8];
    v13 = (char *)a1 + v11;
    v14 = (char *)a2 + v11;
    v13[8] = v14[8];
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v15 = (char *)a1 + v12;
    v16 = (char *)a2 + v12;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
  }
  return a1;
}

uint64_t sub_1A58CD32C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  return a1;
}

uint64_t sub_1A58CD3D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = v18;
  return a1;
}

uint64_t sub_1A58CD484(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  return a1;
}

uint64_t sub_1A58CD52C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  return a1;
}

uint64_t sub_1A58CD5D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58CD5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1A58CD61C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58CD628(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1A58CD668()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594AE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s11CompressionO18DeflateCompressionVwxx()
{
  swift_release();
  return swift_release();
}

_QWORD *_s11CompressionO18DeflateCompressionVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s11CompressionO18DeflateCompressionVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s11CompressionO18DeflateCompressionVwta(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *_s11CompressionO18DeflateCompressionVMa()
{
  return &_s11CompressionO18DeflateCompressionVN;
}

uint64_t HandshakeReply.Encoded.init(content:tag:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v3 = a2;
  v6 = HIDWORD(a2);
  v7 = sub_1A594AE60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a3, a1, v7);
  result = type metadata accessor for HandshakeReply.Encoded();
  v9 = a3 + *(int *)(result + 20);
  *(_BYTE *)v9 = v3;
  *(_DWORD *)(v9 + 4) = v6;
  return result;
}

uint64_t type metadata accessor for HandshakeReply.Encoded()
{
  uint64_t result;

  result = qword_1EE798108;
  if (!qword_1EE798108)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static HandshakeQuery.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_1A58CDA14(a1, a2, a3 & 1, a4, a5, a6 & 1) & 1;
}

uint64_t sub_1A58CD8C4(uint64_t a1, uint64_t a2)
{
  return sub_1A58CDA14(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16)) & 1;
}

uint64_t HandshakeReply.Encoded.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t HandshakeReply.Encoded.content.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

double (*HandshakeReply.Encoded.content.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t HandshakeReply.Encoded.tag.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for HandshakeReply.Encoded();
  return *(unsigned __int8 *)(v0 + *(int *)(v1 + 20)) | ((unint64_t)*(unsigned int *)(v0 + *(int *)(v1 + 20) + 4) << 32);
}

uint64_t HandshakeReply.Encoded.tag.setter(unint64_t a1)
{
  uint64_t v1;
  char v2;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;

  v2 = a1;
  v3 = HIDWORD(a1);
  result = type metadata accessor for HandshakeReply.Encoded();
  v5 = v1 + *(int *)(result + 20);
  *(_BYTE *)v5 = v2;
  *(_DWORD *)(v5 + 4) = v3;
  return result;
}

double (*HandshakeReply.Encoded.tag.modify())(_QWORD)
{
  type metadata accessor for HandshakeReply.Encoded();
  return nullsub_1;
}

uint64_t sub_1A58CDA14(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) != 0)
  {
    if ((a6 & 1) != 0)
      __asm { BR              X10 }
    return 0;
  }
  if ((a6 & 1) != 0)
    return 0;
  if (a1 != a4 || a2 != a5)
    return sub_1A594CD38();
  return 1;
}

uint64_t _s15IMAP2Connection14HandshakeReplyO7EncodedV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  unsigned __int8 *v14;
  int v15;
  int v16;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  void (*v23)(char *, uint64_t);
  void (*v24)(char *, uint64_t);
  _QWORD v25[3];
  uint64_t v26;

  v4 = sub_1A594AE60();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v25 - v9;
  v11 = *(int *)(type metadata accessor for HandshakeReply.Encoded() + 20);
  v12 = *(unsigned __int8 *)(a1 + v11);
  v13 = *(_DWORD *)(a1 + v11 + 4);
  v14 = (unsigned __int8 *)(a2 + v11);
  v15 = *v14;
  v16 = *((_DWORD *)v14 + 1);
  if (v12 != v15 || v13 != v16)
    return 0;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v10, a1, v4);
  v18(v7, a2, v4);
  v19 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  if (v19 != _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0())
  {
    v23 = *(void (**)(char *, uint64_t))(v5 + 8);
    v23(v7, v4);
    v23(v10, v4);
    return 0;
  }
  sub_1A5899084();
  sub_1A594BD60();
  v20 = sub_1A594BDB4();
  if (v26 == v25[2])
  {
    v21 = *(void (**)(char *, uint64_t))(v5 + 8);
    v21(v7, v4);
    v21(v10, v4);
    return 1;
  }
  else
  {
    MEMORY[0x1E0C80A78](v20);
    v25[-2] = v7;
    v25[-1] = v10;
    sub_1A594ADE8();
    v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v7, v4);
    v24(v10, v4);
    return v26;
  }
}

uint64_t sub_1A58CDDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A5862C1C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for HandshakeReply()
{
  return &type metadata for HandshakeReply;
}

uint64_t destroy for HandshakeQuery(uint64_t a1)
{
  return sub_1A585C500(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s15IMAP2Connection14HandshakeReplyOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A5862C1C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A585C500(v6, v7, v8);
  return a1;
}

uint64_t _s15IMAP2Connection14HandshakeReplyOwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A585C500(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for HandshakeQuery()
{
  return &type metadata for HandshakeQuery;
}

uint64_t getEnumTagSinglePayload for HandshakeReply.Encoded()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58CDF20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HandshakeReply.Encoded()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58CDF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1A58CDFA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594AE60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A58CE020@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 2;
  swift_retain();
  swift_retain();
  return swift_retain();
}

__n128 sub_1A58CE070(const void *a1)
{
  __n128 *v1;
  __n128 result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  _BYTE v9[584];
  _BYTE v10[584];
  _BYTE v11[584];
  _BYTE v12[584];

  sub_1A552316C(a1, v10);
  sub_1A552316C(v10, v12);
  sub_1A552316C(a1, v11);
  if (sub_1A5523B90((uint64_t)v11) == 20)
  {
    v4 = sub_1A5524678((uint64_t)v11);
    v8 = *(__n128 *)v4;
    v5 = *(_QWORD *)(v4 + 16);
    v6 = v1[2].n128_i64[0];
    v7 = v1[2].n128_i64[1];
    sub_1A552316C(v12, v9);
    sub_1A5524678((uint64_t)v9);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A555D250(v6, v7);
    result = v8;
    v1[2] = v8;
    v1[3].n128_u64[0] = v5;
  }
  return result;
}

uint64_t sub_1A58CE148@<X0>(char a1@<W3>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8[12];
  _BYTE v9[184];
  _BYTE v10[184];

  if (a1 || (v4 = (_QWORD *)v2[5]) == 0)
  {
    v8[0] = xmmword_1A59DC740;
    sub_1A587ABF8((uint64_t)v8);
  }
  else
  {
    v5 = v2[6];
    v6 = v2[4];
    swift_retain();
    swift_retain();
    swift_retain();
    ServerID.init(_:)(v6, v4, v5, (uint64_t)v8);
    sub_1A58D01FC((uint64_t)v8);
  }
  sub_1A5862234(v8, (uint64_t)v9);
  nullsub_1(v9);
  sub_1A587AC04((uint64_t)v9, (uint64_t)v10);
  return sub_1A587AC04((uint64_t)v10, a2);
}

uint64_t sub_1A58CE20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;

  v9 = *v4;
  v10 = (_QWORD *)v4[1];
  swift_retain();
  swift_retain();
  v11 = sub_1A57B2A18(a3, a4, v9, v10);
  v13 = v12;
  v15 = v14;
  swift_release();
  swift_release();
  if ((v13 & 1) != 0)
  {
    if (a2 != 1)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A58CEA0C(a3, a4);
      v22 = v4[2];
      v4 += 2;
      v21 = v22;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v4 = v21;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A58BF814(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = *v4;
      }
      v15 = *(_QWORD *)(v21 + 16);
      v19 = *(_QWORD *)(v21 + 24);
      v17 = (_QWORD *)(v15 + 1);
      if (v15 < v19 >> 1)
        goto LABEL_16;
      goto LABEL_19;
    }
    return swift_bridgeObjectRelease();
  }
  if (a2 == 1)
  {
    sub_1A58CEB84(v11, v15);
    swift_bridgeObjectRelease();
    sub_1A58CED00(v11);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v17 = (_QWORD *)v4[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  if ((v18 & 1) == 0)
    v17 = (_QWORD *)sub_1A58EA2D0(v17);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v19 = v17[2];
    if (v11 < v19)
    {
      v20 = &v17[2 * v11];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      v20[4] = a1;
      v20[5] = a2;
      swift_bridgeObjectRelease();
      sub_1A555F508(a1, a2);
      result = sub_1A555F508(a1, a2);
      v4[2] = (uint64_t)v17;
      return result;
    }
  }
  __break(1u);
LABEL_19:
  sub_1A58BF814(v19 > 1, (int64_t)v17, 1);
  v21 = *v4;
LABEL_16:
  *(_QWORD *)(v21 + 16) = v17;
  v24 = v21 + 16 * v15;
  *(_QWORD *)(v24 + 32) = a1;
  *(_QWORD *)(v24 + 40) = a2;
  swift_bridgeObjectRelease();
  sub_1A555F508(a1, a2);
  result = sub_1A555F508(a1, a2);
  *v4 = v21;
  return result;
}

uint64_t sub_1A58CE424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  if (!a2)
  {
    if (!a4)
      return a3;
    v6 = 40;
LABEL_11:
    sub_1A594B5F8();
    sub_1A594B5F8();
    return v6;
  }
  v4 = a1;
  if (a4 && (a1 != a3 || a2 != a4) && (sub_1A594CD38() & 1) == 0)
  {
    v6 = v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B5F8();
    goto LABEL_11;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v4;
}

uint64_t sub_1A58CE504@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;

  v2 = sub_1A594B478();
  MEMORY[0x1E0C80A78](v2);
  sub_1A5949C18();
  swift_allocObject();
  v11 = 0xC800000000;
  v12 = sub_1A5949BF4();
  sub_1A58CF6FC((int *)&v11, 0);
  v12 |= 0x4000000000000000uLL;
  sub_1A58CE648((uint64_t)&v11);
  if ((v4 & 1) != 0 || v3 < 1)
  {
    result = sub_1A54E46E8(v11, v12);
    v7 = 0;
    v9 = 0;
  }
  else
  {
    sub_1A5949F54();
    v5 = v11;
    v6 = v12;
    sub_1A54E42B4(v11, v12);
    sub_1A594B460();
    v7 = sub_1A594B424();
    v9 = v8;
    sub_1A54E46E8(v5, v6);
    result = sub_1A54E46E8(v5, v6);
  }
  *a1 = v7;
  a1[1] = v9;
  return result;
}

void sub_1A58CE648(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1A58CE6A4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, size_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  _QWORD *v19;
  const char *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unsigned __int8 v29;

  v25 = v21;
  LOWORD(v26) = a1;
  BYTE2(v26) = BYTE2(a1);
  HIBYTE(v26) = BYTE3(a1);
  v27 = BYTE4(a1);
  v28 = BYTE5(a1);
  v29 = BYTE6(a1);
  v24 = BYTE6(a1);
  if (sysctlbyname(v20, &v25, (size_t *)&v24, 0, 0))
    result = 0;
  else
    result = v24;
  v23 = v26 | ((unint64_t)v27 << 32) | ((unint64_t)v28 << 40) | ((unint64_t)v29 << 48);
  *v19 = v25;
  v19[1] = v23;
  return result;
}

size_t sub_1A58CE92C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  int64_t v12;
  uint64_t v13;
  size_t v14;
  size_t v16[2];

  v16[1] = *MEMORY[0x1E0C80C00];
  v7 = sub_1A5949BE8();
  if (!v7)
LABEL_13:
    __break(1u);
  v8 = v7;
  v9 = sub_1A5949C0C();
  v10 = a1 - v9;
  if (__OFSUB__(a1, v9))
  {
    __break(1u);
    goto LABEL_12;
  }
  v11 = __OFSUB__(a2, a1);
  v12 = a2 - a1;
  if (v11)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v13 = sub_1A5949C00();
  if (v13 >= v12)
    v14 = v12;
  else
    v14 = v13;
  v16[0] = v14;
  if (sysctlbyname(a4, (void *)(v8 + v10), v16, 0, 0))
    return 0;
  else
    return v16[0];
}

uint64_t sub_1A58CEA0C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v8 = v2[1];
  v6 = v2 + 1;
  v7 = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v8;
  if ((result & 1) == 0)
  {
    result = sub_1A58BF7A4(0, *(_QWORD *)(v7 + 16) + 1, 1);
    v7 = *v6;
  }
  v11 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v7 + 24);
  if (v11 >= v10 >> 1)
  {
    result = sub_1A58BF7A4(v10 > 1, v11 + 1, 1);
    v7 = *v6;
  }
  *(_QWORD *)(v7 + 16) = v11 + 1;
  v12 = v7 + 16 * v11;
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  v3[1] = v7;
  v13 = *(_QWORD *)(v7 + 16);
  v14 = *v3;
  if (*v3)
  {
    swift_beginAccess();
    if (MEMORY[0x1A85AC894](*(_QWORD *)(v14 + 16) & 0x3FLL) >= v13)
    {
      result = swift_isUniquelyReferenced_native();
      v15 = *v3;
      if (!(_DWORD)result)
      {
        if (!v15)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        v15 = sub_1A594A434();
        result = swift_release();
        *v3 = v15;
      }
      if (v15)
        return sub_1A594A3EC();
      __break(1u);
      goto LABEL_16;
    }
  }
  else if ((unint64_t)v13 < 0x10)
  {
    return result;
  }
  return sub_1A57B2DB0();
}

unint64_t sub_1A58CEB84(int64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(v2[1] + 16);
  v5 = *v2;
  if (!*v2)
  {
    if (v4)
      return sub_1A58CEDD8(a1);
    goto LABEL_15;
  }
  swift_beginAccess();
  if ((*(_QWORD *)(v5 + 16) & 0x3FLL) == (*(_QWORD *)(v5 + 24) & 0x3FLL))
  {
    if (!v4)
      goto LABEL_15;
  }
  else if (v4 <= sub_1A594A428())
  {
LABEL_15:
    v10 = sub_1A58CEDD8(a1);
    sub_1A57B2DB0();
    return v10;
  }
  result = swift_isUniquelyReferenced_native();
  v8 = *v2;
  if (!(_DWORD)result)
  {
    if (!v8)
      goto LABEL_20;
    v8 = sub_1A594A434();
    result = swift_release();
    *v2 = v8;
  }
  if (v8)
  {
    swift_retain();
    result = sub_1A58CEEB0(a2, (_QWORD *)(v8 + 16), v8 + 32, (uint64_t)v2);
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (a1 + 1 >= a1)
    {
      v9 = v2[1];
      swift_retain();
      sub_1A58CF080(a1, a1 + 1, v9, (_QWORD *)(v8 + 16));
      swift_release();
      swift_release();
      return sub_1A58CEDD8(a1);
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1A58CED00(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1A58EA2D0(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[2 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58CEDD8(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1A58EA2BC(v3);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = v3 + 16 * a1;
      v8 = *(_QWORD *)(v7 + 32);
      memmove((void *)(v7 + 32), (const void *)(v7 + 48), 16 * v6);
      *(_QWORD *)(v3 + 16) = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

unint64_t sub_1A58CEEB0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = a1;
  v15 = sub_1A594A3D4();
  sub_1A594A410();
  if (!v15)
    return sub_1A594A3EC();
  v7 = a1;
  v8 = sub_1A594A3E0();
  while (1)
  {
    result = sub_1A594A3F8();
    if ((v10 & 1) != 0)
      break;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      break;
    }
    if (result >= *(_QWORD *)(*(_QWORD *)(a4 + 8) + 16))
      goto LABEL_16;
    sub_1A594CE64();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    v11 = sub_1A594CED0();
    result = swift_bridgeObjectRelease();
    v12 = 1 << *a2;
    if (__OFSUB__(v12, 1))
      goto LABEL_17;
    v13 = (v12 - 1) & v11;
    if (v6 >= v8)
    {
      if (v13 < v8)
        goto LABEL_3;
LABEL_12:
      if (v6 < v13)
        goto LABEL_3;
      goto LABEL_13;
    }
    if (v13 < v8)
      goto LABEL_12;
LABEL_13:
    sub_1A594A3F8();
    sub_1A594A3EC();
    v6 = v7;
LABEL_3:
    sub_1A594A410();
    v7 = a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A58CF080(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  v5 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (v5 >= 1)
  {
    v7 = result;
    v8 = *(_QWORD *)(a3 + 16);
    v9 = v8 - v5;
    if ((uint64_t)v8 < v5)
      ++v9;
    if (result < v9 >> 1)
    {
      result = MEMORY[0x1A85AC894](*a4 & 0x3FLL);
      if (result / 3 > v7)
      {
        if (v7 < 0)
        {
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        if (v8 < v7)
        {
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        if (v7)
        {
          swift_retain();
          v10 = 0;
          while (1)
          {
            sub_1A594CE64();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A594B1D8();
            result = sub_1A594CED0();
            if (__OFSUB__(1 << *a4, 1))
              break;
            if (sub_1A594A3D4())
            {
              while (1)
              {
                v11 = sub_1A594A3F8();
                if ((v12 & 1) == 0 && v11 == v10)
                  break;
                sub_1A594A410();
              }
            }
            result = v10 + v5;
            if (__OFADD__(v10, v5))
              goto LABEL_56;
            ++v10;
            sub_1A594A404();
            swift_bridgeObjectRelease();
            if (v10 == v7)
            {
              result = swift_release();
              goto LABEL_20;
            }
          }
          __break(1u);
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
        goto LABEL_20;
      }
      sub_1A594A3D4();
      v19 = sub_1A594A3F8();
      if ((v20 & 1) != 0 || v19 >= v7)
      {
LABEL_32:
        result = sub_1A594A410();
LABEL_20:
        v13 = a4[1];
        if (__OFSUB__(v13 >> 6, v5))
        {
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        v14 = 1 << *a4;
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v15)
        {
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        v17 = (v16 & (((v13 >> 6) - v5) >> 63)) + (v13 >> 6) - v5;
        if (v17 < v16)
          v16 = 0;
        a4[1] = a4[1] & 0x3FLL | ((v17 - v16) << 6);
        return result;
      }
      if (!__OFADD__(v19, v5))
      {
        sub_1A594A404();
        goto LABEL_32;
      }
      __break(1u);
LABEL_38:
      sub_1A594A3D4();
      v21 = sub_1A594A3F8();
      if ((v22 & 1) == 0 && v21 >= v4)
      {
        v15 = __OFSUB__(v21, v5);
        result = v21 - v5;
        if (v15)
        {
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        sub_1A594A404();
      }
      return sub_1A594A410();
    }
    v4 = a2;
    v18 = v8 - a2;
    if (__OFSUB__(v8, a2))
    {
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    result = MEMORY[0x1A85AC894](*a4 & 0x3FLL);
    if (v18 >= result / 3)
      goto LABEL_38;
    if ((uint64_t)v8 < v4)
    {
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    if (v4 < 0)
    {
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (v8 != v4)
    {
      if (v8 <= v4)
      {
LABEL_68:
        __break(1u);
        return result;
      }
      swift_retain();
      while (1)
      {
        sub_1A594CE64();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A594B1D8();
        result = sub_1A594CED0();
        if (__OFSUB__(1 << *a4, 1))
          goto LABEL_58;
        if (sub_1A594A3D4())
        {
          while (1)
          {
            v23 = sub_1A594A3F8();
            if ((v24 & 1) == 0 && v23 == v4)
              break;
            sub_1A594A410();
          }
        }
        result = v4 - v5;
        if (__OFSUB__(v4, v5))
          goto LABEL_59;
        ++v4;
        sub_1A594A404();
        swift_bridgeObjectRelease();
        if (v4 == v8)
          return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1A58CF51C(uint64_t result, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (result < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v3 = v2;
  v5 = result;
  v8 = v2[1];
  v6 = v2 + 1;
  v7 = v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v8;
  if (isUniquelyReferenced_nonNull_native && (unint64_t)v5 <= *(_QWORD *)(v7 + 24) >> 1)
  {
    v10 = *v3;
    if (*v3)
      goto LABEL_5;
  }
  else
  {
    if (*(_QWORD *)(v7 + 16) <= v5)
      v15 = v5;
    else
      v15 = *(_QWORD *)(v7 + 16);
    sub_1A58BF7A4(isUniquelyReferenced_nonNull_native, v15, 0);
    v7 = *v6;
    v10 = *v3;
    if (*v3)
    {
LABEL_5:
      swift_beginAccess();
      v11 = *(_QWORD *)(v10 + 16) & 0x3FLL;
      v12 = MEMORY[0x1A85AC8B8](v5);
      v13 = v12;
      if ((a2 & 1) != 0)
      {
        v14 = v12;
        if (v11 >= v12)
          goto LABEL_20;
      }
      else
      {
        swift_beginAccess();
        v14 = *(_QWORD *)(v10 + 24) & 0x3FLL;
        if (v11 >= v13)
          goto LABEL_20;
      }
LABEL_16:
      if (v14 <= v13)
        v17 = v13;
      else
        v17 = v14;
      goto LABEL_30;
    }
  }
  v16 = MEMORY[0x1A85AC8B8](v5);
  v13 = v16;
  v11 = 0;
  if ((a2 & 1) != 0)
    v14 = v16;
  else
    v14 = 0;
  if (v16 > 0)
    goto LABEL_16;
LABEL_20:
  if (v14 <= v13)
    v18 = v13;
  else
    v18 = v14;
  result = MEMORY[0x1A85AC8B8](*(_QWORD *)(v7 + 16));
  if (result <= v18)
    v19 = v18;
  else
    v19 = result;
  if (v19 < v11)
  {
    if (v14 <= v19)
      v17 = v19;
    else
      v17 = v14;
LABEL_30:
    v20 = sub_1A57B2E50(v7, v17, 0, v14);
    result = swift_release();
    *v3 = v20;
    return result;
  }
  if (!v10 || (result = swift_isUniquelyReferenced_native(), (_DWORD)result))
  {
    v21 = *v3;
    if (*v3)
      goto LABEL_35;
LABEL_39:
    if (!v14)
      return result;
    __break(1u);
    goto LABEL_41;
  }
  result = *v3;
  if (!*v3)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  v21 = sub_1A594A434();
  result = swift_release();
  *v3 = v21;
  if (!v21)
    goto LABEL_39;
LABEL_35:
  result = swift_beginAccess();
  if ((*(_QWORD *)(v21 + 24) & 0x3FLL) != v14)
    *(_QWORD *)(v21 + 24) = *(_QWORD *)(v21 + 24) & 0xFFFFFFFFFFFFFFC0 | v14 & 0x3F;
  return result;
}

char *sub_1A58CF6FC(int *a1, int a2)
{
  char *result;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  size_t v11;

  result = (char *)sub_1A5949F24();
  v5 = *a1;
  v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = (char *)sub_1A5949BE8();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v7 = result;
  result = (char *)sub_1A5949C0C();
  v8 = v5 - (_QWORD)result;
  if (__OFSUB__(v5, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v9 = v6 - v5;
  v10 = sub_1A5949C00();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  return (char *)memset(&v7[v8], a2, v11);
}

uint64_t sub_1A58CF77C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v2 = MEMORY[0x1E0DEE9D8];
  v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  sub_1A58CF51C(v3, 0);
  sub_1A58BF814(0, v3, 0);
  if (!v3)
    return 0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v6 = *(v4 - 3);
    v5 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A57B2A18(v6, v5, 0, v14);
    if ((v10 & 1) == 0)
      break;
    sub_1A58CEA0C(v6, v5);
    v12 = *(_QWORD *)(v2 + 16);
    v11 = *(_QWORD *)(v2 + 24);
    if (v12 >= v11 >> 1)
      sub_1A58BF814(v11 > 1, v12 + 1, 1);
    v4 += 4;
    *(_QWORD *)(v2 + 16) = v12 + 1;
    v13 = v2 + 16 * v12;
    *(_QWORD *)(v13 + 32) = v8;
    *(_QWORD *)(v13 + 40) = v7;
    swift_bridgeObjectRelease();
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A58CF8BC()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_infoDictionary);

  if (!v1)
    return sub_1A58CF77C(MEMORY[0x1E0DEE9D8]);
  v2 = sub_1A594AFC8();

  v31 = 0;
  v32 = MEMORY[0x1E0DEE9D8];
  v33 = MEMORY[0x1E0DEE9D8];
  result = *MEMORY[0x1E0C9AE78];
  if (!*MEMORY[0x1E0C9AE78])
  {
    __break(1u);
    goto LABEL_48;
  }
  v4 = sub_1A594B40C();
  if (!*(_QWORD *)(v2 + 16) || (v6 = sub_1A54FE060(v4, v5), (v7 & 1) == 0))
  {
    v29 = 0u;
    v30 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1A558CC98(*(_QWORD *)(v2 + 56) + 32 * v6, (uint64_t)&v29);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v30 + 1))
  {
LABEL_9:
    sub_1A5510284((uint64_t)&v29, &qword_1EE79B530);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
LABEL_17:
    sub_1A58CE20C(v27, v28, 1701667182, 0xE400000000000000);
LABEL_18:
    if (!*(_QWORD *)(v2 + 16))
      goto LABEL_29;
    goto LABEL_22;
  }
LABEL_10:
  result = *MEMORY[0x1E0C9AE88];
  if (!*MEMORY[0x1E0C9AE88])
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v8 = sub_1A594B40C();
  if (*(_QWORD *)(v2 + 16) && (v10 = sub_1A54FE060(v8, v9), (v11 & 1) != 0))
  {
    sub_1A558CC98(*(_QWORD *)(v2 + 56) + 32 * v10, (uint64_t)&v29);
  }
  else
  {
    v29 = 0u;
    v30 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v30 + 1))
  {
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_18;
    goto LABEL_17;
  }
  sub_1A5510284((uint64_t)&v29, &qword_1EE79B530);
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_29:
    v15 = 0;
    v16 = 0;
    goto LABEL_30;
  }
LABEL_22:
  v12 = sub_1A54FE060(0xD00000000000001ALL, 0x80000001A5A14950);
  if ((v13 & 1) == 0)
    goto LABEL_29;
  sub_1A558CC98(*(_QWORD *)(v2 + 56) + 32 * v12, (uint64_t)&v29);
  v14 = swift_dynamicCast();
  if (v14)
    v15 = v27;
  else
    v15 = 0;
  if (v14)
    v16 = v28;
  else
    v16 = 0;
LABEL_30:
  result = *MEMORY[0x1E0C9AE90];
  if (!*MEMORY[0x1E0C9AE90])
  {
LABEL_49:
    __break(1u);
    return result;
  }
  v17 = sub_1A594B40C();
  if (*(_QWORD *)(v2 + 16) && (v19 = sub_1A54FE060(v17, v18), (v20 & 1) != 0))
  {
    sub_1A558CC98(*(_QWORD *)(v2 + 56) + 32 * v19, (uint64_t)&v29);
  }
  else
  {
    v29 = 0u;
    v30 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v30 + 1))
  {
    v21 = swift_dynamicCast();
    if (v21)
      v22 = v27;
    else
      v22 = 0;
    if (v21)
      v23 = v28;
    else
      v23 = 0;
  }
  else
  {
    sub_1A5510284((uint64_t)&v29, &qword_1EE79B530);
    v22 = 0;
    v23 = 0;
  }
  v24 = sub_1A58CE424(v15, v16, v22, v23);
  v26 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26)
    sub_1A58CE20C(v24, v26, 0x6E6F6973726576, 0xE700000000000000);
  return v31;
}

uint64_t sub_1A58CFC44()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v15 = sub_1A58CF8BC();
  v16 = v0;
  v17 = v1;
  v2 = (void *)sub_1A594B3F4();
  v3 = (void *)MGGetStringAnswer();

  if (v3)
  {
    v4 = sub_1A594B40C();
    v6 = v5;

    sub_1A58CE20C(v4, v6, 29551, 0xE200000000000000);
  }
  if (((unint64_t)"MarketingProductName" & 0x1000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7993D0);
    sub_1A594C6FC();
    v7 = *((_QWORD *)&v18 + 1);
    v8 = v18;
  }
  else if (((unint64_t)"MarketingProductName" & 0x2000000000000000) != 0)
  {
    *(_QWORD *)&v18 = 0xD000000000000015;
    *((_QWORD *)&v18 + 1) = (unint64_t)"MarketingProductName" & 0xFFFFFFFFFFFFFFLL;
    sub_1A58CE504(&v13);
    v8 = v13;
    v7 = v14;
  }
  else
  {
    sub_1A58CE504((uint64_t *)&v18);
    v7 = *((_QWORD *)&v18 + 1);
    v8 = v18;
  }
  v18 = xmmword_1A59DC750;
  sub_1A58CE504(&v13);
  v9 = sub_1A58CE424(v8, v7, v13, v14);
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
    sub_1A58CE20C(v9, v11, 0x69737265762D736FLL, 0xEA00000000006E6FLL);
  sub_1A58CE20C(0x6E4920656C707041, 0xE900000000000063, 0x726F646E6576, 0xE600000000000000);
  return v15;
}

uint64_t destroy for IdentifyServer(uint64_t a1)
{
  uint64_t result;

  swift_release();
  swift_release();
  swift_release();
  result = *(_QWORD *)(a1 + 40);
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for IdentifyServer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v5)
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v5;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  }
  return a1;
}

uint64_t assignWithCopy for IdentifyServer(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v4 = (_OWORD *)(a1 + 32);
  v5 = (_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1A5510284(a1 + 32, (uint64_t *)&unk_1EE7AAE00);
      v7 = *(_QWORD *)(a2 + 48);
      *v4 = *v5;
      *(_QWORD *)(a1 + 48) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v8 = *v5;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *v4 = v8;
  }
  return a1;
}

uint64_t assignWithTake for IdentifyServer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  if (!*(_QWORD *)(a1 + 40))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 40);
  if (!v4)
  {
    sub_1A5510284(a1 + 32, (uint64_t *)&unk_1EE7AAE00);
LABEL_5:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    return a1;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 40) = v4;
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentifyServer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentifyServer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentifyServer()
{
  return &type metadata for IdentifyServer;
}

uint64_t sub_1A58D01FC(uint64_t result)
{
  *(_BYTE *)(result + 176) = 3;
  return result;
}

uint64_t *sub_1A58D0208(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594A764();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for Engine.Logger(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A594A764();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1A58D02C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1A58D0320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  return a1;
}

uint64_t sub_1A58D038C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1A58D03E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  return a1;
}

uint64_t sub_1A58D0454()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58D0460(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594A764();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1A58D049C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58D04A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594A764();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t _s6LoggerVMa_0()
{
  uint64_t result;

  result = qword_1EE797FE0;
  if (!qword_1EE797FE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A58D0524()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594A764();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1A58D0594(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[73];
  uint64_t v59[74];

  v5 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594A764();
  v9 = *(_QWORD *)(v8 - 8);
  v10.n128_f64[0] = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v2 + 16);
  v14 = *(unsigned __int16 *)(v2 + 88) | (*(unsigned __int8 *)(v2 + 90) << 16);
  if (((1 << (a1 >> 60)) & 0x1E7) != 0)
    return;
  if (a1 >> 60 == 3)
  {
    sub_1A552316C((const void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 16), v58);
    v15 = (v14 >> 21) & 7;
    if (v15)
    {
      if (v15 == 1)
      {
        sub_1A552316C(v58, v59);
        if (sub_1A5523B90((uint64_t)v59) == 9)
        {
          v16 = sub_1A5524678((uint64_t)v59);
          if ((*(unsigned int *)(v2 + 8) | ((unint64_t)*(unsigned int *)(v2 + 8) << 32)) == (*(unsigned int *)(v16 + 8) | ((unint64_t)*(unsigned int *)(v16 + 8) << 32)))
          {
            v17 = *(_QWORD *)(v16 + 16);
            v18 = *(_BYTE *)(v16 + 24);
            if (sub_1A54FF30C(*(_QWORD *)v2, *(_QWORD *)v16) && (v18 & 1) == 0)
            {
              *(_QWORD *)(v2 + 104) = v17;
              *(_BYTE *)(v2 + 112) = 0;
            }
          }
        }
      }
    }
    else
    {
      sub_1A5523B9C(v58, sub_1A586238C);
      sub_1A58D0C90(v58);
      sub_1A5523B9C(v58, sub_1A5862784);
    }
    return;
  }
  v19 = *(unsigned int *)(a1 + 16);
  v20 = *(_DWORD *)(a1 + 20);
  v21 = (v14 >> 21) & 7;
  if (!v21)
  {
    if (__PAIR64__(v20, v19) == v13)
    {
      v35 = *(_QWORD *)(a1 + 24);
      v36 = *(_QWORD *)(a1 + 32);
      v37 = *(_QWORD *)(a1 + 40);
      v38 = *(_BYTE *)(a1 + 48);
      sub_1A5892368(v35, v36, v37, v38);
      sub_1A58D0EC0(v35, v36, v37, v38);
      sub_1A58921EC(v35, v36, v37, v38);
      return;
    }
    goto LABEL_19;
  }
  if (v21 != 1 || (_DWORD)v19 != (_DWORD)v13 || v20 != HIDWORD(v13))
  {
LABEL_19:
    v56 = *(unsigned int *)(a1 + 20);
    v57 = v19;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, a2, v8, v10);
    sub_1A585F8E4(a2, (uint64_t)v7);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v24 = sub_1A594A74C();
    v25 = sub_1A594C030();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v27 = swift_slowAlloc();
      v55 = v26;
      v28 = v27;
      v54 = swift_slowAlloc();
      v59[0] = v54;
      *(_DWORD *)v28 = 68158466;
      LODWORD(v58[0]) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v28 + 8) = 256;
      v29 = &v7[*(int *)(v5 + 20)];
      LOBYTE(v58[0]) = *v29;
      sub_1A594C3CC();
      *(_WORD *)(v28 + 11) = 2082;
      v30 = ConnectionID.debugDescription.getter(*((unsigned int *)v29 + 1));
      v58[0] = sub_1A589167C(v30, v31, v59);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A585FAB0((uint64_t)v7);
      *(_WORD *)(v28 + 21) = 2082;
      v32 = Tag.debugDescription.getter(v57 | (unint64_t)(v56 << 32));
      v58[0] = sub_1A589167C(v32, v33, v59);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v24, (os_log_type_t)v55, "[%.*hhx-%{public}s] Received command completion for command '%{public}s' unrelated to mailbox selection.", (uint8_t *)v28, 0x1Fu);
      v34 = v54;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v34, -1, -1);
      MEMORY[0x1A85B1964](v28, -1, -1);
    }
    else
    {
      sub_1A585FAB0((uint64_t)v7);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return;
  }
  v39 = *(_QWORD *)(v2 + 96);
  if (v39 && (*(_BYTE *)(v2 + 112) & 1) == 0)
  {
    v40 = *(_QWORD *)(v2 + 104);
    v41 = *(unsigned int *)(v2 + 8);
    v42 = *(_QWORD *)(v2 + 128);
    v43 = *(_QWORD *)(v2 + 152);
    v44 = *(unsigned __int8 *)(v2 + 160);
    v45 = 0x100000000;
    if (*(_BYTE *)(v2 + 120))
      v46 = 0x100000000;
    else
      v46 = 0;
    v47 = v46 | *(unsigned int *)(v2 + 116);
    if (*(_BYTE *)(v2 + 140))
      v48 = 0x100000000;
    else
      v48 = 0;
    v49 = v48 | *(unsigned int *)(v2 + 136);
    if (!*(_BYTE *)(v2 + 148))
      v45 = 0;
    v50 = v45 | *(unsigned int *)(v2 + 144);
    if (*(_BYTE *)(v2 + 161))
      v51 = 256;
    else
      v51 = 0;
    if (*(_BYTE *)(v2 + 91))
      v52 = 65;
    else
      v52 = 64;
    *(_QWORD *)(v2 + 16) = *(_QWORD *)v2;
    *(_QWORD *)(v2 + 24) = v41;
    *(_QWORD *)(v2 + 32) = v39;
    *(_QWORD *)(v2 + 40) = v40;
    *(_QWORD *)(v2 + 48) = v47;
    *(_QWORD *)(v2 + 56) = v42;
    *(_QWORD *)(v2 + 64) = v49;
    *(_QWORD *)(v2 + 72) = v50;
    *(_QWORD *)(v2 + 80) = v43;
    *(_BYTE *)(v2 + 90) = v52;
    *(_WORD *)(v2 + 88) = v44 | v51;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)(v2 + 24) = 0;
    *(_QWORD *)(v2 + 32) = 0;
    *(_QWORD *)(v2 + 40) = 255;
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
    *(_QWORD *)(v2 + 80) = 0;
    *(_BYTE *)(v2 + 90) = 96;
    *(_WORD *)(v2 + 88) = 0;
  }
}

uint64_t sub_1A58D0AC8(_OWORD *a1, _OWORD *a2)
{
  char v3;
  _OWORD v5[5];
  _OWORD v6[5];

  sub_1A58D17DC(a1, v5);
  sub_1A58D17DC(a2, v6);
  sub_1A58D11CC(v5, v6);
  return v3 & 1;
}

BOOL sub_1A58D0B10(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;

  v2 = *(unsigned __int8 *)(a1 + 24);
  v3 = *(unsigned __int8 *)(a2 + 24);
  if (v2 == 255 || v3 == 255)
    return (v2 & v3) == 255;
  v5 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)a1;
  sub_1A5892354(*(_QWORD *)a1, v8, v7, v2);
  sub_1A5892354(v6, v5, v4, v3);
  v10 = static CommandCompletionResponse.__derived_enum_equals(_:_:)(v9, v8, v7, v2, v6, v5, v4, v3);
  sub_1A58921D8(v6, v5, v4, v3);
  sub_1A58921D8(v9, v8, v7, v2);
  return v10;
}

uint64_t sub_1A58D0C00(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  char v12;
  _OWORD v14[10];
  __int16 v15;
  _OWORD v16[10];
  __int16 v17;

  v2 = *(_OWORD *)(a1 + 144);
  v14[8] = *(_OWORD *)(a1 + 128);
  v14[9] = v2;
  v15 = *(_WORD *)(a1 + 160);
  v3 = *(_OWORD *)(a1 + 80);
  v14[4] = *(_OWORD *)(a1 + 64);
  v14[5] = v3;
  v4 = *(_OWORD *)(a1 + 112);
  v14[6] = *(_OWORD *)(a1 + 96);
  v14[7] = v4;
  v5 = *(_OWORD *)(a1 + 16);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v5;
  v6 = *(_OWORD *)(a1 + 48);
  v14[2] = *(_OWORD *)(a1 + 32);
  v14[3] = v6;
  v7 = *(_OWORD *)(a2 + 144);
  v16[8] = *(_OWORD *)(a2 + 128);
  v16[9] = v7;
  v17 = *(_WORD *)(a2 + 160);
  v8 = *(_OWORD *)(a2 + 80);
  v16[4] = *(_OWORD *)(a2 + 64);
  v16[5] = v8;
  v9 = *(_OWORD *)(a2 + 112);
  v16[6] = *(_OWORD *)(a2 + 96);
  v16[7] = v9;
  v10 = *(_OWORD *)(a2 + 16);
  v16[0] = *(_OWORD *)a2;
  v16[1] = v10;
  v11 = *(_OWORD *)(a2 + 48);
  v16[2] = *(_OWORD *)(a2 + 32);
  v16[3] = v11;
  sub_1A58D15C4((uint64_t)v14, (uint64_t)v16);
  return v12 & 1;
}

unsigned int *sub_1A58D0C90(const void *a1)
{
  uint64_t v1;
  unsigned int *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[576];
  _BYTE v10[584];
  _BYTE v11[584];
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE v17[584];

  sub_1A552316C(a1, v10);
  sub_1A552316C(v10, v17);
  sub_1A552316C(a1, v11);
  result = (unsigned int *)sub_1A5523B90((uint64_t)v11);
  switch((int)result)
  {
    case 0:
      v4 = sub_1A5524678((uint64_t)v11);
      v5 = *(_QWORD *)(v4 + 16);
      *(_OWORD *)v9 = *(_OWORD *)v4;
      *(_QWORD *)&v9[16] = v5;
      sub_1A58D1898((uint64_t)v9, (uint64_t)&v12);
      result = (unsigned int *)sub_1A58D1898((uint64_t)&v12, (uint64_t)&v14);
      if ((~v14 & 0xF000000000000007) != 0)
      {
        sub_1A561EA1C(&v14, &v15);
        result = (unsigned int *)sub_1A561EA1C(&v15, &v16);
        switch((v16 >> 59) & 0x1E | (v16 >> 2) & 1)
        {
          case 2uLL:
            v16 &= 0xFFFFFFFFFFFFFFBuLL;
            v13 = *(_OWORD *)&v9[8];
            sub_1A5524B84((uint64_t)&v13);
            sub_1A58D18E0(&v12);
            v6 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v7 = sub_1A58B62BC(v6);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A58D1908(&v12);
            result = (unsigned int *)sub_1A5503278((uint64_t)&v13);
            *(_QWORD *)(v1 + 128) = v7;
            break;
          case 3uLL:
            *(_DWORD *)(v1 + 136) = *(_DWORD *)((v16 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
            *(_BYTE *)(v1 + 140) = 0;
            break;
          case 4uLL:
            *(_DWORD *)(v1 + 144) = *(_DWORD *)((v16 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
            *(_BYTE *)(v1 + 148) = 0;
            break;
          case 5uLL:
            *(_DWORD *)(v1 + 116) = *(_DWORD *)((v16 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
            *(_BYTE *)(v1 + 120) = 0;
            break;
          case 0xBuLL:
            *(_QWORD *)(v1 + 152) = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
            *(_WORD *)(v1 + 160) = 0;
            break;
          case 0x10uLL:
            if (v16 == 0x8000000000000050)
            {
              *(_QWORD *)(v1 + 152) = 0;
              *(_WORD *)(v1 + 160) = 1;
            }
            break;
          default:
            return result;
        }
      }
      break;
    case 13:
      v8 = *(_QWORD *)sub_1A5524678((uint64_t)v11);
      sub_1A552316C(v17, v9);
      sub_1A5524678((uint64_t)v9);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      result = (unsigned int *)swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 96) = v8;
      break;
    case 14:
      result = (unsigned int *)sub_1A5524678((uint64_t)v11);
      *(_QWORD *)(v1 + 104) = *result;
      *(_BYTE *)(v1 + 112) = 0;
      break;
    case 15:
      result = (unsigned int *)sub_1A5524678((uint64_t)v11);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A58D0EC0(unint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t *v4;
  uint64_t *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t result;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  if (a4)
  {
    v9 = *((unsigned __int16 *)v4 + 44);
    v8 = v4 + 11;
    v51 = a4;
    v10 = *(v8 - 7);
    v47 = *(v8 - 8);
    v49 = *(v8 - 9);
    v11 = *(v8 - 6);
    v12 = *(v8 - 5);
    v13 = *(v8 - 4);
    v14 = *(v8 - 1);
    v43 = *(v8 - 2);
    v45 = *(v8 - 3);
    v15 = v9 | (*((unsigned __int8 *)v8 + 2) << 16);
    sub_1A5892368(a1, a2, a3, a4);
    result = sub_1A5892174(v49, v47, v10, v11, v12, v13, v45, v43, v14, v15);
    *(v8 - 9) = a1;
    *(v8 - 8) = a2;
    *(v8 - 7) = a3;
    v17 = v51;
LABEL_3:
    *(v8 - 6) = v17;
    *(_OWORD *)(v8 - 5) = 0u;
    *(_OWORD *)(v8 - 3) = 0u;
    *(v8 - 1) = 0;
    v18 = 96;
LABEL_4:
    *((_BYTE *)v8 + 2) = v18;
    *(_WORD *)v8 = 0;
    return result;
  }
  if ((~a1 & 0xF000000000000007) != 0 && ((a1 >> 59) & 0x1E | (a1 >> 2) & 1) == 0x10)
  {
    if (a1 == 0x8000000000000018)
    {
      v19 = 1;
    }
    else
    {
      if (a1 != 0x8000000000000020)
        goto LABEL_12;
      v19 = 0;
    }
    *((_BYTE *)v4 + 91) = v19;
  }
LABEL_12:
  v20 = v4[12];
  if (!v20)
  {
    v22 = *((unsigned __int16 *)v4 + 44);
    v8 = v4 + 11;
    result = sub_1A5892174(*(v8 - 9), *(v8 - 8), *(v8 - 7), *(v8 - 6), *(v8 - 5), *(v8 - 4), *(v8 - 3), *(v8 - 2), *(v8 - 1), v22 | (*((unsigned __int8 *)v8 + 2) << 16));
    *(v8 - 9) = 0;
    *(v8 - 8) = 0;
    v17 = 255;
    *(v8 - 7) = 0;
    goto LABEL_3;
  }
  if ((v4[14] & 1) != 0)
  {
    v21 = *((unsigned __int16 *)v4 + 44);
    v8 = v4 + 11;
    result = sub_1A5892174(*(v8 - 9), *(v8 - 8), *(v8 - 7), *(v8 - 6), *(v8 - 5), *(v8 - 4), *(v8 - 3), *(v8 - 2), *(v8 - 1), v21 | (*((unsigned __int8 *)v8 + 2) << 16));
    *(v8 - 9) = 1;
    *((_OWORD *)v8 - 4) = 0u;
    *((_OWORD *)v8 - 3) = 0u;
    *((_OWORD *)v8 - 2) = 0u;
    *((_OWORD *)v8 - 1) = 0u;
    v18 = 0x80;
    goto LABEL_4;
  }
  v52 = v4[13];
  v23 = *v4;
  v50 = *((unsigned int *)v4 + 2);
  v39 = v4[16];
  v48 = v4[19];
  if (*((_BYTE *)v4 + 120))
    v24 = 0x100000000;
  else
    v24 = 0;
  v46 = v24 | *((unsigned int *)v4 + 29);
  if (*((_BYTE *)v4 + 140))
    v25 = 0x100000000;
  else
    v25 = 0;
  v44 = v25 | *((unsigned int *)v4 + 34);
  if (*((_BYTE *)v4 + 148))
    v26 = 0x100000000;
  else
    v26 = 0;
  v42 = v26 | *((unsigned int *)v4 + 36);
  if (*((_BYTE *)v4 + 161))
    v27 = 256;
  else
    v27 = 0;
  if (*((_BYTE *)v4 + 91))
    v28 = 65;
  else
    v28 = 64;
  v40 = v28;
  v41 = *((unsigned __int8 *)v4 + 160) | v27;
  v29 = v4[4];
  v37 = v4[3];
  v38 = v4[2];
  v30 = v4[5];
  v31 = v4[6];
  v32 = v4[7];
  v33 = v4[10];
  v35 = v4[9];
  v36 = v4[8];
  v34 = *((unsigned __int16 *)v4 + 44) | (*((unsigned __int8 *)v4 + 90) << 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A5892174(v38, v37, v29, v30, v31, v32, v36, v35, v33, v34);
  v4[2] = v23;
  v4[3] = v50;
  v4[4] = v20;
  v4[5] = v52;
  v4[6] = v46;
  v4[7] = v39;
  v4[8] = v44;
  v4[9] = v42;
  v4[10] = v48;
  *((_BYTE *)v4 + 90) = v40;
  *((_WORD *)v4 + 44) = v41;
  return result;
}

void sub_1A58D11CC(_OWORD *a1, _OWORD *a2)
{
  __int128 v3;
  _OWORD v4[4];

  sub_1A58D17DC(a2, &v3);
  sub_1A58D17DC(a1, v4);
  __asm { BR              X11 }
}

BOOL sub_1A58D124C@<W0>(int a1@<W8>)
{
  _OWORD *v1;
  int v2;
  int v3;
  uint64_t v4;

  *(_WORD *)(v4 - 184) = a1;
  *(_BYTE *)(v4 - 182) = BYTE2(a1) & 0x1F;
  sub_1A58D17DC(v1, (_OWORD *)(v4 - 176));
  return ((*(unsigned __int8 *)(v4 - 102) << 16) & 0xE00000) == 0
      && *(_DWORD *)(v4 - 176) == v2
      && *(_DWORD *)(v4 - 172) == v3;
}

void sub_1A58D15C4(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  _OWORD v15[5];
  _OWORD v16[5];

  if ((*(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned int *)(a1 + 8) << 32)) != (*(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned int *)(a2 + 8) << 32)))
    return;
  if (!sub_1A54FF30C(*(_QWORD *)a1, *(_QWORD *)a2))
    return;
  sub_1A58D17DC((_OWORD *)(a1 + 16), v16);
  sub_1A58D17DC((_OWORD *)(a2 + 16), v15);
  sub_1A58D11CC(v16, v15);
  if ((v4 & 1) == 0 || ((*(unsigned __int8 *)(a1 + 91) ^ *(unsigned __int8 *)(a2 + 91)) & 1) != 0)
    return;
  v5 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96))
  {
    if (!v5)
      return;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v6 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v7 = sub_1A54ED500(v6, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      return;
  }
  else if (v5)
  {
    return;
  }
  v8 = *(_BYTE *)(a2 + 112);
  if ((*(_BYTE *)(a1 + 112) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 112))
      return;
  }
  else
  {
    if (*(_QWORD *)(a1 + 104) != *(_QWORD *)(a2 + 104))
      v8 = 1;
    if ((v8 & 1) != 0)
      return;
  }
  v9 = *(_BYTE *)(a2 + 120);
  if ((*(_BYTE *)(a1 + 120) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 120))
      return;
  }
  else
  {
    if (*(_DWORD *)(a2 + 116) != *(_DWORD *)(a1 + 116))
      v9 = 1;
    if ((v9 & 1) != 0)
      return;
  }
  v10 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128))
  {
    if (!v10)
      return;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v11 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v12 = sub_1A5895080(v11, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      return;
  }
  else if (v10)
  {
    return;
  }
  v13 = *(_BYTE *)(a2 + 140);
  if ((*(_BYTE *)(a1 + 140) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 140))
      return;
  }
  else
  {
    if (*(_DWORD *)(a2 + 136) != *(_DWORD *)(a1 + 136))
      v13 = 1;
    if ((v13 & 1) != 0)
      return;
  }
  v14 = *(_BYTE *)(a2 + 148);
  if ((*(_BYTE *)(a1 + 148) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 148))
      return;
    goto LABEL_40;
  }
  if (*(_DWORD *)(a1 + 144) != *(_DWORD *)(a2 + 144))
    v14 = 1;
  if ((v14 & 1) == 0)
  {
LABEL_40:
    if ((*(_BYTE *)(a1 + 161) & 1) == 0
      && (*(_BYTE *)(a2 + 161) & 1) == 0
      && (*(_BYTE *)(a1 + 160) & 1) == 0
      && (*(_BYTE *)(a2 + 160) & 1) == 0
      && ((*(_QWORD *)(a2 + 152) | *(_QWORD *)(a1 + 152)) & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
  }
}

_OWORD *sub_1A58D17DC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  *a2 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *(_OWORD *)((char *)a2 + 59) = *(_OWORD *)((char *)a1 + 59);
  a2[2] = v3;
  a2[3] = v4;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1A58D1804(uint64_t a1, uint64_t a2)
{
  __swift_memcpy25_8_1(a2, a1);
  return a2;
}

uint64_t sub_1A58D1840(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(unsigned __int16 *)(a1 + 72) | (*(unsigned __int8 *)(a1 + 74) << 16));
  return a1;
}

uint64_t sub_1A58D1898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t *sub_1A58D18E0(unint64_t *a1)
{
  sub_1A5862270(*a1);
  return a1;
}

unint64_t *sub_1A58D1908(unint64_t *a1)
{
  sub_1A5862B80(*a1);
  return a1;
}

unint64_t destroy for MailboxSelectionState.Error(unint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 24);
  if (v1 <= 2)
    return sub_1A58921EC(*(_QWORD *)result, *(_QWORD *)(result + 8), *(_QWORD *)(result + 16), v1);
  return result;
}

uint64_t initializeWithCopy for MailboxSelectionState.Error(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *((unsigned __int8 *)a2 + 24);
  if (v3 > 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  }
  else
  {
    v4 = *a2;
    v5 = a2[1];
    v6 = a2[2];
    sub_1A5892368(*a2, v5, v6, v3);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v6;
    *(_BYTE *)(a1 + 24) = v3;
  }
  return a1;
}

uint64_t assignWithCopy for MailboxSelectionState.Error(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v4 = *(unsigned __int8 *)(a1 + 24);
  v5 = *((unsigned __int8 *)a2 + 24);
  if (v4 > 2)
  {
    if (v5 <= 2)
    {
      v13 = *(_QWORD *)a2;
      v14 = *((_QWORD *)a2 + 1);
      v15 = *((_QWORD *)a2 + 2);
      sub_1A5892368(*(_QWORD *)a2, v14, v15, v5);
      *(_QWORD *)a1 = v13;
      *(_QWORD *)(a1 + 8) = v14;
      *(_QWORD *)(a1 + 16) = v15;
      *(_BYTE *)(a1 + 24) = v5;
      return a1;
    }
LABEL_7:
    v16 = *a2;
    *(_OWORD *)(a1 + 9) = *(__int128 *)((char *)a2 + 9);
    *(_OWORD *)a1 = v16;
    return a1;
  }
  if (v5 > 2)
  {
    sub_1A58921EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), v4);
    goto LABEL_7;
  }
  v6 = *(_QWORD *)a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  sub_1A5892368(*(_QWORD *)a2, v7, v8, v5);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  v12 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  sub_1A58921EC(v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy25_8_3(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MailboxSelectionState.Error(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 > 2)
    goto LABEL_5;
  v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 > 2)
  {
    sub_1A58921EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    return a1;
  }
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v5;
  sub_1A58921EC(v7, v8, v9, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxSelectionState.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  if (v4 + 1 >= 2)
    return v4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MailboxSelectionState.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = ~(_BYTE)a2;
  }
  return result;
}

uint64_t sub_1A58D1BC4(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 24);
  if (v1 > 2)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1A58D1BD8(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxSelectionState.Error()
{
  return &type metadata for MailboxSelectionState.Error;
}

uint64_t destroy for MailboxSelectionState.State(uint64_t a1)
{
  return sub_1A5892174(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(unsigned __int16 *)(a1 + 72) | (*(unsigned __int8 *)(a1 + 74) << 16));
}

uint64_t initializeWithCopy for MailboxSelectionState.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v13;
  int v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(unsigned __int8 *)(a2 + 74);
  v14 = *(unsigned __int16 *)(a2 + 72);
  sub_1A58922E8(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v14 | (v13 << 16));
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 74) = v13;
  *(_WORD *)(a1 + 72) = v14;
  return a1;
}

uint64_t assignWithCopy for MailboxSelectionState.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v23;
  int v24;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v23 = *(_QWORD *)(a2 + 64);
  v24 = *(unsigned __int8 *)(a2 + 74);
  v11 = *(unsigned __int16 *)(a2 + 72);
  sub_1A58922E8(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v23, v11 | (v24 << 16));
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(unsigned __int16 *)(a1 + 72) | (*(unsigned __int8 *)(a1 + 74) << 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v23;
  *(_WORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 74) = v24;
  sub_1A5892174(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

__n128 __swift_memcpy75_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 59) = *(_OWORD *)(a2 + 59);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for MailboxSelectionState.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  __int128 v16;
  __int128 v17;

  v3 = *(_QWORD *)(a2 + 64);
  v4 = *(_WORD *)(a2 + 72);
  v5 = *(_BYTE *)(a2 + 74);
  v6 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a1 + 64);
  v15 = *(unsigned __int16 *)(a1 + 72) | (*(unsigned __int8 *)(a1 + 74) << 16);
  v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 64) = v3;
  *(_BYTE *)(a1 + 74) = v5;
  *(_WORD *)(a1 + 72) = v4;
  sub_1A5892174(v6, v8, v7, v9, v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxSelectionState.State(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 75))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = (*(_QWORD *)(a1 + 48) >> 2) & 0x80000000 | (*(_QWORD *)(a1 + 32) >> 33);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for MailboxSelectionState.State(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 74) = 0;
    *(_WORD *)(a1 + 72) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 75) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 32) = (unint64_t)-a2 << 33;
      result = 0.0;
      *(_OWORD *)(a1 + 40) = xmmword_1A59DC760;
      *(_QWORD *)(a1 + 56) = 0;
      *(_QWORD *)(a1 + 64) = 0;
      *(_DWORD *)(a1 + 71) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 75) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A58D1F88(uint64_t a1)
{
  if ((*(unsigned __int16 *)(a1 + 72) | (*(unsigned __int8 *)(a1 + 74) << 16)) << 8 >> 8 >= 0)
    return *(unsigned __int8 *)(a1 + 74) >> 5;
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1A58D1FB0(uint64_t a1)
{
  uint64_t result;
  int v2;

  v2 = *(unsigned __int16 *)(a1 + 72);
  result = a1 + 72;
  *(_BYTE *)(result + 2) = ((v2 | (*(unsigned __int8 *)(result + 2) << 16)) >> 16) & 0x1F;
  *(_WORD *)result = v2;
  return result;
}

int8x16_t sub_1A58D1FCC(uint64_t a1, unsigned int a2)
{
  int8x16_t result;
  uint64_t v3;
  int v4;
  int v5;

  if (a2 < 4)
  {
    v4 = *(unsigned __int16 *)(a1 + 72);
    v3 = a1 + 72;
    v5 = (v4 | (*(unsigned __int8 *)(v3 + 2) << 16)) & 0x101FF;
    *(_QWORD *)(v3 - 40) &= 0x1FFFFFFFFuLL;
    result = vandq_s8(*(int8x16_t *)(v3 - 24), (int8x16_t)vdupq_n_s64(0x1FFFFFFFFuLL));
    *(int8x16_t *)(v3 - 24) = result;
    *(_WORD *)v3 = v5;
    *(_BYTE *)(v3 + 2) = (v5 | (a2 << 21)) >> 16;
  }
  else
  {
    *(_QWORD *)a1 = a2 - 4;
    result.i64[0] = 0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_BYTE *)(a1 + 74) = 0x80;
    *(_WORD *)(a1 + 72) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxSelectionState.State()
{
  return &type metadata for MailboxSelectionState.State;
}

uint64_t destroy for MailboxSelectionState(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1A5892174(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MailboxSelectionState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 24);
  v15 = *(unsigned __int8 *)(a2 + 90);
  v16 = *(unsigned __int16 *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A58922E8(v4, v14, v5, v6, v7, v8, v9, v13, v10, v16 | (v15 << 16));
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v14;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v10;
  *(_BYTE *)(a1 + 90) = v15;
  *(_WORD *)(a1 + 88) = v16;
  *(_BYTE *)(a1 + 91) = *(_BYTE *)(a2 + 91);
  v11 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v11;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  LODWORD(v11) = *(_DWORD *)(a2 + 116);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_DWORD *)(a1 + 116) = v11;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 140) = *(_BYTE *)(a2 + 140);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 148) = *(_BYTE *)(a2 + 148);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MailboxSelectionState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  int v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v27 = *(_QWORD *)(a2 + 16);
  v28 = *(_QWORD *)(a2 + 80);
  v29 = *(unsigned __int8 *)(a2 + 90);
  v11 = *(unsigned __int16 *)(a2 + 88);
  sub_1A58922E8(v27, v4, v5, v6, v7, v8, v9, v10, v28, v11 | (v29 << 16));
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 80);
  v21 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  *(_QWORD *)(a1 + 16) = v27;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v28;
  *(_WORD *)(a1 + 88) = v11;
  *(_BYTE *)(a1 + 90) = v29;
  sub_1A5892174(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  *(_BYTE *)(a1 + 91) = *(_BYTE *)(a2 + 91);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v22;
  LOBYTE(v22) = *(_BYTE *)(a2 + 120);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_BYTE *)(a1 + 120) = v22;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v23 = *(_DWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 140) = *(_BYTE *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = v23;
  v24 = *(_DWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 148) = *(_BYTE *)(a2 + 148);
  *(_DWORD *)(a1 + 144) = v24;
  v25 = *(_QWORD *)(a2 + 152);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = v25;
  return a1;
}

uint64_t assignWithTake for MailboxSelectionState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int16 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  __int128 v17;
  __int128 v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 80);
  v5 = *(_WORD *)(a2 + 88);
  v6 = *(_BYTE *)(a2 + 90);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a1 + 80);
  v16 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  v17 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v17;
  v18 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v18;
  *(_QWORD *)(a1 + 80) = v4;
  *(_BYTE *)(a1 + 90) = v6;
  *(_WORD *)(a1 + 88) = v5;
  sub_1A5892174(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  *(_BYTE *)(a1 + 91) = *(_BYTE *)(a2 + 91);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 140) = *(_BYTE *)(a2 + 140);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 148) = *(_BYTE *)(a2 + 148);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxSelectionState(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 162))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxSelectionState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 160) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 162) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 162) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxSelectionState()
{
  return &type metadata for MailboxSelectionState;
}

uint64_t sub_1A58D257C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A58D6374(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = &v5[5 * a1];
      v10 = v9[4];
      v9 += 4;
      v11 = v9[4];
      v12 = *((_BYTE *)v9 + 24);
      v14 = v9[1];
      v13 = v9[2];
      result = (uint64_t)memmove(v9, v9 + 5, 40 * v8);
      v5[2] = v7;
      *v2 = v5;
      *(_QWORD *)a2 = v10;
      *(_QWORD *)(a2 + 8) = v14;
      *(_QWORD *)(a2 + 16) = v13;
      *(_BYTE *)(a2 + 24) = v12;
      *(_QWORD *)(a2 + 32) = v11;
      return result;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58D2688@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A58D6388(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = *(_QWORD *)(_s19CommandOutputBufferV7ElementOMa(0) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  result = sub_1A58D722C(v10, a2);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = sub_1A594CA68();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

uint64_t sub_1A58D27BC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int v10;
  char v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A58D63BC(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = &v5[5 * a1];
      v10 = *((_DWORD *)v9 + 8);
      v9 += 4;
      v11 = *((_BYTE *)v9 + 32);
      v12 = v9[3];
      v13 = *((_DWORD *)v9 + 4);
      v14 = v9[1];
      result = (uint64_t)memmove(v9, v9 + 5, 40 * v8);
      v5[2] = v7;
      *v2 = v5;
      *(_DWORD *)a2 = v10;
      *(_QWORD *)(a2 + 8) = v14;
      *(_DWORD *)(a2 + 16) = v13;
      *(_QWORD *)(a2 + 24) = v12;
      *(_BYTE *)(a2 + 32) = v11;
      return result;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58D28D0@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  __int128 v9;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A58D6360(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = &v5[6 * a1];
    v9 = v8[3];
    *a2 = v8[2];
    a2[1] = v9;
    a2[2] = v8[4];
    if ((uint64_t)(v7 - a1) >= 0)
    {
      result = (uint64_t)memmove(v8 + 2, v8 + 5, 48 * (v7 - a1));
      v5[2] = v7;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

IMAP2Connection::MailboxesSelectionUsage __swiftcall MailboxesSelectionUsage.init()()
{
  return (IMAP2Connection::MailboxesSelectionUsage)MEMORY[0x1E0DEE9D8];
}

uint64_t MailboxesSelectionUsage.subscript.getter(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_DWORD *)(a2 + 32) == (_DWORD)result)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v2 == 1)
    return 0;
  v3 = a2 + 104;
  for (i = 1; ; ++i)
  {
    v5 = i + 1;
    if (__OFADD__(i, 1))
      break;
    if (*(_DWORD *)(v3 - 32) == (_DWORD)result)
      return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v3 += 40;
    if (v5 == v2)
      return 0;
  }
  __break(1u);
  return result;
}

uint64_t MailboxesSelectionUsage.sortedIdleConnections(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  uint64_t v21;

  v0 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v1 = sub_1A58D6D48(v0, (uint64_t (*)(uint64_t, _QWORD))sub_1A58D3478);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v4 = (unsigned __int8 *)(v1 + 56);
    do
    {
      v8 = *((_QWORD *)v4 - 1);
      v9 = *v4;
      if (v9 != 1 || v8 == 0)
      {
        v11 = *((_QWORD *)v4 - 3);
        v12 = *((_DWORD *)v4 - 4);
        v21 = v3;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A58BF84C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v21;
        }
        v6 = *(_QWORD *)(v3 + 16);
        v5 = *(_QWORD *)(v3 + 24);
        if (v6 >= v5 >> 1)
        {
          sub_1A58BF84C(v5 > 1, v6 + 1, 1);
          v3 = v21;
        }
        *(_QWORD *)(v3 + 16) = v6 + 1;
        v7 = v3 + 32 * v6;
        *(_QWORD *)(v7 + 32) = v11;
        *(_DWORD *)(v7 + 40) = v12;
        *(_QWORD *)(v7 + 48) = v8;
        *(_BYTE *)(v7 + 56) = v9;
      }
      v4 += 32;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  v21 = v3;
  swift_retain();
  sub_1A5840160(&v21, sub_1A58EA2E4, sub_1A58D49F8);
  swift_release();
  v13 = v21;
  v14 = *(_QWORD *)(v21 + 16);
  if (v14)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1A58BF830(0, v14, 0);
    v15 = v21;
    v16 = *(_QWORD *)(v21 + 16);
    v17 = 40;
    do
    {
      v18 = *(_DWORD *)(v13 + v17);
      v21 = v15;
      v19 = *(_QWORD *)(v15 + 24);
      if (v16 >= v19 >> 1)
      {
        sub_1A58BF830(v19 > 1, v16 + 1, 1);
        v15 = v21;
      }
      *(_QWORD *)(v15 + 16) = v16 + 1;
      *(_DWORD *)(v15 + 4 * v16 + 32) = v18;
      v17 += 32;
      ++v16;
      --v14;
    }
    while (v14);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  return v15;
}

uint64_t MailboxSelectionUsage.Priority.rawValue.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*MailboxSelectionUsage.Priority.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL static MailboxSelectionUsage.Priority.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

void *MailboxSelectionUsage.Priority.max.unsafeMutableAddressor()
{
  return &static MailboxSelectionUsage.Priority.max;
}

uint64_t static MailboxSelectionUsage.Priority.max.getter()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

BOOL sub_1A58D2CFC(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

BOOL sub_1A58D2D10(_QWORD *a1, _QWORD *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1A58D2D24(_QWORD *a1, _QWORD *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1A58D2D38(_QWORD *a1, _QWORD *a2)
{
  return *a2 < *a1;
}

uint64_t MailboxSelectionUsage.isActive.getter(uint64_t a1, unsigned __int8 a2)
{
  return a2 & (a1 != 0);
}

BOOL static MailboxSelectionUsage.__derived_enum_less_than(_:_:)(uint64_t a1, char a2, unint64_t a3, char a4)
{
  unint64_t v5;
  unint64_t v6;

  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) == 0)
      return a1 < (uint64_t)a3;
    v5 = 1;
LABEL_18:
    v6 = 2;
    if (a3 != 1)
      v6 = 3;
    if (!a3)
      v6 = 0;
    return v5 < v6;
  }
  if (a1)
  {
    if (a1 == 1)
    {
      v5 = 2;
      if ((a4 & 1) != 0 && a3 == 1)
        return 0;
    }
    else
    {
      v5 = 3;
      if ((a4 & 1) != 0 && a3 > 1)
        return 0;
    }
  }
  else
  {
    v5 = 0;
    if ((a4 & 1) != 0 && !a3)
      return 0;
  }
  if ((a4 & 1) != 0)
    goto LABEL_18;
  v6 = 1;
  return v5 < v6;
}

BOOL static MailboxSelectionUsage.__derived_enum_equals(_:_:)(uint64_t a1, char a2, unint64_t a3, char a4)
{
  if ((a2 & 1) != 0)
  {
    if (a1)
    {
      if (a1 == 1)
      {
        if ((a4 & 1) != 0 && a3 == 1)
          return 1;
      }
      else if ((a4 & 1) != 0 && a3 > 1)
      {
        return 1;
      }
    }
    else if ((a4 & 1) != 0 && !a3)
    {
      return 1;
    }
  }
  else if ((a4 & 1) == 0)
  {
    return a1 == a3;
  }
  return 0;
}

BOOL sub_1A58D2E58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  char v7;
  int v8;
  uint64_t v9;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)a2;
  if (*(_BYTE *)(a1 + 8) != 1)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return v2 < (uint64_t)v3;
    v5 = 1;
    goto LABEL_25;
  }
  if (!v2)
  {
    if (v3)
      v7 = 0;
    else
      v7 = *(_BYTE *)(a2 + 8);
    if ((v7 & 1) != 0)
      return 0;
    v5 = 0;
    if (!*(_BYTE *)(a2 + 8))
      goto LABEL_18;
    goto LABEL_25;
  }
  if (v2 != 1)
  {
    if (v3 > 1)
      v8 = *(unsigned __int8 *)(a2 + 8);
    else
      v8 = 0;
    if (v8 == 1)
      return 0;
    v5 = 3;
    if (!*(_BYTE *)(a2 + 8))
      goto LABEL_18;
LABEL_25:
    v9 = 2;
    if (v3 != 1)
      v9 = 3;
    if (v3)
      v3 = v9;
    return v5 < v3;
  }
  if (v3 == 1)
    v4 = *(_BYTE *)(a2 + 8);
  else
    v4 = 0;
  if ((v4 & 1) != 0)
    return 0;
  v5 = 2;
  if (*(_BYTE *)(a2 + 8))
    goto LABEL_25;
LABEL_18:
  v3 = 1;
  return v5 < v3;
}

BOOL sub_1A58D2F0C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  char v7;
  int v8;
  uint64_t v9;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)a2;
  if (*(_BYTE *)(a2 + 8) != 1)
  {
    if ((*(_BYTE *)(a1 + 8) & 1) == 0)
      return v3 >= (uint64_t)v2;
    v5 = 1;
    goto LABEL_25;
  }
  if (!v3)
  {
    if (v2)
      v7 = 0;
    else
      v7 = *(_BYTE *)(a1 + 8);
    if ((v7 & 1) != 0)
      return 1;
    v5 = 0;
    if (!*(_BYTE *)(a1 + 8))
      goto LABEL_18;
    goto LABEL_25;
  }
  if (v3 != 1)
  {
    if (v2 > 1)
      v8 = *(unsigned __int8 *)(a1 + 8);
    else
      v8 = 0;
    if (v8 == 1)
      return 1;
    v5 = 3;
    if (!*(_BYTE *)(a1 + 8))
      goto LABEL_18;
LABEL_25:
    v9 = 2;
    if (v2 != 1)
      v9 = 3;
    if (v2)
      v2 = v9;
    return v5 >= v2;
  }
  if (v2 == 1)
    v4 = *(_BYTE *)(a1 + 8);
  else
    v4 = 0;
  if ((v4 & 1) != 0)
    return 1;
  v5 = 2;
  if (*(_BYTE *)(a1 + 8))
    goto LABEL_25;
LABEL_18:
  v2 = 1;
  return v5 >= v2;
}

BOOL sub_1A58D2FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  char v7;
  int v8;
  uint64_t v9;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)a2;
  if (*(_BYTE *)(a1 + 8) != 1)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return v2 >= (uint64_t)v3;
    v5 = 1;
    goto LABEL_25;
  }
  if (!v2)
  {
    if (v3)
      v7 = 0;
    else
      v7 = *(_BYTE *)(a2 + 8);
    if ((v7 & 1) != 0)
      return 1;
    v5 = 0;
    if (!*(_BYTE *)(a2 + 8))
      goto LABEL_18;
    goto LABEL_25;
  }
  if (v2 != 1)
  {
    if (v3 > 1)
      v8 = *(unsigned __int8 *)(a2 + 8);
    else
      v8 = 0;
    if (v8 == 1)
      return 1;
    v5 = 3;
    if (!*(_BYTE *)(a2 + 8))
      goto LABEL_18;
LABEL_25:
    v9 = 2;
    if (v3 != 1)
      v9 = 3;
    if (v3)
      v3 = v9;
    return v5 >= v3;
  }
  if (v3 == 1)
    v4 = *(_BYTE *)(a2 + 8);
  else
    v4 = 0;
  if ((v4 & 1) != 0)
    return 1;
  v5 = 2;
  if (*(_BYTE *)(a2 + 8))
    goto LABEL_25;
LABEL_18:
  v3 = 1;
  return v5 >= v3;
}

BOOL sub_1A58D3084(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  char v7;
  int v8;
  uint64_t v9;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)a2;
  if (*(_BYTE *)(a2 + 8) != 1)
  {
    if ((*(_BYTE *)(a1 + 8) & 1) == 0)
      return v3 < (uint64_t)v2;
    v5 = 1;
    goto LABEL_25;
  }
  if (!v3)
  {
    if (v2)
      v7 = 0;
    else
      v7 = *(_BYTE *)(a1 + 8);
    if ((v7 & 1) != 0)
      return 0;
    v5 = 0;
    if (!*(_BYTE *)(a1 + 8))
      goto LABEL_18;
    goto LABEL_25;
  }
  if (v3 != 1)
  {
    if (v2 > 1)
      v8 = *(unsigned __int8 *)(a1 + 8);
    else
      v8 = 0;
    if (v8 == 1)
      return 0;
    v5 = 3;
    if (!*(_BYTE *)(a1 + 8))
      goto LABEL_18;
LABEL_25:
    v9 = 2;
    if (v2 != 1)
      v9 = 3;
    if (v2)
      v2 = v9;
    return v5 < v2;
  }
  if (v2 == 1)
    v4 = *(_BYTE *)(a1 + 8);
  else
    v4 = 0;
  if ((v4 & 1) != 0)
    return 0;
  v5 = 2;
  if (*(_BYTE *)(a1 + 8))
    goto LABEL_25;
LABEL_18:
  v2 = 1;
  return v5 < v2;
}

BOOL sub_1A58D3138(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  char v6;
  int v7;

  v2 = *a1;
  v3 = *(_QWORD *)a2;
  if (*((_BYTE *)a1 + 8) != 1)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return v2 == v3;
    return 0;
  }
  if (v2)
  {
    if (v2 != 1)
    {
      if (v3 > 1)
        v7 = *(unsigned __int8 *)(a2 + 8);
      else
        v7 = 0;
      return v7 == 1;
    }
    v4 = v3 == 1;
  }
  else
  {
    v4 = v3 == 0;
  }
  if (v4)
    v6 = *(_BYTE *)(a2 + 8);
  else
    v6 = 0;
  return (v6 & 1) != 0;
}

BOOL sub_1A58D31A0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  char v6;
  _OWORD v7[2];
  char v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_BYTE *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_BYTE *)(a2 + 32);
  return sub_1A58D6470((uint64_t)v5, (uint64_t)v7);
}

uint64_t MailboxesSelectionUsage.Value.mailbox.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MailboxesSelectionUsage.Value.mailbox.setter(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)v2 = a1;
  *(_DWORD *)(v2 + 8) = a2;
  return result;
}

double (*MailboxesSelectionUsage.Value.mailbox.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MailboxesSelectionUsage.Value.usage.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t MailboxesSelectionUsage.Value.usage.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

double (*MailboxesSelectionUsage.Value.usage.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL static MailboxesSelectionUsage.Value.__derived_struct_equals(_:_:)(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5, int a6, unint64_t a7, char a8)
{
  return sub_1A58D63D0(a1, a2, a3, a4 & 1, a5, a6, a7, a8 & 1);
}

BOOL sub_1A58D3294(uint64_t a1, uint64_t a2)
{
  return sub_1A58D63D0(*(_QWORD *)a1, *(_DWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_DWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

uint64_t sub_1A58D32C0(uint64_t *a1, uint64_t *a2)
{
  return _s15IMAP2Connection23MailboxesSelectionUsageV23__derived_struct_equalsySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t MailboxesSelectionUsage.count.getter(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

unint64_t MailboxesSelectionUsage.min.getter(uint64_t a1)
{
  _BYTE *v1;
  char v2;
  uint64_t v3;
  unint64_t result;
  unint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  uint64_t v8;

  if (*(_QWORD *)(a1 + 16))
  {
    v1 = (_BYTE *)(a1 + 64);
    v2 = 1;
    v3 = *(_QWORD *)(a1 + 16);
    result = 2;
    while (1)
    {
      v8 = *((_QWORD *)v1 - 1);
      if (*v1 == 1)
      {
        if (v8)
        {
          if (v8 == 1)
          {
            if ((v2 & (result == 1)) == 0)
            {
              v5 = 2;
LABEL_27:
              if ((v2 & 1) != 0)
                goto LABEL_4;
LABEL_30:
              v6 = 1;
              goto LABEL_9;
            }
            result = 1;
            v2 = 1;
          }
          else
          {
            if ((v2 & (result > 1)) != 1)
            {
              v5 = 3;
              if ((v2 & 1) == 0)
                goto LABEL_30;
LABEL_4:
              if (result == 1)
                v6 = 2;
              else
                v6 = 3;
              if (!result)
                v6 = 0;
LABEL_9:
              v7 = v5 < v6;
              goto LABEL_10;
            }
            v2 = 1;
            result = 2;
          }
        }
        else
        {
          v5 = 0;
          if ((v2 & (result == 0)) == 0)
            goto LABEL_27;
          v2 = 1;
          result = 0;
        }
      }
      else
      {
        if ((v2 & 1) != 0)
        {
          v5 = 1;
          goto LABEL_4;
        }
        if (v8 != result)
        {
          v7 = v8 < (uint64_t)result;
LABEL_10:
          if (v7)
          {
            result = *((_QWORD *)v1 - 1);
            v2 = *v1;
          }
          goto LABEL_12;
        }
        v2 = 0;
      }
LABEL_12:
      v1 += 40;
      if (!--v3)
        return result;
    }
  }
  return 0;
}

void sub_1A58D3404(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3 && *(_DWORD *)(a3 + 32) != a2 && v3 != 1)
  {
    v4 = a3 + 104;
    v5 = 1;
    while (1)
    {
      v6 = v5 + 1;
      if (__OFADD__(v5, 1))
        break;
      if (*(_DWORD *)(v4 - 32) != a2)
      {
        ++v5;
        v4 += 40;
        if (v6 != v3)
          continue;
      }
      return;
    }
    __break(1u);
  }
}

void sub_1A58D3478(uint64_t a1, int a2)
{
  uint64_t v2;

  sub_1A58D3404(a1, a2, *(_QWORD *)(v2 + 16));
}

char *MailboxesSelectionUsage.allConnections.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (char *)MEMORY[0x1E0DEE9D8];
  v2 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 40;
  v3 = (char *)MEMORY[0x1E0DEE9D8];
  do
  {
    v4 = *(_DWORD *)(v2 - 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_1A58D47D0(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
    v6 = *((_QWORD *)v3 + 2);
    v5 = *((_QWORD *)v3 + 3);
    if (v6 >= v5 >> 1)
      v3 = sub_1A58D47D0((char *)(v5 > 1), v6 + 1, 1, v3);
    v2 += 40;
    *((_QWORD *)v3 + 2) = v6 + 1;
    *(_DWORD *)&v3[4 * v6 + 32] = v4;
    swift_bridgeObjectRelease();
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t MailboxesSelectionUsage.subscript.setter(uint64_t result, int a2, uint64_t a3, char a4, int a5)
{
  uint64_t *v5;
  uint64_t v9;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  int *v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _BYTE v21[40];

  v9 = result;
  v11 = (_QWORD *)*v5;
  v12 = *(_QWORD *)(*v5 + 16);
  if (!v12)
    goto LABEL_14;
  if (*((_DWORD *)v11 + 8) != a5)
  {
    if (v12 != 1)
    {
      v15 = (int *)(v11 + 9);
      v13 = 1;
      do
      {
        v16 = *v15;
        v15 += 10;
        if (v16 == a5)
          goto LABEL_4;
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
          goto LABEL_22;
        }
        ++v13;
      }
      while (v17 != v12);
    }
LABEL_14:
    if (result)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_22:
        v11 = sub_1A58D48DC(0, v12 + 1, 1, v11);
      v19 = v11[2];
      v18 = v11[3];
      if (v19 >= v18 >> 1)
        v11 = sub_1A58D48DC((_QWORD *)(v18 > 1), v19 + 1, 1, v11);
      v11[2] = v19 + 1;
      v20 = &v11[5 * v19];
      *((_DWORD *)v20 + 8) = a5;
      v20[5] = v9;
      *((_DWORD *)v20 + 12) = a2;
      v20[7] = a3;
      *((_BYTE *)v20 + 64) = a4 & 1;
      *v5 = (uint64_t)v11;
      return sub_1A5840160(v5, (uint64_t (*)(uint64_t))sub_1A58D63BC, sub_1A58D5384);
    }
    return result;
  }
  v13 = 0;
LABEL_4:
  if (result)
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) != 0)
    {
      if ((v13 & 0x8000000000000000) == 0)
        goto LABEL_7;
    }
    else
    {
      result = (uint64_t)sub_1A58D63BC(v11);
      v11 = (_QWORD *)result;
      if ((v13 & 0x8000000000000000) == 0)
      {
LABEL_7:
        if (v13 < v11[2])
        {
          v14 = &v11[5 * v13];
          v14[7] = a3;
          *((_BYTE *)v14 + 64) = a4 & 1;
          result = swift_bridgeObjectRelease();
          *v5 = (uint64_t)v11;
          return result;
        }
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  sub_1A58D27BC(v13, (uint64_t)v21);
  return sub_1A5503278((uint64_t)v21);
}

void (*MailboxesSelectionUsage.subscript.modify(void (**a1)(uint64_t **a1, char a2), int a2))(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void (*result)(uint64_t **, char);
  void (*v6)(uint64_t **, char);
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t *v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  result = (void (*)(uint64_t **, char))malloc(0x28uLL);
  v6 = result;
  *a1 = result;
  *((_QWORD *)result + 4) = v2;
  *((_DWORD *)result + 7) = a2;
  v7 = *v2;
  v8 = *(_QWORD *)(*v2 + 16);
  if (!v8)
    goto LABEL_9;
  if (*(_DWORD *)(v7 + 32) == a2)
  {
    v9 = (_BYTE *)(v7 + 64);
    v10 = (uint64_t *)(v7 + 56);
    v11 = (unsigned int *)(v7 + 48);
LABEL_11:
    v17 = *v9;
    v16 = *v10;
    v15 = *v11;
    v14 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_12;
  }
  if (v8 == 1)
  {
LABEL_9:
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
LABEL_12:
    *(_QWORD *)v6 = v14;
    *((_QWORD *)v6 + 1) = v15;
    *((_QWORD *)v6 + 2) = v16;
    *((_BYTE *)v6 + 24) = v17;
    return sub_1A58D381C;
  }
  v9 = (_BYTE *)(v7 + 104);
  v12 = 1;
  while (1)
  {
    v13 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (*((_DWORD *)v9 - 8) == a2)
    {
      v11 = (unsigned int *)(v9 - 16);
      v10 = (uint64_t *)(v9 - 8);
      goto LABEL_11;
    }
    ++v12;
    v9 += 40;
    if (v13 == v8)
      goto LABEL_9;
  }
  __break(1u);
  return result;
}

void sub_1A58D381C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t v8;

  v2 = *a1;
  v3 = **a1;
  v4 = v2[1];
  v5 = v2[2];
  v6 = *((_BYTE *)v2 + 24);
  v7 = *((_DWORD *)v2 + 7);
  if ((a2 & 1) != 0)
  {
    v8 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    MailboxesSelectionUsage.subscript.setter(v8, v4, v5, v6, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    MailboxesSelectionUsage.subscript.setter(v3, v2[1], v2[2], *((_BYTE *)v2 + 24), *((_DWORD *)v2 + 7));
  }
  free(v2);
}

uint64_t MailboxesSelectionUsage.subscript.getter(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  int v13;
  int v14;
  int v15;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return 0;
  v4 = 0;
  v5 = a2 | ((unint64_t)a2 << 32);
  while (1)
  {
    v6 = a3 + 32 + 40 * v4;
    if ((*(unsigned int *)(v6 + 16) | ((unint64_t)*(unsigned int *)(v6 + 16) << 32)) == v5)
    {
      v7 = *(_QWORD *)(v6 + 8);
      v8 = *(_QWORD *)(v7 + 16);
      if (v8 == *(_QWORD *)(a1 + 16))
      {
        if (v8)
          v9 = v7 == a1;
        else
          v9 = 1;
        if (v9)
          return *(_QWORD *)(v6 + 24);
        if (*(unsigned __int8 *)(v7 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v8 == 1)
            return *(_QWORD *)(v6 + 24);
          if (*(unsigned __int8 *)(v7 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v8 == 2)
              return *(_QWORD *)(v6 + 24);
            if (*(unsigned __int8 *)(v7 + 34) == *(unsigned __int8 *)(a1 + 34))
              break;
          }
        }
      }
    }
LABEL_3:
    if (++v4 == v3)
      return 0;
  }
  v10 = (unsigned __int8 *)(v7 + 35);
  v11 = v8 - 3;
  v12 = (unsigned __int8 *)(a1 + 35);
  while (v11)
  {
    v14 = *v10++;
    v13 = v14;
    v15 = *v12++;
    --v11;
    if (v13 != v15)
      goto LABEL_3;
  }
  return *(_QWORD *)(v6 + 24);
}

uint64_t MailboxesSelectionUsage.removing<A>(notContainedIn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v6;
  uint64_t v7;
  uint64_t i;
  int v9;
  int v11;
  uint64_t v12;

  v4 = a2;
  v12 = a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v6 = MailboxesSelectionUsage.allConnections.getter(v4);
  v7 = *((_QWORD *)v6 + 2);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      v9 = *(_DWORD *)&v6[4 * i + 32];
      v11 = v9;
      sub_1A58D3A50((uint64_t)&v11, (uint64_t)&v12, a1, a3);
    }
    swift_bridgeObjectRelease();
    return v12;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_1A58D3A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned __int8 *v18;
  unint64_t *v19;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  uint64_t i;
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  char v28;
  _DWORD *v29;
  uint64_t v30;
  int *v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;

  v5 = v4;
  v9 = *(_QWORD *)(a4 - 8);
  result = MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v14;
  v16 = *(_QWORD *)(*v14 + 16);
  if (!v16)
    return result;
  v17 = *(_DWORD *)result;
  if (*(_DWORD *)(v15 + 32) == *(_DWORD *)result)
  {
    v34 = v11;
    v37 = v5;
    v18 = (unsigned __int8 *)(v15 + 64);
    v19 = (unint64_t *)(v15 + 56);
    v20 = (unsigned __int8 *)(v15 + 48);
    v21 = (unsigned __int8 *)(v15 + 40);
  }
  else
  {
    if (v16 == 1)
      return result;
    if (*(_DWORD *)(v15 + 72) != v17)
    {
      if (v16 != 2)
      {
        v18 = (unsigned __int8 *)(v15 + 144);
        for (i = 2; ; ++i)
        {
          v23 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (*((_DWORD *)v18 - 8) == v17)
          {
            v34 = v11;
            v37 = v5;
            v21 = v18 - 24;
            v20 = v18 - 16;
            v19 = (unint64_t *)(v18 - 8);
            goto LABEL_14;
          }
          v18 += 40;
          if (v23 == v16)
            return result;
        }
        __break(1u);
LABEL_32:
        __break(1u);
      }
      return result;
    }
    v34 = v11;
    v37 = v5;
    v18 = (unsigned __int8 *)(v15 + 104);
    v19 = (unint64_t *)(v15 + 96);
    v20 = (unsigned __int8 *)(v15 + 88);
    v21 = (unsigned __int8 *)(v15 + 80);
  }
LABEL_14:
  v24 = *v18;
  v25 = *v19;
  v26 = *(_DWORD *)v20;
  v27 = *(_QWORD *)v21;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, a3, a4);
  if (v24 == 1 && v25 > 1)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, a4);
  }
  v35 = v27;
  v36 = v26;
  sub_1A58D7378();
  v28 = sub_1A594B85C();
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, a4);
  if ((v28 & 1) == 0)
  {
    v29 = *(_DWORD **)a2;
    v30 = *(_QWORD *)(*(_QWORD *)a2 + 16);
    if (v30)
    {
      if (v29[8] == v17)
      {
        result = 0;
LABEL_21:
        sub_1A58D27BC(result, (uint64_t)&v35);
        return sub_1A5503278((uint64_t)&v35);
      }
      if (v30 != 1)
      {
        if (v29[18] == v17)
        {
          result = 1;
          goto LABEL_21;
        }
        if (v30 != 2)
        {
          v31 = v29 + 28;
          result = 2;
          while (1)
          {
            v32 = *v31;
            v31 += 10;
            if (v32 == v17)
              goto LABEL_21;
            v33 = result + 1;
            if (__OFADD__(result, 1))
              goto LABEL_32;
            ++result;
            if (v33 == v30)
              return result;
          }
        }
      }
    }
  }
  return result;
}

char *sub_1A58D3CAC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B370);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A54F9DDC(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A58D3DA4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796258);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4])
          memmove(v12, a4 + 4, 80 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A58D668C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A58D3EC4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7AAE30);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A58D6598(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A58D3FE4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7962B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A54F75D8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A58D40F0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B198);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A58D6B60(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A58D4210(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B1B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A58D6870(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A58D4330(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A54F11CC(a1, a2, a3, a4, &qword_1EE79B158, type metadata accessor for CommandConnection.RecentErrors.Error);
}

_QWORD *sub_1A58D4344(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ADE8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A58D6A70(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A58D4450(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B1D8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A58D6964(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A58D4574(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B180);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A58D6780(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A58D4680(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A54F11CC(a1, a2, a3, a4, (uint64_t *)&unk_1EE79B168, _s19CommandOutputBufferV7ElementOMa);
}

uint64_t sub_1A58D4694(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A54F11CC(a1, a2, a3, a4, &qword_1EE796250, type metadata accessor for ConnectionEvent);
}

_QWORD *sub_1A58D46A8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF30);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 184);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[23 * v8 + 4])
          memmove(v12, a4 + 4, 184 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A58D7270(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1A58D47D0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B138);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v13 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1A54F963C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A58D48DC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B1A0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A58D6C54(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A58D49F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  _BOOL4 v27;
  int v28;
  uint64_t v29;
  _BYTE *v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  char v36;
  unint64_t v37;
  char v38;
  int v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  unsigned __int8 *v54;
  uint64_t v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57;
  uint64_t v58;
  int64_t v59;
  int v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  char v64;
  unint64_t v65;
  BOOL v66;
  char v67;
  int v68;
  __int128 v70;
  __int128 v71;
  int v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  char v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  unint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  unint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  unint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *__dst;
  uint64_t v138;

  v3 = a1[1];
  result = sub_1A594CC78();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_270;
    if (v3)
      return sub_1A58D5AE0(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_278:
    result = sub_1A594C9B4();
    __break(1u);
    return result;
  }
  v6 = result;
  v138 = v1;
  v131 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
      goto LABEL_236;
    }
    v133 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7AAE20);
    v8 = sub_1A594BA18();
    *(_QWORD *)(v8 + 16) = v7;
    v133 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v132 = *a1 + 24;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v134 = v6;
  v135 = v3;
  v136 = v11;
  while (2)
  {
    v14 = v10++;
    if (v10 >= v3)
      goto LABEL_122;
    v15 = v11 + 32 * v10;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 16);
    v18 = *(unsigned __int8 *)(v15 + 24);
    v19 = v11 + 32 * v14;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 16);
    v22 = *(unsigned __int8 *)(v19 + 24);
    if (v18 == 1)
    {
      if (v17)
      {
        if (v17 == 1)
        {
          if (v21 == 1)
            v23 = v22;
          else
            v23 = 0;
          if ((v23 & 1) != 0)
            goto LABEL_52;
          v24 = 2;
          if ((v22 & 1) == 0)
            goto LABEL_47;
        }
        else
        {
          if (v21 > 1)
            v28 = v22;
          else
            v28 = 0;
          if (v28 == 1)
            goto LABEL_52;
          v24 = 3;
          if ((v22 & 1) == 0)
            goto LABEL_47;
        }
      }
      else
      {
        if (v21)
          v25 = 0;
        else
          v25 = v22;
        if ((v25 & 1) != 0)
          goto LABEL_52;
        if (!v22)
          goto LABEL_40;
        v24 = 0;
      }
    }
    else
    {
      if ((v22 & 1) == 0)
      {
        if (v17 == v21)
          goto LABEL_52;
        if (v17 >= (uint64_t)v21)
          goto LABEL_57;
LABEL_40:
        v26 = v14 + 2;
        if (v14 + 2 >= v3)
          goto LABEL_111;
        v27 = 1;
        goto LABEL_59;
      }
      v24 = 1;
    }
    if (v24 < qword_1A59DF9E8[v21])
      goto LABEL_40;
    if (!v18)
      goto LABEL_57;
LABEL_47:
    if (v17)
    {
      if (v17 == 1)
      {
        if (v21 != 1)
          LOBYTE(v22) = 0;
        if ((v22 & 1) != 0)
          goto LABEL_52;
        goto LABEL_57;
      }
      if (v21 <= 1)
        LOBYTE(v22) = 0;
      if ((v22 & 1) == 0)
      {
LABEL_57:
        v26 = v14 + 2;
        if (v14 + 2 >= v3)
        {
LABEL_121:
          v10 = v26;
          goto LABEL_122;
        }
        v27 = 0;
LABEL_59:
        if (v3 <= v26 + 1)
          v29 = v26 + 1;
        else
          v29 = v3;
        v30 = (_BYTE *)(v132 + 32 * v26);
        while (1)
        {
          v31 = *((_QWORD *)v30 - 1);
          v32 = v11 + 32 * v10;
          v33 = *(_QWORD *)v32;
          v34 = *(_QWORD *)(v32 + 16);
          v35 = *(unsigned __int8 *)(v32 + 24);
          if (*v30 == 1)
          {
            if (v31)
            {
              if (v31 == 1)
              {
                if (v34 == 1)
                  v36 = v35;
                else
                  v36 = 0;
                if ((v36 & 1) != 0)
                  goto LABEL_63;
                v37 = 2;
                if ((v35 & 1) == 0)
                  goto LABEL_95;
              }
              else
              {
                if (v34 > 1)
                  v39 = v35;
                else
                  v39 = 0;
                if (v39 == 1)
                  goto LABEL_63;
                v37 = 3;
                if ((v35 & 1) == 0)
                  goto LABEL_95;
              }
            }
            else
            {
              if (v34)
                v38 = 0;
              else
                v38 = v35;
              if ((v38 & 1) != 0)
                goto LABEL_63;
              if (!v35)
                goto LABEL_88;
              v37 = 0;
            }
          }
          else
          {
            if ((v35 & 1) == 0)
            {
              if (v31 != v34)
              {
                if (v31 >= (uint64_t)v34)
                  goto LABEL_106;
LABEL_88:
                if (!v27)
                  goto LABEL_121;
                goto LABEL_64;
              }
              goto LABEL_63;
            }
            v37 = 1;
          }
          if (v37 < qword_1A59DF9E8[v34])
            goto LABEL_88;
          if (!*v30)
            goto LABEL_106;
LABEL_95:
          if (v31)
          {
            if (v31 != 1)
            {
              if (v34 <= 1)
                LOBYTE(v35) = 0;
              if ((v35 & 1) == 0)
              {
LABEL_106:
                if (v27)
                  goto LABEL_110;
                goto LABEL_64;
              }
              goto LABEL_63;
            }
            v40 = v34 == 1;
          }
          else
          {
            v40 = v34 == 0;
          }
          if (!v40)
            LOBYTE(v35) = 0;
          if ((v35 & 1) == 0)
            goto LABEL_106;
LABEL_63:
          if (((v27 ^ (*((_QWORD *)v30 - 3) >= v33)) & 1) == 0)
            goto LABEL_109;
LABEL_64:
          v10 = v26;
          v30 += 32;
          if (++v26 >= v3)
          {
            v26 = v29;
            goto LABEL_109;
          }
        }
      }
    }
    else
    {
      if (v21)
        LOBYTE(v22) = 0;
      if ((v22 & 1) == 0)
        goto LABEL_57;
    }
LABEL_52:
    v27 = v16 < v20;
    v26 = v14 + 2;
    if (v14 + 2 < v3)
      goto LABEL_59;
LABEL_109:
    v10 = v26;
    if (v27)
    {
LABEL_110:
      if (v26 < v14)
        goto LABEL_271;
LABEL_111:
      if (v14 < v26)
      {
        v41 = 32 * v26 - 32;
        v42 = 32 * v14;
        v43 = v26;
        v44 = v14;
        while (1)
        {
          if (v44 != --v43)
          {
            if (!v11)
              goto LABEL_276;
            v47 = (_OWORD *)(v11 + v42);
            v48 = (_OWORD *)(v11 + v41);
            v49 = *(_QWORD *)(v11 + v42);
            v50 = *(_DWORD *)(v11 + v42 + 8);
            v51 = *(_QWORD *)(v11 + v42 + 16);
            v52 = *(_BYTE *)(v11 + v42 + 24);
            if (v42 != v41 || v47 >= v48 + 2)
            {
              v45 = v48[1];
              *v47 = *v48;
              v47[1] = v45;
            }
            v46 = v11 + v41;
            *(_QWORD *)v46 = v49;
            *(_DWORD *)(v46 + 8) = v50;
            *(_QWORD *)(v46 + 16) = v51;
            *(_BYTE *)(v46 + 24) = v52;
          }
          ++v44;
          v41 -= 32;
          v42 += 32;
          if (v44 >= v43)
            goto LABEL_121;
        }
      }
      goto LABEL_121;
    }
LABEL_122:
    if (v10 >= v3)
      goto LABEL_182;
    if (__OFSUB__(v10, v14))
      goto LABEL_269;
    if (v10 - v14 >= v6)
      goto LABEL_182;
    v53 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_272;
    if (v53 >= v3)
      v53 = v3;
    if (v53 < v14)
    {
LABEL_273:
      __break(1u);
LABEL_274:
      __break(1u);
LABEL_275:
      __break(1u);
LABEL_276:
      __break(1u);
LABEL_277:
      __break(1u);
      goto LABEL_278;
    }
    if (v10 == v53)
      goto LABEL_182;
    v54 = (unsigned __int8 *)(v132 + 32 * v10);
    while (2)
    {
      v55 = v14;
      v56 = v54;
      do
      {
        v57 = v56 - 24;
        v58 = *((_QWORD *)v56 - 3);
        v59 = *((_QWORD *)v56 - 1);
        v60 = *v56;
        v61 = *((_QWORD *)v56 - 7);
        v62 = *((_QWORD *)v56 - 5);
        v63 = *(v56 - 32);
        if (v60 == 1)
        {
          if (v59)
          {
            if (v59 == 1)
            {
              if (v62 == 1)
                v64 = *(v56 - 32);
              else
                v64 = 0;
              if ((v64 & 1) != 0)
                goto LABEL_177;
              v65 = 2;
              if ((v63 & 1) == 0)
                goto LABEL_146;
            }
            else
            {
              if (v62 > 1)
                v68 = *(v56 - 32);
              else
                v68 = 0;
              if (v68 == 1)
                goto LABEL_177;
              v65 = 3;
              if ((v63 & 1) == 0)
                goto LABEL_146;
            }
          }
          else
          {
            if (v62)
              v67 = 0;
            else
              v67 = *(v56 - 32);
            if ((v67 & 1) != 0)
              goto LABEL_177;
            if (!*(v56 - 32))
              goto LABEL_178;
            v65 = 0;
          }
        }
        else
        {
          if ((v63 & 1) == 0)
          {
            v66 = v59 == v62;
            if (v59 < (uint64_t)v62)
              goto LABEL_178;
            goto LABEL_169;
          }
          v65 = 1;
        }
        if (v65 < qword_1A59DF9E8[v62])
          goto LABEL_178;
        if (!*v56)
          break;
LABEL_146:
        if (v59)
        {
          if (v59 == 1)
          {
            if (v62 != 1)
              v63 = 0;
            if (v63 != 1)
              break;
          }
          else
          {
            if (v62 <= 1)
              v63 = 0;
            if (v63 != 1)
              break;
          }
LABEL_177:
          if (v58 >= v61)
            break;
          goto LABEL_178;
        }
        if (v62)
          v63 = 0;
        v66 = v63 == 1;
LABEL_169:
        if (!v66 || v58 >= v61)
          break;
LABEL_178:
        if (!v11)
          goto LABEL_274;
        v71 = *(_OWORD *)(v56 - 56);
        v70 = *(_OWORD *)(v56 - 40);
        *(v56 - 32) = v60;
        v56 -= 32;
        v72 = *((_DWORD *)v56 + 4);
        *(_OWORD *)v57 = v71;
        *((_OWORD *)v57 + 1) = v70;
        *((_QWORD *)v56 - 3) = v58;
        *((_DWORD *)v56 - 4) = v72;
        *((_QWORD *)v56 - 1) = v59;
        ++v55;
      }
      while (v10 != v55);
      ++v10;
      v54 += 32;
      if (v10 != v53)
        continue;
      break;
    }
    v10 = v53;
LABEL_182:
    if (v10 < v14)
      goto LABEL_264;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A58E9F8C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v74 = *((_QWORD *)v12 + 2);
    v73 = *((_QWORD *)v12 + 3);
    v13 = v74 + 1;
    v11 = v136;
    if (v74 >= v73 >> 1)
    {
      v122 = sub_1A58E9F8C((char *)(v73 > 1), v74 + 1, 1, v12);
      v11 = v136;
      v12 = v122;
    }
    *((_QWORD *)v12 + 2) = v13;
    v75 = v12 + 32;
    v76 = &v12[16 * v74 + 32];
    *(_QWORD *)v76 = v14;
    *((_QWORD *)v76 + 1) = v10;
    if (v74)
    {
      while (2)
      {
        v77 = v13 - 1;
        if (v13 >= 4)
        {
          v82 = &v75[16 * v13];
          v83 = *((_QWORD *)v82 - 8);
          v84 = *((_QWORD *)v82 - 7);
          v88 = __OFSUB__(v84, v83);
          v85 = v84 - v83;
          if (v88)
            goto LABEL_253;
          v87 = *((_QWORD *)v82 - 6);
          v86 = *((_QWORD *)v82 - 5);
          v88 = __OFSUB__(v86, v87);
          v80 = v86 - v87;
          v81 = v88;
          if (v88)
            goto LABEL_254;
          v89 = v13 - 2;
          v90 = &v75[16 * v13 - 32];
          v92 = *(_QWORD *)v90;
          v91 = *((_QWORD *)v90 + 1);
          v88 = __OFSUB__(v91, v92);
          v93 = v91 - v92;
          if (v88)
            goto LABEL_256;
          v88 = __OFADD__(v80, v93);
          v94 = v80 + v93;
          if (v88)
            goto LABEL_259;
          if (v94 >= v85)
          {
            v112 = &v75[16 * v77];
            v114 = *(_QWORD *)v112;
            v113 = *((_QWORD *)v112 + 1);
            v88 = __OFSUB__(v113, v114);
            v115 = v113 - v114;
            if (v88)
              goto LABEL_263;
            v105 = v80 < v115;
          }
          else
          {
LABEL_201:
            if ((v81 & 1) != 0)
              goto LABEL_255;
            v89 = v13 - 2;
            v95 = &v75[16 * v13 - 32];
            v97 = *(_QWORD *)v95;
            v96 = *((_QWORD *)v95 + 1);
            v98 = __OFSUB__(v96, v97);
            v99 = v96 - v97;
            v100 = v98;
            if (v98)
              goto LABEL_258;
            v101 = &v75[16 * v77];
            v103 = *(_QWORD *)v101;
            v102 = *((_QWORD *)v101 + 1);
            v88 = __OFSUB__(v102, v103);
            v104 = v102 - v103;
            if (v88)
              goto LABEL_261;
            if (__OFADD__(v99, v104))
              goto LABEL_262;
            if (v99 + v104 < v80)
              goto LABEL_213;
            v105 = v80 < v104;
          }
          if (v105)
            v77 = v89;
        }
        else
        {
          if (v13 == 3)
          {
            v79 = *((_QWORD *)v12 + 4);
            v78 = *((_QWORD *)v12 + 5);
            v88 = __OFSUB__(v78, v79);
            v80 = v78 - v79;
            v81 = v88;
            goto LABEL_201;
          }
          v106 = *((_QWORD *)v12 + 4);
          v107 = *((_QWORD *)v12 + 5);
          v88 = __OFSUB__(v107, v106);
          v99 = v107 - v106;
          v100 = v88;
LABEL_213:
          if ((v100 & 1) != 0)
            goto LABEL_257;
          v108 = &v75[16 * v77];
          v110 = *(_QWORD *)v108;
          v109 = *((_QWORD *)v108 + 1);
          v88 = __OFSUB__(v109, v110);
          v111 = v109 - v110;
          if (v88)
            goto LABEL_260;
          if (v111 < v99)
            goto LABEL_15;
        }
        v116 = v77 - 1;
        if (v77 - 1 >= v13)
        {
          __break(1u);
LABEL_250:
          __break(1u);
LABEL_251:
          __break(1u);
LABEL_252:
          __break(1u);
LABEL_253:
          __break(1u);
LABEL_254:
          __break(1u);
LABEL_255:
          __break(1u);
LABEL_256:
          __break(1u);
LABEL_257:
          __break(1u);
LABEL_258:
          __break(1u);
LABEL_259:
          __break(1u);
LABEL_260:
          __break(1u);
LABEL_261:
          __break(1u);
LABEL_262:
          __break(1u);
LABEL_263:
          __break(1u);
LABEL_264:
          __break(1u);
LABEL_265:
          __break(1u);
LABEL_266:
          __break(1u);
LABEL_267:
          __break(1u);
LABEL_268:
          __break(1u);
LABEL_269:
          __break(1u);
LABEL_270:
          __break(1u);
LABEL_271:
          __break(1u);
LABEL_272:
          __break(1u);
          goto LABEL_273;
        }
        if (!v11)
          goto LABEL_275;
        v117 = &v75[16 * v116];
        v118 = *(_QWORD *)v117;
        v119 = &v75[16 * v77];
        v120 = *((_QWORD *)v119 + 1);
        sub_1A58D5C44((char *)(v11 + 32 * *(_QWORD *)v117), (char *)(v11 + 32 * *(_QWORD *)v119), v11 + 32 * v120, __dst);
        if (v138)
          goto LABEL_233;
        if (v120 < v118)
          goto LABEL_250;
        if (v77 > *((_QWORD *)v12 + 2))
          goto LABEL_251;
        *(_QWORD *)v117 = v118;
        *(_QWORD *)&v75[16 * v116 + 8] = v120;
        v121 = *((_QWORD *)v12 + 2);
        if (v77 >= v121)
          goto LABEL_252;
        v13 = v121 - 1;
        memmove(&v75[16 * v77], v119 + 16, 16 * (v121 - 1 - v77));
        *((_QWORD *)v12 + 2) = v121 - 1;
        v11 = v136;
        if (v121 <= 2)
          goto LABEL_15;
        continue;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v134;
    v3 = v135;
    if (v10 < v135)
      continue;
    break;
  }
  v9 = v133;
LABEL_236:
  v123 = v12;
  v133 = v9;
  if (v13 >= 2)
  {
    v124 = *v131;
    do
    {
      v125 = v13 - 2;
      if (v13 < 2)
        goto LABEL_265;
      if (!v124)
        goto LABEL_277;
      v126 = v123;
      v127 = *(_QWORD *)&v123[16 * v125 + 32];
      v128 = *(_QWORD *)&v123[16 * v13 + 24];
      sub_1A58D5C44((char *)(v124 + 32 * v127), (char *)(v124 + 32 * *(_QWORD *)&v123[16 * v13 + 16]), v124 + 32 * v128, __dst);
      if (v138)
        break;
      if (v128 < v127)
        goto LABEL_266;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v126 = sub_1A58EA294((uint64_t)v126);
      if (v125 >= *((_QWORD *)v126 + 2))
        goto LABEL_267;
      v129 = &v126[16 * v125 + 32];
      *(_QWORD *)v129 = v127;
      *((_QWORD *)v129 + 1) = v128;
      v130 = *((_QWORD *)v126 + 2);
      if (v13 > v130)
        goto LABEL_268;
      memmove(&v126[16 * v13 + 16], &v126[16 * v13 + 32], 16 * (v130 - v13));
      v123 = v126;
      *((_QWORD *)v126 + 2) = v130 - 1;
      v13 = v130 - 1;
    }
    while (v130 > 2);
  }
LABEL_233:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v133 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A58D5384(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *__dst;
  uint64_t v126;

  v3 = a1[1];
  result = sub_1A594CC78();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v96 = *a1;
      v97 = -1;
      v98 = 1;
      v99 = *a1;
      do
      {
        v100 = v97;
        v101 = v99;
        do
        {
          v102 = v101 + 40;
          v103 = *(_DWORD *)(v101 + 40);
          if (v103 >= *(_DWORD *)v101)
            break;
          if (!v96)
            goto LABEL_141;
          v104 = *(_QWORD *)(v101 + 48);
          v105 = *(_DWORD *)(v101 + 56);
          v106 = *(_QWORD *)(v101 + 64);
          result = *(unsigned __int8 *)(v101 + 72);
          v107 = *(_OWORD *)(v101 + 16);
          *(_OWORD *)v102 = *(_OWORD *)v101;
          *(_OWORD *)(v101 + 56) = v107;
          v108 = *(_QWORD *)(v101 + 32);
          *(_DWORD *)v101 = v103;
          *(_QWORD *)(v101 + 8) = v104;
          *(_DWORD *)(v101 + 16) = v105;
          *(_QWORD *)(v101 + 24) = v106;
          *(_BYTE *)(v101 + 32) = result;
          v101 -= 40;
          *(_QWORD *)(v102 + 32) = v108;
        }
        while (!__CFADD__(v100++, 1));
        ++v98;
        v99 += 40;
        --v97;
      }
      while (v98 != v3);
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v126 = v1;
  v119 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v110 = v12;
      v121 = v9;
      if (v13 >= 2)
      {
        v111 = *v119;
        do
        {
          v112 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v111)
            goto LABEL_145;
          v113 = v110;
          v114 = *(_QWORD *)&v110[16 * v112 + 32];
          v115 = *(_QWORD *)&v110[16 * v13 + 24];
          sub_1A58D607C((char *)(v111 + 40 * v114), (char *)(v111 + 40 * *(_QWORD *)&v110[16 * v13 + 16]), v111 + 40 * v115, __dst);
          if (v126)
            break;
          if (v115 < v114)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v113 = sub_1A58EA294((uint64_t)v113);
          if (v112 >= *((_QWORD *)v113 + 2))
            goto LABEL_134;
          v116 = &v113[16 * v112 + 32];
          *(_QWORD *)v116 = v114;
          *((_QWORD *)v116 + 1) = v115;
          v117 = *((_QWORD *)v113 + 2);
          if (v13 > v117)
            goto LABEL_135;
          memmove(&v113[16 * v13 + 16], &v113[16 * v13 + 32], 16 * (v117 - v13));
          v110 = v113;
          *((_QWORD *)v113 + 2) = v117 - 1;
          v13 = v117 - 1;
        }
        while (v117 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v121 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v121 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1A594BA18();
    *(_QWORD *)(v8 + 16) = v7;
    v121 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v120 = *a1 + 40;
  v118 = *a1 - 40;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v122 = v6;
  v123 = v3;
  v124 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_DWORD *)(v11 + 40 * v10);
      v16 = *(_DWORD *)(v11 + 40 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (unsigned int *)(v120 + 40 * v14);
        v18 = v17;
        while (1)
        {
          v19 = v18[10];
          v18 += 10;
          if (v15 < v16 == v19 >= *v17)
            break;
          ++v10;
          v17 = v18;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 40 * v10;
          v21 = 40 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v21;
              v25 = *(_DWORD *)(v11 + v21);
              v26 = v11 + v20;
              v27 = *(_QWORD *)(v11 + v21 + 8);
              v28 = *(_DWORD *)(v11 + v21 + 16);
              v29 = *(_QWORD *)(v11 + v21 + 24);
              v30 = *(_BYTE *)(v11 + v21 + 32);
              v31 = *(_QWORD *)(v11 + v20 - 8);
              v32 = *(_OWORD *)(v11 + v20 - 24);
              *(_OWORD *)v24 = *(_OWORD *)(v11 + v20 - 40);
              *(_OWORD *)(v24 + 16) = v32;
              *(_QWORD *)(v24 + 32) = v31;
              *(_DWORD *)(v26 - 40) = v25;
              *(_QWORD *)(v26 - 32) = v27;
              *(_DWORD *)(v26 - 24) = v28;
              *(_QWORD *)(v26 - 16) = v29;
              *(_BYTE *)(v26 - 8) = v30;
            }
            ++v23;
            v20 -= 40;
            v21 += 40;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v33 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v33 >= v3)
      v33 = v3;
    if (v33 < v14)
      break;
    if (v10 != v33)
    {
      v34 = v118 + 40 * v10;
      do
      {
        v35 = v14;
        v36 = v34;
        do
        {
          v37 = v36 + 40;
          v38 = *(_DWORD *)(v36 + 40);
          if (v38 >= *(_DWORD *)v36)
            break;
          if (!v11)
            goto LABEL_142;
          v39 = *(_QWORD *)(v36 + 48);
          v40 = *(_DWORD *)(v36 + 56);
          v41 = *(_QWORD *)(v36 + 64);
          v42 = *(_BYTE *)(v36 + 72);
          v43 = *(_OWORD *)(v36 + 16);
          *(_OWORD *)v37 = *(_OWORD *)v36;
          *(_OWORD *)(v36 + 56) = v43;
          v44 = *(_QWORD *)(v36 + 32);
          *(_DWORD *)v36 = v38;
          *(_QWORD *)(v36 + 8) = v39;
          *(_DWORD *)(v36 + 16) = v40;
          *(_QWORD *)(v36 + 24) = v41;
          *(_BYTE *)(v36 + 32) = v42;
          v36 -= 40;
          ++v35;
          *(_QWORD *)(v37 + 32) = v44;
        }
        while (v10 != v35);
        ++v10;
        v34 += 40;
      }
      while (v10 != v33);
      v10 = v33;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A58E9F8C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v46 = *((_QWORD *)v12 + 2);
    v45 = *((_QWORD *)v12 + 3);
    v13 = v46 + 1;
    v11 = v124;
    if (v46 >= v45 >> 1)
    {
      v95 = sub_1A58E9F8C((char *)(v45 > 1), v46 + 1, 1, v12);
      v11 = v124;
      v12 = v95;
    }
    *((_QWORD *)v12 + 2) = v13;
    v47 = v12 + 32;
    v48 = &v12[16 * v46 + 32];
    *(_QWORD *)v48 = v14;
    *((_QWORD *)v48 + 1) = v10;
    if (v46)
    {
      while (1)
      {
        v49 = v13 - 1;
        if (v13 >= 4)
        {
          v54 = &v47[16 * v13];
          v55 = *((_QWORD *)v54 - 8);
          v56 = *((_QWORD *)v54 - 7);
          v60 = __OFSUB__(v56, v55);
          v57 = v56 - v55;
          if (v60)
            goto LABEL_120;
          v59 = *((_QWORD *)v54 - 6);
          v58 = *((_QWORD *)v54 - 5);
          v60 = __OFSUB__(v58, v59);
          v52 = v58 - v59;
          v53 = v60;
          if (v60)
            goto LABEL_121;
          v61 = v13 - 2;
          v62 = &v47[16 * v13 - 32];
          v64 = *(_QWORD *)v62;
          v63 = *((_QWORD *)v62 + 1);
          v60 = __OFSUB__(v63, v64);
          v65 = v63 - v64;
          if (v60)
            goto LABEL_123;
          v60 = __OFADD__(v52, v65);
          v66 = v52 + v65;
          if (v60)
            goto LABEL_126;
          if (v66 >= v57)
          {
            v84 = &v47[16 * v49];
            v86 = *(_QWORD *)v84;
            v85 = *((_QWORD *)v84 + 1);
            v60 = __OFSUB__(v85, v86);
            v87 = v85 - v86;
            if (v60)
              goto LABEL_130;
            v77 = v52 < v87;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v78 = *((_QWORD *)v12 + 4);
            v79 = *((_QWORD *)v12 + 5);
            v60 = __OFSUB__(v79, v78);
            v71 = v79 - v78;
            v72 = v60;
            goto LABEL_77;
          }
          v51 = *((_QWORD *)v12 + 4);
          v50 = *((_QWORD *)v12 + 5);
          v60 = __OFSUB__(v50, v51);
          v52 = v50 - v51;
          v53 = v60;
        }
        if ((v53 & 1) != 0)
          goto LABEL_122;
        v61 = v13 - 2;
        v67 = &v47[16 * v13 - 32];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v70 = __OFSUB__(v68, v69);
        v71 = v68 - v69;
        v72 = v70;
        if (v70)
          goto LABEL_125;
        v73 = &v47[16 * v49];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v60 = __OFSUB__(v74, v75);
        v76 = v74 - v75;
        if (v60)
          goto LABEL_128;
        if (__OFADD__(v71, v76))
          goto LABEL_129;
        if (v71 + v76 >= v52)
        {
          v77 = v52 < v76;
LABEL_83:
          if (v77)
            v49 = v61;
          goto LABEL_85;
        }
LABEL_77:
        if ((v72 & 1) != 0)
          goto LABEL_124;
        v80 = &v47[16 * v49];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v60 = __OFSUB__(v81, v82);
        v83 = v81 - v82;
        if (v60)
          goto LABEL_127;
        if (v83 < v71)
          goto LABEL_15;
LABEL_85:
        v88 = v49 - 1;
        if (v49 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v89 = v12;
        v90 = &v47[16 * v88];
        v91 = *(_QWORD *)v90;
        v92 = &v47[16 * v49];
        v93 = *((_QWORD *)v92 + 1);
        sub_1A58D607C((char *)(v11 + 40 * *(_QWORD *)v90), (char *)(v11 + 40 * *(_QWORD *)v92), v11 + 40 * v93, __dst);
        if (v126)
          goto LABEL_93;
        if (v93 < v91)
          goto LABEL_117;
        if (v49 > *((_QWORD *)v89 + 2))
          goto LABEL_118;
        *(_QWORD *)v90 = v91;
        *(_QWORD *)&v47[16 * v88 + 8] = v93;
        v94 = *((_QWORD *)v89 + 2);
        if (v49 >= v94)
          goto LABEL_119;
        v12 = v89;
        v13 = v94 - 1;
        memmove(&v47[16 * v49], v92 + 16, 16 * (v94 - 1 - v49));
        *((_QWORD *)v89 + 2) = v94 - 1;
        v11 = v124;
        if (v94 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v122;
    v3 = v123;
    if (v10 >= v123)
    {
      v9 = v121;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t sub_1A58D5AE0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  uint64_t v9;
  int64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  char v15;
  unint64_t v16;
  char v18;
  int v19;
  __int128 v21;
  __int128 v22;
  int v23;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 32 * a3 + 24;
LABEL_5:
    v6 = result;
    v7 = (unsigned __int8 *)v5;
    while (1)
    {
      v8 = v7 - 24;
      v9 = *((_QWORD *)v7 - 3);
      v10 = *((_QWORD *)v7 - 1);
      v11 = *v7;
      v12 = *((_QWORD *)v7 - 7);
      v13 = *((_QWORD *)v7 - 5);
      v14 = *(v7 - 32);
      if (v11 == 1)
      {
        if (v10)
        {
          if (v10 == 1)
          {
            if (v13 == 1)
              v15 = *(v7 - 32);
            else
              v15 = 0;
            if ((v15 & 1) != 0)
              goto LABEL_52;
            v16 = 2;
            if ((v14 & 1) == 0)
              goto LABEL_19;
          }
          else
          {
            if (v13 > 1)
              v19 = *(v7 - 32);
            else
              v19 = 0;
            if (v19 == 1)
              goto LABEL_52;
            v16 = 3;
            if ((v14 & 1) == 0)
              goto LABEL_19;
          }
        }
        else
        {
          if (v13)
            v18 = 0;
          else
            v18 = *(v7 - 32);
          if ((v18 & 1) != 0)
            goto LABEL_52;
          if (!*(v7 - 32))
            goto LABEL_53;
          v16 = 0;
        }
      }
      else
      {
        if ((v14 & 1) == 0)
        {
          if (v10 >= (uint64_t)v13 && (v10 != v13 || v9 >= v12))
            goto LABEL_4;
          goto LABEL_53;
        }
        v16 = 1;
      }
      if (v16 < qword_1A59DF9E8[v13])
        goto LABEL_53;
      if (!*v7)
        goto LABEL_4;
LABEL_19:
      if (v10)
      {
        if (v10 == 1)
        {
          if (v13 != 1)
            v14 = 0;
        }
        else if (v13 <= 1)
        {
          v14 = 0;
        }
        if (v14 != 1)
          goto LABEL_4;
LABEL_52:
        if (v9 >= v12)
          goto LABEL_4;
        goto LABEL_53;
      }
      if (v13)
        v14 = 0;
      if (v14 != 1 || v9 >= v12)
      {
LABEL_4:
        ++a3;
        v5 += 32;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
LABEL_53:
      if (!v4)
      {
        __break(1u);
        return result;
      }
      v22 = *(_OWORD *)(v7 - 56);
      v21 = *(_OWORD *)(v7 - 40);
      *(v7 - 32) = v11;
      v7 -= 32;
      v23 = *((_DWORD *)v7 + 4);
      *(_OWORD *)v8 = v22;
      *((_OWORD *)v8 + 1) = v21;
      *((_QWORD *)v7 - 3) = v9;
      *((_DWORD *)v7 - 4) = v23;
      *((_QWORD *)v7 - 1) = v10;
      if (a3 == ++v6)
        goto LABEL_4;
    }
  }
  return result;
}

uint64_t sub_1A58D5C44(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  char v21;
  unint64_t v22;
  char v24;
  int v25;
  char *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  char v41;
  unint64_t v42;
  char v44;
  int v45;
  __int128 v46;
  BOOL v47;
  __int128 v49;
  uint64_t result;
  char *v51;
  char *v52;
  char *v53;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 31;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 5;
  v52 = __dst;
  v53 = __src;
  if (v10 >= v13)
  {
    if (v11 < -31)
      goto LABEL_133;
    v30 = 32 * v13;
    if (__dst != a2 || &a2[v30] <= __dst)
      memmove(__dst, a2, 32 * v13);
    v31 = &v4[v30];
    v51 = &v4[v30];
    v53 = v6;
    if (v7 >= v6 || (unint64_t)(v11 - 32) > 0xFFFFFFFFFFFFFFC0)
    {
LABEL_132:
      sub_1A58EA13C((void **)&v53, (const void **)&v52, &v51);
      return 1;
    }
    v32 = (char *)(a3 - 32);
    v33 = v6;
    while (1)
    {
      v34 = v32 + 32;
      v35 = *((_QWORD *)v31 - 4);
      v36 = *((_QWORD *)v31 - 2);
      v38 = *((_QWORD *)v33 - 4);
      v33 -= 32;
      v37 = v38;
      v39 = *((_QWORD *)v33 + 2);
      v40 = v33[24];
      if (*(v31 - 8) == 1)
        break;
      if ((v40 & 1) != 0)
      {
        v42 = 1;
        goto LABEL_87;
      }
      if (v36 >= (uint64_t)v39 && (v36 != v39 || v35 >= v37))
      {
LABEL_126:
        v51 = v31 - 32;
        if (v34 < v31 || v32 >= v31 || v34 != v31)
        {
          v49 = *((_OWORD *)v31 - 1);
          *(_OWORD *)v32 = *((_OWORD *)v31 - 2);
          *((_OWORD *)v32 + 1) = v49;
        }
        v33 = v6;
        v31 -= 32;
        if (v6 <= v7)
          goto LABEL_132;
        goto LABEL_131;
      }
LABEL_107:
      if (v34 != v6 || v32 >= v6)
      {
        v46 = *((_OWORD *)v33 + 1);
        *(_OWORD *)v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v46;
      }
      v53 = v33;
      if (v33 <= v7)
        goto LABEL_132;
LABEL_131:
      v32 -= 32;
      v6 = v33;
      if (v31 <= v4)
        goto LABEL_132;
    }
    if (v36)
    {
      if (v36 == 1)
      {
        if (v39 == 1)
          v41 = v33[24];
        else
          v41 = 0;
        if ((v41 & 1) != 0)
          goto LABEL_106;
        v42 = 2;
        if ((v40 & 1) == 0)
          goto LABEL_113;
      }
      else
      {
        if (v39 > 1)
          v45 = v33[24];
        else
          v45 = 0;
        if (v45 == 1)
          goto LABEL_106;
        v42 = 3;
        if ((v40 & 1) == 0)
        {
LABEL_113:
          if (v36)
          {
            if (v36 != 1)
            {
              if (v39 <= 1)
                v40 = 0;
LABEL_122:
              if (v40 != 1 || v35 >= v37)
                goto LABEL_126;
              goto LABEL_107;
            }
            v47 = v39 == 1;
          }
          else
          {
            v47 = v39 == 0;
          }
          if (!v47)
            v40 = 0;
          goto LABEL_122;
        }
      }
    }
    else
    {
      if (v39)
        v44 = 0;
      else
        v44 = v33[24];
      if ((v44 & 1) != 0)
      {
LABEL_106:
        if (v35 >= v37)
          goto LABEL_126;
        goto LABEL_107;
      }
      if (!v33[24])
        goto LABEL_107;
      v42 = 0;
    }
LABEL_87:
    if (v42 < qword_1A59DF9E8[v39])
      goto LABEL_107;
    if (!*(v31 - 8))
      goto LABEL_126;
    goto LABEL_113;
  }
  if (v8 >= -31)
  {
    v14 = 32 * v10;
    if (__dst != __src || &__src[v14] <= __dst)
      memmove(__dst, __src, v14);
    v15 = &v4[v14];
    v51 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 32) <= 0xFFFFFFFFFFFFFFC0)
    {
      while (1)
      {
        v16 = *(_QWORD *)v6;
        v17 = *((_QWORD *)v6 + 2);
        v18 = *(_QWORD *)v4;
        v19 = *((_QWORD *)v4 + 2);
        v20 = v4[24];
        if (v6[24] == 1)
        {
          if (v17)
          {
            if (v17 == 1)
            {
              if (v19 == 1)
                v21 = v4[24];
              else
                v21 = 0;
              if ((v21 & 1) != 0)
                goto LABEL_58;
              v22 = 2;
              if ((v20 & 1) == 0)
                goto LABEL_43;
            }
            else
            {
              if (v19 > 1)
                v25 = v4[24];
              else
                v25 = 0;
              if (v25 == 1)
                goto LABEL_58;
              v22 = 3;
              if ((v20 & 1) == 0)
                goto LABEL_43;
            }
          }
          else
          {
            if (v19)
              v24 = 0;
            else
              v24 = v4[24];
            if ((v24 & 1) != 0)
              goto LABEL_58;
            if (!v4[24])
              goto LABEL_59;
            v22 = 0;
          }
        }
        else
        {
          if ((v20 & 1) == 0)
          {
            if (v17 >= (uint64_t)v19 && (v17 != v19 || v16 >= v18))
              goto LABEL_63;
            goto LABEL_59;
          }
          v22 = 1;
        }
        if (v22 < qword_1A59DF9E8[v19])
          goto LABEL_59;
        if (!v6[24])
          goto LABEL_63;
LABEL_43:
        if (v17)
        {
          if (v17 == 1)
          {
            if (v19 != 1)
              v20 = 0;
          }
          else if (v19 <= 1)
          {
            v20 = 0;
          }
          if (v20 != 1)
            goto LABEL_63;
LABEL_58:
          if (v16 >= v18)
            goto LABEL_63;
          goto LABEL_59;
        }
        if (v19)
          v20 = 0;
        if (v20 != 1 || v16 >= v18)
        {
LABEL_63:
          if (v7 != v4)
          {
            v29 = *((_OWORD *)v4 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v4;
            *((_OWORD *)v7 + 1) = v29;
          }
          v4 += 32;
          v52 = v4;
          v27 = v6;
          goto LABEL_66;
        }
LABEL_59:
        v27 = v6 + 32;
        if (v7 < v6 || v7 >= v27 || v7 != v6)
        {
          v28 = *((_OWORD *)v6 + 1);
          *(_OWORD *)v7 = *(_OWORD *)v6;
          *((_OWORD *)v7 + 1) = v28;
        }
LABEL_66:
        v7 += 32;
        if (v4 < v15)
        {
          v6 = v27;
          if ((unint64_t)v27 < a3)
            continue;
        }
        v53 = v7;
        goto LABEL_132;
      }
    }
    goto LABEL_132;
  }
LABEL_133:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58D607C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  char *v22;
  char *v23;
  unsigned int v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t result;
  char *v30;
  char *v31;
  char *v32;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v31 = __dst;
  v32 = __src;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      v19 = 40 * v11;
      if (__dst != a2 || &a2[v19] <= __dst)
        memmove(__dst, a2, 40 * v11);
      v20 = &v4[v19];
      v30 = &v4[v19];
      v32 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        v21 = a3 - 40;
        v22 = v6;
        while (1)
        {
          v23 = (char *)(v21 + 40);
          v24 = *((_DWORD *)v22 - 10);
          v22 -= 40;
          if (*((_DWORD *)v20 - 10) >= v24)
          {
            v30 = v20 - 40;
            if (v23 < v20 || v21 >= (unint64_t)v20 || v23 != v20)
            {
              v27 = *(_OWORD *)(v20 - 40);
              v28 = *(_OWORD *)(v20 - 24);
              *(_QWORD *)(v21 + 32) = *((_QWORD *)v20 - 1);
              *(_OWORD *)v21 = v27;
              *(_OWORD *)(v21 + 16) = v28;
            }
            v22 = v6;
            v20 -= 40;
            if (v6 <= v7)
              goto LABEL_38;
          }
          else
          {
            if (v23 != v6 || v21 >= (unint64_t)v6)
            {
              v25 = *(_OWORD *)v22;
              v26 = *((_OWORD *)v22 + 1);
              *(_QWORD *)(v21 + 32) = *((_QWORD *)v22 + 4);
              *(_OWORD *)v21 = v25;
              *(_OWORD *)(v21 + 16) = v26;
            }
            v32 = v22;
            if (v22 <= v7)
              goto LABEL_38;
          }
          v21 -= 40;
          v6 = v22;
          if (v20 <= v4)
            goto LABEL_38;
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -39)
  {
    v12 = 40 * v9;
    if (__dst != __src || &__src[v12] <= __dst)
      memmove(__dst, __src, v12);
    v13 = &v4[v12];
    v30 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      do
      {
        if (*(_DWORD *)v6 >= *(_DWORD *)v4)
        {
          if (v7 != v4)
          {
            v17 = *(_OWORD *)v4;
            v18 = *((_OWORD *)v4 + 1);
            *((_QWORD *)v7 + 4) = *((_QWORD *)v4 + 4);
            *(_OWORD *)v7 = v17;
            *((_OWORD *)v7 + 1) = v18;
          }
          v4 += 40;
          v31 = v4;
          v14 = v6;
        }
        else
        {
          v14 = v6 + 40;
          if (v7 < v6 || v7 >= v14 || v7 != v6)
          {
            v15 = *(_OWORD *)v6;
            v16 = *((_OWORD *)v6 + 1);
            *((_QWORD *)v7 + 4) = *((_QWORD *)v6 + 4);
            *(_OWORD *)v7 = v15;
            *((_OWORD *)v7 + 1) = v16;
          }
        }
        v7 += 40;
        if (v4 >= v13)
          break;
        v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      v32 = v7;
    }
LABEL_38:
    sub_1A58EA1E0((void **)&v32, (const void **)&v31, &v30);
    return 1;
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

char *sub_1A58D6318(uint64_t a1)
{
  return sub_1A58D3CAC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A58D632C(unint64_t a1)
{
  return sub_1A54F11CC(0, *(_QWORD *)(a1 + 16), 0, a1, &qword_1EE79B158, type metadata accessor for CommandConnection.RecentErrors.Error);
}

_QWORD *sub_1A58D6360(_QWORD *a1)
{
  return sub_1A58D4450(0, a1[2], 0, a1);
}

_QWORD *sub_1A58D6374(_QWORD *a1)
{
  return sub_1A58D40F0(0, a1[2], 0, a1);
}

uint64_t sub_1A58D6388(unint64_t a1)
{
  return sub_1A54F11CC(0, *(_QWORD *)(a1 + 16), 0, a1, (uint64_t *)&unk_1EE79B168, _s19CommandOutputBufferV7ElementOMa);
}

_QWORD *sub_1A58D63BC(_QWORD *a1)
{
  return sub_1A58D48DC(0, a1[2], 0, a1);
}

BOOL sub_1A58D63D0(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5, int a6, unint64_t a7, char a8)
{
  if (a2 != a6)
    return 0;
  if (!sub_1A54FF30C(a1, a5))
    return 0;
  if ((a4 & 1) != 0)
  {
    if (a3)
    {
      if (a3 == 1)
      {
        if ((a8 & 1) == 0 || a7 != 1)
          return 0;
      }
      else if ((a8 & 1) == 0 || a7 <= 1)
      {
        return 0;
      }
    }
    else if ((a8 & 1) == 0 || a7)
    {
      return 0;
    }
    return 1;
  }
  return (a8 & 1) == 0 && a3 == a7;
}

BOOL sub_1A58D6470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v6[2];
  uint64_t v7[2];
  uint64_t v8;
  char v9;
  unint64_t v10;
  char v11;

  if (*(_DWORD *)a1 != *(_DWORD *)a2
    || (*(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned int *)(a1 + 16) << 32)) != (*(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned int *)(a2 + 16) << 32))
    || !sub_1A54FF30C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8)))
  {
    return 0;
  }
  sub_1A58D7360((uint64_t *)(a1 + 24), (uint64_t)v7);
  sub_1A58D7360((uint64_t *)(a2 + 24), (uint64_t)v6);
  sub_1A58D7360(v7, (uint64_t)&v8);
  v4 = v8;
  if (v9 != 1)
  {
    sub_1A58D7360(v6, (uint64_t)&v10);
    return (v11 & 1) == 0 && v4 == v10;
  }
  if (!v8)
  {
    sub_1A58D7360(v6, (uint64_t)&v10);
    return v11 == 1 && !v10;
  }
  if (v8 != 1)
  {
    sub_1A58D7360(v6, (uint64_t)&v10);
    return v11 == 1 && v10 > 1;
  }
  sub_1A58D7360(v6, (uint64_t)&v10);
  return v11 == 1 && v10 == 1;
}

uint64_t sub_1A58D6598(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58D668C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 80 * a1 + 32;
    v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58D6780(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58D6870(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58D6964(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798320);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58D6A70(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58D6B60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58D6C54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58D6D48(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v18;

  v18 = MEMORY[0x1E0DEE9D8];
  sub_1A58BF84C(0, 0, 0);
  v3 = *(_QWORD *)(a1 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v3)
  {
    v4 = 0;
    v16 = a1 + 32;
    do
    {
      v5 = a2(v4, *(unsigned int *)(v16 + 4 * v4));
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v13 = *(_QWORD *)(v18 + 16);
      v12 = *(_QWORD *)(v18 + 24);
      if (v13 >= v12 >> 1)
        sub_1A58BF84C(v12 > 1, v13 + 1, 1);
      ++v4;
      *(_QWORD *)(v18 + 16) = v13 + 1;
      v14 = v18 + 32 * v13;
      *(_QWORD *)(v14 + 32) = v5;
      *(_DWORD *)(v14 + 40) = v7;
      *(_QWORD *)(v14 + 48) = v9;
      *(_BYTE *)(v14 + 56) = v11 & 1;
    }
    while (v3 != v4);
  }
  swift_bridgeObjectRelease();
  return v18;
}

unint64_t sub_1A58D6E78()
{
  unint64_t result;

  result = qword_1EE7AAE10;
  if (!qword_1EE7AAE10)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxSelectionUsage.Priority, &type metadata for MailboxSelectionUsage.Priority);
    atomic_store(result, (unint64_t *)&qword_1EE7AAE10);
  }
  return result;
}

unint64_t sub_1A58D6EC0()
{
  unint64_t result;

  result = qword_1EE7AAE18;
  if (!qword_1EE7AAE18)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxSelectionUsage, &type metadata for MailboxSelectionUsage);
    atomic_store(result, (unint64_t *)&qword_1EE7AAE18);
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxSelectionUsage()
{
  return &type metadata for MailboxSelectionUsage;
}

ValueMetadata *type metadata accessor for MailboxSelectionUsage.Priority()
{
  return &type metadata for MailboxSelectionUsage.Priority;
}

ValueMetadata *type metadata accessor for MailboxesSelectionUsage()
{
  return &type metadata for MailboxesSelectionUsage;
}

uint64_t initializeWithCopy for MailboxesSelectionUsage.Value(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MailboxesSelectionUsage.Value(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for MailboxesSelectionUsage.Value(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxesSelectionUsage.Value(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxesSelectionUsage.Value(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxesSelectionUsage.Value()
{
  return &type metadata for MailboxesSelectionUsage.Value;
}

uint64_t initializeWithCopy for MailboxesSelectionUsage.Element(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MailboxesSelectionUsage.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  return a1;
}

__n128 __swift_memcpy33_8_3(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MailboxesSelectionUsage.Element(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxesSelectionUsage.Element(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for MailboxesSelectionUsage.Element()
{
  return &type metadata for MailboxesSelectionUsage.Element;
}

uint64_t sub_1A58D722C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s19CommandOutputBufferV7ElementOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A58D7270(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 184 * a1 + 32;
    v6 = a3 + 184 * v4;
    if (v5 >= v6 || v5 + 184 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58D7360(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

unint64_t sub_1A58D7378()
{
  unint64_t result;

  result = qword_1EE796868;
  if (!qword_1EE796868)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxName, &type metadata for MailboxName);
    atomic_store(result, (unint64_t *)&qword_1EE796868);
  }
  return result;
}

BOOL static PathViability.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t static PathAttribute.__derived_enum_equals(_:_:)()
{
  return 1;
}

uint64_t PathAttribute.hash(into:)()
{
  return sub_1A594CE88();
}

uint64_t PathAttribute.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t PathViability.hash(into:)()
{
  return sub_1A594CE88();
}

unint64_t sub_1A58D7468()
{
  unint64_t result;

  result = qword_1EE7AAE40;
  if (!qword_1EE7AAE40)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for PathAttribute, &type metadata for PathAttribute);
    atomic_store(result, (unint64_t *)&qword_1EE7AAE40);
  }
  return result;
}

unint64_t sub_1A58D74B0()
{
  unint64_t result;

  result = qword_1EE7AAE48;
  if (!qword_1EE7AAE48)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BetterPathAvailability, &type metadata for BetterPathAvailability);
    atomic_store(result, (unint64_t *)&qword_1EE7AAE48);
  }
  return result;
}

unint64_t sub_1A58D74F8()
{
  unint64_t result;

  result = qword_1EE7AAE50;
  if (!qword_1EE7AAE50)
  {
    result = MEMORY[0x1A85B1874]("յS?hi\n", &type metadata for PathViability);
    atomic_store(result, (unint64_t *)&qword_1EE7AAE50);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PathAttribute(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A58D7580 + 4 * byte_1A59DFA00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A58D75A0 + 4 * byte_1A59DFA05[v4]))();
}

_BYTE *sub_1A58D7580(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A58D75A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A58D75A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A58D75B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A58D75B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A58D75C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PathAttribute()
{
  return &type metadata for PathAttribute;
}

ValueMetadata *type metadata accessor for BetterPathAvailability()
{
  return &type metadata for BetterPathAvailability;
}

uint64_t _s15IMAP2Connection22BetterPathAvailabilityOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A58D763C + 4 * byte_1A59DFA0F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A58D7670 + 4 * byte_1A59DFA0A[v4]))();
}

uint64_t sub_1A58D7670(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58D7678(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58D7680);
  return result;
}

uint64_t sub_1A58D768C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58D7694);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A58D7698(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58D76A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PathViability()
{
  return &type metadata for PathViability;
}

void sub_1A58D76C4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4E715D0;
}

uint64_t sub_1A58D76D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A57A8674(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 6u:
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 5u:
LABEL_3:
      swift_bridgeObjectRelease();
      v4 = &unk_1E4E716D8;
      goto LABEL_4;
    case 0xAu:
      v6 = *(_QWORD *)v3;
      v15 = sub_1A58D78C8(v6);
      v7 = 5;
      goto LABEL_8;
    case 0xBu:
      v8 = *(_QWORD *)v3;
      swift_bridgeObjectRelease();
      v5 = sub_1A58D78C8(v8);
      sub_1A589D620(v8);
      return v5;
    case 0xCu:
      v6 = *(_QWORD *)v3;
      v15 = sub_1A58D78C8(v6);
      sub_1A58DA968((_BYTE *)&v14 + 7, 5);
      v7 = 1;
LABEL_8:
      sub_1A58DA968((_BYTE *)&v14 + 7, v7);
      v9 = v6;
      goto LABEL_10;
    case 0xDu:
      v10 = *(_QWORD *)v3;
      swift_bridgeObjectRelease();
      v15 = sub_1A58D78C8(v10);
      sub_1A58DA968((_BYTE *)&v14 + 7, 1);
      v9 = v10;
LABEL_10:
      sub_1A589D620(v9);
      v5 = v15;
      break;
    case 0xEu:
      v11 = *((_QWORD *)v3 + 2);
      sub_1A54E3458(*(_QWORD *)v3, *((unsigned int *)v3 + 2), v3[12]);
      v5 = sub_1A58D7A98(v11);
      swift_bridgeObjectRelease();
      break;
    case 0xFu:
      v12 = v3[17];
      sub_1A54E3458(*(_QWORD *)v3, *((unsigned int *)v3 + 2), v3[12]);
      swift_bridgeObjectRelease();
      if (v12 == 1)
        v4 = &unk_1E4E71688;
      else
        v4 = &unk_1E4E716B0;
LABEL_4:
      v5 = sub_1A58E0E50((uint64_t)v4);
      break;
    default:
      sub_1A55A90F4((uint64_t)v3);
      v5 = MEMORY[0x1E0DEE9E8];
      break;
  }
  return v5;
}

uint64_t sub_1A58D78C8(uint64_t a1)
{
  char v2;
  char v3;
  char v5;
  char v6;
  char v7;
  uint64_t v8;

  v8 = MEMORY[0x1E0DEE9E8];
  sub_1A58D8218(a1);
  if ((v2 & 1) != 0)
  {
    sub_1A58DA968(&v6, 1);
    sub_1A58DA968(&v5, 2);
  }
  sub_1A58D8374(a1);
  if ((v3 & 1) != 0)
    sub_1A58DA968(&v7, 3);
  return v8;
}

uint64_t sub_1A58D7940(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  uint64_t v15;

  v2 = result;
  v3 = 0;
  v15 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_1A58DA97C(&v14, *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A58D7A98(uint64_t a1)
{
  char *v1;

  if (*(_QWORD *)(a1 + 16))
  {
    v1 = (char *)&loc_1A58D7AE4
       + 4
       * byte_1A59DFB9E[*(unsigned __int8 *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0()
                                           + 68) >> 5];
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9E8];
}

void sub_1A58D7CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1A57A8674(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1A58D7D2C + 4 * byte_1A59DFBA5[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A58D7D2C()
{
  swift_bridgeObjectRelease();
  return sub_1A58E0E5C((uint64_t)&unk_1E4E71418);
}

uint64_t sub_1A58D80D0(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  char v13;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        return swift_release();
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          return swift_release();
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            return swift_release();
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    result = sub_1A58DA968(&v13, *(unsigned __int8 *)(*(_QWORD *)(v1 + 48) + v9));
  }
  v12 = v10 + 4;
  if (v12 >= v7)
    return swift_release();
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1A58D8218(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_1A58D826C()
{
  sub_1A58D8258();
}

void sub_1A58D8274(uint64_t a1@<X8>)
{
  unint64_t v1;

  v1 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
  sub_1A589D3EC(v1);
  sub_1A58D8218(v1);
  sub_1A589D620(v1);
  sub_1A58D8258();
}

void sub_1A58D82A0(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v1 = a1 & 0xFFFFFFFFFFFFFFBLL;
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  sub_1A589D3EC(v3);
  sub_1A589D3EC(v2);
  sub_1A58D8218(v3);
  if ((v4 & 1) == 0)
    sub_1A58D8218(v2);
  sub_1A589D620(v3);
  sub_1A589D620(v2);
  sub_1A58D8258();
}

void sub_1A58D8374(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_1A58D83C8()
{
  sub_1A58D83B4();
}

void sub_1A58D83D0(uint64_t a1@<X8>)
{
  unint64_t v1;

  v1 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
  sub_1A589D3EC(v1);
  sub_1A58D8374(v1);
  sub_1A589D620(v1);
  sub_1A58D83B4();
}

void sub_1A58D83FC(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v1 = a1 & 0xFFFFFFFFFFFFFFBLL;
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  sub_1A589D3EC(v3);
  sub_1A589D3EC(v2);
  sub_1A58D8374(v3);
  if ((v4 & 1) == 0)
    sub_1A58D8374(v2);
  sub_1A589D620(v3);
  sub_1A589D620(v2);
  sub_1A58D83B4();
}

void sub_1A58D8504(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_1A58D8558()
{
  sub_1A58D8544();
}

void sub_1A58D8560(uint64_t a1@<X8>)
{
  unint64_t v1;

  v1 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
  sub_1A589D3EC(v1);
  sub_1A58D8504(v1);
  sub_1A589D620(v1);
  sub_1A58D8544();
}

void sub_1A58D858C(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v1 = a1 & 0xFFFFFFFFFFFFFFBLL;
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  sub_1A589D3EC(v3);
  sub_1A589D3EC(v2);
  sub_1A58D8504(v3);
  if ((v4 & 1) == 0)
    sub_1A58D8504(v2);
  sub_1A589D620(v3);
  sub_1A589D620(v2);
  sub_1A58D8544();
}

uint64_t sub_1A58D8660(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796488);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s21PipeliningRequirementOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A58D86EC + 4 * byte_1A59DFC2A[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A58D8720 + 4 * byte_1A59DFC25[v4]))();
}

uint64_t sub_1A58D8720(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58D8728(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58D8730);
  return result;
}

uint64_t sub_1A58D873C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58D8744);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A58D8748(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58D8750(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s21PipeliningRequirementOMa()
{
  return &_s21PipeliningRequirementON;
}

uint64_t _s18PipeliningBehaviorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A58D87B8 + 4 * byte_1A59DFC34[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A58D87EC + 4 * byte_1A59DFC2F[v4]))();
}

uint64_t sub_1A58D87EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58D87F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58D87FCLL);
  return result;
}

uint64_t sub_1A58D8808(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58D8810);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A58D8814(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58D881C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18PipeliningBehaviorOMa()
{
  return &_s18PipeliningBehaviorON;
}

unint64_t sub_1A58D883C()
{
  unint64_t result;

  result = qword_1EE797D88;
  if (!qword_1EE797D88)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DFCB4, &_s18PipeliningBehaviorON);
    atomic_store(result, (unint64_t *)&qword_1EE797D88);
  }
  return result;
}

unint64_t sub_1A58D8884()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7AAE60;
  if (!qword_1EE7AAE60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0((uint64_t *)&unk_1EE7AAE68);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7AAE60);
  }
  return result;
}

unint64_t sub_1A58D88D4()
{
  unint64_t result;

  result = qword_1EE797D90;
  if (!qword_1EE797D90)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59DFD54, &_s21PipeliningRequirementON);
    atomic_store(result, (unint64_t *)&qword_1EE797D90);
  }
  return result;
}

ValueMetadata *type metadata accessor for ProtocolMetadata()
{
  return &type metadata for ProtocolMetadata;
}

uint64_t assignWithCopy for ProtocolMetadata.TLS(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_WORD *)(a1 + 2) = *(_WORD *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ProtocolMetadata.TLS()
{
  return &type metadata for ProtocolMetadata.TLS;
}

uint64_t sub_1A58D8988(uint64_t a1, uint64_t a2)
{
  return sub_1A58D89A4(*(_DWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_DWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16));
}

uint64_t sub_1A58D89A4(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  if ((unsigned __int16)a1 == (unsigned __int16)a4 && HIWORD(a1) == HIWORD(a4))
  {
    if (a3)
    {
      if (a6)
      {
        if (a2 == a5 && a3 == a6)
          return 1;
        if ((sub_1A594CD38() & 1) != 0)
          return 1;
      }
    }
    else if (!a6)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1A58D8A2C(uint64_t *a1, uint64_t *a2)
{
  return _s15IMAP2Connection07CommandB0C12RecentErrorsV23__derived_struct_equalsySbAE_AEtFZ_0(*a1, *a2);
}

BOOL CommandConnection.RecentErrors.isEmpty.getter(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) == 0;
}

uint64_t CommandConnection.RecentErrors.Error.time.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CommandConnection.RecentErrors.Error.time.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*CommandConnection.RecentErrors.Error.time.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CommandConnection.RecentErrors.Error.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  return sub_1A55034B8(v1 + *(int *)(v3 + 20), a1, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
}

uint64_t type metadata accessor for CommandConnection.RecentErrors.Error(uint64_t a1)
{
  return sub_1A55A1A0C(a1, qword_1EE797E88);
}

uint64_t type metadata accessor for CommandConnection.RecentErrors.Error.Kind(uint64_t a1)
{
  return sub_1A55A1A0C(a1, qword_1EE797E60);
}

uint64_t CommandConnection.RecentErrors.Error.kind.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  return sub_1A58E2DCC(a1, v1 + *(int *)(v3 + 20), type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
}

double (*CommandConnection.RecentErrors.Error.kind.modify())(_QWORD)
{
  type metadata accessor for CommandConnection.RecentErrors.Error(0);
  return nullsub_1;
}

uint64_t CommandConnection.RecentErrors.Error.init(time:kind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (_DWORD *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A55034B8(a2, (uint64_t)v8, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_1A55034FC((uint64_t)v8, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    goto LABEL_8;
  }
  v13 = sub_1A594ACEC();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t))(v14 + 88))(v8, v13) != *MEMORY[0x1E0CCEB08])
  {
    (*(void (**)(_DWORD *, uint64_t))(v14 + 8))(v8, v13);
    goto LABEL_8;
  }
  (*(void (**)(_DWORD *, uint64_t))(v14 + 96))(v8, v13);
  if (*v8 == 94)
  {
    sub_1A55034FC(a2, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    *v12 = a1;
    swift_storeEnumTagMultiPayload();
    goto LABEL_9;
  }
  if (*v8 != 89)
  {
LABEL_8:
    *v12 = a1;
    sub_1A54E3394(a2, (uint64_t)v12 + *(int *)(v9 + 20), type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
LABEL_9:
    sub_1A54E3394((uint64_t)v12, a3, type metadata accessor for CommandConnection.RecentErrors.Error);
    v15 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v15, 1, v9);
  }
  sub_1A55034FC(a2, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  v15 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v15, 1, v9);
}

void static CommandConnection.RecentErrors.Error.__derived_struct_equals(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (*a1 == *a2)
  {
    v4 = *(int *)(type metadata accessor for CommandConnection.RecentErrors.Error(0) + 20);
    _s15IMAP2Connection07CommandB0C12RecentErrorsV5ErrorV4KindO21__derived_enum_equalsySbAI_AItFZ_0((uint64_t)a1 + v4, (uint64_t)a2 + v4);
  }
}

void sub_1A58D8D78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  if (*a1 == *a2)
    _s15IMAP2Connection07CommandB0C12RecentErrorsV5ErrorV4KindO21__derived_enum_equalsySbAI_AItFZ_0((uint64_t)a1 + *(int *)(a3 + 20), (uint64_t)a2 + *(int *)(a3 + 20));
}

uint64_t CommandConnection.RecentErrors.statistics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return CommandConnection.RecentErrors.Statistics.init(_:)(v2, a1);
}

uint64_t CommandConnection.RecentErrors.Statistics.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD v21[13];
  uint64_t v22;

  v4 = sub_1A594ACEC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  MEMORY[0x1E0C80A78](v22);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_WORD *)a2 = 0;
  *(_BYTE *)(a2 + 2) = 0;
  v14 = type metadata accessor for CommandConnection.RecentErrors.Statistics(0);
  *(_OWORD *)(a2 + 8) = 0u;
  v21[3] = a2 + 8;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  v15 = *(int *)(v14 + 44);
  v21[12] = v5;
  v16 = *(void (**)(void))(v5 + 56);
  v21[2] = a2 + v15;
  v16();
  v21[1] = a2 + *(int *)(v14 + 48);
  v21[11] = v16;
  v16();
  if (*(_QWORD *)(a1 + 16))
  {
    v21[9] = v4;
    v21[10] = v7;
    v17 = (uint64_t)&v13[*(int *)(v10 + 20)];
    v18 = *(unsigned __int8 *)(v11 + 80);
    v21[0] = a1;
    v21[7] = *(_QWORD *)(v11 + 72);
    v21[8] = v17;
    sub_1A55034B8(a1 + ((v18 + 32) & ~v18), (uint64_t)v13, type metadata accessor for CommandConnection.RecentErrors.Error);
    sub_1A55034B8(v17, (uint64_t)v9, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    sub_1A55034FC((uint64_t)v13, type metadata accessor for CommandConnection.RecentErrors.Error);
    v19 = (char *)&loc_1A58D8FA4 + dword_1A58D911C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return swift_bridgeObjectRelease();
}

uint64_t CommandConnection.RecentErrors.Statistics.failedToParse.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t CommandConnection.RecentErrors.Statistics.failedToParse.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

double (*CommandConnection.RecentErrors.Statistics.failedToParse.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CommandConnection.RecentErrors.Statistics.failedToAuthenticate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t CommandConnection.RecentErrors.Statistics.failedToAuthenticate.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

double (*CommandConnection.RecentErrors.Statistics.failedToAuthenticate.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CommandConnection.RecentErrors.Statistics.serverUnavailable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t CommandConnection.RecentErrors.Statistics.serverUnavailable.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

double (*CommandConnection.RecentErrors.Statistics.serverUnavailable.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CommandConnection.RecentErrors.Statistics.commandFailedCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t CommandConnection.RecentErrors.Statistics.commandFailedCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*CommandConnection.RecentErrors.Statistics.commandFailedCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CommandConnection.RecentErrors.Statistics.networkErrorCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t CommandConnection.RecentErrors.Statistics.networkErrorCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

double (*CommandConnection.RecentErrors.Statistics.networkErrorCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CommandConnection.RecentErrors.Statistics.noViableNetworkCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t CommandConnection.RecentErrors.Statistics.noViableNetworkCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

double (*CommandConnection.RecentErrors.Statistics.noViableNetworkCount.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t CommandConnection.RecentErrors.Statistics.lastResponseText.getter()
{
  _QWORD *v0;
  unint64_t v1;

  v1 = v0[4];
  sub_1A58942F8(v1, v0[5], v0[6]);
  return v1;
}

unint64_t CommandConnection.RecentErrors.Statistics.lastResponseText.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t result;

  result = sub_1A5892148(*(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48));
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 48) = a3;
  return result;
}

double (*CommandConnection.RecentErrors.Statistics.lastResponseText.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CommandConnection.RecentErrors.Statistics.lastNetworkError.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CommandConnection.RecentErrors.Statistics(0) + 44);
  return sub_1A58E0604(v3, a1);
}

uint64_t CommandConnection.RecentErrors.Statistics.lastNetworkError.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CommandConnection.RecentErrors.Statistics(0) + 44);
  return sub_1A58E064C(a1, v3);
}

double (*CommandConnection.RecentErrors.Statistics.lastNetworkError.modify())(_QWORD)
{
  type metadata accessor for CommandConnection.RecentErrors.Statistics(0);
  return nullsub_1;
}

uint64_t CommandConnection.RecentErrors.Statistics.lastNoViableNetworkError.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CommandConnection.RecentErrors.Statistics(0) + 48);
  return sub_1A58E0604(v3, a1);
}

uint64_t CommandConnection.RecentErrors.Statistics.lastNoViableNetworkError.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CommandConnection.RecentErrors.Statistics(0) + 48);
  return sub_1A58E064C(a1, v3);
}

double (*CommandConnection.RecentErrors.Statistics.lastNoViableNetworkError.modify())(_QWORD)
{
  type metadata accessor for CommandConnection.RecentErrors.Statistics(0);
  return nullsub_1;
}

void sub_1A58D93A0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD v34[16];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v37 = a1;
  v38 = a3;
  v4 = sub_1A5949B40();
  v34[1] = *(_QWORD *)(v4 - 8);
  v34[2] = v4;
  MEMORY[0x1E0C80A78](v4);
  v34[0] = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  MEMORY[0x1E0C80A78](v35);
  v36 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE797EA0);
  MEMORY[0x1E0C80A78](v7);
  v34[14] = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v34[8] = (char *)v34 - v10;
  MEMORY[0x1E0C80A78](v11);
  v34[3] = (char *)v34 - v12;
  MEMORY[0x1E0C80A78](v13);
  v34[7] = (char *)v34 - v14;
  MEMORY[0x1E0C80A78](v15);
  v34[5] = (char *)v34 - v16;
  MEMORY[0x1E0C80A78](v17);
  v34[4] = (char *)v34 - v18;
  MEMORY[0x1E0C80A78](v19);
  v34[9] = (char *)v34 - v20;
  MEMORY[0x1E0C80A78](v21);
  v34[6] = (char *)v34 - v22;
  v23 = sub_1A594ACEC();
  v34[10] = *(_QWORD *)(v23 - 8);
  v34[11] = v23;
  MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v24);
  MEMORY[0x1E0C80A78](v25);
  v26 = sub_1A594AA40();
  v34[12] = *(_QWORD *)(v26 - 8);
  v34[13] = v26;
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  v28 = type metadata accessor for ConnectionEvent(0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  v40 = *(_QWORD *)(v31 - 8);
  v41 = v31;
  MEMORY[0x1E0C80A78](v31);
  v34[15] = (char *)v34 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a2;
  sub_1A55034B8(a2, (uint64_t)v30, type metadata accessor for ConnectionEvent);
  v33 = (char *)sub_1A58D96E0 + 4 * byte_1A59DFDC0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A58D96E0()
{
  _QWORD *v0;

  sub_1A55034FC(v0[20], type metadata accessor for ConnectionEvent);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[21] + 56))(v0[19], 1, 1, v0[22]);
}

uint64_t sub_1A58D9D48(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  int64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t *v35;
  unint64_t v36;
  uint64_t v37;

  v3 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  v37 = (uint64_t)&v32 - v5;
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v12 = (uint64_t *)((char *)&v32 - v11);
  v13 = *v1;
  v14 = *(_QWORD *)(*v1 + 16);
  if (v14)
  {
    v33 = v9;
    v34 = v10;
    v35 = v1;
    v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v16 = *(_QWORD *)(v8 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v17 = 0;
    v36 = v15;
    do
    {
      result = sub_1A55034B8(v13 + v15, (uint64_t)v12, type metadata accessor for CommandConnection.RecentErrors.Error);
      v19 = *v12;
      if (*v12 > a1)
      {
        if ((uint64_t)(*v12 - a1) < 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
          return result;
        }
        sub_1A55034FC((uint64_t)v12, type metadata accessor for CommandConnection.RecentErrors.Error);
      }
      else
      {
        if ((uint64_t)(a1 - v19) < 0)
          goto LABEL_38;
        sub_1A55034FC((uint64_t)v12, type metadata accessor for CommandConnection.RecentErrors.Error);
        if (v19 != a1)
        {
          result = swift_bridgeObjectRelease();
          v20 = v17 + 1;
          v21 = v35;
          if (!__OFADD__(v17, 1))
          {
            v22 = *v35;
            v23 = *(_QWORD *)(*v35 + 16);
            v24 = v34;
            if (v20 == v23)
            {
LABEL_11:
              v14 = v17;
              goto LABEL_13;
            }
            v25 = v16 + v15;
            v26 = v17 + 1;
            while (2)
            {
              if (v26 >= v23)
                goto LABEL_39;
              result = sub_1A55034B8(v22 + v25, (uint64_t)v24, type metadata accessor for CommandConnection.RecentErrors.Error);
              v27 = *v24;
              if (*v24 > a1)
              {
                if ((uint64_t)(*v24 - a1) < 0)
                  goto LABEL_42;
                result = sub_1A55034FC((uint64_t)v24, type metadata accessor for CommandConnection.RecentErrors.Error);
                goto LABEL_24;
              }
              if ((uint64_t)(a1 - v27) < 0)
                goto LABEL_43;
              result = sub_1A55034FC((uint64_t)v24, type metadata accessor for CommandConnection.RecentErrors.Error);
              if (v27 == a1)
              {
LABEL_24:
                if (v26 != v17)
                {
                  if ((v17 & 0x8000000000000000) != 0)
                    goto LABEL_44;
                  v28 = *v21;
                  v29 = *(_QWORD *)(*v21 + 16);
                  if (v17 >= v29)
                    goto LABEL_45;
                  result = sub_1A55034B8(v28 + v36 + v17 * v16, v37, type metadata accessor for CommandConnection.RecentErrors.Error);
                  if (v26 >= v29)
                    goto LABEL_46;
                  v30 = v33;
                  sub_1A55034B8(v28 + v25, v33, type metadata accessor for CommandConnection.RecentErrors.Error);
                  result = swift_isUniquelyReferenced_nonNull_native();
                  v21 = v35;
                  *v35 = v28;
                  if ((result & 1) == 0)
                  {
                    result = sub_1A58D632C(v28);
                    v28 = result;
                    *v21 = result;
                  }
                  if (v17 >= *(_QWORD *)(v28 + 16))
                    goto LABEL_47;
                  result = sub_1A58E2DCC(v30, v28 + v36 + v17 * v16, type metadata accessor for CommandConnection.RecentErrors.Error);
                  if (v26 >= *(_QWORD *)(*v21 + 16))
                    goto LABEL_48;
                  result = sub_1A58E2DCC(v37, *v21 + v25, type metadata accessor for CommandConnection.RecentErrors.Error);
                  v24 = v34;
                }
                if (__OFADD__(v17++, 1))
                  goto LABEL_41;
              }
              v20 = v26 + 1;
              if (__OFADD__(v26, 1))
                goto LABEL_40;
              v22 = *v21;
              v23 = *(_QWORD *)(*v21 + 16);
              ++v26;
              v25 += v16;
              if (v20 == v23)
                goto LABEL_11;
              continue;
            }
          }
          goto LABEL_49;
        }
      }
      ++v17;
      v15 += v16;
    }
    while (v14 != v17);
    swift_bridgeObjectRelease();
    v20 = *(_QWORD *)(*v35 + 16);
LABEL_13:
    if (v20 < v14)
    {
      __break(1u);
      goto LABEL_15;
    }
  }
  else
  {
LABEL_15:
    v20 = 0;
  }
  return sub_1A5892674(v14, v20);
}

uint64_t CommandConnection.BackOffBehavior.hash(into:)()
{
  return sub_1A594CE88();
}

BOOL static CommandConnection.BackOffBehavior.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t CommandConnection.BackOffBehavior.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t CommandConnection.RecentErrors.backOffBehavior.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v34;
  char v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  unint64_t *v54;
  char v55;
  uint64_t v56;

  v2 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v53 = (char *)&v47 - v6;
  MEMORY[0x1E0C80A78](v7);
  v54 = (unint64_t *)((char *)&v47 - v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - v10;
  v12 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v52 = (char *)&v47 - v14;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v47 - v18;
  v20 = MEMORY[0x1E0DEE9E8];
  v56 = MEMORY[0x1E0DEE9E8];
  v21 = *(_QWORD *)(a1 + 16);
  if (!v21)
  {
    if (!*(_QWORD *)(MEMORY[0x1E0DEE9E8] + 16))
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    goto LABEL_24;
  }
  v47 = v4;
  v48 = v17;
  v22 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  v23 = *(_QWORD *)(v16 + 72);
  v51 = a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v49 = v22;
  v50 = v21;
  do
  {
    sub_1A55034B8(v22, (uint64_t)v19, type metadata accessor for CommandConnection.RecentErrors.Error);
    sub_1A55034B8((uint64_t)&v19[*(int *)(v12 + 20)], (uint64_t)v11, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    if (swift_getEnumCaseMultiPayload())
      sub_1A55034FC((uint64_t)v11, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    else
      sub_1A58DB0F8(&v55, *v11);
    sub_1A55034FC((uint64_t)v19, type metadata accessor for CommandConnection.RecentErrors.Error);
    v22 += v23;
    --v21;
  }
  while (v21);
  swift_bridgeObjectRelease();
  v20 = v56;
  if (*(_QWORD *)(v56 + 16))
  {
LABEL_24:
    v34 = sub_1A58E0FA4((uint64_t)&unk_1E4F164F0);
    v35 = sub_1A5895CF8(v20, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v35 & 1) != 0)
      return 1;
    else
      return 2;
  }
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v25 = v49;
  v24 = v50;
  v26 = v49;
  v27 = v54;
  do
  {
    sub_1A55034B8(v26 + *(int *)(v12 + 20), (uint64_t)v27, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = *v27;
      if ((~*v27 & 0xF000000000000007) != 0)
      {
        *((_QWORD *)&v30 + 1) = *v27;
        *(_QWORD *)&v30 = v28 + 0x7FFFFFFFFFFFFF98;
        v29 = v30 >> 3;
        v31 = ((v28 >> 59) & 0x1E | (v28 >> 2) & 1) != 0x10 || v29 > 0xE;
        v32 = (1 << v29) & 0x6E27;
        if (!v31 && v32 != 0)
        {
          sub_1A5862B80(v28);
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
        sub_1A5862B80(v28);
      }
      swift_bridgeObjectRelease();
      v27 = v54;
    }
    else
    {
      sub_1A55034FC((uint64_t)v27, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    }
    v26 += v23;
    --v24;
  }
  while (v24);
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v37 = v25;
  v38 = v50;
  v39 = v48;
  v40 = (uint64_t)v52;
  v41 = (uint64_t)v53;
  while (1)
  {
    sub_1A55034B8(v37, v40, type metadata accessor for CommandConnection.RecentErrors.Error);
    v42 = v40 + *(int *)(v12 + 20);
    swift_storeEnumTagMultiPayload();
    _s15IMAP2Connection07CommandB0C12RecentErrorsV5ErrorV4KindO21__derived_enum_equalsySbAI_AItFZ_0(v42, v41);
    LOBYTE(v42) = v43;
    sub_1A55034FC(v41, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    sub_1A55034FC(v40, type metadata accessor for CommandConnection.RecentErrors.Error);
    if ((v42 & 1) != 0)
      break;
    v37 += v23;
    if (!--v38)
    {
      swift_bridgeObjectRelease();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v44 = (uint64_t)v47;
      v46 = v49;
      v45 = v50;
      while (1)
      {
        sub_1A55034B8(v46, v39, type metadata accessor for CommandConnection.RecentErrors.Error);
        sub_1A55034B8(v39 + *(int *)(v12 + 20), v44, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
        if (swift_getEnumCaseMultiPayload() == 2)
          break;
        sub_1A55034FC(v44, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
        sub_1A55034FC(v39, type metadata accessor for CommandConnection.RecentErrors.Error);
        v46 += v23;
        if (!--v45)
        {
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      swift_bridgeObjectRelease();
      sub_1A55034FC(v39, type metadata accessor for CommandConnection.RecentErrors.Error);
      break;
    }
  }
LABEL_37:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1A58DA5B8(uint64_t *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  BOOL v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v41;
  uint64_t *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD v50[7];
  uint64_t v51;
  char v52[80];
  _BYTE v53[56];
  uint64_t v54;
  char v55[80];
  uint64_t v56;
  uint64_t v57;
  char v58[80];
  _QWORD v59[11];

  v5 = *v2;
  sub_1A594CE64();
  sub_1A58622C0((uint64_t)a2, (uint64_t)&v56);
  v6 = v57;
  v57 &= ~0x1000000000000000uLL;
  v48 = a2;
  v41 = v2;
  v42 = a1;
  if ((v6 & 0x1000000000000000) != 0)
  {
    sub_1A585BA78((uint64_t)&v56, (uint64_t)v58);
    sub_1A594CE88();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A58687AC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A586418C);
    sub_1A586A920();
    sub_1A58687AC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);
  }
  else
  {
    sub_1A594CE88();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    sub_1A594B1D8();
  }
  v7 = sub_1A594CED0();
  v8 = -1 << *(_BYTE *)(v5 + 32);
  v9 = v7 & ~v8;
  v47 = v5 + 56;
  if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v45 = ~v8;
    v46 = v5;
    do
    {
      v10 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 80 * v9);
      v12 = *v10;
      v11 = v10[1];
      v13 = v10[2];
      v14 = v10[3];
      v15 = v10[7];
      if ((v15 & 0x1000000000000000) != 0)
      {
        v21 = v10[4];
        v22 = v10[5];
        v23 = v10[6];
        v25 = v10[8];
        v24 = v10[9];
        v59[0] = *v10;
        v59[1] = v11;
        v59[2] = v13;
        v59[3] = v14;
        v44 = v21;
        v59[4] = v21;
        v59[5] = v22;
        v59[6] = v23;
        v59[7] = v15 & 0xEFFFFFFFFFFFFFFFLL;
        v59[8] = v25;
        v59[9] = v24;
        sub_1A58622C0((uint64_t)v48, (uint64_t)v53);
        v26 = v54;
        v54 &= ~0x1000000000000000uLL;
        if ((v26 & 0x1000000000000000) != 0)
        {
          sub_1A585BA78((uint64_t)v53, (uint64_t)v55);
          sub_1A58687AC(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A586418C);
          sub_1A586418C(v12, v11, v13, v14, v44, v22, v23, v15, v25, v24);
          sub_1A586B68C((uint64_t)v59);
          v43 = v27;
          sub_1A58687AC(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);
          sub_1A5862344(v12, v11, v13, v14, v44, v22, v23, v15, v25, v24);
          if ((v43 & 1) != 0)
            goto LABEL_23;
        }
      }
      else
      {
        sub_1A58622C0((uint64_t)v48, (uint64_t)v50);
        v16 = v51;
        v51 &= ~0x1000000000000000uLL;
        if ((v16 & 0x1000000000000000) != 0)
        {
          sub_1A585BA78((uint64_t)v50, (uint64_t)v52);
        }
        else
        {
          v17 = v50[2];
          v18 = v50[3];
          v19 = v12 == v50[0] && v11 == v50[1];
          if (v19 || (sub_1A594CD38() & 1) != 0)
          {
            v20 = v13 == v17 && v14 == v18;
            if (v20 || (sub_1A594CD38() & 1) != 0)
            {
LABEL_23:
              swift_bridgeObjectRelease();
              sub_1A58687AC(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);
              v28 = (uint64_t *)(*(_QWORD *)(*v41 + 48) + 80 * v9);
              v29 = *v28;
              v30 = v28[1];
              v31 = v28[2];
              v32 = v28[3];
              v33 = v28[4];
              v34 = v28[5];
              v35 = v28[6];
              v36 = v28[7];
              v38 = v28[8];
              v37 = v28[9];
              *v42 = v29;
              v42[1] = v30;
              v42[2] = v31;
              v42[3] = v32;
              v42[4] = v33;
              v42[5] = v34;
              v42[6] = v35;
              v42[7] = v36;
              v42[8] = v38;
              v42[9] = v37;
              sub_1A586418C(v29, v30, v31, v32, v33, v34, v35, v36, v38, v37);
              return 0;
            }
          }
        }
      }
      v5 = v46;
      v9 = (v9 + 1) & v45;
    }
    while (((*(_QWORD *)(v47 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v49 = *v41;
  *v41 = 0x8000000000000000;
  sub_1A58687AC(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A586418C);
  sub_1A58DCC34(v48, v9, isUniquelyReferenced_nonNull_native);
  *v41 = v49;
  swift_bridgeObjectRelease();
  sub_1A58622C0((uint64_t)v48, (uint64_t)v42);
  return 1;
}

uint64_t sub_1A58DA968(_BYTE *a1, uint64_t a2)
{
  return sub_1A58DA990(a1, a2, (uint64_t *)&unk_1EE79A6E0);
}

uint64_t sub_1A58DA97C(_BYTE *a1, uint64_t a2)
{
  return sub_1A58DA990(a1, a2, &qword_1EE79A6D8);
}

uint64_t sub_1A58DA990(_BYTE *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  v7 = *v3;
  sub_1A594CE64();
  sub_1A594CE88();
  v8 = sub_1A594CED0();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A58DCFF0(a2, v10, isUniquelyReferenced_nonNull_native, a3);
    *v3 = v15;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v11 = *(_QWORD *)(v7 + 48);
  if (*(unsigned __int8 *)(v11 + v10) != a2)
  {
    v12 = ~v9;
    do
    {
      v10 = (v10 + 1) & v12;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v11 + v10) != a2);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1A58DAAC4(_DWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_1A594CE64();
  sub_1A594CEAC();
  v6 = sub_1A594CED0();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1A58DD148(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_DWORD *)(v9 + 4 * v8) != (_DWORD)a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_DWORD *)(v9 + 4 * v8) != (_DWORD)a2);
  }
  result = 0;
  LODWORD(a2) = *(_DWORD *)(*(_QWORD *)(*v2 + 48) + 4 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1A58DABE0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;

  v4 = v3;
  v8 = *v3;
  sub_1A594CE64();
  sub_1A594CE88();
  if (a3)
  {
    sub_1A594B4B4();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v9 = sub_1A594CED0();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  v23 = a1;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = *v4;
    *v4 = 0x8000000000000000;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A58DD294(a2, a3, v11, isUniquelyReferenced_nonNull_native);
    *v4 = v24;
    swift_bridgeObjectRelease();
    *v23 = a2;
    v23[1] = a3;
    return 1;
  }
  v12 = ~v10;
  while (1)
  {
    if (!*(_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v11 + 8))
    {
      if (!a3)
        goto LABEL_19;
      goto LABEL_7;
    }
    if (!a3)
      goto LABEL_7;
    v13 = sub_1A594B4B4();
    v15 = v14;
    if (v13 == sub_1A594B4B4() && v15 == v16)
      break;
    v18 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      goto LABEL_18;
LABEL_7:
    v11 = (v11 + 1) & v12;
    if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      goto LABEL_16;
  }
  swift_bridgeObjectRelease_n();
LABEL_18:
  swift_bridgeObjectRelease();
LABEL_19:
  swift_bridgeObjectRelease();
  v21 = (uint64_t *)(*(_QWORD *)(*v4 + 48) + 16 * v11);
  v22 = v21[1];
  *v23 = *v21;
  v23[1] = v22;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return 0;
}

uint64_t sub_1A58DAE08(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  _QWORD *v5;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v11 = a5 & 1;
  v12 = *v5;
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  v29 = v5;
  v30 = a1;
  sub_1A594CE94();
  if ((a5 & 1) == 0)
    sub_1A594CEB8();
  v13 = sub_1A594CED0();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  v15 = v13 & ~v14;
  v16 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v17 = ~v14;
    v18 = *(_QWORD *)(v12 + 48);
    do
    {
      v19 = v18 + 32 * v15;
      v20 = *(_QWORD *)(v19 + 16);
      v21 = *(_BYTE *)(v19 + 24);
      v22 = *(_QWORD *)v19 == a2 && *(_QWORD *)(v19 + 8) == a3;
      if (v22 || (sub_1A594CD38() & 1) != 0)
      {
        if ((v21 & 1) != 0)
        {
          if (v11)
            goto LABEL_15;
        }
        else if (!v11 && !((v20 ^ a4) >> 14))
        {
LABEL_15:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v23 = *(_QWORD *)(*v29 + 48) + 32 * v15;
          v25 = *(_QWORD *)v23;
          v24 = *(_QWORD *)(v23 + 8);
          v26 = *(_QWORD *)(v23 + 16);
          LOBYTE(v23) = *(_BYTE *)(v23 + 24);
          *(_QWORD *)v30 = v25;
          *(_QWORD *)(v30 + 8) = v24;
          *(_QWORD *)(v30 + 16) = v26;
          *(_BYTE *)(v30 + 24) = v23;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          return 0;
        }
      }
      v15 = (v15 + 1) & v17;
    }
    while (((*(_QWORD *)(v16 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v31 = *v29;
  *v29 = 0x8000000000000000;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A58DD5EC(a2, a3, a4, v11, v15, isUniquelyReferenced_nonNull_native);
  *v29 = v31;
  swift_bridgeObjectRelease();
  *(_QWORD *)v30 = a2;
  *(_QWORD *)(v30 + 8) = a3;
  *(_QWORD *)(v30 + 16) = a4;
  result = 1;
  *(_BYTE *)(v30 + 24) = v11 != 0;
  return result;
}

BOOL sub_1A58DB038()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;

  v1 = *v0;
  sub_1A594CE64();
  sub_1A594CE88();
  v2 = sub_1A594CED0() & ~(-1 << *(_BYTE *)(v1 + 32));
  v3 = (1 << v2) & *(_QWORD *)(v1 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8) + 56);
  if (!v3)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v0;
    *v0 = 0x8000000000000000;
    sub_1A58DD7E0(v2, isUniquelyReferenced_nonNull_native);
    *v0 = v6;
    swift_bridgeObjectRelease();
  }
  return v3 == 0;
}

uint64_t sub_1A58DB0F8(_BYTE *a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v4 = a2 & 1;
  v5 = *v2;
  sub_1A594CE64();
  sub_1A594CE88();
  v6 = sub_1A594CED0();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1A58DD8DC(v4, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (((((_DWORD)v4 == 0) ^ *(unsigned __int8 *)(v9 + v8)) & 1) == 0)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (((((_DWORD)v4 == 0) ^ *(unsigned __int8 *)(v9 + v8)) & 1) == 0);
  }
  result = 0;
  LOBYTE(v4) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = v4;
  return result;
}

uint64_t sub_1A58DB230()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1008);
  v3 = sub_1A594C6CC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_40;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v35 = (_QWORD *)(v2 + 56);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v34 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  swift_retain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v36 = (v7 - 1) & v7;
      v37 = v9;
      v12 = __clz(__rbit64(v7)) | (v9 << 6);
      goto LABEL_24;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_41;
    if (v13 >= v34)
      break;
    v14 = v35[v13];
    v15 = v9 + 1;
    if (!v14)
    {
      v15 = v9 + 2;
      if (v9 + 2 >= v34)
        break;
      v14 = v35[v15];
      if (!v14)
      {
        v15 = v9 + 3;
        if (v9 + 3 >= v34)
          break;
        v14 = v35[v15];
        if (!v14)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v34)
            break;
          v14 = v35[v16];
          if (!v14)
          {
            while (1)
            {
              v15 = v16 + 1;
              if (__OFADD__(v16, 1))
                goto LABEL_42;
              if (v15 >= v34)
                goto LABEL_36;
              v14 = v35[v15];
              ++v16;
              if (v14)
                goto LABEL_23;
            }
          }
          v15 = v9 + 4;
        }
      }
    }
LABEL_23:
    v36 = (v14 - 1) & v14;
    v37 = v15;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 80 * v12);
    v18 = *v17;
    v19 = v17[1];
    v20 = v17[2];
    v21 = v17[3];
    v38 = v17[4];
    v39 = v17[5];
    v22 = v17[7];
    v23 = v17[9];
    v40 = v17[8];
    v41 = v17[6];
    sub_1A594CE64();
    if ((v22 & 0x1000000000000000) != 0)
    {
      sub_1A594CE88();
      __asm { BR              X9 }
    }
    sub_1A594CE88();
    sub_1A594B1D8();
    sub_1A594B1D8();
    v24 = sub_1A594CED0();
    v25 = -1 << *(_BYTE *)(v4 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v8 + 8 * (v26 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v8 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    v28 = 0;
    v29 = (unint64_t)(63 - v25) >> 6;
    do
    {
      if (++v27 == v29 && (v28 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        JUMPOUT(0x1A58DB8A8);
      }
      v30 = v27 == v29;
      if (v27 == v29)
        v27 = 0;
      v28 |= v30;
      v31 = *(_QWORD *)(v8 + 8 * v27);
    }
    while (v31 == -1);
    v10 = __clz(__rbit64(~v31)) + (v27 << 6);
LABEL_7:
    *(_QWORD *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    v11 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 80 * v10);
    *v11 = v18;
    v11[1] = v19;
    v11[2] = v20;
    v11[3] = v21;
    v9 = v37;
    v11[4] = v38;
    v11[5] = v39;
    v11[6] = v41;
    v11[7] = v22;
    v11[8] = v40;
    v11[9] = v23;
    ++*(_QWORD *)(v4 + 16);
    v7 = v36;
  }
LABEL_36:
  swift_release();
  v1 = v0;
  v32 = 1 << *(_BYTE *)(v2 + 32);
  if (v32 > 63)
    bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v35 = -1 << v32;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A58DB8C4(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(a2);
  result = sub_1A594C6CC();
  v6 = result;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 0;
    v8 = (_QWORD *)(v4 + 56);
    v9 = 1 << *(_BYTE *)(v4 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v4 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12)
          goto LABEL_33;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_33;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_33;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                v28 = 1 << *(_BYTE *)(v4 + 32);
                if (v28 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v28;
                v3 = v2;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_39;
                  if (v7 >= v12)
                    goto LABEL_33;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_23;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_23:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v16);
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v21 = -1 << *(_BYTE *)(v6 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1A58DBB68()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6F8);
  result = sub_1A594C6CC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v14);
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A58DBE10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAEA0);
  v3 = sub_1A594C6CC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_35;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_35;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_35;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_35:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_41;
                  if (v11 >= v8)
                    goto LABEL_35;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v21 = *v19;
      v20 = v19[1];
      sub_1A594CE64();
      sub_1A594CE88();
      if (v20)
      {
        sub_1A594B4B4();
        sub_1A594B1D8();
        swift_bridgeObjectRelease();
      }
      result = sub_1A594CED0();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v21;
      v13[1] = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A58DC124()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAE98);
  result = sub_1A594C6CC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A58DC3CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAE90);
  v3 = sub_1A594C6CC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v33 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v32 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v15 >= v32)
          goto LABEL_35;
        v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v32)
            goto LABEL_35;
          v16 = v33[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v32)
              goto LABEL_35;
            v16 = v33[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_35:
                swift_release();
                v1 = v0;
                v31 = 1 << *(_BYTE *)(v2 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_41;
                  if (v10 >= v32)
                    goto LABEL_35;
                  v16 = v33[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = *(_QWORD *)(v2 + 48) + 32 * v14;
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(_QWORD *)(v19 + 16);
      v23 = *(unsigned __int8 *)(v19 + 24);
      sub_1A594CE64();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594B1D8();
      swift_bridgeObjectRelease();
      sub_1A594CE94();
      if (v23 != 1)
        sub_1A594CEB8();
      result = sub_1A594CED0();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 32 * v11;
      *(_QWORD *)v12 = v20;
      *(_QWORD *)(v12 + 8) = v21;
      *(_QWORD *)(v12 + 16) = v22;
      *(_BYTE *)(v12 + 24) = v23;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A58DC718()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7AAEA8);
  result = sub_1A594C6CC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v23 = v2;
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (!v9)
      {
        v13 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v13 >= v10)
          goto LABEL_31;
        v9 = v6[v13];
        ++v5;
        if (!v9)
        {
          v5 = v13 + 1;
          if (v13 + 1 >= v10)
            goto LABEL_31;
          v9 = v6[v5];
          if (!v9)
          {
            v5 = v13 + 2;
            if (v13 + 2 >= v10)
              goto LABEL_31;
            v9 = v6[v5];
            if (!v9)
            {
              v14 = v13 + 3;
              if (v14 >= v10)
              {
LABEL_31:
                v22 = 1 << *(_BYTE *)(v23 + 32);
                if (v22 > 63)
                  bzero(v6, ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v22;
                v1 = v0;
                *(_QWORD *)(v23 + 16) = 0;
                break;
              }
              v9 = v6[v14];
              if (!v9)
              {
                while (1)
                {
                  v5 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_37;
                  if (v5 >= v10)
                    goto LABEL_31;
                  v9 = v6[v5];
                  ++v14;
                  if (v9)
                    goto LABEL_22;
                }
              }
              v5 = v14;
            }
          }
        }
      }
LABEL_22:
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v15 = -1 << *(_BYTE *)(v4 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v18 = 0;
        v19 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v19 && (v18 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          v20 = v17 == v19;
          if (v17 == v19)
            v17 = 0;
          v18 |= v20;
          v21 = *(_QWORD *)(v11 + 8 * v17);
        }
        while (v21 == -1);
        v12 = __clz(__rbit64(~v21)) + (v17 << 6);
      }
      v9 &= v9 - 1;
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A58DC98C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7AAE80);
  result = sub_1A594C6CC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A58DCC34(_QWORD *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t *v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD v60[7];
  uint64_t v61;
  _BYTE v62[80];
  _BYTE v63[56];
  uint64_t v64;
  _BYTE v65[80];
  uint64_t v66;
  uint64_t v67;
  _BYTE v68[80];
  _QWORD v69[11];

  sub_1A58622C0((uint64_t)a1, (uint64_t)&v50);
  v6 = v52;
  v7 = v53;
  v8 = v54;
  v9 = v55;
  v10 = v57;
  v11 = v58;
  v12 = v59;
  v42 = v3;
  v13 = *(_QWORD *)(*v3 + 16);
  v14 = *(_QWORD *)(*v3 + 24);
  if (v14 > v13 && (a3 & 1) != 0)
    goto LABEL_31;
  if ((a3 & 1) != 0)
  {
    v45 = v56;
    v47 = v51;
    v15 = v50;
    sub_1A58DB230();
  }
  else
  {
    if (v14 > v13)
    {
      sub_1A58DDA40();
      goto LABEL_31;
    }
    v45 = v56;
    v47 = v51;
    v15 = v50;
    sub_1A58DE724();
  }
  v48 = *v3;
  sub_1A594CE64();
  sub_1A58622C0((uint64_t)a1, (uint64_t)&v66);
  v16 = v67;
  v67 &= ~0x1000000000000000uLL;
  if ((v16 & 0x1000000000000000) != 0)
  {
    sub_1A585BA78((uint64_t)&v66, (uint64_t)v68);
    sub_1A594CE88();
    sub_1A585B39C(v15, v47, v6, v7, v8, v9, v45, v10 & 0xEFFFFFFFFFFFFFFFLL, v11, v12);
    sub_1A586A920();
    sub_1A58687AC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);
  }
  else
  {
    sub_1A594CE88();
    sub_1A594B1D8();
    sub_1A594B1D8();
  }
  v17 = sub_1A594CED0();
  v18 = -1 << *(_BYTE *)(v48 + 32);
  a2 = v17 & ~v18;
  if (((*(_QWORD *)(v48 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v46 = ~v18;
    do
    {
      v19 = (uint64_t *)(*(_QWORD *)(v48 + 48) + 80 * a2);
      v20 = *v19;
      v21 = v19[1];
      v22 = v19[2];
      v23 = v19[3];
      v24 = v19[7];
      if ((v24 & 0x1000000000000000) != 0)
      {
        v31 = v19[4];
        v30 = v19[5];
        v32 = v19[6];
        v33 = v19[8];
        v34 = v19[9];
        v69[0] = *v19;
        v69[1] = v21;
        v69[2] = v22;
        v69[3] = v23;
        v69[4] = v31;
        v69[5] = v30;
        v44 = v30;
        v69[6] = v32;
        v69[7] = v24 & 0xEFFFFFFFFFFFFFFFLL;
        v69[8] = v33;
        v69[9] = v34;
        sub_1A58622C0((uint64_t)a1, (uint64_t)v63);
        v35 = v64;
        v64 &= ~0x1000000000000000uLL;
        if ((v35 & 0x1000000000000000) != 0)
        {
          sub_1A585BA78((uint64_t)v63, (uint64_t)v65);
          sub_1A58687AC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A586418C);
          sub_1A586418C(v20, v21, v22, v23, v31, v44, v32, v24, v33, v34);
          sub_1A586B68C((uint64_t)v69);
          v43 = v36;
          sub_1A58687AC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);
          sub_1A5862344(v20, v21, v22, v23, v31, v44, v32, v24, v33, v34);
          if ((v43 & 1) != 0)
            goto LABEL_30;
        }
      }
      else
      {
        sub_1A58622C0((uint64_t)a1, (uint64_t)v60);
        v25 = v61;
        v61 &= ~0x1000000000000000uLL;
        if ((v25 & 0x1000000000000000) != 0)
        {
          sub_1A585BA78((uint64_t)v60, (uint64_t)v62);
        }
        else
        {
          v26 = v60[2];
          v27 = v60[3];
          v28 = v20 == v60[0] && v21 == v60[1];
          if (v28 || (sub_1A594CD38() & 1) != 0)
          {
            v29 = v22 == v26 && v23 == v27;
            if (v29 || (sub_1A594CD38() & 1) != 0)
            {
LABEL_30:
              sub_1A594CDEC();
              __break(1u);
              break;
            }
          }
        }
      }
      a2 = (a2 + 1) & v46;
    }
    while (((*(_QWORD *)(v48 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_31:
  v37 = *v42;
  *(_QWORD *)(*v42 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_1A58622C0((uint64_t)a1, *(_QWORD *)(v37 + 48) + 80 * a2);
  v39 = *(_QWORD *)(v37 + 16);
  v40 = __OFADD__(v39, 1);
  v41 = v39 + 1;
  if (v40)
    __break(1u);
  else
    *(_QWORD *)(v37 + 16) = v41;
  return result;
}

uint64_t sub_1A58DCFF0(uint64_t result, unint64_t a2, char a3, uint64_t *a4)
{
  uint64_t *v4;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v6 = result;
  v7 = *(_QWORD *)(*v4 + 16);
  v8 = *(_QWORD *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1A58DB8C4(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1A58DDC20(a4);
      goto LABEL_14;
    }
    sub_1A58DEE50(v9, a4);
  }
  v10 = *v4;
  sub_1A594CE64();
  sub_1A594CE88();
  result = sub_1A594CED0();
  v11 = -1 << *(_BYTE *)(v10 + 32);
  a2 = result & ~v11;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v10 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == v6)
    {
LABEL_13:
      result = sub_1A594CDEC();
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v12 + a2) == v6)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v14 + 48) + a2) = v6;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
  return result;
}

uint64_t sub_1A58DD148(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1A58DBB68();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1A58DDDA8();
      goto LABEL_14;
    }
    sub_1A58DF0C4();
  }
  v8 = *v3;
  sub_1A594CE64();
  sub_1A594CEAC();
  result = sub_1A594CED0();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      result = sub_1A594CDEC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_DWORD *)(v10 + 4 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(_QWORD *)(v12 + 48) + 4 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1A58DD294(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_1A58DBE10();
    }
    else
    {
      if (v10 > v9)
      {
        result = (uint64_t)sub_1A58DDF3C();
        goto LABEL_22;
      }
      sub_1A58DF33C();
    }
    v11 = *v4;
    sub_1A594CE64();
    sub_1A594CE88();
    if (a2)
    {
      sub_1A594B4B4();
      sub_1A594B1D8();
      swift_bridgeObjectRelease();
    }
    result = sub_1A594CED0();
    v12 = -1 << *(_BYTE *)(v11 + 32);
    a3 = result & ~v12;
    if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
    {
      v13 = ~v12;
      do
      {
        if (*(_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * a3 + 8))
        {
          if (a2)
          {
            v14 = sub_1A594B4B4();
            v16 = v15;
            if (v14 == sub_1A594B4B4() && v16 == v17)
              goto LABEL_25;
            v19 = sub_1A594CD38();
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
            if ((v19 & 1) != 0)
              goto LABEL_26;
          }
        }
        else if (!a2)
        {
          goto LABEL_26;
        }
        a3 = (a3 + 1) & v13;
      }
      while (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
LABEL_25:
    swift_bridgeObjectRelease_n();
LABEL_26:
    result = sub_1A594CDEC();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1A58DD4A0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1A58DC124();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1A58DE0E8();
      goto LABEL_14;
    }
    sub_1A58DF638();
  }
  v8 = *v3;
  sub_1A594CE64();
  sub_1A594CE88();
  result = sub_1A594CED0();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      result = sub_1A594CDEC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v10 + a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1A58DD5EC(uint64_t result, uint64_t a2, unint64_t a3, char a4, unint64_t a5, char a6)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v7 = v6;
  v11 = result;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0)
    goto LABEL_23;
  if ((a6 & 1) != 0)
  {
    sub_1A58DC3CC();
  }
  else
  {
    if (v13 > v12)
    {
      result = (uint64_t)sub_1A58DE278();
      goto LABEL_23;
    }
    sub_1A58DF8B0();
  }
  v14 = *v6;
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A594CE94();
  if ((a4 & 1) == 0)
    sub_1A594CEB8();
  result = sub_1A594CED0();
  v15 = -1 << *(_BYTE *)(v14 + 32);
  a5 = result & ~v15;
  v16 = v14 + 56;
  if (((*(_QWORD *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0)
  {
    v17 = ~v15;
    v18 = *(_QWORD *)(v14 + 48);
    do
    {
      v19 = v18 + 32 * a5;
      result = *(_QWORD *)v19;
      v20 = *(_QWORD *)(v19 + 16);
      v21 = *(_BYTE *)(v19 + 24);
      v22 = *(_QWORD *)v19 == v11 && *(_QWORD *)(v19 + 8) == a2;
      if (v22 || (result = sub_1A594CD38(), (result & 1) != 0))
      {
        if ((v21 & 1) != 0)
        {
          if ((a4 & 1) != 0)
            goto LABEL_22;
        }
        else if ((a4 & 1) == 0 && !((v20 ^ a3) >> 14))
        {
LABEL_22:
          result = sub_1A594CDEC();
          __break(1u);
          break;
        }
      }
      a5 = (a5 + 1) & v17;
    }
    while (((*(_QWORD *)(v16 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0);
  }
LABEL_23:
  v23 = *v7;
  *(_QWORD *)(*v7 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  v24 = *(_QWORD *)(v23 + 48) + 32 * a5;
  *(_QWORD *)v24 = v11;
  *(_QWORD *)(v24 + 8) = a2;
  *(_QWORD *)(v24 + 16) = a3;
  *(_BYTE *)(v24 + 24) = a4 & 1;
  v25 = *(_QWORD *)(v23 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
    __break(1u);
  else
    *(_QWORD *)(v23 + 16) = v27;
  return result;
}

uint64_t sub_1A58DD7E0(uint64_t result, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  v3 = result;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *(_QWORD *)(*v2 + 24);
  if (v5 <= v4 || (a2 & 1) == 0)
  {
    if ((a2 & 1) != 0)
    {
      sub_1A58DC718();
      goto LABEL_8;
    }
    if (v5 <= v4)
    {
      sub_1A58DFBC0();
LABEL_8:
      v6 = *v2;
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v3 = result & ~(-1 << *(_BYTE *)(v6 + 32));
      if (((*(_QWORD *)(v6 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v3) & 1) != 0)
        goto LABEL_12;
      goto LABEL_9;
    }
    result = (uint64_t)sub_1A58DE438();
  }
LABEL_9:
  v7 = *v2;
  *(_QWORD *)(*v2 + 8 * (v3 >> 6) + 56) |= 1 << v3;
  v8 = *(_QWORD *)(v7 + 16);
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (!v9)
  {
    *(_QWORD *)(v7 + 16) = v10;
    return result;
  }
  __break(1u);
LABEL_12:
  result = sub_1A594CDEC();
  __break(1u);
  return result;
}

uint64_t sub_1A58DD8DC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result & 1;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1A58DC98C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1A58DE594();
      goto LABEL_14;
    }
    sub_1A58DFE00();
  }
  v8 = *v3;
  sub_1A594CE64();
  sub_1A594CE88();
  result = sub_1A594CED0();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if ((((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2)) & 1) != 0)
    {
LABEL_13:
      result = sub_1A594CDEC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if ((((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2)) & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void *sub_1A58DDA40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1008);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v29 >= v13)
      goto LABEL_28;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_28;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
      {
        v9 = v29 + 2;
        if (v29 + 2 >= v13)
          goto LABEL_28;
        v30 = *(_QWORD *)(v6 + 8 * v9);
        if (!v30)
          break;
      }
    }
LABEL_27:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = 80 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = v17[2];
    v21 = v17[3];
    v22 = v17[4];
    v23 = v17[5];
    v24 = v17[6];
    v25 = v17[7];
    v27 = v17[8];
    v26 = v17[9];
    v28 = (uint64_t *)(*(_QWORD *)(v4 + 48) + v16);
    *v28 = v18;
    v28[1] = v19;
    v28[2] = v20;
    v28[3] = v21;
    v28[4] = v22;
    v28[5] = v23;
    v28[6] = v24;
    v28[7] = v25;
    v28[8] = v27;
    v28[9] = v26;
    result = (void *)sub_1A586418C(v18, v19, v20, v21, v22, v23, v24, v25, v27, v26);
  }
  v31 = v29 + 3;
  if (v31 >= v13)
    goto LABEL_28;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A58DDC20(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName_0(a1);
  v3 = *v1;
  v4 = sub_1A594C6C0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A58DDDA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6F8);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A58DDF3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAEA0);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A58DE0E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAE98);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A58DE278()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAE90);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v19 = *(_QWORD *)v17;
    v18 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    LOBYTE(v17) = *(_BYTE *)(v17 + 24);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v19;
    *(_QWORD *)(v21 + 8) = v18;
    *(_QWORD *)(v21 + 16) = v20;
    *(_BYTE *)(v21 + 24) = v17;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A58DE438()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7AAEA8);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_27:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (!v12)
    {
      v14 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v14 >= v13)
        goto LABEL_27;
      v12 = *(_QWORD *)(v6 + 8 * v14);
      ++v9;
      if (!v12)
      {
        v9 = v14 + 1;
        if (v14 + 1 >= v13)
          goto LABEL_27;
        v12 = *(_QWORD *)(v6 + 8 * v9);
        if (!v12)
        {
          v9 = v14 + 2;
          if (v14 + 2 >= v13)
            goto LABEL_27;
          v12 = *(_QWORD *)(v6 + 8 * v9);
          if (!v12)
            break;
        }
      }
    }
LABEL_12:
    v12 &= v12 - 1;
  }
  v15 = v14 + 3;
  if (v15 >= v13)
    goto LABEL_27;
  v12 = *(_QWORD *)(v6 + 8 * v15);
  if (v12)
  {
    v9 = v15;
    goto LABEL_12;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v13)
      goto LABEL_27;
    v12 = *(_QWORD *)(v6 + 8 * v9);
    ++v15;
    if (v12)
      goto LABEL_12;
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1A58DE594()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7AAE80);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A58DE724()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1008);
  v3 = sub_1A594C6CC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_38;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v33 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v34 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  swift_retain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v35 = (v7 - 1) & v7;
      v36 = v9;
      v12 = __clz(__rbit64(v7)) | (v9 << 6);
      goto LABEL_24;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_39;
    if (v13 >= v34)
      break;
    v14 = *(_QWORD *)(v33 + 8 * v13);
    v15 = v9 + 1;
    if (!v14)
    {
      v15 = v9 + 2;
      if (v9 + 2 >= v34)
        break;
      v14 = *(_QWORD *)(v33 + 8 * v15);
      if (!v14)
      {
        v15 = v9 + 3;
        if (v9 + 3 >= v34)
          break;
        v14 = *(_QWORD *)(v33 + 8 * v15);
        if (!v14)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v34)
            break;
          v14 = *(_QWORD *)(v33 + 8 * v16);
          if (!v14)
          {
            while (1)
            {
              v15 = v16 + 1;
              if (__OFADD__(v16, 1))
                goto LABEL_40;
              if (v15 >= v34)
                goto LABEL_36;
              v14 = *(_QWORD *)(v33 + 8 * v15);
              ++v16;
              if (v14)
                goto LABEL_23;
            }
          }
          v15 = v9 + 4;
        }
      }
    }
LABEL_23:
    v35 = (v14 - 1) & v14;
    v36 = v15;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 80 * v12);
    v18 = *v17;
    v19 = v17[1];
    v20 = v17[2];
    v21 = v17[3];
    v38 = v17[5];
    v39 = v17[4];
    v22 = v17[7];
    v37 = v17[6];
    v23 = v17[9];
    v40 = v17[8];
    sub_1A594CE64();
    if ((v22 & 0x1000000000000000) != 0)
    {
      sub_1A594CE88();
      __asm { BR              X9 }
    }
    sub_1A594CE88();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    sub_1A594B1D8();
    v24 = sub_1A594CED0();
    v25 = -1 << *(_BYTE *)(v4 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v8 + 8 * (v26 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v8 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    v28 = 0;
    v29 = (unint64_t)(63 - v25) >> 6;
    do
    {
      if (++v27 == v29 && (v28 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1A58DEE34);
      }
      v30 = v27 == v29;
      if (v27 == v29)
        v27 = 0;
      v28 |= v30;
      v31 = *(_QWORD *)(v8 + 8 * v27);
    }
    while (v31 == -1);
    v10 = __clz(__rbit64(~v31)) + (v27 << 6);
LABEL_7:
    *(_QWORD *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    v11 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 80 * v10);
    *v11 = v18;
    v11[1] = v19;
    v11[2] = v20;
    v11[3] = v21;
    v11[4] = v39;
    v11[5] = v38;
    v9 = v36;
    v11[6] = v37;
    v11[7] = v22;
    v11[8] = v40;
    v11[9] = v23;
    ++*(_QWORD *)(v4 + 16);
    v7 = v35;
  }
LABEL_36:
  result = swift_release_n();
  v1 = v0;
LABEL_38:
  *v1 = v4;
  return result;
}

uint64_t sub_1A58DEE50(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(a2);
  result = sub_1A594C6CC();
  v6 = result;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v7 = 0;
  v8 = v4 + 56;
  v9 = 1 << *(_BYTE *)(v4 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_33;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_33;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_23:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    v20 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v16);
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v21 = -1 << *(_BYTE *)(v6 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    result = swift_release();
    v3 = v2;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A58DF0C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6F8);
  result = sub_1A594C6CC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v14);
    sub_1A594CE64();
    sub_1A594CEAC();
    result = sub_1A594CED0();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A58DF33C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAEA0);
  v3 = sub_1A594C6CC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v29)
      goto LABEL_35;
    v16 = *(_QWORD *)(v28 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v29)
        goto LABEL_35;
      v16 = *(_QWORD *)(v28 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v29)
          goto LABEL_35;
        v16 = *(_QWORD *)(v28 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    sub_1A594CE64();
    sub_1A594CE88();
    if (v19)
    {
      sub_1A594B4B4();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594B1D8();
      swift_bridgeObjectRelease();
    }
    result = sub_1A594CED0();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v8 + 8 * v23);
      }
      while (v27 == -1);
      v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v11);
    *v12 = v20;
    v12[1] = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v29)
  {
LABEL_35:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_37;
  }
  v16 = *(_QWORD *)(v28 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v29)
      goto LABEL_35;
    v16 = *(_QWORD *)(v28 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1A58DF638()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAE98);
  result = sub_1A594C6CC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A58DF8B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAE90);
  v3 = sub_1A594C6CC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v31)
      goto LABEL_35;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v31)
        goto LABEL_35;
      v16 = *(_QWORD *)(v30 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v31)
          goto LABEL_35;
        v16 = *(_QWORD *)(v30 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v2 + 48) + 32 * v14;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(unsigned __int8 *)(v18 + 24);
    sub_1A594CE64();
    swift_bridgeObjectRetain_n();
    sub_1A594B1D8();
    swift_bridgeObjectRelease();
    sub_1A594CE94();
    if (v22 != 1)
      sub_1A594CEB8();
    result = sub_1A594CED0();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 32 * v11;
    *(_QWORD *)v12 = v19;
    *(_QWORD *)(v12 + 8) = v20;
    *(_QWORD *)(v12 + 16) = v21;
    *(_BYTE *)(v12 + 24) = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_35:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_37;
  }
  v16 = *(_QWORD *)(v30 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v31)
      goto LABEL_35;
    v16 = *(_QWORD *)(v30 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1A58DFBC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7AAEA8);
  result = sub_1A594C6CC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_33:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (!v9)
    {
      v13 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if (v13 >= v10)
        goto LABEL_31;
      v9 = *(_QWORD *)(v6 + 8 * v13);
      ++v5;
      if (!v9)
      {
        v5 = v13 + 1;
        if (v13 + 1 >= v10)
          goto LABEL_31;
        v9 = *(_QWORD *)(v6 + 8 * v5);
        if (!v9)
        {
          v5 = v13 + 2;
          if (v13 + 2 >= v10)
            goto LABEL_31;
          v9 = *(_QWORD *)(v6 + 8 * v5);
          if (!v9)
            break;
        }
      }
    }
LABEL_22:
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v15 = -1 << *(_BYTE *)(v4 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v18 = 0;
      v19 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v19 && (v18 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        v20 = v17 == v19;
        if (v17 == v19)
          v17 = 0;
        v18 |= v20;
        v21 = *(_QWORD *)(v11 + 8 * v17);
      }
      while (v21 == -1);
      v12 = __clz(__rbit64(~v21)) + (v17 << 6);
    }
    v9 &= v9 - 1;
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    ++*(_QWORD *)(v4 + 16);
  }
  v14 = v13 + 3;
  if (v14 >= v10)
  {
LABEL_31:
    result = swift_release();
    v1 = v0;
    goto LABEL_33;
  }
  v9 = *(_QWORD *)(v6 + 8 * v14);
  if (v9)
  {
    v5 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v5 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v5 >= v10)
      goto LABEL_31;
    v9 = *(_QWORD *)(v6 + 8 * v5);
    ++v14;
    if (v9)
      goto LABEL_22;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1A58DFE00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7AAE80);
  result = sub_1A594C6CC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void _s15IMAP2Connection07CommandB0C12RecentErrorsV5ErrorV4KindO21__derived_enum_equalsySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD v17[5];
  uint64_t v18;

  v18 = a2;
  v3 = sub_1A594ACEC();
  v17[3] = *(_QWORD *)(v3 - 8);
  v17[4] = v3;
  MEMORY[0x1E0C80A78](v3);
  v17[2] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v17[1] = (char *)v17 - v6;
  v7 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE797E78);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v17 + *(int *)(v14 + 48) - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(a1, (uint64_t)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  sub_1A55034B8(v18, (uint64_t)v15, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  v16 = (char *)sub_1A58E0234 + 4 * byte_1A59DFDD2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A58E0234()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  char v3;
  char v4;

  sub_1A55034B8(v2, (uint64_t)v0, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1A5510284(v2, (uint64_t *)&unk_1EE797E78);
    v4 = 0;
  }
  else
  {
    v3 = *v0 ^ *v1;
    sub_1A55034FC(v2, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t type metadata accessor for CommandConnection.RecentErrors.Statistics(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE797E50);
}

uint64_t sub_1A58E0604(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A58E064C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL _s15IMAP2Connection07CommandB0C12RecentErrorsV10StatisticsV23__derived_struct_equalsySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  int v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  char v45;
  void (*v46)(char *, uint64_t);
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;

  v4 = sub_1A594ACEC();
  v58 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v57 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1328);
  MEMORY[0x1E0C80A78](v6);
  v56 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v47 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v47 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v47 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v47 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v47 - v22;
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v47 - v26;
  if (*a1 != *a2
    || a1[1] != a2[1]
    || a1[2] != a2[2]
    || *((_QWORD *)a1 + 1) != *((_QWORD *)a2 + 1)
    || *((_QWORD *)a1 + 2) != *((_QWORD *)a2 + 2)
    || *((_QWORD *)a1 + 3) != *((_QWORD *)a2 + 3))
  {
    return 0;
  }
  v28 = *((_QWORD *)a1 + 6);
  v29 = *((_QWORD *)a2 + 6);
  if (v28)
  {
    if (!v29)
      return 0;
    v30 = *((_QWORD *)a1 + 4);
    v31 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)a1 + 5);
    v54 = *((_QWORD *)a1 + 6);
    v55 = (char *)v30;
    v32 = *((_QWORD *)a2 + 5);
    v52 = *((_QWORD *)a2 + 4);
    v53 = v31;
    v49 = v25;
    v50 = v32;
    v47 = ~v30 & 0xF000000000000007;
    v48 = v52 & 0xF000000000000007;
    v51 = v29;
    sub_1A58942F8(v30, (uint64_t)v31, v28);
    sub_1A58942F8((unint64_t)v55, (uint64_t)v53, v54);
    sub_1A58942F8(v52, v50, v51);
    if (v47)
    {
      if (v48 == 0xF000000000000007)
        goto LABEL_24;
      sub_1A5862270(v52);
      sub_1A5862270((unint64_t)v55);
      static ResponseTextCode.__derived_enum_equals(_:_:)((uint64_t)v55);
      LODWORD(v48) = v33;
      sub_1A5862B80(v52);
      sub_1A5862B80((unint64_t)v55);
      if ((v48 & 1) != 0)
      {
LABEL_11:
        if (v53 == (unsigned int (*)(uint64_t, uint64_t, uint64_t))v50 && v54 == v51)
        {
          sub_1A5862B80(v52);
LABEL_20:
          swift_bridgeObjectRelease();
          sub_1A5862B80((unint64_t)v55);
          swift_bridgeObjectRelease();
          sub_1A5892148((unint64_t)v55, (uint64_t)v53, v54);
          v25 = v49;
          goto LABEL_21;
        }
        LODWORD(v50) = sub_1A594CD38();
        sub_1A5862B80(v52);
        if ((v50 & 1) != 0)
          goto LABEL_20;
LABEL_24:
        swift_bridgeObjectRelease();
        v35 = v55;
        sub_1A5862B80((unint64_t)v55);
        v36 = v54;
        swift_bridgeObjectRelease();
        sub_1A5892148((unint64_t)v35, (uint64_t)v53, v36);
        return 0;
      }
    }
    else if (v48 == 0xF000000000000007)
    {
      goto LABEL_11;
    }
    sub_1A5862B80(v52);
    goto LABEL_24;
  }
  if (v29)
    return 0;
LABEL_21:
  v49 = v25;
  v54 = type metadata accessor for CommandConnection.RecentErrors.Statistics(0);
  sub_1A58E0604((uint64_t)&a1[*(int *)(v54 + 44)], (uint64_t)v27);
  sub_1A58E0604((uint64_t)&a2[*(int *)(v54 + 44)], (uint64_t)v23);
  v55 = &v10[*(int *)(v6 + 48)];
  sub_1A58E0604((uint64_t)v27, (uint64_t)v10);
  sub_1A58E0604((uint64_t)v23, (uint64_t)v55);
  v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
  if (v53((uint64_t)v10, 1, v4) == 1)
  {
    sub_1A5510284((uint64_t)v23, &qword_1EE798EB8);
    sub_1A5510284((uint64_t)v27, &qword_1EE798EB8);
    v34 = v53;
    if (v53((uint64_t)v55, 1, v4) == 1)
    {
      sub_1A5510284((uint64_t)v10, &qword_1EE798EB8);
      goto LABEL_29;
    }
LABEL_27:
    v37 = (uint64_t)v10;
LABEL_35:
    sub_1A5510284(v37, &qword_1EE7A1328);
    return 0;
  }
  sub_1A58E0604((uint64_t)v10, (uint64_t)v20);
  if (v53((uint64_t)v55, 1, v4) == 1)
  {
    sub_1A5510284((uint64_t)v23, &qword_1EE798EB8);
    sub_1A5510284((uint64_t)v27, &qword_1EE798EB8);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v20, v4);
    goto LABEL_27;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v57, v55, v4);
  sub_1A58E2D84();
  LODWORD(v52) = sub_1A594B37C();
  v55 = *(char **)(v58 + 8);
  ((void (*)(char *, uint64_t))v55)(v57, v4);
  sub_1A5510284((uint64_t)v23, &qword_1EE798EB8);
  sub_1A5510284((uint64_t)v27, &qword_1EE798EB8);
  ((void (*)(char *, uint64_t))v55)(v20, v4);
  sub_1A5510284((uint64_t)v10, &qword_1EE798EB8);
  v34 = v53;
  if ((v52 & 1) == 0)
    return 0;
LABEL_29:
  v38 = v54;
  sub_1A58E0604((uint64_t)&a1[*(int *)(v54 + 48)], (uint64_t)v17);
  sub_1A58E0604((uint64_t)&a2[*(int *)(v38 + 48)], (uint64_t)v14);
  v39 = v56;
  v40 = v56 + *(int *)(v6 + 48);
  sub_1A58E0604((uint64_t)v17, v56);
  sub_1A58E0604((uint64_t)v14, v40);
  if (v34(v39, 1, v4) != 1)
  {
    v41 = v49;
    sub_1A58E0604(v39, v49);
    if (v34(v40, 1, v4) == 1)
    {
      sub_1A5510284((uint64_t)v14, &qword_1EE798EB8);
      sub_1A5510284((uint64_t)v17, &qword_1EE798EB8);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v41, v4);
      goto LABEL_34;
    }
    v44 = v57;
    v43 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v57, v40, v4);
    sub_1A58E2D84();
    v45 = sub_1A594B37C();
    v46 = *(void (**)(char *, uint64_t))(v43 + 8);
    v46(v44, v4);
    sub_1A5510284((uint64_t)v14, &qword_1EE798EB8);
    sub_1A5510284((uint64_t)v17, &qword_1EE798EB8);
    v46((char *)v41, v4);
    sub_1A5510284(v39, &qword_1EE798EB8);
    return (v45 & 1) != 0;
  }
  sub_1A5510284((uint64_t)v14, &qword_1EE798EB8);
  sub_1A5510284((uint64_t)v17, &qword_1EE798EB8);
  if (v34(v40, 1, v4) != 1)
  {
LABEL_34:
    v37 = v39;
    goto LABEL_35;
  }
  sub_1A5510284(v39, &qword_1EE798EB8);
  return 1;
}

uint64_t sub_1A58E0D78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A6F0);
    v2 = sub_1A594C6E4();
    v3 = v2 + 56;
    while (1)
    {
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v5 = result & ~(-1 << *(_BYTE *)(v2 + 32));
      v6 = v5 >> 6;
      v7 = *(_QWORD *)(v3 + 8 * (v5 >> 6));
      v8 = 1 << v5;
      if ((v8 & v7) == 0)
      {
        *(_QWORD *)(v3 + 8 * v6) = v8 | v7;
        v9 = *(_QWORD *)(v2 + 16);
        v10 = __OFADD__(v9, 1);
        v11 = v9 + 1;
        if (v10)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v2 + 16) = v11;
      }
      if (!--v1)
        return v2;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1A58E0E50(uint64_t a1)
{
  return sub_1A58E0E68(a1, (uint64_t *)&unk_1EE79A6E0);
}

uint64_t sub_1A58E0E5C(uint64_t a1)
{
  return sub_1A58E0E68(a1, &qword_1EE79A6D8);
}

uint64_t sub_1A58E0E68(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a2);
    v4 = sub_1A594C6E4();
    v5 = 0;
    v6 = v4 + 56;
    v7 = a1 + 32;
    while (1)
    {
      v8 = *(unsigned __int8 *)(v7 + v5);
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v10 = -1 << *(_BYTE *)(v4 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      v15 = *(_QWORD *)(v4 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (*(unsigned __int8 *)(v15 + v11) == v8)
          goto LABEL_3;
        v16 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v16;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          if (*(unsigned __int8 *)(v15 + v11) == v8)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v6 + 8 * v12) = v14 | v13;
      *(_BYTE *)(v15 + v11) = v8;
      v17 = *(_QWORD *)(v4 + 16);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v4 + 16) = v19;
LABEL_3:
      if (++v5 == v2)
        return v4;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1A58E0FA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7AAE80);
    v3 = sub_1A594C6E4();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(unsigned __int8 *)(v6 + v4);
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (v7 == *(unsigned __int8 *)(v14 + v10))
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (v7 == *(unsigned __int8 *)(v14 + v10))
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(v14 + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

unint64_t sub_1A58E10E8()
{
  unint64_t result;

  result = qword_1EE7AAE78;
  if (!qword_1EE7AAE78)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for CommandConnection.BackOffBehavior, &type metadata for CommandConnection.BackOffBehavior);
    atomic_store(result, (unint64_t *)&qword_1EE7AAE78);
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandConnection.RecentErrors()
{
  return &type metadata for CommandConnection.RecentErrors;
}

uint64_t *_s12RecentErrorsV5ErrorVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (unint64_t *)((char *)a1 + v5);
    v7 = (unint64_t *)((char *)a2 + v5);
    v8 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v9 = *v7;
        if ((~*v7 & 0xF000000000000007) != 0)
          sub_1A5862284(*v7);
        v11 = v7[1];
        v10 = v7[2];
        *v6 = v9;
        v6[1] = v11;
        v6[2] = v10;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v15 = v7[1];
        *v6 = *v7;
        v6[1] = v15;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
        v14 = sub_1A594ACEC();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v6, v7, v14);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        break;
    }
  }
  return v3;
}

uint64_t _s12RecentErrorsV5ErrorVwxx(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  uint64_t result;
  uint64_t v4;

  v2 = (unint64_t *)(a1 + *(int *)(a2 + 20));
  type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      if ((~*v2 & 0xF000000000000007) != 0)
        sub_1A5862B94(*v2);
      goto LABEL_5;
    case 2:
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    case 3:
    case 4:
      v4 = sub_1A594ACEC();
      result = (*(uint64_t (**)(unint64_t *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *_s12RecentErrorsV5ErrorVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  v7 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v8 = *v6;
      if ((~*v6 & 0xF000000000000007) != 0)
        sub_1A5862284(*v6);
      v10 = v6[1];
      v9 = v6[2];
      *v5 = v8;
      v5[1] = v10;
      v5[2] = v9;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_8;
    case 2u:
      v12 = v6[1];
      *v5 = *v6;
      v5[1] = v12;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_8;
    case 3u:
    case 4u:
      v11 = sub_1A594ACEC();
      (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v5, v6, v11);
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *_s12RecentErrorsV5ErrorVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 20);
    v5 = (_QWORD *)((char *)a1 + v4);
    v6 = (_QWORD *)((char *)a2 + v4);
    sub_1A55034FC((uint64_t)a1 + v4, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    v7 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v8 = *v6;
        if ((~*v6 & 0xF000000000000007) != 0)
          sub_1A5862284(*v6);
        *v5 = v8;
        v5[1] = v6[1];
        v5[2] = v6[2];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_9;
      case 2u:
        *v5 = *v6;
        v5[1] = v6[1];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_9;
      case 3u:
      case 4u:
        v9 = sub_1A594ACEC();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v5, v6, v9);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
  }
  return a1;
}

_QWORD *_s12RecentErrorsV5ErrorVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4 || EnumCaseMultiPayload == 3)
  {
    v9 = sub_1A594ACEC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *_s12RecentErrorsV5ErrorVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;

  *a1 = *a2;
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 20);
    v5 = (char *)a1 + v4;
    v6 = (char *)a2 + v4;
    sub_1A55034FC((uint64_t)a1 + v4, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    v7 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4 || EnumCaseMultiPayload == 3)
    {
      v9 = sub_1A594ACEC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v5, v6, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s12RecentErrorsV5ErrorVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58E180C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t _s12RecentErrorsV5ErrorVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58E1858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_1A58E189C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t *_s12RecentErrorsV5ErrorV4KindOwCP(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  unint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (unint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          sub_1A5862284(*a2);
        v9 = a2[1];
        v8 = a2[2];
        *a1 = v7;
        a1[1] = v9;
        a1[2] = v8;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
        v12 = sub_1A594ACEC();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t _s12RecentErrorsV5ErrorV4KindOwxx(unint64_t *a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      if ((~*a1 & 0xF000000000000007) != 0)
        sub_1A5862B94(*a1);
      goto LABEL_5;
    case 2:
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    case 3:
    case 4:
      v3 = sub_1A594ACEC();
      result = (*(uint64_t (**)(unint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t *_s12RecentErrorsV5ErrorV4KindOwcp(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        sub_1A5862284(*a2);
      v8 = a2[1];
      v7 = a2[2];
      *a1 = v6;
      a1[1] = v8;
      a1[2] = v7;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_8;
    case 2u:
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_8;
    case 3u:
    case 4u:
      v9 = sub_1A594ACEC();
      (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unint64_t *_s12RecentErrorsV5ErrorV4KindOwca(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          sub_1A5862284(*a2);
        *a1 = v6;
        a1[1] = a2[1];
        a1[2] = a2[2];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_9;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_9;
      case 3u:
      case 4u:
        v7 = sub_1A594ACEC();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *_s12RecentErrorsV5ErrorV4KindOwtk(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4 || EnumCaseMultiPayload == 3)
  {
    v7 = sub_1A594ACEC();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *_s12RecentErrorsV5ErrorV4KindOwta(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4 || EnumCaseMultiPayload == 3)
    {
      v7 = sub_1A594ACEC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A58E1F30()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594ACEC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *_s12RecentErrorsV10StatisticsVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  unint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = a2[3];
    v7 = (unint64_t *)(a2 + 4);
    v8 = a2[6];
    if (v8)
    {
      v9 = *v7;
      if ((~*v7 & 0xF000000000000007) != 0)
        sub_1A5862284(v9);
      v10 = a2[5];
      v4[4] = v9;
      v4[5] = v10;
      v4[6] = v8;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)v7;
      *(_QWORD *)(a1 + 48) = a2[6];
    }
    v12 = *(int *)(a3 + 44);
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1A594ACEC();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v19 = *(int *)(a3 + 48);
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    if (v17(v21, 1, v15))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v20, v21, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t _s12RecentErrorsV10StatisticsVwxx(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;

  if (*(_QWORD *)(a1 + 48))
  {
    v4 = *(_QWORD *)(a1 + 32);
    if ((~v4 & 0xF000000000000007) != 0)
      sub_1A5862B94(v4);
    swift_bridgeObjectRelease();
  }
  v5 = a1 + *(int *)(a2 + 44);
  v6 = sub_1A594ACEC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = a1 + *(int *)(a2 + 48);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  return result;
}

uint64_t _s12RecentErrorsV10StatisticsVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = (unint64_t *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  if (v7)
  {
    v8 = *v6;
    if ((~*v6 & 0xF000000000000007) != 0)
      sub_1A5862284(v8);
    v9 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v7;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  }
  v10 = *(int *)(a3 + 44);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_1A594ACEC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = *(int *)(a3 + 48);
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  if (v15(v19, 1, v13))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v18, v19, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  return a1;
}

uint64_t _s12RecentErrorsV10StatisticsVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v6;
  unint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  int v27;
  int v28;
  uint64_t v29;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = (unint64_t *)(a1 + 32);
  v7 = (unint64_t *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v8)
    {
      v9 = *v7;
      v10 = *v7 & 0xF000000000000007;
      if ((~*v6 & 0xF000000000000007) != 0)
      {
        if (v10 == 0xF000000000000007)
        {
          sub_1A56F4088((unint64_t *)(a1 + 32));
          *v6 = *v7;
        }
        else
        {
          sub_1A5862284(*v7);
          v14 = *v6;
          *v6 = v9;
          sub_1A5862B94(v14);
        }
      }
      else
      {
        if (v10 != 0xF000000000000007)
          sub_1A5862284(*v7);
        *v6 = v9;
      }
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A58B5AFC((unint64_t *)(a1 + 32));
      v12 = v7[2];
      *(_OWORD *)v6 = *(_OWORD *)v7;
      v6[2] = v12;
    }
  }
  else if (v8)
  {
    v11 = *v7;
    if ((~*v7 & 0xF000000000000007) != 0)
      sub_1A5862284(*v7);
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v13 = *(_OWORD *)v7;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)v6 = v13;
  }
  v15 = *(int *)(a3 + 44);
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = sub_1A594ACEC();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_22:
    v23 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_23:
  v24 = *(int *)(a3 + 48);
  v25 = (void *)(a1 + v24);
  v26 = (void *)(a2 + v24);
  v27 = v20((void *)(a1 + v24), 1, v18);
  v28 = v20(v26, 1, v18);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v25, v26, v18);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v25, v18);
    goto LABEL_28;
  }
  if (v28)
  {
LABEL_28:
    v29 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v25, v26, v18);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
  return a1;
}

uint64_t _s12RecentErrorsV10StatisticsVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 44);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 32) = v6;
  v10 = sub_1A594ACEC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 48);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12(v16, 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

uint64_t _s12RecentErrorsV10StatisticsVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v6;
  unint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  int v23;
  int v24;
  uint64_t v25;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = (unint64_t *)(a1 + 32);
  v7 = (unint64_t *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 48))
    goto LABEL_8;
  v8 = *(_QWORD *)(a2 + 48);
  if (!v8)
  {
    sub_1A58B5AFC((unint64_t *)(a1 + 32));
LABEL_8:
    *(_OWORD *)v6 = *(_OWORD *)v7;
    v6[2] = v7[2];
    goto LABEL_11;
  }
  v9 = *v6;
  v10 = *v7;
  if ((~*v6 & 0xF000000000000007) != 0)
  {
    if ((~v10 & 0xF000000000000007) != 0)
    {
      *v6 = v10;
      sub_1A5862B94(v9);
      goto LABEL_10;
    }
    sub_1A56F4088(v6);
  }
  *v6 = v10;
LABEL_10:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
LABEL_11:
  v11 = *(int *)(a3 + 44);
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_1A594ACEC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_16:
    v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_17:
  v20 = *(int *)(a3 + 48);
  v21 = (void *)(a1 + v20);
  v22 = (void *)(a2 + v20);
  v23 = v16((void *)(a1 + v20), 1, v14);
  v24 = v16(v22, 1, v14);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v21, v22, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v21, v14);
    goto LABEL_22;
  }
  if (v24)
  {
LABEL_22:
    v25 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v21, v22, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
  return a1;
}

uint64_t _s12RecentErrorsV10StatisticsVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58E2AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v9);
  }
}

uint64_t _s12RecentErrorsV10StatisticsVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A58E2B58(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 48) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798EB8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

void sub_1A58E2BD0()
{
  unint64_t v0;

  sub_1A58E2C64();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1A58E2C64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE798ED0)
  {
    sub_1A594ACEC();
    v0 = sub_1A594C354();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE798ED0);
  }
}

uint64_t _s15BackOffBehaviorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A58E2D04 + 4 * byte_1A59DFDFD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A58E2D38 + 4 * byte_1A59DFDF8[v4]))();
}

uint64_t sub_1A58E2D38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58E2D40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58E2D48);
  return result;
}

uint64_t sub_1A58E2D54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58E2D5CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A58E2D60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58E2D68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CommandConnection.BackOffBehavior()
{
  return &type metadata for CommandConnection.BackOffBehavior;
}

unint64_t sub_1A58E2D84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A1320;
  if (!qword_1EE7A1320)
  {
    v1 = sub_1A594ACEC();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CCEB20], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7A1320);
  }
  return result;
}

uint64_t sub_1A58E2DCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A58E2E10(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v19 = *(_OWORD *)(a1 + 480);
  v17 = *(_OWORD *)(a1 + 448);
  v18 = *(_OWORD *)(a1 + 464);
  v15 = *(_OWORD *)(a1 + 416);
  v16 = *(_OWORD *)(a1 + 432);
  v13 = *(_OWORD *)(a1 + 384);
  v14 = *(_OWORD *)(a1 + 400);
  v11 = *(_OWORD *)(a1 + 352);
  v12 = *(_OWORD *)(a1 + 368);
  v9 = *(_OWORD *)(a1 + 320);
  v10 = *(_OWORD *)(a1 + 336);
  v7 = *(_OWORD *)(a1 + 288);
  v8 = *(_OWORD *)(a1 + 304);
  v5 = *(_OWORD *)(a1 + 256);
  v6 = *(_OWORD *)(a1 + 272);
  v3 = *(_OWORD *)(a1 + 224);
  v4 = *(_OWORD *)(a1 + 240);
  sub_1A5862784(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_OWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    *(_QWORD *)(a1 + 496));
  return a1;
}

uint64_t destroy for RegisterForPush()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RegisterForPush(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for RegisterForPush(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RegisterForPush(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RegisterForPush(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RegisterForPush(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RegisterForPush()
{
  return &type metadata for RegisterForPush;
}

uint64_t sub_1A58E3238(const void *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  int v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _BYTE v16[584];
  _BYTE v17[584];
  _BYTE v18[584];
  _BYTE v19[32];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int v25;
  _BYTE v26[592];

  sub_1A552316C(a1, v17);
  sub_1A552316C(v17, v26);
  sub_1A552316C(a1, v18);
  result = sub_1A5523B90((uint64_t)v18);
  if ((_DWORD)result == 21)
  {
    v4 = sub_1A5524678((uint64_t)v18);
    sub_1A56F3380(v4, (uint64_t)v19);
    sub_1A56F3380((uint64_t)v19, (uint64_t)&v20);
    if ((v23 & 1) != 0)
    {
      v5 = v21;
      v6 = v22;
      *(_QWORD *)(v1 + 80) = v20;
      *(_BYTE *)(v1 + 88) = 0;
      sub_1A552316C(v26, v16);
      sub_1A5524678((uint64_t)v16);
      sub_1A5523B84();
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 96) = v5;
      *(_QWORD *)(v1 + 104) = v6;
    }
    else
    {
      v24 = v20;
      v25 = v21;
      v7 = *(_QWORD **)(v1 + 72);
      sub_1A552316C(v26, v16);
      sub_1A5524678((uint64_t)v16);
      sub_1A5523B84();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A58D4344(0, v7[2] + 1, 1, v7);
        v7 = (_QWORD *)result;
      }
      v8 = v7[2];
      v9 = v7[3];
      v10 = v8 + 1;
      if (v8 >= v9 >> 1)
      {
        v15 = v8 + 1;
        v13 = v7;
        v14 = v7[2];
        result = (uint64_t)sub_1A58D4344((_QWORD *)(v9 > 1), v8 + 1, 1, v13);
        v8 = v14;
        v10 = v15;
        v7 = (_QWORD *)result;
      }
      v7[2] = v10;
      v11 = &v7[2 * v8];
      v12 = v25;
      v11[4] = v24;
      *((_DWORD *)v11 + 10) = v12;
      *(_QWORD *)(v1 + 72) = v7;
    }
  }
  return result;
}

void sub_1A58E33CC(char a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[184];
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[184];

  if (a1 || (*(_BYTE *)(v2 + 88) & 1) != 0)
    goto LABEL_7;
  v4 = *(_QWORD *)(v2 + 80);
  if (v4 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v4 <= 0x7FFFFFFF)
  {
    sub_1A55032A0(v2 + 96, (uint64_t)v12, &qword_1EE7993D0);
    sub_1A55032A0((uint64_t)v12, (uint64_t)&v13, &qword_1EE7993D0);
    if (v14)
    {
      LODWORD(v8) = PushRegistrationResponse.init(apsVersion:topic:mailboxes:)(v4, v13, v14, *(_QWORD *)(v2 + 72));
      *((_QWORD *)&v8 + 1) = v5;
      v9 = v6;
      v10 = v7;
      sub_1A58E35DC((uint64_t)&v8);
      sub_1A5862234(&v8, (uint64_t)v11);
      nullsub_1(v11);
      sub_1A5524B84((uint64_t)v12);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_8:
      sub_1A55032A0((uint64_t)v11, (uint64_t)v15, &qword_1EE7981D8);
      sub_1A55032A0((uint64_t)v15, a2, &qword_1EE7981D8);
      return;
    }
LABEL_7:
    v8 = xmmword_1A59DC770;
    sub_1A587ABF8((uint64_t)&v8);
    sub_1A5862234(&v8, (uint64_t)v11);
    nullsub_1(v11);
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1A58E3504@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(unsigned int *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = 3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A58E356C@<X0>(char a1@<W3>, uint64_t a2@<X8>)
{
  __int128 *v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _BYTE v8[184];
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v4 = v2[5];
  v13 = v2[4];
  v14 = v4;
  v15 = v2[6];
  v5 = v2[1];
  v9 = *v2;
  v10 = v5;
  v6 = v2[3];
  v11 = v2[2];
  v12 = v6;
  sub_1A58E33CC(a1, (uint64_t)v8);
  return sub_1A55032A0((uint64_t)v8, a2, &qword_1EE7981D8);
}

uint64_t sub_1A58E35DC(uint64_t result)
{
  *(_BYTE *)(result + 176) = 5;
  return result;
}

ValueMetadata *type metadata accessor for RunningCommands()
{
  return &type metadata for RunningCommands;
}

uint64_t sub_1A58E35F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = a1 + 32;
    do
    {
      v4 = (uint64_t *)(v3 + 40 * v2);
      v5 = v4[1];
      if (*(_QWORD *)(v5 + 16))
      {
        v6 = *v4;
        sub_1A594CE64();
        sub_1A594CE88();
        v7 = sub_1A594CED0();
        v8 = -1 << *(_BYTE *)(v5 + 32);
        v9 = v7 & ~v8;
        v10 = v5 + 56;
        if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
        {
          v11 = *(_QWORD *)(v5 + 48);
          if (*(_BYTE *)(v11 + v9) == 7)
            return v6;
          v12 = ~v8;
          v13 = (v9 + 1) & v12;
          if (((*(_QWORD *)(v10 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
          {
            if (*(_BYTE *)(v11 + v13) == 7)
              return v6;
            while (1)
            {
              v13 = (v13 + 1) & v12;
              if (((*(_QWORD *)(v10 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
                break;
              if (*(_BYTE *)(v11 + v13) == 7)
                return v6;
            }
          }
        }
      }
      ++v2;
    }
    while (v2 != v1);
  }
  return 0;
}

uint64_t sub_1A58E3728(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  int *v9;
  uint64_t result;
  int v11;
  int v12;
  int v13;
  _QWORD v15[3];
  char v16;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 16);
  if (!v3)
    return 2;
  v4 = a1;
  v5 = HIDWORD(a1);
  v6 = 0;
  if (*(unsigned __int8 *)(v2 + 32) == a1 && *(_DWORD *)(v2 + 36) == HIDWORD(a1))
  {
LABEL_13:
    sub_1A58D257C(v6, (uint64_t)v15);
    sub_1A5503278((uint64_t)v15);
    if (v16)
      return v16 != 1;
    else
      return v15[0];
  }
  else
  {
    v8 = v3 - 1;
    v9 = (int *)(v2 + 76);
    result = 2;
    while (v8 != v6)
    {
      v11 = *((unsigned __int8 *)v9 - 4);
      v13 = *v9;
      v9 += 10;
      v12 = v13;
      ++v6;
      if (v11 == v4 && v12 == (_DWORD)v5)
        goto LABEL_13;
    }
  }
  return result;
}

uint64_t sub_1A58E37E8(uint64_t result)
{
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t i;
  uint64_t v4;
  int v5;
  BOOL v6;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  if (!*(_BYTE *)(result + 56))
    return 1;
  if (v1 == 1)
    return 0;
  v2 = (unsigned __int8 *)(result + 96);
  for (i = 1; ; ++i)
  {
    v4 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v5 = *v2;
    v2 += 40;
    result = v5 == 0;
    if (v5)
      v6 = v4 == v1;
    else
      v6 = 1;
    if (v6)
      return result;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A58E3844(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  __uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;

  v6 = *(_QWORD **)v5;
  v7 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  if (v7 > 9)
  {
    sub_1A58E3B24();
LABEL_24:
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    v8 = (_QWORD *)v5;
    LOBYTE(v9) = a5;
    if (v7)
    {
      v11 = 0;
      v12 = 6;
      v13 = *(_QWORD *)(*(_QWORD *)v5 + 16);
      do
      {
        v14 = v6[v12];
        v15 = __OFADD__(v11, v14);
        v11 += v14;
        if (v15)
        {
          __break(1u);
          goto LABEL_32;
        }
        v12 += 5;
        --v13;
      }
      while (v13);
      if (!v11)
        goto LABEL_11;
      v15 = __OFADD__(v11, a4);
      v16 = v11 + a4;
      if (!v15)
      {
        if (v16 > 16)
        {
          sub_1A58E4108();
          goto LABEL_24;
        }
LABEL_11:
        v29 = result;
        v30 = a3;
        v33 = a4;
        LODWORD(v31) = a5;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v17 = 0;
        while (1)
        {
          v9 = v17 + 1;
          if (__OFADD__(v17, 1))
            break;
          v18 = v6[5 * v17 + 5];
          if (*(_QWORD *)(v18 + 16))
          {
            sub_1A594CE64();
            sub_1A594CE88();
            v5 = (__uint64_t)&v32;
            v19 = sub_1A594CED0();
            v20 = -1 << *(_BYTE *)(v18 + 32);
            v21 = v19 & ~v20;
            if (((*(_QWORD *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
            {
              v22 = *(_QWORD *)(v18 + 48);
              if (*(_BYTE *)(v22 + v21) == 7)
                goto LABEL_23;
              v23 = ~v20;
              while (1)
              {
                v21 = (v21 + 1) & v23;
                if (((*(_QWORD *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
                  break;
                if (*(_BYTE *)(v22 + v21) == 7)
                  goto LABEL_23;
              }
            }
          }
          if (*(_QWORD *)(a2 + 16))
          {
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v5 = sub_1A58E3B68(a2);
            swift_bridgeObjectRelease();
            if ((v5 & 1) == 0)
            {
LABEL_23:
              swift_bridgeObjectRelease();
              sub_1A58E40C4();
              goto LABEL_24;
            }
          }
          v17 = v9;
          if (v9 == v7)
          {
            swift_bridgeObjectRelease();
            LOBYTE(v9) = v31;
            result = v29;
            a3 = v30;
            goto LABEL_26;
          }
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      __break(1u);
    }
    else
    {
      v33 = a4;
LABEL_26:
      LODWORD(v7) = result;
      v31 = HIDWORD(result);
      a2 = a3;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v5 = static MonotonicTime.now()();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
LABEL_33:
        result = (unint64_t)sub_1A58D40F0(0, v6[2] + 1, 1, v6);
        v6 = (_QWORD *)result;
      }
      v24 = v33;
      v26 = v6[2];
      v25 = v6[3];
      if (v26 >= v25 >> 1)
      {
        result = (unint64_t)sub_1A58D40F0((_QWORD *)(v25 > 1), v26 + 1, 1, v6);
        v27 = a2;
        v24 = v33;
        v6 = (_QWORD *)result;
      }
      else
      {
        v27 = a2;
      }
      v6[2] = v26 + 1;
      v28 = &v6[5 * v26];
      *((_DWORD *)v28 + 8) = v7;
      *((_DWORD *)v28 + 9) = v31;
      v28[5] = v27;
      v28[6] = v24;
      *((_BYTE *)v28 + 56) = v9;
      v28[8] = v5;
      *v8 = v6;
    }
  }
  return result;
}

unint64_t sub_1A58E3B24()
{
  unint64_t result;

  result = qword_1EE798170;
  if (!qword_1EE798170)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E00D0, &type metadata for RunningCommands.TooManyCommandsRunning);
    atomic_store(result, (unint64_t *)&qword_1EE798170);
  }
  return result;
}

uint64_t sub_1A58E3B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v1 = 1 << *(_BYTE *)(a1 + 32);
  if (v1 < 64)
    v2 = ~(-1 << v1);
  else
    v2 = -1;
  v3 = v2 & *(_QWORD *)(a1 + 56);
  v4 = (unint64_t)(v1 + 63) >> 6;
  if (v3)
  {
    v5 = __clz(__rbit64(v3));
    goto LABEL_18;
  }
  v6 = 1;
  if ((unint64_t)(v1 + 63) >> 6 > 1)
  {
    v7 = *(_QWORD *)(a1 + 64);
    if (v7)
    {
LABEL_17:
      v5 = __clz(__rbit64(v7)) + (v6 << 6);
LABEL_18:
      __asm { BR              X9 }
    }
    v8 = 2;
    if (v4 > 2)
    {
      v7 = *(_QWORD *)(a1 + 72);
      if (v7)
        goto LABEL_16;
      v8 = 3;
      if (v4 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_16;
      v8 = 4;
      if (v4 <= 4)
        return 1;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
      {
LABEL_16:
        v6 = v8;
        goto LABEL_17;
      }
      v8 = 5;
      if (v4 > 5)
      {
        v7 = *(_QWORD *)(a1 + 96);
        if (v7)
          goto LABEL_16;
        while (1)
        {
          v6 = v8 + 1;
          if (__OFADD__(v8, 1))
          {
            __break(1u);
            JUMPOUT(0x1A58E40ACLL);
          }
          if (v6 >= v4)
            break;
          v7 = *(_QWORD *)(a1 + 56 + 8 * v6);
          ++v8;
          if (v7)
            goto LABEL_17;
        }
      }
    }
  }
  return 1;
}

unint64_t sub_1A58E40C4()
{
  unint64_t result;

  result = qword_1EE7AAEB8;
  if (!qword_1EE7AAEB8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0090, &type metadata for RunningCommands.NeedToWaitOnRequirements);
    atomic_store(result, (unint64_t *)&qword_1EE7AAEB8);
  }
  return result;
}

unint64_t sub_1A58E4108()
{
  unint64_t result;

  result = qword_1EE795D50;
  if (!qword_1EE795D50)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0050, &type metadata for RunningCommands.TooManyBodyDataRequestsRunning);
    atomic_store(result, (unint64_t *)&qword_1EE795D50);
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningCommands.TooManyBodyDataRequestsRunning()
{
  return &type metadata for RunningCommands.TooManyBodyDataRequestsRunning;
}

ValueMetadata *type metadata accessor for RunningCommands.NeedToWaitOnRequirements()
{
  return &type metadata for RunningCommands.NeedToWaitOnRequirements;
}

ValueMetadata *type metadata accessor for RunningCommands.TooManyCommandsRunning()
{
  return &type metadata for RunningCommands.TooManyCommandsRunning;
}

uint64_t initializeWithCopy for RunningCommands.Command(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for RunningCommands.Command(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for RunningCommands.Command(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for RunningCommands.Command()
{
  return &type metadata for RunningCommands.Command;
}

uint64_t storeEnumTagSinglePayload for RunningCommands.Command.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A58E42DC + 4 * byte_1A59DFFD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A58E4310 + 4 * byte_1A59DFFD0[v4]))();
}

uint64_t sub_1A58E4310(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58E4318(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58E4320);
  return result;
}

uint64_t sub_1A58E432C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58E4334);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A58E4338(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58E4340(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RunningCommands.Command.Kind()
{
  return &type metadata for RunningCommands.Command.Kind;
}

unint64_t sub_1A58E4360()
{
  unint64_t result;

  result = qword_1EE7AAEC8;
  if (!qword_1EE7AAEC8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0158, &type metadata for RunningCommands.Command.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7AAEC8);
  }
  return result;
}

uint64_t SelectedMailbox.id.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

unint64_t sub_1A58E43CC(unint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[584];
  _BYTE v7[584];
  _BYTE v8[584];

  if (result >> 60 == 3)
  {
    sub_1A552316C((const void *)((result & 0xFFFFFFFFFFFFFFFLL) + 16), v7);
    sub_1A552316C(v7, v8);
    result = sub_1A5523B90((uint64_t)v8);
    switch((int)result)
    {
      case 0:
        result = sub_1A5524678((uint64_t)v8);
        v2 = *(_QWORD *)result;
        if ((~*(_QWORD *)result & 0xF000000000000007) != 0)
        {
          switch((v2 >> 59) & 0x1E | (v2 >> 2) & 1)
          {
            case 2uLL:
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              sub_1A5862270(v2);
              v3 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v4 = sub_1A58B62BC(v3);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A5862B80(v2);
              result = swift_bridgeObjectRelease();
              *(_QWORD *)(v1 + 40) = v4;
              break;
            case 3uLL:
              *(_DWORD *)(v1 + 48) = *(_DWORD *)((v2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
              *(_BYTE *)(v1 + 52) = 0;
              break;
            case 4uLL:
              *(_DWORD *)(v1 + 56) = *(_DWORD *)((v2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
              *(_BYTE *)(v1 + 60) = 0;
              break;
            case 5uLL:
              *(_DWORD *)(v1 + 32) = *(_DWORD *)((v2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
              *(_BYTE *)(v1 + 36) = 0;
              break;
            default:
              return result;
          }
        }
        break;
      case 13:
        v5 = *(_QWORD *)sub_1A5524678((uint64_t)v8);
        sub_1A552316C(v7, v6);
        sub_1A5524678((uint64_t)v6);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v1 + 16) = v5;
        break;
      case 14:
        result = sub_1A5524678((uint64_t)v8);
        *(_QWORD *)(v1 + 24) = *(unsigned int *)result;
        break;
      case 15:
        result = sub_1A5524678((uint64_t)v8);
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t SelectedMailbox.init(name:isReadOnly:flags:messageCount:firstUnseenMessage:permanentFlags:nextUID:uidValidity:modificationSequenceValue:)@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int a10, char a11, uint64_t a12, char a13, char a14)
{
  *(_QWORD *)a9 = result;
  *(_DWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a4;
  *(_QWORD *)(a9 + 24) = a5;
  *(_DWORD *)(a9 + 32) = a6;
  *(_BYTE *)(a9 + 36) = BYTE4(a6) & 1;
  *(_QWORD *)(a9 + 40) = a7;
  *(_DWORD *)(a9 + 48) = a8;
  *(_BYTE *)(a9 + 52) = BYTE4(a8) & 1;
  *(_DWORD *)(a9 + 56) = a10;
  *(_BYTE *)(a9 + 60) = a11 & 1;
  *(_QWORD *)(a9 + 64) = a12;
  *(_BYTE *)(a9 + 72) = a13;
  *(_BYTE *)(a9 + 73) = a14 & 1;
  *(_BYTE *)(a9 + 74) = a3;
  return result;
}

uint64_t SelectedMailbox.name.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t SelectedMailbox.name.setter(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)v2 = a1;
  *(_DWORD *)(v2 + 8) = a2;
  return result;
}

double (*SelectedMailbox.name.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SelectedMailbox.flags.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t SelectedMailbox.flags.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

double (*SelectedMailbox.flags.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SelectedMailbox.messageCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t SelectedMailbox.messageCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

double (*SelectedMailbox.messageCount.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t SelectedMailbox.firstUnseenMessage.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 36) << 32);
}

uint64_t SelectedMailbox.firstUnseenMessage.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 32) = result;
  *(_BYTE *)(v1 + 36) = BYTE4(result) & 1;
  return result;
}

double (*SelectedMailbox.firstUnseenMessage.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SelectedMailbox.permanentFlags.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t SelectedMailbox.permanentFlags.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

double (*SelectedMailbox.permanentFlags.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t SelectedMailbox.nextUID.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 48) | ((unint64_t)*(unsigned __int8 *)(v0 + 52) << 32);
}

uint64_t SelectedMailbox.nextUID.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 48) = result;
  *(_BYTE *)(v1 + 52) = BYTE4(result) & 1;
  return result;
}

double (*SelectedMailbox.nextUID.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t SelectedMailbox.uidValidity.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 56) | ((unint64_t)*(unsigned __int8 *)(v0 + 60) << 32);
}

uint64_t SelectedMailbox.uidValidity.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 56) = result;
  *(_BYTE *)(v1 + 60) = BYTE4(result) & 1;
  return result;
}

double (*SelectedMailbox.uidValidity.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SelectedMailbox.modificationSequenceValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t SelectedMailbox.modificationSequenceValue.setter(uint64_t result, __int16 a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 72) = a2;
  *(_BYTE *)(v2 + 73) = HIBYTE(a2) & 1;
  return result;
}

double (*SelectedMailbox.modificationSequenceValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SelectedMailbox.isReadOnly.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 74);
}

uint64_t SelectedMailbox.isReadOnly.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 74) = result;
  return result;
}

double (*SelectedMailbox.isReadOnly.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1A58E4808@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_DWORD *)(a1 + 8) = v2;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A58E481C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[2];
  _OWORD v9[3];
  _OWORD v10[2];

  v2 = a1[3];
  v7[2] = a1[2];
  v8[0] = v2;
  *(_OWORD *)((char *)v8 + 11) = *(_OWORD *)((char *)a1 + 59);
  v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  v4 = a2[3];
  v9[2] = a2[2];
  v10[0] = v4;
  *(_OWORD *)((char *)v10 + 11) = *(_OWORD *)((char *)a2 + 59);
  v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  return _s15IMAP2Connection15SelectedMailboxV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v9) & 1;
}

BOOL static SelectedMailbox.ModificationSequence.__derived_enum_equals(_:_:)(_BOOL8 result, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) != 0)
    return (a4 & 1) != 0;
  if ((a4 & 1) != 0)
    return 0;
  if (((a3 | result) & 0x8000000000000000) == 0)
    return a3 == result;
  __break(1u);
  return result;
}

uint64_t sub_1A58E48A8(uint64_t *a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;
  uint64_t v6;

  v3 = *((unsigned __int8 *)a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
  {
    v6 = *a1;
    if ((*(_QWORD *)a2 | v6) < 0)
      __break(1u);
    else
      return *(_QWORD *)a2 == v6;
  }
  return result;
}

uint64_t _s15IMAP2Connection15SelectedMailboxV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  if ((*(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned int *)(a1 + 8) << 32)) != (*(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned int *)(a2 + 8) << 32)))
    goto LABEL_34;
  if (!sub_1A54FF30C(*(_QWORD *)a1, *(_QWORD *)a2))
    goto LABEL_34;
  result = sub_1A54ED500(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16));
  if ((result & 1) == 0 || *(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24))
    goto LABEL_34;
  v5 = *(_BYTE *)(a2 + 36);
  if ((*(_BYTE *)(a1 + 36) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 36))
      return v5 & 1;
  }
  else
  {
    if (*(_DWORD *)(a2 + 32) != *(_DWORD *)(a1 + 32))
      v5 = 1;
    if ((v5 & 1) != 0)
      goto LABEL_34;
  }
  v6 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (!v6)
      goto LABEL_34;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v7 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v8 = sub_1A5895080(v7, v6);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      goto LABEL_34;
  }
  else if (v6)
  {
    goto LABEL_34;
  }
  v5 = *(_BYTE *)(a2 + 52);
  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 52))
      return v5 & 1;
  }
  else
  {
    if (*(_DWORD *)(a2 + 48) != *(_DWORD *)(a1 + 48))
      v5 = 1;
    if ((v5 & 1) != 0)
      goto LABEL_34;
  }
  v5 = *(_BYTE *)(a2 + 60);
  if ((*(_BYTE *)(a1 + 60) & 1) != 0)
  {
    if (*(_BYTE *)(a2 + 60))
      goto LABEL_28;
    return v5 & 1;
  }
  if (*(_DWORD *)(a1 + 56) != *(_DWORD *)(a2 + 56))
    v5 = 1;
  if ((v5 & 1) != 0)
    goto LABEL_34;
LABEL_28:
  v9 = *(_BYTE *)(a2 + 73);
  if ((*(_BYTE *)(a1 + 73) & 1) != 0)
    goto LABEL_36;
  if ((*(_BYTE *)(a2 + 73) & 1) != 0)
  {
LABEL_34:
    v5 = 0;
    return v5 & 1;
  }
  v9 = *(_BYTE *)(a2 + 72);
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
LABEL_36:
    if ((v9 & 1) == 0)
      goto LABEL_34;
    goto LABEL_37;
  }
  if ((*(_BYTE *)(a2 + 72) & 1) != 0)
    goto LABEL_34;
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a2 + 64);
  if (((v11 | v10) & 0x8000000000000000) == 0)
  {
    if (v11 != v10)
      goto LABEL_34;
LABEL_37:
    v5 = ((*(_BYTE *)(a1 + 74) & 1) == 0) ^ *(_BYTE *)(a2 + 74);
    return v5 & 1;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A58E4A7C()
{
  unint64_t result;

  result = qword_1EE795BC0;
  if (!qword_1EE795BC0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxName, &type metadata for MailboxName);
    atomic_store(result, (unint64_t *)&qword_1EE795BC0);
  }
  return result;
}

uint64_t destroy for SelectedMailbox()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SelectedMailbox(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for SelectedMailbox(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v5 = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = v5;
  v6 = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
  return a1;
}

uint64_t assignWithTake for SelectedMailbox(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
  return a1;
}

uint64_t getEnumTagSinglePayload for SelectedMailbox(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 75))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelectedMailbox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 74) = 0;
    *(_WORD *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 75) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 75) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SelectedMailbox()
{
  return &type metadata for SelectedMailbox;
}

ValueMetadata *type metadata accessor for SelectedMailbox.ModificationSequence()
{
  return &type metadata for SelectedMailbox.ModificationSequence;
}

_WORD *__swift_memcpy2_1_3(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for StartTLS(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StartTLS(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A58E4EC8 + 4 * byte_1A59E024D[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1A58E4EFC + 4 * asc_1A59E0248[v4]))();
}

uint64_t sub_1A58E4EFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A58E4F04(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1A58E4F0CLL);
  return result;
}

uint64_t sub_1A58E4F18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1A58E4F20);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_1A58E4F24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A58E4F2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StartTLS()
{
  return &type metadata for StartTLS;
}

double sub_1A58E4F48@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 4;
  return result;
}

void sub_1A58E4F70()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 1) = 1;
}

uint64_t sub_1A58E4F7C@<X0>(char a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v5[11];
  _BYTE v6[184];
  _BYTE v7[192];

  if (a1 || *(_BYTE *)(v2 + 1) == 1)
  {
    v5[0] = xmmword_1A59DC780;
    sub_1A587ABF8((uint64_t)v5);
  }
  else
  {
    sub_1A58E5000((uint64_t)v5);
  }
  sub_1A5862234(v5, (uint64_t)v6);
  nullsub_1(v6);
  sub_1A587AC04((uint64_t)v6, (uint64_t)v7);
  return sub_1A587AC04((uint64_t)v7, a2);
}

double sub_1A58E5000(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 176) = 7;
  return result;
}

__uint64_t sub_1A58E5028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  __uint64_t result;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;

  v5 = sub_1A594A8D8();
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  MEMORY[0x1E0C80A78](v5);
  v59 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v57 = (char *)&v51 - v8;
  MEMORY[0x1E0C80A78](v9);
  v58 = (char *)&v51 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EA8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A594ACC8();
  v62 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v55 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v56 = (char *)&v51 - v17;
  v18 = sub_1A594ACEC();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798E90);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v51 - v26;
  v28 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_createdAt);
  result = static MonotonicTime.now()();
  v30 = v28 - result;
  if (v28 >= result)
  {
    if ((uint64_t)(v28 - result) < 0)
    {
LABEL_34:
      __break(1u);
      return result;
    }
  }
  else
  {
    if ((uint64_t)(result - v28) < 0)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v30 = v28 - result;
  }
  v31 = (double)v30 / 1000000000.0;
  if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v31 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v31 >= 9.22337204e18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v32 = -(uint64_t)v31;
  if (__OFSUB__(0, (uint64_t)v31))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (a1)
  {
    v53 = -(uint64_t)v31;
    v54 = a1;
    sub_1A594AA58();
    v33 = sub_1A594AA40();
    v34 = *(_QWORD *)(v33 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v27, 0, 1, v33);
    sub_1A58EA6C0((uint64_t)v27, (uint64_t)v24);
    v35 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v24, v33);
    if (v35 == *MEMORY[0x1E0CCE5C8] || v35 == *MEMORY[0x1E0CCE5C0])
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v24, v33);
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v24, v18);
      v63 = 0;
      v64 = 0xE000000000000000;
      sub_1A594B5F8();
      sub_1A594C924();
      sub_1A594B5F8();
      v51 = v63;
      v52 = v64;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      swift_bridgeObjectRelease();
    }
    else if (v35 == *MEMORY[0x1E0CCE5B8])
    {
      v51 = 0x7075746573;
      v52 = 0xE500000000000000;
    }
    else if (v35 == *MEMORY[0x1E0CCE5D8])
    {
      v51 = 0x6E69726170657270;
      v52 = 0xE900000000000067;
    }
    else if (v35 == *MEMORY[0x1E0CCE5B0])
    {
      v51 = 0x7964616572;
      v52 = 0xE500000000000000;
    }
    else if (v35 == *MEMORY[0x1E0CCE5D0])
    {
      v51 = 0x656C6C65636E6163;
      v52 = 0xE900000000000064;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v33);
      v51 = 0;
      v52 = 0;
    }
    sub_1A5510284((uint64_t)v27, &qword_1EE798E90);
    a1 = v54;
    sub_1A594A920();
    v43 = v62;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v13, 1, v14) == 1)
    {
      sub_1A5510284((uint64_t)v13, (uint64_t *)&unk_1EE798EA8);
      v37 = 0;
      v38 = 0;
    }
    else
    {
      v44 = v56;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v56, v13, v14);
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v55, v44, v14);
      v38 = sub_1A594B490();
      v37 = v45;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v14);
      swift_bridgeObjectRelease();
    }
    v46 = v57;
    sub_1A594AA70();
    v48 = v60;
    v47 = v61;
    v49 = v58;
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v58, v46, v61);
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v59, v49, v47);
    v41 = sub_1A594B490();
    v42 = v50;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v47);
    swift_bridgeObjectRelease();
    result = sub_1A594A914();
    v40 = v52;
    v32 = v53;
    v39 = v51;
  }
  else
  {
    v36 = sub_1A594AA40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v27, 1, 1, v36);
    sub_1A5510284((uint64_t)v27, &qword_1EE798E90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v13, 1, 1, v14);
    sub_1A5510284((uint64_t)v13, (uint64_t *)&unk_1EE798EA8);
    v37 = 0;
    v38 = 0;
    v39 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    result = 0;
  }
  *(_QWORD *)a2 = v32;
  *(_QWORD *)(a2 + 8) = v39;
  *(_QWORD *)(a2 + 16) = v40;
  *(_QWORD *)(a2 + 24) = v38;
  *(_QWORD *)(a2 + 32) = v37;
  *(_QWORD *)(a2 + 40) = v41;
  *(_QWORD *)(a2 + 48) = v42;
  *(_QWORD *)(a2 + 56) = result;
  *(_BYTE *)(a2 + 64) = a1 == 0;
  return result;
}

uint64_t sub_1A58E56BC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A58EA2BC(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A58E98A4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A58E5724()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A58E5748 + 4 * byte_1A59E0270[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1A58E5748()
{
  return 0x43676E696E6E7572;
}

uint64_t sub_1A58E576C()
{
  return 0x646E694B656C6469;
}

uint64_t sub_1A58E5784()
{
  return 0x6574617473;
}

uint64_t sub_1A58E5798()
{
  return 0x69796C7265646E75;
}

uint64_t sub_1A58E57B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A58EA2F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A58E57D8()
{
  sub_1A58E5A44();
  return sub_1A594CFB4();
}

uint64_t sub_1A58E5800()
{
  sub_1A58E5A44();
  return sub_1A594CFC0();
}

uint64_t CommandConnection.CapturedValue.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[19];
  char v22;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79ACD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A58E5A44();
  sub_1A594CF3C();
  LOBYTE(v15) = 0;
  sub_1A594CC18();
  if (!v2)
  {
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + 16);
    v22 = 1;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795F28);
    sub_1A58E5A88();
    sub_1A594CC3C();
    LOBYTE(v15) = 2;
    sub_1A594CBD0();
    v9 = *(_OWORD *)(v3 + 120);
    v19 = *(_OWORD *)(v3 + 104);
    v20 = v9;
    *(_OWORD *)v21 = *(_OWORD *)(v3 + 136);
    *(_DWORD *)&v21[15] = *(_DWORD *)(v3 + 151);
    v10 = *(_OWORD *)(v3 + 56);
    v15 = *(_OWORD *)(v3 + 40);
    v16 = v10;
    v11 = *(_OWORD *)(v3 + 88);
    v17 = *(_OWORD *)(v3 + 72);
    v18 = v11;
    v22 = 3;
    sub_1A58E5B30();
    sub_1A594CC3C();
    v12 = *(_OWORD *)(v3 + 208);
    v17 = *(_OWORD *)(v3 + 192);
    v18 = v12;
    LOBYTE(v19) = *(_BYTE *)(v3 + 224);
    v13 = *(_OWORD *)(v3 + 176);
    v15 = *(_OWORD *)(v3 + 160);
    v16 = v13;
    v22 = 4;
    sub_1A58E5B74();
    sub_1A594CC3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A58E5A44()
{
  unint64_t result;

  result = qword_1EE797EB0;
  if (!qword_1EE797EB0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0450, &_s13CapturedValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797EB0);
  }
  return result;
}

unint64_t sub_1A58E5A88()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE799660;
  if (!qword_1EE799660)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE795F28);
    v2 = sub_1A58E5AEC();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE799660);
  }
  return result;
}

unint64_t sub_1A58E5AEC()
{
  unint64_t result;

  result = qword_1EE798168;
  if (!qword_1EE798168)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0428, &_s13CapturedValueVN);
    atomic_store(result, (unint64_t *)&qword_1EE798168);
  }
  return result;
}

unint64_t sub_1A58E5B30()
{
  unint64_t result;

  result = qword_1EE7980A0;
  if (!qword_1EE7980A0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0400, &_s13CapturedValueVN_0);
    atomic_store(result, (unint64_t *)&qword_1EE7980A0);
  }
  return result;
}

unint64_t sub_1A58E5B74()
{
  unint64_t result;

  result = qword_1EE797F38;
  if (!qword_1EE797F38)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E03D8, &_s13CapturedValueVN_1);
    atomic_store(result, (unint64_t *)&qword_1EE797F38);
  }
  return result;
}

uint64_t sub_1A58E5BB8(_QWORD *a1)
{
  return CommandConnection.CapturedValue.encode(to:)(a1);
}

double CommandConnection.capturedValue.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  double result;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _OWORD v33[6];
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  char v37;
  _OWORD v38[2];
  __int128 v39;
  __int128 v40;
  char v41;

  v2 = v1;
  v4 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = ConnectionID.debugDescription.getter(*(unsigned int *)(v2
                                                            + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
  v30 = v8;
  v31 = v7;
  swift_beginAccess();
  v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v29 = sub_1A58E5DF4(v9);
  swift_bridgeObjectRelease();
  v10 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idleKind);
  v11 = 1701602409;
  if ((v10 & 1) == 0)
    v11 = 1886351214;
  if (v10 == 2)
    v12 = 0;
  else
    v12 = v11;
  if (v10 == 2)
    v13 = 0;
  else
    v13 = 0xE400000000000000;
  v14 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_1A55034B8(v14, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  sub_1A58E5F1C((uint64_t)v33);
  v27 = v33[1];
  v28 = v33[0];
  v25 = v33[3];
  v26 = v33[2];
  v23 = v33[5];
  v24 = v33[4];
  v16 = v34;
  v15 = v35;
  v17 = v36;
  v18 = v37;
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  sub_1A58E5028(*(_QWORD *)(*(_QWORD *)(v2 + 16) + OBJC_IVAR____TtC15IMAP2Connection10Connection_connection), (uint64_t)v38);
  v32 = v41;
  v19 = v30;
  *(_QWORD *)a1 = v31;
  *(_QWORD *)(a1 + 8) = v19;
  *(_QWORD *)(a1 + 16) = v29;
  *(_QWORD *)(a1 + 24) = v12;
  *(_QWORD *)(a1 + 32) = v13;
  *(_OWORD *)(a1 + 40) = v28;
  *(_OWORD *)(a1 + 56) = v27;
  *(_OWORD *)(a1 + 72) = v26;
  *(_OWORD *)(a1 + 88) = v25;
  *(_OWORD *)(a1 + 104) = v24;
  *(_OWORD *)(a1 + 120) = v23;
  *(_QWORD *)(a1 + 136) = v16;
  *(_QWORD *)(a1 + 144) = v15;
  *(_WORD *)(a1 + 152) = v17;
  *(_BYTE *)(a1 + 154) = v18;
  v20 = v38[1];
  *(_OWORD *)(a1 + 160) = v38[0];
  *(_OWORD *)(a1 + 176) = v20;
  result = *(double *)&v39;
  v22 = v40;
  *(_OWORD *)(a1 + 192) = v39;
  *(_OWORD *)(a1 + 208) = v22;
  *(_BYTE *)(a1 + 224) = v32;
  return result;
}

uint64_t sub_1A58E5DF4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v17;
  _QWORD v18[3];
  char v19;
  uint64_t v20;
  _QWORD v21[2];
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A58BF868(0, v1, 0);
    v2 = v24;
    v4 = (_QWORD *)(a1 + 64);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *((_BYTE *)v4 - 8);
      v8 = *v4;
      v18[0] = *(v4 - 4);
      v18[1] = v5;
      v18[2] = v6;
      v19 = v7;
      v20 = v8;
      sub_1A58E8188((uint64_t)v18, v21);
      v9 = v21[0];
      v10 = v21[1];
      v11 = v22;
      v12 = v23;
      v24 = v2;
      v14 = *(_QWORD *)(v2 + 16);
      v13 = *(_QWORD *)(v2 + 24);
      if (v14 >= v13 >> 1)
      {
        v17 = v22;
        sub_1A58BF868(v13 > 1, v14 + 1, 1);
        v11 = v17;
        v2 = v24;
      }
      v4 += 5;
      *(_QWORD *)(v2 + 16) = v14 + 1;
      v15 = v2 + 40 * v14;
      *(_QWORD *)(v15 + 32) = v9;
      *(_QWORD *)(v15 + 40) = v10;
      *(_OWORD *)(v15 + 48) = v11;
      *(_QWORD *)(v15 + 64) = v12;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

void sub_1A58E5F1C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  char *v11;
  _QWORD v12[96];

  v12[1] = a1;
  v2 = type metadata accessor for UnauthenticatedState();
  MEMORY[0x1E0C80A78](v2);
  v12[3] = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UnauthenticatedStateWithTasks();
  MEMORY[0x1E0C80A78](v4);
  v12[4] = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594AA40();
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v8);
  sub_1A55034B8(v1, (uint64_t)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v11 = (char *)&loc_1A58E6088 + *((int *)qword_1A58E6D50 + swift_getEnumCaseMultiPayload());
  __asm { BR              X12 }
}

uint64_t sub_1A58E60C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v4, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v5, v1);
  v6 = sub_1A594B490();
  v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
  swift_bridgeObjectRelease();
  result = 0;
  v10 = *(_QWORD *)(v0 + 8);
  *(_QWORD *)v10 = v6;
  *(_OWORD *)(v10 + 8) = v8;
  *(_QWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v10 + 32) = 0;
  *(_QWORD *)(v10 + 40) = 0;
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v10 + 56) = 0;
  *(_QWORD *)(v10 + 64) = 0;
  *(_QWORD *)(v10 + 72) = 0;
  *(_QWORD *)(v10 + 80) = 0;
  *(_QWORD *)(v10 + 88) = 0;
  *(_QWORD *)(v10 + 96) = 0;
  *(_QWORD *)(v10 + 104) = 0;
  *(_BYTE *)(v10 + 112) = 2;
  *(_BYTE *)(v10 + 113) = 2;
  *(_BYTE *)(v10 + 114) = 2;
  return result;
}

void sub_1A58E6BDC()
{
  uint64_t v0;

  sub_1A55034FC(v0, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
  swift_bridgeObjectRelease();
  JUMPOUT(0x1A58E6B84);
}

void sub_1A58E6C38()
{
  uint64_t v0;

  sub_1A55034FC(v0, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
  swift_bridgeObjectRelease();
  JUMPOUT(0x1A58E6B84);
}

void sub_1A58E6C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 368) = v3;
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v1 + 160);
  *(_QWORD *)(v0 + 400) = *(_QWORD *)(v1 + 176);
  v4 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 304) = v4;
  v5 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 336) = v5;
  v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 240) = v6;
  v7 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 272) = v7;
  sub_1A58B229C(v0 + 224);
  sub_1A55034FC(v2, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedStateWithTasks);
  swift_bridgeObjectRelease();
  JUMPOUT(0x1A58E6B84);
}

uint64_t _s13CapturedValueVwxx_1(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedValueVwcp_1(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v8)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v8;
    v9 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v9;
    v10 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v10;
    v11 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v11;
    v12 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = v12;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v13;
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    v14 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v14;
  }
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  v15 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v15;
  v16 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v16;
  v18 = *(_QWORD *)(a2 + 208);
  v17 = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 208) = v18;
  *(_QWORD *)(a1 + 216) = v17;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s13CapturedValueVwca_1(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 72);
  v5 = (_OWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A58E7244(a1 + 72);
      *v4 = *v5;
      v7 = *(_OWORD *)(a2 + 136);
      v9 = *(_OWORD *)(a2 + 88);
      v8 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = v7;
      *(_OWORD *)(a1 + 88) = v9;
      *(_OWORD *)(a1 + 104) = v8;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *v4 = *v5;
    v10 = *(_OWORD *)(a2 + 88);
    v11 = *(_OWORD *)(a2 + 104);
    v12 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v12;
    *(_OWORD *)(a1 + 88) = v10;
    *(_OWORD *)(a1 + 104) = v11;
  }
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = v13;
  return a1;
}

uint64_t sub_1A58E7244(uint64_t a1)
{
  _s13CapturedValueV13AuthenticatedVwxx();
  return a1;
}

__n128 __swift_memcpy225_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[13];
  *(_BYTE *)(a1 + 224) = *((_BYTE *)a2 + 224);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t _s13CapturedValueVwta_1(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 80))
    goto LABEL_5;
  v8 = *(_QWORD *)(a2 + 80);
  if (!v8)
  {
    sub_1A58E7244(a1 + 72);
LABEL_5:
    v13 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v13;
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    v14 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v14;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  return a1;
}

uint64_t _s13CapturedValueVwet_1(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 225))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13CapturedValueVwst_1(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 224) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 225) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 225) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandConnection.CapturedValue()
{
  return &type metadata for CommandConnection.CapturedValue;
}

uint64_t _s13CapturedValueV13AuthenticatedVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s13CapturedValueV13AuthenticatedVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *_s13CapturedValueV13AuthenticatedVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s13CapturedValueV13AuthenticatedVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedValueV13AuthenticatedVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *_s13CapturedValueV13AuthenticatedVMa()
{
  return &_s13CapturedValueV13AuthenticatedVN;
}

uint64_t _s13CapturedValueVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedValueVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s13CapturedValueVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v4;
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s13CapturedValueVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t _s13CapturedValueVwet_0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s13CapturedValueVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *_s13CapturedValueVMa_1()
{
  return &_s13CapturedValueVN_1;
}

uint64_t _s13CapturedValueVwxx(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13CapturedValueVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v6)
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v7;
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v8;
    v9 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v9;
    v10 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v10;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
  }
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_WORD *)(a1 + 113) = *(_WORD *)(a2 + 113);
  return a1;
}

uint64_t _s13CapturedValueVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 32);
  v5 = (_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A58E7244(a1 + 32);
      *v4 = *v5;
      v7 = *(_OWORD *)(a2 + 96);
      v9 = *(_OWORD *)(a2 + 48);
      v8 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v7;
      *(_OWORD *)(a1 + 48) = v9;
      *(_OWORD *)(a1 + 64) = v8;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *v4 = *v5;
    v10 = *(_OWORD *)(a2 + 48);
    v11 = *(_OWORD *)(a2 + 64);
    v12 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v12;
    *(_OWORD *)(a1 + 48) = v10;
    *(_OWORD *)(a1 + 64) = v11;
  }
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_BYTE *)(a1 + 114) = *(_BYTE *)(a2 + 114);
  return a1;
}

__n128 __swift_memcpy115_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_DWORD *)(a1 + 111) = *(_DWORD *)((char *)a2 + 111);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t _s13CapturedValueVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 40))
    goto LABEL_5;
  v6 = *(_QWORD *)(a2 + 40);
  if (!v6)
  {
    sub_1A58E7244(a1 + 32);
LABEL_5:
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_WORD *)(a1 + 113) = *(_WORD *)(a2 + 113);
  return a1;
}

uint64_t _s13CapturedValueVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 115))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s13CapturedValueVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 114) = 0;
    *(_WORD *)(result + 112) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 115) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 115) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *_s13CapturedValueVMa_0()
{
  return &_s13CapturedValueVN_0;
}

ValueMetadata *_s13CapturedValueVMa()
{
  return &_s13CapturedValueVN;
}

ValueMetadata *_s13CapturedValueV10CodingKeysOMa()
{
  return &_s13CapturedValueV10CodingKeysON;
}

unint64_t sub_1A58E7F3C()
{
  unint64_t result;

  result = qword_1EE7AAED0;
  if (!qword_1EE7AAED0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0388, &_s13CapturedValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7AAED0);
  }
  return result;
}

uint64_t sub_1A58E7F80(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AD18);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A58EA524();
  sub_1A594CF3C();
  v8[15] = 0;
  sub_1A594CC18();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A594CBD0();
    v8[13] = 2;
    sub_1A594CC30();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A58E80BC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1684957547;
  if (*v0 != 1)
    v1 = 6645601;
  if (*v0)
    return v1;
  else
    return 6775156;
}

uint64_t sub_1A58E8100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A58EAD88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A58E8124()
{
  sub_1A58EA524();
  return sub_1A594CFB4();
}

uint64_t sub_1A58E814C()
{
  sub_1A58EA524();
  return sub_1A594CFC0();
}

uint64_t sub_1A58E8174(_QWORD *a1)
{
  return sub_1A58E7F80(a1);
}

__uint64_t sub_1A58E8188@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __uint64_t result;
  uint64_t v8;
  double v9;

  v3 = 8 * *(char *)(a1 + 24);
  v4 = *(_QWORD *)((char *)&unk_1A59E08C0 + v3);
  v5 = *(_QWORD *)((char *)&unk_1A59E08D8 + v3);
  v6 = *(_QWORD *)(a1 + 32);
  sub_1A594C924();
  result = static MonotonicTime.now()();
  v8 = v6 - result;
  if (v6 < result)
  {
    if ((uint64_t)(result - v6) < 0)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    v8 = v6 - result;
LABEL_5:
    v9 = (double)v8 / 1000000000.0;
    if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) != 0)
    {
      if (v9 > -9.22337204e18)
      {
        if (v9 < 9.22337204e18)
        {
          if (!__OFSUB__(0, (uint64_t)v9))
          {
            *a2 = 0;
            a2[1] = 0xE000000000000000;
            a2[2] = v4;
            a2[3] = v5;
            a2[4] = -(uint64_t)v9;
            return result;
          }
          goto LABEL_13;
        }
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
  if ((uint64_t)(v6 - result) >= 0)
    goto LABEL_5;
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1A58E82C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79AD08);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A58EA67C();
  sub_1A594CF3C();
  v8[15] = 0;
  sub_1A594CC18();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A594CBD0();
    v8[13] = 2;
    sub_1A594CBD0();
    v8[12] = 3;
    sub_1A594CBD0();
    v8[11] = 4;
    sub_1A594CBD0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A58E8450(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  char v11[80];
  _BYTE v12[80];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79ACF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A58EA568();
  sub_1A594CF3C();
  v11[0] = 0;
  sub_1A594CBD0();
  if (!v2)
  {
    v11[0] = 1;
    sub_1A594CBD0();
    sub_1A58EA5AC(v3 + 32, (uint64_t)v12);
    sub_1A58EA5AC((uint64_t)v12, (uint64_t)v11);
    v10[15] = 2;
    sub_1A58EA5F4();
    sub_1A594CBF4();
    v11[0] = 3;
    sub_1A594CBDC();
    v11[0] = 4;
    sub_1A594CBDC();
    v11[0] = 5;
    sub_1A594CBDC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A58E862C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A58E8664 + 4 * byte_1A59E0275[*v0]))(0x696C696261706163, 0xEC00000073656974);
}

uint64_t sub_1A58E8664()
{
  return 0x4449726576726573;
}

uint64_t sub_1A58E867C()
{
  return 0x614D64656C696166;
}

unint64_t sub_1A58E86A0()
{
  return 0xD000000000000010;
}

uint64_t sub_1A58E86BC()
{
  return 0x64657463656C6573;
}

uint64_t sub_1A58E86E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A58EAEAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A58E8704()
{
  sub_1A58EA67C();
  return sub_1A594CFB4();
}

uint64_t sub_1A58E872C()
{
  sub_1A58EA67C();
  return sub_1A594CFC0();
}

uint64_t sub_1A58E8754(_QWORD *a1)
{
  return sub_1A58E82C4(a1);
}

uint64_t sub_1A58E8768()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A58E879C + 4 * byte_1A59E027A[*v0]))(0x697463656E6E6F63, 0xEA0000000000676ELL);
}

uint64_t sub_1A58E879C()
{
  return 0x6E65687475616E75;
}

uint64_t sub_1A58E87C0()
{
  return 0x69746E6568747561;
}

unint64_t sub_1A58E87E4()
{
  return 0xD000000000000014;
}

uint64_t sub_1A58E8800()
{
  return 0x64656C696166;
}

uint64_t sub_1A58E8814()
{
  return 0x656C6C65636E6163;
}

uint64_t sub_1A58E8830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A58EB120(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A58E8854()
{
  sub_1A58EA568();
  return sub_1A594CFB4();
}

uint64_t sub_1A58E887C()
{
  sub_1A58EA568();
  return sub_1A594CFC0();
}

uint64_t sub_1A58E88A4(_QWORD *a1)
{
  return sub_1A58E8450(a1);
}

uint64_t sub_1A58E88F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79ACE8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A58EA638();
  sub_1A594CF3C();
  v8[15] = 0;
  sub_1A594CC30();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A594CBD0();
    v8[13] = 2;
    sub_1A594CBD0();
    v8[12] = 3;
    sub_1A594CBD0();
    v8[11] = 4;
    sub_1A594CC0C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A58E8A84()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A58E8AAC + 4 * byte_1A59E0280[*v0]))(6645601, 0xE300000000000000);
}

uint64_t sub_1A58E8AAC()
{
  return 0x6574617473;
}

uint64_t sub_1A58E8AC0()
{
  return 1752457584;
}

uint64_t sub_1A58E8AD0()
{
  return 0x746E696F70646E65;
}

uint64_t sub_1A58E8AE8()
{
  return 30574;
}

uint64_t sub_1A58E8AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A58EB3F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A58E8B18()
{
  sub_1A58EA638();
  return sub_1A594CFB4();
}

uint64_t sub_1A58E8B40()
{
  sub_1A58EA638();
  return sub_1A594CFC0();
}

uint64_t sub_1A58E8B68(_QWORD *a1)
{
  return sub_1A58E88F4(a1);
}

unint64_t sub_1A58E8B80()
{
  unint64_t result;

  result = qword_1EE797EC8;
  if (!qword_1EE797EC8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E02F8, &_s13CapturedValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797EC8);
  }
  return result;
}

unint64_t sub_1A58E8BC8()
{
  unint64_t result;

  result = qword_1EE797EC0;
  if (!qword_1EE797EC0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0320, &_s13CapturedValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797EC0);
  }
  return result;
}

uint64_t sub_1A58E8C0C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B1D0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58E8D68(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7962B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58E8ED0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796258);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8])
      memmove(v12, v13, 80 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[80 * v8] || v12 >= &v13[80 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58E9050(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B370);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58E919C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B1C8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58E92E8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7962D0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7993D0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58E9470(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B138);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58E95CC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 32 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58E9724(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B188);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58E98A4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1A594CC78();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1A57A7230(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1A57A72FC((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1A58EA294((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1A594BA18();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1A594CD38();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1A594CD38()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A58E9F8C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1A58E9F8C((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1A57A72FC((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1A594CD38() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

char *sub_1A58E9F8C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B320);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A58EA084(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -80)
  {
    result = (char *)sub_1A594CA68();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 80;
    if (result != v3 || result >= &v3[80 * v6])
      return (char *)memmove(result, v3, 80 * v6);
  }
  return result;
}

char *sub_1A58EA13C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_1A594CA68();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = (v4 + (v4 < 0 ? 0x1FuLL : 0)) & 0xFFFFFFFFFFFFFFE0;
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1A58EA1E0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -40)
  {
    result = (char *)sub_1A594CA68();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = 40 * (v4 / 40);
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1A58EA294(uint64_t a1)
{
  return sub_1A58E9F8C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A58EA2A8(uint64_t a1)
{
  return sub_1A58E8ED0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A58EA2BC(uint64_t a1)
{
  return sub_1A58E8D68(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A58EA2D0(_QWORD *a1)
{
  return sub_1A58E92E8(0, a1[2], 0, a1);
}

uint64_t sub_1A58EA2E4(uint64_t a1)
{
  return sub_1A58E95CC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A58EA2F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x43676E696E6E7572 && a2 == 0xEF73646E616D6D6FLL || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646E694B656C6469 && a2 == 0xE800000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x69796C7265646E75 && a2 == 0xEA0000000000676ELL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_1A58EA524()
{
  unint64_t result;

  result = qword_1EE798140;
  if (!qword_1EE798140)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0870, &_s13CapturedValueV10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_1EE798140);
  }
  return result;
}

unint64_t sub_1A58EA568()
{
  unint64_t result;

  result = qword_1EE798050;
  if (!qword_1EE798050)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0820, &_s13CapturedValueV10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_1EE798050);
  }
  return result;
}

uint64_t sub_1A58EA5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A58EA5F4()
{
  unint64_t result;

  result = qword_1EE798090;
  if (!qword_1EE798090)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E03B0, &_s13CapturedValueV13AuthenticatedVN);
    atomic_store(result, (unint64_t *)&qword_1EE798090);
  }
  return result;
}

unint64_t sub_1A58EA638()
{
  unint64_t result;

  result = qword_1EE797F10;
  if (!qword_1EE797F10)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E07D0, &_s13CapturedValueV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE797F10);
  }
  return result;
}

unint64_t sub_1A58EA67C()
{
  unint64_t result;

  result = qword_1EE798070;
  if (!qword_1EE798070)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0780, &_s13CapturedValueV13AuthenticatedV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE798070);
  }
  return result;
}

uint64_t sub_1A58EA6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A58EA708(uint64_t a1)
{
  sub_1A58943DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_WORD *)(a1 + 160));
  return a1;
}

uint64_t sub_1A58EA770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnauthenticatedStateWithTasks();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *_s13CapturedValueV13AuthenticatedV10CodingKeysOMa()
{
  return &_s13CapturedValueV13AuthenticatedV10CodingKeysON;
}

uint64_t _s13CapturedValueV10CodingKeysOwst_2(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A58EA810 + 4 * byte_1A59E028A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A58EA844 + 4 * byte_1A59E0285[v4]))();
}

uint64_t sub_1A58EA844(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58EA84C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58EA854);
  return result;
}

uint64_t sub_1A58EA860(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58EA868);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A58EA86C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58EA874(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13CapturedValueV10CodingKeysOMa_0()
{
  return &_s13CapturedValueV10CodingKeysON_0;
}

uint64_t _s13CapturedValueV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A58EA8DC + 4 * byte_1A59E0294[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A58EA910 + 4 * byte_1A59E028F[v4]))();
}

uint64_t sub_1A58EA910(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58EA918(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58EA920);
  return result;
}

uint64_t sub_1A58EA92C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58EA934);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A58EA938(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58EA940(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13CapturedValueV10CodingKeysOMa_1()
{
  return &_s13CapturedValueV10CodingKeysON_1;
}

uint64_t _s13CapturedValueV10CodingKeysOwst_1(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A58EA9A8 + 4 * byte_1A59E029E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A58EA9DC + 4 * byte_1A59E0299[v4]))();
}

uint64_t sub_1A58EA9DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58EA9E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58EA9ECLL);
  return result;
}

uint64_t sub_1A58EA9F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58EAA00);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A58EAA04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58EAA0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13CapturedValueV10CodingKeysOMa_2()
{
  return &_s13CapturedValueV10CodingKeysON_2;
}

unint64_t sub_1A58EAA2C()
{
  unint64_t result;

  result = qword_1EE7AAED8;
  if (!qword_1EE7AAED8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0530, &_s13CapturedValueV10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_1EE7AAED8);
  }
  return result;
}

unint64_t sub_1A58EAA74()
{
  unint64_t result;

  result = qword_1EE7AAEE0;
  if (!qword_1EE7AAEE0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E05E8, &_s13CapturedValueV10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_1EE7AAEE0);
  }
  return result;
}

unint64_t sub_1A58EAABC()
{
  unint64_t result;

  result = qword_1EE7AAEE8;
  if (!qword_1EE7AAEE8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E06A0, &_s13CapturedValueV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE7AAEE8);
  }
  return result;
}

unint64_t sub_1A58EAB04()
{
  unint64_t result;

  result = qword_1EE7AAEF0;
  if (!qword_1EE7AAEF0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0758, &_s13CapturedValueV13AuthenticatedV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7AAEF0);
  }
  return result;
}

unint64_t sub_1A58EAB4C()
{
  unint64_t result;

  result = qword_1EE798088;
  if (!qword_1EE798088)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E06C8, &_s13CapturedValueV13AuthenticatedV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE798088);
  }
  return result;
}

unint64_t sub_1A58EAB94()
{
  unint64_t result;

  result = qword_1EE798080;
  if (!qword_1EE798080)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E06F0, &_s13CapturedValueV13AuthenticatedV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE798080);
  }
  return result;
}

unint64_t sub_1A58EABDC()
{
  unint64_t result;

  result = qword_1EE797F28;
  if (!qword_1EE797F28)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0610, &_s13CapturedValueV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE797F28);
  }
  return result;
}

unint64_t sub_1A58EAC24()
{
  unint64_t result;

  result = qword_1EE797F20;
  if (!qword_1EE797F20)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0638, &_s13CapturedValueV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE797F20);
  }
  return result;
}

unint64_t sub_1A58EAC6C()
{
  unint64_t result;

  result = qword_1EE798068;
  if (!qword_1EE798068)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0558, &_s13CapturedValueV10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_1EE798068);
  }
  return result;
}

unint64_t sub_1A58EACB4()
{
  unint64_t result;

  result = qword_1EE798060;
  if (!qword_1EE798060)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0580, &_s13CapturedValueV10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_1EE798060);
  }
  return result;
}

unint64_t sub_1A58EACFC()
{
  unint64_t result;

  result = qword_1EE798158;
  if (!qword_1EE798158)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E04A0, &_s13CapturedValueV10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_1EE798158);
  }
  return result;
}

unint64_t sub_1A58EAD44()
{
  unint64_t result;

  result = qword_1EE798150;
  if (!qword_1EE798150)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E04C8, &_s13CapturedValueV10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_1EE798150);
  }
  return result;
}

uint64_t sub_1A58EAD88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6775156 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6645601 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A58EAEAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696C696261706163 && a2 == 0xEC00000073656974;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449726576726573 && a2 == 0xE800000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614D64656C696166 && a2 == 0xED0000786F626C69 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A5A136B0 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64657463656C6573 && a2 == 0xEF786F626C69614DLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A58EB120(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x697463656E6E6F63 && a2 == 0xEA0000000000676ELL;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65687475616E75 && a2 == 0xEF64657461636974 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69746E6568747561 && a2 == 0xED00006465746163 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A5A13910 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1A58EB3F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6645601 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1752457584 && a2 == 0xE400000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xE800000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 30574 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void sub_1A58EB5CC()
{
  uint64_t v0;
  _QWORD v1[8];

  sub_1A586A180(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1A58EB61C()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  return 0x2048545541;
}

uint64_t sub_1A58EB720(uint64_t a1, uint64_t a2)
{
  char v3;
  _BYTE v5[72];
  _BYTE v6[72];

  sub_1A586A180(a1, (uint64_t)v5);
  sub_1A586A180(a2, (uint64_t)v6);
  sub_1A58EB768((uint64_t)v5);
  return v3 & 1;
}

void sub_1A58EB768(uint64_t a1)
{
  _QWORD v1[8];

  sub_1A586A180(a1, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1A58EB7B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _QWORD v10[8];
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v12;
  v2 = v13;
  v4 = v14;
  sub_1A586A180(v1, (uint64_t)v10);
  if (v11)
  {
    v8 = 0;
  }
  else
  {
    v5 = v10[2];
    v6 = v10[3];
    v7 = v0 == v10[0] && v3 == v10[1];
    if (v7 || (v8 = 0, (sub_1A594CD38() & 1) != 0))
    {
      if (v2 == v5 && v4 == v6)
        v8 = 1;
      else
        v8 = sub_1A594CD38();
    }
  }
  return v8 & 1;
}

uint64_t initializeWithCopy for Command(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1A5869AD8(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for Command(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1A5869AD8(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  sub_1A58640B0(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for Command(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Command(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A58EBDD4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 64) <= 3u)
    return *(unsigned __int8 *)(a1 + 64);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1A58EBDEC(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_QWORD *)(result + 56) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 64) = a2;
  return result;
}

unint64_t sub_1A58EBE40()
{
  unint64_t result;

  result = qword_1EE798288;
  if (!qword_1EE798288)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0920, &type metadata for TaskID);
    atomic_store(result, (unint64_t *)&qword_1EE798288);
  }
  return result;
}

uint64_t _s15IMAP2Connection6TaskIDV2IDOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A58EBED0 + 4 * byte_1A59E0907[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A58EBF04 + 4 * byte_1A59E0902[v4]))();
}

uint64_t sub_1A58EBF04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58EBF0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A58EBF14);
  return result;
}

uint64_t sub_1A58EBF20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A58EBF28);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A58EBF2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A58EBF34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TaskID.ID()
{
  return &type metadata for TaskID.ID;
}

unint64_t sub_1A58EBF54()
{
  unint64_t result;

  result = qword_1EE7AAF00;
  if (!qword_1EE7AAF00)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E09F4, &type metadata for TaskID.ID);
    atomic_store(result, (unint64_t *)&qword_1EE7AAF00);
  }
  return result;
}

_QWORD *Timer.__allocating_init(queue:)(uint64_t a1)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = 0;
  result[3] = 0;
  result[4] = 0;
  result[5] = a1;
  return result;
}

_QWORD *Timer.init(queue:)(uint64_t a1)
{
  _QWORD *v1;

  v1[2] = 0;
  v1[3] = 0;
  v1[4] = 0;
  v1[5] = a1;
  return v1;
}

uint64_t Timer.deinit()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    swift_retain();
    sub_1A594AEC0();
    swift_release();
  }
  if (*(_QWORD *)(v0 + 24))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A594C114();
    swift_unknownObjectRelease();
  }
  swift_release();
  swift_unknownObjectRelease();

  return v0;
}

uint64_t Timer.__deallocating_deinit()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    swift_retain();
    sub_1A594AEC0();
    swift_release();
  }
  if (*(_QWORD *)(v0 + 24))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A594C114();
    swift_unknownObjectRelease();
  }
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t Timer.cancelPreviousAndAsync(after:closure:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v5 = sub_1A594AD10();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1A594AE84();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v18 - v14;
  sub_1A594AE6C();
  sub_1A594AE78();
  v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v12, v9);
  *v8 = 100;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF490], v5);
  Timer.cancelPreviousAndAsync(at:leeway:closure:)((uint64_t)v15, (uint64_t)v8, a2, a3);
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  return ((uint64_t (*)(char *, uint64_t))v16)(v15, v9);
}

uint64_t Timer.cancelPreviousAndAsync(at:leeway:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  char v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[6];

  v5 = v4;
  v32 = a3;
  v33 = a4;
  v39 = a2;
  v37 = a1;
  v40 = sub_1A594AD10();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v36 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594C0CC();
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A594AD34();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1A594AD70();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1A594AED8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (uint64_t *)((char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (void *)v5[5];
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v13 + 104))(v16, *MEMORY[0x1E0DEF740], v12, v14);
  v18 = v17;
  v19 = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v16, v12);
  if ((v19 & 1) != 0)
  {
    Timer.cancel()();
    v21 = v5[4];
    sub_1A594AD64();
    v22 = swift_allocObject();
    swift_weakInit();
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v22;
    v23[3] = v21;
    v24 = v33;
    v23[4] = v32;
    v23[5] = v24;
    aBlock[4] = sub_1A58EC8D4;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A587D408;
    aBlock[3] = &block_descriptor_30;
    _Block_copy(aBlock);
    v41 = MEMORY[0x1E0DEE9D8];
    sub_1A55E1698((unint64_t *)&unk_1EE7A19D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A08);
    v33 = v18;
    sub_1A5524F80((unint64_t *)&qword_1EE7A40D0, (uint64_t *)&unk_1EE7A1A08);
    sub_1A594C5C4();
    sub_1A594AECC();
    swift_allocObject();
    v25 = sub_1A594AEA8();
    swift_release();
    swift_release();
    sub_1A58EC8F8();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1A55E1698(&qword_1EE79A130, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938], MEMORY[0x1E0DEF948]);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795FE8);
    sub_1A5524F80(&qword_1EE799B80, &qword_1EE795FE8);
    v26 = v35;
    sub_1A594C5C4();
    v27 = sub_1A594C0D8();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v26);
    ObjectType = swift_getObjectType();
    sub_1A594C0F0();
    v29 = v38;
    v30 = v36;
    v31 = v40;
    (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v36, *MEMORY[0x1E0DEF498], v40);
    MEMORY[0x1A85AE700](v37, v30, v39, ObjectType);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
    sub_1A594C120();
    v5[2] = v25;
    swift_release();
    v5[3] = v27;
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A58EC698(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v6;
  uint64_t Strong;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = *(_QWORD *)(result + 32);
    result = swift_release();
    if (v6 == a2)
    {
      swift_beginAccess();
      Strong = swift_weakLoadStrong();
      if (Strong)
      {
        *(_QWORD *)(Strong + 16) = 0;
        swift_release();
        Strong = swift_release();
      }
      return a3(Strong);
    }
  }
  return result;
}

Swift::Void __swiftcall Timer.cancel()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  _BOOL4 v9;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1A594AED8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (void *)v1[5];
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x1E0DEF740], v2, v4);
  v8 = v7;
  LOBYTE(v7) = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) != 0)
  {
    if (v1[2])
    {
      swift_retain();
      sub_1A594AEC0();
      swift_release();
      v9 = 1;
    }
    else
    {
      v9 = v1[3] != 0;
    }
    v1[2] = 0;
    swift_release();
    if (v1[3])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1A594C114();
      swift_unknownObjectRelease();
    }
    v1[3] = 0;
    swift_unknownObjectRelease();
    if (v9)
      ++v1[4];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1A58EC884()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A58EC8A8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A58EC8D4()
{
  uint64_t v0;

  return sub_1A58EC698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

unint64_t sub_1A58EC8F8()
{
  unint64_t result;

  result = qword_1EE7A4148;
  if (!qword_1EE7A4148)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE7A4148);
  }
  return result;
}

uint64_t type metadata accessor for Timer()
{
  return objc_opt_self();
}

void sub_1A58EC954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v1);
  sub_1A58ECAA8(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1A58EC9E8 + 4 * byte_1A59E0A50[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A58EC9E8()
{
  uint64_t v0;

  sub_1A58ECAEC(v0);
  return 0;
}

uint64_t sub_1A58ECAA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConnectionState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A58ECAEC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ConnectionState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A58ECB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v5 = v4;
  v10 = sub_1A594AD34();
  v21 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A594AD70();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE7A04C8 != -1)
    swift_once();
  v20[1] = qword_1EE7A04C0;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v5;
  v17[3] = a1;
  v17[4] = a2;
  v17[5] = a3;
  v17[6] = a4;
  aBlock[4] = sub_1A58EF938;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A587D408;
  aBlock[3] = &block_descriptor_9_3;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1A594AD4C();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1A55E1698((unint64_t *)&unk_1EE7A19D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A08);
  sub_1A5524F80((unint64_t *)&qword_1EE7A40D0, (uint64_t *)&unk_1EE7A1A08);
  sub_1A594C5C4();
  MEMORY[0x1A85AE508](0, v16, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return swift_release();
}

uint64_t sub_1A58ECD6C(uint64_t a1, uint64_t a2, uint64_t a3, void *aBlock)
{
  void (*v6)(uint64_t, uint64_t, uint64_t (*)(char), uint64_t);
  void *v7;
  uint64_t v8;

  v6 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(char), uint64_t))(a1 + 32);
  v7 = _Block_copy(aBlock);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v6(a2, a3, sub_1A58EF8E4, v8);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1A58ECE14(uint64_t a1, NSObject *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  int negotiated_tls_protocol_version;
  int negotiated_tls_ciphersuite;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  SecTrustRef v14;

  swift_unknownObjectRetain();
  negotiated_tls_protocol_version = sec_protocol_metadata_get_negotiated_tls_protocol_version(a2);
  negotiated_tls_ciphersuite = sec_protocol_metadata_get_negotiated_tls_ciphersuite(a2);
  if (sec_protocol_metadata_get_server_name(a2))
  {
    v11 = sub_1A594B610();
    v13 = v12;
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    v11 = 0;
    v13 = 0;
  }
  v14 = sec_trust_copy_ref(a3);
  sub_1A58ECEE8(negotiated_tls_protocol_version | (negotiated_tls_ciphersuite << 16), v11, v13, v14, a4, a5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A58ECEE8(unsigned int a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  uint64_t result;
  __int16 v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __SecTrust *v31;
  _BYTE v32[4];
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a5;
  v37 = a2;
  v38 = a3;
  v36 = a1;
  v9 = _s6LoggerVMa_0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_1A594AED8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = &v32[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EE7A04C8 != -1)
    swift_once();
  v17 = qword_1EE7A04C0;
  *v16 = qword_1EE7A04C0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v18 = (id)v17;
  LOBYTE(v17) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    v20 = v36;
    v33 = HIWORD(v36);
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = v6;
    v21[3] = a4;
    v21[4] = v35;
    v21[5] = a6;
    v22 = (uint64_t)v6 + qword_1EE7F9938;
    v23 = *v6;
    v34 = a6;
    v24 = *(_QWORD *)(v23 + 136);
    v35 = (uint64_t)v6 + qword_1EE7F9948;
    v25 = *((_BYTE *)v6 + qword_1EE7F9940);
    sub_1A55034B8((uint64_t)v6 + qword_1EE7F9938, (uint64_t)&v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v26 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = sub_1A58EF97C;
    *(_QWORD *)(v27 + 24) = v21;
    *(_BYTE *)(v27 + 32) = v25;
    *(_WORD *)(v27 + 40) = v20;
    *(_WORD *)(v27 + 42) = v33;
    v28 = v27 + v26;
    v29 = v38;
    *(_QWORD *)(v27 + 48) = v37;
    *(_QWORD *)(v27 + 56) = v29;
    sub_1A587C06C((uint64_t)v12, v28);
    v30 = *(_QWORD *)((char *)v6 + v24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v31 = a4;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A58EDEE4(v25, v35, v31, v22, (uint64_t (*)(uint64_t))sub_1A58EFA28, (uint64_t (*)(uint64_t))v27, v30);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A58ED158(void *a1, char a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;

  v9 = sub_1A594AED8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EE7A04C8 != -1)
    swift_once();
  v13 = qword_1EE7A04C0;
  *v12 = qword_1EE7A04C0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  v14 = (id)v13;
  LOBYTE(v13) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    if (a2)
    {
      if (a2 == 1)
      {
        v16 = 0;
      }
      else
      {
        v16 = sub_1A587C218(*(_QWORD *)(v4 + qword_1EE7F9930), *(_QWORD *)(v4 + qword_1EE7F9930 + 8), v4 + qword_1EE7F9938);
        if (v16)
        {
          sub_1A58ED398(a1, v16, v23, (void (*)(_QWORD))a3, a4);
          return swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      if (*(_BYTE *)(v4 + qword_1EE7F9940) == 2)
      {
        v17 = sub_1A587C218(*(_QWORD *)(v4 + qword_1EE7F9930), *(_QWORD *)(v4 + qword_1EE7F9930 + 8), v4 + qword_1EE7F9938);
        if (v17)
        {
          v18 = *(void **)(v17 + 16);
          v19 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
          v20 = v18;
          v21 = objc_msgSend(v19, sel_initWithBool_, 1);
          v22 = (void *)sub_1A594B3F4();
          objc_msgSend(v20, sel_setAccountProperty_forKey_, v21, v22);
          swift_unknownObjectRelease();

        }
      }
      v16 = 1;
    }
    return a3(v16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A58ED398(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  uint64_t result;
  id v26;
  void *v27;
  void *v28;
  unsigned __int8 v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  unsigned __int8 v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  void *v56;
  void *v57;
  unsigned __int8 v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  id v64;
  char v65;
  void *v66;
  void *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  void (*v82)(_QWORD);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v83 = a5;
  v82 = a4;
  v79 = a3;
  v80 = a1;
  v85 = a2;
  v81 = _s6LoggerVMa_0();
  v5 = *(_QWORD *)(v81 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v81);
  v78 = (uint64_t)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v76 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v76 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v76 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v76 - v17;
  v19 = sub_1A594AED8();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (uint64_t *)((char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EE7A04C8 != -1)
    swift_once();
  v23 = qword_1EE7A04C0;
  *v22 = qword_1EE7A04C0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v20 + 104))(v22, *MEMORY[0x1E0DEF740], v19);
  v24 = (id)v23;
  LOBYTE(v23) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) != 0)
  {
    sub_1A55034B8(v84 + qword_1EE7F9938, (uint64_t)v18, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v26 = *(id *)(v85 + 16);
    v27 = (void *)sub_1A58EE5B8();
    if (v27)
    {
      v28 = v27;
      v29 = objc_msgSend(v27, sel_BOOLValue);

      if ((v29 & 1) != 0)
      {
        sub_1A55034B8((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v30 = sub_1A594A74C();
        v31 = sub_1A594C018();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = swift_slowAlloc();
          v33 = swift_slowAlloc();
          v87 = v33;
          *(_DWORD *)v32 = 68158210;
          LODWORD(v86) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v32 + 8) = 256;
          v34 = &v15[*(int *)(v81 + 20)];
          LOBYTE(v86) = *v34;
          sub_1A594C3CC();
          *(_WORD *)(v32 + 11) = 2082;
          v35 = ConnectionID.debugDescription.getter(*((unsigned int *)v34 + 1));
          v86 = sub_1A589167C(v35, v36, &v87);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC((uint64_t)v15, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          _os_log_impl(&dword_1A4F90000, v30, v31, "[%.*hhx-%{public}s] Another certificate has already been trusted. Failing on certificate change.", (uint8_t *)v32, 0x15u);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v33, -1, -1);
          MEMORY[0x1A85B1964](v32, -1, -1);
        }
        else
        {
          sub_1A55034FC((uint64_t)v15, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        }

LABEL_23:
        v82(0);
        return sub_1A55034FC((uint64_t)v18, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      }
    }
    else
    {

    }
    v77 = v5;
    v37 = v85;
    v38 = *(id *)(v85 + 16);
    v39 = (void *)sub_1A58EE5B8();
    if (v39)
    {
      v40 = v39;
      v41 = objc_msgSend(v39, sel_BOOLValue);

      if ((v41 & 1) == 0)
      {
        sub_1A55034B8((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v42 = sub_1A594A74C();
        v43 = sub_1A594C018();
        if (os_log_type_enabled(v42, v43))
        {
          v44 = swift_slowAlloc();
          v45 = swift_slowAlloc();
          v87 = v45;
          *(_DWORD *)v44 = 68158210;
          LODWORD(v86) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v44 + 8) = 256;
          v46 = &v12[*(int *)(v81 + 20)];
          LOBYTE(v86) = *v46;
          sub_1A594C3CC();
          *(_WORD *)(v44 + 11) = 2082;
          v47 = ConnectionID.debugDescription.getter(*((unsigned int *)v46 + 1));
          v86 = sub_1A589167C(v47, v48, &v87);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC((uint64_t)v12, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          _os_log_impl(&dword_1A4F90000, v42, v43, "[%.*hhx-%{public}s] User (previously) denied untrusted certificate(s).", (uint8_t *)v44, 0x15u);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v45, -1, -1);
          MEMORY[0x1A85B1964](v44, -1, -1);
        }
        else
        {
          sub_1A55034FC((uint64_t)v12, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        }

        goto LABEL_23;
      }
    }
    else
    {

    }
    sub_1A55034B8((uint64_t)v18, (uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_unknownObjectRetain_n();
    v49 = sub_1A594A74C();
    v50 = sub_1A594C030();
    if (!os_log_type_enabled(v49, v50))
    {
      swift_unknownObjectRelease();
      sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

      swift_unknownObjectRelease();
LABEL_27:
      v61 = sub_1A589A7B8();
      v63 = v62;
      v64 = *(id *)(v37 + 16);
      v65 = 1;
      v66 = (void *)sub_1A58EE5B8();
      v84 = v61;
      if (v66)
      {
        v67 = v66;
        v65 = objc_msgSend(v66, sel_BOOLValue);

        v64 = v67;
      }

      v68 = v78;
      sub_1A55034B8((uint64_t)v18, v78, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      v69 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      v70 = (v6 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
      v71 = swift_allocObject();
      sub_1A587C06C(v68, v71 + v69);
      v72 = (_QWORD *)(v71 + v70);
      v73 = v79;
      *v72 = v85;
      v72[1] = v73;
      v74 = (_QWORD *)(v71 + ((v70 + 23) & 0xFFFFFFFFFFFFFFF8));
      v75 = v83;
      *v74 = v82;
      v74[1] = v75;
      swift_unknownObjectRetain();
      swift_retain();
      sub_1A58EDC7C(v84, v63, v80, v65, (uint64_t)sub_1A58EFD8C, v71);
      swift_release();
      swift_bridgeObjectRelease();
      return sub_1A55034FC((uint64_t)v18, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    }
    v51 = swift_slowAlloc();
    v76 = swift_slowAlloc();
    v87 = v76;
    *(_DWORD *)v51 = 68158466;
    LODWORD(v86) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v51 + 8) = 256;
    v52 = &v9[*(int *)(v81 + 20)];
    LOBYTE(v86) = *v52;
    sub_1A594C3CC();
    *(_WORD *)(v51 + 11) = 2082;
    v53 = ConnectionID.debugDescription.getter(*((unsigned int *)v52 + 1));
    v86 = sub_1A589167C(v53, v54, &v87);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    *(_WORD *)(v51 + 21) = 1024;
    v55 = *(id *)(v37 + 16);
    v56 = (void *)sub_1A58EE5B8();
    if (v56)
    {
      v57 = v56;
      v58 = objc_msgSend(v56, sel_BOOLValue);
      swift_unknownObjectRelease();

      if ((v58 & 1) == 0)
      {
        v59 = 0;
LABEL_26:
        v60 = v76;
        LODWORD(v86) = v59;
        sub_1A594C3CC();
        v37 = v85;
        swift_unknownObjectRelease();
        _os_log_impl(&dword_1A4F90000, v49, v50, "[%.*hhx-%{public}s] [Prompt] Prompting user about untrusted certificate(s) (allowTrust: %{BOOL}d).", (uint8_t *)v51, 0x1Bu);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v60, -1, -1);
        MEMORY[0x1A85B1964](v51, -1, -1);

        goto LABEL_27;
      }
    }
    else
    {
      swift_unknownObjectRelease();

    }
    v59 = 1;
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A58EDC7C(uint64_t a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t inited;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  id v18;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB058);
  if ((a4 & 1) != 0)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
    sub_1A594C6B4();
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, 0);
    *(_QWORD *)(inited + 96) = sub_1A57EEA04(0, (unint64_t *)&unk_1EE79A5F0);
    *(_QWORD *)(inited + 72) = v12;
  }
  else
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A59ABD40;
    sub_1A594C6B4();
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, 0);
    v14 = sub_1A57EEA04(0, (unint64_t *)&unk_1EE79A5F0);
    *(_QWORD *)(inited + 96) = v14;
    *(_QWORD *)(inited + 72) = v13;
    sub_1A594C6B4();
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, 0);
    *(_QWORD *)(inited + 168) = v14;
    *(_QWORD *)(inited + 144) = v15;
  }
  v16 = sub_1A58EEC98(inited);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a5;
  *(_QWORD *)(v17 + 24) = a6;
  v18 = a3;
  swift_retain();
  CertUITrustManager.showPrompt(hostname:service:trust:options:_:)(a1, a2, 0xD000000000000016, (void *)0x80000001A5A14B80, (uint64_t)a3, v16, (uint64_t)sub_1A58EFDF0, v17);

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1A58EDEE4(unsigned __int8 a1, uint64_t a2, __SecTrust *a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t), uint64_t a7)
{
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  void *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  SecTrustRef v48;
  uint64_t (**v49)(uint64_t);
  uint64_t (*v50)(uint64_t);
  void *v51;
  __SecTrust *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  SecTrustRef v69;
  uint64_t (*v70)(uint64_t);
  uint64_t (*v71)(uint64_t);
  uint64_t v72;
  uint64_t aBlock;
  uint64_t v74;
  void *v75;
  void *v76;
  void *v77;
  uint64_t v78;

  v59 = a2;
  v60 = a7;
  v69 = a3;
  v70 = a5;
  v68 = a4;
  v8 = a1;
  v67 = sub_1A594A764();
  v58 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v57 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A594AD34();
  v64 = *(_QWORD *)(v10 - 8);
  v65 = v10;
  MEMORY[0x1E0C80A78](v10);
  v63 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A594AD70();
  v61 = *(_QWORD *)(v12 - 8);
  v62 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = _s6LoggerVMa_0();
  v15 = *(_QWORD *)(v56 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v56);
  v66 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v56 - v18;
  v20 = sub_1A594A8D8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = a6;
  if (v8 >= 2)
  {
    v67 = (uint64_t)v14;
    if (qword_1EE7A04C8 != -1)
      swift_once();
    v66 = (char *)qword_1EE7A04C0;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v59, v20);
    sub_1A55034B8(v68, (uint64_t)v19, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v44 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v45 = (v22 + *(unsigned __int8 *)(v15 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v46 = (v16 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    v47 = swift_allocObject();
    v48 = v69;
    *(_QWORD *)(v47 + 16) = v60;
    *(_QWORD *)(v47 + 24) = v48;
    (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v47 + v44, v23, v20);
    sub_1A587C06C((uint64_t)v19, v47 + v45);
    v49 = (uint64_t (**)(uint64_t))(v47 + v46);
    v50 = v71;
    *v49 = v70;
    v49[1] = v50;
    v77 = sub_1A58EFB54;
    v78 = v47;
    aBlock = MEMORY[0x1E0C809B0];
    v74 = 1107296256;
    v75 = sub_1A587D408;
    v76 = &block_descriptor_21;
    v51 = _Block_copy(&aBlock);
    swift_retain();
    v52 = v48;
    swift_retain();
    v53 = v67;
    sub_1A594AD4C();
    v72 = MEMORY[0x1E0DEE9D8];
    sub_1A55E1698((unint64_t *)&unk_1EE7A19D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A08);
    sub_1A5524F80((unint64_t *)&qword_1EE7A40D0, (uint64_t *)&unk_1EE7A1A08);
    v54 = v63;
    v55 = v65;
    sub_1A594C5C4();
    MEMORY[0x1A85AE508](0, v53, v54, v51);
    _Block_release(v51);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v54, v55);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v53, v62);
    return swift_release();
  }
  else
  {
    if (qword_1EE7A04C8 != -1)
      swift_once();
    v24 = qword_1EE7A04C0;
    v25 = v68;
    sub_1A55034B8(v68, (uint64_t)v19, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v26 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v27 = swift_allocObject();
    v29 = v70;
    v28 = v71;
    *(_QWORD *)(v27 + 16) = v70;
    *(_QWORD *)(v27 + 24) = v28;
    sub_1A587C06C((uint64_t)v19, v27 + v26);
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = sub_1A58EFC48;
    *(_QWORD *)(v30 + 24) = v27;
    v77 = sub_1A58EFCBC;
    v78 = v30;
    aBlock = MEMORY[0x1E0C809B0];
    v74 = 1107296256;
    v75 = sub_1A58EE6C8;
    v76 = &block_descriptor_30_0;
    v31 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    LODWORD(v24) = SecTrustEvaluateAsyncWithError(v69, v24, v31);
    _Block_release(v31);
    swift_release();
    result = swift_release();
    v33 = (uint64_t)v66;
    v34 = v67;
    if ((_DWORD)v24)
    {
      v35 = v58;
      v36 = v57;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v25, v67);
      sub_1A55034B8(v25, v33, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v37 = sub_1A594A74C();
      v38 = sub_1A594C018();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc();
        v40 = swift_slowAlloc();
        aBlock = v40;
        *(_DWORD *)v39 = 68158210;
        LODWORD(v72) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v39 + 8) = 256;
        v41 = v33 + *(int *)(v56 + 20);
        LOBYTE(v72) = *(_BYTE *)v41;
        sub_1A594C3CC();
        *(_WORD *)(v39 + 11) = 2082;
        v42 = ConnectionID.debugDescription.getter(*(unsigned int *)(v41 + 4));
        v72 = sub_1A589167C(v42, v43, &aBlock);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v33, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        _os_log_impl(&dword_1A4F90000, v37, v38, "[%.*hhx-%{public}s] SecTrustEvaluateAsyncWithError() failed.", (uint8_t *)v39, 0x15u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v40, -1, -1);
        MEMORY[0x1A85B1964](v39, -1, -1);

        (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v34);
      }
      else
      {
        sub_1A55034FC(v33, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

        (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
      }
      return v29(5);
    }
  }
  return result;
}

uint64_t sub_1A58EE5B8()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _OWORD v6[2];

  v1 = (void *)sub_1A594B3F4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_accountPropertyForKey_, v1);

  if (v2
    && (sub_1A594C534(),
        swift_unknownObjectRelease(),
        sub_1A578B7E0(v5, v6),
        sub_1A578B7E0(v6, v5),
        sub_1A57EEA04(0, (unint64_t *)&unk_1EE79A5F0),
        (swift_dynamicCast() & 1) != 0))
  {
    return v4;
  }
  else
  {
    return 0;
  }
}

void sub_1A58EE6C8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  swift_retain();
  v9 = a2;
  v8 = a4;
  v7(v9, a3, a4);
  swift_release();

}

uint64_t sub_1A58EE744(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  void (*v22)(char *, uint64_t, uint64_t);
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(unint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a6;
  v45 = a5;
  v42 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v42);
  v41 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v41 - v10;
  v46 = sub_1A594A764();
  v12 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v41 - v16;
  v18 = a2;
  v19 = sub_1A589A7B8();
  v21 = CertUITrustManager.rawTrustResult(forSSLTrust:hostname:service:)((uint64_t)a2, v19, v20, 0xD000000000000016, (void *)0x80000001A5A14B80);

  swift_bridgeObjectRelease();
  v43 = v12;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  if (v21 == 1)
  {
    v22(v17, a4, v46);
    sub_1A55034B8(a4, (uint64_t)v11, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v23 = sub_1A594A74C();
    v24 = sub_1A594C000();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v48 = v26;
      *(_DWORD *)v25 = 68158466;
      LODWORD(v47) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v25 + 8) = 256;
      v27 = &v11[*(int *)(v42 + 20)];
      LOBYTE(v47) = *v27;
      sub_1A594C3CC();
      *(_WORD *)(v25 + 11) = 2082;
      v28 = ConnectionID.debugDescription.getter(*((unsigned int *)v27 + 1));
      v47 = sub_1A589167C(v28, v29, &v48);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      *(_WORD *)(v25 + 21) = 1024;
      LODWORD(v47) = 1;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v23, v24, "[%.*hhx-%{public}s] Got %u from CertUI.", (uint8_t *)v25, 0x1Bu);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v26, -1, -1);
      MEMORY[0x1A85B1964](v25, -1, -1);
    }
    else
    {
      sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    }

    (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v46);
    v39 = 0;
  }
  else
  {
    v30 = v14;
    v22(v14, a4, v46);
    v31 = v41;
    sub_1A55034B8(a4, v41, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v32 = sub_1A594A74C();
    v33 = sub_1A594C030();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v48 = v35;
      *(_DWORD *)v34 = 68158466;
      LODWORD(v47) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v34 + 8) = 256;
      v36 = v31 + *(int *)(v42 + 20);
      LOBYTE(v47) = *(_BYTE *)v36;
      sub_1A594C3CC();
      *(_WORD *)(v34 + 11) = 2082;
      v37 = ConnectionID.debugDescription.getter(*(unsigned int *)(v36 + 4));
      v47 = sub_1A589167C(v37, v38, &v48);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v31, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      *(_WORD *)(v34 + 21) = 1024;
      LODWORD(v47) = v21;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v32, v33, "[%.*hhx-%{public}s] Got %u from CertUI.", (uint8_t *)v34, 0x1Bu);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v35, -1, -1);
      MEMORY[0x1A85B1964](v34, -1, -1);
    }
    else
    {
      sub_1A55034FC(v31, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    }

    (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v46);
    if (v21 >= 8)
      v39 = 5;
    else
      v39 = 0x504030201050505uLL >> (8 * v21);
  }
  return v45(v39);
}

unint64_t sub_1A58EEC98(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B838);
  v2 = sub_1A594CA5C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A58EFDF8(v6, (uint64_t)v15);
    result = sub_1A58EF0D4((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1A578B7E0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A58EEDC4(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  NSObject *v4;
  void *v5;
  _QWORD v7[6];

  sub_1A594AB54();
  swift_allocObject();
  v2 = sub_1A594AB48();
  v3 = sub_1A594AB3C();
  sec_protocol_options_add_tls_application_protocol(v3, "imap");
  swift_unknownObjectRelease();
  v4 = sub_1A594AB3C();
  v7[4] = sub_1A58EF8F8;
  v7[5] = a1;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_1A58ECD6C;
  v7[3] = &block_descriptor_3_1;
  v5 = _Block_copy(v7);
  swift_retain();
  swift_release();
  if (qword_1EE7A04C8 != -1)
    swift_once();
  sec_protocol_options_set_verify_block(v4, v5, (dispatch_queue_t)qword_1EE7A04C0);
  _Block_release(v5);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1A58EEEE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return a3(1);
}

uint64_t sub_1A58EEF08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1A594C078();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A594C048();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1A594AD70();
  MEMORY[0x1E0C80A78](v6);
  sub_1A57EEA04(0, (unint64_t *)&qword_1EE7A4768);
  sub_1A594AD4C();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1A55E1698(qword_1EE7A4880, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A4810);
  sub_1A5524F80((unint64_t *)&qword_1EE7A4850, (uint64_t *)&unk_1EE7A4810);
  sub_1A594C5C4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1A594C0A8();
  qword_1EE7AAF70 = result;
  return result;
}

unint64_t sub_1A58EF0D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A594C690();
  return sub_1A58EF104(a1, v2);
}

unint64_t sub_1A58EF104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1A58EFE40(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1A85AEB14](v9, a1);
      sub_1A58EFE7C((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

void sub_1A58EF1C8(char a1, void *a2, void (*a3)(uint64_t, __n128), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  os_log_t v33;
  uint64_t v34;
  os_log_t v35;
  _QWORD *v36;
  int v37;
  uint64_t v38;
  id v39;
  void (*v40)(uint64_t, __n128);
  uint64_t v41;
  uint64_t v42;

  v9 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A594A764();
  v13 = *(_QWORD *)(v12 - 8);
  v14.n128_f64[0] = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v17 = 0;
LABEL_7:
    a3(v17, v14);
    return;
  }
  if (!a2)
  {
    v17 = 1;
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v16, a5, v12, v14.n128_f64[0]);
  sub_1A55034B8(a5, (uint64_t)v11, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  v18 = a2;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v19 = v18;
  v20 = sub_1A594A74C();
  v21 = sub_1A594C018();
  v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    v23 = swift_slowAlloc();
    v37 = v22;
    v24 = v23;
    v36 = (_QWORD *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v42 = v38;
    *(_DWORD *)v24 = 68158466;
    LODWORD(v41) = 2;
    v39 = v19;
    sub_1A594C3CC();
    *(_WORD *)(v24 + 8) = 256;
    v25 = *(int *)(v9 + 20);
    v35 = v20;
    v26 = &v11[v25];
    LOBYTE(v41) = v11[v25];
    sub_1A594C3CC();
    *(_WORD *)(v24 + 11) = 2082;
    v40 = a3;
    v27 = ConnectionID.debugDescription.getter(*((unsigned int *)v26 + 1));
    v41 = sub_1A589167C(v27, v28, &v42);
    v19 = v39;
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    *(_WORD *)(v24 + 21) = 2112;
    type metadata accessor for CFError(0);
    sub_1A55E1698((unint64_t *)&unk_1EE7AB048, (uint64_t (*)(uint64_t))type metadata accessor for CFError, MEMORY[0x1E0CB1C60]);
    swift_allocError();
    *v29 = v19;
    v30 = v19;
    v31 = _swift_stdlib_bridgeErrorToNSError();
    v41 = v31;
    sub_1A594C3CC();
    v32 = v36;
    *v36 = v31;

    a3 = v40;
    v33 = v35;
    _os_log_impl(&dword_1A4F90000, v35, (os_log_type_t)v37, "[%.*hhx-%{public}s] SecTrustEvaluateAsyncWithError() completed with error: %@", (uint8_t *)v24, 0x1Fu);
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A50);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v32, -1, -1);
    v34 = v38;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v34, -1, -1);
    MEMORY[0x1A85B1964](v24, -1, -1);

  }
  else
  {
    sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  ((void (*)(uint64_t))a3)(1);

}

uint64_t sub_1A58EF56C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;

  v6 = sub_1A594A8D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ConnectionConfiguration(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034B8(a1, (uint64_t)v15, v16);
  sub_1A55034B8(a3, (uint64_t)v12, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v15, v6);
  v17 = &v15[*(int *)(v13 + 36)];
  v19 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v17 + 1);
  v20 = qword_1EE7A04B0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v20 != -1)
    swift_once();
  v21 = qword_1EE7A04A8;
  swift_retain();
  sub_1A55034FC((uint64_t)v15, type metadata accessor for ConnectionConfiguration);
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A0568);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + *(_QWORD *)(*(_QWORD *)v22 + 136)) = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v22 + qword_1EE7F9948, v9, v6);
  v23 = (_QWORD *)(v22 + qword_1EE7F9930);
  *v23 = v19;
  v23[1] = v18;
  *(_BYTE *)(v22 + qword_1EE7F9940) = a2;
  sub_1A587C06C((uint64_t)v12, v22 + qword_1EE7F9938);
  v24 = sub_1A58EEDC4(v22);
  swift_release();
  return v24;
}

uint64_t sub_1A58EF790()
{
  uint64_t v0;
  NSObject *v1;
  NSObject *v2;
  NSObject *v3;
  void *v4;
  _QWORD v6[6];

  sub_1A594AB54();
  swift_allocObject();
  v0 = sub_1A594AB48();
  v1 = sub_1A594AB3C();
  sec_protocol_options_add_tls_application_protocol(v1, "imap");
  swift_unknownObjectRelease();
  v2 = sub_1A594AB3C();
  sec_protocol_options_set_min_tls_protocol_version(v2, tls_protocol_version_TLSv10);
  swift_unknownObjectRelease();
  v3 = sub_1A594AB3C();
  v6[4] = sub_1A58EEEE4;
  v6[5] = 0;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1A58ECD6C;
  v6[3] = &block_descriptor_31;
  v4 = _Block_copy(v6);
  if (qword_1EE7AAA10 != -1)
    swift_once();
  sec_protocol_options_set_verify_block(v3, v4, (dispatch_queue_t)qword_1EE7AAF70);
  _Block_release(v4);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t sub_1A58EF8C0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A58EF8E4(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_1A58EF8FC()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A58EF938()
{
  uint64_t v0;

  return sub_1A58ECE14(*(_QWORD *)(v0 + 16), *(NSObject **)(v0 + 24), *(NSObject **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1A58EF948()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A58EF97C(char a1)
{
  uint64_t v1;

  return sub_1A58ED158(*(void **)(v1 + 24), a1, *(uint64_t (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1A58EF9A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s6LoggerVMa_0() - 8) + 80);
  v2 = (v1 + 64) & ~v1;
  swift_release();
  swift_bridgeObjectRelease();
  v3 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1A58EFA28(int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(_s6LoggerVMa_0() - 8) + 80);
  return sub_1A587B6D4(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_DWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), v1 + ((v3 + 64) & ~v3));
}

uint64_t sub_1A58EFA74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = sub_1A594A8D8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s6LoggerVMa_0() - 8) + 80);
  v6 = (v3 + v4 + v5) & ~v5;
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = sub_1A594A764();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v6, v7);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A58EFB54()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_1A594A8D8() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(_s6LoggerVMa_0() - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1A58EE744(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), v0 + v2, v0 + v5, *(uint64_t (**)(unint64_t))v6, *(_QWORD *)(v6 + 8));
}

uint64_t sub_1A58EFBD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s6LoggerVMa_0() - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  swift_release();
  v3 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

void sub_1A58EFC48(uint64_t a1, char a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(_s6LoggerVMa_0() - 8) + 80);
  sub_1A58EF1C8(a2, a3, *(void (**)(uint64_t, __n128))(v3 + 16), *(_QWORD *)(v3 + 24), v3 + ((v6 + 32) & ~v6));
}

uint64_t sub_1A58EFC98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A58EFCBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1A58EFCEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s6LoggerVMa_0() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A58EFD8C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(_s6LoggerVMa_0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A587AF90(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(uint64_t (**)(uint64_t))(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1A58EFDF0(int a1)
{
  uint64_t v1;

  return sub_1A587C114(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1A58EFDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE796150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A58EFE40(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1A58EFE7C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

char *sub_1A58EFED4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, _QWORD, uint64_t, int *);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v9 = *(int *)(type metadata accessor for Authenticator() + 28);
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = (int *)type metadata accessor for AuthenticationTask();
        v13 = *((_QWORD *)v12 - 1);
        v14 = *(unsigned int (**)(char *, uint64_t, int *))(v13 + 48);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v14(v11, 1, v12))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          v44 = *(_OWORD *)(v11 + 24);
          *(_OWORD *)(v10 + 24) = v44;
          (**(void (***)(char *, char *))(v44 - 8))(v10, v11);
          v45 = *((_QWORD *)v11 + 5);
          v46 = *((_QWORD *)v11 + 6);
          sub_1A585C524(v45, v46);
          *((_QWORD *)v10 + 5) = v45;
          *((_QWORD *)v10 + 6) = v46;
          v47 = v12[5];
          v48 = &v10[v47];
          v49 = &v11[v47];
          v50 = sub_1A594A764();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
          v51 = _s6LoggerVMa_0();
          *(_QWORD *)&v48[*(int *)(v51 + 20)] = *(_QWORD *)&v49[*(int *)(v51 + 20)];
          v10[v12[6]] = v11[v12[6]];
          *(_QWORD *)&v10[v12[7]] = *(_QWORD *)&v11[v12[7]];
          v10[v12[8]] = v11[v12[8]];
          v52 = *(void (**)(char *, _QWORD, uint64_t, int *))(v13 + 56);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v52(v10, 0, 1, v12);
        }
        goto LABEL_14;
      case 4u:
      case 5u:
      case 6u:
      case 8u:
        v32 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v32;
        v33 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v33;
        v34 = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v34;
        v35 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v35;
        v36 = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = v36;
        v37 = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 11) = v37;
        v38 = *((_QWORD *)a2 + 13);
        *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 13) = v38;
        v39 = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 15) = v39;
        v40 = *((_QWORD *)a2 + 17);
        *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
        *((_QWORD *)a1 + 17) = v40;
        v41 = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
        *((_QWORD *)a1 + 19) = v41;
        v42 = *((_QWORD *)a2 + 21);
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 21) = v42;
        *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v16 = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = v16;
        v17 = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = v17;
        v18 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v18;
        v19 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v19;
        v20 = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = v20;
        v21 = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = v21;
        v22 = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
        *((_QWORD *)a1 + 14) = v22;
        v23 = *((_QWORD *)a2 + 16);
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = v23;
        v24 = *((_QWORD *)a2 + 18);
        *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
        *((_QWORD *)a1 + 18) = v24;
        v25 = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 20) = v25;
        v26 = *((_QWORD *)a2 + 22);
        *((_QWORD *)a1 + 21) = *((_QWORD *)a2 + 21);
        *((_QWORD *)a1 + 22) = v26;
        v27 = *((_QWORD *)a2 + 24);
        *((_QWORD *)a1 + 23) = *((_QWORD *)a2 + 23);
        *((_QWORD *)a1 + 24) = v27;
        v28 = *((_QWORD *)a2 + 26);
        *((_QWORD *)a1 + 25) = *((_QWORD *)a2 + 25);
        *((_QWORD *)a1 + 26) = v28;
        v29 = *((_QWORD *)a2 + 28);
        *((_QWORD *)a1 + 27) = *((_QWORD *)a2 + 27);
        *((_QWORD *)a1 + 28) = v29;
        v30 = *((_QWORD *)a2 + 29);
        v31 = *((_QWORD *)a2 + 30);
        *((_QWORD *)a1 + 29) = v30;
        *((_QWORD *)a1 + 30) = v31;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        v43 = *((_QWORD *)a2 + 1);
        if ((unint64_t)(v43 - 1) >= 0xA)
        {
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v43;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1A58F0618(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
      return swift_bridgeObjectRelease();
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = a1 + *(int *)(type metadata accessor for Authenticator() + 28);
      v4 = type metadata accessor for AuthenticationTask();
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4);
      if ((_DWORD)result)
        return result;
      __swift_destroy_boxed_opaque_existential_1(v3);
      sub_1A585C57C(*(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48));
      v5 = v3 + *(int *)(v4 + 20);
      v6 = sub_1A594A764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      return swift_bridgeObjectRelease();
    case 4:
    case 5:
    case 6:
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 9:
      result = *(_QWORD *)(a1 + 8);
      if ((unint64_t)(result - 1) < 0xA)
        return result;
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

char *sub_1A58F07F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, int *);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, _QWORD, uint64_t, int *);

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_12;
    case 2u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v6 = *(int *)(type metadata accessor for Authenticator() + 28);
      v7 = &a1[v6];
      v8 = &a2[v6];
      v9 = (int *)type metadata accessor for AuthenticationTask();
      v10 = *((_QWORD *)v9 - 1);
      v11 = *(unsigned int (**)(char *, uint64_t, int *))(v10 + 48);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v11(v8, 1, v9))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v41 = *(_OWORD *)(v8 + 24);
        *(_OWORD *)(v7 + 24) = v41;
        (**(void (***)(char *, char *))(v41 - 8))(v7, v8);
        v42 = *((_QWORD *)v8 + 5);
        v43 = *((_QWORD *)v8 + 6);
        sub_1A585C524(v42, v43);
        *((_QWORD *)v7 + 5) = v42;
        *((_QWORD *)v7 + 6) = v43;
        v44 = v9[5];
        v45 = &v7[v44];
        v46 = &v8[v44];
        v47 = sub_1A594A764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
        v48 = _s6LoggerVMa_0();
        *(_QWORD *)&v45[*(int *)(v48 + 20)] = *(_QWORD *)&v46[*(int *)(v48 + 20)];
        v7[v9[6]] = v8[v9[6]];
        *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
        v7[v9[8]] = v8[v9[8]];
        v49 = *(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v49(v7, 0, 1, v9);
      }
      goto LABEL_12;
    case 4u:
    case 5u:
    case 6u:
    case 8u:
      v29 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v29;
      v30 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v30;
      v31 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v31;
      v32 = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v32;
      v33 = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 9) = v33;
      v34 = *((_QWORD *)a2 + 11);
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      *((_QWORD *)a1 + 11) = v34;
      v35 = *((_QWORD *)a2 + 13);
      *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
      *((_QWORD *)a1 + 13) = v35;
      v36 = *((_QWORD *)a2 + 15);
      *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
      *((_QWORD *)a1 + 15) = v36;
      v37 = *((_QWORD *)a2 + 17);
      *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
      *((_QWORD *)a1 + 17) = v37;
      v38 = *((_QWORD *)a2 + 19);
      *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
      *((_QWORD *)a1 + 19) = v38;
      v39 = *((_QWORD *)a2 + 21);
      *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 21) = v39;
      *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_12;
    case 7u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v13 = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      *((_QWORD *)a1 + 2) = v13;
      v14 = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 4) = v14;
      v15 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v15;
      v16 = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v16;
      v17 = *((_QWORD *)a2 + 10);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 10) = v17;
      v18 = *((_QWORD *)a2 + 12);
      *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
      *((_QWORD *)a1 + 12) = v18;
      v19 = *((_QWORD *)a2 + 14);
      *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
      *((_QWORD *)a1 + 14) = v19;
      v20 = *((_QWORD *)a2 + 16);
      *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
      *((_QWORD *)a1 + 16) = v20;
      v21 = *((_QWORD *)a2 + 18);
      *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
      *((_QWORD *)a1 + 18) = v21;
      v22 = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
      *((_QWORD *)a1 + 20) = v22;
      v23 = *((_QWORD *)a2 + 22);
      *((_QWORD *)a1 + 21) = *((_QWORD *)a2 + 21);
      *((_QWORD *)a1 + 22) = v23;
      v24 = *((_QWORD *)a2 + 24);
      *((_QWORD *)a1 + 23) = *((_QWORD *)a2 + 23);
      *((_QWORD *)a1 + 24) = v24;
      v25 = *((_QWORD *)a2 + 26);
      *((_QWORD *)a1 + 25) = *((_QWORD *)a2 + 25);
      *((_QWORD *)a1 + 26) = v25;
      v26 = *((_QWORD *)a2 + 28);
      *((_QWORD *)a1 + 27) = *((_QWORD *)a2 + 27);
      *((_QWORD *)a1 + 28) = v26;
      v27 = *((_QWORD *)a2 + 29);
      v28 = *((_QWORD *)a2 + 30);
      *((_QWORD *)a1 + 29) = v27;
      *((_QWORD *)a1 + 30) = v28;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_12;
    case 9u:
      v40 = *((_QWORD *)a2 + 1);
      if ((unint64_t)(v40 - 1) >= 0xA)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v40;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1A58F0EEC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, int *);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t, int *);

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_13;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v6 = *(int *)(type metadata accessor for Authenticator() + 28);
        v7 = &a1[v6];
        v8 = &a2[v6];
        v9 = (int *)type metadata accessor for AuthenticationTask();
        v10 = *((_QWORD *)v9 - 1);
        v11 = *(unsigned int (**)(char *, uint64_t, int *))(v10 + 48);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v11(v8, 1, v9))
        {
          v12 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          v13 = *((_QWORD *)v8 + 3);
          *((_QWORD *)v7 + 3) = v13;
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          (**(void (***)(char *, char *))(v13 - 8))(v7, v8);
          v14 = *((_QWORD *)v8 + 5);
          v15 = *((_QWORD *)v8 + 6);
          sub_1A585C524(v14, v15);
          *((_QWORD *)v7 + 5) = v14;
          *((_QWORD *)v7 + 6) = v15;
          v16 = v9[5];
          v17 = &v7[v16];
          v18 = &v8[v16];
          v19 = sub_1A594A764();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
          v20 = _s6LoggerVMa_0();
          *(_QWORD *)&v17[*(int *)(v20 + 20)] = *(_QWORD *)&v18[*(int *)(v20 + 20)];
          v7[v9[6]] = v8[v9[6]];
          *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
          v7[v9[8]] = v8[v9[8]];
          v21 = *(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v21(v7, 0, 1, v9);
        }
        goto LABEL_13;
      case 4u:
      case 5u:
      case 6u:
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
        *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
        *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
        *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 21) = *((_QWORD *)a2 + 21);
        *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_13;
      case 7u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
        *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
        *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
        *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 21) = *((_QWORD *)a2 + 21);
        *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
        *((_QWORD *)a1 + 23) = *((_QWORD *)a2 + 23);
        *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
        *((_QWORD *)a1 + 25) = *((_QWORD *)a2 + 25);
        *((_QWORD *)a1 + 26) = *((_QWORD *)a2 + 26);
        *((_QWORD *)a1 + 27) = *((_QWORD *)a2 + 27);
        *((_QWORD *)a1 + 28) = *((_QWORD *)a2 + 28);
        *((_QWORD *)a1 + 29) = *((_QWORD *)a2 + 29);
        *((_QWORD *)a1 + 30) = *((_QWORD *)a2 + 30);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_13;
      case 9u:
        if ((unint64_t)(*((_QWORD *)a2 + 1) - 1) >= 0xA)
        {
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for UnauthenticatedState()
{
  uint64_t result;

  result = qword_1EE7981E0;
  if (!qword_1EE7981E0)
    return swift_getSingletonMetadata();
  return result;
}

char *sub_1A58F181C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1[8] = a2[8];
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    v6 = *(int *)(type metadata accessor for Authenticator() + 28);
    v7 = &a1[v6];
    v8 = &a2[v6];
    v9 = (int *)type metadata accessor for AuthenticationTask();
    v10 = *((_QWORD *)v9 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v12 = *((_OWORD *)v8 + 1);
      *(_OWORD *)v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v12;
      *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
      *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
      v13 = v9[5];
      v14 = &v7[v13];
      v15 = &v8[v13];
      v16 = sub_1A594A764();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      v17 = _s6LoggerVMa_0();
      *(_QWORD *)&v14[*(int *)(v17 + 20)] = *(_QWORD *)&v15[*(int *)(v17 + 20)];
      v7[v9[6]] = v8[v9[6]];
      *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
      v7[v9[8]] = v8[v9[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1A58F19A4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v6 = *(int *)(type metadata accessor for Authenticator() + 28);
      v7 = &a1[v6];
      v8 = &a2[v6];
      v9 = (int *)type metadata accessor for AuthenticationTask();
      v10 = *((_QWORD *)v9 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v12 = *((_OWORD *)v8 + 1);
        *(_OWORD *)v7 = *(_OWORD *)v8;
        *((_OWORD *)v7 + 1) = v12;
        *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
        *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
        v13 = v9[5];
        v14 = &v7[v13];
        v15 = &v8[v13];
        v16 = sub_1A594A764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
        v17 = _s6LoggerVMa_0();
        *(_QWORD *)&v14[*(int *)(v17 + 20)] = *(_QWORD *)&v15[*(int *)(v17 + 20)];
        v7[v9[6]] = v8[v9[6]];
        *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
        v7[v9[8]] = v8[v9[8]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A58F1B44()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Authenticator();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A58F1BE4(uint64_t a1)
{
  char **v1;
  int64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1A58D3CAC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v11 = *((_QWORD *)v3 + 2);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *((_QWORD *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58F1D28(uint64_t result, char *a2)
{
  uint64_t *v2;
  char *v3;
  char *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  BOOL v16;
  int64_t v17;
  char *v18;
  char v19;
  char v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int64_t v27;

  v5 = (int64_t)&a2[-result];
  if (result)
    v6 = (int64_t)&a2[-result];
  else
    v6 = 0;
  v7 = *v2;
  v8 = *(_QWORD *)(*v2 + 16);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v3 = a2;
  v4 = (char *)result;
  result = swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || (v10 = *(_QWORD *)(v7 + 24) >> 1, v10 < v9))
  {
    if (v8 <= v9)
      v11 = v8 + v6;
    else
      v11 = v8;
    result = (uint64_t)sub_1A58D3CAC((char *)result, v11, 1, (char *)v7);
    v7 = result;
    v10 = *(_QWORD *)(result + 24) >> 1;
  }
  v12 = *(_QWORD *)(v7 + 16);
  v13 = v10 - v12;
  v14 = 0;
  if (v4 && v3 && v4 < v3 && v10 != v12)
  {
    if (v5 >= v13)
      v14 = v10 - v12;
    else
      v14 = v5;
    if (v14 < 0)
    {
      __break(1u);
      return result;
    }
    result = (uint64_t)memmove((void *)(v7 + v12 + 32), v4, v14);
    v4 += v14;
  }
  if (v14 < v6)
    goto LABEL_27;
  if (v14)
  {
    v15 = *(_QWORD *)(v7 + 16);
    v16 = __OFADD__(v15, v14);
    v17 = v15 + v14;
    if (v16)
    {
      __break(1u);
      goto LABEL_33;
    }
    *(_QWORD *)(v7 + 16) = v17;
  }
  if (v14 != v13)
    goto LABEL_25;
LABEL_28:
  v17 = *(_QWORD *)(v7 + 16);
  if (!v4)
  {
LABEL_33:
    if (!v3)
      goto LABEL_25;
    v4 = 0;
    goto LABEL_35;
  }
  if (!v3 || v4 != v3)
  {
LABEL_35:
    v20 = *v4;
    v18 = v4 + 1;
    v19 = v20;
    while (1)
    {
      while (1)
      {
        v21 = *(_QWORD *)(v7 + 24);
        v22 = v21 >> 1;
        v23 = v17 + 1;
        if ((uint64_t)(v21 >> 1) >= v17 + 1)
          break;
        v26 = (char *)v7;
        v27 = v17;
        result = (uint64_t)sub_1A58D3CAC((char *)(v21 > 1), v17 + 1, 1, v26);
        v17 = v27;
        v7 = result;
        v22 = *(_QWORD *)(result + 24) >> 1;
        if (v17 < v22)
          goto LABEL_39;
LABEL_36:
        *(_QWORD *)(v7 + 16) = v17;
      }
      if (v17 >= v22)
        goto LABEL_36;
LABEL_39:
      *(_BYTE *)(v7 + v17 + 32) = v19;
      if (v3 && v3 == v18)
      {
LABEL_49:
        *(_QWORD *)(v7 + 16) = v23;
        break;
      }
      v24 = 0;
      while (1)
      {
        v25 = (uint64_t)&v18[v24 + 1];
        v19 = v18[v24];
        if (~v17 + v22 == v24)
          break;
        *(_BYTE *)(v7 + v17 + 33 + v24++) = v19;
        if (v3 && (char *)v25 == v3)
        {
          v23 = v17 + v24 + 1;
          goto LABEL_49;
        }
      }
      v18 += v24 + 1;
      v17 = v22;
      *(_QWORD *)(v7 + 16) = v22;
    }
  }
LABEL_25:
  *v2 = v7;
  return result;
}

uint64_t sub_1A58F1F2C(char *a1)
{
  char **v1;
  char **v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  unint64_t v23;
  _BYTE *v24;
  char *v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  _BYTE *v31;
  char *v32;
  unint64_t v33;
  _BYTE v34[32];
  uint64_t v35;
  unint64_t v36;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AAB48);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A54E2E30(&qword_1EE7AAC18, &qword_1EE7AAB48, MEMORY[0x1E0CA9480]);
  v8 = sub_1A594B748();
  v9 = *v1;
  v10 = *((_QWORD *)*v2 + 2);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v12 = v8;
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *v2 = v9;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v14 = *((_QWORD *)v9 + 3) >> 1, v14 < v11))
  {
    if (v10 <= v11)
      v15 = v11;
    else
      v15 = v10;
    v9 = sub_1A58D3CAC(isUniquelyReferenced_nonNull_native, v15, 1, v9);
    *v2 = v9;
    v14 = *((_QWORD *)v9 + 3) >> 1;
  }
  v16 = v14 - *((_QWORD *)v9 + 2);
  (*(void (**)(_BYTE *, char *, uint64_t))(v5 + 16))(v7, a1, v4);
  v17 = sub_1A594B73C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
  if (v17 < v12)
    goto LABEL_15;
  if (v17 >= 1)
  {
    v18 = *((_QWORD *)*v2 + 2);
    v19 = __OFADD__(v18, v17);
    v20 = v18 + v17;
    if (v19)
    {
      __break(1u);
LABEL_32:
      v30 = v12 + 1;
      goto LABEL_33;
    }
    *((_QWORD *)*v2 + 2) = v20;
  }
  if (v17 != v16)
    return swift_bridgeObjectRelease();
LABEL_16:
  v22 = v35;
  v23 = v36;
  if (v36 == *(_QWORD *)(v35 + 16))
    return swift_bridgeObjectRelease();
  a1 = *v2;
  v12 = *((_QWORD *)*v2 + 2);
  v24 = sub_1A5871584(v34, v36, v35);
  v26 = *v25;
  ((void (*)(_BYTE *, _QWORD))v24)(v34, 0);
  v19 = __OFADD__(v23, 1);
  v27 = v23 + 1;
  if (v19)
  {
    __break(1u);
    goto LABEL_20;
  }
LABEL_21:
  while (1)
  {
    v28 = *((_QWORD *)a1 + 3);
    v29 = v28 >> 1;
    v30 = v12 + 1;
    if ((uint64_t)(v28 >> 1) < v12 + 1)
      break;
    if (v12 < v29)
      goto LABEL_23;
LABEL_20:
    *((_QWORD *)a1 + 2) = v12;
  }
  a1 = sub_1A58D3CAC((char *)(v28 > 1), v12 + 1, 1, a1);
  *v2 = a1;
  v29 = *((_QWORD *)a1 + 3) >> 1;
  if (v12 >= v29)
    goto LABEL_20;
LABEL_23:
  a1[v12 + 32] = v26;
  if (v27 == *(_QWORD *)(v22 + 16))
  {
LABEL_33:
    *((_QWORD *)a1 + 2) = v30;
    return swift_bridgeObjectRelease();
  }
  while (1)
  {
    v31 = sub_1A5871584(v34, v27, v22);
    v26 = *v32;
    result = ((uint64_t (*)(_BYTE *, _QWORD))v31)(v34, 0);
    v33 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v29 - 1 == v12)
    {
      ++v27;
      v12 = v29;
      *((_QWORD *)a1 + 2) = v29;
      goto LABEL_21;
    }
    a1[v12 + 33] = v26;
    ++v27;
    ++v12;
    if (v33 == *(_QWORD *)(v22 + 16))
      goto LABEL_32;
  }
  __break(1u);
  return result;
}

char *sub_1A58F21FC(char *result, char *a2)
{
  char **v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  int64_t v6;
  char *v7;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  int64_t v19;
  char v20;
  unint64_t v21;
  int64_t v22;
  char *v23;
  char *v24;
  __int128 *v25;
  int64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  char *v30;
  char v31;
  char *v32;
  char *v33;
  char *v34;

  v3 = *v2;
  v4 = *((_QWORD *)*v2 + 2);
  v5 = (int64_t)&a2[v4];
  if (__OFADD__(v4, a2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    if (result)
      v18 = result == a2;
    else
      v18 = 1;
    if (v18)
      goto LABEL_13;
    v19 = *((_QWORD *)v3 + 2);
    v20 = *result++;
    LOBYTE(v12) = v20;
    v6 = 16;
    while (1)
    {
      v21 = *((_QWORD *)v3 + 3);
      v14 = v21 >> 1;
      v22 = v19 + 1;
      if ((uint64_t)(v21 >> 1) < v19 + 1)
      {
        v34 = result;
        v32 = a2;
        v33 = sub_1A58D3CAC((char *)(v21 > 1), v19 + 1, 1, v3);
        v22 = v19 + 1;
        a2 = v32;
        v3 = v33;
        result = v34;
        v14 = *((_QWORD *)v3 + 3) >> 1;
        if (v19 >= v14)
          goto LABEL_23;
      }
      else if (v19 >= v14)
      {
        goto LABEL_23;
      }
      v3[v19 + 32] = v12;
      if (result == a2)
      {
LABEL_41:
        *((_QWORD *)v3 + 2) = v22;
        goto LABEL_13;
      }
      v23 = (char *)(v14 + ~v19);
      if (v23 >= &a2[~(unint64_t)result])
        v23 = &a2[~(unint64_t)result];
      v24 = v23 + 1;
      if ((unint64_t)(v23 + 1) > 0x10 && (unint64_t)(&v3[v19] - result + 33) >= 0x10)
      {
        v25 = (__int128 *)result;
        v26 = v24 & 0xF;
        if ((v24 & 0xF) == 0)
          v26 = v6;
        v27 = &v24[-v26];
        v22 += (int64_t)v27;
        result = &v27[(_QWORD)result];
        v28 = &v3[v19 + 33];
        do
        {
          v29 = *v25++;
          *(_OWORD *)v28 = v29;
          v28 += 16;
          v27 -= 16;
        }
        while (v27);
      }
      v30 = result++;
      while (1)
      {
        v31 = *v30++;
        LOBYTE(v12) = v31;
        if (v14 == v22)
          break;
        v3[v22++ + 32] = v12;
        ++result;
        if (v30 == a2)
          goto LABEL_41;
      }
LABEL_22:
      v19 = v14;
LABEL_23:
      *((_QWORD *)v3 + 2) = v19;
    }
  }
  v6 = (int64_t)a2;
  v7 = result;
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = *((_QWORD *)v3 + 3) >> 1, v9 < v5))
  {
    if (v4 <= v5)
      v10 = v5;
    else
      v10 = v4;
    v3 = sub_1A58D3CAC(isUniquelyReferenced_nonNull_native, v10, 1, v3);
    v9 = *((_QWORD *)v3 + 3) >> 1;
  }
  v11 = *((_QWORD *)v3 + 2);
  v12 = v9 - v11;
  result = sub_1A58F857C(&v3[v11 + 32], v9 - v11, v7, v6);
  if (v13 < v6)
    goto LABEL_15;
  if (v13 >= 1)
  {
    v15 = *((_QWORD *)v3 + 2);
    v16 = __OFADD__(v15, v13);
    v17 = v15 + v13;
    if (v16)
    {
      __break(1u);
      goto LABEL_22;
    }
    *((_QWORD *)v3 + 2) = v17;
  }
  if (v13 == v12)
    goto LABEL_16;
LABEL_13:
  *v2 = v3;
  return result;
}

uint64_t sub_1A58F2410(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1A58D3DA4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[10 * v8 + 4];
  if (a1 + 32 < v9 + 80 * v2 && v9 < a1 + 32 + 80 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58F2568(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_1A58D4330(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58F26D0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1A58D4574(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A58F2824(__int128 *a1, __int128 *a2)
{
  char v3;
  __int128 v5[11];
  __int128 v6[11];

  sub_1A5862234(a1, (uint64_t)v5);
  sub_1A5862234(a2, (uint64_t)v6);
  sub_1A58F982C(v5, v6);
  return v3 & 1;
}

uint64_t sub_1A58F286C(uint64_t *a1, uint64_t *a2)
{
  return sub_1A58F9734(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1A58F2884(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_t v29;
  uint64_t v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v59;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  int v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _OWORD *v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t *v94;
  uint64_t v95;
  os_log_t v96;
  char *v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE v105[56];
  uint64_t v106;
  _BYTE v107[80];
  _QWORD v108[10];
  uint64_t v109[10];
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t *v114;
  os_log_t v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  unint64_t v119;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
  MEMORY[0x1E0C80A78](v4);
  v102 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UnauthenticatedState();
  MEMORY[0x1E0C80A78](v6);
  v104 = (uint64_t)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for Authenticator();
  MEMORY[0x1E0C80A78](v101);
  v9 = (uint64_t *)((char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A594A764();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(v17, a2, v13, v15);
  v103 = a2;
  sub_1A55034B8(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A58687AC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A586418C);
  sub_1A58687AC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A586418C);
  v18 = sub_1A594A74C();
  LODWORD(v100) = sub_1A594C018();
  if (os_log_type_enabled(v18, (os_log_type_t)v100))
  {
    v96 = v18;
    v97 = v17;
    v98 = v13;
    v99 = v14;
    v82 = v9;
    v83 = v6;
    v19 = swift_slowAlloc();
    v95 = swift_slowAlloc();
    v109[0] = v95;
    *(_DWORD *)v19 = 68158466;
    LODWORD(v110) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v19 + 8) = 256;
    v20 = &v12[*(int *)(v10 + 20)];
    LOBYTE(v110) = *v20;
    sub_1A594C3CC();
    *(_WORD *)(v19 + 11) = 2082;
    v21 = ConnectionID.debugDescription.getter(*((unsigned int *)v20 + 1));
    v110 = sub_1A589167C(v21, v22, v109);
    v94 = &v111;
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v12, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    *(_WORD *)(v19 + 21) = 2082;
    sub_1A58622C0((uint64_t)a1, (uint64_t)v105);
    v23 = v106;
    v106 &= ~0x1000000000000000uLL;
    v24 = a1;
    if ((v23 & 0x1000000000000000) != 0)
    {
      sub_1A585BA78((uint64_t)v105, (uint64_t)v107);
      v110 = 0x204C534153;
      v111 = 0xE500000000000000;
      sub_1A585BA78((uint64_t)v107, (uint64_t)v108);
      __asm { BR              X12 }
    }
    v9 = v82;
    v25 = v83;
    v26 = v98;
    v27 = v99;
    v28 = (uint64_t)v97;
    v110 = sub_1A589167C(0x4E49474F4CLL, 0xE500000000000000, v109);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A58687AC(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);
    sub_1A58687AC(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);
    v29 = v96;
    _os_log_impl(&dword_1A4F90000, v96, (os_log_type_t)v100, "[%.*hhx-%{public}s] Authentication failed with '%{public}s'.", (uint8_t *)v19, 0x1Fu);
    v30 = v95;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v30, -1, -1);
    MEMORY[0x1A85B1964](v19, -1, -1);

    (*(void (**)(uint64_t, unint64_t))(v27 + 8))(v28, v26);
  }
  else
  {
    sub_1A55034FC((uint64_t)v12, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    sub_1A58687AC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);
    sub_1A58687AC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5862344);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    v25 = v6;
    v24 = a1;
  }
  v31 = v84;
  v32 = v104;
  sub_1A55034B8((uint64_t)v84, v104, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  if (swift_getEnumCaseMultiPayload() != 2)
    return sub_1A55034FC(v32, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  sub_1A55034FC((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  sub_1A54E3394(v32, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Authenticator);
  sub_1A58687AC(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A586418C);
  sub_1A58DA5B8(&v110, v24);
  sub_1A5862344(v110, v111, v112, v113, (uint64_t)v114, (unint64_t)v115, v116, v117, (uint64_t)v118, v119);
  v33 = v102;
  sub_1A5865DEC(v103, v102);
  sub_1A5868764(v33, (uint64_t)v9 + *(int *)(v101 + 28));
  v34 = *v9;
  v35 = *(_QWORD *)(*v9 + 16);
  if (!v35)
    goto LABEL_33;
  v36 = v34 + 32;
  v37 = v9[2];
  v103 = v37 + 56;
  v80 = v34;
  swift_bridgeObjectRetain_n();
  v38 = 0;
  v82 = v9;
  v83 = v25;
  v78 = v36;
  v79 = v35;
  v93 = v37;
  do
  {
    v39 = (uint64_t *)(v36 + 80 * v38);
    v40 = *v39;
    v101 = v39[1];
    v102 = v40;
    v41 = v39[3];
    v99 = v39[2];
    v100 = v41;
    v42 = v39[4];
    v96 = (os_log_t)v39[5];
    v43 = v39[6];
    v94 = (unint64_t *)v42;
    v95 = v43;
    v104 = v39[7];
    v45 = v39[8];
    v44 = v39[9];
    v97 = (char *)v45;
    v98 = v44;
    if (!*(_QWORD *)(v37 + 16))
    {
      sub_1A586418C(v102, v101, v99, v100, (uint64_t)v94, (unint64_t)v96, v95, v104, (uint64_t)v97, v98);
      v50 = v104;
LABEL_36:
      v76 = v50;
      swift_bridgeObjectRelease_n();
      sub_1A5862344(v102, v101, v99, v100, (uint64_t)v94, (unint64_t)v96, v95, v76, (uint64_t)v97, v98);
      sub_1A54E3394((uint64_t)v82, (uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for Authenticator);
      return swift_storeEnumTagMultiPayload();
    }
    v81 = v38;
    sub_1A594CE64();
    if ((v104 & 0x1000000000000000) != 0)
    {
      sub_1A594CE88();
      __asm { BR              X9 }
    }
    sub_1A594CE88();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    sub_1A594B1D8();
    v46 = sub_1A594CED0();
    v47 = v93;
    v48 = -1 << *(_BYTE *)(v93 + 32);
    v49 = v46 & ~v48;
    v50 = v104;
    if (((*(_QWORD *)(v103 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_36;
    ++v81;
    v51 = ~v48;
    v85 = v104 & 0xEFFFFFFFFFFFFFFFLL;
    v86 = ~v48;
    while (1)
    {
      v52 = (uint64_t *)(*(_QWORD *)(v47 + 48) + 80 * v49);
      v53 = *v52;
      v54 = v52[1];
      v56 = v52[2];
      v55 = v52[3];
      v57 = v52[7];
      if ((v57 & 0x1000000000000000) == 0)
        break;
      v62 = v52[4];
      v63 = v52[5];
      v64 = v52[6];
      v65 = v52[8];
      v66 = v52[9];
      v109[0] = *v52;
      v109[1] = v54;
      v109[2] = v56;
      v109[3] = v55;
      v109[4] = v62;
      v109[5] = v63;
      v109[6] = v64;
      v109[7] = v57 & 0xEFFFFFFFFFFFFFFFLL;
      v109[8] = v65;
      v109[9] = v66;
      if ((v50 & 0x1000000000000000) != 0)
      {
        v110 = v102;
        v111 = v101;
        v112 = v99;
        v113 = v100;
        v114 = v94;
        v115 = v96;
        v116 = v95;
        v117 = v85;
        v118 = v97;
        v119 = v98;
        v87 = v55;
        v88 = v63;
        v67 = v62;
        v91 = v65;
        v92 = v62;
        v68 = v65;
        v90 = v56;
        v69 = v66;
        sub_1A586418C(v102, v101, v99, v100, (uint64_t)v94, (unint64_t)v96, v95, v104, (uint64_t)v97, v98);
        v70 = v56;
        v71 = v87;
        v72 = v67;
        v73 = v88;
        sub_1A586418C(v53, v54, v70, v87, v72, v88, v64, v57, v68, v69);
        sub_1A586B68C((uint64_t)v109);
        v89 = v74;
        v51 = v86;
        sub_1A5862344(v102, v101, v99, v100, (uint64_t)v94, (unint64_t)v96, v95, v104, (uint64_t)v97, v98);
        sub_1A5862344(v53, v54, v90, v71, v92, v73, v64, v57, v91, v69);
        v50 = v104;
        v47 = v93;
        if ((v89 & 1) != 0)
          goto LABEL_31;
      }
LABEL_15:
      v49 = (v49 + 1) & v51;
      if (((*(_QWORD *)(v103 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
        goto LABEL_36;
    }
    if ((v50 & 0x1000000000000000) != 0)
      goto LABEL_15;
    if (v53 != v102 || v54 != v101)
    {
      v59 = sub_1A594CD38();
      v50 = v104;
      v47 = v93;
      if ((v59 & 1) == 0)
        goto LABEL_15;
    }
    if (v56 != v99 || v55 != v100)
    {
      v61 = sub_1A594CD38();
      v50 = v104;
      v47 = v93;
      if ((v61 & 1) == 0)
        goto LABEL_15;
    }
LABEL_31:
    v37 = v47;
    sub_1A5862344(v102, v101, v99, v100, (uint64_t)v94, (unint64_t)v96, v95, v50, (uint64_t)v97, v98);
    v36 = v78;
    v38 = v81;
    v9 = v82;
    v31 = v84;
  }
  while (v81 != v79);
  swift_bridgeObjectRelease_n();
LABEL_33:
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Authenticator);
  *v31 = xmmword_1A59ABDF0;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A58F3908(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  char v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  _QWORD *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  __n128 v114;
  uint64_t v115;

  v4 = v3;
  v106 = a3;
  v108 = (char *)a1;
  v105 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v105);
  v7 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v101 - v9;
  MEMORY[0x1E0C80A78](v11);
  v103 = (uint64_t)&v101 - v12;
  MEMORY[0x1E0C80A78](v13);
  v102 = (unint64_t)&v101 - v14;
  MEMORY[0x1E0C80A78](v15);
  v101 = (unint64_t)&v101 - v16;
  v17 = sub_1A594A764();
  v18 = *(_QWORD *)(v17 - 8);
  v109 = v17;
  v110 = v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v101 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v101 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v101 - v28;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v101 - v31;
  v107 = (_QWORD *)v4;
  sub_1A55034FC(v4, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  v33 = *(_QWORD *)a2;
  v104 = *(_QWORD *)(a2 + 8);
  v34 = v33;
  if (v33 >> 62)
  {
    if (v33 >> 62 == 1)
    {
      v35 = v109;
      v36 = v110;
      v37 = (uint64_t)v106;
      (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v26, v106, v109);
      v38 = v103;
      sub_1A55034B8(v37, v103, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A58AAAD0(v34);
      sub_1A58AAAD0(v34);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v39 = sub_1A594A74C();
      v40 = sub_1A594C030();
      if (os_log_type_enabled(v39, v40))
      {
        v101 = v34 >> 16;
        v41 = swift_slowAlloc();
        v102 = swift_slowAlloc();
        v114.n128_u64[0] = v102;
        *(_DWORD *)v41 = 68158722;
        v113.n128_u32[0] = 2;
        sub_1A594C3CC();
        *(_WORD *)(v41 + 8) = 256;
        v42 = *(int *)(v105 + 20);
        v106 = v26;
        v43 = v38 + v42;
        v113.n128_u8[0] = *(_BYTE *)(v38 + v42);
        sub_1A594C3CC();
        *(_WORD *)(v41 + 11) = 2082;
        v44 = ConnectionID.debugDescription.getter(*(unsigned int *)(v43 + 4));
        v113.n128_u64[0] = sub_1A589167C(v44, v45, (uint64_t *)&v114);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v38, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        *(_WORD *)(v41 + 21) = 512;
        sub_1A5867DDC(v34);
        v113.n128_u16[0] = v34;
        sub_1A594C3CC();
        sub_1A5867DDC(v34);
        *(_WORD *)(v41 + 25) = 512;
        sub_1A5867DDC(v34);
        v113.n128_u16[0] = v101;
        sub_1A594C3CC();
        sub_1A5867DDC(v34);
        _os_log_impl(&dword_1A4F90000, v39, v40, "[%.*hhx-%{public}s] Using TLS protocol %hu, cipher suite %hu", (uint8_t *)v41, 0x1Du);
        v46 = v102;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v46, -1, -1);
        v47 = v41;
LABEL_8:
        MEMORY[0x1A85B1964](v47, -1, -1);

        (*(void (**)(char *, uint64_t))(v110 + 8))(v106, v109);
LABEL_26:
        *v107 = v108;
        type metadata accessor for UnauthenticatedState();
        swift_storeEnumTagMultiPayload();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        return 0x8000000000000001;
      }
      sub_1A5867DDC(v34);
      sub_1A5867DDC(v34);
      sub_1A55034FC(v38, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      sub_1A5867DDC(v34);
      sub_1A5867DDC(v34);

      v75 = *(void (**)(char *, uint64_t))(v36 + 8);
      v76 = v26;
LABEL_18:
      v98 = v35;
LABEL_25:
      v75(v76, v98);
      goto LABEL_26;
    }
    v62 = Capability.startTLS.unsafeMutableAddressor();
    v63 = sub_1A579CCB0(*v62, v62[1], v62[2], *((_BYTE *)v62 + 24), (uint64_t)v108);
    v64 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
    if ((v63 & 1) == 0)
    {
      v87 = v29;
      v88 = (uint64_t)v106;
      v89 = v109;
      v64(v29, v106, v109);
      v90 = v102;
      sub_1A55034B8(v88, v102, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v91 = sub_1A594A74C();
      v92 = sub_1A594C018();
      if (os_log_type_enabled(v91, v92))
      {
        v93 = swift_slowAlloc();
        v94 = swift_slowAlloc();
        v114.n128_u64[0] = v94;
        *(_DWORD *)v93 = 68158210;
        v113.n128_u32[0] = 2;
        sub_1A594C3CC();
        *(_WORD *)(v93 + 8) = 256;
        v95 = v90 + *(int *)(v105 + 20);
        v113.n128_u8[0] = *(_BYTE *)v95;
        sub_1A594C3CC();
        *(_WORD *)(v93 + 11) = 2082;
        v96 = ConnectionID.debugDescription.getter(*(unsigned int *)(v95 + 4));
        v113.n128_u64[0] = sub_1A589167C(v96, v97, (uint64_t *)&v114);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v90, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        _os_log_impl(&dword_1A4F90000, v91, v92, "[%.*hhx-%{public}s] Connection is insecure, but server does not support STARTTLS.", (uint8_t *)v93, 0x15u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v94, -1, -1);
        MEMORY[0x1A85B1964](v93, -1, -1);
      }
      else
      {
        sub_1A55034FC(v90, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      }

      v75 = *(void (**)(char *, uint64_t))(v110 + 8);
      v76 = v87;
      v98 = v89;
      goto LABEL_25;
    }
    v65 = (uint64_t)v106;
    v66 = v109;
    v64(v32, v106, v109);
    v67 = v101;
    sub_1A55034B8(v65, v101, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v68 = sub_1A594A74C();
    v69 = sub_1A594C030();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = swift_slowAlloc();
      v71 = swift_slowAlloc();
      v114.n128_u64[0] = v71;
      *(_DWORD *)v70 = 68158210;
      v113.n128_u32[0] = 2;
      sub_1A594C3CC();
      *(_WORD *)(v70 + 8) = 256;
      v72 = v67 + *(int *)(v105 + 20);
      v113.n128_u8[0] = *(_BYTE *)v72;
      sub_1A594C3CC();
      *(_WORD *)(v70 + 11) = 2082;
      v73 = ConnectionID.debugDescription.getter(*(unsigned int *)(v72 + 4));
      v113.n128_u64[0] = sub_1A589167C(v73, v74, (uint64_t *)&v114);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v67, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      _os_log_impl(&dword_1A4F90000, v68, v69, "[%.*hhx-%{public}s] Server supports STARTTLS and connection is insecure. Attempting STARTTLS.", (uint8_t *)v70, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v71, -1, -1);
      MEMORY[0x1A85B1964](v70, -1, -1);
    }
    else
    {
      sub_1A55034FC(v67, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    }

    (*(void (**)(char *, uint64_t))(v110 + 8))(v32, v66);
    type metadata accessor for UnauthenticatedState();
    swift_storeEnumTagMultiPayload();
    v99 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return ClientCommand.EncodingOptions.init(_:)(v99) & 0x101FF;
  }
  else
  {
    v48 = (uint64_t)v7;
    sub_1A58687F8((__n128 *)(a2 + 24), &v113);
    sub_1A58687F8(&v113, &v114);
    v49 = v110;
    v50 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
    if (v115 == 1)
    {
      v51 = v20;
      v52 = v20;
      v53 = (uint64_t)v106;
      v35 = v109;
      v50(v52, v106, v109);
      v54 = v48;
      sub_1A55034B8(v53, v48, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A58AAAD0(v34);
      sub_1A58AAAD0(v34);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v39 = sub_1A594A74C();
      v55 = sub_1A594C030();
      if (os_log_type_enabled(v39, v55))
      {
        v102 = v34 >> 16;
        v56 = swift_slowAlloc();
        v57 = swift_slowAlloc();
        v106 = v51;
        v103 = v57;
        v112 = v57;
        *(_DWORD *)v56 = 68158722;
        LODWORD(v111) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v56 + 8) = 256;
        v58 = v54 + *(int *)(v105 + 20);
        LOBYTE(v111) = *(_BYTE *)v58;
        sub_1A594C3CC();
        *(_WORD *)(v56 + 11) = 2082;
        v59 = ConnectionID.debugDescription.getter(*(unsigned int *)(v58 + 4));
        v111 = sub_1A589167C(v59, v60, &v112);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v54, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        *(_WORD *)(v56 + 21) = 512;
        sub_1A5867DDC(v34);
        LOWORD(v111) = v34;
        sub_1A594C3CC();
        sub_1A5867DDC(v34);
        *(_WORD *)(v56 + 25) = 512;
        sub_1A5867DDC(v34);
        LOWORD(v111) = v102;
        sub_1A594C3CC();
        sub_1A5867DDC(v34);
        _os_log_impl(&dword_1A4F90000, v39, v55, "[%.*hhx-%{public}s] Using opportunistic TLS protocol %hu, cipher suite %hu", (uint8_t *)v56, 0x1Du);
        v61 = v103;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v61, -1, -1);
        v47 = v56;
        goto LABEL_8;
      }
      sub_1A5867DDC(v34);
      sub_1A5867DDC(v34);
      sub_1A55034FC(v48, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      sub_1A5867DDC(v34);
      sub_1A5867DDC(v34);

      v75 = *(void (**)(char *, uint64_t))(v110 + 8);
      v76 = v51;
      goto LABEL_18;
    }
    v77 = (uint64_t)v106;
    v78 = v109;
    v50(v23, v106, v109);
    sub_1A55034B8(v77, (uint64_t)v10, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v79 = sub_1A594A74C();
    v80 = sub_1A594C018();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = swift_slowAlloc();
      v82 = swift_slowAlloc();
      v108 = v23;
      v83 = v82;
      v112 = v82;
      *(_DWORD *)v81 = 68158210;
      LODWORD(v111) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v81 + 8) = 256;
      v84 = &v10[*(int *)(v105 + 20)];
      LOBYTE(v111) = *v84;
      sub_1A594C3CC();
      *(_WORD *)(v81 + 11) = 2082;
      v85 = ConnectionID.debugDescription.getter(*((unsigned int *)v84 + 1));
      v111 = sub_1A589167C(v85, v86, &v112);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v10, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      _os_log_impl(&dword_1A4F90000, v79, v80, "[%.*hhx-%{public}s] Connection is using opportunistic TLS. But we require a secure connection.", (uint8_t *)v81, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v83, -1, -1);
      MEMORY[0x1A85B1964](v81, -1, -1);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v108, v78);
    }
    else
    {
      sub_1A55034FC((uint64_t)v10, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v23, v78);
    }
    *(_OWORD *)v107 = xmmword_1A59DC780;
    type metadata accessor for UnauthenticatedState();
    swift_storeEnumTagMultiPayload();
    return 0xFFFFFFFF00000000;
  }
}

uint64_t sub_1A58F46A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  uint64_t *v36;
  __int128 *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;

  v3 = v2;
  v6 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A594A764();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55034FC(v3, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  if (!a1)
  {
    type metadata accessor for UnauthenticatedState();
    swift_storeEnumTagMultiPayload();
    return 0xFFFFFFFF00000000;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  sub_1A55034B8(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  v78 = a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v13 = sub_1A594A74C();
  v14 = sub_1A594C00C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v77 = v3;
    v16 = v15;
    v76 = swift_slowAlloc();
    *(_QWORD *)&v90 = v76;
    *(_DWORD *)v16 = 68158210;
    LODWORD(v79) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 8) = 256;
    v17 = &v8[*(int *)(v6 + 20)];
    LOBYTE(v79) = *v17;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 11) = 2082;
    v18 = ConnectionID.debugDescription.getter(*((unsigned int *)v17 + 1));
    *(_QWORD *)&v79 = sub_1A589167C(v18, v19, (uint64_t *)&v90);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    _os_log_impl(&dword_1A4F90000, v13, v14, "[%.*hhx-%{public}s] Received capabilities from server", (uint8_t *)v16, 0x15u);
    v20 = v76;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v20, -1, -1);
    v21 = v16;
    v3 = v77;
    MEMORY[0x1A85B1964](v21, -1, -1);
  }
  else
  {
    sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v23 = Capability.id.unsafeMutableAddressor();
  v24 = v78;
  if ((sub_1A579CCB0(*v23, v23[1], v23[2], *((_BYTE *)v23 + 24), v78) & 1) != 0)
  {
    *(_QWORD *)v3 = v24;
    type metadata accessor for UnauthenticatedState();
    swift_storeEnumTagMultiPayload();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v25 = (uint64_t *)Capability.CompressionKind.deflate.unsafeMutableAddressor();
    v26 = *v25;
    v27 = v25[1];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    static Capability.compression(_:)(v26, v27);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    v35 = v34;
    swift_bridgeObjectRelease();
    LOBYTE(v29) = sub_1A579CCB0(v29, v31, v33, v35 & 1, v24);
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      v36 = Capability.applePushService.unsafeMutableAddressor();
      if ((sub_1A579CCB0(*v36, v36[1], v36[2], *((_BYTE *)v36 + 24), v24) & 1) != 0)
      {
        v37 = ServerID.empty.unsafeMutableAddressor();
        v39 = v37[1];
        v38 = v37[2];
        v79 = *v37;
        v80 = v39;
        v81 = v38;
        v40 = v37[6];
        v42 = v37[3];
        v41 = v37[4];
        v84 = v37[5];
        v85 = v40;
        v82 = v42;
        v83 = v41;
        v43 = v37[10];
        v45 = v37[7];
        v44 = v37[8];
        v88 = v37[9];
        v89 = v43;
        v86 = v45;
        v87 = v44;
        v46 = v37[9];
        v98 = v37[8];
        v99 = v46;
        v100 = v37[10];
        v47 = v37[5];
        v94 = v37[4];
        v95 = v47;
        v48 = v37[7];
        v96 = v37[6];
        v97 = v48;
        v49 = v37[1];
        v90 = *v37;
        v91 = v49;
        v50 = v37[3];
        v92 = v37[2];
        v93 = v50;
        *(_QWORD *)v3 = v24;
        *(_OWORD *)(v3 + 56) = v50;
        *(_OWORD *)(v3 + 40) = v92;
        v51 = v90;
        *(_OWORD *)(v3 + 24) = v91;
        *(_OWORD *)(v3 + 8) = v51;
        v52 = v94;
        v53 = v95;
        *(_OWORD *)(v3 + 104) = v96;
        *(_OWORD *)(v3 + 88) = v53;
        *(_OWORD *)(v3 + 72) = v52;
        v54 = v99;
        *(_OWORD *)(v3 + 168) = v100;
        *(_OWORD *)(v3 + 152) = v54;
        v55 = v97;
        *(_OWORD *)(v3 + 136) = v98;
        *(_OWORD *)(v3 + 120) = v55;
        type metadata accessor for UnauthenticatedState();
        swift_storeEnumTagMultiPayload();
        sub_1A55425D8((uint64_t)&v79);
        return 0x8000000000000003;
      }
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v56 = ServerID.empty.unsafeMutableAddressor();
    v58 = v56[1];
    v57 = v56[2];
    v79 = *v56;
    v80 = v58;
    v81 = v57;
    v59 = v56[6];
    v61 = v56[3];
    v60 = v56[4];
    v84 = v56[5];
    v85 = v59;
    v82 = v61;
    v83 = v60;
    v62 = v56[10];
    v64 = v56[7];
    v63 = v56[8];
    v88 = v56[9];
    v89 = v62;
    v86 = v64;
    v87 = v63;
    v65 = v56[9];
    v98 = v56[8];
    v99 = v65;
    v100 = v56[10];
    v66 = v56[5];
    v94 = v56[4];
    v95 = v66;
    v67 = v56[7];
    v96 = v56[6];
    v97 = v67;
    v68 = v56[1];
    v90 = *v56;
    v91 = v68;
    v69 = v56[3];
    v92 = v56[2];
    v93 = v69;
    *(_QWORD *)v3 = v24;
    *(_OWORD *)(v3 + 56) = v69;
    *(_OWORD *)(v3 + 40) = v92;
    v70 = v90;
    *(_OWORD *)(v3 + 24) = v91;
    *(_OWORD *)(v3 + 8) = v70;
    v71 = v94;
    v72 = v95;
    *(_OWORD *)(v3 + 104) = v96;
    *(_OWORD *)(v3 + 88) = v72;
    *(_OWORD *)(v3 + 72) = v71;
    v73 = v99;
    *(_OWORD *)(v3 + 168) = v100;
    *(_OWORD *)(v3 + 152) = v73;
    v74 = v97;
    *(_OWORD *)(v3 + 136) = v98;
    *(_OWORD *)(v3 + 120) = v74;
    type metadata accessor for UnauthenticatedState();
    swift_storeEnumTagMultiPayload();
    sub_1A55425D8((uint64_t)&v79);
  }
  return ClientCommand.EncodingOptions.init(_:)(v24) & 0x101FF;
}

void sub_1A58F4CB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  _QWORD v9[32];

  v9[1] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for AuthenticationTask();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for Authenticator();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for UnauthenticatedState();
  MEMORY[0x1E0C80A78](v5);
  sub_1A55034B8(v1, (uint64_t)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v8 = (char *)sub_1A58F4E04 + 4 * word_1A59E0AC4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A58F4E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t result;

  v3 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v2 - 192) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v2 - 176) = v3;
  *(_OWORD *)(v2 - 160) = *(_OWORD *)(v1 + 160);
  *(_QWORD *)(v2 - 144) = *(_QWORD *)(v1 + 176);
  v4 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v2 - 256) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v2 - 240) = v4;
  v5 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v2 - 224) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v2 - 208) = v5;
  v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 - 320) = *(_OWORD *)v1;
  *(_OWORD *)(v2 - 304) = v6;
  v7 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 - 288) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 - 272) = v7;
  result = sub_1A58B229C(v2 - 320);
  *(_QWORD *)(v0 + 32) = 0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

void sub_1A58F5240(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _QWORD v97[50];
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 *v103;
  __int128 v104[11];
  _BYTE v105[312];
  uint64_t v106;

  v100 = a2;
  v103 = a1;
  sub_1A5862234(a1, (uint64_t)v104);
  sub_1A5862234(v104, (uint64_t)&v106);
  v98 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v98);
  v97[34] = (char *)v97 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v97[31] = (char *)v97 - v4;
  MEMORY[0x1E0C80A78](v5);
  v97[33] = (char *)v97 - v6;
  MEMORY[0x1E0C80A78](v7);
  v97[28] = (char *)v97 - v8;
  MEMORY[0x1E0C80A78](v9);
  v97[11] = (char *)v97 - v10;
  MEMORY[0x1E0C80A78](v11);
  v97[7] = (char *)v97 - v12;
  MEMORY[0x1E0C80A78](v13);
  v97[12] = (char *)v97 - v14;
  MEMORY[0x1E0C80A78](v15);
  v97[8] = (char *)v97 - v16;
  MEMORY[0x1E0C80A78](v17);
  v97[10] = (char *)v97 - v18;
  MEMORY[0x1E0C80A78](v19);
  v97[5] = (char *)v97 - v20;
  MEMORY[0x1E0C80A78](v21);
  v97[9] = (char *)v97 - v22;
  MEMORY[0x1E0C80A78](v23);
  v97[4] = (char *)v97 - v24;
  MEMORY[0x1E0C80A78](v25);
  v97[32] = (char *)v97 - v26;
  MEMORY[0x1E0C80A78](v27);
  v97[26] = (char *)v97 - v28;
  MEMORY[0x1E0C80A78](v29);
  v97[44] = (char *)v97 - v30;
  MEMORY[0x1E0C80A78](v31);
  v97[42] = (char *)v97 - v32;
  MEMORY[0x1E0C80A78](v33);
  v97[29] = (char *)v97 - v34;
  MEMORY[0x1E0C80A78](v35);
  v97[24] = (char *)v97 - v36;
  MEMORY[0x1E0C80A78](v37);
  v97[30] = (char *)v97 - v38;
  MEMORY[0x1E0C80A78](v39);
  v97[25] = (char *)v97 - v40;
  MEMORY[0x1E0C80A78](v41);
  v97[27] = (char *)v97 - v42;
  MEMORY[0x1E0C80A78](v43);
  v97[22] = (char *)v97 - v44;
  MEMORY[0x1E0C80A78](v45);
  v97[21] = (char *)v97 - v46;
  MEMORY[0x1E0C80A78](v47);
  v97[19] = (char *)v97 - v48;
  MEMORY[0x1E0C80A78](v49);
  v97[20] = (char *)v97 - v50;
  MEMORY[0x1E0C80A78](v51);
  v97[6] = (char *)v97 - v52;
  MEMORY[0x1E0C80A78](v53);
  v97[2] = (char *)v97 - v54;
  MEMORY[0x1E0C80A78](v55);
  v97[3] = (char *)v97 - v56;
  MEMORY[0x1E0C80A78](v57);
  v97[1] = (char *)v97 - v58;
  v101 = sub_1A594A764();
  v99 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v97[40] = (char *)v97 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v60);
  v97[39] = (char *)v97 - v61;
  MEMORY[0x1E0C80A78](v62);
  v97[17] = (char *)v97 - v63;
  MEMORY[0x1E0C80A78](v64);
  v97[18] = (char *)v97 - v65;
  MEMORY[0x1E0C80A78](v66);
  v97[16] = (char *)v97 - v67;
  MEMORY[0x1E0C80A78](v68);
  v97[15] = (char *)v97 - v69;
  MEMORY[0x1E0C80A78](v70);
  v97[38] = (char *)v97 - v71;
  MEMORY[0x1E0C80A78](v72);
  v97[46] = (char *)v97 - v73;
  MEMORY[0x1E0C80A78](v74);
  v97[36] = (char *)v97 - v75;
  MEMORY[0x1E0C80A78](v76);
  v97[37] = (char *)v97 - v77;
  MEMORY[0x1E0C80A78](v78);
  v97[35] = (char *)v97 - v79;
  MEMORY[0x1E0C80A78](v80);
  v97[23] = (char *)v97 - v81;
  MEMORY[0x1E0C80A78](v82);
  v97[14] = (char *)v97 - v83;
  MEMORY[0x1E0C80A78](v84);
  v97[13] = (char *)v97 - v85;
  v102 = type metadata accessor for UnauthenticatedState();
  MEMORY[0x1E0C80A78](v102);
  MEMORY[0x1E0C80A78](v86);
  MEMORY[0x1E0C80A78](v87);
  MEMORY[0x1E0C80A78](v88);
  MEMORY[0x1E0C80A78](v89);
  MEMORY[0x1E0C80A78](v90);
  MEMORY[0x1E0C80A78](v91);
  MEMORY[0x1E0C80A78](v92);
  MEMORY[0x1E0C80A78](v93);
  MEMORY[0x1E0C80A78](v94);
  v97[48] = (char *)v97 - v95;
  sub_1A5862234(v103, (uint64_t)v105);
  v96 = (char *)sub_1A58F5988 + 4 * word_1A59E0AE2[sub_1A58F91E4((uint64_t)v105)];
  __asm { BR              X10 }
}

void *sub_1A58F5988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v2 = *(_QWORD *)(v0 + 504);
  sub_1A55034B8(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  if ((swift_getEnumCaseMultiPayload() & 0xFFFFFFFE) != 4)
  {
    v13 = *(_QWORD *)(v0 + 416);
    v14 = *(_QWORD *)(v0 + 368);
    v15 = *(_QWORD *)(v0 + 432);
    v16 = *(_QWORD *)(v0 + 448);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v14, v15, v16);
    v17 = v15;
    v18 = *(_QWORD *)(v0 + 336);
    sub_1A55034B8(v17, v18, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    v19 = *(_QWORD *)(v0 + 352);
    sub_1A55034B8(v18, v19, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    sub_1A55034FC(v18, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v20 = sub_1A594A74C();
    v21 = sub_1A594C018();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      *(_QWORD *)(v0 + 528) = v23;
      *(_DWORD *)v22 = 68158210;
      *(_DWORD *)(v0 + 720) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v22 + 8) = 256;
      v24 = v19 + *(int *)(*(_QWORD *)(v0 + 400) + 20);
      *(_BYTE *)(v0 + 720) = *(_BYTE *)v24;
      sub_1A594C3CC();
      *(_WORD *)(v22 + 11) = 2082;
      v25 = ConnectionID.debugDescription.getter(*(unsigned int *)(v24 + 4));
      *(_QWORD *)(v0 + 720) = sub_1A589167C(v25, v26, (uint64_t *)(v0 + 528));
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v19, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      _os_log_impl(&dword_1A4F90000, v20, v21, "[%.*hhx-%{public}s] Unexpected enabledCompress", (uint8_t *)v22, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v23, -1, -1);
      MEMORY[0x1A85B1964](v22, -1, -1);

      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 416) + 8))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 448));
    }
    else
    {
      sub_1A55034FC(v19, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v16);
    }
    sub_1A55034FC(v1, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
    return (void *)MEMORY[0x1E0DEE9D8];
  }
  sub_1A55034FC(v2, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  v4 = *(_QWORD *)(v1 + 168);
  v3 = *(_QWORD *)(v1 + 176);
  *(_OWORD *)(v0 + 480) = *(_OWORD *)(v1 + 152);
  v5 = *(_OWORD *)(v1 + 136);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v1 + 120);
  *(_OWORD *)(v0 + 448) = v5;
  v6 = *(_OWORD *)(v1 + 104);
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(v0 + 416) = v6;
  v7 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(v0 + 384) = v7;
  v8 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(v0 + 352) = v8;
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v1 + 8);
  v9 = *(_QWORD *)v1;
  v10 = Capability.applePushService.unsafeMutableAddressor();
  v11 = sub_1A579CCB0(*v10, v10[1], v10[2], *((_BYTE *)v10 + 24), v9);
  *(_QWORD *)v2 = v9;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v2 + 72) = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v2 + 88) = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v2 + 104) = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v2 + 120) = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v2 + 136) = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v2 + 152) = *(_OWORD *)(v0 + 480);
  *(_QWORD *)(v2 + 168) = v4;
  *(_QWORD *)(v2 + 176) = v3;
  if ((v11 & 1) == 0)
  {
    swift_storeEnumTagMultiPayload();
    return (void *)MEMORY[0x1E0DEE9D8];
  }
  swift_storeEnumTagMultiPayload();
  return &unk_1E4E755B0;
}

uint64_t sub_1A58F8410(uint64_t a1, uint64_t a2)
{
  return sub_1A58F9668(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16));
}

uint64_t sub_1A58F842C(unint64_t a1)
{
  if ((a1 >> 62) > 1)
    return 1701736302;
  sub_1A594C720();
  sub_1A594B5F8();
  type metadata accessor for tls_protocol_version_t(0);
  sub_1A594C924();
  sub_1A594B5F8();
  type metadata accessor for tls_ciphersuite_t(0);
  sub_1A594C924();
  return 0;
}

uint64_t sub_1A58F8574()
{
  unint64_t *v0;

  return sub_1A58F842C(*v0);
}

char *sub_1A58F857C(char *a1, int64_t a2, char *__src, int64_t a4)
{
  char *v4;
  size_t v5;
  char *result;

  v4 = __src;
  if (!a4 || !a2)
    return v4;
  if (a4 >= a2)
    v5 = a2;
  else
    v5 = a4;
  if ((v5 & 0x8000000000000000) == 0 && (&a1[v5] <= __src || &__src[v5] <= a1))
  {
    memcpy(a1, __src, v5);
    v4 += v5;
    return v4;
  }
  result = (char *)sub_1A594CA68();
  __break(1u);
  return result;
}

void sub_1A58F868C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD v25[6];
  uint64_t v26;
  char *v27;

  v26 = a1;
  v27 = (char *)a2;
  v2 = type metadata accessor for Authenticator();
  MEMORY[0x1E0C80A78](v2);
  v25[0] = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UnauthenticatedState();
  MEMORY[0x1E0C80A78](v4);
  v25[3] = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v25[5] = (char *)v25 - v7;
  MEMORY[0x1E0C80A78](v8);
  v25[4] = (char *)v25 - v9;
  MEMORY[0x1E0C80A78](v10);
  v25[2] = (char *)v25 - v11;
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  v25[1] = (char *)v25 - v16;
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7981F8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (uint64_t)&v21[*(int *)(v22 + 48)];
  sub_1A55034B8(v26, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  v26 = v23;
  sub_1A55034B8((uint64_t)v27, v23, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  v27 = v21;
  v24 = (char *)sub_1A58F88D0 + 4 * word_1A59E0AF8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A58F88D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  char v7;

  v2 = *(_QWORD *)(v0 + 56);
  sub_1A55034B8(v2, (uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  v3 = *v1;
  v4 = *(uint64_t **)(v0 + 48);
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    sub_1A5510284(v2, &qword_1EE7981F8);
LABEL_8:
    v7 = 0;
    return v7 & 1;
  }
  v5 = *v4;
  if (!v3)
  {
    if (!v5)
      goto LABEL_7;
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    sub_1A55034FC(v2, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
    goto LABEL_8;
  }
  if (!v5)
    goto LABEL_11;
  v6 = sub_1A5793924(v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
    goto LABEL_12;
LABEL_7:
  sub_1A55034FC(v2, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  v7 = 1;
  return v7 & 1;
}

uint64_t sub_1A58F91E4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 176) <= 6u)
    return *(unsigned __int8 *)(a1 + 176);
  else
    return (*(_DWORD *)a1 + 7);
}

uint64_t sub_1A58F91FC(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  switch(a23)
  {
    case 0:
      sub_1A5862270(result);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_8;
    case 1:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A58AAAD0(a2);
      return sub_1A562FDC0(a5, a6, a7);
    case 2:
      return sub_1A586418C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10);
    case 3:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_8;
    case 4:
      return sub_1A5894180(result, a2, a3);
    case 5:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_8:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 6:
      result = sub_1A58F93F4(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A58F93F4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((unint64_t)(a2 - 1) >= 0xA)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t sub_1A58F940C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  switch(a23)
  {
    case 0:
      sub_1A5862B80(result);
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRelease();
      sub_1A5867DDC(a2);
      return sub_1A562FDD4(a5, a6, a7);
    case 2:
      return sub_1A5862344(result, a2, a3, a4, a5, a6, a7, a8, a9, a10);
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 4:
      return sub_1A58F9618(result, a2, a3);
    case 5:
LABEL_3:
      swift_bridgeObjectRelease();
LABEL_7:
      result = swift_bridgeObjectRelease();
      break;
    case 6:
      result = sub_1A5879EF4(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A58F9618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A58F9668(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1)
      return a4 >> 62 == 2 && a4 == 0x8000000000000000 && !(a6 | a5);
    if (a4 >> 62 != 1 || (_DWORD)a1 != (_DWORD)a4)
      return 0;
    if (a3)
    {
      if (a6)
      {
        if (a2 == a5 && a3 == a6)
          return 1;
        return (sub_1A594CD38() & 1) != 0;
      }
      return 0;
    }
    return !a6;
  }
  if (a4 >> 62 || (_DWORD)a1 != (_DWORD)a4)
    return 0;
  if (!a3)
    return !a6;
  if (a6)
  {
    if (a2 == a5 && a3 == a6)
      return 1;
    return (sub_1A594CD38() & 1) != 0;
  }
  return 0;
}

uint64_t sub_1A58F9734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  switch(a2)
  {
    case 1:
      return a4 == 1;
    case 2:
      return a4 == 2;
    case 3:
      return a4 == 3;
    case 4:
      return a4 == 4;
    case 5:
      return a4 == 5;
    case 6:
      return a4 == 6;
    case 7:
      return a4 == 7;
    case 8:
      return a4 == 8;
    case 9:
      return a4 == 9;
    case 10:
      return a4 == 10;
    default:
      if ((unint64_t)(a4 - 1) < 0xA)
        return 0;
      if (a2)
        return a4 && (a1 == a3 && a2 == a4 || (sub_1A594CD38() & 1) != 0);
      if (!a4)
        return 1;
      sub_1A5879EF4(a1, 0);
      return 0;
  }
}

void sub_1A58F982C(__int128 *a1, __int128 *a2)
{
  char *v3;
  __int128 v4[49];
  _BYTE v5[264];
  _BYTE v6[192];

  sub_1A5862234(a2, (uint64_t)v4);
  sub_1A5862234(v4, (uint64_t)v6);
  sub_1A5862234(a1, (uint64_t)v5);
  v3 = (char *)sub_1A58F989C + 4 * word_1A59E0B46[sub_1A58F91E4((uint64_t)v5)];
  __asm { BR              X10 }
}

uint64_t sub_1A58F989C()
{
  __int128 *v0;
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  char v14;
  _BYTE v16[184];
  uint64_t v17;

  nullsub_1(&v17);
  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  sub_1A5862234(v0, (uint64_t)v16);
  if (sub_1A58F91E4((uint64_t)v16))
    goto LABEL_20;
  nullsub_1(v16);
  v7 = *v6;
  v8 = v6[1];
  v10 = v6[2];
  v9 = v6[3];
  v11 = *v6 & 0xF000000000000007;
  if ((~v2 & 0xF000000000000007) != 0)
  {
    if (v11 == 0xF000000000000007)
      goto LABEL_20;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5862270(v7);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5862270(v2);
    static ResponseTextCode.__derived_enum_equals(_:_:)(v2);
    if ((v13 & 1) == 0)
      goto LABEL_15;
  }
  else
  {
    if (v11 != 0xF000000000000007)
      goto LABEL_20;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  if ((v3 != v8 || v4 != v10) && (sub_1A594CD38() & 1) == 0)
  {
LABEL_15:
    sub_1A5862B80(v7);
    swift_bridgeObjectRelease();
    sub_1A5862B80(v2);
    goto LABEL_19;
  }
  if (v5)
  {
    if (v9)
    {
      v14 = sub_1A5793924(v5, v9);
      swift_bridgeObjectRetain_n();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5862B80(v7);
      swift_bridgeObjectRelease();
      sub_1A5862B80(v2);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        goto LABEL_5;
LABEL_20:
      v12 = 0;
      return v12 & 1;
    }
    swift_bridgeObjectRetain_n();
    sub_1A5862B80(v7);
    swift_bridgeObjectRelease();
    sub_1A5862B80(v2);
    swift_bridgeObjectRelease_n();
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5862B80(v7);
  swift_bridgeObjectRelease();
  sub_1A5862B80(v2);
  swift_bridgeObjectRelease();
  if (v9)
    goto LABEL_19;
LABEL_5:
  v12 = 1;
  return v12 & 1;
}

uint64_t sub_1A58FA0D8()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unsigned __int8 v19;
  char v20;
  unsigned __int8 v21;
  char v22;
  char v23;
  char v24;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  result = swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || (v4 = *(_QWORD *)(v1 + 24) >> 1, v4 < v2))
  {
    result = (uint64_t)sub_1A58D3CAC((char *)result, v2, 1, (char *)v1);
    v1 = result;
    v4 = *(_QWORD *)(result + 24) >> 1;
  }
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v4 - v5;
  if (v4 == v5)
  {
    v7 = 0;
  }
  else
  {
    if (v6 < 1)
    {
      __break(1u);
      goto LABEL_30;
    }
    result = sub_1A594CA80();
    if ((v24 & 1) != 0)
    {
      v7 = 0;
    }
    else
    {
      v7 = 0;
      v8 = v23;
      v9 = ~v5 + v4;
      do
      {
        *(_BYTE *)(v1 + v5 + 32 + v7) = v8;
        if (v9 == v7)
        {
          v7 = v6;
          goto LABEL_15;
        }
        result = sub_1A594CA80();
        v8 = v23;
        ++v7;
      }
      while ((v24 & 1) == 0);
      if (!v7)
        goto LABEL_17;
LABEL_15:
      v10 = *(_QWORD *)(v1 + 16);
      v11 = __OFADD__(v10, v7);
      v12 = v10 + v7;
      if (v11)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v1 + 16) = v12;
    }
  }
LABEL_17:
  if (v7 != v6)
    goto LABEL_18;
  v6 = *(_QWORD *)(v1 + 16);
  result = sub_1A594CA80();
  if ((v22 & 1) != 0)
    goto LABEL_18;
  v13 = v21;
  while (1)
  {
    v14 = *(_QWORD *)(v1 + 24);
    v15 = v14 >> 1;
    if ((uint64_t)(v14 >> 1) < v6 + 1)
      break;
    if (v6 < v15)
      goto LABEL_24;
LABEL_21:
    *(_QWORD *)(v1 + 16) = v6;
  }
  v16 = (char *)v1;
  v17 = v13;
  v18 = sub_1A58D3CAC((char *)(v14 > 1), v6 + 1, 1, v16);
  v13 = v17;
  v1 = (uint64_t)v18;
  v15 = *((_QWORD *)v18 + 3) >> 1;
  if (v6 >= v15)
    goto LABEL_21;
LABEL_24:
  while (1)
  {
    *(_BYTE *)(v1 + v6++ + 32) = v13;
    result = sub_1A594CA80();
    if ((v20 & 1) != 0)
      break;
    v13 = v19;
    if (v15 == v6)
    {
      v6 = v15;
      goto LABEL_21;
    }
  }
LABEL_30:
  *(_QWORD *)(v1 + 16) = v6;
LABEL_18:
  *v0 = v1;
  return result;
}

uint64_t sub_1A58FA2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v4 = sub_1A5949B40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = a1;
  v13[1] = a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5949B28();
  sub_1A58A7F10();
  v8 = sub_1A594C45C();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v8;
}

unint64_t sub_1A58FA394(char *a1, char *a2, uint64_t a3, void (*a4)(__n128 *__return_ptr, uint64_t), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  NSObject *v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  int64_t v75;
  char *v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t *v86;
  _OWORD *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t *v100;
  unint64_t v101;
  void *v102;
  unint64_t *v103;
  uint64_t *v104;
  char *v105;
  int EnumCaseMultiPayload;
  void (*v107)(os_log_t, char *, uint64_t);
  os_log_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  os_log_t v123;
  int v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  NSObject *v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  int64_t isa;
  unint64_t v137;
  NSObject *v138;
  Class v139;
  Class v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  NSObject *v147;
  os_log_type_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  const void *v158;
  __n128 *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t *v164;
  NSObject *v165;
  os_log_type_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  NSObject *v175;
  os_log_type_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  NSObject *v189;
  os_log_type_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  unint64_t v199;
  os_log_t v200;
  char *v201;
  uint64_t v202;
  NSObject *v203;
  os_log_type_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  const void *v211;
  const void *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  NSObject *v220;
  int v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  int64_t v226;
  unint64_t v227;
  NSObject *v228;
  Class v229;
  Class v230;
  unint64_t v231;
  unint64_t v232;
  unint64_t v233;
  const void *v234;
  const void *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  const void *v240;
  char *v241;
  const void *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  unint64_t v247;
  char *v248;
  os_log_t v249;
  unint64_t v250;
  uint64_t v251;
  unint64_t v252;
  unint64_t v253;
  char *v254;
  os_log_t v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  unint64_t v262;
  os_log_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  void (*v272)(__n128 *__return_ptr, uint64_t);
  char *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  unint64_t v278;
  uint64_t v279;
  os_log_t v280;
  os_log_t v281;
  char *v282;
  uint64_t v283;
  _OWORD *v284;
  char *v285;
  uint64_t v286;
  const void *v287;
  uint64_t v288;
  _BYTE v289[576];
  __n128 v290;
  __n128 v291[35];
  uint64_t v292[73];
  __n128 v293;
  __n128 v294[2];
  _BYTE v295[584];
  _BYTE v296[584];
  unint64_t v297;
  __n128 v298[2];
  _BYTE v299[24];
  uint64_t v300;
  unint64_t v301;
  unint64_t v302;
  _BYTE v303[592];

  v271 = a5;
  v272 = a4;
  v285 = a2;
  sub_1A552316C(a1, v295);
  sub_1A552316C(v295, v303);
  v283 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v283);
  v279 = (uint64_t)&v265 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v278 = (unint64_t)&v265 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v265 - v11;
  MEMORY[0x1E0C80A78](v13);
  v270 = (uint64_t)&v265 - v14;
  MEMORY[0x1E0C80A78](v15);
  v269 = (uint64_t)&v265 - v16;
  MEMORY[0x1E0C80A78](v17);
  v275 = (uint64_t)&v265 - v18;
  MEMORY[0x1E0C80A78](v19);
  v267 = (uint64_t)&v265 - v20;
  MEMORY[0x1E0C80A78](v21);
  v276 = (uint64_t)&v265 - v22;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v265 - v24;
  MEMORY[0x1E0C80A78](v26);
  v277 = (uint64_t)&v265 - v27;
  v286 = sub_1A594A764();
  v288 = *(_QWORD *)(v286 - 8);
  MEMORY[0x1E0C80A78](v286);
  v282 = (char *)&v265 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v281 = (os_log_t)((char *)&v265 - v30);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v265 - v32;
  MEMORY[0x1E0C80A78](v34);
  v274 = (char *)&v265 - v35;
  MEMORY[0x1E0C80A78](v36);
  v273 = (char *)&v265 - v37;
  MEMORY[0x1E0C80A78](v38);
  v280 = (os_log_t)((char *)&v265 - v39);
  MEMORY[0x1E0C80A78](v40);
  v268 = (char *)&v265 - v41;
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v265 - v43;
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v265 - v46;
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)&v265 - v49;
  v51 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795D40);
  MEMORY[0x1E0C80A78](v51);
  v53 = (char *)&v265 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = (uint64_t)&v53[*(int *)(v54 + 48)];
  v287 = v53;
  sub_1A552316C(a1, v53);
  v284 = (_OWORD *)a3;
  v56 = a3;
  v57 = a1;
  sub_1A55034B8(v56, v55, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  sub_1A552316C(a1, v296);
  switch(sub_1A5523B90((uint64_t)v296))
  {
    case 0u:
      v58 = sub_1A5524678((uint64_t)v296);
      v59 = *(_QWORD *)(v58 + 16);
      *(_OWORD *)v299 = *(_OWORD *)v58;
      *(_QWORD *)&v299[16] = v59;
      type metadata accessor for UnauthenticatedState();
      v266 = v55;
      if (swift_getEnumCaseMultiPayload() != 10)
      {
        v160 = v288;
        v161 = v285;
        v162 = v286;
        (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v44, v285, v286);
        v163 = v276;
        sub_1A55034B8((uint64_t)v161, v276, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        sub_1A552316C(v303, v292);
        v164 = (unint64_t *)sub_1A5524678((uint64_t)v292);
        sub_1A5862270(*v164);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v165 = sub_1A594A74C();
        v166 = sub_1A594C00C();
        if (os_log_type_enabled(v165, v166))
        {
          v167 = swift_slowAlloc();
          v168 = swift_slowAlloc();
          v290.n128_u64[0] = v168;
          *(_DWORD *)v167 = 68158210;
          *(_DWORD *)v289 = 2;
          sub_1A594C3CC();
          *(_WORD *)(v167 + 8) = 256;
          v169 = v163 + *(int *)(v283 + 20);
          v289[0] = *(_BYTE *)v169;
          sub_1A594C3CC();
          *(_WORD *)(v167 + 11) = 2082;
          v170 = ConnectionID.debugDescription.getter(*(unsigned int *)(v169 + 4));
          *(_QWORD *)v289 = sub_1A589167C(v170, v171, (uint64_t *)&v290);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC(v163, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          _os_log_impl(&dword_1A4F90000, v165, v166, "[%.*hhx-%{public}s] Untagged OK from server.", (uint8_t *)v167, 0x15u);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v168, -1, -1);
          MEMORY[0x1A85B1964](v167, -1, -1);

          (*(void (**)(char *, uint64_t))(v288 + 8))(v44, v286);
        }
        else
        {
          sub_1A55034FC(v163, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

          (*(void (**)(char *, uint64_t))(v160 + 8))(v44, v162);
        }
        sub_1A55034FC(v266, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
        v234 = v287;
        goto LABEL_74;
      }
      sub_1A55032A0((uint64_t)v299, (uint64_t)&v297, &qword_1EE795BD8);
      v298[0] = *(__n128 *)&v299[8];
      sub_1A55032A0((uint64_t)&v297, (uint64_t)&v300, &qword_1EE795BD8);
      v60 = v286;
      v61 = v288;
      if ((~v300 & 0xF000000000000007) == 0
        || (sub_1A561EA1C(&v300, &v301),
            sub_1A561EA1C(&v301, &v302),
            v62 = v302,
            ((v62 >> 59) & 0x1E | (v62 >> 2) & 1) != 1))
      {
        sub_1A5523B9C(a1, sub_1A586238C);
        sub_1A58D18E0(&v297);
        sub_1A5524B84((uint64_t)v298);
        sub_1A55034FC((uint64_t)v284, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
        v200 = v280;
        v201 = v285;
        (*(void (**)(os_log_t, char *, uint64_t))(v61 + 16))(v280, v285, v60);
        v202 = v275;
        sub_1A55034B8((uint64_t)v201, v275, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v203 = sub_1A594A74C();
        v204 = sub_1A594C00C();
        if (os_log_type_enabled(v203, v204))
        {
          v205 = swift_slowAlloc();
          v206 = swift_slowAlloc();
          v292[0] = v206;
          *(_DWORD *)v205 = 68158210;
          v290.n128_u32[0] = 2;
          sub_1A594C3CC();
          *(_WORD *)(v205 + 8) = 256;
          v207 = v202;
          v208 = v202 + *(int *)(v283 + 20);
          v290.n128_u8[0] = *(_BYTE *)v208;
          sub_1A594C3CC();
          *(_WORD *)(v205 + 11) = 2082;
          v209 = ConnectionID.debugDescription.getter(*(unsigned int *)(v208 + 4));
          v290.n128_u64[0] = sub_1A589167C(v209, v210, v292);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC(v207, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          _os_log_impl(&dword_1A4F90000, v203, v204, "[%.*hhx-%{public}s] Received OK greeting from server.", (uint8_t *)v205, 0x15u);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v206, -1, -1);
          MEMORY[0x1A85B1964](v205, -1, -1);

          sub_1A58D1908(&v297);
          sub_1A5503278((uint64_t)v298);
          (*(void (**)(os_log_t, uint64_t))(v288 + 8))(v280, v286);
        }
        else
        {
          sub_1A58D1908(&v297);
          sub_1A5503278((uint64_t)v298);
          sub_1A55034FC(v202, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

          (*(void (**)(os_log_t, uint64_t))(v61 + 8))(v200, v60);
        }
        v240 = v287;
        swift_storeEnumTagMultiPayload();
        v158 = v240;
        goto LABEL_34;
      }
      v302 &= 0xFFFFFFFFFFFFFFBuLL;
      v63 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      v64 = v268;
      v65 = v285;
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v268, v285, v60);
      v66 = v267;
      sub_1A55034B8((uint64_t)v65, v267, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      sub_1A5523B9C(a1, sub_1A586238C);
      sub_1A58D18E0(&v297);
      sub_1A5524B84((uint64_t)v298);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_bridgeObjectRetain_n();
      v67 = sub_1A594A74C();
      v68 = sub_1A594C00C();
      if (os_log_type_enabled(v67, (os_log_type_t)v68))
      {
        LODWORD(v280) = v68;
        v281 = v67;
        v69 = v61;
        v70 = v66;
        v71 = swift_slowAlloc();
        v279 = swift_slowAlloc();
        v292[0] = v279;
        *(_DWORD *)v71 = 68158466;
        v290.n128_u32[0] = 2;
        sub_1A594C3CC();
        *(_WORD *)(v71 + 8) = 256;
        v72 = v70 + *(int *)(v283 + 20);
        v290.n128_u8[0] = *(_BYTE *)v72;
        sub_1A594C3CC();
        *(_WORD *)(v71 + 11) = 2082;
        v73 = ConnectionID.debugDescription.getter(*(unsigned int *)(v72 + 4));
        v290.n128_u64[0] = sub_1A589167C(v73, v74, v292);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v70, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        *(_WORD *)(v71 + 21) = 2080;
        v75 = *(_QWORD *)(v63 + 16);
        v76 = (char *)v63;
        v77 = MEMORY[0x1E0DEE9D8];
        v282 = v76;
        if (v75)
        {
          v290.n128_u64[0] = MEMORY[0x1E0DEE9D8];
          sub_1A58BF7A4(0, v75, 0);
          v77 = v290.n128_u64[0];
          v78 = (uint64_t *)(v76 + 40);
          do
          {
            v79 = *(v78 - 1);
            v80 = *v78;
            v290.n128_u64[0] = v77;
            v82 = *(_QWORD *)(v77 + 16);
            v81 = *(_QWORD *)(v77 + 24);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            if (v82 >= v81 >> 1)
            {
              sub_1A58BF7A4(v81 > 1, v82 + 1, 1);
              v77 = v290.n128_u64[0];
            }
            v78 += 4;
            *(_QWORD *)(v77 + 16) = v82 + 1;
            v83 = v77 + 16 * v82;
            *(_QWORD *)(v83 + 32) = v79;
            *(_QWORD *)(v83 + 40) = v80;
            --v75;
          }
          while (v75);
          v259 = v288;
        }
        else
        {
          v259 = v69;
        }
        v290.n128_u64[0] = v77;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A60);
        sub_1A54E2E30((unint64_t *)&qword_1EE795FA8, &qword_1EE799A60, MEMORY[0x1E0DEAF20]);
        v260 = sub_1A594B268();
        v262 = v261;
        swift_bridgeObjectRelease();
        v290.n128_u64[0] = sub_1A589167C(v260, v262, v292);
        sub_1A594C3CC();
        v63 = (uint64_t)v282;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v263 = v281;
        _os_log_impl(&dword_1A4F90000, v281, (os_log_type_t)v280, "[%.*hhx-%{public}s] Received OK greeting with capabilities from server: %s.", (uint8_t *)v71, 0x1Fu);
        v264 = v279;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v264, -1, -1);
        MEMORY[0x1A85B1964](v71, -1, -1);

        v258 = (*(uint64_t (**)(char *, uint64_t))(v259 + 8))(v268, v286);
      }
      else
      {
        sub_1A55034FC(v66, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

        swift_bridgeObjectRelease_n();
        v258 = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v64, v60);
      }
      v272(&v290, v258);
      v238 = sub_1A58F3908(v63, (uint64_t)&v290, v285);
      sub_1A5868834(&v290, (__n128 *)v289);
      sub_1A5893044((uint64_t *)v289);
      sub_1A58687F8(v291, &v293);
      sub_1A5893070((uint64_t *)&v293);
      swift_bridgeObjectRelease();
      sub_1A58D1908(&v297);
      sub_1A5503278((uint64_t)v298);
      sub_1A552316C(v287, v292);
      sub_1A5523B9C(v292, sub_1A5862784);
      return v238;
    case 3u:
      v84 = sub_1A5524678((uint64_t)v296);
      v85 = *(_QWORD *)(v84 + 16);
      *(_OWORD *)v289 = *(_OWORD *)v84;
      *(_QWORD *)&v289[16] = v85;
      sub_1A552316C(v303, v292);
      v86 = (unint64_t *)sub_1A5524678((uint64_t)v292);
      sub_1A5862270(*v86);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v87 = v284;
      sub_1A55034FC((uint64_t)v284, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
      v282 = (char *)type metadata accessor for UnauthenticatedState();
      if (swift_getEnumCaseMultiPayload() != 10)
      {
        v172 = v288;
        v173 = v285;
        v174 = v286;
        (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v47, v285, v286);
        sub_1A55034B8((uint64_t)v173, (uint64_t)v25, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v175 = sub_1A594A74C();
        v176 = sub_1A594C018();
        if (os_log_type_enabled(v175, v176))
        {
          v177 = swift_slowAlloc();
          v266 = v55;
          v178 = v177;
          v179 = swift_slowAlloc();
          v290.n128_u64[0] = v179;
          *(_DWORD *)v178 = 68158210;
          v293.n128_u32[0] = 2;
          sub_1A594C3CC();
          *(_WORD *)(v178 + 8) = 256;
          v180 = &v25[*(int *)(v283 + 20)];
          v293.n128_u8[0] = *v180;
          sub_1A594C3CC();
          *(_WORD *)(v178 + 11) = 2082;
          v181 = ConnectionID.debugDescription.getter(*((unsigned int *)v180 + 1));
          v293.n128_u64[0] = sub_1A589167C(v181, v182, (uint64_t *)&v290);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC((uint64_t)v25, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          _os_log_impl(&dword_1A4F90000, v175, v176, "[%.*hhx-%{public}s] Received unexpected PREAUTH greeting from server.", (uint8_t *)v178, 0x15u);
          swift_arrayDestroy();
          v183 = v179;
          v87 = v284;
          MEMORY[0x1A85B1964](v183, -1, -1);
          v184 = v178;
          v55 = v266;
          MEMORY[0x1A85B1964](v184, -1, -1);

          (*(void (**)(char *, uint64_t))(v288 + 8))(v47, v174);
        }
        else
        {
          sub_1A55034FC((uint64_t)v25, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

          (*(void (**)(char *, uint64_t))(v172 + 8))(v47, v174);
        }
        v235 = v287;
        *v87 = xmmword_1A59ABD60;
        swift_storeEnumTagMultiPayload();
        sub_1A55034FC(v55, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
        v234 = v235;
        goto LABEL_74;
      }
      sub_1A55032A0((uint64_t)v289, (uint64_t)&v301, &qword_1EE795BD8);
      v293 = *(__n128 *)&v289[8];
      v88 = v288;
      v89 = v285;
      v90 = v286;
      (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v50, v285, v286);
      v91 = v277;
      sub_1A55034B8((uint64_t)v89, v277, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      sub_1A58D18E0(&v301);
      sub_1A5524B84((uint64_t)&v293);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v92 = sub_1A594A74C();
      v93 = sub_1A594C00C();
      if (os_log_type_enabled(v92, v93))
      {
        v94 = swift_slowAlloc();
        v95 = swift_slowAlloc();
        v290.n128_u64[0] = v95;
        *(_DWORD *)v94 = 68158210;
        *(_DWORD *)v299 = 2;
        sub_1A594C3CC();
        *(_WORD *)(v94 + 8) = 256;
        v96 = v91 + *(int *)(v283 + 20);
        v299[0] = *(_BYTE *)v96;
        sub_1A594C3CC();
        *(_WORD *)(v94 + 11) = 2082;
        v97 = ConnectionID.debugDescription.getter(*(unsigned int *)(v96 + 4));
        *(_QWORD *)v299 = sub_1A589167C(v97, v98, (uint64_t *)&v290);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v91, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        _os_log_impl(&dword_1A4F90000, v92, v93, "[%.*hhx-%{public}s] Received PREAUTH greeting from server. Requesting credentials.", (uint8_t *)v94, 0x15u);
        swift_arrayDestroy();
        v99 = v95;
        v87 = v284;
        MEMORY[0x1A85B1964](v99, -1, -1);
        MEMORY[0x1A85B1964](v94, -1, -1);

        (*(void (**)(char *, uint64_t))(v288 + 8))(v50, v286);
      }
      else
      {
        sub_1A55034FC(v91, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

        (*(void (**)(char *, uint64_t))(v88 + 8))(v50, v90);
      }
      v211 = v287;
      sub_1A55032A0((uint64_t)&v301, (uint64_t)&v302, &qword_1EE795BD8);
      if ((~v302 & 0xF000000000000007) != 0)
      {
        sub_1A561EA1C(&v302, v298);
        sub_1A5503278((uint64_t)&v293);
        sub_1A561EA1C(v298, v299);
        if (((*(_QWORD *)v299 >> 59) & 0x1E | (*(_DWORD *)v299 >> 2) & 1) == 1)
        {
          *(_QWORD *)v299 &= 0xFFFFFFFFFFFFFFBuLL;
          v236 = *(_QWORD *)(*(_QWORD *)v299 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A58D1908(&v301);
          goto LABEL_84;
        }
        sub_1A58D1908(&v301);
      }
      else
      {
        sub_1A5503278((uint64_t)&v293);
      }
      v236 = 0;
LABEL_84:
      *(_QWORD *)v87 = v236;
      swift_storeEnumTagMultiPayload();
      sub_1A552316C(v211, &v290);
      sub_1A5523B9C(&v290, sub_1A5862784);
      return 0x8000000000000001;
    case 4u:
      v100 = (unint64_t *)sub_1A5524678((uint64_t)v296);
      v101 = *v100;
      v280 = (os_log_t)v100[1];
      v102 = (void *)v100[2];
      sub_1A552316C(v303, v292);
      v103 = (unint64_t *)sub_1A5524678((uint64_t)v292);
      sub_1A5862270(*v103);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v104 = (uint64_t *)v284;
      sub_1A55034FC((uint64_t)v284, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
      v105 = (char *)type metadata accessor for UnauthenticatedState();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v107 = *(void (**)(os_log_t, char *, uint64_t))(v288 + 16);
      v266 = v55;
      if (EnumCaseMultiPayload == 2)
      {
        v108 = v281;
        v109 = v285;
        v110 = v286;
        v107(v281, v285, v286);
        v111 = v278;
        sub_1A55034B8((uint64_t)v109, v278, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        sub_1A5862270(v101);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        sub_1A5862270(v101);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5862270(v101);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v112 = sub_1A594A74C();
        v113 = sub_1A594C018();
        LODWORD(v282) = v113;
        if (os_log_type_enabled(v112, v113))
        {
          v114 = swift_slowAlloc();
          v279 = swift_slowAlloc();
          v290.n128_u64[0] = v279;
          *(_DWORD *)v114 = 68158466;
          *(_DWORD *)v289 = 2;
          v285 = v105;
          sub_1A594C3CC();
          *(_WORD *)(v114 + 8) = 256;
          v115 = v111 + *(int *)(v283 + 20);
          v289[0] = *(_BYTE *)v115;
          sub_1A594C3CC();
          *(_WORD *)(v114 + 11) = 2082;
          v116 = ConnectionID.debugDescription.getter(*(unsigned int *)(v115 + 4));
          *(_QWORD *)v289 = sub_1A589167C(v116, v117, (uint64_t *)&v290);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC(v111, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          *(_WORD *)(v114 + 21) = 2080;
          sub_1A5862270(v101);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          ResponseText.debugDescription.getter(v101, (uint64_t)v280, v102);
          v119 = v118;
          v121 = v120;
          sub_1A5862B80(v101);
          swift_bridgeObjectRelease();
          *(_QWORD *)v289 = sub_1A589167C(v119, v121, (uint64_t *)&v290);
          v104 = (uint64_t *)v284;
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A5862B80(v101);
          swift_bridgeObjectRelease();
          sub_1A5862B80(v101);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v112, (os_log_type_t)v282, "[%.*hhx-%{public}s] Server sent BYE while authenticating: %s", (uint8_t *)v114, 0x1Fu);
          v122 = v279;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v122, -1, -1);
          MEMORY[0x1A85B1964](v114, -1, -1);

          (*(void (**)(os_log_t, uint64_t))(v288 + 8))(v281, v286);
        }
        else
        {
          sub_1A55034FC(v111, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          sub_1A5862B80(v101);
          swift_bridgeObjectRelease();
          sub_1A5862B80(v101);

          swift_bridgeObjectRelease();
          (*(void (**)(os_log_t, uint64_t))(v288 + 8))(v108, v110);
        }
        v212 = v287;
        if ((~v101 & 0xF000000000000007) == 0)
        {
          v213 = 0;
          v214 = 2;
          goto LABEL_73;
        }
        v213 = 0;
        v214 = 2;
      }
      else
      {
        v185 = v282;
        v186 = v285;
        v187 = v286;
        v107((os_log_t)v282, v285, v286);
        v188 = v279;
        sub_1A55034B8((uint64_t)v186, v279, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        sub_1A5862270(v101);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        sub_1A5862270(v101);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5862270(v101);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v189 = sub_1A594A74C();
        v190 = sub_1A594C018();
        LODWORD(v281) = v190;
        if (os_log_type_enabled(v189, v190))
        {
          v191 = swift_slowAlloc();
          v278 = swift_slowAlloc();
          v290.n128_u64[0] = v278;
          *(_DWORD *)v191 = 68158466;
          *(_DWORD *)v289 = 2;
          v285 = v105;
          sub_1A594C3CC();
          *(_WORD *)(v191 + 8) = 256;
          v192 = v188 + *(int *)(v283 + 20);
          v289[0] = *(_BYTE *)v192;
          sub_1A594C3CC();
          *(_WORD *)(v191 + 11) = 2082;
          v193 = ConnectionID.debugDescription.getter(*(unsigned int *)(v192 + 4));
          *(_QWORD *)v289 = sub_1A589167C(v193, v194, (uint64_t *)&v290);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC(v188, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          *(_WORD *)(v191 + 21) = 2080;
          sub_1A5862270(v101);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          ResponseText.debugDescription.getter(v101, (uint64_t)v280, v102);
          v196 = v195;
          v198 = v197;
          sub_1A5862B80(v101);
          swift_bridgeObjectRelease();
          *(_QWORD *)v289 = sub_1A589167C(v196, v198, (uint64_t *)&v290);
          v104 = (uint64_t *)v284;
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A5862B80(v101);
          swift_bridgeObjectRelease();
          sub_1A5862B80(v101);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v189, (os_log_type_t)v281, "[%.*hhx-%{public}s] Server sent BYE: %s", (uint8_t *)v191, 0x1Fu);
          v199 = v278;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v199, -1, -1);
          MEMORY[0x1A85B1964](v191, -1, -1);

          (*(void (**)(char *, uint64_t))(v288 + 8))(v282, v286);
        }
        else
        {
          sub_1A55034FC(v188, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          sub_1A5862B80(v101);
          swift_bridgeObjectRelease();
          sub_1A5862B80(v101);

          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v288 + 8))(v185, v187);
        }
        v212 = v287;
        if ((~v101 & 0xF000000000000007) == 0)
        {
          v213 = 0;
          v214 = 6;
          goto LABEL_73;
        }
        v213 = 0;
        v214 = 6;
      }
      if (v101 == 0x80000000000000D8)
      {
        sub_1A5862284(0x80000000000000D8);
        v213 = sub_1A58FA2A8((uint64_t)v280, (uint64_t)v102);
        v214 = v237;
        v101 = 0x80000000000000D8;
      }
      sub_1A5862B80(v101);
LABEL_73:
      swift_bridgeObjectRelease();
      *v104 = v213;
      v104[1] = v214;
      swift_storeEnumTagMultiPayload();
      sub_1A55034FC(v266, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
      v234 = v212;
LABEL_74:
      sub_1A552316C(v234, &v290);
      v159 = &v290;
      goto LABEL_75;
    case 5u:
      v123 = *(os_log_t *)sub_1A5524678((uint64_t)v296);
      type metadata accessor for UnauthenticatedState();
      v124 = swift_getEnumCaseMultiPayload();
      if (v124 == 2)
      {
        sub_1A552316C(v303, &v290);
        sub_1A5524678((uint64_t)&v290);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_32:
        v156 = v55;
LABEL_33:
        sub_1A55034FC(v156, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
        v158 = v287;
LABEL_34:
        sub_1A552316C(v158, v292);
        v159 = (__n128 *)v292;
LABEL_75:
        sub_1A5523B9C(v159, sub_1A5862784);
        return 0xFFFFFFFF00000000;
      }
      if (v124 != 11)
      {
        if (v124 == 14)
        {
          v282 = a1;
          v125 = v288;
          v126 = v274;
          v128 = v285;
          v127 = v286;
          (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v274, v285, v286);
          v129 = v270;
          sub_1A55034B8((uint64_t)v128, v270, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          sub_1A552316C(v303, &v290);
          sub_1A5524678((uint64_t)&v290);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          sub_1A552316C(v303, v292);
          sub_1A5524678((uint64_t)v292);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v130 = sub_1A594A74C();
          v131 = sub_1A594C030();
          if (os_log_type_enabled(v130, (os_log_type_t)v131))
          {
            LODWORD(v279) = v131;
            v280 = v130;
            v132 = swift_slowAlloc();
            v278 = swift_slowAlloc();
            *(_QWORD *)v289 = v278;
            *(_DWORD *)v132 = 68158466;
            v293.n128_u32[0] = 2;
            sub_1A594C3CC();
            *(_WORD *)(v132 + 8) = 256;
            v133 = v129 + *(int *)(v283 + 20);
            v293.n128_u8[0] = *(_BYTE *)v133;
            sub_1A594C3CC();
            *(_WORD *)(v132 + 11) = 2082;
            v134 = ConnectionID.debugDescription.getter(*(unsigned int *)(v133 + 4));
            v293.n128_u64[0] = sub_1A589167C(v134, v135, (uint64_t *)v289);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A55034FC(v129, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
            *(_WORD *)(v132 + 21) = 2080;
            isa = (int64_t)v123[2].isa;
            v137 = MEMORY[0x1E0DEE9D8];
            v281 = v123;
            if (isa)
            {
              v293.n128_u64[0] = MEMORY[0x1E0DEE9D8];
              sub_1A58BF7A4(0, isa, 0);
              v137 = v293.n128_u64[0];
              v138 = v123 + 5;
              do
              {
                v139 = v138[-1].isa;
                v140 = v138->isa;
                v293.n128_u64[0] = v137;
                v142 = *(_QWORD *)(v137 + 16);
                v141 = *(_QWORD *)(v137 + 24);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                if (v142 >= v141 >> 1)
                {
                  sub_1A58BF7A4(v141 > 1, v142 + 1, 1);
                  v137 = v293.n128_u64[0];
                }
                v138 += 4;
                *(_QWORD *)(v137 + 16) = v142 + 1;
                v143 = v137 + 16 * v142;
                *(_QWORD *)(v143 + 32) = v139;
                *(_QWORD *)(v143 + 40) = v140;
                --isa;
              }
              while (isa);
              v125 = v288;
              v128 = v285;
            }
            v293.n128_u64[0] = v137;
            __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A60);
            sub_1A54E2E30((unint64_t *)&qword_1EE795FA8, &qword_1EE799A60, MEMORY[0x1E0DEAF20]);
            v245 = sub_1A594B268();
            v247 = v246;
            swift_bridgeObjectRelease();
            v293.n128_u64[0] = sub_1A589167C(v245, v247, (uint64_t *)v289);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            v248 = v282;
            sub_1A5523B9C(v282, sub_1A5862784);
            sub_1A5523B9C(v248, sub_1A5862784);
            v249 = v280;
            _os_log_impl(&dword_1A4F90000, v280, (os_log_type_t)v279, "[%.*hhx-%{public}s] Got post-auth capabilities: %s.", (uint8_t *)v132, 0x1Fu);
            v250 = v278;
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v250, -1, -1);
            MEMORY[0x1A85B1964](v132, -1, -1);

            (*(void (**)(char *, uint64_t))(v125 + 8))(v274, v286);
            v242 = v287;
            v123 = v281;
          }
          else
          {
            sub_1A55034FC(v129, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
            v241 = v282;
            sub_1A5523B9C(v282, sub_1A5862784);
            sub_1A5523B9C(v241, sub_1A5862784);

            (*(void (**)(char *, uint64_t))(v125 + 8))(v126, v127);
            v242 = v287;
          }
          v238 = sub_1A58F46A8((uint64_t)v123, (uint64_t)v128);
          sub_1A552316C(v242, v289);
          sub_1A5523B9C(v289, sub_1A5862784);
          return v238;
        }
LABEL_28:
        v144 = v288;
        v145 = v285;
        v146 = v286;
        (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v33, v285, v286);
        sub_1A55034B8((uint64_t)v145, (uint64_t)v12, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        sub_1A5523B9C(a1, sub_1A586238C);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        sub_1A5523B9C(a1, sub_1A586238C);
        sub_1A5523B9C(a1, sub_1A586238C);
        v147 = sub_1A594A74C();
        v148 = sub_1A594C018();
        if (os_log_type_enabled(v147, v148))
        {
          v149 = swift_slowAlloc();
          v285 = (char *)swift_slowAlloc();
          v292[0] = (uint64_t)v285;
          *(_DWORD *)v149 = 68158466;
          v290.n128_u32[0] = 2;
          sub_1A594C3CC();
          *(_WORD *)(v149 + 8) = 256;
          v150 = &v12[*(int *)(v283 + 20)];
          v290.n128_u8[0] = *v150;
          sub_1A594C3CC();
          *(_WORD *)(v149 + 11) = 2082;
          v151 = ConnectionID.debugDescription.getter(*((unsigned int *)v150 + 1));
          v290.n128_u64[0] = sub_1A589167C(v151, v152, v292);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC((uint64_t)v12, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          *(_WORD *)(v149 + 21) = 2080;
          UntaggedResponse.name.getter();
          v290.n128_u64[0] = sub_1A589167C(v153, v154, v292);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A5523B9C(v57, sub_1A5862784);
          sub_1A5523B9C(v57, sub_1A5862784);
          _os_log_impl(&dword_1A4F90000, v147, v148, "[%.*hhx-%{public}s] Ignoring unexpected %s.", (uint8_t *)v149, 0x1Fu);
          v155 = v285;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v155, -1, -1);
          MEMORY[0x1A85B1964](v149, -1, -1);

          (*(void (**)(char *, uint64_t))(v288 + 8))(v33, v286);
        }
        else
        {
          sub_1A55034FC((uint64_t)v12, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          sub_1A5523B9C(a1, sub_1A5862784);
          sub_1A5523B9C(a1, sub_1A5862784);

          (*(void (**)(char *, uint64_t))(v144 + 8))(v33, v146);
        }
        sub_1A5510284((uint64_t)v287, &qword_1EE795D40);
        return 0xFFFFFFFF00000000;
      }
      v282 = a1;
      v215 = v288;
      v216 = v273;
      v218 = v285;
      v217 = v286;
      (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v273, v285, v286);
      v219 = v269;
      sub_1A55034B8((uint64_t)v218, v269, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      sub_1A552316C(v303, &v290);
      sub_1A5524678((uint64_t)&v290);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A552316C(v303, v292);
      sub_1A5524678((uint64_t)v292);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v220 = sub_1A594A74C();
      v221 = sub_1A594C030();
      if (os_log_type_enabled(v220, (os_log_type_t)v221))
      {
        LODWORD(v279) = v221;
        v280 = v220;
        v222 = swift_slowAlloc();
        v278 = swift_slowAlloc();
        *(_QWORD *)v289 = v278;
        *(_DWORD *)v222 = 68158466;
        v293.n128_u32[0] = 2;
        sub_1A594C3CC();
        *(_WORD *)(v222 + 8) = 256;
        v223 = v219 + *(int *)(v283 + 20);
        v293.n128_u8[0] = *(_BYTE *)v223;
        sub_1A594C3CC();
        *(_WORD *)(v222 + 11) = 2082;
        v224 = ConnectionID.debugDescription.getter(*(unsigned int *)(v223 + 4));
        v293.n128_u64[0] = sub_1A589167C(v224, v225, (uint64_t *)v289);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v219, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        *(_WORD *)(v222 + 21) = 2080;
        v226 = (int64_t)v123[2].isa;
        v227 = MEMORY[0x1E0DEE9D8];
        v281 = v123;
        if (v226)
        {
          v293.n128_u64[0] = MEMORY[0x1E0DEE9D8];
          sub_1A58BF7A4(0, v226, 0);
          v227 = v293.n128_u64[0];
          v228 = v123 + 5;
          do
          {
            v229 = v228[-1].isa;
            v230 = v228->isa;
            v293.n128_u64[0] = v227;
            v232 = *(_QWORD *)(v227 + 16);
            v231 = *(_QWORD *)(v227 + 24);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            if (v232 >= v231 >> 1)
            {
              sub_1A58BF7A4(v231 > 1, v232 + 1, 1);
              v227 = v293.n128_u64[0];
            }
            v228 += 4;
            *(_QWORD *)(v227 + 16) = v232 + 1;
            v233 = v227 + 16 * v232;
            *(_QWORD *)(v233 + 32) = v229;
            *(_QWORD *)(v233 + 40) = v230;
            --v226;
          }
          while (v226);
          v215 = v288;
          v218 = v285;
        }
        v293.n128_u64[0] = v227;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A60);
        sub_1A54E2E30((unint64_t *)&qword_1EE795FA8, &qword_1EE799A60, MEMORY[0x1E0DEAF20]);
        v251 = sub_1A594B268();
        v253 = v252;
        swift_bridgeObjectRelease();
        v293.n128_u64[0] = sub_1A589167C(v251, v253, (uint64_t *)v289);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        v254 = v282;
        sub_1A5523B9C(v282, sub_1A5862784);
        sub_1A5523B9C(v254, sub_1A5862784);
        v255 = v280;
        _os_log_impl(&dword_1A4F90000, v280, (os_log_type_t)v279, "[%.*hhx-%{public}s] Got pre-auth capabilities: %s.", (uint8_t *)v222, 0x1Fu);
        v256 = v278;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v256, -1, -1);
        MEMORY[0x1A85B1964](v222, -1, -1);

        v257 = (*(uint64_t (**)(char *, uint64_t))(v215 + 8))(v273, v286);
        v123 = v281;
        v272(&v293, v257);
      }
      else
      {
        sub_1A55034FC(v219, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        v243 = v282;
        sub_1A5523B9C(v282, sub_1A5862784);
        sub_1A5523B9C(v243, sub_1A5862784);

        v244 = (*(uint64_t (**)(char *, uint64_t))(v215 + 8))(v216, v217);
        v272(&v293, v244);
      }
      v238 = sub_1A58F3908((uint64_t)v123, (uint64_t)&v293, v218);
      sub_1A5868834(&v293, (__n128 *)v299);
      sub_1A5893044((uint64_t *)v299);
      sub_1A58687F8(v294, v298);
      sub_1A5893070((uint64_t *)v298);
      sub_1A552316C(v287, v289);
      sub_1A5523B9C(v289, sub_1A5862784);
      return v238;
    case 0x14u:
      sub_1A5524678((uint64_t)v296);
      sub_1A552316C(v303, &v290);
      sub_1A5524678((uint64_t)&v290);
      swift_retain();
      swift_retain();
      swift_retain();
      v156 = v55;
      goto LABEL_33;
    case 0x15u:
      v157 = sub_1A5524678((uint64_t)v296);
      sub_1A56F3380(v157, (uint64_t)v289);
      sub_1A552316C(v303, &v290);
      sub_1A5524678((uint64_t)&v290);
      sub_1A5523B84();
      goto LABEL_32;
    default:
      goto LABEL_28;
  }
}

uint64_t sub_1A58FC8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *i;
  uint64_t v6;
  int8x16_t v7;
  int8x16_t v8;
  uint64_t v9;
  int v11;
  unint64_t v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;

  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
    return 0;
  for (i = (_QWORD *)(a2 + 104); ; i += 10)
  {
    v6 = *(i - 2);
    if (((*i >> 59) & 6 | ((v6 & 0x2000000000000000) != 0)) == 4 && *i == 0x2000000000000000)
    {
      v7.i64[0] = *(i - 3);
      v7.i64[1] = *(i - 1);
      v8 = vorrq_s8(vorrq_s8(*(int8x16_t *)(i - 9), *(int8x16_t *)(i - 5)), vorrq_s8(*(int8x16_t *)(i - 7), v7));
      if (!(*(_QWORD *)&vorr_s8(*(int8x8_t *)v8.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL)) | v6))
        break;
    }
    if (!--v3)
      return 0;
  }
  sub_1A5868834((__n128 *)a3, &v14);
  sub_1A58687F8((__n128 *)(a3 + 24), &v13);
  sub_1A58687F8(&v13, &v19);
  v9 = v20;
  if (v20 == 1)
    return 1;
  v11 = v19.n128_u8[0];
  v12 = v19.n128_u64[1];
  sub_1A5868834(&v14, &v15);
  if (v15.n128_u64[0] >> 62 != 1)
    return 0;
  v15.n128_u64[0] &= 0x3FFFFFFFFFFFFFFFuLL;
  v18 = v16;
  v17 = v15;
  if (v9)
  {
    if (v11)
    {
      if (v11 == 1)
      {
        if (v17.n128_u16[0] != 772)
          return 0;
      }
      else if (v17.n128_u16[0] - 771 > 1)
      {
        return 0;
      }
    }
    else if (v17.n128_u16[0] - 771 >= 2)
    {
      return 0;
    }
    sub_1A55032A0((uint64_t)&v17.n128_i64[1], (uint64_t)v21, &qword_1EE7993D0);
    sub_1A55032A0((uint64_t)v21, (uint64_t)&v22, &qword_1EE7993D0);
    return v23 && (v12 == v22 && v9 == v23 || (sub_1A594CD38() & 1) != 0);
  }
  if (!v11)
    return v17.n128_u16[0] - 771 < 2;
  if (v11 == 1)
    return v17.n128_u16[0] == 772;
  return v17.n128_u16[0] - 771 < 2;
}

uint64_t sub_1A58FCAA0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A58FCAEC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 56))
  {
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t destroy for UnauthenticatedState.Update(uint64_t a1)
{
  return sub_1A58F940C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_BYTE *)(a1 + 176));
}

uint64_t initializeWithCopy for UnauthenticatedState.Update(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 168);
  v26 = *(_BYTE *)(a2 + 176);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  sub_1A58F91FC(*(_QWORD *)a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26);
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  *(_BYTE *)(a1 + 176) = v26;
  return a1;
}

uint64_t assignWithCopy for UnauthenticatedState.Update(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v30 = *(_QWORD *)(a2 + 72);
  v31 = *(_QWORD *)(a2 + 80);
  v32 = *(_QWORD *)(a2 + 88);
  v33 = *(_QWORD *)(a2 + 96);
  v34 = *(_QWORD *)(a2 + 104);
  v35 = *(_QWORD *)(a2 + 112);
  v36 = *(_QWORD *)(a2 + 120);
  v37 = *(_QWORD *)(a2 + 128);
  v38 = *(_QWORD *)(a2 + 136);
  v39 = *(_QWORD *)(a2 + 144);
  v40 = *(_QWORD *)(a2 + 152);
  v41 = *(_QWORD *)(a2 + 160);
  v42 = *(_QWORD *)(a2 + 168);
  v43 = *(_BYTE *)(a2 + 176);
  sub_1A58F91FC(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v30;
  *(_QWORD *)(a1 + 80) = v31;
  *(_QWORD *)(a1 + 88) = v32;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v33;
  *(_QWORD *)(a1 + 104) = v34;
  *(_QWORD *)(a1 + 112) = v35;
  *(_QWORD *)(a1 + 120) = v36;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v37;
  *(_QWORD *)(a1 + 136) = v38;
  *(_QWORD *)(a1 + 144) = v39;
  *(_QWORD *)(a1 + 152) = v40;
  v26 = *(_QWORD *)(a1 + 160);
  v27 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = v41;
  *(_QWORD *)(a1 + 168) = v42;
  v28 = *(_BYTE *)(a1 + 176);
  *(_BYTE *)(a1 + 176) = v43;
  sub_1A58F940C(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((unint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27,
    v28);
  return a1;
}

__n128 __swift_memcpy177_8_2(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for UnauthenticatedState.Update(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v3 = *(_BYTE *)(a2 + 176);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 144);
  v18 = *(_QWORD *)(a1 + 160);
  v19 = *(_QWORD *)(a1 + 168);
  v20 = *(_BYTE *)(a1 + 176);
  v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v21;
  v22 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v22;
  v23 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v23;
  v24 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v24;
  v25 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v25;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 176) = v3;
  sub_1A58F940C(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((unint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    v19,
    v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnauthenticatedState.Update(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 177))
    return (*(_DWORD *)a1 + 249);
  v3 = *(unsigned __int8 *)(a1 + 176);
  if (v3 <= 7)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UnauthenticatedState.Update(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 176) = 0;
    *(_QWORD *)result = a2 - 249;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 177) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 177) = 0;
    if (a2)
      *(_BYTE *)(result + 176) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A58FD014(uint64_t result, unsigned int a2)
{
  if (a2 >= 7)
  {
    *(_QWORD *)result = a2 - 7;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    LOBYTE(a2) = 7;
    *(_QWORD *)(result + 168) = 0;
  }
  *(_BYTE *)(result + 176) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UnauthenticatedState.Update()
{
  return &type metadata for UnauthenticatedState.Update;
}

uint64_t destroy for UnauthenticatedState.ConnectionTLS(uint64_t *a1)
{
  return sub_1A5867DDC(*a1);
}

uint64_t *_s15IMAP2Connection20UnauthenticatedStateO13ConnectionTLSOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1A58AAAD0(*a2);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for UnauthenticatedState.ConnectionTLS(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1A58AAAD0(*a2);
  v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1A5867DDC(v6);
  return a1;
}

uint64_t *assignWithTake for UnauthenticatedState.ConnectionTLS(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1A5867DDC(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnauthenticatedState.ConnectionTLS(uint64_t a1, int a2)
{
  unsigned int v2;
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  HIDWORD(v3) = *(_DWORD *)(a1 + 4);
  LODWORD(v3) = HIDWORD(v3);
  v2 = v3 >> 30;
  if (v2 > 0x80000000)
    v4 = ~v2;
  else
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UnauthenticatedState.ConnectionTLS(uint64_t result, int a2, int a3)
{
  unint64_t v3;

  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      HIDWORD(v3) = -a2;
      LODWORD(v3) = -a2;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)result = (unint64_t)(v3 >> 2) << 32;
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

unint64_t *sub_1A58FD1F8(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *result = *(unsigned int *)result | (unint64_t)(a2 << 62);
  }
  else
  {
    result[1] = 0;
    result[2] = 0;
    *result = (a2 - 2) | 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnauthenticatedState.ConnectionTLS()
{
  return &type metadata for UnauthenticatedState.ConnectionTLS;
}

uint64_t getEnumTagSinglePayload for UnauthenticatedState.Error(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF4 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483637);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 0xB)
    return (v3 - 10);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UnauthenticatedState.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF5)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483637;
    if (a3 >= 0x7FFFFFF5)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF5)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 10;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnauthenticatedState.Error()
{
  return &type metadata for UnauthenticatedState.Error;
}

uint64_t *sub_1A58FD2F0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  sub_1A58F9618(*a1, a1[1], a1[2]);
  sub_1A58F9618(v2, v3, v4);
  return a1;
}

void sub_1A58FD380(uint64_t a1)
{
  type metadata accessor for UnauthenticatedStateWithTasks();
  __asm { BR              X10 }
}

uint64_t sub_1A58FD404()
{
  _OWORD *v0;

  sub_1A55034FC((uint64_t)v0, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  *v0 = xmmword_1A59DC870;
  type metadata accessor for UnauthenticatedState();
  return swift_storeEnumTagMultiPayload();
}

void sub_1A58FD454(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  void (*v3)(unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  const void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[584];
  char v24[688];

  v7 = (const void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 16);
  sub_1A552316C(v7, v24);
  sub_1A5523B9C(v24, sub_1A586238C);
  v8 = sub_1A58FA394(v24, v2, v4, (void (*)(__n128 *__return_ptr, uint64_t))sub_1A58B8240, (uint64_t)&v22);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  sub_1A5523B9C(v24, sub_1A5862784);
  if (v8 <= 0xFFFFFFFEFFFFFFFFLL)
  {
    v3(v8, v10, v12, v14);
    sub_1A5901E58(v8);
  }
  sub_1A552316C(v7, v23);
  v15 = *(int *)(a1 + 24);
  v16 = *(_QWORD **)(v1 + v15);
  v17 = v16[2];
  if (v17)
  {
    sub_1A5523B9C(v23, sub_1A586238C);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_11:
      v16 = sub_1A58D6360(v16);
    v18 = 0;
    *(_QWORD *)(v1 + v15) = v16;
    v19 = (uint64_t)(v16 + 5);
    do
    {
      if (v18 >= v16[2])
      {
        __break(1u);
        goto LABEL_11;
      }
      ++v18;
      v20 = *(_QWORD *)(v19 + 24);
      v21 = *(_QWORD *)(v19 + 32);
      __swift_mutable_project_boxed_opaque_existential_1_0(v19, v20);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v21 + 24))(v23, v20, v21);
      v19 += 48;
    }
    while (v17 != v18);
    sub_1A5523B9C(v23, sub_1A5862784);
    *(_QWORD *)(v1 + v15) = v16;
  }
  sub_1A58FD3E4();
}

__int128 *sub_1A58FD6C8(uint64_t a1, unint64_t a2, char a3, void (*a4)(unint64_t, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[184];
  _BYTE v24[184];
  __int128 v25[11];
  __int128 v26;
  uint64_t v27;
  __int128 v28[12];
  uint64_t v29;

  v8 = v6;
  v13 = a3 & 1;
  sub_1A5862C1C(a1, a2, a3 & 1);
  v14 = &v26;
  sub_1A58FF4B4(v8, a1, a2, v13, &v26);
  if (!v7)
  {
    v14 = (__int128 *)v26;
    sub_1A55032A0((uint64_t)&v27, (uint64_t)v24, &qword_1EE7981D8);
    sub_1A55032A0((uint64_t)v24, (uint64_t)v25, &qword_1EE7981D8);
    if (sub_1A5901C60((uint64_t)v25) != 1)
    {
      sub_1A5862234(v25, (uint64_t)v28);
      type metadata accessor for UnauthenticatedStateWithTasks();
      sub_1A55032A0((uint64_t)v24, (uint64_t)v23, &qword_1EE7981D8);
      sub_1A55DC438((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A58F91FC);
      sub_1A58F5240(v28, a6);
      v29 = v15;
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        v17 = (uint64_t *)(v29 + 56);
        do
        {
          v19 = *(v17 - 3);
          v18 = *(v17 - 2);
          v20 = *(v17 - 1);
          v21 = *v17;
          sub_1A5893FE8(v19);
          a4(v19, v18, v20, v21);
          sub_1A5894020(v19);
          v17 += 4;
          --v16;
        }
        while (v16);
      }
      swift_bridgeObjectRelease();
      sub_1A55DC438((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5901C74);
      sub_1A55DC438((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5901C74);
    }
  }
  return v14;
}

uint64_t sub_1A58FD8A8(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (**v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int EnumCaseMultiPayload;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, char *);
  uint64_t v40;
  char *v41;
  char *v42;
  unint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  void (*v90)(char *, char *);
  char *v91;
  uint64_t v92;
  __int128 *v93;
  __int128 v94;
  NSObject *v95;
  os_log_type_t v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  char *v104;
  __int128 *v105;
  int v106;
  char *v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  char *v117;
  unint64_t v118;
  unint64_t v119;
  char *v120;
  unint64_t *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  void (*v125)(char *, uint64_t, char *);
  char *v126;
  char *v127;
  char *v128;
  __int128 *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __n128 v134;
  __n128 v135;
  __n128 v136;
  uint64_t v137;
  __n128 v138;
  uint64_t v139;
  char *v140;

  v132 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v132);
  v131 = (uint64_t)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v119 = (unint64_t)&v118 - v7;
  MEMORY[0x1E0C80A78](v8);
  v123 = (char *)&v118 - v9;
  MEMORY[0x1E0C80A78](v10);
  v124 = (char *)&v118 - v11;
  MEMORY[0x1E0C80A78](v12);
  v122 = (uint64_t)&v118 - v13;
  MEMORY[0x1E0C80A78](v14);
  v121 = (unint64_t *)((char *)&v118 - v15);
  v16 = sub_1A594A764();
  v17 = *(void (***)(char *, uint64_t, uint64_t))(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v120 = (char *)&v118 - v21;
  MEMORY[0x1E0C80A78](v22);
  v128 = (char *)&v118 - v23;
  MEMORY[0x1E0C80A78](v24);
  v125 = (void (*)(char *, uint64_t, char *))((char *)&v118 - v25);
  MEMORY[0x1E0C80A78](v26);
  v127 = (char *)&v118 - v27;
  MEMORY[0x1E0C80A78](v28);
  v126 = (char *)&v118 - v29;
  v30 = type metadata accessor for UnauthenticatedState();
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v118 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = (__int128 *)(v2 + *(int *)(type metadata accessor for UnauthenticatedStateWithTasks() + 20));
  sub_1A55034B8((uint64_t)v129, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  v130 = v30;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1A55034FC((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
  if (EnumCaseMultiPayload == 13)
  {
    v131 = a2;
    v35 = *a1;
    v34 = a1[1];
    v36 = a1[2];
    v37 = *a1 >> 62;
    v38 = (uint64_t)a1;
    if ((_DWORD)v37)
    {
      if ((_DWORD)v37 != 1)
      {
        v79 = v126;
        v80 = v131;
        v17[2](v126, v131, v16);
        v81 = (uint64_t)v121;
        sub_1A55034B8(v80, (uint64_t)v121, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v82 = sub_1A594A74C();
        v83 = sub_1A594C024();
        if (os_log_type_enabled(v82, v83))
        {
          v84 = swift_slowAlloc();
          v85 = swift_slowAlloc();
          v140 = (char *)v85;
          *(_DWORD *)v84 = 68158210;
          LODWORD(v133) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v84 + 8) = 256;
          v86 = *(int *)(v132 + 20);
          v128 = (char *)v16;
          v87 = v81 + v86;
          LOBYTE(v133) = *(_BYTE *)(v81 + v86);
          sub_1A594C3CC();
          *(_WORD *)(v84 + 11) = 2082;
          v88 = ConnectionID.debugDescription.getter(*(unsigned int *)(v87 + 4));
          v133 = sub_1A589167C(v88, v89, (uint64_t *)&v140);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC(v81, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          _os_log_impl(&dword_1A4F90000, v82, v83, "[%.*hhx-%{public}s] We ran STARTTLS, but the connection is not using TLS.", (uint8_t *)v84, 0x15u);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v85, -1, -1);
          MEMORY[0x1A85B1964](v84, -1, -1);

          ((void (*)(char *, char *))v17[1])(v126, v128);
        }
        else
        {
          sub_1A55034FC(v81, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

          ((void (*)(char *, uint64_t))v17[1])(v79, v16);
        }
        v93 = v129;
        sub_1A55034FC((uint64_t)v129, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
        v94 = xmmword_1A59DC880;
        goto LABEL_47;
      }
      v121 = a1;
      LODWORD(v127) = (unsigned __int16)v35;
      v39 = (void (*)(char *, uint64_t, char *))v17[2];
      v40 = v131;
      v126 = (char *)v17;
      v41 = (char *)v16;
      v125 = v39;
      v39(v128, v131, (char *)v16);
      v42 = v123;
      sub_1A55034B8(v40, (uint64_t)v123, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A58AAAD0(v35);
      sub_1A58AAAD0(v35);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v43 = v34;
      v44 = sub_1A594A74C();
      v45 = sub_1A594C030();
      v46 = v45;
      if (os_log_type_enabled(v44, v45))
      {
        v118 = v35 >> 16;
        v47 = swift_slowAlloc();
        LODWORD(v122) = v46;
        v48 = v47;
        v124 = (char *)swift_slowAlloc();
        v140 = v124;
        *(_DWORD *)v48 = 68158722;
        LODWORD(v133) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v48 + 8) = 256;
        v49 = &v42[*(int *)(v132 + 20)];
        LOBYTE(v133) = *v49;
        sub_1A594C3CC();
        *(_WORD *)(v48 + 11) = 2082;
        v50 = ConnectionID.debugDescription.getter(*((unsigned int *)v49 + 1));
        v133 = sub_1A589167C(v50, v51, (uint64_t *)&v140);
        sub_1A594C3CC();
        v41 = (char *)v16;
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v42, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        *(_WORD *)(v48 + 21) = 512;
        sub_1A5867DDC(v35);
        LOWORD(v133) = (_WORD)v127;
        sub_1A594C3CC();
        sub_1A5867DDC(v35);
        *(_WORD *)(v48 + 25) = 512;
        sub_1A5867DDC(v35);
        LOWORD(v133) = v118;
        v40 = v131;
        sub_1A594C3CC();
        sub_1A5867DDC(v35);
        _os_log_impl(&dword_1A4F90000, v44, (os_log_type_t)v122, "[%.*hhx-%{public}s] STARTTLS completed: %hu / %hu", (uint8_t *)v48, 0x1Du);
        v52 = v124;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v52, -1, -1);
        MEMORY[0x1A85B1964](v48, -1, -1);
      }
      else
      {
        sub_1A5867DDC(v35);
        sub_1A5867DDC(v35);
        sub_1A55034FC((uint64_t)v42, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        sub_1A5867DDC(v35);
        sub_1A5867DDC(v35);
      }

      v90 = (void (*)(char *, char *))*((_QWORD *)v126 + 1);
      v90(v128, v41);
      sub_1A58687F8((__n128 *)(v121 + 3), &v135);
      sub_1A58687F8(&v135, &v136);
      if (v137 != 1)
      {
        if (v137)
        {
          if (v136.n128_u8[0] == 1)
          {
            if ((_DWORD)v127 != 772)
              goto LABEL_43;
            goto LABEL_32;
          }
          if (((_DWORD)v127 - 773) >= 0xFFFFFFFE)
          {
LABEL_32:
            if (!v36 || (v136.n128_u64[1] != v43 || v137 != v36) && (sub_1A594CD38() & 1) == 0)
              goto LABEL_43;
            goto LABEL_23;
          }
LABEL_43:
          v107 = v120;
          v125(v120, v40, v41);
          v108 = v119;
          sub_1A55034B8(v40, v119, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          v109 = sub_1A594A74C();
          v110 = sub_1A594C018();
          if (os_log_type_enabled(v109, v110))
          {
            v111 = swift_slowAlloc();
            v112 = swift_slowAlloc();
            v140 = (char *)v112;
            *(_DWORD *)v111 = 68158210;
            LODWORD(v133) = 2;
            v128 = v41;
            sub_1A594C3CC();
            *(_WORD *)(v111 + 8) = 256;
            v113 = v108 + *(int *)(v132 + 20);
            LOBYTE(v133) = *(_BYTE *)v113;
            sub_1A594C3CC();
            *(_WORD *)(v111 + 11) = 2082;
            v114 = ConnectionID.debugDescription.getter(*(unsigned int *)(v113 + 4));
            v133 = sub_1A589167C(v114, v115, (uint64_t *)&v140);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A55034FC(v108, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
            _os_log_impl(&dword_1A4F90000, v109, v110, "[%.*hhx-%{public}s] We ran STARTTLS, but the connection is not secure.", (uint8_t *)v111, 0x15u);
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v112, -1, -1);
            MEMORY[0x1A85B1964](v111, -1, -1);

            v116 = v120;
            v117 = v128;
          }
          else
          {
            sub_1A55034FC(v108, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

            v116 = v107;
            v117 = v41;
          }
          v90(v116, v117);
          v93 = v129;
          sub_1A55034FC((uint64_t)v129, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
          v94 = xmmword_1A59DC890;
LABEL_47:
          *v93 = v94;
          return swift_storeEnumTagMultiPayload();
        }
        if (v136.n128_u8[0])
        {
          v106 = (int)v127;
          if (v136.n128_u8[0] == 1)
          {
            if ((_DWORD)v127 != 772)
              goto LABEL_43;
            goto LABEL_23;
          }
        }
        else
        {
          v106 = (int)v127;
        }
        if ((v106 - 771) >= 2)
          goto LABEL_43;
      }
    }
    else
    {
      v126 = (char *)v17;
      v64 = v131;
      v65 = (char *)v16;
      v123 = (char *)v17[2];
      ((void (*)(char *, uint64_t, uint64_t))v123)(v127, v131, v16);
      v66 = v122;
      sub_1A55034B8(v64, v122, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A58AAAD0(v35);
      sub_1A58AAAD0(v35);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v67 = sub_1A594A74C();
      v68 = sub_1A594C030();
      if (os_log_type_enabled(v67, v68))
      {
        v119 = v35 >> 16;
        v69 = swift_slowAlloc();
        v121 = a1;
        v70 = v69;
        v120 = (char *)swift_slowAlloc();
        v140 = v120;
        *(_DWORD *)v70 = 68158722;
        LODWORD(v133) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v70 + 8) = 256;
        v71 = *(int *)(v132 + 20);
        v128 = v65;
        v72 = v66;
        v73 = v66 + v71;
        LOBYTE(v133) = *(_BYTE *)v73;
        sub_1A594C3CC();
        *(_WORD *)(v70 + 11) = 2082;
        v74 = ConnectionID.debugDescription.getter(*(unsigned int *)(v73 + 4));
        v133 = sub_1A589167C(v74, v75, (uint64_t *)&v140);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v72, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        *(_WORD *)(v70 + 21) = 512;
        sub_1A5867DDC(v35);
        LOWORD(v133) = v35;
        sub_1A594C3CC();
        sub_1A5867DDC(v35);
        *(_WORD *)(v70 + 25) = 512;
        sub_1A5867DDC(v35);
        LOWORD(v133) = v119;
        sub_1A594C3CC();
        sub_1A5867DDC(v35);
        _os_log_impl(&dword_1A4F90000, v67, v68, "[%.*hhx-%{public}s] Opportunistic STARTTLS completed: %hu / %hu", (uint8_t *)v70, 0x1Du);
        v76 = v120;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v76, -1, -1);
        v77 = v70;
        v38 = (uint64_t)v121;
        v64 = v131;
        MEMORY[0x1A85B1964](v77, -1, -1);

        v78 = (void (*)(char *, char *))*((_QWORD *)v126 + 1);
        v65 = v128;
        v78(v127, v128);
      }
      else
      {
        sub_1A5867DDC(v35);
        sub_1A5867DDC(v35);
        sub_1A55034FC(v66, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        sub_1A5867DDC(v35);
        sub_1A5867DDC(v35);

        v78 = (void (*)(char *, char *))*((_QWORD *)v126 + 1);
        v78(v127, v65);
      }
      v91 = (char *)v125;
      sub_1A58687F8((__n128 *)(v38 + 24), &v134);
      sub_1A58687F8(&v134, &v138);
      v92 = (uint64_t)v124;
      if (v139 != 1)
      {
        ((void (*)(char *, uint64_t, char *))v123)(v91, v64, v65);
        sub_1A55034B8(v64, v92, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v95 = sub_1A594A74C();
        v96 = sub_1A594C018();
        if (os_log_type_enabled(v95, v96))
        {
          v98 = swift_slowAlloc();
          v99 = swift_slowAlloc();
          v140 = (char *)v99;
          *(_DWORD *)v98 = 68158210;
          LODWORD(v133) = 2;
          v128 = v65;
          sub_1A594C3CC();
          *(_WORD *)(v98 + 8) = 256;
          v100 = v92 + *(int *)(v132 + 20);
          LOBYTE(v133) = *(_BYTE *)v100;
          sub_1A594C3CC();
          *(_WORD *)(v98 + 11) = 2082;
          v101 = ConnectionID.debugDescription.getter(*(unsigned int *)(v100 + 4));
          v133 = sub_1A589167C(v101, v102, (uint64_t *)&v140);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC(v92, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
          _os_log_impl(&dword_1A4F90000, v95, v96, "[%.*hhx-%{public}s] We ran STARTTLS, but the connection is not secure.", (uint8_t *)v98, 0x15u);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v99, -1, -1);
          MEMORY[0x1A85B1964](v98, -1, -1);

          v103 = (char *)v125;
          v104 = v128;
        }
        else
        {
          sub_1A55034FC(v92, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

          v103 = v91;
          v104 = v65;
        }
        v78(v103, v104);
        v105 = v129;
        sub_1A55034FC((uint64_t)v129, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
        *v105 = xmmword_1A59DC890;
        return swift_storeEnumTagMultiPayload();
      }
    }
LABEL_23:
    sub_1A55034FC((uint64_t)v129, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
    return swift_storeEnumTagMultiPayload();
  }
  v17[2](v19, a2, v16);
  v53 = v131;
  sub_1A55034B8(a2, v131, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v54 = sub_1A594A74C();
  v55 = sub_1A594C024();
  v56 = (char *)v17;
  if (os_log_type_enabled(v54, v55))
  {
    v57 = swift_slowAlloc();
    v58 = swift_slowAlloc();
    v140 = (char *)v58;
    *(_DWORD *)v57 = 68158210;
    LODWORD(v133) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v57 + 8) = 256;
    v59 = *(int *)(v132 + 20);
    v128 = (char *)v16;
    v126 = v56;
    v60 = v53 + v59;
    LOBYTE(v133) = *(_BYTE *)(v53 + v59);
    sub_1A594C3CC();
    *(_WORD *)(v57 + 11) = 2082;
    v61 = ConnectionID.debugDescription.getter(*(unsigned int *)(v60 + 4));
    v133 = sub_1A589167C(v61, v62, (uint64_t *)&v140);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v53, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    _os_log_impl(&dword_1A4F90000, v54, v55, "[%.*hhx-%{public}s] Received did-start-TLS from network, but we’re in the wrong state.", (uint8_t *)v57, 0x15u);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v58, -1, -1);
    MEMORY[0x1A85B1964](v57, -1, -1);

    (*((void (**)(char *, char *))v126 + 1))(v19, v128);
  }
  else
  {
    sub_1A55034FC(v53, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

    ((void (*)(char *, uint64_t))v17[1])(v19, v16);
  }
  sub_1A5901E14();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_1A58FEAA4(uint64_t a1, uint64_t (*a2)(_QWORD *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  _OWORD *v56;
  __int128 v57;
  __int128 v58;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  void (*v75)(char *, uint64_t, uint64_t, double);
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t (*v80)(_QWORD *);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _OWORD v86[2];
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  _QWORD v91[3];
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[9];
  _BYTE v95[72];
  _QWORD v96[10];

  v80 = a2;
  v81 = a3;
  v4 = _s6LoggerVMa_0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v72 - v8;
  v10 = sub_1A594A764();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v72 - v16;
  v75 = *(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16);
  v75((char *)&v72 - v16, a1, v10, v15);
  v76 = a1;
  sub_1A55034B8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v18 = sub_1A594A74C();
  v19 = sub_1A594C00C();
  v20 = os_log_type_enabled(v18, v19);
  v78 = v13;
  v79 = v10;
  v77 = v6;
  v73 = v4;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    *(_QWORD *)&v86[0] = v22;
    *(_DWORD *)v21 = 68158210;
    LODWORD(v96[0]) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v21 + 8) = 256;
    v23 = &v9[*(int *)(v4 + 20)];
    LOBYTE(v96[0]) = *v23;
    sub_1A594C3CC();
    *(_WORD *)(v21 + 11) = 2082;
    v24 = ConnectionID.debugDescription.getter(*((unsigned int *)v23 + 1));
    v96[0] = sub_1A589167C(v24, v25, (uint64_t *)v86);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    _os_log_impl(&dword_1A4F90000, v18, v19, "[%.*hhx-%{public}s] Checking for new actions.", (uint8_t *)v21, 0x15u);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v22, -1, -1);
    v26 = v21;
    v10 = v79;
    MEMORY[0x1A85B1964](v26, -1, -1);
  }
  else
  {
    sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  }

  v74 = *(void (**)(char *, uint64_t))(v11 + 8);
  v74(v17, v10);
  v27 = v83;
  v28 = type metadata accessor for UnauthenticatedStateWithTasks();
  v29 = *(int *)(v28 + 24);
  v84 = v27 + *(int *)(v28 + 20);
  v85 = (_QWORD *)v86 + 1;
  v82 = v29;
  while (1)
  {
    v30 = *(_QWORD *)(v27 + v29);
    v31 = *(_QWORD *)(v30 + 16);
    if (v31)
    {
      v88 = MEMORY[0x1E0DEE9D8];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A58BF7F8(0, v31, 0);
      v32 = v30 + 32;
      v33 = v88;
      do
      {
        sub_1A5901C18(v32, (uint64_t)v86);
        v34 = v87;
        __swift_project_boxed_opaque_existential_1_0(v85, v87);
        v35 = (*(uint64_t (**)(_QWORD, _QWORD))(*((_QWORD *)&v34 + 1) + 8))(v34, *((_QWORD *)&v34 + 1));
        sub_1A5510284((uint64_t)v86, &qword_1EE798320);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A58BF7F8(0, *(_QWORD *)(v33 + 16) + 1, 1);
          v33 = v88;
        }
        v37 = *(_QWORD *)(v33 + 16);
        v36 = *(_QWORD *)(v33 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_1A58BF7F8(v36 > 1, v37 + 1, 1);
          v33 = v88;
        }
        *(_QWORD *)(v33 + 16) = v37 + 1;
        *(_BYTE *)(v33 + v37 + 32) = v35;
        v32 += 48;
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease();
    }
    else
    {
      v33 = MEMORY[0x1E0DEE9D8];
    }
    sub_1A5901D70();
    v38 = sub_1A594BBD4();
    v39 = *(_QWORD *)(v33 + 16);
    if (v39)
    {
      v40 = 0;
      do
      {
        v42 = v38 + 56;
        while (1)
        {
          v43 = *(unsigned __int8 *)(v33 + 32 + v40++);
          sub_1A594CE64();
          sub_1A594CE88();
          v44 = sub_1A594CED0();
          v45 = -1 << *(_BYTE *)(v38 + 32);
          v46 = v44 & ~v45;
          if (((*(_QWORD *)(v42 + ((v46 >> 3) & 0xFFFFFFFFFFFFF8)) >> v46) & 1) == 0)
            break;
          v47 = *(_QWORD *)(v38 + 48);
          if (*(unsigned __int8 *)(v47 + v46) != (_DWORD)v43)
          {
            v48 = ~v45;
            do
            {
              v46 = (v46 + 1) & v48;
              if (((*(_QWORD *)(v42 + ((v46 >> 3) & 0xFFFFFFFFFFFFF8)) >> v46) & 1) == 0)
                goto LABEL_16;
            }
            while (*(unsigned __int8 *)(v47 + v46) != (_DWORD)v43);
          }
          if (v40 == v39)
            goto LABEL_25;
        }
LABEL_16:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v86[0] = v38;
        sub_1A58DD4A0(v43, v46, isUniquelyReferenced_nonNull_native);
        v38 = *(_QWORD *)&v86[0];
        swift_bridgeObjectRelease();
      }
      while (v40 != v39);
LABEL_25:
      swift_bridgeObjectRelease();
      v10 = v79;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v29 = v82;
    sub_1A58F4CB8(v38);
    swift_bridgeObjectRelease();
    if (!v90)
      return sub_1A5510284((uint64_t)&v89, (uint64_t *)&unk_1EE798228);
    sub_1A54FBF38(&v89, (uint64_t)v91);
    v49 = v92;
    v50 = v93;
    __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)v91, v92);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v50 + 16))(v94, v49, v50);
    sub_1A55032A0((uint64_t)v94, (uint64_t)v95, &qword_1EE7982A0);
    if (v95[64] == 255)
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
    sub_1A586A180((uint64_t)v95, (uint64_t)v96);
    v51 = v80(v96);
    if ((v52 & 1) != 0)
      break;
    *(_QWORD *)&v86[0] = v51;
    sub_1A54FBF7C((uint64_t)v91, (uint64_t)v85);
    v27 = v83;
    v53 = *(_QWORD **)(v83 + v29);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v53 = sub_1A58D4450(0, v53[2] + 1, 1, v53);
    v55 = v53[2];
    v54 = v53[3];
    if (v55 >= v54 >> 1)
      v53 = sub_1A58D4450((_QWORD *)(v54 > 1), v55 + 1, 1, v53);
    v53[2] = v55 + 1;
    v56 = &v53[6 * v55];
    v57 = v86[0];
    v58 = v87;
    v56[3] = v86[1];
    v56[4] = v58;
    v56[2] = v57;
    *(_QWORD *)(v27 + v29) = v53;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
    sub_1A5901DB4((uint64_t)v94);
  }
  sub_1A5901DB4((uint64_t)v94);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
  v60 = v78;
  v61 = v76;
  ((void (*)(char *, uint64_t, uint64_t))v75)(v78, v76, v10);
  v62 = (uint64_t)v77;
  sub_1A55034B8(v61, (uint64_t)v77, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v63 = sub_1A594A74C();
  v64 = sub_1A594C000();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = swift_slowAlloc();
    v66 = swift_slowAlloc();
    *(_QWORD *)&v86[0] = v66;
    *(_DWORD *)v65 = 68158210;
    LODWORD(v91[0]) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v65 + 8) = 256;
    v67 = v62 + *(int *)(v73 + 20);
    LOBYTE(v91[0]) = *(_BYTE *)v67;
    sub_1A594C3CC();
    *(_WORD *)(v65 + 11) = 2082;
    v68 = ConnectionID.debugDescription.getter(*(unsigned int *)(v67 + 4));
    v91[0] = sub_1A589167C(v68, v69, (uint64_t *)v86);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v62, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);
    _os_log_impl(&dword_1A4F90000, v63, v64, "[%.*hhx-%{public}s] No connection available to send command.", (uint8_t *)v65, 0x15u);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v66, -1, -1);
    MEMORY[0x1A85B1964](v65, -1, -1);

    v70 = v60;
    v71 = v79;
  }
  else
  {
    sub_1A55034FC(v62, (uint64_t (*)(_QWORD))_s6LoggerVMa_0);

    v70 = v60;
    v71 = v10;
  }
  return ((uint64_t (*)(char *, uint64_t))v74)(v70, v71);
}

uint64_t sub_1A58FF2E4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[23];
  __int128 v32[11];
  __int128 v33[12];

  v13 = v6 + *(int *)(type metadata accessor for UnauthenticatedStateWithTasks() + 24);
  v14 = *(_QWORD *)(*(_QWORD *)v13 + 16);
  if (v14)
  {
    v26 = a3;
    v27 = a4;
    v25 = a6;
    v15 = *(_QWORD *)v13 + 32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v16 = 0;
    while (1)
    {
      sub_1A5901C18(v15, (uint64_t)v33);
      v17 = v33[0];
      v18 = DWORD1(v33[0]);
      sub_1A5510284((uint64_t)v33, &qword_1EE798320);
      if (v17 == (_DWORD)a5 && v18 == HIDWORD(a5))
        break;
      ++v16;
      v15 += 48;
      if (v14 == v16)
      {
        swift_bridgeObjectRelease();
        return MEMORY[0x1E0DEE9D8];
      }
    }
    swift_bridgeObjectRelease();
    sub_1A58D28D0(v16, v33);
    sub_1A54FBF38((__int128 *)((char *)v33 + 8), (uint64_t)v32);
    sub_1A54FBF38(v32, (uint64_t)v28);
    v20 = v29;
    v21 = v30;
    __swift_project_boxed_opaque_existential_1_0(v28, v29);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 32))(v31, a1, a2, v26, v27, v20, v21);
    sub_1A55032A0((uint64_t)v31, (uint64_t)v32, &qword_1EE7981D8);
    if (sub_1A5901C60((uint64_t)v32) != 1)
    {
      sub_1A5862234(v32, (uint64_t)v33);
      sub_1A58F5240(v33, v25);
      v22 = v24;
      sub_1A55DC438((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A5901C74);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      return v22;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A58FF4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W3>, __int128 *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *boxed_opaque_existential_1;
  uint64_t result;
  _QWORD *v31;
  __int128 v32;
  __int128 *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  unint64_t v49;
  uint64_t v50;
  __int128 v51;
  char v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  char v64;
  __int128 v65;
  _OWORD v66[10];
  _OWORD v67[2];
  __int128 v68;
  char v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  char v81;
  char v82[40];
  uint64_t v83;
  __int128 v84[2];
  uint64_t v85;
  __int128 v86[3];

  v11 = a4 & 1;
  v12 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
  MEMORY[0x1E0C80A78](v12);
  v45 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for AuthenticationTask();
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(int *)(type metadata accessor for UnauthenticatedStateWithTasks() + 24);
  v47 = a1;
  v50 = v16;
  v17 = *(_QWORD *)(a1 + v16);
  v18 = *(_QWORD *)(v17 + 16);
  if (!v18)
    goto LABEL_13;
  v42 = v15;
  v43 = a2;
  v40 = a5;
  v41 = v5;
  v48 = v11;
  v49 = a3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v19 = 0;
  v20 = 4;
  while (1)
  {
    sub_1A5901C18(v17 + v20 * 8, (uint64_t)&v68);
    v21 = *((_QWORD *)&v70 + 1);
    v22 = v71;
    __swift_project_boxed_opaque_existential_1_0((_QWORD *)&v68 + 1, *((uint64_t *)&v70 + 1));
    v23 = (_QWORD *)(*(unsigned __int8 (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
    sub_1A5510284((uint64_t)&v68, &qword_1EE798320);
    if ((_DWORD)v23 == 2)
      break;
    ++v19;
    v20 += 6;
    if (v18 == v19)
    {
      swift_bridgeObjectRelease();
      a3 = v49;
      LOBYTE(v11) = v48;
      a2 = v43;
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  v24 = v47;
  v25 = *(_QWORD *)(v47 + v50);
  a2 = v43;
  if (v19 >= *(_QWORD *)(v25 + 16))
  {
    __break(1u);
    goto LABEL_15;
  }
  sub_1A5901C18(v25 + v20 * 8, (uint64_t)&v85);
  v83 = v85;
  sub_1A54FBF38(v86, (uint64_t)v84);
  sub_1A54FBF38(v84, (uint64_t)v82);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB068);
  v26 = (uint64_t)v45;
  v27 = v46;
  if ((swift_dynamicCast() & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v26, 1, 1, v27);
    sub_1A5510284(v26, (uint64_t *)&unk_1EE7981A8);
    a3 = v49;
    LOBYTE(v11) = v48;
LABEL_13:
    sub_1A5901CE8();
    swift_allocError();
    swift_willThrow();
    return sub_1A585C500(a2, a3, v11);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v26, 0, 1, v27);
  v28 = (uint64_t)v42;
  sub_1A5901D2C(v26, (uint64_t)v42);
  sub_1A5861264(a2, v49, v48, (uint64_t)&v51);
  v68 = v51;
  v69 = v52;
  v70 = v53;
  v71 = v54;
  v72 = v55;
  v73 = v56;
  v74 = v57;
  v75 = v58;
  v76 = v59;
  v77 = v60;
  v78 = v61;
  v79 = v62;
  v80 = v63;
  v81 = v64;
  v65 = v51;
  LOBYTE(v66[0]) = v52;
  v22 = v50;
  sub_1A55032A0((uint64_t)&v70, (uint64_t)v66 + 8, &qword_1EE7981D8);
  v23 = *(_QWORD **)(v24 + v22);
  if (v19 < v23[2])
  {
    v6 = v23[v20];
    *(_QWORD *)&v53 = v27;
    *((_QWORD *)&v53 + 1) = &off_1E4E75278;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v51);
    sub_1A55034B8(v28, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v24 + v22) = v23;
    if ((result & 1) != 0)
      goto LABEL_10;
    goto LABEL_16;
  }
LABEL_15:
  __break(1u);
LABEL_16:
  result = (uint64_t)sub_1A58D6360(v23);
  v23 = (_QWORD *)result;
  *(_QWORD *)(v24 + v22) = result;
LABEL_10:
  if (v19 >= v23[2])
  {
    __break(1u);
  }
  else
  {
    v31 = &v23[v20];
    *v31++ = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    sub_1A54FBF38(&v51, (uint64_t)v31);
    sub_1A55034FC((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationTask);
    result = sub_1A585C500(a2, v49, v48);
    v32 = v67[0];
    v33 = v40;
    v40[10] = v66[9];
    v33[11] = v32;
    *(__int128 *)((char *)v33 + 185) = *(_OWORD *)((char *)v67 + 9);
    v34 = v66[6];
    v33[6] = v66[5];
    v33[7] = v34;
    v35 = v66[8];
    v33[8] = v66[7];
    v33[9] = v35;
    v36 = v66[2];
    v33[2] = v66[1];
    v33[3] = v36;
    v37 = v66[4];
    v33[4] = v66[3];
    v33[5] = v37;
    v38 = v66[0];
    *v33 = v65;
    v33[1] = v38;
  }
  return result;
}

BOOL _s15IMAP2Connection29UnauthenticatedStateWithTasksV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int32x2_t *v9;
  uint64_t v10;
  int32x2_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  int32x2_t *v16;
  uint64_t v17;
  int32x2_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  _BYTE v24[40];
  int32x2_t v25;
  _BYTE v26[40];
  int32x2_t *v27;

  v4 = type metadata accessor for UnauthenticatedStateWithTasks();
  sub_1A58F868C(a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20));
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(int *)(v4 + 24);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = (int32x2_t *)MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v27 = (int32x2_t *)MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A58BF788(0, v8, 0);
    v10 = v7 + 32;
    v9 = v27;
    do
    {
      sub_1A5901C18(v10, (uint64_t)&v25);
      v11 = v25;
      sub_1A54FBF7C((uint64_t)v26, (uint64_t)v24);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      sub_1A5510284((uint64_t)&v25, &qword_1EE798320);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A58BF788(0, *(_QWORD *)&v9[2] + 1, 1);
        v9 = v27;
      }
      v13 = (unint64_t)v9[2];
      v12 = (unint64_t)v9[3];
      if (v13 >= v12 >> 1)
      {
        sub_1A58BF788(v12 > 1, v13 + 1, 1);
        v9 = v27;
      }
      v9[2] = (int32x2_t)(v13 + 1);
      v9[v13 + 4] = v11;
      v10 += 48;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v6 = *(int *)(v4 + 24);
  }
  v14 = *(_QWORD *)(a2 + v6);
  v15 = *(_QWORD *)(v14 + 16);
  v16 = (int32x2_t *)MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    v27 = (int32x2_t *)MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A58BF788(0, v15, 0);
    v17 = v14 + 32;
    v16 = v27;
    do
    {
      sub_1A5901C18(v17, (uint64_t)&v25);
      v18 = v25;
      sub_1A54FBF7C((uint64_t)v26, (uint64_t)v24);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      sub_1A5510284((uint64_t)&v25, &qword_1EE798320);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A58BF788(0, *(_QWORD *)&v16[2] + 1, 1);
        v16 = v27;
      }
      v20 = (unint64_t)v16[2];
      v19 = (unint64_t)v16[3];
      if (v20 >= v19 >> 1)
      {
        sub_1A58BF788(v19 > 1, v20 + 1, 1);
        v16 = v27;
      }
      v16[2] = (int32x2_t)(v20 + 1);
      v16[v20 + 4] = v18;
      v17 += 48;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  sub_1A5538240(v9, v16);
  v22 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v22 & 1) != 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for UnauthenticatedStateWithTasks(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  unsigned int (*v15)(char *, uint64_t, int *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, _QWORD, uint64_t, int *);
  uint64_t v55;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UnauthenticatedState();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_14;
      case 2u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v8[8] = v9[8];
        *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
        v12 = *(int *)(type metadata accessor for Authenticator() + 28);
        __dst = &v8[v12];
        v13 = &v9[v12];
        v14 = (int *)type metadata accessor for AuthenticationTask();
        v55 = *((_QWORD *)v14 - 1);
        v15 = *(unsigned int (**)(char *, uint64_t, int *))(v55 + 48);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v15(v13, 1, v14))
        {
          v16 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
          memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          v45 = *(_OWORD *)(v13 + 24);
          *(_OWORD *)(__dst + 24) = v45;
          (**(void (***)(void *, char *))(v45 - 8))(__dst, v13);
          v46 = *((_QWORD *)v13 + 5);
          v47 = *((_QWORD *)v13 + 6);
          sub_1A585C524(v46, v47);
          *((_QWORD *)__dst + 5) = v46;
          *((_QWORD *)__dst + 6) = v47;
          v48 = v14[5];
          v49 = &__dst[v48];
          v50 = &v13[v48];
          v51 = sub_1A594A764();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
          v52 = _s6LoggerVMa_0();
          *(_QWORD *)&v49[*(int *)(v52 + 20)] = *(_QWORD *)&v50[*(int *)(v52 + 20)];
          __dst[v14[6]] = v13[v14[6]];
          *(_QWORD *)&__dst[v14[7]] = *(_QWORD *)&v13[v14[7]];
          __dst[v14[8]] = v13[v14[8]];
          v53 = *(void (**)(char *, _QWORD, uint64_t, int *))(v55 + 56);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v53(__dst, 0, 1, v14);
        }
        goto LABEL_14;
      case 4u:
      case 5u:
      case 6u:
      case 8u:
        v33 = *((_QWORD *)v9 + 1);
        *(_QWORD *)v8 = *(_QWORD *)v9;
        *((_QWORD *)v8 + 1) = v33;
        v34 = *((_QWORD *)v9 + 3);
        *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
        *((_QWORD *)v8 + 3) = v34;
        v35 = *((_QWORD *)v9 + 5);
        *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
        *((_QWORD *)v8 + 5) = v35;
        v36 = *((_QWORD *)v9 + 7);
        *((_QWORD *)v8 + 6) = *((_QWORD *)v9 + 6);
        *((_QWORD *)v8 + 7) = v36;
        v37 = *((_QWORD *)v9 + 9);
        *((_QWORD *)v8 + 8) = *((_QWORD *)v9 + 8);
        *((_QWORD *)v8 + 9) = v37;
        v38 = *((_QWORD *)v9 + 11);
        *((_QWORD *)v8 + 10) = *((_QWORD *)v9 + 10);
        *((_QWORD *)v8 + 11) = v38;
        v39 = *((_QWORD *)v9 + 13);
        *((_QWORD *)v8 + 12) = *((_QWORD *)v9 + 12);
        *((_QWORD *)v8 + 13) = v39;
        v40 = *((_QWORD *)v9 + 15);
        *((_QWORD *)v8 + 14) = *((_QWORD *)v9 + 14);
        *((_QWORD *)v8 + 15) = v40;
        v41 = *((_QWORD *)v9 + 17);
        *((_QWORD *)v8 + 16) = *((_QWORD *)v9 + 16);
        *((_QWORD *)v8 + 17) = v41;
        v42 = *((_QWORD *)v9 + 19);
        *((_QWORD *)v8 + 18) = *((_QWORD *)v9 + 18);
        *((_QWORD *)v8 + 19) = v42;
        v43 = *((_QWORD *)v9 + 21);
        *((_QWORD *)v8 + 20) = *((_QWORD *)v9 + 20);
        *((_QWORD *)v8 + 21) = v43;
        *((_QWORD *)v8 + 22) = *((_QWORD *)v9 + 22);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_14;
      case 7u:
        *(_DWORD *)v8 = *(_DWORD *)v9;
        v17 = *((_QWORD *)v9 + 2);
        *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
        *((_QWORD *)v8 + 2) = v17;
        v18 = *((_QWORD *)v9 + 4);
        *((_QWORD *)v8 + 3) = *((_QWORD *)v9 + 3);
        *((_QWORD *)v8 + 4) = v18;
        v19 = *((_QWORD *)v9 + 6);
        *((_QWORD *)v8 + 5) = *((_QWORD *)v9 + 5);
        *((_QWORD *)v8 + 6) = v19;
        v20 = *((_QWORD *)v9 + 8);
        *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
        *((_QWORD *)v8 + 8) = v20;
        v21 = *((_QWORD *)v9 + 10);
        *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
        *((_QWORD *)v8 + 10) = v21;
        v22 = *((_QWORD *)v9 + 12);
        *((_QWORD *)v8 + 11) = *((_QWORD *)v9 + 11);
        *((_QWORD *)v8 + 12) = v22;
        v23 = *((_QWORD *)v9 + 14);
        *((_QWORD *)v8 + 13) = *((_QWORD *)v9 + 13);
        *((_QWORD *)v8 + 14) = v23;
        v24 = *((_QWORD *)v9 + 16);
        *((_QWORD *)v8 + 15) = *((_QWORD *)v9 + 15);
        *((_QWORD *)v8 + 16) = v24;
        v25 = *((_QWORD *)v9 + 18);
        *((_QWORD *)v8 + 17) = *((_QWORD *)v9 + 17);
        *((_QWORD *)v8 + 18) = v25;
        v26 = *((_QWORD *)v9 + 20);
        *((_QWORD *)v8 + 19) = *((_QWORD *)v9 + 19);
        *((_QWORD *)v8 + 20) = v26;
        v27 = *((_QWORD *)v9 + 22);
        *((_QWORD *)v8 + 21) = *((_QWORD *)v9 + 21);
        *((_QWORD *)v8 + 22) = v27;
        v28 = *((_QWORD *)v9 + 24);
        *((_QWORD *)v8 + 23) = *((_QWORD *)v9 + 23);
        *((_QWORD *)v8 + 24) = v28;
        v29 = *((_QWORD *)v9 + 26);
        *((_QWORD *)v8 + 25) = *((_QWORD *)v9 + 25);
        *((_QWORD *)v8 + 26) = v29;
        v30 = *((_QWORD *)v9 + 28);
        *((_QWORD *)v8 + 27) = *((_QWORD *)v9 + 27);
        *((_QWORD *)v8 + 28) = v30;
        v31 = *((_QWORD *)v9 + 29);
        v32 = *((_QWORD *)v9 + 30);
        *((_QWORD *)v8 + 29) = v31;
        *((_QWORD *)v8 + 30) = v32;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_14;
      case 9u:
        v44 = *((_QWORD *)v9 + 1);
        if ((unint64_t)(v44 - 1) >= 0xA)
        {
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_QWORD *)v8 + 1) = v44;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
        else
        {
          *(_OWORD *)v8 = *(_OWORD *)v9;
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        break;
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v4;
}

uint64_t destroy for UnauthenticatedStateWithTasks(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1 + *(int *)(a2 + 20);
  type metadata accessor for UnauthenticatedState();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
      goto LABEL_7;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = v2 + *(int *)(type metadata accessor for Authenticator() + 28);
      v4 = type metadata accessor for AuthenticationTask();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
        return swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v3);
      sub_1A585C57C(*(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48));
      v5 = v3 + *(int *)(v4 + 20);
      v6 = sub_1A594A764();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
LABEL_7:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 4u:
    case 5u:
    case 6u:
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 9u:
      if ((unint64_t)(*(_QWORD *)(v2 + 8) - 1) >= 0xA)
        goto LABEL_7;
      return swift_bridgeObjectRelease();
    default:
      return swift_bridgeObjectRelease();
  }
}

_QWORD *initializeWithCopy for UnauthenticatedStateWithTasks(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  unsigned int (*v14)(char *, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, _QWORD, uint64_t, int *);
  uint64_t v54;
  uint64_t v55;

  v3 = a3;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnauthenticatedState();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
      *(_QWORD *)v7 = *(_QWORD *)v8;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_13;
    case 2u:
      v55 = v3;
      *(_QWORD *)v7 = *(_QWORD *)v8;
      v7[8] = v8[8];
      *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
      v10 = *(int *)(type metadata accessor for Authenticator() + 28);
      v11 = &v7[v10];
      v12 = &v8[v10];
      v13 = (int *)type metadata accessor for AuthenticationTask();
      v54 = *((_QWORD *)v13 - 1);
      v14 = *(unsigned int (**)(char *, uint64_t, int *))(v54 + 48);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v14(v12, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v44 = *(_OWORD *)(v12 + 24);
        *(_OWORD *)(v11 + 24) = v44;
        (**(void (***)(char *, char *))(v44 - 8))(v11, v12);
        v45 = *((_QWORD *)v12 + 5);
        v46 = *((_QWORD *)v12 + 6);
        sub_1A585C524(v45, v46);
        *((_QWORD *)v11 + 5) = v45;
        *((_QWORD *)v11 + 6) = v46;
        v47 = v13[5];
        v48 = &v11[v47];
        v49 = &v12[v47];
        v50 = sub_1A594A764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
        v51 = _s6LoggerVMa_0();
        *(_QWORD *)&v48[*(int *)(v51 + 20)] = *(_QWORD *)&v49[*(int *)(v51 + 20)];
        v11[v13[6]] = v12[v13[6]];
        *(_QWORD *)&v11[v13[7]] = *(_QWORD *)&v12[v13[7]];
        v11[v13[8]] = v12[v13[8]];
        v52 = *(void (**)(char *, _QWORD, uint64_t, int *))(v54 + 56);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v52(v11, 0, 1, v13);
      }
      v3 = v55;
      goto LABEL_13;
    case 4u:
    case 5u:
    case 6u:
    case 8u:
      v16 = *((_QWORD *)v8 + 1);
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *((_QWORD *)v7 + 1) = v16;
      v17 = *((_QWORD *)v8 + 3);
      *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
      *((_QWORD *)v7 + 3) = v17;
      v18 = *((_QWORD *)v8 + 5);
      *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
      *((_QWORD *)v7 + 5) = v18;
      v19 = *((_QWORD *)v8 + 7);
      *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
      *((_QWORD *)v7 + 7) = v19;
      v20 = *((_QWORD *)v8 + 9);
      *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
      *((_QWORD *)v7 + 9) = v20;
      v21 = *((_QWORD *)v8 + 11);
      *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
      *((_QWORD *)v7 + 11) = v21;
      v22 = *((_QWORD *)v8 + 13);
      *((_QWORD *)v7 + 12) = *((_QWORD *)v8 + 12);
      *((_QWORD *)v7 + 13) = v22;
      v23 = *((_QWORD *)v8 + 15);
      *((_QWORD *)v7 + 14) = *((_QWORD *)v8 + 14);
      *((_QWORD *)v7 + 15) = v23;
      v24 = *((_QWORD *)v8 + 17);
      *((_QWORD *)v7 + 16) = *((_QWORD *)v8 + 16);
      *((_QWORD *)v7 + 17) = v24;
      v25 = *((_QWORD *)v8 + 19);
      *((_QWORD *)v7 + 18) = *((_QWORD *)v8 + 18);
      *((_QWORD *)v7 + 19) = v25;
      v26 = *((_QWORD *)v8 + 21);
      *((_QWORD *)v7 + 20) = *((_QWORD *)v8 + 20);
      *((_QWORD *)v7 + 21) = v26;
      *((_QWORD *)v7 + 22) = *((_QWORD *)v8 + 22);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_13;
    case 7u:
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v27 = *((_QWORD *)v8 + 2);
      *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
      *((_QWORD *)v7 + 2) = v27;
      v28 = *((_QWORD *)v8 + 4);
      *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
      *((_QWORD *)v7 + 4) = v28;
      v29 = *((_QWORD *)v8 + 6);
      *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
      *((_QWORD *)v7 + 6) = v29;
      v30 = *((_QWORD *)v8 + 8);
      *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
      *((_QWORD *)v7 + 8) = v30;
      v31 = *((_QWORD *)v8 + 10);
      *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
      *((_QWORD *)v7 + 10) = v31;
      v32 = *((_QWORD *)v8 + 12);
      *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
      *((_QWORD *)v7 + 12) = v32;
      v33 = *((_QWORD *)v8 + 14);
      *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
      *((_QWORD *)v7 + 14) = v33;
      v34 = *((_QWORD *)v8 + 16);
      *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
      *((_QWORD *)v7 + 16) = v34;
      v35 = *((_QWORD *)v8 + 18);
      *((_QWORD *)v7 + 17) = *((_QWORD *)v8 + 17);
      *((_QWORD *)v7 + 18) = v35;
      v36 = *((_QWORD *)v8 + 20);
      *((_QWORD *)v7 + 19) = *((_QWORD *)v8 + 19);
      *((_QWORD *)v7 + 20) = v36;
      v37 = *((_QWORD *)v8 + 22);
      *((_QWORD *)v7 + 21) = *((_QWORD *)v8 + 21);
      *((_QWORD *)v7 + 22) = v37;
      v38 = *((_QWORD *)v8 + 24);
      *((_QWORD *)v7 + 23) = *((_QWORD *)v8 + 23);
      *((_QWORD *)v7 + 24) = v38;
      v39 = *((_QWORD *)v8 + 26);
      *((_QWORD *)v7 + 25) = *((_QWORD *)v8 + 25);
      *((_QWORD *)v7 + 26) = v39;
      v40 = *((_QWORD *)v8 + 28);
      *((_QWORD *)v7 + 27) = *((_QWORD *)v8 + 27);
      *((_QWORD *)v7 + 28) = v40;
      v41 = *((_QWORD *)v8 + 29);
      v42 = *((_QWORD *)v8 + 30);
      *((_QWORD *)v7 + 29) = v41;
      *((_QWORD *)v7 + 30) = v42;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_13;
    case 9u:
      v43 = *((_QWORD *)v8 + 1);
      if ((unint64_t)(v43 - 1) >= 0xA)
      {
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = v43;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      else
      {
        *(_OWORD *)v7 = *(_OWORD *)v8;
      }
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      break;
  }
  *(_QWORD *)((char *)a1 + *(int *)(v3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v3 + 24));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for UnauthenticatedStateWithTasks(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  unsigned int (*v13)(char *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD, uint64_t, int *);
  uint64_t v25;
  char *__dst;

  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1A55034FC((uint64_t)a1 + v6, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
    v9 = type metadata accessor for UnauthenticatedState();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_13;
      case 2u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v7[8] = v8[8];
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        v10 = *(int *)(type metadata accessor for Authenticator() + 28);
        __dst = &v7[v10];
        v11 = &v8[v10];
        v12 = (int *)type metadata accessor for AuthenticationTask();
        v25 = *((_QWORD *)v12 - 1);
        v13 = *(unsigned int (**)(char *, uint64_t, int *))(v25 + 48);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v13(v11, 1, v12))
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
          memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v15 = *((_QWORD *)v11 + 3);
          *((_QWORD *)__dst + 3) = v15;
          *((_QWORD *)__dst + 4) = *((_QWORD *)v11 + 4);
          (**(void (***)(char *, char *))(v15 - 8))(__dst, v11);
          v16 = *((_QWORD *)v11 + 5);
          v17 = *((_QWORD *)v11 + 6);
          sub_1A585C524(v16, v17);
          *((_QWORD *)__dst + 5) = v16;
          *((_QWORD *)__dst + 6) = v17;
          v18 = v12[5];
          v19 = &__dst[v18];
          v20 = &v11[v18];
          v21 = sub_1A594A764();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
          v22 = _s6LoggerVMa_0();
          *(_QWORD *)&v19[*(int *)(v22 + 20)] = *(_QWORD *)&v20[*(int *)(v22 + 20)];
          __dst[v12[6]] = v11[v12[6]];
          *(_QWORD *)&__dst[v12[7]] = *(_QWORD *)&v11[v12[7]];
          __dst[v12[8]] = v11[v12[8]];
          v23 = *(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v23(__dst, 0, 1, v12);
        }
        goto LABEL_13;
      case 4u:
      case 5u:
      case 6u:
      case 8u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
        *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
        *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
        *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
        *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
        *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
        *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
        *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
        *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
        *((_QWORD *)v7 + 12) = *((_QWORD *)v8 + 12);
        *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
        *((_QWORD *)v7 + 14) = *((_QWORD *)v8 + 14);
        *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
        *((_QWORD *)v7 + 16) = *((_QWORD *)v8 + 16);
        *((_QWORD *)v7 + 17) = *((_QWORD *)v8 + 17);
        *((_QWORD *)v7 + 18) = *((_QWORD *)v8 + 18);
        *((_QWORD *)v7 + 19) = *((_QWORD *)v8 + 19);
        *((_QWORD *)v7 + 20) = *((_QWORD *)v8 + 20);
        *((_QWORD *)v7 + 21) = *((_QWORD *)v8 + 21);
        *((_QWORD *)v7 + 22) = *((_QWORD *)v8 + 22);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_13;
      case 7u:
        *(_DWORD *)v7 = *(_DWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
        *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
        *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
        *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
        *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
        *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
        *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
        *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
        *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
        *((_QWORD *)v7 + 12) = *((_QWORD *)v8 + 12);
        *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
        *((_QWORD *)v7 + 14) = *((_QWORD *)v8 + 14);
        *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
        *((_QWORD *)v7 + 16) = *((_QWORD *)v8 + 16);
        *((_QWORD *)v7 + 17) = *((_QWORD *)v8 + 17);
        *((_QWORD *)v7 + 18) = *((_QWORD *)v8 + 18);
        *((_QWORD *)v7 + 19) = *((_QWORD *)v8 + 19);
        *((_QWORD *)v7 + 20) = *((_QWORD *)v8 + 20);
        *((_QWORD *)v7 + 21) = *((_QWORD *)v8 + 21);
        *((_QWORD *)v7 + 22) = *((_QWORD *)v8 + 22);
        *((_QWORD *)v7 + 23) = *((_QWORD *)v8 + 23);
        *((_QWORD *)v7 + 24) = *((_QWORD *)v8 + 24);
        *((_QWORD *)v7 + 25) = *((_QWORD *)v8 + 25);
        *((_QWORD *)v7 + 26) = *((_QWORD *)v8 + 26);
        *((_QWORD *)v7 + 27) = *((_QWORD *)v8 + 27);
        *((_QWORD *)v7 + 28) = *((_QWORD *)v8 + 28);
        *((_QWORD *)v7 + 29) = *((_QWORD *)v8 + 29);
        *((_QWORD *)v7 + 30) = *((_QWORD *)v8 + 30);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_13;
      case 9u:
        if ((unint64_t)(*((_QWORD *)v8 + 1) - 1) >= 0xA)
        {
          *(_QWORD *)v7 = *(_QWORD *)v8;
          *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
        else
        {
          *(_OWORD *)v7 = *(_OWORD *)v8;
        }
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeWithTake for UnauthenticatedStateWithTasks(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnauthenticatedState();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *(_QWORD *)v7 = *(_QWORD *)v8;
    v7[8] = v8[8];
    *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
    v10 = *(int *)(type metadata accessor for Authenticator() + 28);
    v11 = &v7[v10];
    v12 = &v8[v10];
    v13 = (int *)type metadata accessor for AuthenticationTask();
    v14 = *((_QWORD *)v13 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = *((_OWORD *)v12 + 1);
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v16;
      *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
      *((_QWORD *)v11 + 6) = *((_QWORD *)v12 + 6);
      v17 = v13[5];
      v18 = &v11[v17];
      v23 = v14;
      v19 = &v12[v17];
      v20 = sub_1A594A764();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      v21 = _s6LoggerVMa_0();
      *(_QWORD *)&v18[*(int *)(v21 + 20)] = *(_QWORD *)&v19[*(int *)(v21 + 20)];
      v11[v13[6]] = v12[v13[6]];
      *(_QWORD *)&v11[v13[7]] = *(_QWORD *)&v12[v13[7]];
      v11[v13[8]] = v12[v13[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v11, 0, 1, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for UnauthenticatedStateWithTasks(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1A55034FC((uint64_t)a1 + v6, (uint64_t (*)(_QWORD))type metadata accessor for UnauthenticatedState);
    v9 = type metadata accessor for UnauthenticatedState();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      v7[8] = v8[8];
      *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
      v10 = *(int *)(type metadata accessor for Authenticator() + 28);
      v11 = &v7[v10];
      v12 = &v8[v10];
      v13 = (int *)type metadata accessor for AuthenticationTask();
      v14 = *((_QWORD *)v13 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7981A8);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v16 = *((_OWORD *)v12 + 1);
        *(_OWORD *)v11 = *(_OWORD *)v12;
        *((_OWORD *)v11 + 1) = v16;
        *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
        *((_QWORD *)v11 + 6) = *((_QWORD *)v12 + 6);
        v17 = v13[5];
        v18 = &v11[v17];
        v23 = v14;
        v19 = &v12[v17];
        v20 = sub_1A594A764();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
        v21 = _s6LoggerVMa_0();
        *(_QWORD *)&v18[*(int *)(v21 + 20)] = *(_QWORD *)&v19[*(int *)(v21 + 20)];
        v11[v13[6]] = v12[v13[6]];
        *(_QWORD *)&v11[v13[7]] = *(_QWORD *)&v12[v13[7]];
        v11[v13[8]] = v12[v13[8]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v11, 0, 1, v13);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UnauthenticatedStateWithTasks()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5901A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UnauthenticatedState();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for UnauthenticatedStateWithTasks()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5901ADC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnauthenticatedState();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for UnauthenticatedStateWithTasks()
{
  uint64_t result;

  result = qword_1EE798210;
  if (!qword_1EE798210)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5901B94()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnauthenticatedState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A5901C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5901C60(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 176);
  if (v1 > 7)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1A5901C74(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  if (a23 != 255)
    return sub_1A58F940C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23);
  return result;
}

unint64_t sub_1A5901CE8()
{
  unint64_t result;

  result = qword_1EE7AB060;
  if (!qword_1EE7AB060)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0E1C, &type metadata for UnauthenticatedStateWithTasks.NoAuthenticationTaskRunning);
    atomic_store(result, (unint64_t *)&qword_1EE7AB060);
  }
  return result;
}

uint64_t sub_1A5901D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AuthenticationTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A5901D70()
{
  unint64_t result;

  result = qword_1EE798280;
  if (!qword_1EE798280)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0970, &type metadata for TaskID);
    atomic_store(result, (unint64_t *)&qword_1EE798280);
  }
  return result;
}

uint64_t sub_1A5901DB4(uint64_t a1)
{
  sub_1A5901DFC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  return a1;
}

uint64_t sub_1A5901DFC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (a9 != 255)
    return sub_1A58640B0(result, a2, a3, a4, a5, a6, a7, a8, a9);
  return result;
}

unint64_t sub_1A5901E14()
{
  unint64_t result;

  result = qword_1EE7AB070;
  if (!qword_1EE7AB070)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0DDC, &type metadata for UnauthenticatedStateWithTasks.UnexpectedDidStartTLS);
    atomic_store(result, (unint64_t *)&qword_1EE7AB070);
  }
  return result;
}

unint64_t sub_1A5901E58(unint64_t result)
{
  if (result <= 0xFFFFFFFEFFFFFFFFLL)
    return sub_1A5894020(result);
  return result;
}

ValueMetadata *type metadata accessor for UnauthenticatedStateWithTasks.UnexpectedDidStartTLS()
{
  return &type metadata for UnauthenticatedStateWithTasks.UnexpectedDidStartTLS;
}

ValueMetadata *type metadata accessor for UnauthenticatedStateWithTasks.NoAuthenticationTaskRunning()
{
  return &type metadata for UnauthenticatedStateWithTasks.NoAuthenticationTaskRunning;
}

uint64_t _s10WorkaroundOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5901ECC + 4 * byte_1A59E0E5C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5901EEC + 4 * byte_1A59E0E61[v4]))();
}

_BYTE *sub_1A5901ECC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5901EEC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5901EF4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5901EFC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5901F04(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5901F0C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s10WorkaroundOMa()
{
  return &_s10WorkaroundON;
}

unint64_t sub_1A5901F2C()
{
  unint64_t result;

  result = qword_1EE7AB078;
  if (!qword_1EE7AB078)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E0E74, &_s10WorkaroundON);
    atomic_store(result, (unint64_t *)&qword_1EE7AB078);
  }
  return result;
}

uint64_t sub_1A5901F70(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  v2 = *(_BYTE *)(a2 + 16);
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 16))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  return *(unsigned __int8 *)(a1 + 17) ^ *(unsigned __int8 *)(a2 + 17) ^ 1u;
}

uint64_t sub_1A5901FC8(char a1, uint64_t a2, __uint64_t a3, char a4)
{
  __uint64_t v8;
  BOOL v9;
  unint64_t v10;
  double v11;

  v8 = static MonotonicTime.now()();
  if ((a4 & 1) == 0 && v8 <= a3)
    return a2;
  if (!a1)
  {
    v9 = __OFADD__(a2++, 1);
    if (!v9)
      goto LABEL_5;
LABEL_12:
    __break(1u);
    return a2;
  }
  v9 = __OFADD__(a2, 4);
  a2 += 4;
  if (v9)
    goto LABEL_12;
LABEL_5:
  if (a2 <= 1000)
  {
    if (a2 < 1)
      return a2;
  }
  else
  {
    a2 = 1000;
  }
  v10 = sub_1A5891CBC(0x20000000000001uLL);
  v11 = sub_1A5902230(a2, (double)v10 * 1.11022302e-16 + 0.0);
  MonotonicTime.init(secondsSinceNow:)(v11);
  return a2;
}

uint64_t variable initialization expression of Engine.connections()
{
  return 0;
}

uint64_t variable initialization expression of Engine.betterPathEvaluator()
{
  return 0;
}

uint64_t variable initialization expression of Engine.isProcessingUpdates()
{
  return 0;
}

uint64_t variable initialization expression of Engine.pendingUpdates()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t variable initialization expression of Engine.externalState@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for Activity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  result = type metadata accessor for ExternalState();
  *(_QWORD *)(a1 + *(int *)(result + 20)) = MEMORY[0x1E0DEE9E8];
  return result;
}

uint64_t variable initialization expression of Engine.activityTimer()
{
  return 0;
}

uint64_t variable initialization expression of Engine.inSyncMailboxesDidSyncTimer()
{
  return 0;
}

uint64_t variable initialization expression of Engine.checkForLongSyncsTimer()
{
  return 0;
}

uint64_t variable initialization expression of Engine.didTearDown()
{
  uint64_t result;

  type metadata accessor for AtomicFlag.Storage();
  result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t variable initialization expression of Engine.stateCapture()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t variable initialization expression of Engine.shouldLogForFirstConnection()
{
  return 0;
}

uint64_t variable initialization expression of Engine.powerTelemetry()
{
  return 0;
}

__n128 __swift_memcpy18_8_3(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Backoff(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 18))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for Backoff()
{
  return &type metadata for Backoff;
}

double sub_1A5902230(uint64_t a1, double a2)
{
  double v3;
  double v4;
  double v5;

  if (a1 < 1)
    return 0.0;
  v3 = exp2((double)(a1 - 1)) * 4.0;
  if (v3 >= 80.0)
  {
    v5 = 1.0;
    if (a2 < 1.0)
    {
      if (a2 < 0.0)
        v5 = 0.0;
      else
        v5 = a2;
    }
    v4 = 40.0;
    v3 = 80.0;
  }
  else
  {
    v4 = v3 * 0.5;
    v5 = 1.0;
    if (a2 < 1.0)
    {
      v5 = 0.0;
      if (a2 >= 0.0)
        v5 = a2;
    }
  }
  return v4 + v5 * 0.5 * v3;
}

uint64_t sub_1A59022DC()
{
  uint64_t v0;

  v0 = sub_1A594A764();
  __swift_allocate_value_buffer_0(v0, qword_1EE7AB150);
  __swift_project_value_buffer_0(v0, (uint64_t)qword_1EE7AB150);
  return sub_1A594A758();
}

uint64_t sub_1A590235C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 72))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A594C114();
    swift_unknownObjectRelease();
  }

  sub_1A5892AD4(v0 + 32);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BetterPathEvaluator()
{
  return objc_opt_self();
}

_QWORD *initializeBufferWithCopyOfBuffer for BetterPathEvaluator.Connection(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for BetterPathEvaluator.Connection(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

__n128 __swift_memcpy16_8_7(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for BetterPathEvaluator.Connection(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for BetterPathEvaluator.Connection()
{
  return &type metadata for BetterPathEvaluator.Connection;
}

void sub_1A59024D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint64_t v19;
  _BYTE v20[4];
  int v21;
  char v22;
  int v23;

  v1 = v0;
  v2 = sub_1A594AED8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(void **)(v0 + 16);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x1E0DEF740], v2, v4);
  v8 = v7;
  v9 = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_11;
  }
  v10 = *(_QWORD *)(v1 + 72);
  if (*(_BYTE *)(v1 + 64) && *(_BYTE *)(v1 + 64) == 1)
  {
    if (v10)
      return;
    v11 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    v12 = sub_1A5902EA0((uint64_t)v8, (uint64_t)sub_1A5904488, v11);
    swift_release_n();
    *(_QWORD *)(v1 + 72) = v12;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    swift_getObjectType();
    sub_1A594C120();
    if (qword_1EE7AB080 != -1)
      swift_once();
    v13 = sub_1A594A764();
    __swift_project_value_buffer_0(v13, (uint64_t)qword_1EE7AB150);
    swift_retain();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v14 = sub_1A594A74C();
    v15 = sub_1A594C030();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      *(_DWORD *)v16 = 68157952;
      v21 = 2;
      sub_1A594C3CC();
      *(_WORD *)(v16 + 8) = 256;
      v20[3] = *(_BYTE *)(v1 + 24);
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, v14, v15, "[%.*hhx] Did create timer.", (uint8_t *)v16, 0xBu);
      MEMORY[0x1A85B1964](v16, -1, -1);
      swift_unknownObjectRelease();

      return;
    }
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
  if (!v10)
    return;
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_1A594C114();
  swift_unknownObjectRelease();
  *(_QWORD *)(v1 + 72) = 0;
  swift_unknownObjectRelease();
  if (qword_1EE7AB080 != -1)
    goto LABEL_17;
LABEL_11:
  v17 = sub_1A594A764();
  __swift_project_value_buffer_0(v17, (uint64_t)qword_1EE7AB150);
  swift_retain();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v14 = sub_1A594A74C();
  v18 = sub_1A594C030();
  if (os_log_type_enabled(v14, v18))
  {
    v19 = swift_slowAlloc();
    *(_DWORD *)v19 = 68157952;
    v23 = 2;
    sub_1A594C3CC();
    *(_WORD *)(v19 + 8) = 256;
    v22 = *(_BYTE *)(v1 + 24);
    sub_1A594C3CC();
    swift_release();
    _os_log_impl(&dword_1A4F90000, v14, v18, "[%.*hhx] Did cancel timer.", (uint8_t *)v19, 0xBu);
    MEMORY[0x1A85B1964](v19, -1, -1);

    return;
  }
LABEL_14:

  swift_release();
}

void sub_1A59028A8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 80);
  if (*(_BYTE *)(v0 + 64) && *(_BYTE *)(v0 + 64) != 1)
  {
    v11 = *(_QWORD *)(v0 + 48);
    if (v1)
    {
      if (v11 == *(_QWORD *)(v0 + 88))
        return;
      v12 = *(void (**)(uint64_t))(*(_QWORD *)v1 + 520);
      v13 = swift_retain_n();
      v12(v13);
    }
    v14 = (*(uint64_t (**)(uint64_t, _UNKNOWN **))(v0 + 96))(v0, &off_1E4E7B8E8);
    *(_QWORD *)(v0 + 80) = v14;
    *(_QWORD *)(v0 + 88) = v11;
    swift_retain();
    swift_release();
    v15 = *(void (**)(uint64_t))(*(_QWORD *)v14 + 512);
    v16 = swift_retain();
    v15(v16);
    swift_release();
    if (qword_1EE7AB080 != -1)
      swift_once();
    v17 = sub_1A594A764();
    __swift_project_value_buffer_0(v17, (uint64_t)qword_1EE7AB150);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_retain_n();
    v18 = sub_1A594A74C();
    v19 = sub_1A594C030();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v25 = v24;
      *(_DWORD *)v20 = 68158722;
      sub_1A594C3CC();
      *(_WORD *)(v20 + 8) = 256;
      swift_release();
      sub_1A594C3CC();
      swift_release();
      *(_WORD *)(v20 + 11) = 2082;
      v21 = ConnectionID.debugDescription.getter(*(unsigned int *)(v14
                                                                 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
      sub_1A5903E24(v21, v22, &v25);
      sub_1A594C3CC();
      swift_release_n();
      v23 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 21) = 2048;
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 440))(v23);
      swift_release();
      sub_1A594C3CC();
      swift_release();
      *(_WORD *)(v20 + 31) = 2048;
      swift_release();
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, v18, v19, "[%.*hhx] Did create connection %{public}s [C%llu], generation %ld", (uint8_t *)v20, 0x29u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v24, -1, -1);
      MEMORY[0x1A85B1964](v20, -1, -1);
      swift_release();

    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
  }
  else
  {
    if (!v1)
      return;
    v2 = *(void (**)(uint64_t))(*(_QWORD *)v1 + 520);
    v3 = swift_retain();
    v2(v3);
    *(_QWORD *)(v0 + 80) = 0;
    *(_QWORD *)(v0 + 88) = 0;
    swift_release();
    if (qword_1EE7AB080 != -1)
      swift_once();
    v4 = sub_1A594A764();
    __swift_project_value_buffer_0(v4, (uint64_t)qword_1EE7AB150);
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_retain_n();
    v5 = sub_1A594A74C();
    v6 = sub_1A594C030();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      v8 = swift_slowAlloc();
      v25 = v8;
      *(_DWORD *)v7 = 68158466;
      sub_1A594C3CC();
      *(_WORD *)(v7 + 8) = 256;
      swift_release();
      sub_1A594C3CC();
      swift_release();
      *(_WORD *)(v7 + 11) = 2082;
      v9 = ConnectionID.debugDescription.getter(*(unsigned int *)(v1
                                                                + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
      sub_1A5903E24(v9, v10, &v25);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 21) = 2048;
      swift_release();
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, v5, v6, "[%.*hhx] Did cancel connection %{public}s, generation %ld", (uint8_t *)v7, 0x1Fu);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v8, -1, -1);
      MEMORY[0x1A85B1964](v7, -1, -1);

      return;
    }

    swift_release_n();
  }
  swift_release_n();
}

uint64_t sub_1A5902E34()
{
  uint64_t result;
  __uint64_t v1;
  unint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = static MonotonicTime.now()();
    v2 = sub_1A590450C(v1, 2.0);
    sub_1A59024D0(v2);
    sub_1A59028A8();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A5902EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t ObjectType;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[7];

  v37 = a2;
  v38 = a3;
  v32 = a1;
  v3 = sub_1A594AE84();
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  MEMORY[0x1E0C80A78](v3);
  v42 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)&v32 - v6;
  v7 = sub_1A594AD10();
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1A594AD34();
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A594AD70();
  v33 = *(_QWORD *)(v13 - 8);
  v34 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A594C0CC();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938];
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5904490();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A55E1698(&qword_1EE79A138, v17, MEMORY[0x1E0DEF948]);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795FF0);
  sub_1A5524F80(&qword_1EE799B88, &qword_1EE795FF0);
  sub_1A594C5C4();
  v21 = sub_1A594C0D8();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
  ObjectType = swift_getObjectType();
  aBlock[4] = v37;
  aBlock[5] = v38;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A587D408;
  aBlock[3] = &block_descriptor_32;
  v23 = _Block_copy(aBlock);
  swift_retain();
  sub_1A594AD4C();
  sub_1A5903210();
  sub_1A594C0E4();
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v34);
  swift_release();
  *v9 = 250;
  v25 = v39;
  v24 = v40;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v39 + 104))(v9, *MEMORY[0x1E0DEF490], v40);
  v26 = v42;
  sub_1A594AE6C();
  v27 = v41;
  sub_1A594AE78();
  v28 = *(void (**)(char *, uint64_t))(v43 + 8);
  v29 = v26;
  v30 = v44;
  v28(v29, v44);
  MEMORY[0x1A85AE700](v27, v9, v9, ObjectType);
  v28(v27, v30);
  (*(void (**)(_QWORD *, uint64_t))(v25 + 8))(v9, v24);
  return v21;
}

uint64_t sub_1A5903210()
{
  sub_1A594AD34();
  sub_1A55E1698((unint64_t *)&qword_1EE7A19E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A18);
  sub_1A5524F80((unint64_t *)&qword_1EE7A40E0, (uint64_t *)&unk_1EE7A1A18);
  return sub_1A594C5C4();
}

void sub_1A59032BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v2 + 80);
  if (v7)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
    {
      if (*(_DWORD *)(v7 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) == *(_DWORD *)(a1 + 32))
      {
        v9 = *(_QWORD *)(v2 + 88);
        v10 = (uint64_t *)(a1 + 40);
        while (1)
        {
          v11 = *v10;
          v10 += 5;
          if (v11 == 0x8000000000000010)
            break;
          if (!--v8)
            return;
        }
        v12 = *(void (**)(uint64_t))(*(_QWORD *)v7 + 312);
        v13 = swift_retain();
        v12(v13);
        sub_1A59033BC(v9, (uint64_t)v6);
        swift_release();
        sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      }
    }
  }
}

uint64_t sub_1A59033BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _DWORD *v27;
  _DWORD *v28;
  _DWORD *v29;
  int v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v3 = v2;
  v66 = a2;
  v5 = sub_1A594ACEC();
  v64 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v59 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v60 = (char *)&v57 - v8;
  MEMORY[0x1E0C80A78](v9);
  v62 = (char *)&v57 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v63 = (uint64_t)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v57 - v15;
  v17 = _s5StateO6ActionOMa();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v57 - v21;
  if (qword_1EE7AB080 != -1)
    swift_once();
  v23 = sub_1A594A764();
  v24 = __swift_project_value_buffer_0(v23, (uint64_t)qword_1EE7AB150);
  swift_retain();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v65 = v24;
  v25 = sub_1A594A74C();
  v26 = sub_1A594C000();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (_DWORD *)swift_slowAlloc();
    v61 = v16;
    v58 = v22;
    v28 = v27;
    *v27 = 68158208;
    LODWORD(v68) = 2;
    sub_1A594C3CC();
    *((_WORD *)v28 + 4) = 256;
    LOBYTE(v68) = *(_BYTE *)(v3 + 24);
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)((char *)v28 + 11) = 2048;
    v68 = a1;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v25, v26, "[%.*hhx] Connection generation %ld state did change.", (uint8_t *)v28, 0x15u);
    v29 = v28;
    v22 = v58;
    v16 = v61;
    MEMORY[0x1A85B1964](v29, -1, -1);

  }
  else
  {

    swift_release();
  }
  sub_1A590456C(a1, v66, (uint64_t)v22);
  sub_1A5903D10((uint64_t)v22, (uint64_t)v19);
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v19, 2, v11);
  if (!v30)
  {
    sub_1A5903D54((uint64_t)v19, (uint64_t)v16);
    v35 = v63;
    sub_1A5903D9C((uint64_t)v16, v63);
    v36 = v64;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v35, 1, v5) == 1)
    {
      sub_1A5903DE4(v35);
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v37 = sub_1A594A74C();
      v38 = sub_1A594C030();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc();
        *(_DWORD *)v39 = 68158208;
        LODWORD(v68) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v39 + 8) = 256;
        LOBYTE(v68) = *(_BYTE *)(v3 + 24);
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v39 + 11) = 2048;
        v68 = a1;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v37, v38, "[%.*hhx] Cancelling connection generation %ld", (uint8_t *)v39, 0x15u);
        MEMORY[0x1A85B1964](v39, -1, -1);
      }
      else
      {
        swift_release();
      }

    }
    else
    {
      v40 = v62;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v62, v35, v5);
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v41 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
      v42 = v60;
      v41(v60, v40, v5);
      v43 = sub_1A594A74C();
      v44 = sub_1A594C030();
      LODWORD(v66) = v44;
      if (os_log_type_enabled(v43, v44))
      {
        v45 = swift_slowAlloc();
        v61 = v16;
        v46 = v45;
        v65 = swift_slowAlloc();
        v68 = v65;
        *(_DWORD *)v46 = 68158466;
        LODWORD(v67) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v46 + 8) = 256;
        LOBYTE(v67) = *(_BYTE *)(v3 + 24);
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v46 + 11) = 2048;
        v67 = a1;
        sub_1A594C3CC();
        *(_WORD *)(v46 + 21) = 2082;
        v41(v59, v42, v5);
        v47 = sub_1A594B490();
        v67 = sub_1A5903E24(v47, v48, &v68);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        v49 = *(void (**)(char *, uint64_t))(v64 + 8);
        v49(v42, v5);
        _os_log_impl(&dword_1A4F90000, v43, (os_log_type_t)v66, "[%.*hhx] Cancelling connection generation %ld: %{public}s", (uint8_t *)v46, 0x1Fu);
        v50 = v65;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v50, -1, -1);
        MEMORY[0x1A85B1964](v46, -1, -1);

        v49(v62, v5);
        sub_1A5903DE4((uint64_t)v61);
        goto LABEL_29;
      }

      v55 = *(void (**)(char *, uint64_t))(v36 + 8);
      v55(v42, v5);
      swift_release();
      v55(v40, v5);
    }
    sub_1A5903DE4((uint64_t)v16);
    goto LABEL_29;
  }
  if (v30 != 1)
  {
    v31 = *(_QWORD *)(v3 + 80);
    if (v31)
    {
      *(_QWORD *)(v3 + 80) = 0;
      *(_QWORD *)(v3 + 88) = 0;
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v32 = sub_1A594A74C();
      v33 = sub_1A594C030();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc();
        *(_DWORD *)v34 = 68158208;
        LODWORD(v68) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v34 + 8) = 256;
        LOBYTE(v68) = *(_BYTE *)(v3 + 24);
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v34 + 11) = 2048;
        v68 = a1;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v32, v33, "[%.*hhx] Promoting connection generation %ld.", (uint8_t *)v34, 0x15u);
        MEMORY[0x1A85B1964](v34, -1, -1);

      }
      else
      {

        swift_release();
      }
      v54 = MEMORY[0x1A85B1A0C](v3 + 32);
      if (v54)
      {
        if (!*(_QWORD *)(v54 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections))
        {
          swift_release();
          swift_unknownObjectRelease();
          goto LABEL_29;
        }
        swift_retain();
        swift_retain();
        sub_1A5916018(v31);
        swift_unknownObjectRelease();
        swift_release_n();
      }
      goto LABEL_28;
    }
    swift_retain();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v51 = sub_1A594A74C();
    v52 = sub_1A594C030();
    if (!os_log_type_enabled(v51, v52))
    {

LABEL_28:
      swift_release();
      goto LABEL_29;
    }
    v53 = swift_slowAlloc();
    *(_DWORD *)v53 = 68158208;
    LODWORD(v68) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v53 + 8) = 256;
    LOBYTE(v68) = *(_BYTE *)(v3 + 24);
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v53 + 11) = 2048;
    v68 = a1;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v51, v52, "[%.*hhx] Trying to promote connection generation %ld, but there’s no connection.", (uint8_t *)v53, 0x15u);
    MEMORY[0x1A85B1964](v53, -1, -1);

  }
LABEL_29:
  sub_1A59024D0();
  sub_1A59028A8();
  return sub_1A55034FC((uint64_t)v22, (uint64_t (*)(_QWORD))_s5StateO6ActionOMa);
}

uint64_t sub_1A5903D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s5StateO6ActionOMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5903D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5903D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5903DE4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5903E24(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1A5903EF4(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1A558CC98((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1A558CC98((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1A5903EF4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A594C420();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1A59040AC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1A594C7D4();
  if (!v8)
  {
    sub_1A594C9B4();
    __break(1u);
LABEL_17:
    result = sub_1A594CA68();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1A59040AC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1A5904140(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A5904318(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1A5904318(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A5904140(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1A59042B4(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1A594C72C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1A594C9B4();
      __break(1u);
LABEL_10:
      v2 = sub_1A594B640();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1A594CA68();
    __break(1u);
LABEL_14:
    result = sub_1A594C9B4();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1A59042B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B378);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size_0(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A5904318(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B378);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5904464()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A5904488()
{
  return sub_1A5902E34();
}

unint64_t sub_1A5904490()
{
  unint64_t result;

  result = qword_1EE7A4150;
  if (!qword_1EE7A4150)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE7A4150);
  }
  return result;
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

__n128 __swift_memcpy17_8_6(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *_s5StateOMa()
{
  return &_s5StateON;
}

unint64_t sub_1A590450C(unint64_t result, double a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (*(_BYTE *)(v2 + 16) == 1)
  {
    v3 = *(_QWORD *)(v2 + 8);
    if (v3 <= result)
    {
      v4 = result - v3;
      if ((uint64_t)(result - v3) >= 0)
      {
LABEL_6:
        if ((double)v4 / 1000000000.0 > a2)
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_BYTE *)(v2 + 16) = 2;
        }
        return result;
      }
    }
    else
    {
      if ((uint64_t)(v3 - result) >= 0)
      {
        v4 = result - v3;
        goto LABEL_6;
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A590456C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char *v14;
  uint64_t v15;

  v7 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  if (*(_BYTE *)(v3 + 16) == 2 && *(_QWORD *)v3 == a1)
  {
    sub_1A58ECAA8(a2, (uint64_t)&v15 - v10);
    v14 = (char *)sub_1A5904698 + 4 * byte_1A59E0FE8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a3, 1, 2, v12);
}

uint64_t sub_1A5904698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1A58ECAEC(v1);
  *(_QWORD *)v0 = v3 + 1;
  *(_QWORD *)(v0 + 8) = 0;
  *(_BYTE *)(v0 + 16) = 0;
  v4 = sub_1A594ACEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 1, 1, v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 0, 2, v5);
}

BOOL sub_1A590486C(uint64_t a1, uint64_t a2)
{
  return sub_1A5904CA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_1A5904888(uint64_t a1)
{
  uint64_t v2;
  unsigned __int16 v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v17 = *(_QWORD *)(a1 + 192);
  v18 = *(_QWORD *)(a1 + 184);
  v15 = *(_QWORD *)(a1 + 208);
  v16 = *(_QWORD *)(a1 + 200);
  v13 = *(_QWORD *)(a1 + 224);
  v14 = *(_QWORD *)(a1 + 216);
  v11 = *(_QWORD *)(a1 + 240);
  v12 = *(_QWORD *)(a1 + 232);
  v10 = *(_OWORD *)(a1 + 248);
  v8 = *(_OWORD *)(a1 + 280);
  v9 = *(_OWORD *)(a1 + 264);
  v7 = *(_OWORD *)(a1 + 296);
  v6 = *(_OWORD *)(a1 + 312);
  v2 = *(_QWORD *)(a1 + 336);
  v5 = *(_QWORD *)(a1 + 328);
  v3 = *(_WORD *)(a1 + 344);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5904A10(v18, v17, v16, v15, v14, v13, v12, v11, v10, *((uint64_t *)&v10 + 1), v9, DWORD2(v9), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5,
    v2,
    v3);
  return a1;
}

unint64_t sub_1A5904A10(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int16 a21)
{
  int v23;

  v23 = a21 >> 14;
  switch(v23)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 1:
      swift_bridgeObjectRelease();
      sub_1A5904BF8(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 0:
      return sub_1A5904B38(result, a2, a3, a4, a5);
  }
  return result;
}

unint64_t sub_1A5904B38(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_1A5904B7C(a3, a4, a5);
  }
  return result;
}

unint64_t sub_1A5904B7C(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1A5904BA8(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A5904BA8(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1A5904BBC(result);
  return result;
}

unint64_t sub_1A5904BBC(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A5904BF8(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10)
{
  int v10;

  v10 = (a10 >> 21) & 7;
  if (v10 == 3)
    return sub_1A5904C5C(result, a2, a3, a4);
  if (v10 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A5904C5C(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 0xFF)
    return sub_1A5904C70(result, a2, a3, a4);
  return result;
}

unint64_t sub_1A5904C70(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_1A5904BA8(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL sub_1A5904CA4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  _BOOL4 v8;
  _BOOL4 v10;

  if (a3)
  {
    v8 = a6 == 1 && a1 == a4 && a2 == a5;
    v10 = a6 == 2 && a1 == a4;
    if (a3 == 1)
      return v8;
    else
      return v10;
  }
  else
  {
    return !a6 && a1 == a4;
  }
}

uint64_t *sub_1A5904CE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_1A594ACEC();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_1A5904E08(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1A594ACEC();
    v5 = *(_QWORD *)(v4 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  return result;
}

void *sub_1A5904E98(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1A594ACEC();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1A5904F94(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = sub_1A594ACEC();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
      v17 = v16(a1, 1, v14);
      v18 = v16(a2, 1, v14);
      if (v17)
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 16))(a1, a2, v14);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
          return a1;
        }
      }
      else
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 24))(a1, a2, v14);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v15 + 8))(a1, v14);
      }
      v13 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_1A5903DE4((uint64_t)a1);
LABEL_7:
    v13 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = sub_1A594ACEC();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_1A5905158(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1A594ACEC();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1A5905254(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = sub_1A594ACEC();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
      v17 = v16(a1, 1, v14);
      v18 = v16(a2, 1, v14);
      if (v17)
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 32))(a1, a2, v14);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
          return a1;
        }
      }
      else
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 40))(a1, a2, v14);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v15 + 8))(a1, v14);
      }
      v13 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_1A5903DE4((uint64_t)a1);
LABEL_7:
    v13 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = sub_1A594ACEC();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1A5905418()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5905424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_1A5905474()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5905480(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1A59054D8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_1A5905514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t _s5StateO6ActionOMa()
{
  uint64_t result;

  result = qword_1EE7AB1D0;
  if (!qword_1EE7AB1D0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A5905594()
{
  unint64_t v0;

  sub_1A59055E8();
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

void sub_1A59055E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE798EE0)
  {
    sub_1A594ACEC();
    v0 = sub_1A594C354();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE798EE0);
  }
}

ValueMetadata *_s10GenerationVMa()
{
  return &_s10GenerationVN;
}

uint64_t sub_1A590564C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _DWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)(uint64_t);
  uint64_t v116;
  _DWORD *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t (*v120)(uint64_t);
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  int64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _BYTE *v160;
  int64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  int64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  _BYTE *v195;
  __n128 v196;
  _BYTE *v197;
  uint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  unint64_t v201;
  unint64_t v202;
  unint64_t v203;
  uint64_t v204;
  int64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void (*v213)(char *, uint64_t, uint64_t);
  char *v214;
  unint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  void (*v220)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  unint64_t v227;
  int64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  void (*v235)(char *, uint64_t, uint64_t);
  char *v236;
  unint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  unsigned int (*v248)(uint64_t, uint64_t, uint64_t);
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  void (*v252)(char *, uint64_t, uint64_t);
  char *v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  int64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  _BYTE *v270;
  _BYTE *v271;
  char v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  int64_t v277;
  uint64_t v278;
  int64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  _BYTE *v291;
  uint64_t (*v292)(uint64_t, uint64_t, uint64_t);
  uint64_t v293;
  int v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  unint64_t v313;
  unint64_t v314;
  uint64_t v315;
  char *v316;
  _BYTE *v317;
  char *v318;
  char *v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  uint64_t v323;
  char *v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  char *v330;
  uint64_t v331;
  char *v332;
  char *v333;
  unint64_t v334;
  unint64_t v335;
  char *v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  char *v343;
  char *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  char *v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  char *v352;
  uint64_t v353;
  uint64_t v354;
  _QWORD *v355;
  uint64_t v356;
  char *v357;
  char *v358;
  uint64_t v359;
  _QWORD *v360;
  _BYTE *v361;
  void (*v362)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v363;
  unint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  unint64_t v369;
  unint64_t v370;
  uint64_t v371;
  int64_t v372;
  uint64_t v373;
  __int128 v374;
  __int128 v375;
  uint64_t v376;

  v4 = sub_1A594ACEC();
  v371 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v319 = (char *)&v310 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v322 = (char *)&v310 - v7;
  MEMORY[0x1E0C80A78](v8);
  v324 = (char *)&v310 - v9;
  MEMORY[0x1E0C80A78](v10);
  v342 = (char *)&v310 - v11;
  MEMORY[0x1E0C80A78](v12);
  v333 = (char *)&v310 - v13;
  MEMORY[0x1E0C80A78](v14);
  v348 = (char *)&v310 - v15;
  MEMORY[0x1E0C80A78](v16);
  v343 = (char *)&v310 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  MEMORY[0x1E0C80A78](v18);
  v320 = (uint64_t)&v310 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v321 = (uint64_t)&v310 - v21;
  MEMORY[0x1E0C80A78](v22);
  v323 = (uint64_t)&v310 - v23;
  MEMORY[0x1E0C80A78](v24);
  v358 = (char *)&v310 - v25;
  MEMORY[0x1E0C80A78](v26);
  v341 = (uint64_t)&v310 - v27;
  MEMORY[0x1E0C80A78](v28);
  v327 = (uint64_t)&v310 - v29;
  MEMORY[0x1E0C80A78](v30);
  v347 = (uint64_t)&v310 - v31;
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v310 - v33;
  v35 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796498);
  MEMORY[0x1E0C80A78](v35);
  v357 = (char *)&v310 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798520);
  MEMORY[0x1E0C80A78](v37);
  v326 = (uint64_t)&v310 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v39);
  v328 = (uint64_t)&v310 - v40;
  MEMORY[0x1E0C80A78](v41);
  v356 = (uint64_t)&v310 - v42;
  MEMORY[0x1E0C80A78](v43);
  v355 = (uint64_t *)((char *)&v310 - v44);
  v45 = type metadata accessor for ConnectionStatus.Error(0);
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v329 = (uint64_t)&v310 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v48);
  v362 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v310 - v49);
  MEMORY[0x1E0C80A78](v50);
  v354 = (uint64_t)&v310 - v51;
  v52 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798568);
  MEMORY[0x1E0C80A78](v52);
  v330 = (char *)&v310 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v54);
  v361 = (char *)&v310 - v55;
  MEMORY[0x1E0C80A78](v56);
  v58 = (char *)&v310 - v57;
  *(_QWORD *)&v374 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  MEMORY[0x1E0C80A78](v374);
  v360 = (uint64_t *)((char *)&v310 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v60);
  v62 = (_DWORD *)((char *)&v310 - v61);
  MEMORY[0x1E0C80A78](v63);
  v65 = (char *)&v310 - v64;
  MEMORY[0x1E0C80A78](v66);
  v336 = (char *)&v310 - v67;
  MEMORY[0x1E0C80A78](v68);
  v337 = (char *)&v310 - v69;
  v373 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  MEMORY[0x1E0C80A78](v373);
  MEMORY[0x1E0C80A78](v70);
  MEMORY[0x1E0C80A78](v71);
  MEMORY[0x1E0C80A78](v72);
  v325 = (char *)&v310 - v73;
  MEMORY[0x1E0C80A78](v74);
  v332 = (char *)&v310 - v75;
  MEMORY[0x1E0C80A78](v76);
  v331 = (uint64_t)&v310 - v77;
  MEMORY[0x1E0C80A78](v78);
  v340 = (uint64_t)&v310 - v79;
  MEMORY[0x1E0C80A78](v80);
  v344 = (char *)&v310 - v81;
  MEMORY[0x1E0C80A78](v82);
  v339 = (uint64_t)&v310 - v83;
  MEMORY[0x1E0C80A78](v84);
  v346 = (uint64_t)&v310 - v85;
  MEMORY[0x1E0C80A78](v86);
  v349 = (char *)&v310 - v87;
  MEMORY[0x1E0C80A78](v88);
  v345 = (uint64_t)&v310 - v89;
  MEMORY[0x1E0C80A78](v90);
  v351 = (uint64_t)&v310 - v91;
  MEMORY[0x1E0C80A78](v92);
  v352 = (char *)&v310 - v93;
  MEMORY[0x1E0C80A78](v94);
  v350 = (uint64_t)&v310 - v95;
  MEMORY[0x1E0C80A78](v96);
  v369 = (unint64_t)&v310 - v97;
  MEMORY[0x1E0C80A78](v98);
  v100 = (char *)&v310 - v99;
  MEMORY[0x1E0C80A78](v101);
  v359 = (uint64_t)&v310 - v102;
  v108.n128_f64[0] = MEMORY[0x1E0C80A78](v103);
  v368 = (uint64_t)&v310 - v109;
  v110 = *(_QWORD *)(a1 + 16);
  if (!v110)
    return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v46 + 56))(a2, 1, 1, v45, v108);
  v367 = v46;
  v311 = v104;
  v315 = v107;
  v312 = v106;
  v316 = v34;
  v318 = v58;
  v363 = v45;
  v317 = a2;
  LODWORD(v370) = *MEMORY[0x1E0CCEB08];
  v111 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
  v112 = *(_QWORD *)(v105 + 72);
  v113 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v372 = v110;
  v314 = v110 - 1;
  v334 = v111;
  v338 = v113;
  v313 = v111 + v112 * (v110 - 1);
  v114 = v113 + v313;
  v366 = v112;
  v353 = -v112;
  v115 = type metadata accessor for CommandConnection.RecentErrors.Error;
  v335 = v110;
  v364 = v110;
  v116 = (uint64_t)v337;
  v117 = v336;
  while (1)
  {
    v119 = v368;
    sub_1A55034B8(v114, v368, v115);
    sub_1A55034B8(v119 + *(int *)(v373 + 20), v116, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    if (swift_getEnumCaseMultiPayload() != 3)
      goto LABEL_10;
    v120 = v115;
    sub_1A55034B8(v116, (uint64_t)v117, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    v121 = v371;
    v122 = (*(uint64_t (**)(_DWORD *, uint64_t))(v371 + 88))(v117, v4);
    if (v122 != (_DWORD)v370)
      break;
    (*(void (**)(_DWORD *, uint64_t))(v121 + 96))(v117, v4);
    v115 = v120;
    if ((*v117 - 52) >= 3 && *v117 != 60)
      goto LABEL_10;
    v118 = v364 - 1;
    sub_1A55034FC(v116, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    sub_1A55034FC(v368, v115);
    v114 += v353;
    v364 = v118;
    if (!v118)
    {
      swift_bridgeObjectRelease();
      a2 = v317;
      v45 = v363;
      v46 = v367;
      return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v46 + 56))(a2, 1, 1, v45, v108);
    }
  }
  (*(void (**)(_DWORD *, uint64_t))(v121 + 8))(v117, v4);
LABEL_10:
  sub_1A55034FC(v116, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  sub_1A55034FC(v368, type metadata accessor for CommandConnection.RecentErrors.Error);
  v123 = v338;
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v364 = v123 + v334;
  v368 = MEMORY[0x1E0DEE9D8];
  v124 = -v366;
  v125 = v335;
  v365 = v4;
  do
  {
    while (1)
    {
      --v125;
      v126 = v364 + v366 * v125;
      while (1)
      {
        if (v125 >= v372)
        {
          __break(1u);
          goto LABEL_35;
        }
        sub_1A55034B8(v126, (uint64_t)v100, type metadata accessor for CommandConnection.RecentErrors.Error);
        sub_1A55034B8((uint64_t)&v100[*(int *)(v373 + 20)], (uint64_t)v65, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
        if (swift_getEnumCaseMultiPayload() != 3)
          break;
        sub_1A55034B8((uint64_t)v65, (uint64_t)v62, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
        v127 = v371;
        v128 = (*(uint64_t (**)(_DWORD *, uint64_t))(v371 + 88))(v62, v4);
        if (v128 != (_DWORD)v370)
        {
          (*(void (**)(_DWORD *, uint64_t))(v127 + 8))(v62, v4);
          break;
        }
        (*(void (**)(_DWORD *, uint64_t))(v127 + 96))(v62, v4);
        if ((*v62 - 52) >= 3 && *v62 != 60)
          break;
        sub_1A55034FC((uint64_t)v65, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
        sub_1A55034FC((uint64_t)v100, type metadata accessor for CommandConnection.RecentErrors.Error);
        --v125;
        v126 += v124;
        if (v125 == -1)
          goto LABEL_35;
      }
      sub_1A55034FC((uint64_t)v65, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      v129 = v359;
      sub_1A54E3394((uint64_t)v100, v359, type metadata accessor for CommandConnection.RecentErrors.Error);
      v130 = v129;
      v131 = v369;
      sub_1A54E3394(v130, v369, type metadata accessor for CommandConnection.RecentErrors.Error);
      v132 = v131 + *(int *)(v373 + 20);
      v133 = v360;
      sub_1A55034B8(v132, (uint64_t)v360, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v134 = v133[1];
        if (v134)
        {
          v135 = (uint64_t)v355;
          *v355 = *v133;
          *(_QWORD *)(v135 + 8) = v134;
          v136 = type metadata accessor for ConnectionStatus.Error.Details(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 56))(v135, 0, 1, v136);
        }
        else
        {
          v139 = type metadata accessor for ConnectionStatus.Error.Details(0);
          v135 = (uint64_t)v355;
          (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 56))(v355, 1, 1, v139);
        }
        v140 = v356;
        sub_1A54E330C(v135, v356, &qword_1EE798520);
        v141 = sub_1A594A0EC();
        v142 = (uint64_t)v357;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 56))(v357, 1, 1, v141);
        v143 = v140;
        v138 = v361;
        ConnectionStatus.Error.init(kind:details:backedOffUntil:)(2, v143, v142, v361);
        sub_1A5510284(v135, &qword_1EE798520);
        v137 = 0;
      }
      else
      {
        sub_1A55034FC((uint64_t)v133, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
        v137 = 1;
        v138 = v361;
      }
      v144 = v367;
      v145 = v363;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v367 + 56))(v138, v137, 1, v363);
      sub_1A55034FC(v369, type metadata accessor for CommandConnection.RecentErrors.Error);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v144 + 48))(v138, 1, v145) != 1)
        break;
      sub_1A5510284((uint64_t)v138, &qword_1EE798568);
      v4 = v365;
      if (!v125)
        goto LABEL_35;
    }
    v146 = v354;
    sub_1A54E3394((uint64_t)v138, v354, type metadata accessor for ConnectionStatus.Error);
    sub_1A54E3394(v146, (uint64_t)v362, type metadata accessor for ConnectionStatus.Error);
    v147 = v368;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v147 = sub_1A5923810(0, *(_QWORD *)(v147 + 16) + 1, 1, v147);
    v4 = v365;
    v148 = v147;
    v149 = *(_QWORD *)(v147 + 16);
    v368 = v148;
    v150 = *(_QWORD *)(v148 + 24);
    if (v149 >= v150 >> 1)
      v368 = sub_1A5923810(v150 > 1, v149 + 1, 1, v368);
    v151 = v367;
    v152 = v368;
    *(_QWORD *)(v368 + 16) = v149 + 1;
    sub_1A54E3394((uint64_t)v362, v152+ ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80))+ *(_QWORD *)(v151 + 72) * v149, type metadata accessor for ConnectionStatus.Error);
  }
  while (v125);
LABEL_35:
  v153 = v338;
  swift_bridgeObjectRelease();
  v154 = v367;
  if (*(_QWORD *)(v368 + 16))
  {
    v155 = (uint64_t)v318;
    sub_1A55034B8(v368 + ((*(unsigned __int8 *)(v367 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v367 + 80)), (uint64_t)v318, type metadata accessor for ConnectionStatus.Error);
    v156 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v154 + 56);
    v157 = v155;
    v158 = 0;
  }
  else
  {
    v156 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v367 + 56);
    v155 = (uint64_t)v318;
    v157 = (uint64_t)v318;
    v158 = 1;
  }
  v159 = v363;
  v156(v157, v158, 1, v363);
  v160 = v317;
  v161 = v372;
  v162 = (uint64_t)v330;
  swift_bridgeObjectRelease();
  sub_1A54E330C(v155, v162, &qword_1EE798568);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))(v162, 1, v159) != 1)
  {
    sub_1A5510284(v155, &qword_1EE798568);
    v177 = v329;
    sub_1A54E3394(v162, v329, type metadata accessor for ConnectionStatus.Error);
    sub_1A54E3394(v177, (uint64_t)v160, type metadata accessor for ConnectionStatus.Error);
    return ((uint64_t (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v156)(v160, 0, 1, v159);
  }
  v373 = (uint64_t)v156;
  sub_1A5510284(v162, &qword_1EE798568);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v163 = v153 + v334;
  v164 = -v366;
  v165 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v166 = v335;
  v167 = (uint64_t)v352;
  do
  {
    --v166;
    v169 = v163 + v366 * v166;
    while (1)
    {
      if (v166 >= v161)
      {
        __break(1u);
        goto LABEL_54;
      }
      sub_1A55034B8(v169, v167, type metadata accessor for CommandConnection.RecentErrors.Error);
      if ((sub_1A590778C() & 1) != 0)
        break;
      sub_1A55034FC(v167, type metadata accessor for CommandConnection.RecentErrors.Error);
      --v166;
      v169 += v164;
      if (v166 == -1)
        goto LABEL_54;
    }
    v170 = v167;
    v171 = v350;
    sub_1A54E3394(v170, v350, type metadata accessor for CommandConnection.RecentErrors.Error);
    v172 = v171;
    v173 = v351;
    sub_1A54E3394(v172, v351, type metadata accessor for CommandConnection.RecentErrors.Error);
    sub_1A59078E4(v173, (uint64_t)&v375);
    sub_1A55034FC(v173, type metadata accessor for CommandConnection.RecentErrors.Error);
    v174 = v376;
    if (v376)
    {
      v374 = v375;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v165 = sub_1A59236EC(0, v165[2] + 1, 1, v165);
      v176 = v165[2];
      v175 = v165[3];
      if (v176 >= v175 >> 1)
        v165 = sub_1A59236EC((_QWORD *)(v175 > 1), v176 + 1, 1, v165);
      v165[2] = v176 + 1;
      v168 = &v165[3 * v176];
      *((_OWORD *)v168 + 2) = v374;
      v168[6] = v174;
      v161 = v372;
    }
    v167 = (uint64_t)v352;
  }
  while (v166);
LABEL_54:
  v179 = v338;
  swift_bridgeObjectRelease();
  v180 = v165[2];
  if (v180)
  {
    v181 = v165 + 6;
    v182 = v165[2];
    v183 = v363;
    v184 = (uint64_t)v318;
    while (2)
    {
      v185 = *(v181 - 2);
      switch((v185 >> 59) & 0x1E | (v185 >> 2) & 1)
      {
        case 0uLL:
        case 9uLL:
        case 0xDuLL:
          v189 = *(v181 - 1);
          v190 = *v181;
          goto LABEL_71;
        case 0x10uLL:
          v186 = __ROR8__(v185, 3);
          v187 = (1 << v186) & 0x5FDFF9A7;
          if ((v186 ^ 0x1000000000000000uLL) > 0x1E || v187 == 0)
            goto LABEL_56;
          v189 = *(v181 - 1);
          v190 = *v181;
          if (v185 == 0x8000000000000068 || v185 == 0x80000000000000D8)
          {
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A5907FF0(v185);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A5907FF0(v185);
            swift_bridgeObjectRelease();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A5907FF0(v185);
            v191 = v356;
            sub_1A59079BC(v185, v189, v190, v356);
            v192 = v328;
            sub_1A54E330C(v191, v328, &qword_1EE798520);
            v193 = sub_1A594A0EC();
            v194 = (uint64_t)v357;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v193 - 8) + 56))(v357, 1, 1, v193);
            v195 = v317;
            ConnectionStatus.Error.init(kind:details:backedOffUntil:)(2, v192, v194, v317);
            sub_1A5510284(v191, &qword_1EE798520);
            sub_1A5904BA8(v185);
            swift_bridgeObjectRelease();
            sub_1A5904BA8(v185);
            swift_bridgeObjectRelease();
            sub_1A5510284(v184, &qword_1EE798568);
            v197 = v195;
            v198 = v183;
            return ((uint64_t (*)(_BYTE *, _QWORD, uint64_t, uint64_t, __n128))v373)(v197, 0, 1, v198, v196);
          }
LABEL_71:
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A5907FF0(v185);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A5907FF0(v185);
          v369 = v189;
          v370 = v185;
          v364 = v185;
          v367 = v189;
          v368 = v190;
          *(_QWORD *)&v374 = v190;
          goto LABEL_72;
        default:
LABEL_56:
          v181 += 3;
          if (--v182)
            continue;
          v199 = v165 + 6;
          v200 = (uint64_t)v349;
          break;
      }
      break;
    }
    while (1)
    {
      v201 = *(v199 - 2);
      if ((~v201 & 0xF000000000000007) == 0)
        break;
      v199 += 3;
      if (!--v180)
      {
        v369 = 0;
        v370 = 0;
        *(_QWORD *)&v374 = 0;
        goto LABEL_115;
      }
    }
    v251 = *v199;
    v369 = *(v199 - 1);
    v370 = v201;
    *(_QWORD *)&v374 = v251;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_115:
    v364 = 0;
    v367 = 0;
    v368 = 0;
  }
  else
  {
    v369 = 0;
    v370 = 0;
    *(_QWORD *)&v374 = 0;
    v364 = 0;
    v367 = 0;
    v368 = 0;
LABEL_72:
    v200 = (uint64_t)v349;
  }
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v202 = v179 + v334;
  v203 = MEMORY[0x1E0DEE9D8];
  v204 = -v366;
  v205 = v335;
  do
  {
    while (1)
    {
      --v205;
      v206 = v202 + v366 * v205;
      while (1)
      {
        if (v205 >= v161)
        {
          __break(1u);
          goto LABEL_88;
        }
        sub_1A55034B8(v206, v200, type metadata accessor for CommandConnection.RecentErrors.Error);
        v179 = v200;
        if ((sub_1A590778C() & 1) != 0)
          break;
        sub_1A55034FC(v200, type metadata accessor for CommandConnection.RecentErrors.Error);
        --v205;
        v206 += v204;
        if (v205 == -1)
          goto LABEL_88;
      }
      v207 = v345;
      sub_1A54E3394(v200, v345, type metadata accessor for CommandConnection.RecentErrors.Error);
      v208 = v346;
      sub_1A54E3394(v207, v346, type metadata accessor for CommandConnection.RecentErrors.Error);
      v209 = v347;
      sub_1A5907C14(v208, v347);
      sub_1A55034FC(v208, type metadata accessor for CommandConnection.RecentErrors.Error);
      v210 = v371;
      v211 = v209;
      v212 = v209;
      v179 = v365;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v371 + 48))(v211, 1, v365) != 1)
        break;
      sub_1A5510284(v212, (uint64_t *)&unk_1EE798EC0);
      v200 = (uint64_t)v349;
      if (!v205)
        goto LABEL_88;
    }
    v213 = *(void (**)(char *, uint64_t, uint64_t))(v210 + 32);
    v214 = v343;
    v213(v343, v212, v179);
    v213(v348, (uint64_t)v214, v179);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v203 = sub_1A59236D8(0, *(_QWORD *)(v203 + 16) + 1, 1, v203);
    v200 = (uint64_t)v349;
    v216 = *(_QWORD *)(v203 + 16);
    v215 = *(_QWORD *)(v203 + 24);
    v179 = v216 + 1;
    if (v216 >= v215 >> 1)
      v203 = sub_1A59236D8(v215 > 1, v216 + 1, 1, v203);
    *(_QWORD *)(v203 + 16) = v179;
    v213((char *)(v203+ ((*(unsigned __int8 *)(v371 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v371 + 80))+ *(_QWORD *)(v371 + 72) * v216), (uint64_t)v348, v365);
    v161 = v372;
  }
  while (v205);
LABEL_88:
  v217 = v338;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v203 + 16))
  {
    v218 = v371;
    v179 = (uint64_t)v316;
    v219 = v365;
    (*(void (**)(char *, unint64_t, uint64_t))(v371 + 16))(v316, v203 + ((*(unsigned __int8 *)(v218 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v218 + 80)), v365);
    v220 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v218 + 56);
    v221 = v179;
    v222 = 0;
    v223 = v219;
  }
  else
  {
    v220 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v371 + 56);
    v221 = (uint64_t)v316;
    v222 = 1;
    v223 = v365;
  }
  v362 = v220;
  v220(v221, v222, 1, v223);
  v224 = (uint64_t)v344;
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v225 = v217 + v334;
  v226 = -v366;
  v227 = MEMORY[0x1E0DEE9D8];
  v228 = v335;
  do
  {
    --v228;
    v229 = v225 + v366 * v228;
    while (1)
    {
      if (v228 >= v161)
      {
        __break(1u);
        goto LABEL_106;
      }
      sub_1A55034B8(v229, v224, type metadata accessor for CommandConnection.RecentErrors.Error);
      if ((sub_1A590778C() & 1) != 0)
        break;
      sub_1A55034FC(v224, type metadata accessor for CommandConnection.RecentErrors.Error);
      --v228;
      v229 += v226;
      v179 = (uint64_t)v358;
      if (v228 == -1)
        goto LABEL_106;
    }
    v230 = v339;
    sub_1A54E3394(v224, v339, type metadata accessor for CommandConnection.RecentErrors.Error);
    v231 = v340;
    sub_1A54E3394(v230, v340, type metadata accessor for CommandConnection.RecentErrors.Error);
    v232 = v341;
    sub_1A5907D30(v231, v341);
    sub_1A55034FC(v231, type metadata accessor for CommandConnection.RecentErrors.Error);
    v233 = v371;
    v234 = v365;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v371 + 48))(v232, 1, v365) == 1)
    {
      sub_1A5510284(v232, (uint64_t *)&unk_1EE798EC0);
      v224 = (uint64_t)v344;
    }
    else
    {
      v235 = *(void (**)(char *, uint64_t, uint64_t))(v233 + 32);
      v236 = v333;
      v235(v333, v232, v234);
      v235(v342, (uint64_t)v236, v234);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v227 = sub_1A59236D8(0, *(_QWORD *)(v227 + 16) + 1, 1, v227);
      v224 = (uint64_t)v344;
      v238 = *(_QWORD *)(v227 + 16);
      v237 = *(_QWORD *)(v227 + 24);
      if (v238 >= v237 >> 1)
        v227 = sub_1A59236D8(v237 > 1, v238 + 1, 1, v227);
      *(_QWORD *)(v227 + 16) = v238 + 1;
      v235((char *)(v227+ ((*(unsigned __int8 *)(v371 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v371 + 80))+ *(_QWORD *)(v371 + 72) * v238), (uint64_t)v342, v365);
      v161 = v372;
    }
    v179 = (uint64_t)v358;
  }
  while (v228);
LABEL_106:
  v239 = v338;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v227 + 16))
  {
    v240 = v371;
    v241 = v327;
    v242 = v365;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v371 + 16))(v327, v227 + ((*(unsigned __int8 *)(v240 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v240 + 80)), v365);
    v243 = 0;
    v244 = (uint64_t)v316;
    v245 = v326;
  }
  else
  {
    v243 = 1;
    v244 = (uint64_t)v316;
    v241 = v327;
    v245 = v326;
    v242 = v365;
    v240 = v371;
  }
  v362(v241, v243, 1, v242);
  swift_bridgeObjectRelease();
  v246 = v374;
  if (!(_QWORD)v374)
  {
    sub_1A54E330C(v244, v179, (uint64_t *)&unk_1EE798EC0);
    v248 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v240 + 48);
    if (v248(v179, 1, v242) == 1)
    {
      sub_1A5510284(v179, (uint64_t *)&unk_1EE798EC0);
      v249 = v323;
      sub_1A54E330C(v241, v323, (uint64_t *)&unk_1EE798EC0);
      if (v248(v249, 1, v242) == 1)
      {
        sub_1A5510284(v249, (uint64_t *)&unk_1EE798EC0);
        v250 = type metadata accessor for ConnectionStatus.Error.Details(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v250 - 8) + 56))(v245, 1, 1, v250);
        goto LABEL_121;
      }
      v256 = v249;
      v252 = *(void (**)(char *, uint64_t, uint64_t))(v240 + 32);
      v257 = v322;
      v252(v322, v256, v242);
      v254 = v245;
      v255 = v257;
    }
    else
    {
      v252 = *(void (**)(char *, uint64_t, uint64_t))(v240 + 32);
      v253 = v324;
      v252(v324, v179, v242);
      v254 = v245;
      v255 = v253;
    }
    v252((char *)v254, (uint64_t)v255, v242);
    v258 = type metadata accessor for ConnectionStatus.Error.Details(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v258 - 8) + 56))(v245, 0, 1, v258);
    goto LABEL_121;
  }
  v247 = v370;
  sub_1A5907FF0(v370);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A59079BC(v247, v369, v246, v245);
LABEL_121:
  v259 = (uint64_t)v325;
  v260 = (uint64_t)v332;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v261 = v239 + v313;
  v262 = -v366;
  v263 = v314;
  while (v263 < v372)
  {
    sub_1A55034B8(v261, v260, type metadata accessor for CommandConnection.RecentErrors.Error);
    if ((sub_1A590778C() & 1) != 0)
    {
      v264 = v260;
      v265 = v331;
      sub_1A54E3394(v264, v331, type metadata accessor for CommandConnection.RecentErrors.Error);
      sub_1A54E3394(v265, v259, type metadata accessor for CommandConnection.RecentErrors.Error);
      LOBYTE(v265) = sub_1A5907E4C(v259);
      sub_1A55034FC(v259, type metadata accessor for CommandConnection.RecentErrors.Error);
      if ((v265 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v266 = v356;
        sub_1A54E330C(v245, v356, &qword_1EE798520);
        v267 = v328;
        sub_1A54E330C(v266, v328, &qword_1EE798520);
        v268 = sub_1A594A0EC();
        v269 = (uint64_t)v357;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v268 - 8) + 56))(v357, 1, 1, v268);
        v270 = v317;
        v271 = v317;
        v272 = 5;
LABEL_129:
        ConnectionStatus.Error.init(kind:details:backedOffUntil:)(v272, v267, v269, v271);
        sub_1A5510284(v266, &qword_1EE798520);
        sub_1A5904B7C(v370, v369, v374);
        sub_1A5904B7C(v364, v367, v368);
        sub_1A5510284(v245, &qword_1EE798520);
        sub_1A5510284(v241, (uint64_t *)&unk_1EE798EC0);
        v273 = v244;
        goto LABEL_130;
      }
      v260 = (uint64_t)v332;
    }
    else
    {
      sub_1A55034FC(v260, type metadata accessor for CommandConnection.RecentErrors.Error);
    }
    --v263;
    v261 += v262;
    if (v263 == -1)
      goto LABEL_134;
  }
  __break(1u);
LABEL_134:
  v274 = v338;
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v275 = v274 + v313;
  v276 = -v366;
  v277 = v314;
  while (v277 < v372)
  {
    v278 = v315;
    sub_1A55034B8(v275, v315, type metadata accessor for CommandConnection.RecentErrors.Error);
    if ((sub_1A590778C() & 1) != 0)
    {
      v279 = v277;
      v280 = v278;
      v281 = v311;
      sub_1A54E3394(v280, v311, type metadata accessor for CommandConnection.RecentErrors.Error);
      v282 = v312;
      sub_1A54E3394(v281, v312, type metadata accessor for CommandConnection.RecentErrors.Error);
      LOBYTE(v281) = sub_1A5907F04(v282);
      sub_1A55034FC(v282, type metadata accessor for CommandConnection.RecentErrors.Error);
      if ((v281 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v266 = v356;
        sub_1A54E330C(v245, v356, &qword_1EE798520);
        v267 = v328;
        sub_1A54E330C(v266, v328, &qword_1EE798520);
        v283 = sub_1A594A0EC();
        v269 = (uint64_t)v357;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v283 - 8) + 56))(v357, 1, 1, v283);
        v270 = v317;
        v271 = v317;
        v272 = 3;
        goto LABEL_129;
      }
      v277 = v279;
    }
    else
    {
      sub_1A55034FC(v278, type metadata accessor for CommandConnection.RecentErrors.Error);
    }
    --v277;
    v275 += v276;
    if (v277 == -1)
      goto LABEL_143;
  }
  __break(1u);
LABEL_143:
  swift_bridgeObjectRelease();
  sub_1A54E330C(v244, v321, (uint64_t *)&unk_1EE798EC0);
  if (!(_QWORD)v374)
  {
    v292 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v371 + 48);
    v293 = v321;
    v294 = v292(v321, 1, v365);
    sub_1A5510284(v293, (uint64_t *)&unk_1EE798EC0);
    if (v294 == 1)
    {
      v295 = v320;
      sub_1A54E330C(v327, v320, (uint64_t *)&unk_1EE798EC0);
      if (v292(v295, 1, v365) != 1)
      {
        v302 = v371;
        v303 = v319;
        v304 = v365;
        (*(void (**)(char *, uint64_t, uint64_t))(v371 + 32))(v319, v320, v365);
        v305 = v356;
        (*(void (**)(uint64_t, char *, uint64_t))(v302 + 16))(v356, v303, v304);
        v306 = type metadata accessor for ConnectionStatus.Error.Details(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v306 - 8) + 56))(v305, 0, 1, v306);
        v307 = v328;
        sub_1A54E330C(v305, v328, &qword_1EE798520);
        v308 = sub_1A594A0EC();
        v309 = (uint64_t)v357;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v308 - 8) + 56))(v357, 1, 1, v308);
        v270 = v317;
        ConnectionStatus.Error.init(kind:details:backedOffUntil:)(0, v307, v309, v317);
        sub_1A5510284(v305, &qword_1EE798520);
        sub_1A5904B7C(v364, v367, v368);
        (*(void (**)(char *, uint64_t))(v302 + 8))(v303, v304);
        v301 = v326;
        goto LABEL_150;
      }
      sub_1A5510284(v320, (uint64_t *)&unk_1EE798EC0);
    }
    v296 = v326;
    v297 = v356;
    sub_1A54E330C(v326, v356, &qword_1EE798520);
    v298 = v328;
    sub_1A54E330C(v297, v328, &qword_1EE798520);
    v299 = sub_1A594A0EC();
    v300 = (uint64_t)v357;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v299 - 8) + 56))(v357, 1, 1, v299);
    v270 = v317;
    ConnectionStatus.Error.init(kind:details:backedOffUntil:)(4, v298, v300, v317);
    sub_1A5510284(v297, &qword_1EE798520);
    sub_1A5904B7C(v364, v367, v368);
    v301 = v296;
LABEL_150:
    sub_1A5510284(v301, &qword_1EE798520);
    sub_1A5510284(v327, (uint64_t *)&unk_1EE798EC0);
    v273 = (uint64_t)v316;
LABEL_130:
    sub_1A5510284(v273, (uint64_t *)&unk_1EE798EC0);
    sub_1A5510284((uint64_t)v318, &qword_1EE798568);
    v197 = v270;
    goto LABEL_131;
  }
  sub_1A5510284(v321, (uint64_t *)&unk_1EE798EC0);
  v285 = v369;
  v284 = v370;
  v286 = v374;
  sub_1A5907FC4(v370, v369, v374);
  sub_1A5907FF0(v284);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v287 = v356;
  sub_1A59079BC(v284, v285, v286, v356);
  v288 = v328;
  sub_1A54E330C(v287, v328, &qword_1EE798520);
  v289 = sub_1A594A0EC();
  v290 = (uint64_t)v357;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v289 - 8) + 56))(v357, 1, 1, v289);
  v291 = v317;
  ConnectionStatus.Error.init(kind:details:backedOffUntil:)(1, v288, v290, v317);
  sub_1A5510284(v287, &qword_1EE798520);
  sub_1A5904BA8(v284);
  swift_bridgeObjectRelease();
  sub_1A5904B7C(v284, v285, v286);
  sub_1A5904B7C(v364, v367, v368);
  sub_1A5510284(v326, &qword_1EE798520);
  sub_1A5510284(v327, (uint64_t *)&unk_1EE798EC0);
  sub_1A5510284((uint64_t)v316, (uint64_t *)&unk_1EE798EC0);
  sub_1A5510284((uint64_t)v318, &qword_1EE798568);
  v197 = v291;
LABEL_131:
  v198 = v363;
  return ((uint64_t (*)(_BYTE *, _QWORD, uint64_t, uint64_t, __n128))v373)(v197, 0, 1, v198, v196);
}

unint64_t sub_1A590778C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (_DWORD *)((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - v5;
  v7 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  sub_1A55034B8(v0 + *(int *)(v7 + 20), (uint64_t)v6, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  if (swift_getEnumCaseMultiPayload() != 3)
    goto LABEL_7;
  sub_1A55034B8((uint64_t)v6, (uint64_t)v3, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  v8 = sub_1A594ACEC();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t))(v9 + 88))(v3, v8) != *MEMORY[0x1E0CCEB08])
  {
    (*(void (**)(_DWORD *, uint64_t))(v9 + 8))(v3, v8);
LABEL_7:
    v10 = 1;
    goto LABEL_8;
  }
  (*(void (**)(_DWORD *, uint64_t))(v9 + 96))(v3, v8);
  if (*v3 >= 0x3Du)
    v10 = 1;
  else
    v10 = (0xF8FFFFFFFFFFFFFuLL >> *v3) & 1;
LABEL_8:
  sub_1A55034FC((uint64_t)v6, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  return v10;
}

uint64_t sub_1A59078E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  sub_1A55034B8(a1 + *(int *)(v7 + 20), (uint64_t)v6, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v9 = *(_OWORD *)v6;
    v10 = *((_QWORD *)v6 + 2);
  }
  else
  {
    result = sub_1A55034FC((uint64_t)v6, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    v10 = 0;
    v9 = 0uLL;
  }
  *(_OWORD *)a2 = v9;
  *(_QWORD *)(a2 + 16) = v10;
  return result;
}

uint64_t sub_1A59079BC@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v27 = a4;
  v7 = sub_1A5949B40();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = a2;
  v29 = a3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5949B28();
  sub_1A5908040();
  v15 = sub_1A594C45C();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_bridgeObjectRelease();
  v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0)
    v18 = v15 & 0xFFFFFFFFFFFFLL;
  if (!v18)
  {
    swift_bridgeObjectRelease();
    v15 = 0;
    v17 = 0;
  }
  if ((~a1 & 0xF000000000000007) != 0)
  {
    switch((a1 >> 59) & 0x1E | (a1 >> 2) & 1)
    {
      case 0uLL:
      case 9uLL:
      case 0xDuLL:
        goto LABEL_11;
      case 0x10uLL:
        v19 = __ROR8__(a1, 3) ^ 0x1000000000000000;
        if (v19 > 0x1E || ((1 << v19) & 0x5FDFF9A7) == 0)
          goto LABEL_14;
LABEL_11:
        v28 = a1;
        sub_1A5908004(a1);
        v20 = sub_1A594B4A8();
        v22 = v21;
        swift_bridgeObjectRelease();
        sub_1A5904BA8(a1);
        *v14 = v20;
        v14[1] = v22;
        if (v17)
        {
          v14[2] = v15;
          v14[3] = v17;
        }
        goto LABEL_13;
      default:
LABEL_14:
        swift_bridgeObjectRelease();
        sub_1A5904BA8(a1);
        if (!v17)
          goto LABEL_15;
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  if (v17)
  {
LABEL_7:
    *v14 = v15;
    v14[1] = v17;
LABEL_13:
    v23 = v27;
    swift_storeEnumTagMultiPayload();
    sub_1A54E3394((uint64_t)v14, v23, type metadata accessor for ConnectionStatus.Error.Details);
    v24 = 0;
  }
  else
  {
LABEL_15:
    v24 = 1;
    v23 = v27;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v23, v24, 1, v11);
}

uint64_t sub_1A5907C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  sub_1A55034B8(a1 + *(int *)(v7 + 20), (uint64_t)v6, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v8 = sub_1A594ACEC();
    v9 = *(_QWORD *)(v8 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
  }
  else
  {
    sub_1A55034FC((uint64_t)v6, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    v11 = sub_1A594ACEC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
}

uint64_t sub_1A5907D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  sub_1A55034B8(a1 + *(int *)(v7 + 20), (uint64_t)v6, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    v8 = sub_1A594ACEC();
    v9 = *(_QWORD *)(v8 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
  }
  else
  {
    sub_1A55034FC((uint64_t)v6, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    v11 = sub_1A594ACEC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
}

uint64_t sub_1A5907E4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;
  uint64_t v8;

  v2 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1 + *(int *)(type metadata accessor for CommandConnection.RecentErrors.Error(0) + 20);
  swift_storeEnumTagMultiPayload();
  static CommandConnection.RecentErrors.Error.Kind.__derived_enum_equals(_:_:)(v5, (uint64_t)v4);
  LOBYTE(v5) = v6;
  sub_1A55034FC((uint64_t)v4, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  return v5 & 1;
}

BOOL sub_1A5907F04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v8;

  v2 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  sub_1A55034B8(a1 + *(int *)(v5 + 20), (uint64_t)v4, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
    sub_1A55034FC((uint64_t)v4, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  return EnumCaseMultiPayload == 0;
}

unint64_t sub_1A5907FC4(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1A5907FF0(result);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

unint64_t sub_1A5907FF0(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1A5908004(result);
  return result;
}

unint64_t sub_1A5908004(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A5908040()
{
  unint64_t result;

  result = qword_1EE7990B0;
  if (!qword_1EE7990B0)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EE7990B0);
  }
  return result;
}

uint64_t sub_1A5908084(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void (*v25)(_QWORD *, _QWORD, uint64_t);
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v6 = v5;
  v32 = a5;
  v33 = a1;
  v11 = sub_1A594AD10();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v31 - v16);
  v18 = v6 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_state;
  *(_QWORD *)v18 = 0;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 1;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_timer) = 0;
  *(_QWORD *)(v6 + 16) = a1;
  *(_BYTE *)(v6 + 24) = a2;
  v19 = v6 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_logger;
  v20 = sub_1A594A764();
  v34 = *(_QWORD *)(v20 - 8);
  v21 = v19;
  v22 = a3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v21, a3, v20);
  v23 = (_QWORD *)(v6 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_handler);
  v24 = v32;
  *v23 = a4;
  v23[1] = v24;
  *v17 = 1;
  v25 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104);
  v25(v17, *MEMORY[0x1E0DEF4A0], v11);
  *v14 = 500;
  v25(v14, *MEMORY[0x1E0DEF490], v11);
  v26 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1A5908EA0;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A587D408;
  aBlock[3] = &block_descriptor_6_1;
  v27 = _Block_copy(aBlock);
  type metadata accessor for RestartableTimer();
  swift_allocObject();
  v28 = v33;
  swift_retain();
  v29 = RestartableTimer.init(queue:repeating:leeway:closure:)(v28, (uint64_t)v17, (uint64_t)v14, v27);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v22, v20);
  swift_release();
  swift_release();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_timer) = v29;
  swift_release();
  return v6;
}

uint64_t sub_1A59082D8()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A590832C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A590832C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = sub_1A594AED8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v1 + 16);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x1E0DEF740], v2, v4);
  v8 = v7;
  LOBYTE(v7) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_state);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_state + 16) & 1) != 0)
    return result;
  v11 = *v10;
  v12 = v10[1];
  *v10 = 0;
  v10[1] = 0;
  *((_BYTE *)v10 + 16) = 1;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_timer))
  {
LABEL_10:
    __break(1u);
    return result;
  }
  swift_retain();
  RestartableTimer.stop()();
  swift_release();
  swift_retain();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v13 = sub_1A594A74C();
  v14 = sub_1A594C030();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    *(_DWORD *)v15 = 68158464;
    LODWORD(v17) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v15 + 8) = 256;
    LOBYTE(v17) = *(_BYTE *)(v1 + 24);
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v15 + 11) = 2048;
    v17 = v11;
    sub_1A594C3CC();
    *(_WORD *)(v15 + 21) = 2048;
    v17 = v12;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v13, v14, "[%.*hhx] Account data transfer report: received %{iec-bytes}ld, sent %{iec-bytes}ld.", (uint8_t *)v15, 0x1Fu);
    MEMORY[0x1A85B1964](v15, -1, -1);
  }
  else
  {
    swift_release();
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_handler))(v11, v12);
}

uint64_t sub_1A5908580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1A594AD34();
  v16 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594AD70();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v0 + 16);
  v17 = OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_timer;
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_timer);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  aBlock[4] = sub_1A5908DAC;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A587D408;
  aBlock[3] = &block_descriptor_33;
  v11 = _Block_copy(aBlock);
  swift_retain_n();
  sub_1A594AD4C();
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1A5908DE8();
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A18);
  sub_1A5908E30();
  sub_1A594C5C4();
  MEMORY[0x1A85AE508](0, v8, v4, v11);
  _Block_release(v11);
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();

  v12 = v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_logger;
  v13 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1A59087B0()
{
  sub_1A5908580();
  return swift_deallocClassInstance();
}

uint64_t sub_1A59087D4()
{
  return type metadata accessor for DataTransferReportAccumulator();
}

uint64_t type metadata accessor for DataTransferReportAccumulator()
{
  uint64_t result;

  result = qword_1EE7A0B68;
  if (!qword_1EE7A0B68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5908818()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594A764();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A59088C0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A59088DC(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    *(_BYTE *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DataTransferReportAccumulator.State()
{
  return &type metadata for DataTransferReportAccumulator.State;
}

void sub_1A590890C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  BOOL v23;
  unint64_t v24;
  double v25;
  double v26;
  BOOL v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = sub_1A594AED8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v2 + 16);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4, v6);
  v10 = v9;
  LOBYTE(v9) = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  swift_retain();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v11 = sub_1A594A74C();
  v12 = sub_1A594C030();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v33 = v14;
    *(_DWORD *)v13 = 68159746;
    LODWORD(v32) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v13 + 8) = 256;
    LOBYTE(v32) = *(_BYTE *)(v2 + 24);
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v13 + 11) = 2082;
    v15 = ConnectionID.debugDescription.getter(*(unsigned int *)a1);
    v32 = sub_1A5903E24(v15, v16, &v33);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 21) = 1040;
    LODWORD(v32) = 3;
    sub_1A594C3CC();
    *(_WORD *)(v13 + 27) = 2048;
    v32 = a1[2];
    v17 = *(double *)&v32;
    sub_1A594C3CC();
    *(_WORD *)(v13 + 37) = 2048;
    v18 = a1[3];
    v32 = v18;
    sub_1A594C3CC();
    *(_WORD *)(v13 + 47) = 2048;
    v19 = a1[4];
    v32 = v19;
    sub_1A594C3CC();
    *(_WORD *)(v13 + 57) = 2048;
    if (v17 <= 0.0)
    {
      v24 = 0;
    }
    else
    {
      if ((unint64_t)(v18 - 0x1000000000000000) >> 61 != 7)
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      v20 = (double)(8 * v18) / v17;
      v21 = round(v20);
      v23 = v21 >= 9.22337204e18 || v21 <= -9.22337204e18;
      v24 = llround(v20);
      if (v23)
        v24 = 0;
    }
    v32 = v24;
    sub_1A594C3CC();
    *(_WORD *)(v13 + 67) = 2048;
    if (v17 <= 0.0)
    {
      v29 = 0;
    }
    else
    {
      if ((unint64_t)(v18 - 0x1000000000000000) >> 61 != 7)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v25 = (double)(8 * v18) / v17;
      v26 = round(v25);
      v28 = v26 >= 9.22337204e18 || v26 <= -9.22337204e18;
      v29 = llround(v25);
      if (v28)
        v29 = 0;
    }
    v32 = v29;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v11, v12, "[%.*hhx] Connection %{public}s sent data transfer report for the past %.*g seconds: received %{iec-bytes}ld, sent %{iec-bytes}ld, received throughput %{iec-bitrate}ld, sent throughput %{iec-bitrate}ld.", (uint8_t *)v13, 0x4Du);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v14, -1, -1);
    MEMORY[0x1A85B1964](v13, -1, -1);

  }
  else
  {
    swift_release();

    v18 = a1[3];
    v19 = a1[4];
  }
  v30 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_state;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_state + 16) & 1) != 0)
    goto LABEL_32;
  v23 = __OFADD__(*(_QWORD *)v30, v18);
  v18 += *(_QWORD *)v30;
  if (v23)
    goto LABEL_35;
  v31 = *(_QWORD *)(v30 + 8);
  v23 = __OFADD__(v31, v19);
  v19 += v31;
  if (v23)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_32:
  *(_QWORD *)v30 = v18;
  *(_QWORD *)(v30 + 8) = v19;
  *(_BYTE *)(v30 + 16) = 0;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_timer))
  {
    swift_retain();
    RestartableTimer.start()();
    swift_release();
    return;
  }
LABEL_39:
  __break(1u);
}

BOOL sub_1A5908D48(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 16) == 1)
    return (*(_BYTE *)(a2 + 16) & 1) != 0;
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    return 0;
  return *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
}

uint64_t sub_1A5908D88()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A5908DAC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    RestartableTimer.stop()();
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

unint64_t sub_1A5908DE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A19E0;
  if (!qword_1EE7A19E0)
  {
    v1 = sub_1A594AD34();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7A19E0);
  }
  return result;
}

unint64_t sub_1A5908E30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A40E0;
  if (!qword_1EE7A40E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0((uint64_t *)&unk_1EE7A1A18);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7A40E0);
  }
  return result;
}

uint64_t sub_1A5908E7C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A5908EA0()
{
  return sub_1A59082D8();
}

id Engine.workQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id Engine.persistenceEventQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t Engine.tracingID.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_tracingIDOwner) + 16);
}

uint64_t Engine.__allocating_init(configuration:windowOfInterest:environment:workloop:sendAction:)(uint64_t a1, uint64_t a2, char a3, int a4, void *a5, int a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v20;
  void *v21;
  int v22;
  uint64_t v23;

  v20 = a8;
  v21 = a5;
  v23 = a7;
  v22 = a6;
  v13 = a3 & 1;
  v14 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v14);
  v16 = (void **)((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for EngineTracingIDOwner();
  swift_allocObject();
  v17 = EngineTracingIDOwner.init()();
  sub_1A55034B8(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v18 = swift_allocObject();
  sub_1A5909008(v17, v16, a2, v13, a4 & 0x101FF, v21, v22, v23, v20, a9, a10);
  sub_1A55034FC(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  return v18;
}

_QWORD *sub_1A5909008(uint64_t a1, _QWORD *a2, uint64_t a3, char a4, int a5, void *a6, int a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  char v61;
  char v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  id v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  char v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  void *v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  id v128;
  uint64_t v129;
  void *v130;
  void (*v131)(_QWORD *, uint64_t, uint64_t);
  uint64_t v132;
  void *v133;
  id v134;
  uint64_t v135;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  unsigned int v141;
  int *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  id v154;
  uint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  char *v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  _QWORD v166[2];
  uint64_t (*v167)(uint64_t);
  void *v168;
  uint64_t (*v169)();
  uint64_t v170;
  char v171;
  uint64_t v172[37];

  v145 = a8;
  LODWORD(v144) = a7;
  v162 = a6;
  LODWORD(v142) = a5;
  v147 = a3;
  v165 = a2;
  v163 = a11;
  v148 = a10;
  v154 = a9;
  LODWORD(v146) = a4 & 1;
  v13 = sub_1A594AD10();
  v157 = *(_QWORD **)(v13 - 8);
  v158 = v13;
  MEMORY[0x1E0C80A78](v13);
  v160 = (uint64_t *)((char *)&v137 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v159 = (uint64_t *)((char *)&v137 - v16);
  v17 = type metadata accessor for ConnectionConfiguration();
  MEMORY[0x1E0C80A78](v17);
  v155 = (uint64_t)&v137 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = (_QWORD *)sub_1A594C078();
  v149 = *(v156 - 1);
  MEMORY[0x1E0C80A78](v156);
  v153 = (char *)&v137 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_1A594C048();
  MEMORY[0x1E0C80A78](v151);
  v152 = (char *)&v137 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1A594AD70();
  MEMORY[0x1E0C80A78](v21);
  v150 = (char *)&v137 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Engine.Logger(0);
  MEMORY[0x1E0C80A78](v23);
  v139 = (uint64_t)&v137 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v137 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v137 - v29;
  *(_QWORD *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections) = 0;
  *(_QWORD *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_betterPathEvaluator) = 0;
  v31 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_didStart;
  type metadata accessor for AtomicFlag.Storage();
  v32 = swift_allocObject();
  *(_DWORD *)(v32 + 16) = 0;
  *(_QWORD *)((char *)v11 + v31) = v32;
  *((_BYTE *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_isProcessingUpdates) = 0;
  v33 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_pendingUpdates) = MEMORY[0x1E0DEE9D8];
  v34 = (uint64_t)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_externalState;
  v35 = type metadata accessor for Activity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  *(_QWORD *)(v34 + *(int *)(type metadata accessor for ExternalState() + 20)) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_activityTimer) = 0;
  *(_QWORD *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_inSyncMailboxesDidSyncTimer) = 0;
  *(_QWORD *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_checkForLongSyncsTimer) = 0;
  v36 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_didTearDown;
  v37 = swift_allocObject();
  *(_DWORD *)(v37 + 16) = 0;
  *(_QWORD *)((char *)v11 + v36) = v37;
  v38 = v23;
  *(_QWORD *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_stateCapture) = v33;
  v39 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_lastLoggedSyncRequestsAt;
  *(_QWORD *)((char *)v11 + v39) = static MonotonicTime.now()();
  *((_BYTE *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_shouldLogForFirstConnection) = 0;
  v143 = v11;
  v40 = (_OWORD *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_powerTelemetry);
  *v40 = 0u;
  v40[1] = 0u;
  v164 = a1;
  LOBYTE(v39) = *(_BYTE *)(a1 + 16);
  sub_1A594A758();
  v30[*(int *)(v23 + 20)] = v39;
  sub_1A55034B8((uint64_t)v30, (uint64_t)v27, type metadata accessor for Engine.Logger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v41 = sub_1A594A74C();
  v42 = sub_1A594C030();
  v43 = os_log_type_enabled(v41, v42);
  v161 = v30;
  v138 = v38;
  if (v43)
  {
    v44 = swift_slowAlloc();
    v45 = v38;
    v46 = swift_slowAlloc();
    v172[0] = v46;
    *(_DWORD *)v44 = 68158210;
    LODWORD(v166[0]) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v44 + 8) = 256;
    LOBYTE(v45) = v27[*(int *)(v45 + 20)];
    sub_1A55034FC((uint64_t)v27, type metadata accessor for Engine.Logger);
    LOBYTE(v166[0]) = v45;
    sub_1A594C3CC();
    *(_WORD *)(v44 + 11) = 2080;
    v141 = v142 & 0x101FF;
    v47 = v144;
    v48 = v145;
    Environment.description.getter(v142 & 0x101FF, (uint64_t)v162, v144);
    v166[0] = sub_1A5903E24(v49, v50, v172);
    v30 = v161;
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v41, v42, "[%.*hhx] Created with environment %s", (uint8_t *)v44, 0x15u);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v46, -1, -1);
    MEMORY[0x1A85B1964](v44, -1, -1);

    v51 = v48;
    v52 = v47;
  }
  else
  {
    sub_1A55034FC((uint64_t)v27, type metadata accessor for Engine.Logger);

    v141 = v142 & 0x101FF;
    v51 = v145;
    v52 = v144;
  }
  v53 = v143;
  sub_1A55034B8((uint64_t)v30, (uint64_t)v143 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, type metadata accessor for Engine.Logger);
  v55 = v164;
  v54 = v165;
  v56 = *v165;
  v57 = v165[1];
  v58 = (_QWORD *)((char *)v53 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logName);
  *v58 = *v165;
  v58[1] = v57;
  v59 = v56;
  v144 = v57;
  v145 = v56;
  *(_QWORD *)((char *)v53 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_tracingIDOwner) = v55;
  v142 = (int *)type metadata accessor for Configuration();
  v60 = v54;
  LOBYTE(v54) = *((_BYTE *)v54 + v142[6]);
  v61 = *((_BYTE *)v60 + v142[7]);
  v62 = *(_BYTE *)(v55 + 16);
  swift_bridgeObjectRetain_n();
  swift_retain();
  StateWithTasks.init(windowOfInterest:environment:mailboxFilter:fetchedMessageMetadata:tracingID:logName:)(v147, v146, v141, (uint64_t)v162, v52, v51, (char)v54, v61, (uint64_t)v172, v62, v59, v57);
  memcpy((char *)v53 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state, v172, 0x120uLL);
  v63 = v163;
  v53[4] = v148;
  v53[5] = v63;
  sub_1A5910E60();
  swift_retain();
  sub_1A594AD64();
  v166[0] = MEMORY[0x1E0DEE9D8];
  v147 = sub_1A55E1698(&qword_1EE7A4898, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  v146 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A4820);
  v148 = sub_1A54E2E30(&qword_1EE7A4858, &qword_1EE7A4820, MEMORY[0x1E0DEAF38]);
  sub_1A594C5C4();
  v141 = *MEMORY[0x1E0DEF8D8];
  v149 = *(_QWORD *)(v149 + 104);
  v64 = v153;
  v65 = v156;
  ((void (*)(char *))v149)(v153);
  v140 = v154;
  v162 = (id)sub_1A594C0A8();
  v53[2] = v162;
  sub_1A594AD64();
  v166[0] = MEMORY[0x1E0DEE9D8];
  sub_1A594C5C4();
  v66 = v164;
  ((void (*)(char *, _QWORD, _QWORD *))v149)(v64, v141, v65);
  v156 = v140;
  v53[3] = sub_1A594C0A8();
  v67 = v155;
  sub_1A55034B8((uint64_t)v165 + v142[5], v155, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionConfiguration);
  type metadata accessor for ConnectionPool();
  v68 = swift_allocObject();
  v69 = v144;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v70 = (char *)v162;
  swift_retain();
  v71 = sub_1A590FC80(v145, v69, v67, v70, (uint64_t)v53, v68);
  *(_QWORD *)((char *)v53 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections) = v71;
  swift_retain();
  swift_release();
  v72 = v66;
  LOBYTE(v70) = *(_BYTE *)(v66 + 16);
  v73 = (void *)v53[2];
  type metadata accessor for BetterPathEvaluator();
  v74 = swift_allocObject();
  *(_QWORD *)(v74 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_OWORD *)(v74 + 48) = xmmword_1A59ABDE0;
  *(_BYTE *)(v74 + 64) = 0;
  *(_QWORD *)(v74 + 80) = 0;
  *(_QWORD *)(v74 + 88) = 0;
  *(_QWORD *)(v74 + 72) = 0;
  *(_QWORD *)(v74 + 40) = &off_1E4E7BB38;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v74 + 16) = v73;
  *(_BYTE *)(v74 + 24) = (_BYTE)v70;
  *(_QWORD *)(v74 + 104) = v71;
  *(_QWORD *)(v74 + 112) = 0x4000000000000000;
  *(_QWORD *)(v74 + 96) = sub_1A5910E9C;
  *(_QWORD *)((char *)v53 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_betterPathEvaluator) = v74;
  v155 = v71;
  swift_retain();
  v75 = v73;
  swift_release();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v76 = (void *)sub_1A594B3F4();
  v77 = (void *)sub_1A594B3F4();
  v78 = PPSCreateTelemetryIdentifier();

  if (v78)
  {
    v79 = sub_1A5910990(8);
    v81 = v80;
    v83 = v82;
    v85 = v84;
    swift_bridgeObjectRelease();
    v86 = MEMORY[0x1A85AD950](v79, v81, v83, v85);
    v88 = v87;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v89 = v139;
    sub_1A55034B8((uint64_t)v161, v139, type metadata accessor for Engine.Logger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v90 = sub_1A594A74C();
    v91 = sub_1A594C018();
    if (os_log_type_enabled(v90, v91))
    {
      v92 = swift_slowAlloc();
      *(_DWORD *)v92 = 68157952;
      LODWORD(v166[0]) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v92 + 8) = 256;
      v93 = *(_BYTE *)(v89 + *(int *)(v138 + 20));
      sub_1A55034FC(v89, type metadata accessor for Engine.Logger);
      LOBYTE(v166[0]) = v93;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v90, v91, "[%.*hhx] Unable to create power telemetry id.", (uint8_t *)v92, 0xBu);
      MEMORY[0x1A85B1964](v92, -1, -1);
    }
    else
    {
      sub_1A55034FC(v89, type metadata accessor for Engine.Logger);
    }

    v78 = 0;
    v86 = 0;
    v88 = 0;
  }
  v94 = (_QWORD *)((char *)v53 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_powerTelemetry);
  swift_beginAccess();
  v95 = *v94;
  v96 = v94[1];
  v97 = v94[2];
  *v94 = v78;
  v94[1] = v86;
  v94[2] = v88;
  v94[3] = 0;
  sub_1A590F4C8(v95, v96, v97);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3C0);
  v98 = swift_allocObject();
  *(_OWORD *)(v98 + 16) = xmmword_1A59E16A0;
  v166[0] = 0x2D6574617453;
  v166[1] = 0xE600000000000000;
  v171 = *(_BYTE *)(v72 + 16);
  sub_1A5910EA4();
  sub_1A594B6DC();
  if (sub_1A594B5A4() <= 1)
    sub_1A594B5F8();
  type metadata accessor for StateCapture();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  v99 = v166[0];
  v100 = v166[1];
  v101 = (void *)v53[2];
  v102 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v98 + 32) = StateCapture.__allocating_init(title:queue:capture:)(v99, v100, v101, (uint64_t)sub_1A5910F0C, v102);
  v166[0] = 0;
  v166[1] = 0xE000000000000000;
  sub_1A594C720();
  swift_bridgeObjectRelease();
  strcpy((char *)v166, "LocalSelected-");
  HIBYTE(v166[1]) = -18;
  v171 = *(_BYTE *)(v72 + 16);
  sub_1A594B6DC();
  if (sub_1A594B5A4() <= 1)
    sub_1A594B5F8();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  v103 = v166[0];
  v104 = v166[1];
  v105 = (void *)v53[2];
  v106 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v98 + 40) = StateCapture.__allocating_init(title:queue:capture:)(v103, v104, v105, (uint64_t)sub_1A5910F14, v106);
  v166[0] = 0x2D6C61636F4CLL;
  v166[1] = 0xE600000000000000;
  v171 = *(_BYTE *)(v72 + 16);
  sub_1A594B6DC();
  if (sub_1A594B5A4() <= 1)
    sub_1A594B5F8();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  v107 = v166[0];
  v108 = v166[1];
  v109 = (void *)v53[2];
  v110 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v98 + 48) = StateCapture.__allocating_init(title:queue:capture:)(v107, v108, v109, (uint64_t)sub_1A5910F1C, v110);
  strcpy((char *)v166, "Remote-");
  v166[1] = 0xE700000000000000;
  v171 = *(_BYTE *)(v72 + 16);
  sub_1A594B6DC();
  if (sub_1A594B5A4() <= 1)
    sub_1A594B5F8();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  v111 = v166[0];
  v112 = v166[1];
  v113 = (void *)v53[2];
  v114 = swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v98 + 56) = StateCapture.__allocating_init(title:queue:capture:)(v111, v112, v113, (uint64_t)sub_1A5910F24, v114);
  v166[0] = v98;
  sub_1A594B988();
  *(_QWORD *)((char *)v53 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_stateCapture) = v166[0];
  swift_bridgeObjectRelease();
  v115 = (void *)v53[2];
  v116 = v158;
  v117 = v159;
  *v159 = 500;
  v118 = *MEMORY[0x1E0DEF490];
  v119 = (_QWORD *)v157[13];
  ((void (*)(_QWORD *, uint64_t, uint64_t))v119)(v117, v118, v116);
  v120 = v160;
  *v160 = 250;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v119)(v120, v118, v116);
  v121 = swift_allocObject();
  swift_weakInit();
  v169 = sub_1A5910F2C;
  v170 = v121;
  v166[0] = MEMORY[0x1E0C809B0];
  v166[1] = 1107296256;
  v167 = sub_1A587D408;
  v168 = &block_descriptor_25_0;
  v122 = _Block_copy(v166);
  v162 = (id)type metadata accessor for RestartableTimer();
  swift_allocObject();
  v123 = v115;
  swift_retain();
  v124 = RestartableTimer.init(queue:repeating:leeway:closure:)(v123, (uint64_t)v117, (uint64_t)v120, v122);
  swift_release();
  swift_release();
  *(_QWORD *)((char *)v53 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_activityTimer) = v124;
  swift_release();
  v154 = (id)v53[2];
  *v117 = 53;
  v125 = *MEMORY[0x1E0DEF4A0];
  v157 = v119;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v119)(v117, v125, v116);
  *v120 = 2;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v119)(v120, v125, v116);
  v126 = swift_allocObject();
  swift_weakInit();
  v169 = sub_1A5910F4C;
  v170 = v126;
  v166[0] = MEMORY[0x1E0C809B0];
  v166[1] = 1107296256;
  v167 = sub_1A587D408;
  v168 = &block_descriptor_29_0;
  v127 = _Block_copy(v166);
  swift_allocObject();
  v128 = v154;
  swift_retain();
  v129 = RestartableTimer.init(queue:repeating:leeway:closure:)(v128, (uint64_t)v117, (uint64_t)v120, v127);
  swift_release();
  swift_release();
  *(_QWORD *)((char *)v53 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_inSyncMailboxesDidSyncTimer) = v129;
  swift_release();
  v130 = (void *)v53[2];
  *v117 = 300;
  v131 = (void (*)(_QWORD *, uint64_t, uint64_t))v157;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v157)(v117, v125, v116);
  *v120 = 10;
  v131(v120, v125, v116);
  v132 = swift_allocObject();
  swift_weakInit();
  v169 = sub_1A5910F6C;
  v170 = v132;
  v166[0] = MEMORY[0x1E0C809B0];
  v166[1] = 1107296256;
  v167 = sub_1A587D408;
  v168 = &block_descriptor_33;
  v133 = _Block_copy(v166);
  swift_allocObject();
  v134 = v130;
  swift_retain();
  v135 = RestartableTimer.init(queue:repeating:leeway:closure:)(v134, (uint64_t)v117, (uint64_t)v120, v133);
  swift_release();
  swift_release();

  swift_release();
  sub_1A55034FC((uint64_t)v165, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1A55034FC((uint64_t)v161, type metadata accessor for Engine.Logger);
  swift_release();
  swift_release();
  *(_QWORD *)((char *)v53 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_checkForLongSyncsTimer) = v135;
  swift_release();
  return v53;
}

uint64_t Engine.Logger.init(engineID:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result;

  sub_1A594A758();
  result = type metadata accessor for Engine.Logger(0);
  *(_BYTE *)(a2 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t type metadata accessor for Engine.Logger(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE798808);
}

uint64_t sub_1A590A33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a2;
  v30 = a1;
  v4 = type metadata accessor for ConnectionConfiguration();
  MEMORY[0x1E0C80A78](v4);
  v28 = (uint64_t)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_nextConnectionID;
  v6 = *(_DWORD *)(a3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_nextConnectionID);
  v7 = (unint64_t *)(a3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  while (1)
  {
    v8 = *v7;
    if (*v7 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v9 = sub_1A594CA38();
      result = swift_bridgeObjectRelease();
      if (!v9)
        goto LABEL_29;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
      if (!v9)
        goto LABEL_29;
    }
    if ((v8 & 0xC000000000000001) != 0)
      break;
    if (*(_DWORD *)(*(_QWORD *)(v8 + 32) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v6)
    {
      if (v9 == 1)
        goto LABEL_29;
      if (*(_DWORD *)(*(_QWORD *)(v8 + 40) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v6)
      {
        if (v9 == 2)
          goto LABEL_29;
        if (*(_DWORD *)(*(_QWORD *)(v8 + 48) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v6)
          goto LABEL_11;
      }
    }
LABEL_2:
    swift_bridgeObjectRelease_n();
    ++v6;
  }
  v15 = *(_DWORD *)(MEMORY[0x1A85AEC04](0, v8) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  swift_unknownObjectRelease();
  if (v15 == v6)
    goto LABEL_2;
  if (v9 == 1)
    goto LABEL_29;
  v16 = *(_DWORD *)(MEMORY[0x1A85AEC04](1, v8) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  swift_unknownObjectRelease();
  if (v16 == v6)
    goto LABEL_2;
  if (v9 == 2)
    goto LABEL_29;
  v17 = *(_DWORD *)(MEMORY[0x1A85AEC04](2, v8) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  result = swift_unknownObjectRelease();
  if (v17 == v6)
    goto LABEL_2;
LABEL_11:
  if (v9 == 3)
  {
LABEL_29:
    swift_bridgeObjectRelease_n();
    *(_DWORD *)(a3 + v27) = v6 + 1;
    v18 = type metadata accessor for CommandConnection();
    v19 = *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    v20 = v28;
    sub_1A55034B8(a3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_configuration, v28, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionConfiguration);
    v21 = *(void **)(a3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
    v22 = *(_QWORD *)(a3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_dataTransferReportAccumulator);
    v23 = v30;
    ObjectType = swift_getObjectType();
    v25 = v21;
    swift_unknownObjectRetain();
    swift_retain();
    return sub_1A5925510(v6, v19, v20, (uint64_t)v25, v23, (uint64_t)sub_1A5911028, v22, v18, ObjectType, v29);
  }
  v11 = 3;
  while (2)
  {
    if ((v8 & 0xC000000000000001) == 0)
    {
      if (__OFADD__(v11, 1))
        goto LABEL_31;
      v14 = *(_DWORD *)(*(_QWORD *)(v8 + 32 + 8 * v11++) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      if (v14 == v6)
        goto LABEL_2;
      goto LABEL_13;
    }
    result = MEMORY[0x1A85AEC04](v11, v8);
    if (!__OFADD__(v11++, 1))
    {
      v13 = *(_DWORD *)(result + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      result = swift_unknownObjectRelease();
      if (v13 == v6)
        goto LABEL_2;
LABEL_13:
      if (v11 == v9)
        goto LABEL_29;
      continue;
    }
    break;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A590A668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_1;
  void *v9;
  id v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[288];

  v2 = sub_1A594AED8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    *(_QWORD *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7976F0);
    *(_QWORD *)(a1 + 32) = swift_getOpaqueTypeConformance2();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
    v9 = *(void **)(v7 + 16);
    *v5 = v9;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
    v10 = v9;
    LOBYTE(v9) = sub_1A594AEF0();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
    if ((v9 & 1) != 0)
    {
      v11 = (const void *)(v7 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
      swift_beginAccess();
      memcpy(v15, v11, sizeof(v15));
      v12 = *(_QWORD *)(v7 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logName);
      v13 = *(_QWORD *)(v7 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logName + 8);
      sub_1A55675E8((uint64_t)v15);
      StateWithTasks.stateCaptureValue(logName:)(v12, v13, (uint64_t)boxed_opaque_existential_1);
      sub_1A55676F0((uint64_t)v15);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1A590A804@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t Strong;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t result;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  _BYTE v22[48];
  _BYTE v23[288];

  v2 = sub_1A594AED8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797710);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v22[-v10];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v13 = Strong;
    v14 = *(void **)(Strong + 16);
    *v5 = v14;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
    v15 = v14;
    LOBYTE(v14) = sub_1A594AEF0();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
    if ((v14 & 1) == 0)
    {
      __break(1u);
      return result;
    }
    v17 = (const void *)(v13 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
    swift_beginAccess();
    memcpy(v23, v17, sizeof(v23));
    sub_1A55675E8((uint64_t)v23);
    StateWithTasks.localSelectedMailboxesCaptureValue()(v11);
    sub_1A55676F0((uint64_t)v23);
    swift_release();
  }
  else
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797708);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v11, 1, 1, v18);
  }
  sub_1A54E330C((uint64_t)v11, (uint64_t)v8, &qword_1EE797710);
  v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797708);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v20 + 48))(v8, 1, v19) == 1)
  {
    sub_1A5510284((uint64_t)v11, &qword_1EE797710);
    result = sub_1A5510284((uint64_t)v8, &qword_1EE797710);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_QWORD *)(a1 + 32) = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = v19;
    *(_QWORD *)(a1 + 32) = swift_getOpaqueTypeConformance2();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
    (*(void (**)(uint64_t *, _BYTE *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v8, v19);
    return sub_1A5510284((uint64_t)v11, &qword_1EE797710);
  }
  return result;
}

uint64_t sub_1A590AA84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  void *v8;
  id v9;
  const void *v10;
  _BYTE v12[288];

  v2 = sub_1A594AED8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    v8 = *(void **)(result + 16);
    *v5 = v8;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
    v9 = v8;
    LOBYTE(v8) = sub_1A594AEF0();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
    if ((v8 & 1) != 0)
    {
      v10 = (const void *)(v7 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
      swift_beginAccess();
      memcpy(v12, v10, sizeof(v12));
      sub_1A55675E8((uint64_t)v12);
      StateWithTasks.localDeselectedMailboxesCaptureValue()((uint64_t *)a1);
      sub_1A55676F0((uint64_t)v12);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1A590ABD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_1;
  void *v9;
  id v10;
  const void *v11;
  _BYTE v13[288];

  v2 = sub_1A594AED8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    *(_QWORD *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7976F8);
    *(_QWORD *)(a1 + 32) = swift_getOpaqueTypeConformance2();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
    v9 = *(void **)(v7 + 16);
    *v5 = v9;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
    v10 = v9;
    LOBYTE(v9) = sub_1A594AEF0();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
    if ((v9 & 1) != 0)
    {
      v11 = (const void *)(v7 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
      swift_beginAccess();
      memcpy(v13, v11, sizeof(v13));
      sub_1A55675E8((uint64_t)v13);
      StateWithTasks.remoteMailboxesCaptureValue()((uint64_t)boxed_opaque_existential_1);
      sub_1A55676F0((uint64_t)v13);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1A590AD5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t *v24;
  uint64_t v25;
  _BYTE v26[72];
  _BYTE v27[288];
  _BYTE v28[296];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798568);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for Activity(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (unint64_t *)&v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1A594AED8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(void **)(v1 + 16);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x1E0DEF740], v8, v10);
  v14 = v13;
  LOBYTE(v13) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  if ((v13 & 1) != 0)
  {
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections);
    if (v16)
    {
      v17 = (const void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
      swift_beginAccess();
      memcpy(v28, v17, 0x120uLL);
      swift_retain_n();
      sub_1A55675E8((uint64_t)v28);
      sub_1A5916C08(v4);
      StateWithTasks.makeActivity(makeStatus:accountError:)((uint64_t (*)(uint64_t))sub_1A5910F98, v16, (uint64_t)v4, v7);
      sub_1A55676F0((uint64_t)v28);
      swift_release();
      sub_1A5510284((uint64_t)v4, &qword_1EE798568);
      swift_release();
    }
    else
    {
      v18 = type metadata accessor for ConnectionStatus.Error(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
      Activity.init(mailboxesWithPendingWork:accountError:)(MEMORY[0x1E0DEE9E8], (uint64_t)v4, v7);
    }
    v19 = (const void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
    swift_beginAccess();
    memcpy(v27, v19, sizeof(v27));
    sub_1A55675E8((uint64_t)v27);
    v20 = StateWithTasks.selectedMailboxes.getter();
    sub_1A55676F0((uint64_t)v27);
    swift_beginAccess();
    v21 = sub_1A5912DE4((uint64_t)v7, v20);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v7, type metadata accessor for Activity);
    v22 = v21[2];
    if (v22)
    {
      v23 = *(void (**)(uint64_t))(v1 + 32);
      v24 = v21 + 4;
      do
      {
        v25 = *v24++;
        swift_retain();
        v23(v25);
        swift_release();
        --v22;
      }
      while (v22);
    }
    result = swift_bridgeObjectRelease();
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_activityTimer))
    {
      swift_retain();
      RestartableTimer.stop()();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A590B07C()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void (*v3)(unint64_t);
  uint64_t v4;
  uint64_t v6;
  _QWORD v7[4];
  _BYTE __dst[288];

  v1 = v0;
  v2 = (const void *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
  swift_beginAccess();
  memcpy(__dst, v2, sizeof(__dst));
  sub_1A55675E8((uint64_t)__dst);
  StateWithTasks.inSyncMailboxes.getter(v7);
  sub_1A55676F0((uint64_t)__dst);
  __swift_project_boxed_opaque_existential_1_0(v7, v7[3]);
  sub_1A59286C4(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0D20);
  sub_1A594B7CC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!*(_QWORD *)(v6 + 16))
    return swift_bridgeObjectRelease();
  v3 = *(void (**)(unint64_t))(v1 + 32);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v6;
  v3(v4 | 0x8000000000000006);
  return swift_release();
}

uint64_t sub_1A590B1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  void *v6;
  id v7;
  const void *v8;
  __uint64_t v9;
  _BYTE v11[288];

  v0 = sub_1A594AED8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    v6 = *(void **)(result + 16);
    *v3 = v6;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF740], v0);
    v7 = v6;
    LOBYTE(v6) = sub_1A594AEF0();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
    if ((v6 & 1) != 0)
    {
      v8 = (const void *)(v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
      swift_beginAccess();
      memcpy(v11, v8, sizeof(v11));
      sub_1A55675E8((uint64_t)v11);
      v9 = static MonotonicTime.now()();
      StateWithTasks.logLongRunningSyncRequests(now:)(v9);
      sub_1A55676F0((uint64_t)v11);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

Swift::Void __swiftcall Engine.start()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (**v10)(uint64_t);
  uint64_t v11;
  void *v12;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = sub_1A594AD34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594AD70();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_didStart) + 16;
  v10 = (uint64_t (**)(uint64_t))atomicFlag_testAndSet.unsafeMutableAddressor();
  if (((*v10)(v9) & 1) == 0)
  {
    v13[0] = *(_QWORD *)(v0 + 16);
    aBlock[4] = sub_1A590B59C;
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A587D408;
    aBlock[3] = &block_descriptor_34;
    v11 = v2;
    v12 = _Block_copy(aBlock);
    swift_retain();
    sub_1A594AD4C();
    v13[1] = MEMORY[0x1E0DEE9D8];
    sub_1A55E1698((unint64_t *)&qword_1EE7A19E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A18);
    sub_1A54E2E30((unint64_t *)&qword_1EE7A40E0, (uint64_t *)&unk_1EE7A1A18, MEMORY[0x1E0DEAF38]);
    sub_1A594C5C4();
    MEMORY[0x1A85AE508](0, v8, v4, v12);
    _Block_release(v12);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
  }
}

uint64_t sub_1A590B4E4(uint64_t a1)
{
  uint64_t result;

  (*(void (**)(unint64_t))(a1 + 32))(0xA000000000000002);
  result = sub_1A590C348((uint64_t)&unk_1E4E7BA60, (uint64_t)&unk_1E4E7BA70, (uint64_t)&unk_1E4E7BA80);
  if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_activityTimer))
  {
    __break(1u);
    goto LABEL_6;
  }
  swift_retain();
  RestartableTimer.start()();
  result = swift_release();
  if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_inSyncMailboxesDidSyncTimer))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  swift_retain();
  RestartableTimer.start()();
  result = swift_release();
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_checkForLongSyncsTimer))
  {
    swift_retain();
    RestartableTimer.start()();
    return swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1A590B59C()
{
  uint64_t v0;

  return sub_1A590B4E4(v0);
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

Swift::Void __swiftcall Engine.tearDown()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (**v10)(uint64_t);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  void *v17;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1A594A764();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Engine.Logger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_didTearDown) + 16;
  v10 = (uint64_t (**)(uint64_t))atomicFlag_testAndSet.unsafeMutableAddressor();
  if (((*v10)(v9) & 1) == 0)
  {
    v11 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
    sub_1A55034B8(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v8, type metadata accessor for Engine.Logger);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    swift_retain();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v12 = sub_1A594A74C();
    v13 = sub_1A594C030();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      *(_DWORD *)v14 = 68157952;
      LODWORD(aBlock[0]) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v14 + 8) = 256;
      LOBYTE(aBlock[0]) = *(_BYTE *)(v11 + *(int *)(v6 + 20));
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, v12, v13, "[[%.*hhx]] Tearing down.", (uint8_t *)v14, 0xBu);
      MEMORY[0x1A85B1964](v14, -1, -1);

    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v15 = *(NSObject **)(v1 + 16);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_1A590ED94;
    *(_QWORD *)(v16 + 24) = v1;
    aBlock[4] = sub_1A564AEE0;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A590BA40;
    aBlock[3] = &block_descriptor_3_2;
    v17 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v15, v17);
    _Block_release(v17);
    LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v15 & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_1A590B898(uint64_t result)
{
  uint64_t v1;

  if (!*(_QWORD *)(result + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_activityTimer))
  {
    __break(1u);
    goto LABEL_6;
  }
  v1 = result;
  swift_retain();
  RestartableTimer.stop()();
  result = swift_release();
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_inSyncMailboxesDidSyncTimer))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  swift_retain();
  RestartableTimer.stop()();
  result = swift_release();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_checkForLongSyncsTimer))
  {
    swift_retain();
    RestartableTimer.stop()();
    swift_release();
    return sub_1A590B934();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1A590B934()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_stateCapture);
  if (v1 >> 62)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A594CA38();
    v2 = result;
    if (!result)
      goto LABEL_10;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v2)
      goto LABEL_10;
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0)
      MEMORY[0x1A85AEC04](i, v1);
    else
      swift_retain();
    StateCapture.tearDown()();
    swift_release();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  v5 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections))
  {
    swift_retain();
    sub_1A5915DF0();
    swift_release();
  }
  *(_QWORD *)(v0 + v5) = 0;
  return swift_release();
}

uint64_t sub_1A590BA40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t Engine.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t (**v12)(uint64_t);
  uint64_t result;
  _DWORD v15[74];

  v1 = v0;
  v2 = type metadata accessor for Engine.Logger(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15[-2] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
  sub_1A55034B8(v5, (uint64_t)v4, v6);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v7 = sub_1A594A74C();
  v8 = sub_1A594C030();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    *(_DWORD *)v9 = 68157952;
    v15[0] = 2;
    sub_1A594C3CC();
    *(_WORD *)(v9 + 8) = 256;
    v10 = v4[*(int *)(v2 + 20)];
    sub_1A55034FC((uint64_t)v4, type metadata accessor for Engine.Logger);
    LOBYTE(v15[0]) = v10;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v7, v8, "[[%.*hhx]] Deinit.", (uint8_t *)v9, 0xBu);
    MEMORY[0x1A85B1964](v9, -1, -1);
  }
  else
  {
    sub_1A55034FC((uint64_t)v4, type metadata accessor for Engine.Logger);
  }

  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_didTearDown);
  v12 = (uint64_t (**)(uint64_t))atomicFlag_testAndSet.unsafeMutableAddressor();
  result = (*v12)(v11 + 16);
  if ((_DWORD)result)
  {

    swift_release();
    sub_1A55034FC(v5, type metadata accessor for Engine.Logger);
    swift_bridgeObjectRelease();
    swift_release();
    memcpy(v15, (const void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state), 0x120uLL);
    sub_1A55676F0((uint64_t)v15);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_externalState, (uint64_t (*)(_QWORD))type metadata accessor for ExternalState);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A590F4C8(*(_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_powerTelemetry), *(_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_powerTelemetry + 8), *(_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_powerTelemetry + 16));
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Engine.__deallocating_deinit()
{
  Engine.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A590BD68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  void (*v9)(_QWORD, double);
  id v10;
  char v11;
  uint64_t (*v12)(_QWORD *, uint64_t);
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;
  int64_t v17;
  int v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  BOOL v34;
  int v35;
  void *v36;
  id v37;
  __uint64_t v38;
  int v39;
  uint64_t v40;
  _QWORD *v41;
  id v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD *, uint64_t);
  unsigned int v48;
  void (*v49)(_QWORD *, _QWORD, uint64_t);
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v3 = sub_1A594AED8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v1 + 16);
  *v7 = v8;
  v9 = *(void (**)(_QWORD, double))(v4 + 104);
  v48 = *MEMORY[0x1E0DEF740];
  v49 = (void (*)(_QWORD *, _QWORD, uint64_t))v9;
  v9(v7, v5);
  v10 = v8;
  v11 = sub_1A594AEF0();
  v12 = *(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8);
  v50 = v7;
  v51 = v3;
  v47 = v12;
  result = v12(v7, v3);
  if ((v11 & 1) != 0)
  {
    v14 = *(_QWORD *)(a1 + 16);
    if (v14)
    {
      v46 = v1;
      v53 = MEMORY[0x1E0DEE9D8];
      sub_1A5923CB8(0, v14, 0);
      v15 = v53;
      v44 = a1;
      v16 = (_QWORD *)(a1 + 64);
      v17 = v14;
      do
      {
        v18 = *((_DWORD *)v16 - 8);
        v19 = *(v16 - 3);
        v20 = *((_DWORD *)v16 - 4);
        v22 = *(v16 - 1);
        v21 = *v16;
        v23 = swift_allocObject();
        *(_DWORD *)(v23 + 16) = v18;
        *(_QWORD *)(v23 + 24) = v19;
        *(_DWORD *)(v23 + 32) = v20;
        *(_QWORD *)(v23 + 40) = v22;
        *(_QWORD *)(v23 + 48) = v21;
        sub_1A5910E08(v19);
        v53 = v15;
        v25 = *(_QWORD *)(v15 + 16);
        v24 = *(_QWORD *)(v15 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v25 >= v24 >> 1)
        {
          sub_1A5923CB8(v24 > 1, v25 + 1, 1);
          v15 = v53;
        }
        *(_QWORD *)(v15 + 16) = v25 + 1;
        *(_QWORD *)(v15 + 8 * v25 + 32) = v23;
        v16 += 5;
        --v17;
      }
      while (v17);
      v26 = v46;
      sub_1A590C0EC();
      swift_release();
      v27 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_betterPathEvaluator;
      v28 = (uint64_t *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 64);
      v45 = v27;
      v29 = v50;
      v30 = v51;
      while (1)
      {
        v32 = *(v28 - 3);
        v33 = *(_QWORD *)(v26 + v27);
        if (v33)
          v34 = v32 >> 60 == 7;
        else
          v34 = 0;
        if (!v34)
          goto LABEL_11;
        v52 = *v28;
        v35 = *(unsigned __int8 *)(v32 + 16);
        v36 = *(void **)(v33 + 16);
        *v29 = v36;
        v49(v29, v48, v30);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v37 = v36;
        swift_retain();
        sub_1A5910E08(v32);
        LOBYTE(v36) = sub_1A594AEF0();
        result = v47(v29, v30);
        if ((v36 & 1) == 0)
        {
          __break(1u);
          goto LABEL_29;
        }
        v38 = static MonotonicTime.now()();
        v39 = *(unsigned __int8 *)(v33 + 64);
        if (v35)
        {
          v27 = v45;
          if (*(_BYTE *)(v33 + 64))
          {
            v26 = v46;
            if (v39 != 1 || *(_QWORD *)(v33 + 56) >= v38)
              goto LABEL_10;
            v31 = 1;
          }
          else
          {
            v31 = 1;
            v26 = v46;
          }
        }
        else
        {
          v27 = v45;
          v26 = v46;
          if (v39 != 1)
            goto LABEL_10;
          v38 = 0;
          v31 = 0;
        }
        *(_QWORD *)(v33 + 56) = v38;
        *(_BYTE *)(v33 + 64) = v31;
LABEL_10:
        sub_1A59024D0();
        sub_1A59028A8();
        sub_1A5910DD8(v32);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_11:
        v28 += 5;
        if (!--v14)
          return swift_bridgeObjectRelease();
      }
    }
    v41 = v50;
    v40 = v51;
    *v50 = v10;
    v49(v41, v48, v40);
    v42 = v10;
    v43 = sub_1A594AEF0();
    result = v47(v41, v40);
    if ((v43 & 1) != 0)
    {
      sub_1A590C0EC();
      return swift_arrayDestroy();
    }
  }
  else
  {
LABEL_29:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A590C0EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  _BYTE v18[288];
  _BYTE v19[288];

  v1 = v0;
  v2 = sub_1A594AED8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  v6 = *(void **)(v0 + 16);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v7 = v6;
  LOBYTE(v6) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  swift_beginAccess();
  v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A590CCA4(v9);
  result = swift_endAccess();
  v10 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_isProcessingUpdates;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_isProcessingUpdates) & 1) != 0)
    return result;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_isProcessingUpdates) = 1;
  sub_1A590CDF4();
  sub_1A590CECC();
  v11 = (const void *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
  swift_beginAccess();
  memcpy(v19, v11, sizeof(v19));
  result = StateWithTasks.environment.getter();
  if ((result & 0x100) == 0)
  {
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_activityTimer))
    {
      swift_retain();
      RestartableTimer.start()();
      swift_release();
      v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections);
      if (v12)
      {
        v13 = v12 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
        swift_beginAccess();
        *(_BYTE *)(v13 + 17) = 0;
      }
      goto LABEL_7;
    }
LABEL_13:
    __break(1u);
    return result;
  }
LABEL_7:
  v14 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_powerTelemetry;
  swift_beginAccess();
  if (*(_QWORD *)(v14 + 16))
  {
    memcpy(v18, v11, sizeof(v18));
    v15 = StateWithTasks.appState.getter() & 1;
    v16 = (_QWORD *)StateWithTasks.runningSyncRequests.getter();
    sub_1A59272DC(v15, v16, v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger);
    swift_endAccess();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_endAccess();
  }
  *(_BYTE *)(v1 + v10) = 0;
  return result;
}

uint64_t sub_1A590C334()
{
  return sub_1A590C348((uint64_t)&unk_1E4E7BAD8, (uint64_t)&unk_1E4E7BAE8, (uint64_t)&unk_1E4E7BAF8);
}

uint64_t sub_1A590C348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t, uint64_t);
  id v11;
  char v12;
  uint64_t (*v13)(_QWORD *, uint64_t);
  uint64_t result;
  id v15;
  char v16;
  _QWORD v17[2];

  v17[1] = a3;
  v4 = sub_1A594AED8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v3 + 16);
  *v7 = v8;
  v9 = *MEMORY[0x1E0DEF740];
  v10 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, v9, v4);
  v11 = v8;
  v12 = sub_1A594AEF0();
  v13 = *(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8);
  result = v13(v7, v4);
  if ((v12 & 1) != 0)
  {
    *v7 = v11;
    v10(v7, v9, v4);
    v15 = v11;
    v16 = sub_1A594AEF0();
    result = v13(v7, v4);
    if ((v16 & 1) != 0)
    {
      sub_1A590C0EC();
      return swift_arrayDestroy();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A590C474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  void (*v14)(_QWORD *, double);
  uint64_t (*v15)(_QWORD *, uint64_t);
  uint64_t result;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *, _QWORD, uint64_t);
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t (*v40)(_QWORD *, uint64_t);
  uint64_t v41;
  void (*v42)(_QWORD, double);
  id v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46[3];

  v1 = v0;
  v2 = sub_1A594A764();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for Engine.Logger(0);
  MEMORY[0x1E0C80A78](v41);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594AED8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v0 + 16);
  *v12 = v13;
  v14 = *(void (**)(_QWORD *, double))(v9 + 104);
  v44 = *MEMORY[0x1E0DEF740];
  v14(v12, v10);
  v43 = v13;
  LOBYTE(v13) = sub_1A594AEF0();
  v15 = *(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8);
  result = v15(v12, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  v42 = (void (*)(_QWORD, double))v14;
  v17 = v5;
  swift_beginAccess();
  v18 = StateWithTasks.failOldBackgroundSyncRequests()();
  swift_endAccess();
  if (!*(_QWORD *)(v18 + 16))
    return swift_bridgeObjectRelease();
  v40 = v15;
  v19 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
  sub_1A55034B8(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v7, type metadata accessor for Engine.Logger);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v17, v7, v2);
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  swift_bridgeObjectRetain_n();
  v20 = sub_1A594A74C();
  v21 = sub_1A594C030();
  v39 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v38 = v2;
    v23 = v22;
    v36 = swift_slowAlloc();
    v46[0] = v36;
    *(_DWORD *)v23 = 68158466;
    LODWORD(v45) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 8) = 256;
    v37 = v3;
    v24 = *(_BYTE *)(v19 + *(int *)(v41 + 20));
    swift_release();
    LOBYTE(v45) = v24;
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v23 + 11) = 2048;
    v25 = *(_QWORD *)(v18 + 16);
    swift_bridgeObjectRelease();
    v45 = v25;
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 21) = 2082;
    v26 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v27 = sub_1A590EDAC(v26);
    v41 = (uint64_t)v17;
    v28 = v27;
    v30 = v29;
    swift_bridgeObjectRelease();
    v45 = sub_1A5903E24(v28, v30, v46);
    sub_1A594C3CC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v20, (os_log_type_t)v39, "[%.*hhx] Connections stalled. Failed %ld background sync request(s): %{public}s.", (uint8_t *)v23, 0x1Fu);
    v31 = v36;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v31, -1, -1);
    MEMORY[0x1A85B1964](v23, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v41, v38);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v17, v2);
  }
  v32 = (void (*)(_QWORD *, _QWORD, uint64_t))v42;
  v33 = v43;
  *v12 = v43;
  v32(v12, v44, v8);
  v34 = v33;
  LOBYTE(v33) = sub_1A594AEF0();
  result = v40(v12, v8);
  if ((v33 & 1) == 0)
    goto LABEL_11;
  sub_1A590C0EC();
  return swift_arrayDestroy();
}

uint64_t Engine.persistenceDidSend(_:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_1A594AD34();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A594AD70();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(v3 + 16);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v3;
  *(_QWORD *)(v14 + 24) = a1;
  v15 = a2 & 1;
  *(_BYTE *)(v14 + 32) = a2 & 1;
  aBlock[4] = sub_1A590F528;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A587D408;
  aBlock[3] = &block_descriptor_9_4;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_1A5524688(a1, v15);
  sub_1A594AD4C();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1A55E1698((unint64_t *)&qword_1EE7A19E0, v7, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A18);
  sub_1A54E2E30((unint64_t *)&qword_1EE7A40E0, (uint64_t *)&unk_1EE7A1A18, MEMORY[0x1E0DEAF38]);
  sub_1A594C5C4();
  MEMORY[0x1A85AE508](0, v13, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1A590CAD8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  void (*v12)(_QWORD *, uint64_t, uint64_t, double);
  id v13;
  void (*v14)(_QWORD *, uint64_t);
  uint64_t v15;
  char v16;
  id v17;
  char v18;
  uint64_t inited;
  _BYTE v21[40];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v5 = sub_1A594AED8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(void **)(v2 + 16);
  *v9 = v10;
  v11 = *MEMORY[0x1E0DEF740];
  v12 = *(void (**)(_QWORD *, uint64_t, uint64_t, double))(v6 + 104);
  v12(v9, v11, v5, v7);
  v13 = v10;
  LOBYTE(v10) = sub_1A594AEF0();
  v14 = *(void (**)(_QWORD *, uint64_t))(v6 + 8);
  v14(v9, v5);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  v16 = a2 & 1;
  *(_BYTE *)(v15 + 24) = v16;
  *v9 = v13;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v12)(v9, v11, v5);
  v17 = v13;
  sub_1A5524688(a1, v16);
  v18 = sub_1A594AEF0();
  v14(v9, v5);
  if ((v18 & 1) == 0)
    goto LABEL_5;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796248);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
  *(_QWORD *)(inited + 32) = v15 | 0x4000000000000000;
  swift_retain();
  sub_1A590C0EC();
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_release();
}

uint64_t sub_1A590CCA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1A5923A50(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

__uint64_t sub_1A590CDF4()
{
  uint64_t v0;
  uint64_t v1;
  __uint64_t result;
  __uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  const void *v7;
  _BYTE __dst[288];

  v1 = v0;
  result = static MonotonicTime.now()();
  v3 = result;
  v4 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_lastLoggedSyncRequestsAt;
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_lastLoggedSyncRequestsAt);
  v6 = result - v5;
  if (result < v5)
  {
    if ((uint64_t)(v5 - result) >= 0)
    {
      v6 = result - v5;
      goto LABEL_5;
    }
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  if ((uint64_t)(result - v5) < 0)
    goto LABEL_9;
LABEL_5:
  if ((double)v6 / 1000000000.0 > 20.0)
  {
    v7 = (const void *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
    swift_beginAccess();
    memcpy(__dst, v7, sizeof(__dst));
    sub_1A55675E8((uint64_t)__dst);
    StateWithTasks.logSyncRequests()();
    result = sub_1A55676F0((uint64_t)__dst);
    *(_QWORD *)(v1 + v4) = v3;
  }
  return result;
}

void sub_1A590CECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  __int128 v24;
  __int128 v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28[36];
  _BYTE __dst[296];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections);
  if (v1)
  {
    v2 = v0;
    v3 = 0;
    v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_pendingUpdates);
    v5 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_externalState;
    v6 = (const void *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
    v7 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_shouldLogForFirstConnection;
    swift_retain();
    swift_beginAccess();
    v8 = *v4;
    *v4 = MEMORY[0x1E0DEE9D8];
    sub_1A590D380(v8);
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      v22 = v0 + v5;
      do
      {
        v10 = 0;
        while (1)
        {
          v11 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
            goto LABEL_27;
          }
          v12 = *(_QWORD *)(v8 + 8 * v10 + 32);
          if (v12 >> 62 == 1
            && *(_BYTE *)(v12 + 24) == 1
            && ((*(_QWORD *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) >> 59) & 0x1E | (*(_QWORD *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) >> 2) & 1) == 1)
          {
            break;
          }
          ++v10;
          if (v11 == v9)
            goto LABEL_12;
        }
        swift_beginAccess();
        sub_1A5510284(v22, &qword_1EE795DE0);
        v13 = type metadata accessor for Activity(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v22, 1, 1, v13);
        swift_endAccess();
LABEL_12:
        v14 = (id)*tracingLog.unsafeMutableAddressor();
        v15 = sub_1A594C318();

        if ((v15 & 1) != 0)
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v16 = 0;
          do
          {
            v17 = *(_QWORD *)(v8 + 8 * v16++ + 32);
            v28[0] = v17;
            swift_retain();
            sub_1A590DD9C(v28, v2);
            swift_release();
          }
          while (v9 != v16);
          swift_bridgeObjectRelease();
        }
        swift_beginAccess();
        swift_retain();
        swift_retain();
        StateWithTasks.update(updates:send:persist:)(v8, (uint64_t (*)(uint64_t, uint64_t))sub_1A590F994, v1, (uint64_t (*)(uint64_t))sub_1A590F98C, v2);
        swift_endAccess();
        swift_release();
        swift_bridgeObjectRelease();
        if ((*(_BYTE *)(v2 + v7) & 1) != 0)
        {
          *(_BYTE *)(v2 + v7) = 0;
          memcpy(__dst, v6, 0x120uLL);
          sub_1A55675E8((uint64_t)__dst);
          StateWithTasks.logForDidCreateFirstConnection()();
          sub_1A55676F0((uint64_t)__dst);
        }
        swift_release();
        v8 = *v4;
        *v4 = MEMORY[0x1E0DEE9D8];
        sub_1A590D380(v8);
        v9 = *(_QWORD *)(v8 + 16);
      }
      while (v9);
    }
    swift_bridgeObjectRelease();
    swift_beginAccess();
    memcpy(v28, v6, sizeof(v28));
    sub_1A55675E8((uint64_t)v28);
    StateWithTasks.connectionLimitsAndUsage.getter((uint64_t)v23);
    sub_1A55676F0((uint64_t)v28);
    sub_1A5916920();
    v25 = v24;
    v27 = v24;
    sub_1A54F81BC((uint64_t)&v27);
    sub_1A559C1E0((_QWORD *)&v25 + 1, &v26);
    sub_1A559C244(&v26);
    v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    swift_beginAccess();
    v3 = *v18;
    if ((unint64_t)*v18 >> 62)
    {
LABEL_27:
      swift_bridgeObjectRetain_n();
      v19 = sub_1A594CA38();
      if (v19)
        goto LABEL_20;
    }
    else
    {
      v19 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v19)
      {
LABEL_20:
        if (v19 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v19; ++i)
        {
          if ((v3 & 0xC000000000000001) != 0)
          {
            v21 = MEMORY[0x1A85AEC04](i, v3);
          }
          else
          {
            v21 = *(_QWORD *)(v3 + 8 * i + 32);
            swift_retain();
          }
          (*(void (**)(void))(*(_QWORD *)v21 + 560))();
          swift_release();
        }
      }
    }
    swift_bridgeObjectRelease_n();
    swift_release();
  }
}

uint64_t sub_1A590D2D8(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  char v6;
  uint64_t v7;

  v4 = (*(uint64_t (**)(void))(a2 + 32))();
  v5 = (id)*tracingLog.unsafeMutableAddressor();
  v6 = sub_1A594C318();

  if ((v6 & 1) != 0 && !((a1 >> 58) & 0x3C | (a1 >> 1) & 3))
  {
    swift_retain();
    v7 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5910C34(v7, a2);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v4;
}

uint64_t sub_1A590D380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v3 = sub_1A594A764();
  v4 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  v60 = v4;
  v5 = MEMORY[0x1E0C80A78](v3);
  v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v56 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v56 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v56 - v13;
  v15 = type metadata accessor for Engine.Logger(0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v56 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v56 - v23;
  result = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v56 - v26;
  v28 = *(_QWORD *)(a1 + 16);
  if (v28)
  {
    v29 = 0;
    v30 = 0;
    do
    {
      v31 = *(_QWORD *)(a1 + 8 * v29 + 32) >> 62;
      v32 = v30 | 1;
      if ((_DWORD)v31 == 1)
        v30 |= 2u;
      if (!(_DWORD)v31)
        v30 = v32;
      ++v29;
    }
    while (v28 != v29);
    v57 = result;
    switch(v30)
    {
      case 3u:
        v39 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
        sub_1A55034B8(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v21, type metadata accessor for Engine.Logger);
        v40 = v21;
        v34 = v59;
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v9, v40, v59);
        swift_retain_n();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        swift_bridgeObjectRetain_n();
        v41 = sub_1A594A74C();
        v42 = sub_1A594C000();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = swift_slowAlloc();
          *(_DWORD *)v43 = 68158208;
          LODWORD(v61) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v43 + 8) = 256;
          v44 = *(_BYTE *)(v39 + *(int *)(v57 + 20));
          swift_release();
          LOBYTE(v61) = v44;
          sub_1A594C3CC();
          swift_release();
          *(_WORD *)(v43 + 11) = 2048;
          swift_bridgeObjectRelease();
          v61 = v28;
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v41, v42, "[%.*hhx] Processing %ld update(s) from network and persistence", (uint8_t *)v43, 0x15u);
          MEMORY[0x1A85B1964](v43, -1, -1);

        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        v14 = v9;
        break;
      case 2u:
        v45 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
        sub_1A55034B8(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v24, type metadata accessor for Engine.Logger);
        v34 = v59;
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v12, v24, v59);
        swift_retain_n();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        swift_bridgeObjectRetain_n();
        v46 = sub_1A594A74C();
        v47 = sub_1A594C000();
        if (os_log_type_enabled(v46, v47))
        {
          v48 = swift_slowAlloc();
          *(_DWORD *)v48 = 68158208;
          LODWORD(v61) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v48 + 8) = 256;
          v49 = *(_BYTE *)(v45 + *(int *)(v57 + 20));
          swift_release();
          LOBYTE(v61) = v49;
          sub_1A594C3CC();
          swift_release();
          *(_WORD *)(v48 + 11) = 2048;
          swift_bridgeObjectRelease();
          v61 = v28;
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v46, v47, "[%.*hhx] Processing %ld update(s) from persistence", (uint8_t *)v48, 0x15u);
          MEMORY[0x1A85B1964](v48, -1, -1);

        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        v14 = v12;
        break;
      case 1u:
        v33 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
        sub_1A55034B8(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v27, type metadata accessor for Engine.Logger);
        v34 = v59;
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v14, v27, v59);
        swift_retain_n();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        swift_bridgeObjectRetain_n();
        v35 = sub_1A594A74C();
        v36 = sub_1A594C000();
        if (os_log_type_enabled(v35, v36))
        {
          v37 = swift_slowAlloc();
          *(_DWORD *)v37 = 68158208;
          LODWORD(v61) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v37 + 8) = 256;
          v38 = *(_BYTE *)(v33 + *(int *)(v57 + 20));
          swift_release();
          LOBYTE(v61) = v38;
          sub_1A594C3CC();
          swift_release();
          *(_WORD *)(v37 + 11) = 2048;
          swift_bridgeObjectRelease();
          v61 = v28;
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v35, v36, "[%.*hhx] Processing %ld update(s) from network", (uint8_t *)v37, 0x15u);
          MEMORY[0x1A85B1964](v37, -1, -1);

        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        break;
      default:
        v50 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
        sub_1A55034B8(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v18, type metadata accessor for Engine.Logger);
        v34 = v59;
        v51 = v58;
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v58, v18, v59);
        swift_retain_n();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        swift_bridgeObjectRetain_n();
        v52 = sub_1A594A74C();
        v53 = sub_1A594C000();
        if (os_log_type_enabled(v52, v53))
        {
          v54 = swift_slowAlloc();
          *(_DWORD *)v54 = 68158208;
          LODWORD(v61) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v54 + 8) = 256;
          v55 = *(_BYTE *)(v50 + *(int *)(v57 + 20));
          swift_release();
          LOBYTE(v61) = v55;
          sub_1A594C3CC();
          swift_release();
          *(_WORD *)(v54 + 11) = 2048;
          swift_bridgeObjectRelease();
          v61 = v28;
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v52, v53, "[%.*hhx] Processing %ld update(s)", (uint8_t *)v54, 0x15u);
          MEMORY[0x1A85B1964](v54, -1, -1);

          v14 = v58;
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
          v14 = v51;
        }
        break;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v14, v34);
  }
  return result;
}

uint64_t sub_1A590DBB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t result;
  unint64_t *v10;
  uint64_t v11;
  _BYTE v12[24];
  unint64_t v13[7];

  v2 = sub_1A594AED8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(void **)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x1E0DEF740], v2, v4);
  v8 = v7;
  LOBYTE(v7) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) != 0)
  {
    v10 = (unint64_t *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    swift_beginAccess();
    v13[0] = *v10;
    v13[1] = (unint64_t)sub_1A591BBEC;
    v13[2] = 0;
    v13[3] = (unint64_t)sub_1A590F9B4;
    v13[4] = 0;
    v13[5] = (unint64_t)sub_1A590F9F8;
    v13[6] = 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v11 = sub_1A590E6A0(v13);
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A590DCE8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *a1;
  *a1 = 0x8000000000000000;
  sub_1A590FAA8(0x100000000uLL, v5, v6, v3, v4, isUniquelyReferenced_nonNull_native);
  *a1 = v9;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A590DD9C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  int v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  void *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;

  v40 = a2;
  v3 = sub_1A594A65C();
  v41 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594A62C();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v30 - v11;
  result = MEMORY[0x1E0C80A78](v10);
  v16 = (char *)&v30 - v15;
  v17 = *a1;
  if ((unint64_t)*a1 >> 62 == 1)
  {
    v18 = *(_QWORD *)(v17 + 16);
    if (*(_BYTE *)(v17 + 24) == 1 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 1)
    {
      v37 = result;
      v39 = v14;
      v20 = v18 & 0xFFFFFFFFFFFFFFBLL;
      v21 = *(_DWORD *)(v20 + 16);
      v34 = *(unsigned __int8 *)(v20 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      LODWORD(v36) = v21;
      v22 = v5;
      OSSignpostID.init(engine:kind:idA:idB:)();
      v23 = tracingSignposter.unsafeMutableAddressor();
      v24 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
      v38 = v3;
      v24(v5, v23, v3);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v25 = (void *)sub_1A594A650();
      v35 = sub_1A594C144();
      if ((sub_1A594C318() & 1) != 0)
      {
        v32 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
        v33 = v25;
        v32(v12, v16, v37);
        v26 = swift_slowAlloc();
        v31 = swift_slowAlloc();
        v43 = v31;
        *(_DWORD *)v26 = 67109890;
        v42 = v36;
        sub_1A594C3CC();
        v36 = v26;
        *(_WORD *)(v26 + 8) = 2082;
        v30 = v5;
        __asm { BR              X9 }
      }
      swift_release_n();

      swift_bridgeObjectRelease_n();
      v28 = v38;
      v27 = v39;
      v29 = v37;
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v9, v16, v37);
      sub_1A594A734();
      swift_allocObject();
      sub_1A594A728();
      swift_release();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v28);
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v16, v29);
    }
  }
  return result;
}

uint64_t sub_1A590E2A8(int *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t);
  NSObject *v20;
  int v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_BYTE *, _BYTE *, uint64_t);
  char v30;
  const char *v31;
  void (*v32)(_BYTE *, uint64_t);
  uint64_t v34;
  os_signpost_id_t v35;
  os_log_t v36;
  void (*v37)(_BYTE *, uint64_t);
  _BYTE v38[4];
  int v39;
  _BYTE *v40;
  os_log_t v41;
  _BYTE *v42;
  void (*v43)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;

  v49 = a2;
  v44 = sub_1A594A674();
  v46 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v45 = &v38[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1A594A65C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v38[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1A594A62C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = &v38[-v14];
  MEMORY[0x1E0C80A78](v13);
  v17 = &v38[-v16];
  v50 = *a1;
  OSSignpostID.init(engine:kind:idA:idB:)();
  v18 = tracingSignposter.unsafeMutableAddressor();
  v47 = v5;
  v19 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v49 = v4;
  v19(v7, v18, v4);
  v48 = v9;
  v43 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16);
  v43(v15, v17, v8);
  sub_1A594A734();
  swift_allocObject();
  sub_1A594A728();
  v20 = sub_1A594A650();
  sub_1A594A71C();
  v21 = sub_1A594C138();
  if ((sub_1A594C318() & 1) != 0)
  {
    v39 = v21;
    v41 = v20;
    v42 = v17;
    v40 = v7;
    v22 = v47;
    swift_retain();
    v23 = v45;
    sub_1A594A740();
    swift_release();
    v24 = v23;
    v25 = v44;
    v26 = (*(uint64_t (**)(_BYTE *, uint64_t))(v46 + 88))(v24, v44);
    v27 = v8;
    v28 = v48;
    v29 = v43;
    if (v26 == *MEMORY[0x1E0DF2190])
    {
      v30 = 0;
      v31 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v46 + 8))(v45, v25);
      v31 = "End syncRequestId: #%u";
      v30 = 1;
    }
    v29(v15, v12, v27);
    v34 = swift_slowAlloc();
    *(_BYTE *)v34 = 0;
    *(_BYTE *)(v34 + 1) = v30;
    *(_WORD *)(v34 + 2) = 1024;
    v51 = v50;
    sub_1A594C3CC();
    v35 = sub_1A594A620();
    v36 = v41;
    _os_signpost_emit_with_name_impl(&dword_1A4F90000, v41, (os_signpost_type_t)v39, v35, "SyncRequest", v31, (uint8_t *)v34, 8u);
    MEMORY[0x1A85B1964](v34, -1, -1);
    swift_release();

    v37 = *(void (**)(_BYTE *, uint64_t))(v28 + 8);
    v37(v12, v27);
    (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v40, v49);
    v37(v42, v27);
    return ((uint64_t (*)(_BYTE *, uint64_t))v37)(v15, v27);
  }
  else
  {
    swift_release();

    v32 = *(void (**)(_BYTE *, uint64_t))(v48 + 8);
    v32(v12, v8);
    (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v7, v49);
    return ((uint64_t (*)(_BYTE *, uint64_t))v32)(v17, v8);
  }
}

uint64_t Engine.Logger.l.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A594A764();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Engine.Logger.id.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Engine.Logger(0) + 20));
}

uint64_t sub_1A590E6A0(unint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t (*v22)(char *);
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  unsigned int v46;
  _QWORD *v47;
  int isUniquelyReferenced_nonNull_native;
  unsigned int v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t result;
  void (*v63)(uint64_t);
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t (*v78)(char *);
  void (*v79)(_QWORD **);
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  _QWORD v85[2];

  v70 = type metadata accessor for ConnectionStatus(0);
  v76 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v71 = (uint64_t)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v63 - v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798588);
  MEMORY[0x1E0C80A78](v6);
  v74 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v72 = (uint64_t)&v63 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE795DC0);
  v68 = *(_QWORD *)(v10 - 8);
  v69 = v10;
  MEMORY[0x1E0C80A78](v10);
  v64 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v63 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v63 - v16;
  MEMORY[0x1E0C80A78](v18);
  v73 = (char *)&v63 - v19;
  v20 = sub_1A592881C(MEMORY[0x1E0DEE9D8]);
  v21 = *a1;
  v79 = (void (*)(_QWORD **))a1[1];
  v23 = a1[2];
  v22 = (uint64_t (*)(char *))a1[3];
  v77 = (_QWORD *)v20;
  v78 = v22;
  v85[0] = v21;
  v24 = a1[4];
  v63 = (void (*)(uint64_t))a1[5];
  v25 = a1[6];
  v83 = v24;
  v65 = v25;
  if (v21 >> 62)
    goto LABEL_39;
  v80 = v21 & 0xFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1A54FCA28((uint64_t)v85);
  swift_retain();
  swift_retain();
  swift_retain();
LABEL_3:
  v27 = 0;
  v81 = v21;
  v82 = v21 & 0xC000000000000001;
  v21 = (unint64_t)&unk_1EE795DC0;
  v66 = v26;
  v67 = v5;
  v75 = v23;
  while (1)
  {
    if (v27 != v26)
    {
      do
      {
        if (v82)
        {
          v29 = MEMORY[0x1A85AEC04](v27, v81);
          v30 = v27 + 1;
          if (__OFADD__(v27, 1))
            goto LABEL_35;
        }
        else
        {
          if ((v27 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
LABEL_39:
            v80 = v21 & 0xFFFFFFFFFFFFFF8;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A54FCA28((uint64_t)v85);
            swift_retain();
            swift_retain();
            swift_retain();
            v26 = sub_1A594CA38();
            sub_1A54F81BC((uint64_t)v85);
            goto LABEL_3;
          }
          if (v27 >= *(_QWORD *)(v80 + 16))
            goto LABEL_36;
          v29 = *(_QWORD *)(v81 + 8 * v27 + 32);
          swift_retain();
          v30 = v27 + 1;
          if (__OFADD__(v27, 1))
            goto LABEL_35;
        }
        v84 = (_QWORD *)v29;
        v79(&v84);
        swift_release();
        sub_1A55032A0((uint64_t)v14, (uint64_t)v17, (uint64_t *)&unk_1EE795DC0);
        if ((v78(v17) & 1) != 0)
        {
          sub_1A55032A0((uint64_t)v17, v72, (uint64_t *)&unk_1EE795DC0);
          v28 = 0;
          v27 = v30;
          goto LABEL_20;
        }
        sub_1A5510284((uint64_t)v17, (uint64_t *)&unk_1EE795DC0);
        ++v27;
      }
      while (v30 != v26);
    }
    v28 = 1;
    v27 = v26;
LABEL_20:
    v32 = v68;
    v31 = v69;
    v33 = 1;
    v34 = v72;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v72, v28, 1, v69);
    v35 = v34;
    v36 = v74;
    sub_1A55032A0(v35, v74, &qword_1EE798588);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v36, 1, v31) != 1)
    {
      v37 = v64;
      sub_1A55032A0(v74, v64, (uint64_t *)&unk_1EE795DC0);
      v63(v37);
      sub_1A5510284(v37, (uint64_t *)&unk_1EE795DC0);
      v33 = 0;
    }
    v38 = v76;
    v39 = (uint64_t)v73;
    v40 = v33;
    v41 = v70;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v73, v40, 1, v70);
    v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v39, 1, v41);
    v23 = v75;
    if (v42 == 1)
    {
      sub_1A54F81BC((uint64_t)v85);
      swift_release();
      swift_release();
      swift_release();
      return (uint64_t)v77;
    }
    sub_1A5910FA0(v39, (uint64_t)v5);
    v43 = ConnectionStatus.mailbox.getter();
    if (v43)
      break;
LABEL_6:
    v5 = v67;
    sub_1A55034FC((uint64_t)v67, type metadata accessor for ConnectionStatus);
  }
  v45 = (uint64_t)v5;
  v5 = (char *)v43;
  v46 = v44;
  sub_1A55034B8(v45, v71, type metadata accessor for ConnectionStatus);
  v47 = v77;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v84 = v47;
  v49 = v46;
  v51 = sub_1A5816CE4((uint64_t)v5, v46);
  v52 = v47[2];
  v53 = (v50 & 1) == 0;
  v54 = v52 + v53;
  if (__OFADD__(v52, v53))
    goto LABEL_37;
  v23 = v50;
  if (v47[3] >= v54)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_1A5914BE8();
    goto LABEL_30;
  }
  sub_1A59143F8(v54, isUniquelyReferenced_nonNull_native);
  v55 = sub_1A5816CE4((uint64_t)v5, v49);
  if ((v23 & 1) == (v56 & 1))
  {
    v51 = v55;
LABEL_30:
    v77 = v84;
    if ((v23 & 1) != 0)
    {
      sub_1A5910FE4(v71, v84[7] + *(_QWORD *)(v76 + 72) * v51);
    }
    else
    {
      v84[(v51 >> 6) + 8] |= 1 << v51;
      v57 = v76;
      v58 = v77[6] + 16 * v51;
      *(_QWORD *)v58 = v5;
      *(_DWORD *)(v58 + 8) = v49;
      sub_1A5910FA0(v71, v77[7] + *(_QWORD *)(v57 + 72) * v51);
      v59 = v77[2];
      v60 = __OFADD__(v59, 1);
      v61 = v59 + 1;
      if (v60)
        goto LABEL_38;
      v77[2] = v61;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = v75;
    v26 = v66;
    goto LABEL_6;
  }
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

int64_t sub_1A590EC94@<X0>(int64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  int64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  v5 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v6 = *(_BYTE *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_BYTE *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  result = sub_1A5910B48(*(_QWORD *)v2, v4, v6, result, v7, v8, v9, v10);
  if (v12 == -1)
  {
    sub_1A5552DE8(v7, v8, v9);
    v11 = v8;
    result = v7;
    if ((v9 & 1) != 0)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
  else if ((v12 & 1) != 0)
  {
    goto LABEL_18;
  }
  if ((v6 & 1) != 0)
    goto LABEL_18;
  if ((_DWORD)v11 != (_DWORD)v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (result < v5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((v9 & 1) == 0)
  {
    if ((_DWORD)v8 == (_DWORD)v11)
    {
      if (v7 >= result)
      {
        *(_QWORD *)a2 = v5;
        *(_QWORD *)(a2 + 8) = v4;
        *(_BYTE *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 24) = result;
        *(_QWORD *)(a2 + 32) = v11;
        *(_BYTE *)(a2 + 40) = 0;
        *(_QWORD *)(a2 + 48) = v10;
        return result;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1A590ED94()
{
  uint64_t v0;

  return sub_1A590B898(v0);
}

uint64_t sub_1A590ED9C()
{
  return swift_deallocObject();
}

uint64_t sub_1A590EDAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  int v11;
  char v12;
  unint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  int64_t v27;
  int v28;
  char v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char v42;
  char v43;
  int v44;
  char *v45;
  __int128 v46;
  char v47;
  __int128 v48;
  char v49;
  uint64_t v50;
  __int128 v51;
  char v52;
  __int128 v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  char v58;
  _QWORD v59[3];
  __int128 v60;
  char v61;
  uint64_t v62;
  __int128 v63;
  char v64;
  __int128 v65;
  char v66;
  int64_t v67;
  int v68;
  char v69;

  sub_1A5910A18(6, a1, (uint64_t)&v46);
  v65 = v46;
  v66 = v47;
  v63 = v48;
  v64 = v49;
  v62 = v50;
  sub_1A5910788();
  if (v1 < 6)
  {
    sub_1A5910788();
    if (v18)
    {
      v19 = v18;
      v59[0] = MEMORY[0x1E0DEE9D8];
      v20 = v18 & ~(v18 >> 63);
      v22 = *((_QWORD *)&v65 + 1);
      v21 = v65;
      v23 = v66;
      sub_1A55032A0((uint64_t)&v63, (uint64_t)&v67, &qword_1EE796050);
      v24 = v62;
      v9 = (char *)v59;
      sub_1A5923CD4(0, v20, 0);
      if ((v19 & 0x8000000000000000) == 0)
      {
        v25 = v59[0];
        result = sub_1A5552DE8(v21, v22, v23);
        v44 = v22;
        v27 = v21;
        v28 = v22;
        v29 = v23;
        v42 = v23;
        v40 = v21;
        while ((v29 & 1) == 0)
        {
          if ((v23 & 1) != 0)
            goto LABEL_65;
          if (v28 != (_DWORD)v22)
          {
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
          if (v27 < v21)
            goto LABEL_47;
          result = sub_1A55032A0((uint64_t)&v67, (uint64_t)&v51, &qword_1EE796050);
          if ((v52 & 1) != 0)
            goto LABEL_66;
          if (DWORD2(v51) != (_DWORD)v22)
            goto LABEL_49;
          if (v27 >= (uint64_t)v51)
            goto LABEL_51;
          if (v27 < 0 || v27 >= 1 << *(_BYTE *)(v24 + 32))
            goto LABEL_53;
          if (((*(_QWORD *)(v24 + 56 + (((unint64_t)v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
            goto LABEL_55;
          if (*(_DWORD *)(v24 + 36) != (_DWORD)v22)
            goto LABEL_57;
          *(_QWORD *)&v60 = 35;
          *((_QWORD *)&v60 + 1) = 0xE100000000000000;
          String.init(_:)();
          v9 = (char *)&v60;
          sub_1A594B5F8();
          swift_bridgeObjectRelease();
          v30 = v60;
          v31 = v25;
          v59[0] = v25;
          v22 = *(_QWORD *)(v25 + 16);
          v32 = *(_QWORD *)(v25 + 24);
          if (v22 >= v32 >> 1)
          {
            v9 = (char *)v59;
            sub_1A5923CD4(v32 > 1, v22 + 1, 1);
            v31 = v59[0];
          }
          *(_QWORD *)(v31 + 16) = v22 + 1;
          v25 = v31;
          *(_OWORD *)(v31 + 16 * v22 + 32) = v30;
          result = sub_1A558A160(v27, v28, 0, v24);
          v27 = result;
          v28 = v33;
          v29 = v34 & 1;
          --v19;
          v21 = v40;
          LODWORD(v22) = v44;
          v23 = v42;
          if (!v19)
          {
            sub_1A5529B00(result, v33, v29);
            goto LABEL_43;
          }
        }
        goto LABEL_64;
      }
      goto LABEL_60;
    }
LABEL_43:
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A68);
    sub_1A54E2E30(&qword_1EE795FB0, &qword_1EE799A68, MEMORY[0x1E0DEAF20]);
    v39 = sub_1A594B268();
    swift_bridgeObjectRelease();
    sub_1A5552DF4((uint64_t)&v65);
    sub_1A5552DF4((uint64_t)&v63);
    sub_1A54F81BC((uint64_t)&v62);
    return v39;
  }
  sub_1A590EC94(5, (uint64_t)&v51);
  v60 = v51;
  v61 = v52;
  v57 = v53;
  v58 = v54;
  v56 = v55;
  sub_1A5552E24((uint64_t)&v65);
  sub_1A5552E24((uint64_t)&v63);
  sub_1A54FCA28((uint64_t)&v62);
  sub_1A5910788();
  if (!v2)
  {
    sub_1A5552DF4((uint64_t)&v60);
    sub_1A5552DF4((uint64_t)&v57);
    sub_1A54F81BC((uint64_t)&v56);
    v9 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_39:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v35 = v9;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_58:
      v35 = sub_1A590F3C8(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v37 = *((_QWORD *)v35 + 2);
    v36 = *((_QWORD *)v35 + 3);
    if (v37 >= v36 >> 1)
      v35 = sub_1A590F3C8((char *)(v36 > 1), v37 + 1, 1, v35);
    *((_QWORD *)v35 + 2) = v37 + 1;
    v38 = &v35[16 * v37];
    *((_QWORD *)v38 + 4) = 10911970;
    *((_QWORD *)v38 + 5) = 0xA300000000000000;
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  v3 = v2;
  v45 = (char *)MEMORY[0x1E0DEE9D8];
  v4 = v2 & ~(v2 >> 63);
  v5 = *((_QWORD *)&v60 + 1);
  v6 = v60;
  v7 = v61;
  sub_1A55032A0((uint64_t)&v57, (uint64_t)v59, &qword_1EE796050);
  v8 = v56;
  sub_1A5923CD4(0, v4, 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v9 = v45;
    sub_1A5552DE8(v6, v5, v7);
    v10 = v6;
    v11 = v5;
    v12 = v7;
    v43 = v7;
    v41 = v5;
    while ((v12 & 1) == 0)
    {
      if ((v7 & 1) != 0)
        goto LABEL_62;
      if (v11 != (_DWORD)v5)
      {
        __break(1u);
        goto LABEL_45;
      }
      if (v10 < v6)
        goto LABEL_46;
      sub_1A55032A0((uint64_t)v59, (uint64_t)&v67, &qword_1EE796050);
      if ((v69 & 1) != 0)
        goto LABEL_63;
      if (v68 != (_DWORD)v5)
        goto LABEL_48;
      if (v10 >= v67)
        goto LABEL_50;
      if (v10 < 0 || v10 >= 1 << *(_BYTE *)(v8 + 32))
        goto LABEL_52;
      if (((*(_QWORD *)(v8 + 56 + (((unint64_t)v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_54;
      if (*(_DWORD *)(v8 + 36) != (_DWORD)v5)
        goto LABEL_56;
      String.init(_:)();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      v5 = *((_QWORD *)v45 + 2);
      v13 = *((_QWORD *)v45 + 3);
      if (v5 >= v13 >> 1)
        sub_1A5923CD4(v13 > 1, v5 + 1, 1);
      *((_QWORD *)v45 + 2) = v5 + 1;
      v14 = &v45[16 * v5];
      *((_QWORD *)v14 + 4) = 35;
      *((_QWORD *)v14 + 5) = 0xE100000000000000;
      v15 = sub_1A558A160(v10, v11, 0, v8);
      v10 = v15;
      v11 = v16;
      v12 = v17 & 1;
      --v3;
      LODWORD(v5) = v41;
      v7 = v43;
      if (!v3)
      {
        sub_1A5529B00(v15, v16, v12);
        sub_1A54F81BC((uint64_t)&v56);
        goto LABEL_39;
      }
    }
    goto LABEL_61;
  }
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

char *sub_1A590F3C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7962B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A590F4C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A590F4F8()
{
  uint64_t v0;

  swift_release();
  sub_1A552469C(*(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1A590F528()
{
  uint64_t v0;

  return sub_1A590CAD8(*(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_1A590F550()
{
  return type metadata accessor for Engine(0);
}

uint64_t type metadata accessor for Engine(uint64_t a1)
{
  return sub_1A55A1A0C(a1, qword_1EE798818);
}

uint64_t sub_1A590F56C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Engine.Logger(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ExternalState();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Engine.Logger(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594A764();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for Engine.Logger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for Engine.Logger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for Engine.Logger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for Engine.Logger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for Engine.Logger()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A590F890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594A764();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Engine.Logger()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A590F8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594A764();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1A590F918()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594A764();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A590F98C(unint64_t a1)
{
  uint64_t v1;

  return sub_1A590D2D8(a1, v1);
}

void sub_1A590F994(uint64_t a1)
{
  sub_1A59165B8(a1);
}

BOOL sub_1A590F9B4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ConnectionStatus(0);
  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2) != 1;
}

uint64_t sub_1A590F9F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE795DC0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A54E330C(a1, (uint64_t)v6, (uint64_t *)&unk_1EE795DC0);
  v7 = type metadata accessor for ConnectionStatus(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if ((_DWORD)result != 1)
    return sub_1A5910FA0((uint64_t)v6, a2);
  __break(1u);
  return result;
}

uint64_t sub_1A590FAA8(unint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_1A5816C08(a4, a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= result && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7] + 24 * v16;
        *(_DWORD *)v23 = a1;
        *(_BYTE *)(v23 + 4) = BYTE4(a1) & 1;
        *(_QWORD *)(v23 + 8) = a2;
        *(_BYTE *)(v23 + 16) = a3 & 1;
        return result;
      }
      goto LABEL_11;
    }
    if (v21 >= result && (a6 & 1) == 0)
    {
      result = (uint64_t)sub_1A5914E1C();
      goto LABEL_7;
    }
    sub_1A591473C(result, a6 & 1);
    result = sub_1A5816C08(a4, a5);
    if ((v20 & 1) == (v24 & 1))
    {
      v16 = result;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A590FC1C(v16, a4, a5, a1 | ((HIDWORD(a1) & 1) << 32), a2, a3 & 1, v22);
      return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
  }
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

unint64_t sub_1A590FC1C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, _QWORD *a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a7[6] + 16 * result);
  *v7 = a2;
  v7[1] = a3;
  v8 = a7[7] + 24 * result;
  *(_DWORD *)v8 = a4;
  *(_BYTE *)(v8 + 4) = BYTE4(a4) & 1;
  *(_QWORD *)(v8 + 8) = a5;
  *(_BYTE *)(v8 + 16) = a6 & 1;
  v9 = a7[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a7[2] = v11;
  return result;
}

uint64_t sub_1A590FC80(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(_QWORD, _QWORD, _QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  void (*v49)(_QWORD);
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(double);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t aBlock;
  unint64_t v93;
  uint64_t (*v94)(uint64_t);
  void *v95;
  uint64_t (*v96)();
  uint64_t v97;

  v89 = a5;
  v90 = a3;
  v79 = a4;
  v80 = a1;
  v81 = a2;
  v7 = sub_1A594AD34();
  v86 = *(_QWORD *)(v7 - 8);
  v87 = v7;
  MEMORY[0x1E0C80A78](v7);
  v85 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A594AD70();
  v83 = *(_QWORD *)(v9 - 8);
  v84 = v9;
  MEMORY[0x1E0C80A78](v9);
  v82 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1A594AD10();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v78 = (uint64_t *)((char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v77 = (uint64_t *)((char *)&v71 - v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A594A764();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v88 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v71 - v22;
  v74 = a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  v73 = *(void (**)(double))(v18 + 56);
  v73(v21);
  *(_BYTE *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_didTearDown) = 0;
  v24 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections) = MEMORY[0x1E0DEE9D8];
  v25 = a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engine;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engine + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_DWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_nextConnectionID) = 0;
  v26 = a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
  *(_QWORD *)v26 = 0;
  *(_QWORD *)(v26 + 8) = 0;
  *(_WORD *)(v26 + 16) = 1;
  v27 = a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoffLoggingRateLimit;
  *(_QWORD *)v27 = 0;
  *(_BYTE *)(v27 + 8) = 1;
  *(_QWORD *)(v27 + 16) = 1000000000;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_checkForStallTimer) = 0;
  v28 = a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_lastError;
  v29 = type metadata accessor for ConnectionStatus.Error(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  *(_BYTE *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connectionStateDidChange) = 0;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_stateCapture) = 0;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_enqueuedEvents) = 0;
  v30 = (unint64_t *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_pendingCancel);
  *v30 = sub_1A59285F0(v24);
  v30[1] = 0x4014000000000000;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_pendingCancelTimer) = 0;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_collectDataTransferTimer) = 0;
  v32 = v79;
  v31 = v80;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue) = v79;
  v33 = (_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logName);
  v34 = v81;
  *v33 = v31;
  v33[1] = v34;
  sub_1A55034B8(v90, a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_configuration, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionConfiguration);
  v35 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_tracingIDOwner;
  v36 = v89;
  v37 = *(_QWORD *)(v89 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_tracingIDOwner);
  v72 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_tracingIDOwner;
  *(_BYTE *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID) = *(_BYTE *)(v37 + 16);
  *(_QWORD *)(v25 + 8) = &off_1E4E7BB00;
  swift_unknownObjectWeakAssign();
  v38 = v32;
  sub_1A594A758();
  v80 = v18;
  v39 = *(void (**)(_QWORD, _QWORD, _QWORD))(v18 + 16);
  v39(v16, v23, v17);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v73)(v16, 0, 1, v17);
  v40 = v74;
  swift_beginAccess();
  sub_1A5911030((uint64_t)v16, v40);
  swift_endAccess();
  type metadata accessor for Timer();
  swift_allocObject();
  *(_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoffTimer) = Timer.init(queue:)((uint64_t)v38);
  LOBYTE(v40) = *(_BYTE *)(*(_QWORD *)(v36 + v35) + 16);
  v41 = (uint64_t)v88;
  v79 = v23;
  v81 = v17;
  v39(v88, v23, v17);
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 24) = &off_1E4E7BB00;
  swift_unknownObjectWeakInit();
  type metadata accessor for DataTransferReportAccumulator();
  swift_allocObject();
  v43 = v38;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_dataTransferReportAccumulator) = sub_1A5908084(v43, v40, v41, (uint64_t)sub_1A591109C, v42);
  aBlock = 0;
  v93 = 0xE000000000000000;
  sub_1A594C720();
  swift_bridgeObjectRelease();
  aBlock = 0x697463656E6E6F43;
  v93 = 0xEF2D6C6F6F506E6FLL;
  LOBYTE(v91) = *(_BYTE *)(*(_QWORD *)(v36 + v72) + 16);
  sub_1A5910EA4();
  sub_1A594B6DC();
  if (sub_1A594B5A4() <= 1)
    sub_1A594B5F8();
  type metadata accessor for StateCapture();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  v44 = aBlock;
  v45 = v93;
  v46 = swift_allocObject();
  swift_weakInit();
  v47 = v43;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_stateCapture) = StateCapture.__allocating_init(title:queue:capture:)(v44, v45, v47, (uint64_t)sub_1A59110A4, v46);
  swift_release();
  v48 = v77;
  *v77 = 2;
  LODWORD(v88) = *MEMORY[0x1E0DEF4A0];
  v49 = *(void (**)(_QWORD))(v75 + 104);
  v50 = v76;
  v49(v48);
  v51 = v78;
  *v78 = 100;
  LODWORD(v75) = *MEMORY[0x1E0DEF490];
  v49(v51);
  v52 = swift_allocObject();
  swift_weakInit();
  v96 = sub_1A59110AC;
  v97 = v52;
  aBlock = MEMORY[0x1E0C809B0];
  v93 = 1107296256;
  v94 = sub_1A587D408;
  v95 = &block_descriptor_46;
  v53 = _Block_copy(&aBlock);
  v74 = type metadata accessor for RestartableTimer();
  swift_allocObject();
  v54 = v47;
  swift_retain();
  v55 = RestartableTimer.init(queue:repeating:leeway:closure:)(v54, (uint64_t)v48, (uint64_t)v51, v53);
  swift_release();
  swift_release();
  *(_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_checkForStallTimer) = v55;
  swift_release();
  *v48 = 2;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v49)(v48, v88, v50);
  *v51 = 100;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v49)(v51, v75, v50);
  v56 = swift_allocObject();
  swift_weakInit();
  v96 = sub_1A59110B4;
  v97 = v56;
  aBlock = MEMORY[0x1E0C809B0];
  v93 = 1107296256;
  v94 = sub_1A587D408;
  v95 = &block_descriptor_50;
  v57 = _Block_copy(&aBlock);
  swift_allocObject();
  v58 = v54;
  swift_retain();
  v59 = RestartableTimer.init(queue:repeating:leeway:closure:)(v58, (uint64_t)v48, (uint64_t)v51, v57);
  swift_release();
  swift_release();
  *(_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_pendingCancelTimer) = v59;
  swift_release();
  *v48 = 10;
  v60 = v88;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v49)(v48, v88, v50);
  *v51 = 1;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v49)(v51, v60, v50);
  v61 = swift_allocObject();
  swift_weakInit();
  v96 = sub_1A59110BC;
  v97 = v61;
  aBlock = MEMORY[0x1E0C809B0];
  v93 = 1107296256;
  v94 = sub_1A587D408;
  v95 = &block_descriptor_54;
  v62 = _Block_copy(&aBlock);
  swift_allocObject();
  v63 = v58;
  swift_retain();
  v64 = RestartableTimer.init(queue:repeating:leeway:closure:)(v63, (uint64_t)v48, (uint64_t)v51, v62);
  swift_release();
  swift_release();
  *(_QWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_collectDataTransferTimer) = v64;
  swift_release();
  v65 = swift_allocObject();
  swift_weakInit();
  v96 = sub_1A59110C4;
  v97 = v65;
  aBlock = MEMORY[0x1E0C809B0];
  v93 = 1107296256;
  v94 = sub_1A587D408;
  v95 = &block_descriptor_58;
  v66 = _Block_copy(&aBlock);
  swift_retain();
  v67 = v82;
  sub_1A594AD4C();
  v91 = MEMORY[0x1E0DEE9D8];
  sub_1A55E1698((unint64_t *)&qword_1EE7A19E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A1A18);
  sub_1A54E2E30((unint64_t *)&qword_1EE7A40E0, (uint64_t *)&unk_1EE7A1A18, MEMORY[0x1E0DEAF38]);
  v68 = v85;
  v69 = v87;
  sub_1A594C5C4();
  MEMORY[0x1A85AE508](0, v67, v68, v66);
  _Block_release(v66);

  swift_release();
  sub_1A55034FC(v90, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionConfiguration);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v68, v69);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v67, v84);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);
  swift_release();
  swift_release();
  return a6;
}

void sub_1A5910788()
{
  __int128 *v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  __int128 v10;
  char v11;
  __int128 v12;
  char v13;

  v12 = *(__int128 *)((char *)v0 + 24);
  v13 = *((_BYTE *)v0 + 40);
  if ((v13 & 1) != 0)
  {
LABEL_17:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_18;
  }
  v10 = *v0;
  v11 = *((_BYTE *)v0 + 16);
  if ((v11 & 1) == 0)
  {
    v1 = v10;
    if ((uint64_t)v12 >= (uint64_t)v10)
    {
      v2 = *((_QWORD *)&v10 + 1);
      if (DWORD2(v12) != DWORD2(v10))
        goto LABEL_15;
      if ((_QWORD)v10 == (_QWORD)v12)
        return;
      v3 = 0;
      v4 = *((_QWORD *)v0 + 6);
      while (!__OFADD__(v3, 1))
      {
        v5 = sub_1A558A160(v1, v2, 0, v4);
        v7 = v6;
        v9 = v8;
        sub_1A5529B00(v1, v2, 0);
        if ((v9 & 1) != 0)
          goto LABEL_16;
        if ((_DWORD)v7 != DWORD2(v12))
          goto LABEL_13;
        ++v3;
        v1 = v5;
        v2 = v7;
        if (v5 == (_QWORD)v12)
        {
          sub_1A5552DF4((uint64_t)&v12);
          sub_1A5552DF4((uint64_t)&v10);
          return;
        }
      }
      __break(1u);
LABEL_13:
      __break(1u);
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_1A59108BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  int v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = sub_1A558A0BC(a2);
  if ((v8 & 1) != 0)
    goto LABEL_17;
  v9 = *(_DWORD *)(a2 + 36);
  if (v9 != v7)
  {
    __break(1u);
    goto LABEL_12;
  }
  v10 = 1 << *(_BYTE *)(a2 + 32);
  if (v10 < result)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = *(_QWORD *)(a1 + 8);
  if (v9 != (_DWORD)v11)
    goto LABEL_13;
  if (*(_QWORD *)a1 < result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((*(_BYTE *)(a1 + 40) & 1) == 0)
  {
    v12 = *(_QWORD *)(a1 + 32);
    if (v9 == (_DWORD)v12)
    {
      v13 = *(_QWORD *)(a1 + 24);
      if (v10 >= v13)
      {
        *(_QWORD *)a3 = *(_QWORD *)a1;
        *(_QWORD *)(a3 + 8) = v11;
        *(_BYTE *)(a3 + 16) = 0;
        *(_QWORD *)(a3 + 24) = v13;
        *(_QWORD *)(a3 + 32) = v12;
        *(_BYTE *)(a3 + 40) = 0;
        *(_QWORD *)(a3 + 48) = a2;
        return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      goto LABEL_16;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1A5910990(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1A594B5C8();
    return sub_1A594B718();
  }
  return result;
}

uint64_t sub_1A5910A18@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  _OWORD v18[3];
  uint64_t v19;
  _QWORD v20[2];
  char v21;
  int64_t v22;
  uint64_t v23;
  char v24;

  if (result < 0)
  {
LABEL_16:
    __break(1u);
  }
  else
  {
    v4 = result;
    result = sub_1A558A0BC(a2);
    v6 = result;
    v8 = v7;
    v10 = v9 & 1;
    if (v4)
    {
      v11 = *(unsigned int *)(a2 + 36);
      v12 = 1 << *(_BYTE *)(a2 + 32);
      while ((v10 & 1) == 0)
      {
        if ((_DWORD)v11 != (_DWORD)v8)
        {
          __break(1u);
          goto LABEL_16;
        }
        if (v6 == v12)
        {
          v10 = 0;
          v6 = v12;
          v8 = v11;
          goto LABEL_10;
        }
        result = sub_1A558A160(v6, v8, 0, a2);
        v6 = result;
        v8 = v13;
        v10 = v14 & 1;
        if (!--v4)
          goto LABEL_10;
      }
      goto LABEL_19;
    }
LABEL_10:
    result = sub_1A558A0BC(a2);
    if ((v10 & 1) != 0 || (v16 & 1) != 0)
      goto LABEL_20;
    if ((_DWORD)v8 == (_DWORD)v15)
    {
      if (v6 >= result)
      {
        v20[0] = result;
        v20[1] = v15;
        v21 = 0;
        v22 = v6;
        v23 = v8;
        v24 = 0;
        result = sub_1A59108BC((uint64_t)v20, a2, (uint64_t)v18);
        v17 = v18[1];
        *(_OWORD *)a3 = v18[0];
        *(_OWORD *)(a3 + 16) = v17;
        *(_OWORD *)(a3 + 32) = v18[2];
        *(_QWORD *)(a3 + 48) = v19;
        return result;
      }
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

int64_t sub_1A5910B48(int64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  char v12;
  int64_t v16;
  int v17;
  int v18;
  char v19;

  if (a4 < 0)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  v8 = a4;
  v11 = result;
  v12 = a3 & 1;
  if (a4)
  {
    if ((a7 & 1) == 0)
    {
      v16 = result;
      v17 = a2;
      while ((v12 & 1) == 0)
      {
        if (v17 != a6)
        {
          __break(1u);
          goto LABEL_14;
        }
        if (v16 == a5)
        {
          v16 = 0;
          goto LABEL_12;
        }
        result = sub_1A558A160(v16, v17, 0, a8);
        v16 = result;
        v17 = v18;
        v12 = v19 & 1;
        if (!--v8)
          goto LABEL_12;
      }
    }
    goto LABEL_15;
  }
  v16 = result;
LABEL_12:
  sub_1A5552DE8(v11, a2, a3 & 1);
  return v16;
}

uint64_t sub_1A5910C34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  int v18;

  v5 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11 = 0;
  while (v8)
  {
    v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v13 = v12 | (v11 << 6);
LABEL_5:
    v18 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * v13);
    result = sub_1A590E2A8(&v18, a2);
    if (v2)
      return swift_release();
  }
  if (__OFADD__(v11++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 >= v9)
    return swift_release();
  v15 = *(_QWORD *)(v5 + 8 * v11);
  if (v15)
  {
LABEL_17:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_5;
  }
  v16 = v11 + 1;
  if (v11 + 1 >= v9)
    return swift_release();
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 2;
  if (v11 + 2 >= v9)
    return swift_release();
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 3;
  if (v11 + 3 >= v9)
    return swift_release();
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
LABEL_16:
    v11 = v16;
    goto LABEL_17;
  }
  v17 = v11 + 4;
  if (v11 + 4 >= v9)
    return swift_release();
  v15 = *(_QWORD *)(v5 + 8 * v17);
  v11 += 4;
  if (v15)
    goto LABEL_17;
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v9)
      return swift_release();
    v15 = *(_QWORD *)(v5 + 8 * v11);
    ++v17;
    if (v15)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A5910DA4()
{
  uint64_t v0;

  sub_1A5910DD8(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1A5910DD8(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A5910E08(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A5910E38()
{
  uint64_t v0;

  sub_1A552469C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  return swift_deallocObject();
}

unint64_t sub_1A5910E60()
{
  unint64_t result;

  result = qword_1EE7A4770;
  if (!qword_1EE7A4770)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE7A4770);
  }
  return result;
}

uint64_t sub_1A5910E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A590A33C(a1, a2, v2);
}

unint64_t sub_1A5910EA4()
{
  unint64_t result;

  result = qword_1EE79B478;
  if (!qword_1EE79B478)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEDEA0], MEMORY[0x1E0DEDE70]);
    atomic_store(result, (unint64_t *)&qword_1EE79B478);
  }
  return result;
}

uint64_t sub_1A5910EE8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A5910F0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1A590A668(a1);
}

uint64_t sub_1A5910F14@<X0>(uint64_t a1@<X8>)
{
  return sub_1A590A804(a1);
}

uint64_t sub_1A5910F1C@<X0>(uint64_t a1@<X8>)
{
  return sub_1A590AA84(a1);
}

uint64_t sub_1A5910F24@<X0>(uint64_t a1@<X8>)
{
  return sub_1A590ABD8(a1);
}

uint64_t sub_1A5910F2C()
{
  uint64_t v0;

  return sub_1A589145C(v0, (void (*)(void))sub_1A590AD5C);
}

uint64_t sub_1A5910F4C()
{
  uint64_t v0;

  return sub_1A589145C(v0, (void (*)(void))sub_1A590B07C);
}

uint64_t sub_1A5910F6C()
{
  return sub_1A590B1B0();
}

uint64_t sub_1A5910F74()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5910F98()
{
  uint64_t v0;

  return sub_1A590DBB8(v0);
}

uint64_t sub_1A5910FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConnectionStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5910FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConnectionStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1A5911028(_QWORD *a1)
{
  sub_1A591C0FC(a1);
}

uint64_t sub_1A5911030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5911078()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A591109C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5916FC0(a1, a2, v2);
}

double sub_1A59110A4@<D0>(uint64_t a1@<X8>)
{
  return sub_1A591705C(a1);
}

uint64_t sub_1A59110AC()
{
  uint64_t v0;

  return sub_1A5917588(v0);
}

uint64_t sub_1A59110B4()
{
  uint64_t v0;

  return sub_1A5917710(v0);
}

uint64_t sub_1A59110BC()
{
  uint64_t v0;

  return sub_1A59178F8(v0);
}

uint64_t sub_1A59110C4()
{
  return sub_1A5917AF4();
}

uint64_t *sub_1A5911118(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(_BYTE *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Activity(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795DE0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v39 = v7;
      v40 = v8;
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = *(int *)(v7 + 24);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for ConnectionStatus.Error(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v17(v14, 1, v15))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798568);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        v19 = v39;
        v20 = v40;
      }
      else
      {
        v37 = v16;
        v38 = v13;
        *v13 = *v14;
        v21 = v15;
        v22 = *(int *)(v15 + 20);
        v23 = &v13[v22];
        v36 = v14;
        v24 = &v14[v22];
        v25 = type metadata accessor for ConnectionStatus.Error.Details(0);
        if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25))
        {
          v28 = (char *)&loc_1A59112E4 + 4 * byte_1A59E1210[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v26 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798520);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        v19 = v39;
        v27 = v21;
        v20 = v40;
        v29 = *(int *)(v21 + 24);
        v30 = &v38[v29];
        v31 = &v36[v29];
        v32 = sub_1A594A0EC();
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          v34 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796498);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v33 + 16))(v30, v31, v32);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v27);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

uint64_t sub_1A591144C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = type metadata accessor for Activity(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(v2 + 24);
    v4 = type metadata accessor for ConnectionStatus.Error(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
    {
      v5 = v3 + *(int *)(v4 + 20);
      v6 = type metadata accessor for ConnectionStatus.Error.Details(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v7 = sub_1A594ACEC();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
            break;
          case 1u:
            swift_bridgeObjectRelease();
            goto LABEL_7;
          case 2u:
          case 3u:
LABEL_7:
            swift_bridgeObjectRelease();
            break;
          default:
            break;
        }
      }
      v8 = v3 + *(int *)(v4 + 24);
      v9 = sub_1A594A0EC();
      v10 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1A59115C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;

  v6 = type metadata accessor for Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795DE0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v34 = v7;
    v35 = a3;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = *(int *)(v6 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for ConnectionStatus.Error(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798568);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      v17 = v34;
      a3 = v35;
    }
    else
    {
      v32 = v14;
      v33 = v11;
      *v11 = *v12;
      v18 = *(int *)(v13 + 20);
      v19 = &v11[v18];
      v20 = v12;
      v21 = &v12[v18];
      v22 = type metadata accessor for ConnectionStatus.Error.Details(0);
      if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
      {
        v24 = (char *)&loc_1A5911754 + 4 * byte_1A59E1218[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v23 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798520);
      memcpy(v19, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      v17 = v34;
      v25 = *(int *)(v13 + 24);
      v26 = &v11[v25];
      v27 = &v20[v25];
      v28 = sub_1A594A0EC();
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796498);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      a3 = v35;
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v33, 0, 1, v13);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v6);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *sub_1A59118C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_BYTE *, uint64_t, uint64_t);
  uint64_t v17;
  size_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_BYTE *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t (*v49)(_BYTE *, uint64_t, uint64_t);
  void *v50;
  int v51;
  char *v52;
  char *v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(_BYTE *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v6 = type metadata accessor for Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v80 = a2;
      v81 = a3;
      *a1 = *a2;
      a1[1] = a2[1];
      v11 = *(int *)(v6 + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for ConnectionStatus.Error(0);
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v16(v13, 1, v14))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798568);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        a2 = v80;
      }
      else
      {
        v79 = v15;
        *v12 = *v13;
        v34 = v14;
        v35 = *(int *)(v14 + 20);
        v36 = &v12[v35];
        v37 = v13;
        v38 = &v13[v35];
        v39 = type metadata accessor for ConnectionStatus.Error.Details(0);
        if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v38, 1, v39))
        {
          v44 = (char *)&loc_1A5911BB4 + 4 * byte_1A59E121C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v40 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798520);
        memcpy(v36, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        v41 = v34;
        a2 = v80;
        v42 = v12;
        v43 = v41;
        v54 = *(int *)(v41 + 24);
        v55 = &v42[v54];
        v56 = &v37[v54];
        v57 = sub_1A594A0EC();
        v58 = *(_QWORD *)(v57 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
        {
          v60 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796498);
          memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v58 + 16))(v55, v56, v57);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
        }
        a3 = v81;
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v42, 0, 1, v43);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_28;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for Activity);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795DE0) - 8) + 64);
    v19 = a1;
    v20 = a2;
LABEL_8:
    memcpy(v19, v20, v18);
    goto LABEL_28;
  }
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v21 = *(int *)(v6 + 24);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for ConnectionStatus.Error(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (v28)
    {
      sub_1A55034FC((uint64_t)v22, type metadata accessor for ConnectionStatus.Error);
      goto LABEL_17;
    }
    v83 = a3;
    *v22 = *v23;
    v45 = *(int *)(v24 + 20);
    v46 = &v22[v45];
    v47 = &v23[v45];
    v48 = type metadata accessor for ConnectionStatus.Error.Details(0);
    v49 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48);
    v50 = v46;
    LODWORD(v46) = v49(v46, 1, v48);
    v51 = v49(v47, 1, v48);
    if ((_DWORD)v46)
    {
      if (!v51)
      {
        v52 = (char *)&loc_1A5911C58 + 4 * byte_1A59E1224[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v51)
      {
        if (a1 != a2)
        {
          sub_1A55034FC((uint64_t)v50, type metadata accessor for ConnectionStatus.Error.Details);
          v70 = (char *)&loc_1A5911FD8 + 4 * byte_1A59E1228[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_38;
      }
      sub_1A55034FC((uint64_t)v50, type metadata accessor for ConnectionStatus.Error.Details);
    }
    v62 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798520);
    memcpy(v50, v47, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
LABEL_38:
    v71 = *(int *)(v24 + 24);
    v72 = &v22[v71];
    v73 = &v23[v71];
    v74 = sub_1A594A0EC();
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v75 + 48);
    v77 = v76(v72, 1, v74);
    v78 = v76(v73, 1, v74);
    if (v77)
    {
      a3 = v83;
      if (!v78)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v75 + 16))(v72, v73, v74);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
        goto LABEL_28;
      }
    }
    else
    {
      a3 = v83;
      if (!v78)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v75 + 24))(v72, v73, v74);
        goto LABEL_28;
      }
      (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v72, v74);
    }
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796498) - 8) + 64);
    v19 = v72;
    v20 = v73;
    goto LABEL_8;
  }
  if (v28)
  {
LABEL_17:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798568) - 8) + 64);
    v19 = v22;
    v20 = v23;
    goto LABEL_8;
  }
  v82 = a3;
  *v22 = *v23;
  v29 = *(int *)(v24 + 20);
  v30 = &v22[v29];
  v31 = &v23[v29];
  v32 = type metadata accessor for ConnectionStatus.Error.Details(0);
  if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32))
  {
    v53 = (char *)&loc_1A5911C98 + 4 * byte_1A59E1220[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v33 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798520);
  memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  v63 = *(int *)(v24 + 24);
  v64 = &v22[v63];
  v65 = &v23[v63];
  v66 = sub_1A594A0EC();
  v67 = *(_QWORD *)(v66 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796498);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v67 + 16))(v64, v65, v66);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
  }
  a3 = v82;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_28:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1A5912154()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  v0[2] = v1[2];
  v0[3] = v1[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1A5912088);
}

void sub_1A5912194()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1A5912088);
}

void sub_1A59121BC()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1A5912088);
}

_OWORD *sub_1A59121E4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const void *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *__dst;
  _BYTE *__dsta;

  v6 = type metadata accessor for Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795DE0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v9 = *(int *)(v6 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for ConnectionStatus.Error(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798568);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v29 = v10;
      v30 = v13;
      *v10 = *v11;
      v15 = *(int *)(v12 + 20);
      __dst = &v10[v15];
      v16 = &v11[v15];
      v17 = type metadata accessor for ConnectionStatus.Error.Details(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798520);
        memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          v20 = v16;
          v21 = __dst;
          memcpy(__dst, v20, *(_QWORD *)(v18 + 64));
        }
        else
        {
          v22 = sub_1A594ACEC();
          v21 = __dst;
          (*(void (**)(void))(*(_QWORD *)(v22 - 8) + 32))();
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
      }
      v23 = *(int *)(v12 + 24);
      __dsta = &v29[v23];
      v24 = &v11[v23];
      v25 = sub_1A594A0EC();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796498);
        memcpy(__dsta, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v26 + 32))(__dsta, v24, v25);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dsta, 0, 1, v25);
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v29, 0, 1, v12);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_1A5912494(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_BYTE *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const void *v39;
  _BYTE *v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t (*v45)(_BYTE *, uint64_t, uint64_t);
  void *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(_BYTE *, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;
  _BYTE *__dst;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v6 = type metadata accessor for Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1A55034FC((uint64_t)a1, type metadata accessor for Activity);
      goto LABEL_7;
    }
    *a1 = *a2;
    swift_bridgeObjectRelease();
    a1[1] = a2[1];
    swift_bridgeObjectRelease();
    v20 = *(int *)(v6 + 24);
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = type metadata accessor for ConnectionStatus.Error(0);
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v24 + 48);
    v26 = v25(v21, 1, v23);
    v27 = v25(v22, 1, v23);
    if (v26)
    {
      if (!v27)
      {
        v78 = a3;
        *v21 = *v22;
        v28 = *(int *)(v23 + 20);
        v29 = &v21[v28];
        v30 = &v22[v28];
        v31 = type metadata accessor for ConnectionStatus.Error.Details(0);
        v32 = *(_QWORD *)(v31 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        {
          v33 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798520);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v29, v30, *(_QWORD *)(v32 + 64));
          }
          else
          {
            v58 = sub_1A594ACEC();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v29, v30, v58);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        }
        a3 = v78;
        v59 = *(int *)(v23 + 24);
        v60 = &v21[v59];
        v61 = &v22[v59];
        v62 = sub_1A594A0EC();
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796498);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v63 + 32))(v60, v61, v62);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
        }
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        goto LABEL_33;
      }
      goto LABEL_17;
    }
    if (v27)
    {
      sub_1A55034FC((uint64_t)v21, type metadata accessor for ConnectionStatus.Error);
LABEL_17:
      v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798568) - 8) + 64);
      v18 = v21;
      v19 = v22;
      goto LABEL_8;
    }
    v80 = a3;
    *v21 = *v22;
    v41 = *(int *)(v23 + 20);
    v42 = &v21[v41];
    v43 = &v22[v41];
    v44 = type metadata accessor for ConnectionStatus.Error.Details(0);
    v77 = *(_QWORD *)(v44 - 8);
    v45 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v77 + 48);
    v46 = v42;
    LODWORD(v42) = v45(v42, 1, v44);
    v47 = v45(v43, 1, v44);
    if ((_DWORD)v42)
    {
      if (!v47)
      {
        if (swift_getEnumCaseMultiPayload())
        {
          v48 = v77;
          memcpy(v46, v43, *(_QWORD *)(v77 + 64));
        }
        else
        {
          v65 = sub_1A594ACEC();
          (*(void (**)(void *, _BYTE *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v46, v43, v65);
          swift_storeEnumTagMultiPayload();
          v48 = v77;
        }
        a3 = v80;
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v46, 0, 1, v44);
        goto LABEL_48;
      }
    }
    else
    {
      if (!v47)
      {
        a3 = v80;
        if (a1 != a2)
        {
          sub_1A55034FC((uint64_t)v46, type metadata accessor for ConnectionStatus.Error.Details);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v46, v43, *(_QWORD *)(v77 + 64));
          }
          else
          {
            v74 = sub_1A594ACEC();
            (*(void (**)(void *, _BYTE *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v46, v43, v74);
            swift_storeEnumTagMultiPayload();
          }
        }
        goto LABEL_48;
      }
      sub_1A55034FC((uint64_t)v46, type metadata accessor for ConnectionStatus.Error.Details);
    }
    v57 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798520);
    memcpy(v46, v43, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    a3 = v80;
LABEL_48:
    v66 = *(int *)(v23 + 24);
    v67 = &v21[v66];
    v68 = &v22[v66];
    v69 = sub_1A594A0EC();
    v70 = *(_QWORD *)(v69 - 8);
    v71 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v70 + 48);
    v72 = v71(v67, 1, v69);
    v73 = v71(v68, 1, v69);
    if (v72)
    {
      if (!v73)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v70 + 32))(v67, v68, v69);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
        goto LABEL_33;
      }
    }
    else
    {
      if (!v73)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v70 + 40))(v67, v68, v69);
        goto LABEL_33;
      }
      (*(void (**)(_BYTE *, uint64_t))(v70 + 8))(v67, v69);
    }
    v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796498) - 8) + 64);
    v18 = v67;
    v19 = v68;
    goto LABEL_8;
  }
  if (v10)
  {
LABEL_7:
    v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795DE0) - 8) + 64);
    v18 = a1;
    v19 = a2;
LABEL_8:
    memcpy(v18, v19, v17);
    goto LABEL_33;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v11 = *(int *)(v6 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for ConnectionStatus.Error(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798568);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v76 = v15;
    v79 = a3;
    *v12 = *v13;
    v34 = *(int *)(v14 + 20);
    __dst = &v12[v34];
    v35 = &v13[v34];
    v36 = type metadata accessor for ConnectionStatus.Error.Details(0);
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798520);
      memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        v39 = v35;
        v40 = __dst;
        memcpy(__dst, v39, *(_QWORD *)(v37 + 64));
      }
      else
      {
        v49 = sub_1A594ACEC();
        v40 = __dst;
        (*(void (**)(void))(*(_QWORD *)(v49 - 8) + 32))();
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v40, 0, 1, v36);
    }
    v50 = *(int *)(v14 + 24);
    v51 = &v12[v50];
    v52 = &v13[v50];
    v53 = sub_1A594A0EC();
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796498);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v54 + 32))(v51, v52, v53);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    a3 = v79;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v12, 0, 1, v14);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_33:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A5912BCC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5912BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795DE0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1A5912C58()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5912C64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795DE0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ExternalState()
{
  uint64_t result;

  result = qword_1EE7987C8;
  if (!qword_1EE7987C8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A5912D1C()
{
  unint64_t v0;

  sub_1A5912D90();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1A5912D90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE798658)
  {
    type metadata accessor for Activity(255);
    v0 = sub_1A594C354();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE798658);
  }
}

_QWORD *sub_1A5912DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v41 = a2;
  v5 = type metadata accessor for Activity(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798668);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795DE0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v39 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v39 - v19;
  v40 = a1;
  sub_1A591327C(a1, (uint64_t)&v39 - v19);
  v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56);
  v21(v20, 0, 1, v5);
  sub_1A59132C0(v3, (uint64_t)v17);
  v22 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1A59132C0((uint64_t)v20, (uint64_t)v11);
  sub_1A59132C0((uint64_t)v17, v22);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v23((uint64_t)v11, 1, v5) == 1)
  {
    sub_1A5510284((uint64_t)v17, &qword_1EE795DE0);
    sub_1A5510284((uint64_t)v20, &qword_1EE795DE0);
    if (v23(v22, 1, v5) == 1)
    {
      sub_1A5510284((uint64_t)v11, &qword_1EE795DE0);
      v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v25 = v41;
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  sub_1A59132C0((uint64_t)v11, (uint64_t)v14);
  if (v23(v22, 1, v5) == 1)
  {
    sub_1A5510284((uint64_t)v17, &qword_1EE795DE0);
    sub_1A5510284((uint64_t)v20, &qword_1EE795DE0);
    sub_1A55034FC((uint64_t)v14, type metadata accessor for Activity);
LABEL_6:
    sub_1A5510284((uint64_t)v11, &qword_1EE798668);
    v25 = v41;
    goto LABEL_7;
  }
  sub_1A591391C(v22, (uint64_t)v8);
  v38 = static Activity.__derived_struct_equals(_:_:)(v14, v8);
  sub_1A55034FC((uint64_t)v8, type metadata accessor for Activity);
  sub_1A5510284((uint64_t)v17, &qword_1EE795DE0);
  sub_1A5510284((uint64_t)v20, &qword_1EE795DE0);
  sub_1A55034FC((uint64_t)v14, type metadata accessor for Activity);
  sub_1A5510284((uint64_t)v11, &qword_1EE795DE0);
  v25 = v41;
  if ((v38 & 1) != 0)
  {
    v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_10;
  }
LABEL_7:
  sub_1A5510284(v3, &qword_1EE795DE0);
  v26 = v40;
  sub_1A591327C(v40, v3);
  v21((char *)v3, 0, 1, v5);
  v27 = swift_allocBox();
  sub_1A591327C(v26, v28);
  v24 = sub_1A5923824(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v30 = v24[2];
  v29 = v24[3];
  if (v30 >= v29 >> 1)
    v24 = sub_1A5923824((_QWORD *)(v29 > 1), v30 + 1, 1, v24);
  v24[2] = v30 + 1;
  v24[v30 + 4] = v27 | 0x8000000000000004;
LABEL_10:
  v31 = *(int *)(type metadata accessor for ExternalState() + 20);
  v32 = *(_QWORD *)(v3 + v31);
  if (*(_QWORD *)(v25 + 16) <= *(_QWORD *)(v32 + 16) >> 3)
  {
    v42 = *(_QWORD *)(v3 + v31);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5913308(v25);
    v33 = v42;
    if (*(_QWORD *)(v42 + 16))
      goto LABEL_12;
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v33 = sub_1A59134C0(v25, v32);
  if (!*(_QWORD *)(v33 + 16))
    goto LABEL_18;
LABEL_12:
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v33;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v24 = sub_1A5923824(0, v24[2] + 1, 1, v24);
  v36 = v24[2];
  v35 = v24[3];
  if (v36 >= v35 >> 1)
    v24 = sub_1A5923824((_QWORD *)(v35 > 1), v36 + 1, 1, v24);
  v24[2] = v36 + 1;
  v24[v36 + 4] = v34 | 6;
LABEL_19:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + v31) = v25;
  return v24;
}

uint64_t sub_1A591327C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Activity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A59132C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5913308(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v8;
    if (!v14)
    {
      v8 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v8);
      if (!v14)
      {
        v8 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v8);
        if (!v14)
        {
          v8 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v8);
          if (!v14)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_6:
    v11 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 16 * v10 + 8);
    v12 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5913960(v12, v11);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v8 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v8);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A591349C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A59134C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t isStackAllocationSafe;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  unsigned __int8 *v31;
  uint64_t v32;
  unsigned __int8 *v33;
  int v34;
  int v35;
  int v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  uint64_t v43;
  int64_t v44;
  _QWORD v45[6];

  v2 = a2;
  v45[5] = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v5 = a1 + 56;
    v4 = *(_QWORD *)(a1 + 56);
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v43 = ~v6;
    if (-v6 < 64)
      v7 = ~(-1 << -(char)v6);
    else
      v7 = -1;
    v8 = v7 & v4;
    v44 = (unint64_t)(63 - v6) >> 6;
    v9 = a2 + 56;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v10 = 0;
    do
    {
LABEL_6:
      if (v8)
      {
        v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v12 = v11 | (v10 << 6);
      }
      else
      {
        v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          goto LABEL_51;
        }
        if (v13 >= v44)
          goto LABEL_49;
        v14 = *(_QWORD *)(v5 + 8 * v13);
        v15 = v10 + 1;
        if (!v14)
        {
          v15 = v10 + 2;
          if (v10 + 2 >= v44)
            goto LABEL_49;
          v14 = *(_QWORD *)(v5 + 8 * v15);
          if (!v14)
          {
            v15 = v10 + 3;
            if (v10 + 3 >= v44)
              goto LABEL_49;
            v14 = *(_QWORD *)(v5 + 8 * v15);
            if (!v14)
            {
              v15 = v10 + 4;
              if (v10 + 4 >= v44)
                goto LABEL_49;
              v14 = *(_QWORD *)(v5 + 8 * v15);
              if (!v14)
              {
                v16 = v10 + 5;
                if (v10 + 5 >= v44)
                {
LABEL_49:
                  sub_1A550F72C();
                  return v2;
                }
                v14 = *(_QWORD *)(v5 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    v15 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      break;
                    if (v15 >= v44)
                      goto LABEL_49;
                    v14 = *(_QWORD *)(v5 + 8 * v15);
                    ++v16;
                    if (v14)
                      goto LABEL_23;
                  }
LABEL_51:
                  __break(1u);
                }
                v15 = v10 + 5;
              }
            }
          }
        }
LABEL_23:
        v8 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v15 << 6);
        v10 = v15;
      }
      v17 = *(_QWORD *)(a1 + 48) + 16 * v12;
      v18 = *(_QWORD *)v17;
      v19 = *(unsigned int *)(v17 + 8);
      sub_1A594CE64();
      v20 = v19 | (v19 << 32);
      sub_1A594CE88();
      isStackAllocationSafe = sub_1A594CED0();
      v22 = *(_BYTE *)(v2 + 32);
      v23 = -1 << v22;
      v24 = isStackAllocationSafe & ~(-1 << v22);
    }
    while (((*(_QWORD *)(v9 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0);
    v25 = v22 & 0x3F;
    v26 = ~v23;
    while (1)
    {
      v27 = *(_QWORD *)(v2 + 48) + 16 * v24;
      if ((*(unsigned int *)(v27 + 8) | ((unint64_t)*(unsigned int *)(v27 + 8) << 32)) == v20)
      {
        v28 = *(_QWORD *)v27;
        v29 = *(_QWORD *)(v28 + 16);
        if (v29 == *(_QWORD *)(v18 + 16))
        {
          if (v29)
            v30 = v28 == v18;
          else
            v30 = 1;
          if (v30)
            goto LABEL_42;
          if (*(unsigned __int8 *)(v28 + 32) == *(unsigned __int8 *)(v18 + 32))
          {
            if (v29 == 1)
              goto LABEL_42;
            if (*(unsigned __int8 *)(v28 + 33) == *(unsigned __int8 *)(v18 + 33))
            {
              if (v29 == 2)
                goto LABEL_42;
              if (*(unsigned __int8 *)(v28 + 34) == *(unsigned __int8 *)(v18 + 34))
                break;
            }
          }
        }
      }
LABEL_26:
      v24 = (v24 + 1) & v26;
      if (((*(_QWORD *)(v9 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
        goto LABEL_6;
    }
    v31 = (unsigned __int8 *)(v28 + 35);
    v32 = v29 - 3;
    v33 = (unsigned __int8 *)(v18 + 35);
    while (v32)
    {
      v35 = *v31++;
      v34 = v35;
      v36 = *v33++;
      --v32;
      if (v34 != v36)
        goto LABEL_26;
    }
LABEL_42:
    v45[0] = a1;
    v45[1] = v5;
    v45[2] = v43;
    v45[3] = v10;
    v45[4] = v8;
    v37 = (unint64_t)((1 << v25) + 63) >> 6;
    if (v25 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      v39 = (char *)&v43 - v38;
      memcpy((char *)&v43 - v38, (const void *)(v2 + 56), 8 * v37);
      v40 = sub_1A5913B28((uint64_t)v39, v37, v2, v24, v45);
      swift_release();
      sub_1A550F72C();
    }
    else
    {
      v41 = (void *)swift_slowAlloc();
      memcpy(v41, (const void *)(v2 + 56), 8 * v37);
      v40 = sub_1A5913B28((uint64_t)v41, v37, v2, v24, v45);
      swift_release();
      sub_1A550F72C();
      MEMORY[0x1A85B1964](v41, -1, -1);
    }
    return v40;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1A591391C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Activity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5913960(uint64_t a1, unsigned int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unsigned __int8 *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v25;

  v3 = v2;
  v6 = *v3;
  sub_1A594CE64();
  sub_1A594CE88();
  v7 = sub_1A594CED0();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    return 0;
  v10 = ~v8;
  while (1)
  {
    v11 = *(_QWORD *)(v6 + 48) + 16 * v9;
    if ((*(unsigned int *)(v11 + 8) | ((unint64_t)*(unsigned int *)(v11 + 8) << 32)) == (a2 | ((unint64_t)a2 << 32)))
    {
      v12 = *(_QWORD *)v11;
      v13 = *(_QWORD *)(v12 + 16);
      if (v13 == *(_QWORD *)(a1 + 16))
      {
        if (v13)
          v14 = v12 == a1;
        else
          v14 = 1;
        if (v14)
          goto LABEL_20;
        if (*(unsigned __int8 *)(v12 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v13 == 1)
            goto LABEL_20;
          if (*(unsigned __int8 *)(v12 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v13 == 2)
              goto LABEL_20;
            if (*(unsigned __int8 *)(v12 + 34) == *(unsigned __int8 *)(a1 + 34))
              break;
          }
        }
      }
    }
LABEL_3:
    v9 = (v9 + 1) & v10;
    if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      return 0;
  }
  v15 = (unsigned __int8 *)(v12 + 35);
  v16 = v13 - 3;
  v17 = (unsigned __int8 *)(a1 + 35);
  while (v16)
  {
    v19 = *v15++;
    v18 = v19;
    v20 = *v17++;
    --v16;
    if (v18 != v20)
      goto LABEL_3;
  }
LABEL_20:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v3;
  v25 = *v3;
  *v3 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1A5924758();
    v23 = v25;
  }
  v21 = *(_QWORD *)(*(_QWORD *)(v23 + 48) + 16 * v9);
  sub_1A554D288(v9);
  *v3 = v25;
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1A5913B28(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned __int8 *v36;
  int v37;
  int v38;
  int v39;
  uint64_t v41;

  v7 = (unint64_t *)result;
  v8 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v9 = v8 - 1;
  v10 = a3 + 56;
  while (2)
  {
    v41 = v9;
    while (1)
    {
LABEL_4:
      v14 = a5[3];
      v15 = a5[4];
      if (v15)
      {
        v16 = (v15 - 1) & v15;
        v17 = __clz(__rbit64(v15)) | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
          goto LABEL_45;
        }
        v19 = (unint64_t)(a5[2] + 64) >> 6;
        v20 = a5[3];
        if (v18 >= v19)
          goto LABEL_43;
        v21 = a5[1];
        v22 = *(_QWORD *)(v21 + 8 * v18);
        if (!v22)
        {
          v20 = v14 + 1;
          if (v14 + 2 >= v19)
            goto LABEL_43;
          v22 = *(_QWORD *)(v21 + 8 * (v14 + 2));
          if (v22)
          {
            v18 = v14 + 2;
          }
          else
          {
            v20 = v14 + 2;
            if (v14 + 3 >= v19)
              goto LABEL_43;
            v22 = *(_QWORD *)(v21 + 8 * (v14 + 3));
            if (v22)
            {
              v18 = v14 + 3;
            }
            else
            {
              v18 = v14 + 4;
              v20 = v14 + 3;
              if (v14 + 4 >= v19)
                goto LABEL_43;
              v22 = *(_QWORD *)(v21 + 8 * v18);
              if (!v22)
              {
                v20 = v19 - 1;
                v23 = v14 + 5;
                while (v19 != v23)
                {
                  v22 = *(_QWORD *)(v21 + 8 * v23++);
                  if (v22)
                  {
                    v18 = v23 - 1;
                    goto LABEL_21;
                  }
                }
LABEL_43:
                a5[3] = v20;
                a5[4] = 0;
                swift_retain();
                return sub_1A5913E18(v7, a2, v41, a3);
              }
            }
          }
        }
LABEL_21:
        v16 = (v22 - 1) & v22;
        v17 = __clz(__rbit64(v22)) + (v18 << 6);
        v14 = v18;
      }
      v24 = *(_QWORD *)(*a5 + 48) + 16 * v17;
      v25 = *(_QWORD *)v24;
      v26 = *(unsigned int *)(v24 + 8);
      a5[3] = v14;
      a5[4] = v16;
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v27 = -1 << *(_BYTE *)(a3 + 32);
      v28 = result & ~v27;
      if (((*(_QWORD *)(v10 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) != 0)
      {
        v29 = ~v27;
        while (1)
        {
          v30 = *(_QWORD *)(a3 + 48) + 16 * v28;
          if ((*(unsigned int *)(v30 + 8) | ((unint64_t)*(unsigned int *)(v30 + 8) << 32)) == (v26 | (v26 << 32)))
          {
            v31 = *(_QWORD *)v30;
            v32 = *(_QWORD *)(v31 + 16);
            if (v32 == *(_QWORD *)(v25 + 16))
            {
              if (v32)
                v33 = v31 == v25;
              else
                v33 = 1;
              if (v33)
                goto LABEL_3;
              if (*(unsigned __int8 *)(v31 + 32) == *(unsigned __int8 *)(v25 + 32))
              {
                if (v32 == 1)
                  goto LABEL_3;
                if (*(unsigned __int8 *)(v31 + 33) == *(unsigned __int8 *)(v25 + 33))
                {
                  if (v32 == 2)
                    goto LABEL_3;
                  if (*(unsigned __int8 *)(v31 + 34) == *(unsigned __int8 *)(v25 + 34))
                    break;
                }
              }
            }
          }
LABEL_24:
          v28 = (v28 + 1) & v29;
          if (((*(_QWORD *)(v10 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
            goto LABEL_4;
        }
        v34 = (unsigned __int8 *)(v31 + 35);
        v35 = v32 - 3;
        v36 = (unsigned __int8 *)(v25 + 35);
        while (v35)
        {
          v38 = *v34++;
          v37 = v38;
          v39 = *v36++;
          --v35;
          if (v37 != v39)
            goto LABEL_24;
        }
LABEL_3:
        v11 = (v28 >> 3) & 0x1FFFFFFFFFFFFFF8;
        v12 = 1 << v28;
        v13 = *(unint64_t *)((char *)v7 + v11);
        *(unint64_t *)((char *)v7 + v11) = v13 & ~v12;
        if ((v13 & v12) != 0)
          break;
      }
    }
    v9 = v41 - 1;
    if (__OFSUB__(v41, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v41 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1A5913E18(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v31;
  uint64_t v32;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796170);
  result = sub_1A594C6E4();
  v9 = result;
  v31 = a1;
  v32 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= v32)
      goto LABEL_36;
    v16 = v31[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v32)
        goto LABEL_36;
      v16 = v31[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v32)
          goto LABEL_36;
        v16 = v31[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v4 + 48) + 16 * v14;
    v19 = *(_QWORD *)v18;
    v20 = *(_DWORD *)(v18 + 8);
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v21 = -1 << *(_BYTE *)(v9 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = *(_QWORD *)(v9 + 48) + 16 * v24;
    *(_QWORD *)v29 = v19;
    *(_DWORD *)(v29 + 8) = v20;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= v32)
    goto LABEL_36;
  v16 = v31[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v32)
      goto LABEL_36;
    v16 = v31[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

_QWORD *_s13PendingCancelVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *_s13PendingCancelVwta(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *_s13PendingCancelVMa()
{
  return &_s13PendingCancelVN;
}

uint64_t sub_1A5914134(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A10C8);
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = a2;
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v12)
          goto LABEL_31;
        v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_31;
          v18 = v31[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v12)
                  goto LABEL_31;
                v18 = v31[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v16);
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v14) = v20;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1A59143F8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;

  v3 = v2;
  v5 = type metadata accessor for ConnectionStatus(0);
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB38);
  v41 = a2;
  result = sub_1A594CA50();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v39 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v37 = v2;
    v38 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v20 = v19 | (v11 << 6);
      }
      else
      {
        v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v21 >= v38)
          goto LABEL_34;
        v22 = v39[v21];
        ++v11;
        if (!v22)
        {
          v11 = v21 + 1;
          if (v21 + 1 >= v38)
            goto LABEL_34;
          v22 = v39[v11];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v38)
            {
LABEL_34:
              if ((v41 & 1) == 0)
              {
                result = swift_release();
                v3 = v37;
                goto LABEL_41;
              }
              v36 = 1 << *(_BYTE *)(v8 + 32);
              if (v36 >= 64)
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v36;
              v3 = v37;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v22 = v39[v23];
            if (!v22)
            {
              while (1)
              {
                v11 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_43;
                if (v11 >= v38)
                  goto LABEL_34;
                v22 = v39[v11];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v11 = v23;
          }
        }
LABEL_21:
        v15 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      v24 = *(_QWORD *)(v8 + 48) + 16 * v20;
      v25 = *(_QWORD *)v24;
      v26 = *(_DWORD *)(v24 + 8);
      v27 = *(_QWORD *)(v40 + 72);
      v28 = *(_QWORD *)(v8 + 56) + v27 * v20;
      if ((v41 & 1) != 0)
      {
        sub_1A5910FA0(v28, (uint64_t)v7);
      }
      else
      {
        sub_1A54E3350(v28, (uint64_t)v7);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v29 = -1 << *(_BYTE *)(v10 + 32);
      v30 = result & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v32 = 0;
        v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v34 = v31 == v33;
          if (v31 == v33)
            v31 = 0;
          v32 |= v34;
          v35 = *(_QWORD *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        v17 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = *(_QWORD *)(v10 + 48) + 16 * v17;
      *(_QWORD *)v18 = v25;
      *(_DWORD *)(v18 + 8) = v26;
      result = sub_1A5910FA0((uint64_t)v7, *(_QWORD *)(v10 + 56) + v27 * v17);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_1A591473C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  char v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A10E0);
  v39 = a2;
  result = sub_1A594CA50();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v37 = (_QWORD *)(v5 + 64);
    v38 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v21 >= v36)
          goto LABEL_33;
        v22 = v37[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v36)
            goto LABEL_33;
          v22 = v37[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_33:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v35 = 1 << *(_BYTE *)(v5 + 32);
              if (v35 >= 64)
                bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v35;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v36)
                  goto LABEL_33;
                v22 = v37[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v11 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
      v30 = *v28;
      v29 = v28[1];
      v31 = *(_QWORD *)(v5 + 56) + 24 * v20;
      v32 = *(_DWORD *)v31;
      v33 = *(_BYTE *)(v31 + 4);
      v34 = *(_QWORD *)(v31 + 8);
      v40 = *(_BYTE *)(v31 + 16);
      if ((v39 & 1) == 0)
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v15 == v25;
          if (v15 == v25)
            v15 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v27 == -1);
        v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v16);
      *v17 = v30;
      v17[1] = v29;
      v18 = *(_QWORD *)(v7 + 56) + 24 * v16;
      *(_DWORD *)v18 = v32;
      *(_BYTE *)(v18 + 4) = v33;
      *(_QWORD *)(v18 + 8) = v34;
      *(_BYTE *)(v18 + 16) = v40;
      ++*(_QWORD *)(v7 + 16);
      v5 = v38;
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

void *sub_1A5914A58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A10C8);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 8 * v15;
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5914BE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for ConnectionStatus(0);
  v30 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB38);
  v5 = *v0;
  v6 = sub_1A594CA44();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v28 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v29 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = *(_QWORD *)(v5 + 48) + 16 * v17;
    v20 = *(_QWORD *)v19;
    v21 = *(_DWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v30 + 72) * v17;
    sub_1A54E3350(*(_QWORD *)(v5 + 56) + v22, (uint64_t)v4);
    v23 = *(_QWORD *)(v7 + 48) + v18;
    *(_QWORD *)v23 = v20;
    *(_DWORD *)(v23 + 8) = v21;
    sub_1A5910FA0((uint64_t)v4, *(_QWORD *)(v7 + 56) + v22);
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A5914E1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A10E0);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_DWORD *)v21;
    v23 = *(_BYTE *)(v21 + 4);
    v24 = *(_QWORD *)(v21 + 8);
    LOBYTE(v21) = *(_BYTE *)(v21 + 16);
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v25 = v18;
    v25[1] = v19;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_DWORD *)v26 = v22;
    *(_BYTE *)(v26 + 4) = v23;
    *(_QWORD *)(v26 + 8) = v24;
    *(_BYTE *)(v26 + 16) = v21;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A5914FEC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_1A59153E4((uint64_t)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4, a2);
    if (v2)
      swift_willThrow();
    else
      v4 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    v4 = sub_1A59153E4((uint64_t)v9, v6, v4, a2);
    MEMORY[0x1A85B1964](v9, -1, -1);
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1A5915168(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;
  uint64_t v30;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A10C8);
  result = sub_1A594CA5C();
  v9 = result;
  v29 = a1;
  v30 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v30)
        return v9;
      v16 = v29[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v30)
          return v9;
        v16 = v29[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v30)
            return v9;
          v16 = v29[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v30)
              return v9;
            v16 = v29[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v30)
                  return v9;
                v16 = v29[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v14);
    v19 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v14);
    sub_1A594CE64();
    sub_1A594CEAC();
    result = sub_1A594CED0();
    v20 = -1 << *(_BYTE *)(v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_DWORD *)(*(_QWORD *)(v9 + 48) + 4 * v23) = v18;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v23) = v19;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A59153E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  int64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v23;
  int64_t v25;

  v23 = (unint64_t *)result;
  v5 = 0;
  v6 = 0;
  v7 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(a3 + 64);
  v25 = (unint64_t)(v8 + 63) >> 6;
  v11 = a4 + 56;
  while (1)
  {
    while (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      if (*(_QWORD *)(a4 + 16))
      {
LABEL_19:
        v17 = *(_DWORD *)(*(_QWORD *)(a3 + 48) + 4 * v13);
        sub_1A594CE64();
        sub_1A594CEAC();
        result = sub_1A594CED0();
        v18 = -1 << *(_BYTE *)(a4 + 32);
        v19 = result & ~v18;
        if (((*(_QWORD *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
        {
          v20 = *(_QWORD *)(a4 + 48);
          if (*(_DWORD *)(v20 + 4 * v19) == v17)
          {
LABEL_24:
            *(unint64_t *)((char *)v23 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
            v14 = __OFADD__(v5++, 1);
            if (v14)
              goto LABEL_33;
          }
          else
          {
            v21 = ~v18;
            while (1)
            {
              v19 = (v19 + 1) & v21;
              if (((*(_QWORD *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
                break;
              if (*(_DWORD *)(v20 + 4 * v19) == v17)
                goto LABEL_24;
            }
          }
        }
      }
    }
    v14 = __OFADD__(v6++, 1);
    if (v14)
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v6 >= v25)
      return sub_1A5915168(v23, a2, v5, a3);
    v15 = *(_QWORD *)(v7 + 8 * v6);
    if (!v15)
      break;
LABEL_18:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
    if (*(_QWORD *)(a4 + 16))
      goto LABEL_19;
  }
  v16 = v6 + 1;
  if (v6 + 1 >= v25)
    return sub_1A5915168(v23, a2, v5, a3);
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
    goto LABEL_17;
  v16 = v6 + 2;
  if (v6 + 2 >= v25)
    return sub_1A5915168(v23, a2, v5, a3);
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
    goto LABEL_17;
  v16 = v6 + 3;
  if (v6 + 3 >= v25)
    return sub_1A5915168(v23, a2, v5, a3);
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
LABEL_17:
    v6 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v25)
      return sub_1A5915168(v23, a2, v5, a3);
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_18;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A5915614(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int v17;
  char v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  _QWORD *v36;

  v3 = v2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v5 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v6 = sub_1A5914FEC(v5, a1);
  swift_bridgeObjectRelease();
  *v2 = v6;
  swift_bridgeObjectRelease();
  v34 = a1 + 56;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_22;
    }
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_37;
    if (v14 >= v10)
      return swift_release();
    v15 = *(_QWORD *)(v34 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v10)
        return swift_release();
      v15 = *(_QWORD *)(v34 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v10)
          return swift_release();
        v15 = *(_QWORD *)(v34 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_21:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_22:
    v17 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * v13);
    if (*(_QWORD *)(*v3 + 16))
    {
      sub_1A5816DF4(v17);
      if ((v18 & 1) != 0)
        continue;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v3;
    v36 = (_QWORD *)*v3;
    *v3 = 0x8000000000000000;
    v22 = sub_1A5816DF4(v17);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = (v21 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v26 = v21;
    if (*(_QWORD *)(v20 + 24) >= v25)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v29 = v36;
        if ((v21 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1A5914A58();
        v29 = v36;
        if ((v26 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1A5914134(v25, isUniquelyReferenced_nonNull_native);
      v27 = sub_1A5816DF4(v17);
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_40;
      v22 = v27;
      v29 = v36;
      if ((v26 & 1) != 0)
      {
LABEL_4:
        *(_QWORD *)(v29[7] + 8 * v22) = a2;
        goto LABEL_5;
      }
    }
    v29[(v22 >> 6) + 8] |= 1 << v22;
    *(_DWORD *)(v29[6] + 4 * v22) = v17;
    *(_QWORD *)(v29[7] + 8 * v22) = a2;
    v30 = v29[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_38;
    v29[2] = v32;
LABEL_5:
    *v3 = (uint64_t)v29;
    swift_bridgeObjectRelease();
  }
  v16 = v14 + 3;
  if (v16 >= v10)
    return swift_release();
  v15 = *(_QWORD *)(v34 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v10)
      return swift_release();
    v15 = *(_QWORD *)(v34 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

_QWORD *static Engine.makeEngineAndPersistence<A>(configuration:windowOfInterest:environment:makePersistence:)(uint64_t a1, uint64_t a2, char a3, int a4, void *a5, int a6, uint64_t a7, uint64_t (*a8)(_QWORD, uint64_t (*)(uint64_t a1, char a2), uint64_t), uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  int v26;
  _QWORD *v27;
  _QWORD v29[2];
  _QWORD *v30;
  uint64_t (*v31)(_QWORD, uint64_t (*)(uint64_t, char), uint64_t);
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  void *v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;

  v39 = a7;
  v38 = a6;
  v36 = a2;
  v37 = a5;
  v33 = a11;
  v31 = a8;
  v32 = a10;
  v29[1] = a9;
  v34 = a4;
  v35 = a3 & 1;
  v12 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v12);
  v30 = (_QWORD *)((char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1A594C234();
  MEMORY[0x1E0C80A78](v14);
  v15 = sub_1A594C078();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5915BE8();
  v40 = 0xD00000000000001BLL;
  v41 = 0x80000001A5A14ED0;
  sub_1A594B5F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DEF8D8], v15);
  v40 = MEMORY[0x1E0DEE9D8];
  sub_1A5915C24();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799C20);
  sub_1A5915C6C();
  sub_1A594C5C4();
  v19 = (void *)sub_1A594C240();
  type metadata accessor for EngineBox();
  v20 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for EngineTracingIDOwner();
  swift_allocObject();
  swift_retain();
  v21 = EngineTracingIDOwner.init()();
  v22 = v31(*(unsigned __int8 *)(v21 + 16), sub_1A5915D30, v20);
  v23 = (_QWORD *)swift_allocObject();
  v24 = v33;
  v23[2] = v32;
  v23[3] = v24;
  v23[4] = v22;
  v25 = v30;
  sub_1A5915D88(a1, (uint64_t)v30);
  swift_allocObject();
  v26 = v34 & 0x101FF;
  swift_unknownObjectRetain();
  v27 = sub_1A5909008(v21, v25, v36, v35, v26, v37, v38, v39, v19, (uint64_t)sub_1A5915D60, (uint64_t)v23);
  swift_release();
  swift_weakAssign();
  swift_release();
  return v27;
}

unint64_t sub_1A5915BE8()
{
  unint64_t result;

  result = qword_1EE7960F0;
  if (!qword_1EE7960F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE7960F0);
  }
  return result;
}

unint64_t sub_1A5915C24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE79A228;
  if (!qword_1EE79A228)
  {
    v1 = sub_1A594C234();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEFA48], v1);
    atomic_store(result, (unint64_t *)&qword_1EE79A228);
  }
  return result;
}

unint64_t sub_1A5915C6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE799C38;
  if (!qword_1EE799C38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE799C20);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EE799C38);
  }
  return result;
}

uint64_t type metadata accessor for EngineBox()
{
  return objc_opt_self();
}

uint64_t sub_1A5915CD8(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_weakLoadStrong();
  if (result)
  {
    Engine.persistenceDidSend(_:)(a1, a2 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A5915D30(uint64_t a1, char a2)
{
  return sub_1A5915CD8(a1, a2 & 1);
}

uint64_t sub_1A5915D3C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5915D60(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 24) + 8))(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A5915D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Configuration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5915DCC()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1A5915DF0()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t result;
  unint64_t *v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = sub_1A594AED8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x1E0DEF740], v2, v4);
  v8 = v7;
  LOBYTE(v7) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_didTearDown) & 1) != 0)
    return result;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_didTearDown) = 1;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_stateCapture))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  swift_retain();
  StateCapture.tearDown()();
  result = swift_release();
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_checkForStallTimer))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  swift_retain();
  RestartableTimer.stop()();
  result = swift_release();
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_pendingCancelTimer))
  {
LABEL_21:
    __break(1u);
    return result;
  }
  swift_retain();
  RestartableTimer.stop()();
  swift_release();
  v10 = (unint64_t *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  v1 = *v10;
  if (v1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain_n();
    result = sub_1A594CA38();
    v11 = result;
    if (result)
      goto LABEL_8;
    return swift_bridgeObjectRelease_n();
  }
  v11 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain_n();
  if (v11)
  {
LABEL_8:
    if (v11 >= 1)
    {
      for (i = 0; i != v11; ++i)
      {
        if ((v1 & 0xC000000000000001) != 0)
        {
          v13 = MEMORY[0x1A85AEC04](i, v1);
        }
        else
        {
          v13 = *(_QWORD *)(v1 + 8 * i + 32);
          swift_retain();
        }
        (*(void (**)(void))(*(_QWORD *)v13 + 520))();
        swift_release();
      }
      return swift_bridgeObjectRelease_n();
    }
    __break(1u);
    goto LABEL_19;
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1A5916018(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[3];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1A594AED8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *(_QWORD *)v12 = v13;
  (*(void (**)(uint64_t, _QWORD, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x1E0DEF740], v8, v10);
  v14 = v13;
  LOBYTE(v13) = sub_1A594AEF0();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v15 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1A54E330C(v15, (uint64_t)v7, (uint64_t *)&unk_1EE798858);
  v12 = sub_1A594A764();
  v9 = *(_QWORD *)(v12 - 8);
  result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v12);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_retain_n();
    swift_retain();
    v17 = sub_1A594A74C();
    v2 = sub_1A594C000();
    v18 = &unk_1EE798000;
    if (!os_log_type_enabled((os_log_t)v17, v2))
    {

      swift_release_n();
      swift_release_n();
      goto LABEL_8;
    }
    v31 = v9;
    v9 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v33[0] = v30;
    *(_DWORD *)v9 = 68158722;
    LODWORD(v32) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v9 + 8) = 256;
    LOBYTE(v32) = *(_BYTE *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v9 + 11) = 2048;
    v19 = (unint64_t *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    swift_beginAccess();
    v20 = *v19;
    if (v20 >> 62)
      goto LABEL_23;
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_release();
    while (1)
    {
      v32 = v21;
      sub_1A594C3CC();
      swift_release();
      *(_WORD *)(v9 + 21) = 2082;
      v22 = ConnectionID.debugDescription.getter(*(unsigned int *)(a1
                                                                 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
      v32 = sub_1A5903E24(v22, v23, v33);
      sub_1A594C3CC();
      swift_release_n();
      v24 = swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 31) = 2048;
      v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 440))(v24);
      swift_release();
      v32 = v25;
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, (os_log_t)v17, v2, "[%.*hhx] Received authenticated connection with better path. Cancelling all (%ld) existing connection and switching to the new connection %{public}s [C%llu].", (uint8_t *)v9, 0x29u);
      v26 = v30;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v26, -1, -1);
      MEMORY[0x1A85B1964](v9, -1, -1);

      v9 = v31;
      v18 = (_QWORD *)&unk_1EE798000;
LABEL_8:
      (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v7, v12);
      v7 = (uint64_t *)(v3 + v18[227]);
      swift_beginAccess();
      v12 = *v7;
      if ((unint64_t)*v7 >> 62)
      {
LABEL_17:
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v17 = sub_1A594CA38();
        if (!v17)
          goto LABEL_18;
      }
      else
      {
        v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (!v17)
          goto LABEL_18;
      }
      if (v17 >= 1)
        break;
      __break(1u);
LABEL_23:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v21 = sub_1A594CA38();
      swift_release();
      swift_bridgeObjectRelease();
    }
    for (i = 0; i != v17; ++i)
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        v28 = MEMORY[0x1A85AEC04](i, v12);
      }
      else
      {
        v28 = *(_QWORD *)(v12 + 8 * i + 32);
        swift_retain();
      }
      (*(void (**)(void))(*(_QWORD *)v28 + 520))();
      swift_release();
    }
LABEL_18:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v29 = swift_retain();
    MEMORY[0x1A85ADDB8](v29);
    if (*(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1A594B9D0();
    sub_1A594BA30();
    sub_1A594B988();
    swift_endAccess();
    result = (*(uint64_t (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)a1 + 592))(v3, &off_1E4E7B480);
    if (*(_QWORD *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_checkForStallTimer))
    {
      swift_retain();
      RestartableTimer.start()();
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

void sub_1A59165B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v2 = type metadata accessor for ClientCommand(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for Command();
  MEMORY[0x1E0C80A78](v4);
  sub_1A55034B8(a1, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)&loc_1A5916698 + dword_1A591690C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A59166A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A54E3394(v2, v1, type metadata accessor for ClientCommand);
  v3 = sub_1A5917E68(v1, *v0, v0[1]);
  sub_1A55034FC(v1, type metadata accessor for ClientCommand);
  return v3;
}

uint64_t sub_1A5916920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  __uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  int v22;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1A594AED8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(void **)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v10 = v9;
  LOBYTE(v9) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    v12 = sub_1A591CBD0();
    if ((ConnectionIDsGroupedByState.containsActivelyConnecting.getter(v12) & 1) == 0)
    {
LABEL_8:
      v19 = static MonotonicTime.now()();
      v20 = ConnectionLimitsAndUsage.connectionsToBeCancelled(_:)();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_1A5915614(v20, v19);
      swift_endAccess();
      swift_bridgeObjectRelease();
      return sub_1A591CE58(v19);
    }
    v13 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1A54E330C(v13, (uint64_t)v4, (uint64_t *)&unk_1EE798858);
    v14 = sub_1A594A764();
    v15 = *(_QWORD *)(v14 - 8);
    result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v4, 1, v14);
    if ((_DWORD)result != 1)
    {
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v16 = sub_1A594A74C();
      v17 = sub_1A594C00C();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc();
        *(_DWORD *)v18 = 68157952;
        v22 = 2;
        sub_1A594C3CC();
        *(_WORD *)(v18 + 8) = 256;
        LOBYTE(v22) = *(_BYTE *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
        sub_1A594C3CC();
        swift_release();
        _os_log_impl(&dword_1A4F90000, v16, v17, "[%.*hhx] Some connections are actively connecting.", (uint8_t *)v18, 0xBu);
        MEMORY[0x1A85B1964](v18, -1, -1);
      }
      else
      {
        swift_release();
      }

      (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v4, v14);
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5916C08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  __uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;

  v42 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798520);
  MEMORY[0x1E0C80A78](v2);
  v41 = (uint64_t)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A594A0EC();
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796498);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798568);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v39 - v17;
  v19 = sub_1A594AED8();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (uint64_t *)((char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = *(void **)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *v23 = v24;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v20 + 104))(v23, *MEMORY[0x1E0DEF740], v19, v21);
  v25 = v24;
  LOBYTE(v24) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v20 + 8))(v23, v19);
  if ((v24 & 1) != 0)
  {
    v27 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_lastError;
    swift_beginAccess();
    sub_1A54E330C(v27, (uint64_t)v15, &qword_1EE798568);
    v28 = type metadata accessor for ConnectionStatus.Error(0);
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    if (v30(v15, 1, v28) == 1)
    {
      sub_1A591BC6C(v18);
      sub_1A5510284((uint64_t)v15, &qword_1EE798568);
    }
    else
    {
      sub_1A54E3394((uint64_t)v15, (uint64_t)v18, type metadata accessor for ConnectionStatus.Error);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v18, 0, 1, v28);
    }
    v31 = v42;
    if (v30(v18, 1, v28) == 1)
    {
      sub_1A5510284((uint64_t)v18, &qword_1EE798568);
      v32 = 1;
    }
    else
    {
      v33 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
      swift_beginAccess();
      if ((*(_BYTE *)(v33 + 16) & 1) != 0)
      {
        v34 = 1;
      }
      else
      {
        v35 = *(_QWORD *)(v33 + 8);
        v36 = static MonotonicTime.now()();
        sub_1A594A0E0();
        Date.init(_:now:now:)(v35, v36, (uint64_t)v6);
        v34 = 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v12, v34, 1, v40);
      v37 = *v18;
      v38 = v41;
      sub_1A54E330C((uint64_t)&v18[*(int *)(v28 + 20)], v41, &qword_1EE798520);
      sub_1A54E330C((uint64_t)v12, (uint64_t)v9, &qword_1EE796498);
      ConnectionStatus.Error.init(kind:details:backedOffUntil:)(v37, v38, (uint64_t)v9, v31);
      sub_1A5510284((uint64_t)v12, &qword_1EE796498);
      sub_1A55034FC((uint64_t)v18, type metadata accessor for ConnectionStatus.Error);
      v32 = 0;
    }
    return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v31, v32, 1, v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5916FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  void (*v7)(unint64_t);
  uint64_t v8;

  v5 = a3 + 16;
  swift_beginAccess();
  result = MEMORY[0x1A85B1A0C](v5);
  if (result)
  {
    v7 = *(void (**)(unint64_t))(result + 32);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = a1;
    *(_QWORD *)(v8 + 24) = a2;
    v7(v8 | 0xA000000000000000);
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

double sub_1A591705C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1A5917110(v5);
    swift_release();
    *(_QWORD *)(a1 + 24) = &type metadata for ConnectionPool.CapturedValue;
    *(_QWORD *)(a1 + 32) = sub_1A59269A0();
    v2 = swift_allocObject();
    *(_QWORD *)a1 = v2;
    v3 = v5[1];
    *(_OWORD *)(v2 + 16) = v5[0];
    *(_OWORD *)(v2 + 32) = v3;
    result = *(double *)&v6;
    *(_OWORD *)(v2 + 48) = v6;
    *(_QWORD *)(v2 + 64) = v7;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1A5917110@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  _OWORD v62[14];
  char v63;

  v2 = v1;
  v4 = type metadata accessor for ConnectionStatus.Error(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v52 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v48 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798568);
  MEMORY[0x1E0C80A78](v10);
  v59 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A594AED8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (uint64_t *)((char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v13 + 104))(v16, *MEMORY[0x1E0DEF740], v12, v14);
  v18 = v17;
  LOBYTE(v17) = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v16, v12);
  if ((v17 & 1) != 0)
  {
    v58 = v5;
    v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logName + 8);
    v55 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logName);
    *(_QWORD *)&v62[0] = 0;
    *((_QWORD *)&v62[0] + 1) = 0xE000000000000000;
    v61 = *(_BYTE *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1A5910EA4();
    v56 = v19;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B6DC();
    if (sub_1A594B5A4() <= 1)
      sub_1A594B5F8();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    v16 = (_QWORD *)*((_QWORD *)&v62[0] + 1);
    v13 = *(_QWORD *)&v62[0];
    v57 = v2;
    v20 = (uint64_t *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    swift_beginAccess();
    v2 = *v20;
    if (!((unint64_t)*v20 >> 62))
    {
      v21 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v21 = sub_1A594CA38();
LABEL_6:
  v51 = v9;
  v53 = v16;
  v54 = v13;
  if (v21)
  {
    v60 = MEMORY[0x1E0DEE9D8];
    result = sub_1A5923D0C(0, v21 & ~(v21 >> 63), 0);
    if (v21 < 0)
    {
      __break(1u);
      return result;
    }
    v49 = v4;
    v50 = a1;
    v23 = 0;
    v24 = v60;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        MEMORY[0x1A85AEC04](v23, v2);
      else
        swift_retain();
      CommandConnection.capturedValue.getter((uint64_t)v62);
      swift_release();
      v60 = v24;
      v26 = *(_QWORD *)(v24 + 16);
      v25 = *(_QWORD *)(v24 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1A5923D0C(v25 > 1, v26 + 1, 1);
        v24 = v60;
      }
      ++v23;
      *(_QWORD *)(v24 + 16) = v26 + 1;
      v27 = v24 + 232 * v26;
      v28 = v62[0];
      v29 = v62[2];
      *(_OWORD *)(v27 + 48) = v62[1];
      *(_OWORD *)(v27 + 64) = v29;
      *(_OWORD *)(v27 + 32) = v28;
      v30 = v62[3];
      v31 = v62[4];
      v32 = v62[6];
      *(_OWORD *)(v27 + 112) = v62[5];
      *(_OWORD *)(v27 + 128) = v32;
      *(_OWORD *)(v27 + 80) = v30;
      *(_OWORD *)(v27 + 96) = v31;
      v33 = v62[7];
      v34 = v62[8];
      v35 = v62[10];
      *(_OWORD *)(v27 + 176) = v62[9];
      *(_OWORD *)(v27 + 192) = v35;
      *(_OWORD *)(v27 + 144) = v33;
      *(_OWORD *)(v27 + 160) = v34;
      v36 = v62[11];
      v37 = v62[12];
      v38 = v62[13];
      *(_BYTE *)(v27 + 256) = v63;
      *(_OWORD *)(v27 + 224) = v37;
      *(_OWORD *)(v27 + 240) = v38;
      *(_OWORD *)(v27 + 208) = v36;
    }
    while (v21 != v23);
    swift_bridgeObjectRelease();
    v4 = v49;
    a1 = v50;
  }
  else
  {
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x1E0DEE9D8];
  }
  v39 = v57 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_lastError;
  swift_beginAccess();
  v40 = v59;
  sub_1A54E330C(v39, v59, &qword_1EE798568);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v40, 1, v4);
  v41 = 0;
  v42 = 0;
  if ((_DWORD)result != 1)
  {
    v43 = v40;
    v44 = (uint64_t)v51;
    sub_1A54E3394(v43, (uint64_t)v51, type metadata accessor for ConnectionStatus.Error);
    sub_1A55034B8(v44, v52, type metadata accessor for ConnectionStatus.Error);
    v41 = sub_1A594B490();
    v42 = v45;
    result = sub_1A55034FC(v44, type metadata accessor for ConnectionStatus.Error);
  }
  v46 = v56;
  *a1 = v55;
  a1[1] = v46;
  v47 = v53;
  a1[2] = v54;
  a1[3] = v47;
  a1[4] = v24;
  a1[5] = v41;
  a1[6] = v42;
  return result;
}

uint64_t sub_1A5917588(uint64_t a1)
{
  return sub_1A589145C(a1, (void (*)(void))sub_1A5917594);
}

uint64_t sub_1A5917594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  unint64_t *v8;
  uint64_t result;
  unint64_t v10;
  __uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = sub_1A594AED8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x1E0DEF740], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) != 0)
  {
    v8 = (unint64_t *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    result = swift_beginAccess();
    v10 = *v8;
    if (!(v10 >> 62))
    {
      if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_4;
LABEL_9:
      if (*(_QWORD *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_checkForStallTimer))
      {
        swift_retain();
        RestartableTimer.stop()();
        return swift_release();
      }
      else
      {
        __break(1u);
      }
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = sub_1A594CA38();
  result = swift_bridgeObjectRelease();
  if (!v12)
    goto LABEL_9;
LABEL_4:
  v11 = static MonotonicTime.now()();
  result = sub_1A59231E8(v11);
  if ((result & 1) != 0)
  {
    result = MEMORY[0x1A85B1A0C](v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engine);
    if (result)
    {
      sub_1A590C474();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1A5917710(uint64_t a1)
{
  return sub_1A589145C(a1, (void (*)(void))sub_1A591771C);
}

uint64_t sub_1A591771C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  __uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1A54E330C(v5, (uint64_t)v4, (uint64_t *)&unk_1EE798858);
  v6 = sub_1A594A764();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v9 = sub_1A594A74C();
    v10 = sub_1A594C030();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      *(_DWORD *)v11 = 68157952;
      HIDWORD(v13) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v11 + 8) = 256;
      BYTE4(v13) = *(_BYTE *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, v9, v10, "[%.*hhx] Timer fired: checking for cancelled connections.", (uint8_t *)v11, 0xBu);
      MEMORY[0x1A85B1964](v11, -1, -1);
    }
    else
    {
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
    v12 = static MonotonicTime.now()();
    return sub_1A591CE58(v12);
  }
  return result;
}

uint64_t sub_1A59178F8(uint64_t a1)
{
  return sub_1A589145C(a1, (void (*)(void))sub_1A5917904);
}

uint64_t sub_1A5917904()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;

  v1 = (unint64_t *)sub_1A594AED8();
  v2 = *(v1 - 1);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, unint64_t *, double))(v2 + 104))(v5, *MEMORY[0x1E0DEF740], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_1A594AEF0();
  (*(void (**)(_QWORD *, unint64_t *))(v2 + 8))(v5, v1);
  if ((v6 & 1) != 0)
  {
    v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    result = swift_beginAccess();
    if (!(*v1 >> 62))
    {
      if (*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_4;
LABEL_14:
      if (*(_QWORD *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_collectDataTransferTimer))
      {
        swift_retain();
        RestartableTimer.stop()();
        return swift_release();
      }
      goto LABEL_20;
    }
  }
  else
  {
    __break(1u);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = sub_1A594CA38();
  result = swift_bridgeObjectRelease();
  if (!v12)
    goto LABEL_14;
LABEL_4:
  v9 = *v1;
  if (v9 >> 62)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A594CA38();
    v10 = result;
    if (result)
      goto LABEL_6;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v10)
    {
LABEL_6:
      if (v10 >= 1)
      {
        for (i = 0; i != v10; ++i)
        {
          if ((v9 & 0xC000000000000001) != 0)
            MEMORY[0x1A85AEC04](i, v9);
          else
            swift_retain();
          CommandConnection.collectDataTransferReport()();
          swift_release();
        }
        return swift_bridgeObjectRelease();
      }
      __break(1u);
LABEL_20:
      __break(1u);
      return result;
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5917AF4()
{
  uint64_t result;
  uint64_t v1;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_checkForStallTimer);
    swift_retain();
    result = swift_release();
    if (v1)
    {
      RestartableTimer.start()();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A5917B6C()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_didTearDown) == 1)
  {
    sub_1A5510284(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger, (uint64_t *)&unk_1EE798858);

    swift_bridgeObjectRelease();
    sub_1A55034FC(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_configuration, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionConfiguration);
    swift_bridgeObjectRelease();
    sub_1A5892AD4(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engine);
    swift_release();
    swift_release();
    sub_1A5510284(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_lastError, &qword_1EE798568);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5917CA4()
{
  sub_1A5917B6C();
  return swift_deallocClassInstance();
}

uint64_t sub_1A5917CC8()
{
  return type metadata accessor for ConnectionPool();
}

uint64_t type metadata accessor for ConnectionPool()
{
  uint64_t result;

  result = qword_1EE7987B8;
  if (!qword_1EE7987B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A5917D0C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1A563F244(319, &qword_1EE798868, (void (*)(uint64_t))MEMORY[0x1E0DF2258]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ConnectionConfiguration();
    if (v1 <= 0x3F)
    {
      sub_1A563F244(319, &qword_1EE798580, (void (*)(uint64_t))type metadata accessor for ConnectionStatus.Error);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1A5917E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  int v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;

  v5 = v3;
  v8 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = ((char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v61 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v61 - v18;
  v21 = sub_1A5919A80(a1, v20, a3);
  if ((v22 & 1) != 0)
    return 0;
  v23 = v21;
  v24 = (uint64_t *)(v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  v25 = *v24;
  v26 = (*v24 & 0xC000000000000001) == 0;
  v65 = v24;
  if (!v26)
  {
    v60 = MEMORY[0x1A85AEC04](v23);
    goto LABEL_7;
  }
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v23 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v60 = *(_QWORD *)(v25 + 8 * v23 + 32);
  swift_retain();
LABEL_7:
  swift_endAccess();
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v60 + 536))(a1);
  v28 = v27;
  swift_release();
  if ((v28 & 1) == 0)
  {
    v29 = v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1A54E330C(v29, (uint64_t)v19, (uint64_t *)&unk_1EE798858);
    v30 = sub_1A594A764();
    v64 = *(_QWORD *)(v30 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48))(v19, 1, v30);
    if ((_DWORD)result == 1)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A55034B8(a1, (uint64_t)v13, type metadata accessor for ClientCommand);
    swift_retain();
    v10 = sub_1A594A74C();
    v32 = sub_1A594C000();
    if (!os_log_type_enabled(v10, (os_log_type_t)v32))
    {
      swift_release();

      sub_1A55034FC((uint64_t)v13, type metadata accessor for ClientCommand);
      swift_release_n();
      goto LABEL_23;
    }
    v62 = v32;
    v63 = v30;
    a1 = swift_slowAlloc();
    v61 = swift_slowAlloc();
    v67 = v61;
    *(_DWORD *)a1 = 68158722;
    LODWORD(v66) = 2;
    sub_1A594C3CC();
    *(_WORD *)(a1 + 8) = 256;
    LOBYTE(v66) = *(_BYTE *)(v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(a1 + 11) = 2082;
    v33 = CommandID.tag.getter(v4);
    v34 = Tag.debugDescription.getter(v33 & 0xFFFFFFFF000000FFLL);
    v66 = sub_1A5903E24(v34, v35, &v67);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(a1 + 21) = 2082;
    ClientCommand.logIdentifier.getter();
    v66 = sub_1A5903E24(v36, v37, &v67);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v13, type metadata accessor for ClientCommand);
    *(_WORD *)(a1 + 31) = 2082;
    v38 = v65;
    result = swift_beginAccess();
    v39 = *v38;
    if ((*v38 & 0xC000000000000001) == 0)
    {
      if ((v23 & 0x8000000000000000) == 0)
      {
        if (v23 < *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v40 = *(_QWORD *)(v39 + 8 * v23 + 32);
          swift_retain();
LABEL_14:
          swift_endAccess();
          v41 = *(unsigned int *)(v40 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
          swift_release();
          v42 = ConnectionID.debugDescription.getter(v41);
          v66 = sub_1A5903E24(v42, v43, &v67);
          sub_1A594C3CC();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v10, (os_log_type_t)v62, "[%.*hhx] Sent command '%{public}s %{public}s' on connection %{public}s", (uint8_t *)a1, 0x29u);
          v44 = v61;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v44, -1, -1);
          MEMORY[0x1A85B1964](a1, -1, -1);

          v30 = v63;
LABEL_23:
          (*(void (**)(char *, uint64_t))(v64 + 8))(v19, v30);
          return v4;
        }
        goto LABEL_34;
      }
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
LABEL_30:
    v40 = MEMORY[0x1A85AEC04](v23);
    goto LABEL_14;
  }
  v45 = v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1A54E330C(v45, (uint64_t)v16, (uint64_t *)&unk_1EE798858);
  v46 = sub_1A594A764();
  v47 = *(_QWORD *)(v46 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48))(v16, 1, v46);
  if ((_DWORD)result != 1)
  {
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A55034B8(a1, (uint64_t)v10, type metadata accessor for ClientCommand);
    swift_retain();
    v48 = sub_1A594A74C();
    v49 = sub_1A594C000();
    if (os_log_type_enabled(v48, (os_log_type_t)v49))
    {
      v62 = v49;
      v63 = v47;
      v64 = v46;
      v50 = swift_slowAlloc();
      v61 = swift_slowAlloc();
      v67 = v61;
      *(_DWORD *)v50 = 68158466;
      LODWORD(v66) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v50 + 8) = 256;
      LOBYTE(v66) = *(_BYTE *)(v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      sub_1A594C3CC();
      swift_release();
      *(_WORD *)(v50 + 11) = 2082;
      ClientCommand.logIdentifier.getter();
      v66 = sub_1A5903E24(v51, v52, &v67);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v10, type metadata accessor for ClientCommand);
      *(_WORD *)(v50 + 21) = 2082;
      v53 = v65;
      result = swift_beginAccess();
      v54 = *v53;
      if ((*v53 & 0xC000000000000001) != 0)
      {
        v55 = MEMORY[0x1A85AEC04](v23);
      }
      else
      {
        if ((v23 & 0x8000000000000000) != 0)
          goto LABEL_33;
        if (v23 >= *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        v55 = *(_QWORD *)(v54 + 8 * v23 + 32);
        swift_retain();
      }
      swift_endAccess();
      v56 = *(unsigned int *)(v55 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      swift_release();
      v57 = ConnectionID.debugDescription.getter(v56);
      v66 = sub_1A5903E24(v57, v58, &v67);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v48, (os_log_type_t)v62, "[%.*hhx] Failed to send command '%{public}s' on connection %{public}s", (uint8_t *)v50, 0x1Fu);
      v59 = v61;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v59, -1, -1);
      MEMORY[0x1A85B1964](v50, -1, -1);

      v47 = v63;
      v46 = v64;
    }
    else
    {
      swift_release();

      sub_1A55034FC((uint64_t)v10, type metadata accessor for ClientCommand);
      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v46);
    return 0;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A591868C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;

  v10 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v10);
  v75 = (uint64_t)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v66 - v13;
  v15 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = a1;
  if ((a1 & 0x100000000) != 0)
  {
    v25 = sub_1A591A82C(a2, a3, a4);
    if (!v25)
      return 0;
    v26 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v25 + 552))(v25);
    swift_release();
    return v26;
  }
  v71 = a2;
  v18 = (uint64_t *)(v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  v73 = (uint64_t *)(v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  v74 = v4;
  swift_beginAccess();
  v19 = *v18;
  v20 = (unint64_t)*v18 >> 62;
  v70 = v5;
  v72 = a3;
  v21 = v14;
  if (v20)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = sub_1A594CA38();
    if (!v22)
      goto LABEL_21;
  }
  else
  {
    v22 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v22)
      goto LABEL_21;
  }
  v23 = v19 & 0xC000000000000001;
  if ((v19 & 0xC000000000000001) != 0)
  {
    v27 = *(_DWORD *)(MEMORY[0x1A85AEC04](0, v19) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
    swift_unknownObjectRelease();
    if (v27 == (_DWORD)v76)
      goto LABEL_6;
    goto LABEL_13;
  }
  if (*(_DWORD *)(*(_QWORD *)(v19 + 32) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != (_DWORD)v76)
  {
LABEL_13:
    if (v22 != 1)
    {
      v28 = 5;
      v29 = &OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id;
      while (1)
      {
        v24 = v28 - 4;
        if (v23)
        {
          v30 = *(_DWORD *)(MEMORY[0x1A85AEC04](v28 - 4, v19) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
          swift_unknownObjectRelease();
          if (v30 == (_DWORD)v76)
            goto LABEL_26;
        }
        else if (*(_DWORD *)(*(_QWORD *)(v19 + 8 * v28) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) == (_DWORD)v76)
        {
LABEL_26:
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        v31 = v28 - 3;
        if (__OFADD__(v24, 1))
          break;
        ++v28;
        if (v31 == v22)
          goto LABEL_21;
      }
      __break(1u);
      goto LABEL_45;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    v32 = v74;
    v33 = v74 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    v34 = v75;
    sub_1A54E330C(v33, v75, (uint64_t *)&unk_1EE798858);
    v35 = sub_1A594A764();
    v36 = *(_QWORD *)(v35 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35);
    if ((_DWORD)result == 1)
    {
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    swift_retain();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v38 = sub_1A594A74C();
    v39 = sub_1A594C018();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v77 = v41;
      *(_DWORD *)v40 = 68158210;
      LODWORD(v79) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v40 + 8) = 256;
      LOBYTE(v79) = *(_BYTE *)(v32 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      sub_1A594C3CC();
      swift_release();
      *(_WORD *)(v40 + 11) = 2082;
      v42 = ConnectionID.debugDescription.getter(v76);
      v79 = sub_1A5903E24(v42, v43, &v77);
      v34 = v75;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v38, v39, "[%.*hhx] Attempt to send on connection %{public}s -- but it does not exist.", (uint8_t *)v40, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v41, -1, -1);
      MEMORY[0x1A85B1964](v40, -1, -1);
    }
    else
    {
      swift_release();
    }

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    v26 = 0;
LABEL_36:
    sub_1A5926834();
    swift_allocError();
    *v62 = v26;
    swift_willThrow();
    return v26;
  }
LABEL_6:
  swift_bridgeObjectRelease();
  v24 = 0;
LABEL_27:
  v29 = v73;
  swift_beginAccess();
  v44 = *v29;
  v28 = v74;
  v23 = (unint64_t)v21;
  v19 = v71;
  if ((*v29 & 0xC000000000000001) == 0)
  {
    if ((v24 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v24 < *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v45 = *(_QWORD *)(v44 + 8 * v24 + 32);
      swift_retain();
      goto LABEL_31;
    }
    __break(1u);
    goto LABEL_48;
  }
LABEL_45:
  v45 = MEMORY[0x1A85AEC04](v24);
LABEL_31:
  v46 = swift_endAccess();
  (*(void (**)(uint64_t))(*(_QWORD *)v45 + 312))(v46);
  swift_release();
  v47 = ConnectionState.hasMailboxSelectedOrSelectionIsInProgress(_:)(v19, v72);
  sub_1A55034FC((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  if (!v47)
  {
    v26 = 1;
    goto LABEL_36;
  }
  v48 = v28 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1A54E330C(v48, v23, (uint64_t *)&unk_1EE798858);
  v49 = sub_1A594A764();
  v50 = *(_QWORD *)(v49 - 8);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v50 + 48))(v23, 1, v49);
  if ((_DWORD)result != 1)
  {
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_bridgeObjectRetain_n();
    v51 = sub_1A594A74C();
    v52 = sub_1A594C000();
    LODWORD(v75) = v52;
    if (os_log_type_enabled(v51, v52))
    {
      v53 = swift_slowAlloc();
      v68 = v50;
      v54 = v53;
      v67 = swift_slowAlloc();
      v79 = v67;
      *(_DWORD *)v54 = 68158723;
      LODWORD(v77) = 2;
      v69 = v49;
      sub_1A594C3CC();
      *(_WORD *)(v54 + 8) = 256;
      v55 = *(_BYTE *)(v28 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      swift_release();
      LOBYTE(v77) = v55;
      sub_1A594C3CC();
      swift_release();
      *(_WORD *)(v54 + 11) = 2160;
      v77 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v54 + 21) = 2085;
      v77 = v19;
      v78 = v72;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v56 = sub_1A594B4A8();
      v77 = sub_1A5903E24(v56, v57, &v79);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      v29 = v73;
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 31) = 2082;
      v58 = ConnectionID.debugDescription.getter(v76);
      v77 = sub_1A5903E24(v58, v59, &v79);
      sub_1A594C3CC();
      v49 = v69;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v51, (os_log_type_t)v75, "[%.*hhx] Created mailbox affinity for '%{sensitive,mask.mailbox}s' on connection %{public}s with mailbox already selected.", (uint8_t *)v54, 0x29u);
      v60 = v67;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v60, -1, -1);
      v61 = v54;
      v50 = v68;
      MEMORY[0x1A85B1964](v61, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }
    (*(void (**)(unint64_t, uint64_t))(v50 + 8))(v23, v49);
    result = swift_beginAccess();
    v63 = *v29;
    if ((*v29 & 0xC000000000000001) == 0)
    {
      if ((v24 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v24 < *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v64 = *(_QWORD *)(v63 + 8 * v24 + 32);
        swift_retain();
LABEL_43:
        v65 = swift_endAccess();
        v26 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v64 + 552))(v65);
        swift_release();
        return v26;
      }
      __break(1u);
      goto LABEL_51;
    }
LABEL_48:
    v64 = MEMORY[0x1A85AEC04](v24);
    goto LABEL_43;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1A5918F40(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11 = sub_1A592600C(v10, a1, a2);
  v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = 0;
  if ((v13 & 1) != 0)
    return v14;
  swift_beginAccess();
  v15 = *v9;
  if ((*v9 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v16 = *(_QWORD *)(v15 + 8 * v11 + 32);
      swift_retain();
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_23;
  }
  v16 = MEMORY[0x1A85AEC04](v11);
LABEL_6:
  swift_endAccess();
  v39 = *(_DWORD *)(v16 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  swift_release();
  v17 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1A54E330C(v17, (uint64_t)v8, (uint64_t *)&unk_1EE798858);
  v18 = sub_1A594A764();
  v40 = *(_QWORD *)(v18 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v8, 1, v18);
  if ((_DWORD)result == 1)
    goto LABEL_29;
  v14 = 2;
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  swift_bridgeObjectRetain_n();
  v20 = sub_1A594A74C();
  v21 = sub_1A594C030();
  v38 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    HIDWORD(v35) = a2;
    v23 = v22;
    v36 = swift_slowAlloc();
    v41 = v36;
    *(_DWORD *)v23 = 68158723;
    LODWORD(v42) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 8) = 256;
    v37 = v13;
    v24 = *(_BYTE *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    swift_release();
    LOBYTE(v42) = v24;
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v23 + 11) = 2082;
    v25 = ConnectionID.debugDescription.getter(v39);
    v42 = sub_1A5903E24(v25, v26, &v41);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 21) = 2160;
    v42 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 31) = 2085;
    v42 = a1;
    v43 = HIDWORD(v35);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v27 = sub_1A594B4A8();
    v42 = sub_1A5903E24(v27, v28, &v41);
    sub_1A594C3CC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v20, (os_log_type_t)v38, "[%.*hhx] Closing connection %{public}s for mailbox '%{sensitive,mask.mailbox}s'.", (uint8_t *)v23, 0x29u);
    v14 = v36;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v14, -1, -1);
    MEMORY[0x1A85B1964](v23, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v18);
  swift_beginAccess();
  v29 = *v9;
  if ((*v9 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v30 = *(_QWORD *)(v29 + 8 * v11 + 32);
      swift_retain();
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_26;
  }
LABEL_23:
  v30 = MEMORY[0x1A85AEC04](v11);
LABEL_14:
  v31 = swift_endAccess();
  v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v30 + 552))(v31);
  swift_release();
  result = swift_beginAccess();
  v32 = *v9;
  if ((*v9 & 0xC000000000000001) != 0)
  {
LABEL_26:
    v33 = MEMORY[0x1A85AEC04](v11);
    goto LABEL_18;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v11 < *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v33 = *(_QWORD *)(v32 + 8 * v11 + 32);
    swift_retain();
LABEL_18:
    v34 = swift_endAccess();
    (*(void (**)(uint64_t))(*(_QWORD *)v33 + 520))(v34);
    swift_release();
    return v14;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A591946C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  __uint64_t v17;
  int v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[3];

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594AED8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x1E0DEF740], v8, v10);
  v14 = v13;
  LOBYTE(v13) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  if ((v13 & 1) != 0)
  {
    if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_collectDataTransferTimer))
    {
      __break(1u);
      goto LABEL_28;
    }
    swift_retain();
    RestartableTimer.start()();
    swift_release();
    v16 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
    swift_beginAccess();
    v17 = *(_QWORD *)(v16 + 8);
    v18 = *(unsigned __int8 *)(v16 + 16);
    LODWORD(v16) = *(unsigned __int8 *)(v16 + 17);
    v19 = static MonotonicTime.now()() >= v17;
    if ((_DWORD)v16 == 1 || ((v18 | v19) & 1) == 0)
    {
      v35 = (__uint64_t *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoffLoggingRateLimit);
      swift_beginAccess();
      swift_retain();
      sub_1A5928E38(v35, v3);
      swift_endAccess();
      return swift_release();
    }
    result = sub_1A591A1A8();
    if ((result & 1) != 0)
      return result;
    sub_1A5919DBC();
    v12 = (_QWORD *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    result = swift_beginAccess();
    if (!(*v12 >> 62))
    {
      if (*(_QWORD *)((*v12 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        return result;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v39 = sub_1A594CA38();
  result = swift_bridgeObjectRelease();
  if (v39 >= a2)
    return result;
LABEL_8:
  v20 = sub_1A5924F84(v3, v3);
  v21 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1A54E330C(v21, (uint64_t)v7, (uint64_t *)&unk_1EE798858);
  v22 = sub_1A594A764();
  v23 = *(_QWORD *)(v22 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v7, 1, v22);
  if ((_DWORD)result == 1)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    return result;
  }
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  swift_retain_n();
  v24 = sub_1A594A74C();
  v25 = sub_1A594C030();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v44 = v22;
    v27 = v26;
    v42 = swift_slowAlloc();
    v46[0] = v42;
    *(_DWORD *)v27 = 68158466;
    LODWORD(v45) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v27 + 8) = 256;
    v43 = v23;
    v28 = *(_BYTE *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    swift_release();
    LOBYTE(v45) = v28;
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v27 + 11) = 2082;
    v29 = ConnectionID.debugDescription.getter(*(unsigned int *)(v20
                                                               + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
    v45 = sub_1A5903E24(v29, v30, v46);
    sub_1A594C3CC();
    swift_release_n();
    v31 = swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 21) = 2048;
    v32 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 440))(v31);
    swift_release();
    v45 = v32;
    v23 = v43;
    sub_1A594C3CC();
    swift_release();
    _os_log_impl(&dword_1A4F90000, v24, v25, "[%.*hhx] Did create connection %{public}s [C%llu]", (uint8_t *)v27, 0x1Fu);
    v33 = v42;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v33, -1, -1);
    v34 = v27;
    v22 = v44;
    MEMORY[0x1A85B1964](v34, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v22);
  swift_beginAccess();
  v36 = swift_retain();
  MEMORY[0x1A85ADDB8](v36);
  if (*(_QWORD *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1A594B9D0();
  sub_1A594BA30();
  sub_1A594B988();
  v37 = swift_endAccess();
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 512))(v37);
  if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_checkForStallTimer))
    goto LABEL_29;
  swift_retain();
  RestartableTimer.start()();
  swift_release();
  if (!(*v12 >> 62))
  {
    if (*(_QWORD *)((*v12 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
      goto LABEL_20;
    return swift_release();
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v40 = sub_1A594CA38();
  swift_bridgeObjectRelease();
  if (v40 != 1)
    return swift_release();
LABEL_20:
  v38 = MEMORY[0x1A85B1A0C](v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engine);
  result = swift_release();
  if (v38)
  {
    *(_BYTE *)(v38 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_shouldLogForFirstConnection) = 1;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A5919A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5919DBC();
  v10 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1A54E330C(v10, (uint64_t)v9, (uint64_t *)&unk_1EE798858);
  v11 = sub_1A594A764();
  v12 = *(_QWORD *)(v11 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_retain();
    v14 = sub_1A594A74C();
    v15 = sub_1A594C000();
    if (os_log_type_enabled(v14, v15))
    {
      v27 = a3;
      v16 = swift_slowAlloc();
      *(_DWORD *)v16 = 68158208;
      LODWORD(v28) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v16 + 8) = 256;
      LOBYTE(v28) = *(_BYTE *)(v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      sub_1A594C3CC();
      swift_release();
      *(_WORD *)(v16 + 11) = 2048;
      v17 = (uint64_t *)(v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
      swift_beginAccess();
      if ((unint64_t)*v17 >> 62)
      {
        v26 = *v17;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v18 = sub_1A594CA38();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        v18 = *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_release();
      }
      v28 = v18;
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, v14, v15, "[%.*hhx] Pool has %ld connections.", (uint8_t *)v16, 0x15u);
      MEMORY[0x1A85B1964](v16, -1, -1);

      a3 = v27;
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    v19 = (unint64_t *)(v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    v20 = swift_beginAccess();
    v21 = *v19;
    MEMORY[0x1E0C80A78](v20);
    *(&v26 - 2) = a1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = sub_1A591A08C((uint64_t (*)(uint64_t *))sub_1A5926818, (uint64_t)(&v26 - 4), v21);
    v24 = v23;
    v25 = swift_bridgeObjectRelease();
    if ((v24 & 1) != 0)
      sub_1A591946C(v25, a3);
    return v22;
  }
  return result;
}

uint64_t sub_1A5919DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unsigned int EnumCaseMultiPayload;
  unint64_t v13;
  unint64_t *v14;
  uint64_t v15;
  unint64_t v16;

  v15 = type metadata accessor for ConnectionState();
  v1 = MEMORY[0x1E0C80A78](v15);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v14 - v4;
  v6 = (unint64_t *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  v7 = *v6;
  v16 = MEMORY[0x1E0DEE9D8];
  if (v7 >> 62)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A594CA38();
    v8 = result;
    if (result)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    *v6 = v13;
    return swift_bridgeObjectRelease();
  }
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (!v8)
    goto LABEL_16;
LABEL_3:
  if (v8 >= 1)
  {
    v14 = v6;
    v10 = 0;
    while (1)
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x1A85AEC04](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      (*(void (**)(void))(*(_QWORD *)v11 + 312))();
      sub_1A55034B8((uint64_t)v5, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload < 3)
      {
        sub_1A55034FC((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      }
      else if (EnumCaseMultiPayload - 3 < 2)
      {
        sub_1A55034FC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
        swift_release();
        goto LABEL_7;
      }
      sub_1A55034FC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      sub_1A594C81C();
      sub_1A594C864();
      sub_1A594C870();
      sub_1A594C828();
LABEL_7:
      if (v8 == ++v10)
      {
        swift_bridgeObjectRelease();
        v13 = v16;
        v6 = v14;
        goto LABEL_17;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5919FE0(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = type metadata accessor for ConnectionState();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(**(_QWORD **)a1 + 312))(v3);
  LOBYTE(a1) = ConnectionState.canRunCommand(_:)();
  sub_1A55034FC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  return a1 & 1;
}

uint64_t sub_1A591A08C(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;

  if (a3 >> 62)
    goto LABEL_14;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = 0;
  if (v6)
  {
    while (1)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v8 = MEMORY[0x1A85AEC04](v7, a3);
      }
      else
      {
        v8 = *(_QWORD *)(a3 + 8 * v7 + 32);
        swift_retain();
      }
      v12 = v8;
      v9 = a1(&v12);
      swift_release();
      if (v3 || (v9 & 1) != 0)
        break;
      v10 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_14:
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v6 = sub_1A594CA38();
        swift_bridgeObjectRelease();
        v7 = 0;
        if (!v6)
          return v7;
      }
      else
      {
        ++v7;
        if (v10 == v6)
          return 0;
      }
    }
  }
  return v7;
}

uint64_t sub_1A591A1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v17;

  v1 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - v5;
  v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  v8 = *v7;
  if ((unint64_t)*v7 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain_n();
    v9 = sub_1A594CA38();
    if (v9)
      goto LABEL_3;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v9)
    {
LABEL_3:
      v10 = 4;
      do
      {
        v11 = v10 - 4;
        if ((v8 & 0xC000000000000001) != 0)
        {
          v12 = MEMORY[0x1A85AEC04](v10 - 4, v8);
          v13 = __OFADD__(v11, 1);
          v14 = v10 - 3;
          if (v13)
            goto LABEL_14;
        }
        else
        {
          v12 = *(_QWORD *)(v8 + 8 * v10);
          swift_retain();
          v13 = __OFADD__(v11, 1);
          v14 = v10 - 3;
          if (v13)
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        (*(void (**)(void))(*(_QWORD *)v12 + 312))();
        sub_1A55034B8((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if ((EnumCaseMultiPayload - 3) >= 3)
        {
          if (EnumCaseMultiPayload != 2)
          {
            sub_1A55034FC((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
            sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
            swift_bridgeObjectRelease_n();
            swift_release();
            return 1;
          }
          sub_1A55034FC((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
        }
        sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
        swift_release();
        ++v10;
      }
      while (v14 != v9);
    }
  }
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t sub_1A591A3B4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;
  char v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _BYTE *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v7 = v5;
  v12 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5919DBC();
  v15 = (unint64_t *)(v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  if ((a2 & 0x100000000) != 0)
  {
    swift_beginAccess();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v19 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v6 = sub_1A5925E98(v19, a3, a4);
    v21 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
    {
      sub_1A591A82C(a3, a4, a5);
      swift_release();
    }
    return v6;
  }
  swift_beginAccess();
  v16 = *v15;
  v36 = v14;
  if (v16 >> 62)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A594CA38();
    v17 = result;
    if (!result)
      goto LABEL_20;
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v17)
      goto LABEL_20;
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
    v22 = *(_DWORD *)(MEMORY[0x1A85AEC04](0, v16) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
    result = swift_unknownObjectRelease();
    if (v22 == (_DWORD)a2)
      goto LABEL_6;
  }
  else if (*(_DWORD *)(*(_QWORD *)(v16 + 32) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) == (_DWORD)a2)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v17 != 1)
  {
    v23 = 5;
    while (1)
    {
      v6 = v23 - 4;
      if ((v16 & 0xC000000000000001) != 0)
      {
        v24 = *(_DWORD *)(MEMORY[0x1A85AEC04](v23 - 4, v16) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
        result = swift_unknownObjectRelease();
        if (v24 == (_DWORD)a2)
          goto LABEL_26;
      }
      else if (*(_DWORD *)(*(_QWORD *)(v16 + 8 * v23) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) == (_DWORD)a2)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        return v6;
      }
      v25 = v23 - 3;
      if (__OFADD__(v6, 1))
        break;
      ++v23;
      if (v25 == v17)
        goto LABEL_20;
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  v26 = v7 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  v27 = (uint64_t)v36;
  sub_1A54E330C(v26, (uint64_t)v36, (uint64_t *)&unk_1EE798858);
  v28 = sub_1A594A764();
  v29 = *(_QWORD *)(v28 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28);
  if ((_DWORD)result != 1)
  {
    swift_retain();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v30 = sub_1A594A74C();
    v31 = sub_1A594C018();
    if (os_log_type_enabled(v30, v31))
    {
      v6 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v38 = v32;
      *(_DWORD *)v6 = 68158210;
      LODWORD(v37) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v6 + 8) = 256;
      LOBYTE(v37) = *(_BYTE *)(v7 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      sub_1A594C3CC();
      swift_release();
      *(_WORD *)(v6 + 11) = 2082;
      v33 = ConnectionID.debugDescription.getter(a2);
      v37 = sub_1A5903E24(v33, v34, &v38);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v30, v31, "[%.*hhx] Attempt to send on connection %{public}s -- but it does not exist.", (uint8_t *)v6, 0x15u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v32, -1, -1);
      v27 = (uint64_t)v36;
      MEMORY[0x1A85B1964](v6, -1, -1);
    }
    else
    {
      swift_release();
    }

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    sub_1A5926834();
    swift_allocError();
    *v35 = 0;
    swift_willThrow();
    return v6;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A591A82C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int EnumCaseMultiPayload;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;

  v4 = v3;
  v76 = a3;
  v7 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v74 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v74 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v16);
  v84 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t *)(v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v19 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v80 = a2;
  v20 = sub_1A5925A90(v19, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v20)
  {
    v21 = v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    v22 = (uint64_t)v84;
    sub_1A54E330C(v21, (uint64_t)v84, (uint64_t *)&unk_1EE798858);
    v23 = sub_1A594A764();
    v24 = *(_QWORD *)(v23 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23);
    if ((_DWORD)result == 1)
      goto LABEL_89;
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v26 = sub_1A594A74C();
    v27 = sub_1A594C000();
    v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      v29 = swift_slowAlloc();
      v83 = swift_slowAlloc();
      v87 = v83;
      *(_DWORD *)v29 = 68158723;
      LODWORD(v85) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v29 + 8) = 256;
      LODWORD(v82) = v28;
      v30 = a1;
      v31 = *(_BYTE *)(v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      swift_release();
      LOBYTE(v85) = v31;
      sub_1A594C3CC();
      swift_release();
      *(_WORD *)(v29 + 11) = 2160;
      v85 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v29 + 21) = 2085;
      v85 = v30;
      v86 = v80;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v32 = sub_1A594B4A8();
      v85 = sub_1A5903E24(v32, v33, &v87);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 31) = 2082;
      v34 = ConnectionID.debugDescription.getter(*(unsigned int *)(v20
                                                                 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
      v85 = sub_1A5903E24(v34, v35, &v87);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v26, (os_log_type_t)v82, "[%.*hhx] Mailbox '%{sensitive,mask.mailbox}s' is selected (or in progress) on connection %{public}s.", (uint8_t *)v29, 0x29u);
      v36 = v83;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v36, -1, -1);
      MEMORY[0x1A85B1964](v29, -1, -1);

    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v84, v23);
    return v20;
  }
  v84 = v15;
  v78 = v9;
  v79 = v12;
  v77 = v7;
  if ((unint64_t)*v18 >> 62)
    goto LABEL_33;
  v37 = *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v37)
  {
    v38 = 0;
    while (v37 != v38)
    {
      swift_beginAccess();
      v39 = *v18;
      v40 = (uint64_t)v84;
      if ((*v18 & 0xC000000000000001) != 0)
      {
        v41 = MEMORY[0x1A85AEC04](v38);
      }
      else
      {
        if (v38 >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_32;
        v41 = *(_QWORD *)(v39 + 8 * v38 + 32);
        swift_retain();
      }
      v42 = swift_endAccess();
      (*(void (**)(uint64_t))(*(_QWORD *)v41 + 312))(v42);
      swift_release();
      v43 = ConnectionState.isReadyForCommandsWithoutMailboxSelection.getter();
      sub_1A55034FC(v40, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      if ((v43 & 1) != 0)
      {
        v44 = sub_1A591B26C(v38, v4, a1, v80);
        if (v44)
          return v44;
      }
      if (v37 == ++v38)
        goto LABEL_20;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v37 = sub_1A594CA38();
    swift_bridgeObjectRelease();
    if (v37 < 0)
    {
      __break(1u);
LABEL_35:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v45 = sub_1A594CA38();
      v74 = a1;
      v75 = v4;
      if (!v45)
        goto LABEL_36;
      goto LABEL_22;
    }
  }
LABEL_20:
  v37 = *v18;
  if ((unint64_t)*v18 >> 62)
    goto LABEL_35;
  v45 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v74 = a1;
  v75 = v4;
  if (!v45)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    v47 = MEMORY[0x1E0DEE9D8];
    goto LABEL_37;
  }
LABEL_22:
  v88 = MEMORY[0x1E0DEE9D8];
  result = sub_1A5923CF0(0, v45 & ~(v45 >> 63), 0);
  if (v45 < 0)
    goto LABEL_88;
  v46 = 0;
  v47 = v88;
  do
  {
    if ((v37 & 0xC000000000000001) != 0)
    {
      v48 = *(_DWORD *)(MEMORY[0x1A85AEC04](v46, v37) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      swift_unknownObjectRelease();
    }
    else
    {
      v48 = *(_DWORD *)(*(_QWORD *)(v37 + 8 * v46 + 32) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
    }
    v88 = v47;
    v50 = *(_QWORD *)(v47 + 16);
    v49 = *(_QWORD *)(v47 + 24);
    if (v50 >= v49 >> 1)
    {
      sub_1A5923CF0(v49 > 1, v50 + 1, 1);
      v47 = v88;
    }
    ++v46;
    *(_QWORD *)(v47 + 16) = v50 + 1;
    *(_DWORD *)(v47 + 4 * v50 + 32) = v48;
  }
  while (v45 != v46);
  swift_bridgeObjectRelease();
LABEL_37:
  v51 = v76;
  v52 = ConnectionUsage.sortedIdleConnections(_:)(v47, *(_QWORD *)(v76 + 24), *(_QWORD *)(v76 + 32));
  result = swift_bridgeObjectRelease();
  v83 = *(_QWORD *)(v52 + 16);
  if (!v83)
  {
    v73 = swift_bridgeObjectRelease();
LABEL_79:
    sub_1A591946C(v73, *(_QWORD *)(v51 + 8));
    return 0;
  }
  v53 = 0;
  v82 = v52 + 32;
  v81 = v52;
  while (v53 < *(_QWORD *)(v52 + 16))
  {
    v54 = *(_DWORD *)(v82 + 4 * v53);
    v55 = *v18;
    if ((unint64_t)*v18 >> 62)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      result = sub_1A594CA38();
      v56 = result;
      if (!result)
        goto LABEL_39;
    }
    else
    {
      v56 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (!v56)
        goto LABEL_39;
    }
    if ((v55 & 0xC000000000000001) != 0)
    {
      v58 = *(_DWORD *)(MEMORY[0x1A85AEC04](0, v55) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      result = swift_unknownObjectRelease();
      if (v58 != v54)
      {
LABEL_50:
        if (v56 != 1)
        {
          v59 = 5;
          while (1)
          {
            v57 = v59 - 4;
            if ((v55 & 0xC000000000000001) != 0)
            {
              v60 = *(_DWORD *)(MEMORY[0x1A85AEC04](v59 - 4, v55)
                              + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
              result = swift_unknownObjectRelease();
              if (v60 == v54)
                goto LABEL_59;
            }
            else if (*(_DWORD *)(*(_QWORD *)(v55 + 8 * v59) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) == v54)
            {
LABEL_59:
              swift_bridgeObjectRelease();
              goto LABEL_60;
            }
            v61 = v59 - 3;
            if (__OFADD__(v57, 1))
              break;
            ++v59;
            if (v61 == v56)
              goto LABEL_39;
          }
          __break(1u);
LABEL_82:
          v20 = result;
          swift_bridgeObjectRelease();
          return v20;
        }
LABEL_39:
        result = swift_bridgeObjectRelease();
        goto LABEL_40;
      }
    }
    else if (*(_DWORD *)(*(_QWORD *)(v55 + 32) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v54)
    {
      goto LABEL_50;
    }
    swift_bridgeObjectRelease();
    v57 = 0;
LABEL_60:
    result = swift_beginAccess();
    v62 = *v18;
    if ((*v18 & 0xC000000000000001) != 0)
    {
      v63 = MEMORY[0x1A85AEC04](v57);
    }
    else
    {
      if ((v57 & 0x8000000000000000) != 0)
        goto LABEL_84;
      if (v57 >= *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_85;
      v63 = *(_QWORD *)(v62 + 8 * v57 + 32);
      swift_retain();
    }
    v64 = swift_endAccess();
    v65 = (uint64_t)v79;
    (*(void (**)(uint64_t))(*(_QWORD *)v63 + 312))(v64);
    swift_release();
    v66 = (uint64_t)v78;
    sub_1A55034B8(v65, (uint64_t)v78, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload - 3 < 3)
      goto LABEL_67;
    if (EnumCaseMultiPayload < 2)
    {
      sub_1A55034FC(v66, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      v65 = (uint64_t)v79;
LABEL_67:
      result = sub_1A55034FC(v65, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      goto LABEL_40;
    }
    sub_1A55034FC(v66, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    sub_1A55034FC((uint64_t)v79, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    result = swift_beginAccess();
    v68 = *v18;
    if ((*v18 & 0xC000000000000001) != 0)
    {
      v69 = MEMORY[0x1A85AEC04](v57);
    }
    else
    {
      if ((v57 & 0x8000000000000000) != 0)
        goto LABEL_86;
      if (v57 >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_87;
      v69 = *(_QWORD *)(v68 + 8 * v57 + 32);
      swift_retain();
    }
    v70 = swift_endAccess();
    v71 = (uint64_t)v84;
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 312))(v70);
    swift_release();
    v72 = ConnectionState.anyMailboxSelectionIsInProgress.getter();
    result = sub_1A55034FC(v71, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    if ((v72 & 1) == 0)
    {
      result = sub_1A591B26C(v57, v75, v74, v80);
      if (result)
        goto LABEL_82;
    }
LABEL_40:
    ++v53;
    v52 = v81;
    if (v53 == v83)
    {
      v73 = swift_bridgeObjectRelease();
      v51 = v76;
      goto LABEL_79;
    }
  }
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
  return result;
}

uint64_t sub_1A591B26C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;

  v8 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  v12 = *v11;
  if ((*v11 & 0xC000000000000001) == 0)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      v13 = *(_QWORD *)(v12 + 8 * a1 + 32);
      swift_retain();
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_20;
  }
  v13 = MEMORY[0x1A85AEC04](a1);
LABEL_5:
  swift_endAccess();
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v13 + 584))(a3, a4);
  swift_release();
  if ((v14 & 1) == 0)
    return 0;
  result = swift_beginAccess();
  v16 = *v11;
  if ((*v11 & 0xC000000000000001) == 0)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      v17 = *(_QWORD *)(v16 + 8 * a1 + 32);
      swift_retain();
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_23;
  }
LABEL_20:
  v17 = MEMORY[0x1A85AEC04](a1);
LABEL_10:
  swift_endAccess();
  v18 = a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1A54E330C(v18, (uint64_t)v10, (uint64_t *)&unk_1EE798858);
  v19 = sub_1A594A764();
  v20 = *(_QWORD *)(v19 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v19);
  if ((_DWORD)result != 1)
  {
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v21 = sub_1A594A74C();
    v22 = sub_1A594C000();
    v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      v24 = swift_slowAlloc();
      v35 = v20;
      v25 = v24;
      v34 = swift_slowAlloc();
      v39 = v34;
      *(_DWORD *)v25 = 68158723;
      LODWORD(v37) = 2;
      HIDWORD(v33) = v23;
      sub_1A594C3CC();
      *(_WORD *)(v25 + 8) = 256;
      v36 = v19;
      v26 = *(_BYTE *)(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      swift_release();
      LOBYTE(v37) = v26;
      sub_1A594C3CC();
      swift_release();
      *(_WORD *)(v25 + 11) = 2160;
      v37 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v25 + 21) = 2085;
      v37 = a3;
      v38 = a4;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v27 = sub_1A594B4A8();
      v37 = sub_1A5903E24(v27, v28, &v39);
      v19 = v36;
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 31) = 2082;
      v29 = ConnectionID.debugDescription.getter(*(unsigned int *)(v17
                                                                 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
      v37 = sub_1A5903E24(v29, v30, &v39);
      sub_1A594C3CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v21, BYTE4(v33), "[%.*hhx] Will select mailbox '%{sensitive,mask.mailbox}s' on connection %{public}s for new mailbox affinity.", (uint8_t *)v25, 0x29u);
      v31 = v34;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v31, -1, -1);
      v32 = v25;
      v20 = v35;
      MEMORY[0x1A85B1964](v32, -1, -1);

    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v19);
    return v17;
  }
LABEL_23:
  __break(1u);
  return result;
}

void sub_1A591B6E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[3];
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796498);
  MEMORY[0x1E0C80A78](v3);
  v18 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798520);
  MEMORY[0x1E0C80A78](v5);
  v16[2] = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A594ACEC();
  v16[1] = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A594AA40();
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ConnectionStatus(0);
  v22 = *(_QWORD *)(v12 - 8);
  v23 = v12;
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v21 = (char *)v16 - v14;
  sub_1A55034B8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  v15 = (char *)sub_1A591B8F4 + 4 * aBq[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A591B8F4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1A55034FC(v1, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[8] + 56))(v0[10], 1, 1, v0[9]);
}

void sub_1A591BBEC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v4 = type metadata accessor for ConnectionState();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(**(_QWORD **)a1 + 312))(v5);
  sub_1A591B6E8((uint64_t)v7, a2);
}

uint64_t sub_1A591BC6C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796498);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798520);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A594ACEC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A591C11C(v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1A5510284((uint64_t)v10, (uint64_t *)&unk_1EE798EC0);
    v15 = type metadata accessor for ConnectionStatus.Error(0);
    return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v14, v11);
    v17 = type metadata accessor for ConnectionStatus.Error.Details(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 0, 1, v17);
    v18 = sub_1A594A0EC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
    ConnectionStatus.Error.init(kind:details:backedOffUntil:)(0, (uint64_t)v7, (uint64_t)v4, a1);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v19 = type metadata accessor for ConnectionStatus.Error(0);
    return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 0, 1, v19);
  }
}

uint64_t sub_1A591BEA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  NSObject *v10;
  os_log_type_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD v16[2];
  int v17;
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1A54E330C(v6, (uint64_t)v5, (uint64_t *)&unk_1EE798858);
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_retain();
    v10 = sub_1A594A74C();
    v11 = sub_1A594C000();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (_DWORD *)swift_slowAlloc();
      v16[1] = v1;
      v13 = v12;
      *v12 = 68158208;
      v17 = 2;
      sub_1A594C3CC();
      *((_WORD *)v13 + 4) = 256;
      LOBYTE(v17) = *(_BYTE *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      sub_1A594C3CC();
      swift_release();
      *(_WORD *)((char *)v13 + 11) = 2048;
      v14 = (uint64_t *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff);
      swift_beginAccess();
      v15 = *v14;
      swift_release();
      v18 = v15;
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, v10, v11, "[%.*hhx] Backed off (failure count %ld). Not creating a new connection.", (uint8_t *)v13, 0x15u);
      MEMORY[0x1A85B1964](v13, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  return result;
}

void sub_1A591C0FC(_QWORD *a1)
{
  sub_1A590890C(a1);
}

uint64_t sub_1A591C11C@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  int v77;
  char *v78;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  char *v86;
  char *v87;
  void (*v88)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t (*v91)(uint64_t, uint64_t, uint64_t);
  int v92;
  char *v93;
  uint64_t v94;
  char *v95;
  unint64_t v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  char *v99;
  char *v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t);
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  _QWORD *v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int (*v131)(char *, uint64_t);
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v119 = a1;
  v2 = sub_1A594ACEC();
  v3 = *(_QWORD *)(v2 - 8);
  v124 = v2;
  v125 = v3;
  MEMORY[0x1E0C80A78](v2);
  v112 = (char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v111 - v6;
  MEMORY[0x1E0C80A78](v8);
  v121 = (char *)&v111 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  MEMORY[0x1E0C80A78](v10);
  v116 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v114 = (char *)&v111 - v13;
  MEMORY[0x1E0C80A78](v14);
  v115 = (char *)&v111 - v15;
  MEMORY[0x1E0C80A78](v16);
  v123 = (char *)&v111 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798E98);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v111 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_1A594AA40();
  v21 = *(_QWORD *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129);
  v113 = (char *)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v118 = (char *)&v111 - v24;
  MEMORY[0x1E0C80A78](v25);
  v122 = (char *)&v111 - v26;
  MEMORY[0x1E0C80A78](v27);
  v128 = (char *)&v111 - v28;
  MEMORY[0x1E0C80A78](v29);
  v132 = (char *)&v111 - v30;
  MEMORY[0x1E0C80A78](v31);
  v126 = (char *)&v111 - v32;
  MEMORY[0x1E0C80A78](v33);
  v127 = (char *)&v111 - v34;
  v131 = (unsigned int (*)(char *, uint64_t))type metadata accessor for ConnectionState();
  v35 = *((_QWORD *)v131 - 1);
  MEMORY[0x1E0C80A78](v131);
  v37 = (char *)&v111 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v38);
  v135 = (uint64_t)&v111 - v39;
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)&v111 - v41;
  v43 = (_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  v44 = *v43;
  v45 = *v43 >> 62;
  v134 = v21;
  if (v45)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v21 = v134;
    v46 = sub_1A594CA38();
  }
  else
  {
    v46 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v133 = v37;
  v117 = v7;
  v120 = v43;
  if (v46)
  {
    v136 = MEMORY[0x1E0DEE9D8];
    result = sub_1A5923C9C(0, v46 & ~(v46 >> 63), 0);
    if (v46 < 0)
    {
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    v130 = v46;
    v48 = 0;
    v49 = v136;
    v50 = v44 & 0xC000000000000001;
    v51 = v20;
    v52 = v44;
    do
    {
      if (v50)
      {
        v53 = MEMORY[0x1A85AEC04](v48, v44);
      }
      else
      {
        v53 = *(_QWORD *)(v44 + 8 * v48 + 32);
        swift_retain();
      }
      (*(void (**)(void))(*(_QWORD *)v53 + 312))();
      swift_release();
      v136 = v49;
      v55 = *(_QWORD *)(v49 + 16);
      v54 = *(_QWORD *)(v49 + 24);
      if (v55 >= v54 >> 1)
      {
        sub_1A5923C9C(v54 > 1, v55 + 1, 1);
        v49 = v136;
      }
      ++v48;
      *(_QWORD *)(v49 + 16) = v55 + 1;
      sub_1A54E3394((uint64_t)v42, v49+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v55, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      v44 = v52;
    }
    while (v130 != v48);
    v20 = v51;
    swift_bridgeObjectRelease();
    v37 = v133;
    v21 = v134;
  }
  else
  {
    swift_bridgeObjectRelease();
    v49 = MEMORY[0x1E0DEE9D8];
  }
  v56 = *(_QWORD *)(v49 + 16);
  v57 = v129;
  if (v56)
  {
    v58 = v49 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
    v130 = *(_QWORD *)(v35 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v59 = MEMORY[0x1E0DEE9D8];
    v60 = v135;
    do
    {
      sub_1A55034B8(v58, v60, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      sub_1A55034B8(v60, (uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1A55034FC((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
        v61 = 1;
      }
      else
      {
        v62 = *(void (**)(char *, char *, uint64_t))(v134 + 32);
        v63 = v126;
        v62(v126, v133, v57);
        v64 = v63;
        v37 = v133;
        v62(v20, v64, v57);
        v21 = v134;
        v61 = 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v20, v61, 1, v57);
      sub_1A55034FC(v135, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v57) == 1)
      {
        sub_1A5510284((uint64_t)v20, (uint64_t *)&unk_1EE798E98);
      }
      else
      {
        v65 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
        v66 = v127;
        v65(v127, v20, v57);
        v65(v132, v66, v57);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v59 = sub_1A54F11CC(0, *(_QWORD *)(v59 + 16) + 1, 1, v59, &qword_1EE79B230, (uint64_t (*)(_QWORD))MEMORY[0x1E0CCE5E0]);
        v68 = *(_QWORD *)(v59 + 16);
        v67 = *(_QWORD *)(v59 + 24);
        if (v68 >= v67 >> 1)
          v59 = sub_1A54F11CC(v67 > 1, v68 + 1, 1, v59, &qword_1EE79B230, (uint64_t (*)(_QWORD))MEMORY[0x1E0CCE5E0]);
        *(_QWORD *)(v59 + 16) = v68 + 1;
        v21 = v134;
        v69 = v59
            + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))
            + *(_QWORD *)(v134 + 72) * v68;
        v57 = v129;
        v65((char *)v69, v132, v129);
        v37 = v133;
      }
      v58 += v130;
      --v56;
    }
    while (v56);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v59 = MEMORY[0x1E0DEE9D8];
  }
  v70 = *(_QWORD *)(v59 + 16);
  v71 = v125;
  if (*v120 >> 62)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v72 = sub_1A594CA38();
    swift_bridgeObjectRelease();
  }
  else
  {
    v72 = *(_QWORD *)((*v120 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v70 != v72)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v119, 1, 1, v124);
    return swift_bridgeObjectRelease();
  }
  v73 = v124;
  v135 = *(_QWORD *)(v59 + 16);
  if (!v135)
  {
    v88 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56);
LABEL_43:
    v93 = v119;
    v94 = 1;
LABEL_44:
    v88((uint64_t)v93, v94, 1, v73);
    return swift_bridgeObjectRelease();
  }
  v74 = 0;
  v75 = v59 + ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
  v76 = *(char **)(v134 + 16);
  v132 = *(char **)(v134 + 72);
  v133 = v76;
  v77 = *MEMORY[0x1E0CCE5C8];
  LODWORD(v130) = *MEMORY[0x1E0CCE5C8];
  while (1)
  {
    v78 = v128;
    v79 = (void (*)(char *, char *, uint64_t))v133;
    ((void (*)(char *, unint64_t, uint64_t))v133)(v128, v75, v57);
    v80 = v122;
    v79(v122, v78, v57);
    v81 = v134;
    v131 = *(unsigned int (**)(char *, uint64_t))(v134 + 88);
    if (v131(v80, v57) == v77)
    {
      (*(void (**)(char *, uint64_t))(v81 + 96))(v80, v57);
      v82 = v57;
      v83 = v125;
      v84 = *(void (**)(char *, char *, uint64_t))(v125 + 32);
      v85 = v80;
      v86 = v121;
      v84(v121, v85, v73);
      v87 = v123;
      v84(v123, v86, v73);
      v88 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56);
      v88((uint64_t)v87, 0, 1, v73);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v89 = *(void (**)(char *, uint64_t))(v81 + 8);
      v90 = (uint64_t)v87;
      v77 = v130;
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v89 = *(void (**)(char *, uint64_t))(v81 + 8);
      v89(v80, v57);
      v82 = v57;
      v83 = v125;
      v88 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v125 + 56);
      v90 = (uint64_t)v123;
      v88((uint64_t)v123, 1, 1, v73);
    }
    v89(v128, v82);
    swift_bridgeObjectRelease();
    v91 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
    v92 = v91(v90, 1, v73);
    result = sub_1A5510284(v90, (uint64_t *)&unk_1EE798EC0);
    if (v92 != 1)
      break;
    ++v74;
    v75 += (unint64_t)v132;
    v73 = v124;
    v57 = v129;
    if (v135 == v74)
      goto LABEL_43;
  }
  v73 = v124;
  if (v135 == v74)
    goto LABEL_43;
  if (v74 >= *(_QWORD *)(v59 + 16))
    goto LABEL_55;
  v95 = v118;
  v96 = v75;
  v97 = v129;
  v98 = (void (*)(char *, char *, uint64_t))v133;
  ((void (*)(char *, unint64_t, uint64_t))v133)(v118, v96, v129);
  v99 = v113;
  v98(v113, v95, v97);
  v100 = v99;
  if (v131(v99, v97) == v77)
  {
    (*(void (**)(char *, uint64_t))(v134 + 96))(v99, v97);
    v101 = v125;
    v102 = *(void (**)(char *, char *, uint64_t))(v125 + 32);
    v103 = v112;
    v102(v112, v100, v73);
    v104 = (uint64_t)v114;
    v102(v114, v103, v73);
    v105 = 0;
    v106 = (uint64_t)v116;
    v107 = (uint64_t)v115;
  }
  else
  {
    v89(v99, v97);
    v105 = 1;
    v101 = v125;
    v106 = (uint64_t)v116;
    v107 = (uint64_t)v115;
    v104 = (uint64_t)v114;
  }
  v88(v104, v105, 1, v73);
  v89(v118, v97);
  sub_1A55032A0(v104, v107, (uint64_t *)&unk_1EE798EC0);
  sub_1A54E330C(v107, v106, (uint64_t *)&unk_1EE798EC0);
  result = v91(v106, 1, v73);
  if ((_DWORD)result != 1)
  {
    v108 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 32);
    v109 = v117;
    v108(v117, v106, v73);
    sub_1A5510284(v107, (uint64_t *)&unk_1EE798EC0);
    v110 = v119;
    v108(v119, (uint64_t)v109, v73);
    v93 = v110;
    v94 = 0;
    goto LABEL_44;
  }
LABEL_56:
  __break(1u);
  return result;
}

uint64_t sub_1A591CBD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char v13;
  uint64_t v14;
  unsigned int v15;
  char v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v1 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  v5 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v6)
      goto LABEL_3;
LABEL_17:
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_18:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v9;
  }
  swift_bridgeObjectRetain_n();
  result = sub_1A594CA38();
  v6 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v6 >= 1)
  {
    v8 = 0;
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v10 = v5 & 0xC000000000000001;
    v23 = v5;
    v24 = v5 & 0xC000000000000001;
    v22 = v6;
    do
    {
      if (v10)
      {
        v11 = MEMORY[0x1A85AEC04](v8, v5);
      }
      else
      {
        v11 = *(_QWORD *)(v5 + 8 * v8 + 32);
        swift_retain();
      }
      v12 = *(void (**)(void))(*(_QWORD *)v11 + 312);
      v12();
      v13 = ConnectionState.isClosedOrCancelled.getter();
      v14 = sub_1A55034FC((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
      if ((v13 & 1) != 0)
      {
        swift_release();
      }
      else
      {
        v15 = *(_DWORD *)(v11 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 432))(v14) & 1;
        v12();
        v17 = ConnectionState.isActivelyConnectingOrAuthenticating.getter();
        sub_1A55034FC((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
        v18 = ConnectionIDsGroupedByState.Connection.init(id:constraint:state:)(v15, v16, (v17 & 1) == 0);
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_1A5923838(0, v9[2] + 1, 1, v9);
        v20 = v9[2];
        v19 = v9[3];
        v5 = v23;
        if (v20 >= v19 >> 1)
          v9 = sub_1A5923838((_QWORD *)(v19 > 1), v20 + 1, 1, v9);
        v6 = v22;
        v9[2] = v20 + 1;
        v21 = &v9[v20];
        *((_DWORD *)v21 + 8) = v18;
        *((_BYTE *)v21 + 36) = BYTE4(v18) & 1;
        *((_BYTE *)v21 + 37) = BYTE5(v18) & 1;
        v10 = v24;
      }
      ++v8;
    }
    while (v6 != v8);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A591CE58(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  double *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD v52[6];
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[44];

  v2 = v1;
  v55 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v55);
  v57 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v52 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (uint64_t)v52 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v56 = (char *)v52 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v59 = (char *)v52 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v58 = (char *)v52 - v20;
  MEMORY[0x1E0C80A78](v19);
  v65 = (uint64_t)v52 - v21;
  v22 = sub_1A594AED8();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (uint64_t)v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(void **)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *(_QWORD *)v25 = v26;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x1E0DEF740], v22);
  v27 = v26;
  LOBYTE(v26) = sub_1A594AEF0();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v28 = (double *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_pendingCancel);
  swift_beginAccess();
  v29 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_pendingCancelTimer);
  if (*(_QWORD *)(*(_QWORD *)v28 + 16))
  {
    if (v29)
    {
      swift_retain();
      RestartableTimer.start()();
      goto LABEL_7;
    }
    __break(1u);
LABEL_30:
    __break(1u);
    JUMPOUT(0x1A591DF94);
  }
  if (!v29)
    goto LABEL_30;
  swift_retain();
  RestartableTimer.stop()();
LABEL_7:
  swift_release();
  v30 = v28[1];
  v31 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v32 = sub_1A5925850(v31, a1, v30);
  v33 = sub_1A5925E28(v32);
  swift_bridgeObjectRelease();
  a1 = v33;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v33 + 16))
    return swift_bridgeObjectRelease();
  v34 = (uint64_t *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  v25 = *v34;
  if (!((unint64_t)*v34 >> 62))
  {
    v35 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v35)
    {
LABEL_10:
      v52[2] = v14;
      v52[3] = v11;
      v52[4] = v8;
      v54 = OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID;
      v63 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
      v64 = v25 & 0xC000000000000001;
      swift_beginAccess();
      v14 = 4;
      *(_QWORD *)&v36 = 68158210;
      v53 = v36;
      v52[5] = MEMORY[0x1E0DEE9B8] + 8;
      v66 = v2;
      v8 = v56;
      v61 = v25;
      v62 = a1;
      v60 = v35;
      while (1)
      {
        v38 = v14 - 4;
        if (v64)
        {
          v25 = MEMORY[0x1A85AEC04](v14 - 4, v25);
          v39 = v14 - 3;
          if (__OFADD__(v38, 1))
            goto LABEL_24;
        }
        else
        {
          v25 = *(_QWORD *)(v25 + 8 * v14);
          swift_retain();
          v39 = v14 - 3;
          if (__OFADD__(v38, 1))
          {
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        v68 = v39;
        v67 = OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id;
        if (!sub_1A54EA8D0(*(_DWORD *)(v25 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id), a1))
        {
          (*(void (**)(void))(*(_QWORD *)v25 + 312))();
          v50 = (char *)&loc_1A591D410 + dword_1A591DF94[swift_getEnumCaseMultiPayload()];
          __asm { BR              X9 }
        }
        v40 = v65;
        sub_1A54E330C(v63, v65, (uint64_t *)&unk_1EE798858);
        v11 = (char *)sub_1A594A764();
        v41 = *((_QWORD *)v11 - 1);
        if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v41 + 48))(v40, 1, v11) == 1)
        {
          __break(1u);
          JUMPOUT(0x1A591DF74);
        }
        swift_retain_n();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        swift_retain_n();
        v42 = sub_1A594A74C();
        v43 = sub_1A594C030();
        if (os_log_type_enabled(v42, v43))
        {
          v44 = swift_slowAlloc();
          v45 = swift_slowAlloc();
          v69[0] = v45;
          *(_DWORD *)v44 = v53;
          *(_DWORD *)(v44 + 4) = 2;
          *(_WORD *)(v44 + 8) = 256;
          v46 = *(_BYTE *)(v66 + v54);
          swift_release();
          *(_BYTE *)(v44 + 10) = v46;
          swift_release();
          *(_WORD *)(v44 + 11) = 2082;
          v47 = ConnectionID.debugDescription.getter(*(unsigned int *)(v25 + v67));
          *(_QWORD *)(v44 + 13) = sub_1A5903E24(v47, v48, v69);
          swift_release_n();
          v2 = v66;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v42, v43, "[%.*hhx] Cancelling connection %{public}s.", (uint8_t *)v44, 0x15u);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v45, -1, -1);
          v49 = v44;
          v8 = v56;
          MEMORY[0x1A85B1964](v49, -1, -1);

        }
        else
        {
          swift_release_n();

          swift_release_n();
        }
        v37 = (*(uint64_t (**)(uint64_t, char *))(v41 + 8))(v65, v11);
        (*(void (**)(uint64_t))(*(_QWORD *)v25 + 520))(v37);
        swift_release();
        a1 = v62;
        v25 = v61;
        ++v14;
        if (v68 == v60)
          goto LABEL_27;
      }
    }
    goto LABEL_27;
  }
LABEL_26:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v35 = sub_1A594CA38();
  if (v35)
    goto LABEL_10;
LABEL_27:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1A5919DBC();
}

uint64_t sub_1A591DFAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = v1;
  v4 = OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connectionStateDidChange;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connectionStateDidChange) = 0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v5 = swift_retain();
  sub_1A59262E0(v5, a1);
  swift_bridgeObjectRelease();
  result = swift_release();
  if (*(_BYTE *)(v2 + v4) == 1)
  {
    result = MEMORY[0x1A85B1A0C](v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engine);
    if (result)
    {
      sub_1A590C334();
      result = swift_unknownObjectRelease();
    }
    *(_BYTE *)(v2 + v4) = 0;
  }
  return result;
}

_QWORD *sub_1A591E03C(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  _QWORD *result;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  __int16 v61;
  int v62;
  int v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int16 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[4];
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _OWORD v81[2];
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v4);
  v73 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798568);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v72 - v13;
  v15 = sub_1A594AED8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (uint64_t *)((char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = *(void **)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v16 + 104))(v19, *MEMORY[0x1E0DEF740], v15, v17);
  v21 = v20;
  LOBYTE(v20) = sub_1A594AEF0();
  result = (_QWORD *)(*(uint64_t (**)(_QWORD *, uint64_t))(v16 + 8))(v19, v15);
  if ((v20 & 1) == 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  sub_1A5523130((_QWORD *)a1 + 1, &v77);
  result = sub_1A5523130(&v77, &v85);
  if (v85 == 0x8000000000000010)
  {
    *(_BYTE *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connectionStateDidChange) = 1;
    return result;
  }
  sub_1A5523130(&v77, &v84);
  if (v84 >> 60 == 1)
    return (_QWORD *)sub_1A591EBAC(a1);
  v23 = (unint64_t *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  v24 = *v23;
  v25 = *((_QWORD *)a1 + 3);
  v75 = *((_QWORD *)a1 + 4);
  v76 = v25;
  v26 = *a1;
  sub_1A54FCA28((uint64_t)&v76);
  sub_1A54FCA28((uint64_t)&v75);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A592687C(&v77);
  v27 = sub_1A5925C24(v24, v26);
  sub_1A59268A4(&v77);
  sub_1A54F81BC((uint64_t)&v76);
  sub_1A54F81BC((uint64_t)&v75);
  v28 = swift_bridgeObjectRelease();
  if (v27)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v27 + 312))(v28);
    sub_1A55034B8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload - 3 >= 3)
    {
      if (EnumCaseMultiPayload >= 2)
      {
        sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
        sub_1A55034FC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
        sub_1A5523130(&v77, &v83);
        if (v83 >> 60)
        {
          sub_1A5523130(&v77, v74);
          v48 = v74[0];
          if ((unint64_t)v74[0] >> 60 == 2)
          {
            v74[0] &= 0xFFFFFFFFFFFFFFFuLL;
            v49 = *(_QWORD *)(v48 + 16);
            v50 = *(unsigned int *)(v48 + 24);
            v52 = *(_QWORD *)(v48 + 32);
            v51 = *(_QWORD *)(v48 + 40);
            v53 = *(unsigned int *)(v48 + 48);
            v54 = *(unsigned __int8 *)(v48 + 52);
            v55 = *(_QWORD *)(v48 + 56);
            v56 = *(unsigned int *)(v48 + 64);
            v57 = *(unsigned __int8 *)(v48 + 68);
            v58 = *(unsigned int *)(v48 + 72);
            v59 = *(unsigned __int8 *)(v48 + 76);
            v60 = *(_QWORD *)(v48 + 80);
            v61 = *(unsigned __int8 *)(v48 + 88);
            v62 = *(unsigned __int8 *)(v48 + 89);
            v63 = *(unsigned __int8 *)(v48 + 90);
            v64 = v54 == 0;
            v65 = 0x100000000;
            if (v64)
              v66 = 0;
            else
              v66 = 0x100000000;
            v67 = v66 | v53;
            if (v57)
              v68 = 0x100000000;
            else
              v68 = 0;
            v69 = v68 | v56;
            if (!v59)
              v65 = 0;
            v70 = v65 | v58;
            if (v62)
              v71 = 256;
            else
              v71 = 0;
            *(_QWORD *)&v78 = v49;
            *((_QWORD *)&v78 + 1) = v50;
            *(_QWORD *)&v79 = v52;
            *((_QWORD *)&v79 + 1) = v51;
            *(_QWORD *)&v80 = v67;
            *((_QWORD *)&v80 + 1) = v55;
            *(_QWORD *)&v81[0] = v69;
            *((_QWORD *)&v81[0] + 1) = v70;
            *(_QWORD *)&v81[1] = v60;
            BYTE10(v81[1]) = v63 != 0;
            WORD4(v81[1]) = v71 | v61;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A591F294((uint64_t)&v78, v26);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1A5523130(&v77, &v82);
            if (v82 == 0x8000000000000000)
            {
              v80 = 0u;
              memset(v81, 0, 27);
              v78 = 0u;
              v79 = 0u;
              sub_1A591F294((uint64_t)&v78, v26);
            }
          }
        }
        else
        {
          v43 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
          swift_beginAccess();
          *(_QWORD *)v43 = 0;
          *(_QWORD *)(v43 + 8) = 0;
          *(_WORD *)(v43 + 16) = 1;
          v44 = *(void (**)(uint64_t))(**(_QWORD **)(v2
                                                             + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoffTimer)
                                               + 208);
          v45 = swift_retain();
          v44(v45);
          swift_release();
          v46 = type metadata accessor for ConnectionStatus.Error(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v8, 1, 1, v46);
          v47 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_lastError;
          swift_beginAccess();
          sub_1A59268CC((uint64_t)v8, v47);
          swift_endAccess();
        }
        sub_1A591E828((__int128 *)a1);
        return (_QWORD *)swift_release();
      }
      sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    }
    sub_1A55034FC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    return (_QWORD *)swift_release();
  }
  v30 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  v31 = v73;
  sub_1A54E330C(v30, v73, (uint64_t *)&unk_1EE798858);
  v32 = sub_1A594A764();
  v33 = *(_QWORD *)(v32 - 8);
  result = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32);
  if ((_DWORD)result == 1)
    goto LABEL_36;
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A54FCA28((uint64_t)&v76);
  sub_1A54FCA28((uint64_t)&v75);
  sub_1A592687C(&v77);
  sub_1A54FCA28((uint64_t)&v76);
  sub_1A54FCA28((uint64_t)&v75);
  sub_1A592687C(&v77);
  v34 = sub_1A594A74C();
  v35 = sub_1A594C018();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc();
    v72 = v33;
    v37 = v36;
    v38 = swift_slowAlloc();
    v74[0] = v38;
    *(_DWORD *)v37 = 68158210;
    LODWORD(v83) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v37 + 8) = 256;
    v39 = *(_BYTE *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    swift_release();
    LOBYTE(v83) = v39;
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v37 + 11) = 2082;
    v40 = ConnectionID.debugDescription.getter(v26);
    v83 = sub_1A5903E24(v40, v41, v74);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A59268A4(&v77);
    sub_1A54F81BC((uint64_t)&v76);
    sub_1A54F81BC((uint64_t)&v75);
    sub_1A59268A4(&v77);
    sub_1A54F81BC((uint64_t)&v76);
    sub_1A54F81BC((uint64_t)&v75);
    _os_log_impl(&dword_1A4F90000, v34, v35, "[%.*hhx] Got callback for connection %{public}s but this connection is unknown to the pool.", (uint8_t *)v37, 0x15u);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v38, -1, -1);
    v42 = v37;
    v33 = v72;
    v31 = v73;
    MEMORY[0x1A85B1964](v42, -1, -1);

  }
  else
  {

    swift_release_n();
    sub_1A59268A4(&v77);
    sub_1A54F81BC((uint64_t)&v76);
    sub_1A54F81BC((uint64_t)&v75);
    sub_1A59268A4(&v77);
    sub_1A54F81BC((uint64_t)&v76);
    sub_1A54F81BC((uint64_t)&v75);
  }
  return (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
}

uint64_t sub_1A591E828(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _QWORD **v7;
  uint64_t v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  _BYTE v27[72];
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (_QWORD **)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_enqueuedEvents);
  swift_beginAccess();
  if (*v7)
  {
    swift_beginAccess();
    if (*v7)
    {
      sub_1A5523130((_QWORD *)a1 + 1, &v30);
      v8 = *((_QWORD *)a1 + 3);
      v28 = *((_QWORD *)a1 + 4);
      v29 = v8;
      v9 = *v7;
      sub_1A592687C(&v30);
      sub_1A54FCA28((uint64_t)&v29);
      sub_1A54FCA28((uint64_t)&v28);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v7 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v9 = sub_1A5923B7C(0, v9[2] + 1, 1, v9);
        *v7 = v9;
      }
      v12 = v9[2];
      v11 = v9[3];
      if (v12 >= v11 >> 1)
      {
        v9 = sub_1A5923B7C((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
        *v7 = v9;
      }
      v9[2] = v12 + 1;
      v13 = &v9[5 * v12];
      v14 = *a1;
      v15 = a1[1];
      v13[8] = *((_QWORD *)a1 + 4);
      *((_OWORD *)v13 + 2) = v14;
      *((_OWORD *)v13 + 3) = v15;
    }
    return swift_endAccess();
  }
  else
  {
    v17 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1A54E330C(v17, (uint64_t)v6, (uint64_t *)&unk_1EE798858);
    v18 = sub_1A594A764();
    v19 = *(_QWORD *)(v18 - 8);
    result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v20 = sub_1A594A74C();
      v21 = sub_1A594C018();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        *(_DWORD *)v22 = 68157952;
        LODWORD(v30) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v22 + 8) = 256;
        LOBYTE(v30) = *(_BYTE *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
        sub_1A594C3CC();
        swift_release();
        _os_log_impl(&dword_1A4F90000, v20, v21, "[%.*hhx] Trying to enqueue event outside withEnqueuedSend.", (uint8_t *)v22, 0xBu);
        MEMORY[0x1A85B1964](v22, -1, -1);
      }
      else
      {
        swift_release();
      }

      (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v6, v18);
      result = MEMORY[0x1A85B1A0C](v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engine);
      if (result)
      {
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B1C0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
        sub_1A5523130((_QWORD *)a1 + 1, &v30);
        v24 = *((_QWORD *)a1 + 3);
        v28 = *((_QWORD *)a1 + 4);
        v25 = v28;
        v29 = v24;
        v26 = a1[1];
        *(_OWORD *)(inited + 32) = *a1;
        *(_OWORD *)(inited + 48) = v26;
        *(_QWORD *)(inited + 64) = v25;
        sub_1A592687C(&v30);
        sub_1A54FCA28((uint64_t)&v29);
        sub_1A54FCA28((uint64_t)&v28);
        sub_1A590BD68(inited);
        swift_unknownObjectRelease();
        swift_setDeallocating();
        return swift_arrayDestroy();
      }
    }
  }
  return result;
}

__uint64_t sub_1A591EBAC(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __uint64_t result;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  char *v56;
  __int128 *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[4];
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;

  v3 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798568);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v53 - v10;
  v12 = type metadata accessor for ConnectionStatus.Error(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v53 - v17;
  sub_1A5523130((_QWORD *)a1 + 1, &v64);
  result = (__uint64_t)sub_1A5523130(&v64, &v65);
  if (v65 >> 60 == 1)
  {
    v56 = v8;
    v58 = v5;
    v65 &= 0xFFFFFFFFFFFFFFFuLL;
    v20 = *a1;
    v59 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A591F5EC(v59, v20);
    v21 = (unint64_t *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    swift_beginAccess();
    v22 = *v21;
    v23 = *((_QWORD *)a1 + 3);
    v24 = *((_QWORD *)a1 + 4);
    v57 = (__int128 *)a1;
    v62 = v24;
    v63 = v23;
    sub_1A54FCA28((uint64_t)&v63);
    sub_1A54FCA28((uint64_t)&v62);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A592687C(&v64);
    v55 = v20;
    v25 = sub_1A59261E0(v22, v20);
    v27 = v26;
    sub_1A59268A4(&v64);
    sub_1A54F81BC((uint64_t)&v63);
    sub_1A54F81BC((uint64_t)&v62);
    v28 = v1;
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
      swift_beginAccess();
      v29 = sub_1A55A2BD4(v25);
      v30 = swift_endAccess();
      v31 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v29 + 336))(v30);
      sub_1A590564C(v31, v11);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
      {
        sub_1A5510284((uint64_t)v11, &qword_1EE798568);
      }
      else
      {
        sub_1A54E3394((uint64_t)v11, (uint64_t)v15, type metadata accessor for ConnectionStatus.Error);
        sub_1A54E3394((uint64_t)v15, (uint64_t)v18, type metadata accessor for ConnectionStatus.Error);
        v32 = (uint64_t)v18;
        v33 = (uint64_t)v56;
        sub_1A54E3394(v32, (uint64_t)v56, type metadata accessor for ConnectionStatus.Error);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v33, 0, 1, v12);
        v34 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_lastError;
        swift_beginAccess();
        sub_1A59268CC(v33, v34);
        swift_endAccess();
      }
      v35 = (uint64_t)v58;
      v36 = v28 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
      swift_beginAccess();
      sub_1A54E330C(v36, v35, (uint64_t *)&unk_1EE798858);
      v37 = sub_1A594A764();
      v38 = *(_QWORD *)(v37 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v35, 1, v37);
      if ((_DWORD)result == 1)
      {
        __break(1u);
        return result;
      }
      swift_retain_n();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A54FCA28((uint64_t)&v63);
      sub_1A54FCA28((uint64_t)&v62);
      sub_1A592687C(&v64);
      sub_1A54FCA28((uint64_t)&v63);
      sub_1A54FCA28((uint64_t)&v62);
      sub_1A592687C(&v64);
      swift_retain();
      v39 = sub_1A594A74C();
      v40 = sub_1A594C030();
      if (os_log_type_enabled(v39, v40))
      {
        v56 = (char *)v38;
        v41 = swift_slowAlloc();
        v54 = swift_slowAlloc();
        v61[0] = v54;
        *(_DWORD *)v41 = 68158466;
        LODWORD(v60) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v41 + 8) = 256;
        LOBYTE(v60) = *(_BYTE *)(v28 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v41 + 11) = 2082;
        v42 = ConnectionID.debugDescription.getter(v55);
        v43 = v28;
        v60 = sub_1A5903E24(v42, v44, v61);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A59268A4(&v64);
        sub_1A54F81BC((uint64_t)&v63);
        sub_1A54F81BC((uint64_t)&v62);
        sub_1A59268A4(&v64);
        sub_1A54F81BC((uint64_t)&v63);
        sub_1A54F81BC((uint64_t)&v62);
        *(_WORD *)(v41 + 21) = 2048;
        if (*v21 >> 62)
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v45 = sub_1A594CA38();
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          v45 = *(_QWORD *)((*v21 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_release();
        }
        v60 = v45;
        sub_1A594C3CC();
        swift_release();
        _os_log_impl(&dword_1A4F90000, v39, v40, "[%.*hhx] Closing connection %{public}s. Remaining connection count: %ld.", (uint8_t *)v41, 0x1Fu);
        v46 = v54;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v46, -1, -1);
        MEMORY[0x1A85B1964](v41, -1, -1);

        v35 = (uint64_t)v58;
        v28 = v43;
        v38 = (uint64_t)v56;
      }
      else
      {

        swift_release_n();
        sub_1A59268A4(&v64);
        sub_1A54F81BC((uint64_t)&v63);
        sub_1A54F81BC((uint64_t)&v62);
        sub_1A59268A4(&v64);
        sub_1A54F81BC((uint64_t)&v63);
        sub_1A54F81BC((uint64_t)&v62);
        swift_release();
      }
      v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v35, v37);
      (*(void (**)(uint64_t))(*(_QWORD *)v29 + 520))(v47);
      sub_1A591E828(v57);
      swift_release();
    }
    v48 = CommandConnection.RecentErrors.backOffBehavior.getter(v59);
    result = swift_bridgeObjectRelease();
    if (v48 != 3)
    {
      v49 = v28 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
      swift_beginAccess();
      *(_QWORD *)v49 = sub_1A5901FC8(v48, *(_QWORD *)v49, *(_QWORD *)(v49 + 8), *(_BYTE *)(v49 + 16));
      *(_QWORD *)(v49 + 8) = v50;
      *(_BYTE *)(v49 + 16) = v51 & 1;
      *(_BYTE *)(v49 + 17) = v52 & 1;
      swift_endAccess();
      return sub_1A59216A8();
    }
  }
  return result;
}

uint64_t sub_1A591F294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1A54E330C(v9, (uint64_t)v8, (uint64_t *)&unk_1EE798858);
  v10 = sub_1A594A764();
  v11 = *(_QWORD *)(v10 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10);
  if ((_DWORD)result == 1)
    goto LABEL_16;
  swift_retain();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v13 = sub_1A594A74C();
  v14 = sub_1A594C000();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v27 = v11;
    v16 = v15;
    v26 = swift_slowAlloc();
    v29[0] = v26;
    *(_DWORD *)v16 = 68158210;
    LODWORD(v28) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 8) = 256;
    LOBYTE(v28) = *(_BYTE *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v16 + 11) = 2082;
    v17 = ConnectionID.debugDescription.getter(a2);
    v28 = sub_1A5903E24(v17, v18, v29);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v13, v14, "[%.*hhx] Mailbox selection changed on %{public}s.", (uint8_t *)v16, 0x15u);
    v19 = v26;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v19, -1, -1);
    v20 = v16;
    v11 = v27;
    MEMORY[0x1A85B1964](v20, -1, -1);
  }
  else
  {
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  v21 = (unint64_t *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  v22 = *v21;
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain_n();
    result = sub_1A594CA38();
    v23 = result;
    if (result)
      goto LABEL_7;
    return swift_bridgeObjectRelease_n();
  }
  v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain_n();
  if (!v23)
    return swift_bridgeObjectRelease_n();
LABEL_7:
  if (v23 >= 1)
  {
    v24 = 0;
    do
    {
      if ((v22 & 0xC000000000000001) != 0)
      {
        v25 = MEMORY[0x1A85AEC04](v24, v22);
      }
      else
      {
        v25 = *(_QWORD *)(v22 + 8 * v24 + 32);
        swift_retain();
      }
      ++v24;
      v28 = v25;
      sub_1A5921C58(&v28, a2, a1, v3);
      swift_release();
    }
    while (v23 != v24);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1A591F5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  unint64_t v70;
  uint64_t v71;
  NSObject *v72;
  Class isa;
  uint64_t result;
  NSObject *v75;
  os_log_type_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t (*v82)(char *, NSObject *);
  char *v83;
  NSObject *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (**v106)(uint64_t, uint64_t, uint64_t);
  NSObject *v107;
  os_log_type_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  os_log_t v122;
  void (*v123)(_QWORD, _QWORD, _QWORD);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  void (*v144)(_QWORD, _QWORD, _QWORD);
  uint64_t v145;
  char *v146;
  uint64_t v147;
  NSObject *v148;
  os_log_type_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  Class v171;
  uint64_t v172;
  uint64_t v173;
  NSObject *v174;
  os_log_type_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  Class v189;
  uint64_t v190;
  NSObject *v191;
  os_log_type_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  NSObject *v208;
  os_log_type_t v209;
  int v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  _QWORD *v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  void (*v222)(char *, uint64_t);
  uint64_t v223;
  char *v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t *v233;
  char *v234;
  NSObject *v235;
  os_log_type_t v236;
  int v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  _QWORD *v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  void (*v251)(char *, uint64_t);
  void (*v252)(char *, uint64_t);
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  char *v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t (**v278)(uint64_t, uint64_t);
  unint64_t v279;
  uint64_t v280[3];
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;

  v5 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798EC0);
  MEMORY[0x1E0C80A78](v5);
  v269 = (uint64_t)&v253 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v268 = (char *)&v253 - v8;
  v273 = sub_1A594ACEC();
  v276 = *(_QWORD *)(v273 - 8);
  MEMORY[0x1E0C80A78](v273);
  v265 = (char *)&v253 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v267 = (char *)&v253 - v11;
  MEMORY[0x1E0C80A78](v12);
  v261 = (char *)&v253 - v13;
  MEMORY[0x1E0C80A78](v14);
  v263 = (char *)&v253 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v253 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v264 = (uint64_t)&v253 - v20;
  MEMORY[0x1E0C80A78](v21);
  v266 = (uint64_t)&v253 - v22;
  MEMORY[0x1E0C80A78](v23);
  v275 = (uint64_t *)((char *)&v253 - v24);
  MEMORY[0x1E0C80A78](v25);
  v272 = (uint64_t)&v253 - v26;
  MEMORY[0x1E0C80A78](v27);
  v260 = (uint64_t)&v253 - v28;
  MEMORY[0x1E0C80A78](v29);
  v262 = (uint64_t)&v253 - v30;
  MEMORY[0x1E0C80A78](v31);
  v274 = (uint64_t)&v253 - v32;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v253 - v34;
  v271 = type metadata accessor for CommandConnection.RecentErrors.Statistics(0);
  MEMORY[0x1E0C80A78](v271);
  v277 = (uint64_t)&v253 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v257 = (uint64_t)&v253 - v38;
  MEMORY[0x1E0C80A78](v39);
  v259 = (uint64_t)&v253 - v40;
  MEMORY[0x1E0C80A78](v41);
  v258 = (uint64_t)&v253 - v42;
  MEMORY[0x1E0C80A78](v43);
  v278 = (uint64_t (**)(uint64_t, uint64_t))((char *)&v253 - v44);
  MEMORY[0x1E0C80A78](v45);
  v270 = (uint64_t)&v253 - v46;
  MEMORY[0x1E0C80A78](v47);
  v255 = (uint64_t)&v253 - v48;
  MEMORY[0x1E0C80A78](v49);
  v253 = (uint64_t)&v253 - v50;
  MEMORY[0x1E0C80A78](v51);
  v256 = (uint64_t)&v253 - v52;
  MEMORY[0x1E0C80A78](v53);
  v254 = (uint64_t)&v253 - v54;
  MEMORY[0x1E0C80A78](v55);
  v57 = (char *)&v253 - v56;
  MEMORY[0x1E0C80A78](v58);
  v60 = (char *)&v253 - v59;
  MEMORY[0x1E0C80A78](v61);
  v63 = (char *)&v253 - v62;
  MEMORY[0x1E0C80A78](v64);
  v66 = (char *)&v253 - v65;
  MEMORY[0x1E0C80A78](v67);
  v69 = (char *)&v253 - v68;
  v279 = ConnectionLoggerID.init(engine:connection:)(*(_BYTE *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID), a2);
  v70 = HIDWORD(v279);
  if (CommandConnection.RecentErrors.isEmpty.getter(a1))
  {
    v71 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1A54E330C(v71, (uint64_t)v18, (uint64_t *)&unk_1EE798858);
    v72 = sub_1A594A764();
    isa = v72[-1].isa;
    result = (*((uint64_t (**)(char *, uint64_t, NSObject *))isa + 6))(v18, 1, v72);
    if ((_DWORD)result != 1)
    {
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v75 = sub_1A594A74C();
      v76 = sub_1A594C030();
      if (os_log_type_enabled(v75, v76))
      {
        v77 = v70;
        v78 = swift_slowAlloc();
        v79 = swift_slowAlloc();
        v280[0] = v79;
        *(_DWORD *)v78 = 68158210;
        LODWORD(v282) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v78 + 8) = 256;
        LOBYTE(v282) = v279;
        sub_1A594C3CC();
        *(_WORD *)(v78 + 11) = 2082;
        v80 = ConnectionID.debugDescription.getter(v77);
        v282 = sub_1A5903E24(v80, v81, v280);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v75, v76, "[%.*hhx-%{public}s] Connection did close.", (uint8_t *)v78, 0x15u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v79, -1, -1);
        MEMORY[0x1A85B1964](v78, -1, -1);
      }

      v82 = (uint64_t (*)(char *, NSObject *))*((_QWORD *)isa + 1);
      v83 = v18;
LABEL_6:
      v84 = v72;
      return v82(v83, v84);
    }
    __break(1u);
    goto LABEL_55;
  }
  v85 = v70;
  v86 = v2;
  v87 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  CommandConnection.RecentErrors.Statistics.init(_:)(v87, (uint64_t)v69);
  if (*v69 != 1)
  {
    if (v69[1] == 1)
    {
      v101 = (void *)*((_QWORD *)v69 + 6);
      if (v101)
      {
        v102 = *((_QWORD *)v69 + 4);
        v277 = *((_QWORD *)v69 + 5);
        v103 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
        swift_beginAccess();
        v104 = v274;
        sub_1A54E330C(v103, v274, (uint64_t *)&unk_1EE798858);
        v105 = sub_1A594A764();
        v106 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v105 - 8);
        result = v106[6](v104, 1, v105);
        if ((_DWORD)result == 1)
        {
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
        v278 = (uint64_t (**)(uint64_t, uint64_t))v106;
        sub_1A5907FF0(v102);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        sub_1A55034B8((uint64_t)v69, (uint64_t)v60, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        sub_1A55034B8((uint64_t)v69, (uint64_t)v57, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        sub_1A5907FF0(v102);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5907FF0(v102);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v107 = sub_1A594A74C();
        v108 = sub_1A594C018();
        v109 = v108;
        if (os_log_type_enabled(v107, v108))
        {
          v110 = swift_slowAlloc();
          LODWORD(v276) = v109;
          v111 = v85;
          v112 = v110;
          v275 = (uint64_t *)swift_slowAlloc();
          v280[0] = (uint64_t)v275;
          *(_DWORD *)v112 = 68158978;
          LODWORD(v282) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v112 + 8) = 256;
          LOBYTE(v282) = v279;
          sub_1A594C3CC();
          *(_WORD *)(v112 + 11) = 2082;
          v268 = v69;
          v113 = ConnectionID.debugDescription.getter(v111);
          v282 = sub_1A5903E24(v113, v114, v280);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v112 + 21) = 2048;
          v279 = (unint64_t)v107;
          v115 = v105;
          v116 = *((_QWORD *)v60 + 1);
          sub_1A55034FC((uint64_t)v60, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          v282 = v116;
          v105 = v115;
          sub_1A594C3CC();
          *(_WORD *)(v112 + 31) = 2048;
          v117 = *((_QWORD *)v57 + 2);
          sub_1A55034FC((uint64_t)v57, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          v282 = v117;
          sub_1A594C3CC();
          *(_WORD *)(v112 + 41) = 2080;
          sub_1A5907FF0(v102);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          ResponseText.debugDescription.getter(v102, v277, v101);
          v119 = v118;
          v121 = v120;
          sub_1A5904BA8(v102);
          swift_bridgeObjectRelease();
          v282 = sub_1A5903E24(v119, v121, v280);
          v104 = v274;
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A5904BA8(v102);
          swift_bridgeObjectRelease();
          sub_1A5904BA8(v102);
          swift_bridgeObjectRelease();
          v122 = (os_log_t)v279;
          _os_log_impl(&dword_1A4F90000, (os_log_t)v279, (os_log_type_t)v276, "[%.*hhx-%{public}s] Connection failed to authenticate. Failed commands: %ld. Network errors: %ld. '%s'", (uint8_t *)v112, 0x33u);
          v123 = (void (*)(_QWORD, _QWORD, _QWORD))v275;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v123, -1, -1);
          MEMORY[0x1A85B1964](v112, -1, -1);

          sub_1A5904BA8(v102);
          swift_bridgeObjectRelease();
          v124 = (uint64_t)v268;
        }
        else
        {
          sub_1A55034FC((uint64_t)v57, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          sub_1A55034FC((uint64_t)v60, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          sub_1A5904BA8(v102);
          swift_bridgeObjectRelease();
          sub_1A5904BA8(v102);
          swift_bridgeObjectRelease();
          sub_1A5904BA8(v102);

          swift_bridgeObjectRelease();
          v124 = (uint64_t)v69;
        }
        sub_1A55034FC(v124, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        return v278[1](v104, v105);
      }
      v166 = (uint64_t)v268;
      sub_1A54E330C((uint64_t)&v69[*(int *)(v271 + 44)], (uint64_t)v268, (uint64_t *)&unk_1EE798EC0);
      v167 = v276;
      v168 = v273;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v276 + 48))(v166, 1, v273) == 1)
      {
        sub_1A5510284(v166, (uint64_t *)&unk_1EE798EC0);
        v169 = v86 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
        swift_beginAccess();
        v170 = v260;
        sub_1A54E330C(v169, v260, (uint64_t *)&unk_1EE798858);
        v72 = sub_1A594A764();
        v171 = v72[-1].isa;
        result = (*((uint64_t (**)(uint64_t, uint64_t, NSObject *))v171 + 6))(v170, 1, v72);
        if ((_DWORD)result != 1)
        {
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          v172 = v253;
          sub_1A55034B8((uint64_t)v69, v253, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          v173 = v255;
          sub_1A55034B8((uint64_t)v69, v255, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          v174 = sub_1A594A74C();
          v175 = sub_1A594C018();
          if (os_log_type_enabled(v174, v175))
          {
            v176 = swift_slowAlloc();
            v277 = swift_slowAlloc();
            v280[0] = v277;
            *(_DWORD *)v176 = 68158722;
            LODWORD(v282) = 2;
            v278 = (uint64_t (**)(uint64_t, uint64_t))v171;
            sub_1A594C3CC();
            *(_WORD *)(v176 + 8) = 256;
            LOBYTE(v282) = v279;
            sub_1A594C3CC();
            *(_WORD *)(v176 + 11) = 2082;
            v177 = v173;
            v178 = ConnectionID.debugDescription.getter(v85);
            v282 = sub_1A5903E24(v178, v179, v280);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            *(_WORD *)(v176 + 21) = 2048;
            v268 = v69;
            v180 = *(_QWORD *)(v172 + 8);
            v279 = (unint64_t)v72;
            sub_1A55034FC(v172, type metadata accessor for CommandConnection.RecentErrors.Statistics);
            v282 = v180;
            sub_1A594C3CC();
            *(_WORD *)(v176 + 31) = 2048;
            v181 = *(_QWORD *)(v173 + 16);
            sub_1A55034FC(v177, type metadata accessor for CommandConnection.RecentErrors.Statistics);
            v282 = v181;
            v171 = (Class)v278;
            sub_1A594C3CC();
            _os_log_impl(&dword_1A4F90000, v174, v175, "[%.*hhx-%{public}s] Connection failed to authenticate. Failed commands: %ld. Network errors: %ld.", (uint8_t *)v176, 0x29u);
            v182 = v277;
            swift_arrayDestroy();
            v170 = v260;
            MEMORY[0x1A85B1964](v182, -1, -1);
            MEMORY[0x1A85B1964](v176, -1, -1);

            v183 = (uint64_t)v268;
            v72 = v279;
          }
          else
          {
            sub_1A55034FC(v173, type metadata accessor for CommandConnection.RecentErrors.Statistics);
            sub_1A55034FC(v172, type metadata accessor for CommandConnection.RecentErrors.Statistics);

            v183 = (uint64_t)v69;
          }
          sub_1A55034FC(v183, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          v82 = (uint64_t (*)(char *, NSObject *))*((_QWORD *)v171 + 1);
          v83 = (char *)v170;
          goto LABEL_6;
        }
        goto LABEL_59;
      }
      v200 = v263;
      (*(void (**)(char *, uint64_t, uint64_t))(v167 + 32))(v263, v166, v168);
      v201 = v167;
      v202 = v86 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
      swift_beginAccess();
      v203 = v262;
      sub_1A54E330C(v202, v262, (uint64_t *)&unk_1EE798858);
      v204 = sub_1A594A764();
      v277 = *(_QWORD *)(v204 - 8);
      v278 = (uint64_t (**)(uint64_t, uint64_t))v204;
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v277 + 48))(v203, 1);
      if ((_DWORD)result == 1)
      {
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v205 = v254;
      sub_1A55034B8((uint64_t)v69, v254, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      v206 = v256;
      sub_1A55034B8((uint64_t)v69, v256, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      v207 = v261;
      v275 = *(uint64_t **)(v201 + 16);
      ((void (*)(char *, char *, uint64_t))v275)(v261, v200, v168);
      v208 = sub_1A594A74C();
      v209 = sub_1A594C018();
      v210 = v209;
      if (!os_log_type_enabled(v208, v209))
      {
        sub_1A55034FC(v206, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        sub_1A55034FC(v205, type metadata accessor for CommandConnection.RecentErrors.Statistics);

        v251 = *(void (**)(char *, uint64_t))(v276 + 8);
        v251(v207, v168);
        v251(v200, v168);
        v250 = (uint64_t)v69;
        goto LABEL_52;
      }
      v211 = swift_slowAlloc();
      LODWORD(v272) = v210;
      v212 = v211;
      v213 = v85;
      v214 = (_QWORD *)swift_slowAlloc();
      v274 = swift_slowAlloc();
      v280[0] = v274;
      *(_DWORD *)v212 = 68158978;
      LODWORD(v282) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v212 + 8) = 256;
      LOBYTE(v282) = v279;
      sub_1A594C3CC();
      *(_WORD *)(v212 + 11) = 2082;
      v215 = ConnectionID.debugDescription.getter(v213);
      v282 = sub_1A5903E24(v215, v216, v280);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v268 = v69;
      *(_WORD *)(v212 + 21) = 2048;
      v217 = *(_QWORD *)(v205 + 8);
      sub_1A55034FC(v205, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      v282 = v217;
      sub_1A594C3CC();
      *(_WORD *)(v212 + 31) = 2048;
      v218 = *(_QWORD *)(v206 + 16);
      sub_1A55034FC(v206, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      v282 = v218;
      sub_1A594C3CC();
      *(_WORD *)(v212 + 41) = 2112;
      sub_1A5926958();
      swift_allocError();
      v219 = v261;
      ((void (*)(uint64_t, char *, uint64_t))v275)(v220, v261, v168);
      v221 = _swift_stdlib_bridgeErrorToNSError();
      v282 = v221;
      v203 = v262;
      sub_1A594C3CC();
      *v214 = v221;
      v222 = *(void (**)(char *, uint64_t))(v276 + 8);
      v222(v219, v168);
      _os_log_impl(&dword_1A4F90000, v208, (os_log_type_t)v272, "[%.*hhx-%{public}s] Connection failed to authenticate. Failed commands: %ld. Network errors: %ld. %@", (uint8_t *)v212, 0x33u);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1A60);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v214, -1, -1);
      v223 = v274;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v223, -1, -1);
      MEMORY[0x1A85B1964](v212, -1, -1);

      v224 = v263;
      v225 = v168;
    }
    else
    {
      v125 = v2;
      v126 = v277;
      v127 = (uint64_t)v278;
      if (v69[2] == 1)
      {
        v274 = v85;
        v128 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
        swift_beginAccess();
        v129 = v272;
        sub_1A54E330C(v128, v272, (uint64_t *)&unk_1EE798858);
        v130 = sub_1A594A764();
        v131 = *(_QWORD *)(v130 - 8);
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v129, 1, v130);
        if ((_DWORD)result == 1)
        {
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v132 = sub_1A594A74C();
        v133 = sub_1A594C018();
        if (os_log_type_enabled(v132, v133))
        {
          v134 = swift_slowAlloc();
          v135 = swift_slowAlloc();
          v283 = v135;
          *(_DWORD *)v134 = 68158210;
          LODWORD(v282) = 2;
          v268 = v69;
          sub_1A594C3CC();
          *(_WORD *)(v134 + 8) = 256;
          LOBYTE(v282) = v279;
          sub_1A594C3CC();
          *(_WORD *)(v134 + 11) = 2082;
          v136 = ConnectionID.debugDescription.getter(v274);
          v282 = sub_1A5903E24(v136, v137, &v283);
          v69 = v268;
          sub_1A594C3CC();
          v126 = v277;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v132, v133, "[%.*hhx-%{public}s] Server is temporarily unavailable.", (uint8_t *)v134, 0x15u);
          swift_arrayDestroy();
          v138 = v135;
          v129 = v272;
          MEMORY[0x1A85B1964](v138, -1, -1);
          v139 = v134;
          v125 = v86;
          MEMORY[0x1A85B1964](v139, -1, -1);
        }

        v127 = (uint64_t)v278;
        (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v129, v130);
        v85 = v274;
      }
      v140 = (void *)*((_QWORD *)v69 + 6);
      if (v140)
      {
        v142 = *((_QWORD *)v69 + 4);
        v141 = *((_QWORD *)v69 + 5);
        v143 = v125 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
        swift_beginAccess();
        v144 = (void (*)(_QWORD, _QWORD, _QWORD))v275;
        sub_1A54E330C(v143, (uint64_t)v275, (uint64_t *)&unk_1EE798858);
        v145 = sub_1A594A764();
        v146 = *(char **)(v145 - 8);
        result = (*((uint64_t (**)(_QWORD, uint64_t, uint64_t))v146 + 6))(v144, 1, v145);
        if ((_DWORD)result == 1)
        {
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        v278 = (uint64_t (**)(uint64_t, uint64_t))v146;
        sub_1A5907FF0(v142);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v147 = v270;
        sub_1A55034B8((uint64_t)v69, v270, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        sub_1A55034B8((uint64_t)v69, v127, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        sub_1A5907FF0(v142);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5907FF0(v142);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v148 = sub_1A594A74C();
        v149 = sub_1A594C018();
        LODWORD(v277) = v149;
        if (os_log_type_enabled(v148, v149))
        {
          v150 = swift_slowAlloc();
          v273 = v141;
          v151 = v85;
          v152 = v150;
          v274 = swift_slowAlloc();
          v282 = v274;
          *(_DWORD *)v152 = 68158978;
          LODWORD(v281) = 2;
          v276 = v145;
          v153 = v127;
          sub_1A594C3CC();
          *(_WORD *)(v152 + 8) = 256;
          LOBYTE(v281) = v279;
          sub_1A594C3CC();
          *(_WORD *)(v152 + 11) = 2082;
          v154 = ConnectionID.debugDescription.getter(v151);
          v281 = sub_1A5903E24(v154, v155, &v282);
          v268 = v69;
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v152 + 21) = 2048;
          v156 = *(_QWORD *)(v147 + 8);
          sub_1A55034FC(v147, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          v281 = v156;
          sub_1A594C3CC();
          *(_WORD *)(v152 + 31) = 2048;
          v157 = *(_QWORD *)(v127 + 16);
          v158 = v153;
          v145 = v276;
          sub_1A55034FC(v158, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          v281 = v157;
          sub_1A594C3CC();
          *(_WORD *)(v152 + 41) = 2080;
          sub_1A5907FF0(v142);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          ResponseText.debugDescription.getter(v142, v273, v140);
          v160 = v159;
          v162 = v161;
          sub_1A5904BA8(v142);
          swift_bridgeObjectRelease();
          v163 = v160;
          v144 = (void (*)(_QWORD, _QWORD, _QWORD))v275;
          v281 = sub_1A5903E24(v163, v162, &v282);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A5904BA8(v142);
          swift_bridgeObjectRelease();
          sub_1A5904BA8(v142);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v148, (os_log_type_t)v277, "[%.*hhx-%{public}s] Connection failed. Failed commands: %ld. Network errors: %ld. '%s'", (uint8_t *)v152, 0x33u);
          v164 = v274;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v164, -1, -1);
          MEMORY[0x1A85B1964](v152, -1, -1);

          sub_1A5904BA8(v142);
          swift_bridgeObjectRelease();
          v165 = (uint64_t)v268;
        }
        else
        {
          sub_1A55034FC(v127, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          sub_1A55034FC(v147, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          sub_1A5904BA8(v142);
          swift_bridgeObjectRelease();
          sub_1A5904BA8(v142);
          swift_bridgeObjectRelease();
          sub_1A5904BA8(v142);

          swift_bridgeObjectRelease();
          v165 = (uint64_t)v69;
        }
        sub_1A55034FC(v165, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        return v278[1]((uint64_t)v144, v145);
      }
      v184 = v269;
      sub_1A54E330C((uint64_t)&v69[*(int *)(v271 + 44)], v269, (uint64_t *)&unk_1EE798EC0);
      v185 = v276;
      v186 = v273;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v276 + 48))(v184, 1, v273) == 1)
      {
        sub_1A5510284(v184, (uint64_t *)&unk_1EE798EC0);
        v187 = v125 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
        swift_beginAccess();
        v188 = v264;
        sub_1A54E330C(v187, v264, (uint64_t *)&unk_1EE798858);
        v72 = sub_1A594A764();
        v189 = v72[-1].isa;
        result = (*((uint64_t (**)(uint64_t, uint64_t, NSObject *))v189 + 6))(v188, 1, v72);
        if ((_DWORD)result != 1)
        {
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          v190 = v257;
          sub_1A55034B8((uint64_t)v69, v257, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          sub_1A55034B8((uint64_t)v69, v126, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          v191 = sub_1A594A74C();
          v192 = sub_1A594C018();
          if (os_log_type_enabled(v191, v192))
          {
            v193 = swift_slowAlloc();
            v277 = swift_slowAlloc();
            v282 = v277;
            *(_DWORD *)v193 = 68158722;
            LODWORD(v281) = 2;
            v278 = (uint64_t (**)(uint64_t, uint64_t))v189;
            sub_1A594C3CC();
            *(_WORD *)(v193 + 8) = 256;
            LOBYTE(v281) = v279;
            sub_1A594C3CC();
            *(_WORD *)(v193 + 11) = 2082;
            v194 = ConnectionID.debugDescription.getter(v85);
            v281 = sub_1A5903E24(v194, v195, &v282);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            v268 = v69;
            *(_WORD *)(v193 + 21) = 2048;
            v196 = *(_QWORD *)(v190 + 8);
            sub_1A55034FC(v190, type metadata accessor for CommandConnection.RecentErrors.Statistics);
            v281 = v196;
            sub_1A594C3CC();
            *(_WORD *)(v193 + 31) = 2048;
            v197 = *(_QWORD *)(v126 + 16);
            sub_1A55034FC(v126, type metadata accessor for CommandConnection.RecentErrors.Statistics);
            v281 = v197;
            v189 = (Class)v278;
            sub_1A594C3CC();
            _os_log_impl(&dword_1A4F90000, v191, v192, "[%.*hhx-%{public}s] Connection failed. Failed commands: %ld. Network errors: %ld.", (uint8_t *)v193, 0x29u);
            v198 = v277;
            swift_arrayDestroy();
            v188 = v264;
            MEMORY[0x1A85B1964](v198, -1, -1);
            MEMORY[0x1A85B1964](v193, -1, -1);

            v199 = (uint64_t)v268;
          }
          else
          {
            sub_1A55034FC(v126, type metadata accessor for CommandConnection.RecentErrors.Statistics);
            sub_1A55034FC(v190, type metadata accessor for CommandConnection.RecentErrors.Statistics);

            v199 = (uint64_t)v69;
          }
          sub_1A55034FC(v199, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          v82 = (uint64_t (*)(char *, NSObject *))*((_QWORD *)v189 + 1);
          v83 = (char *)v188;
          goto LABEL_6;
        }
        goto LABEL_60;
      }
      v226 = v267;
      (*(void (**)(char *, uint64_t, uint64_t))(v185 + 32))(v267, v184, v186);
      v227 = v185;
      v228 = v125 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
      swift_beginAccess();
      v203 = v266;
      sub_1A54E330C(v228, v266, (uint64_t *)&unk_1EE798858);
      v229 = sub_1A594A764();
      v230 = *(_QWORD *)(v229 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v230 + 48))(v203, 1, v229);
      if ((_DWORD)result == 1)
      {
LABEL_62:
        __break(1u);
        return result;
      }
      v277 = v230;
      v278 = (uint64_t (**)(uint64_t, uint64_t))v229;
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v231 = v258;
      sub_1A55034B8((uint64_t)v69, v258, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      v232 = v259;
      sub_1A55034B8((uint64_t)v69, v259, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      v233 = *(uint64_t **)(v227 + 16);
      v234 = v265;
      v275 = v233;
      ((void (*)(char *, char *, uint64_t))v233)(v265, v226, v186);
      v235 = sub_1A594A74C();
      v236 = sub_1A594C018();
      v237 = v236;
      if (!os_log_type_enabled(v235, v236))
      {
        sub_1A55034FC(v232, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        sub_1A55034FC(v231, type metadata accessor for CommandConnection.RecentErrors.Statistics);

        v252 = *(void (**)(char *, uint64_t))(v276 + 8);
        v252(v234, v186);
        v252(v226, v186);
        v250 = (uint64_t)v69;
        goto LABEL_52;
      }
      v238 = swift_slowAlloc();
      LODWORD(v272) = v237;
      v239 = v238;
      v240 = v85;
      v241 = (_QWORD *)swift_slowAlloc();
      v274 = swift_slowAlloc();
      v282 = v274;
      *(_DWORD *)v239 = 68158978;
      LODWORD(v281) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v239 + 8) = 256;
      LOBYTE(v281) = v279;
      sub_1A594C3CC();
      *(_WORD *)(v239 + 11) = 2082;
      v242 = ConnectionID.debugDescription.getter(v240);
      v281 = sub_1A5903E24(v242, v243, &v282);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v268 = v69;
      *(_WORD *)(v239 + 21) = 2048;
      v244 = *(_QWORD *)(v231 + 8);
      sub_1A55034FC(v231, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      v281 = v244;
      sub_1A594C3CC();
      *(_WORD *)(v239 + 31) = 2048;
      v245 = *(_QWORD *)(v232 + 16);
      sub_1A55034FC(v232, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      v281 = v245;
      sub_1A594C3CC();
      *(_WORD *)(v239 + 41) = 2112;
      sub_1A5926958();
      swift_allocError();
      v246 = v265;
      ((void (*)(uint64_t, char *, uint64_t))v275)(v247, v265, v186);
      v248 = _swift_stdlib_bridgeErrorToNSError();
      v281 = v248;
      v203 = v266;
      sub_1A594C3CC();
      *v241 = v248;
      v222 = *(void (**)(char *, uint64_t))(v276 + 8);
      v222(v246, v186);
      _os_log_impl(&dword_1A4F90000, v235, (os_log_type_t)v272, "[%.*hhx-%{public}s] Connection failed. Failed commands: %ld. Network errors: %ld. %@", (uint8_t *)v239, 0x33u);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1A60);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v241, -1, -1);
      v249 = v274;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v249, -1, -1);
      MEMORY[0x1A85B1964](v239, -1, -1);

      v224 = v267;
      v225 = v186;
    }
    v222(v224, v225);
    v250 = (uint64_t)v268;
LABEL_52:
    sub_1A55034FC(v250, type metadata accessor for CommandConnection.RecentErrors.Statistics);
    v84 = v278;
    v82 = *(uint64_t (**)(char *, NSObject *))(v277 + 8);
    v83 = (char *)v203;
    return v82(v83, v84);
  }
  v88 = v85;
  v89 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1A54E330C(v89, (uint64_t)v35, (uint64_t *)&unk_1EE798858);
  v90 = sub_1A594A764();
  v91 = *(_QWORD *)(v90 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 48))(v35, 1, v90);
  if ((_DWORD)result == 1)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A55034B8((uint64_t)v69, (uint64_t)v66, type metadata accessor for CommandConnection.RecentErrors.Statistics);
  sub_1A55034B8((uint64_t)v69, (uint64_t)v63, type metadata accessor for CommandConnection.RecentErrors.Statistics);
  v92 = sub_1A594A74C();
  v93 = sub_1A594C024();
  if (os_log_type_enabled(v92, v93))
  {
    v94 = swift_slowAlloc();
    v277 = swift_slowAlloc();
    v280[0] = v277;
    *(_DWORD *)v94 = 68158722;
    LODWORD(v282) = 2;
    v278 = (uint64_t (**)(uint64_t, uint64_t))v90;
    sub_1A594C3CC();
    *(_WORD *)(v94 + 8) = 256;
    LOBYTE(v282) = v279;
    sub_1A594C3CC();
    *(_WORD *)(v94 + 11) = 2082;
    v279 = v91;
    v95 = ConnectionID.debugDescription.getter(v88);
    v268 = v69;
    v282 = sub_1A5903E24(v95, v96, v280);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v94 + 21) = 2048;
    v97 = *((_QWORD *)v66 + 1);
    sub_1A55034FC((uint64_t)v66, type metadata accessor for CommandConnection.RecentErrors.Statistics);
    v282 = v97;
    sub_1A594C3CC();
    *(_WORD *)(v94 + 31) = 2048;
    v91 = v279;
    v98 = *((_QWORD *)v63 + 2);
    sub_1A55034FC((uint64_t)v63, type metadata accessor for CommandConnection.RecentErrors.Statistics);
    v282 = v98;
    v90 = (uint64_t)v278;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v92, v93, "[%.*hhx-%{public}s] Connection failed to parse server response. Failed commands: %ld. Network errors: %ld.", (uint8_t *)v94, 0x29u);
    v99 = v277;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v99, -1, -1);
    MEMORY[0x1A85B1964](v94, -1, -1);

    v100 = (uint64_t)v268;
  }
  else
  {
    sub_1A55034FC((uint64_t)v63, type metadata accessor for CommandConnection.RecentErrors.Statistics);
    sub_1A55034FC((uint64_t)v66, type metadata accessor for CommandConnection.RecentErrors.Statistics);

    v100 = (uint64_t)v69;
  }
  sub_1A55034FC(v100, type metadata accessor for CommandConnection.RecentErrors.Statistics);
  return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v35, v90);
}

__uint64_t sub_1A59216A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __uint64_t result;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD *, uint64_t (*)(), uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  double v42;

  v1 = v0;
  v2 = sub_1A594AD10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1A594AE84();
  v41 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - v13;
  v15 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
  swift_beginAccess();
  v16 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  if ((*(_BYTE *)(v15 + 16) & 1) != 0)
  {
    swift_beginAccess();
    sub_1A54E330C(v16, (uint64_t)v11, (uint64_t *)&unk_1EE798858);
    v17 = sub_1A594A764();
    v18 = *(_QWORD *)(v17 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17);
    if ((_DWORD)result != 1)
    {
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v20 = sub_1A594A74C();
      v21 = sub_1A594C030();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        *(_DWORD *)v22 = 68157952;
        LODWORD(v42) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v22 + 8) = 256;
        LOBYTE(v42) = *(_BYTE *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
        sub_1A594C3CC();
        swift_release();
        _os_log_impl(&dword_1A4F90000, v20, v21, "[%.*hhx] Cancelling backoff timer.", (uint8_t *)v22, 0xBu);
        MEMORY[0x1A85B1964](v22, -1, -1);
      }
      else
      {
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v17);
      v28 = *(void (**)(uint64_t))(**(_QWORD **)(v1
                                                         + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoffTimer)
                                           + 208);
      v29 = swift_retain();
      v28(v29);
      return swift_release();
    }
    goto LABEL_19;
  }
  v38 = v6;
  v39 = v3;
  v40 = *(_QWORD *)(v15 + 8);
  swift_beginAccess();
  sub_1A54E330C(v16, (uint64_t)v14, (uint64_t *)&unk_1EE798858);
  v23 = sub_1A594A764();
  v37 = *(_QWORD *)(v23 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v14, 1, v23);
  if ((_DWORD)result != 1)
  {
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_retain();
    v24 = sub_1A594A74C();
    v25 = sub_1A594C030();
    if (!os_log_type_enabled(v24, v25))
    {

      swift_release_n();
LABEL_15:
      (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v23);
      v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoffTimer);
      swift_retain();
      DispatchTime.init(_:)(v40);
      v32 = swift_allocObject();
      swift_weakInit();
      *v5 = 100;
      v33 = v39;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v39 + 104))(v5, *MEMORY[0x1E0DEF490], v2);
      v34 = *(void (**)(char *, _QWORD *, uint64_t (*)(), uint64_t))(*(_QWORD *)v31 + 200);
      swift_retain();
      v34(v8, v5, sub_1A5926938, v32);
      swift_release();
      swift_release();
      (*(void (**)(_QWORD *, uint64_t))(v33 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v38);
      return swift_release();
    }
    v35 = v23;
    v26 = swift_slowAlloc();
    *(_DWORD *)v26 = 68158464;
    LODWORD(v42) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v26 + 8) = 256;
    LOBYTE(v42) = *(_BYTE *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v26 + 11) = 2048;
    result = static MonotonicTime.now()();
    v27 = v40 - result;
    v36 = v2;
    if (v40 >= result)
    {
      if ((uint64_t)(v40 - result) >= 0)
        goto LABEL_14;
    }
    else
    {
      if ((uint64_t)(result - v40) >= 0)
      {
        v27 = v40 - result;
LABEL_14:
        v42 = (double)v27 / 1000000000.0;
        sub_1A594C3CC();
        *(_WORD *)(v26 + 21) = 2048;
        v30 = *(double *)v15;
        swift_release();
        v42 = v30;
        sub_1A594C3CC();
        swift_release();
        _os_log_impl(&dword_1A4F90000, v24, v25, "[%.*hhx] Setting up backoff timer for %f s (count %ld) from now.", (uint8_t *)v26, 0x1Fu);
        MEMORY[0x1A85B1964](v26, -1, -1);

        v23 = v35;
        v2 = v36;
        goto LABEL_15;
      }
      __break(1u);
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5921C58(uint64_t *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t);
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109[3];
  _QWORD v110[9];
  unsigned __int16 v111;
  unsigned __int8 v112;
  _OWORD v113[3];
  _OWORD v114[2];
  __int128 v115;
  __int128 v116;
  __int128 v117;
  _BYTE v118[27];
  uint64_t v119;

  sub_1A55032A0(a3, (uint64_t)v110, &qword_1EE798188);
  v119 = v110[0];
  v99 = v110[1];
  v100 = v110[3];
  v104 = v110[2];
  v105 = v110[5];
  v101 = v110[4];
  v102 = v110[6];
  v103 = v110[7];
  v97 = v111 | (v112 << 16);
  v98 = v110[8];
  v8 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v89 - v12;
  MEMORY[0x1E0C80A78](v14);
  v95 = (uint64_t)&v89 - v15;
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v89 - v18;
  v20 = *a1;
  v21 = (*(uint64_t (**)(double))(*(_QWORD *)*a1 + 576))(v17);
  v22 = v21;
  LODWORD(v94) = v23;
  v96 = OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id;
  if (*(_DWORD *)(v20 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != a2)
  {
    v24 = v119;
    if (v21)
    {
      v44 = v21;
      v45 = a4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
      swift_beginAccess();
      sub_1A54E330C(v45, (uint64_t)v19, (uint64_t *)&unk_1EE798858);
      v46 = sub_1A594A764();
      v93 = *(_QWORD *)(v46 - 8);
      v47 = *(uint64_t (**)(char *, uint64_t))(v93 + 48);
      v95 = v46;
      result = v47(v19, 1);
      if ((_DWORD)result != 1)
      {
        swift_retain_n();
        sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A550358C);
        v48 = v44;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        swift_retain_n();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v49 = sub_1A594A74C();
        v50 = sub_1A594C000();
        v51 = v50;
        if (os_log_type_enabled(v49, v50))
        {
          v52 = swift_slowAlloc();
          LODWORD(v92) = v51;
          v53 = v52;
          v91 = swift_slowAlloc();
          v109[0] = v91;
          *(_DWORD *)v53 = 68158723;
          LODWORD(v113[0]) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v53 + 8) = 256;
          v54 = *(_BYTE *)(a4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
          swift_release();
          LOBYTE(v113[0]) = v54;
          sub_1A594C3CC();
          swift_release();
          *(_WORD *)(v53 + 11) = 2082;
          v55 = ConnectionID.debugDescription.getter(*(unsigned int *)(v20 + v96));
          *(_QWORD *)&v113[0] = sub_1A5903E24(v55, v56, v109);
          sub_1A594C3CC();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v53 + 21) = 2160;
          *(_QWORD *)&v113[0] = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v53 + 31) = 2085;
          *(_QWORD *)&v113[0] = v48;
          DWORD2(v113[0]) = v94;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v57 = sub_1A594B4A8();
          *(_QWORD *)&v113[0] = sub_1A5903E24(v57, v58, v109);
          sub_1A594C3CC();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v49, (os_log_type_t)v92, "[%.*hhx] %{public}s: '%{sensitive,mask.mailbox}s'", (uint8_t *)v53, 0x29u);
          v59 = v91;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v59, -1, -1);
          MEMORY[0x1A85B1964](v53, -1, -1);
          swift_bridgeObjectRelease();

          sub_1A5503320(v119);
        }
        else
        {
          swift_bridgeObjectRelease();

          swift_release();
          sub_1A5503320(v24);
          swift_bridgeObjectRelease_n();
          swift_release_n();
          swift_release();
        }
        return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v19, v95);
      }
      __break(1u);
      goto LABEL_32;
    }
LABEL_17:
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A550358C);
    swift_bridgeObjectRelease();
    sub_1A5503320(v24);
    v60 = a4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1A54E330C(v60, (uint64_t)v10, (uint64_t *)&unk_1EE798858);
    v61 = sub_1A594A764();
    v62 = *(_QWORD *)(v61 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48))(v10, 1, v61);
    if ((_DWORD)result != 1)
    {
      swift_retain_n();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_retain_n();
      v63 = sub_1A594A74C();
      v64 = sub_1A594C030();
      v65 = v64;
      if (os_log_type_enabled(v63, v64))
      {
        v66 = swift_slowAlloc();
        v119 = v62;
        v67 = v66;
        v105 = swift_slowAlloc();
        v106 = v105;
        *(_DWORD *)v67 = 68158210;
        LODWORD(v108) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v67 + 8) = 256;
        LODWORD(v104) = v65;
        v68 = v61;
        v69 = *(_BYTE *)(a4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
        swift_release();
        LOBYTE(v108) = v69;
        v61 = v68;
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v67 + 11) = 2082;
        v70 = ConnectionID.debugDescription.getter(*(unsigned int *)(v20 + v96));
        v108 = sub_1A5903E24(v70, v71, &v106);
        sub_1A594C3CC();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v63, (os_log_type_t)v104, "[%.*hhx] %{public}s: -", (uint8_t *)v67, 0x15u);
        v72 = v105;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v72, -1, -1);
        v73 = v67;
        v62 = v119;
        MEMORY[0x1A85B1964](v73, -1, -1);

      }
      else
      {
        swift_release_n();

        swift_release_n();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v10, v61);
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  sub_1A55032A0(a3, (uint64_t)v113, &qword_1EE798188);
  if (!*(_QWORD *)&v113[0])
  {
    v93 = v22;
    v74 = a4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1A54E330C(v74, (uint64_t)v13, (uint64_t *)&unk_1EE798858);
    v75 = sub_1A594A764();
    v76 = *(_QWORD *)(v75 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v76 + 48))(v13, 1, v75);
    if ((_DWORD)result != 1)
    {
      swift_retain_n();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_retain_n();
      v77 = sub_1A594A74C();
      v78 = sub_1A594C030();
      v79 = v78;
      if (os_log_type_enabled(v77, v78))
      {
        v80 = swift_slowAlloc();
        v95 = v76;
        v81 = v80;
        v94 = swift_slowAlloc();
        v109[0] = v94;
        *(_DWORD *)v81 = 68158210;
        LODWORD(v106) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v81 + 8) = 256;
        LODWORD(v92) = v79;
        v82 = v75;
        v83 = *(_BYTE *)(a4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
        swift_release();
        LOBYTE(v106) = v83;
        v75 = v82;
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v81 + 11) = 2082;
        v84 = ConnectionID.debugDescription.getter(*(unsigned int *)(v20 + v96));
        v106 = sub_1A5903E24(v84, v85, v109);
        sub_1A594C3CC();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v77, (os_log_type_t)v92, "[%.*hhx] %{public}s: - *", (uint8_t *)v81, 0x15u);
        v86 = v94;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v86, -1, -1);
        v87 = v81;
        v76 = v95;
        MEMORY[0x1A85B1964](v87, -1, -1);

        swift_bridgeObjectRelease();
        sub_1A5503320(v119);
      }
      else
      {

        swift_release();
        swift_bridgeObjectRelease();
        sub_1A5503320(v119);
        swift_release_n();
        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v13, v75);
    }
LABEL_34:
    __break(1u);
    return result;
  }
  v117 = v113[2];
  *(_OWORD *)v118 = v114[0];
  *(_OWORD *)&v118[11] = *(_OWORD *)((char *)v114 + 11);
  v115 = v113[0];
  v116 = v113[1];
  v24 = v119;
  if (!v22)
    goto LABEL_17;
  v25 = v22;
  v26 = a4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  v27 = v95;
  sub_1A54E330C(v26, v95, (uint64_t *)&unk_1EE798858);
  v28 = sub_1A594A764();
  v91 = *(_QWORD *)(v28 - 8);
  v92 = v28;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 48))(v27, 1);
  if ((_DWORD)result == 1)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  swift_retain();
  sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A550358C);
  swift_retain();
  sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A550358C);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A550358C);
  sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A550358C);
  sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A550358C);
  sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A550358C);
  sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A550358C);
  sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A550358C);
  sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A550358C);
  swift_retain();
  sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A550358C);
  v93 = v25;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v30 = sub_1A594A74C();
  v31 = sub_1A594C030();
  v32 = v31;
  if (os_log_type_enabled(v30, v31))
  {
    v33 = swift_slowAlloc();
    v90 = v32;
    v34 = v33;
    v89 = swift_slowAlloc();
    v108 = v89;
    *(_DWORD *)v34 = 68160003;
    LODWORD(v106) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v34 + 8) = 256;
    v35 = *(_BYTE *)(a4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    swift_release();
    LOBYTE(v106) = v35;
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v34 + 11) = 2082;
    v36 = ConnectionID.debugDescription.getter(*(unsigned int *)(v20 + v96));
    v106 = sub_1A5903E24(v36, v37, &v108);
    sub_1A594C3CC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 21) = 2160;
    v106 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v34 + 31) = 2085;
    v106 = v93;
    v107 = v94;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v38 = sub_1A594B4A8();
    v106 = sub_1A5903E24(v38, v39, &v108);
    sub_1A594C3CC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 41) = 2048;
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A5503320);
    v106 = *((_QWORD *)&v116 + 1);
    sub_1A594C3CC();
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A5503320);
    *(_WORD *)(v34 + 51) = 1024;
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A5503320);
    v40 = v117;
    if (BYTE4(v117))
      v40 = 0;
    LODWORD(v106) = v40;
    sub_1A594C3CC();
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A5503320);
    *(_WORD *)(v34 + 57) = 1024;
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A5503320);
    v41 = *(_DWORD *)v118;
    if (v118[4])
      v41 = 0;
    LODWORD(v106) = v41;
    sub_1A594C3CC();
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A5503320);
    *(_WORD *)(v34 + 63) = 1024;
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A5503320);
    v42 = *(_DWORD *)&v118[8];
    if (v118[12])
      v42 = 0;
    LODWORD(v106) = v42;
    sub_1A594C3CC();
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A5503320);
    *(_WORD *)(v34 + 69) = 1024;
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A5503320);
    LODWORD(v106) = v118[26] & 1;
    sub_1A594C3CC();
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A5503320);
    _os_log_impl(&dword_1A4F90000, v30, (os_log_type_t)v90, "[%.*hhx] %{public}s: '%{sensitive,mask.mailbox}s' * messageCount %ld, firstUnseenMessage %u, nextUID %u, uidValidity 0x%x, isReadOnly %{BOOL}d", (uint8_t *)v34, 0x4Bu);
    v43 = v89;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v43, -1, -1);
    MEMORY[0x1A85B1964](v34, -1, -1);
    swift_bridgeObjectRelease();

    sub_1A5503320(v119);
  }
  else
  {
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A5503320);
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A5503320);
    swift_bridgeObjectRelease();

    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v88 = v119;
    swift_bridgeObjectRelease_n();
    sub_1A5503320(v88);
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release();
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A5503320);
    sub_1A58D1840(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1A5503320);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A5529B0C((uint64_t)&v115);
    sub_1A5529B0C((uint64_t)&v115);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 8))(v95, v92);
}

__uint64_t sub_1A5922CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  __uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594AED8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x1E0DEF740], v5, v7);
  v11 = v10;
  LOBYTE(v10) = sub_1A594AEF0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v13 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
  swift_beginAccess();
  if ((*(_BYTE *)(v13 + 16) & 1) != 0)
    return sub_1A5922FEC();
  v14 = *(_QWORD *)(v13 + 8);
  result = static MonotonicTime.now()();
  v15 = v14 - result;
  if (v14 < result)
  {
    if ((uint64_t)(result - v14) >= 0)
    {
      v15 = v14 - result;
      goto LABEL_7;
    }
    goto LABEL_15;
  }
  if ((uint64_t)(v14 - result) < 0)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
LABEL_7:
  v16 = (double)v15 / 1000000000.0;
  if (v16 < 0.0)
    return sub_1A5922FEC();
  v17 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1A54E330C(v17, (uint64_t)v4, (uint64_t *)&unk_1EE798858);
  v18 = sub_1A594A764();
  v19 = *(_QWORD *)(v18 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v18);
  if ((_DWORD)result == 1)
    goto LABEL_17;
  swift_retain();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v20 = sub_1A594A74C();
  v21 = sub_1A594C018();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    *(_DWORD *)v22 = 68158208;
    LODWORD(v25) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v22 + 8) = 256;
    LOBYTE(v25) = *(_BYTE *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v22 + 11) = 2048;
    v25 = v16;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v20, v21, "[%.*hhx] Backoff timer expired, but we still have to wait %f seconds.", (uint8_t *)v22, 0x15u);
    MEMORY[0x1A85B1964](v22, -1, -1);
  }
  else
  {
    swift_release();
  }

  v23 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  return sub_1A59216A8(v23);
}

uint64_t sub_1A5922FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1A54E330C(v5, (uint64_t)v4, (uint64_t *)&unk_1EE798858);
  v6 = sub_1A594A764();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v9 = sub_1A594A74C();
    v10 = sub_1A594C000();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      *(_DWORD *)v11 = 68157952;
      HIDWORD(v12) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v11 + 8) = 256;
      BYTE4(v12) = *(_BYTE *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, v9, v10, "[%.*hhx] Backoff timer has expired. Re-trying.", (uint8_t *)v11, 0xBu);
      MEMORY[0x1A85B1964](v11, -1, -1);
    }
    else
    {
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
    result = MEMORY[0x1A85B1A0C](v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engine);
    if (result)
    {
      sub_1A590BD68(MEMORY[0x1E0DEE9D8]);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1A59231E8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[352];

  v17 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v17);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections;
  swift_beginAccess();
  if (*(_QWORD *)v5 >> 62)
    goto LABEL_25;
  if (*(_QWORD *)((*(_QWORD *)v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    do
    {
      v6 = *(_QWORD *)v5;
      if (*(_QWORD *)v5 >> 62)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v7 = sub_1A594CA38();
        if (!v7)
        {
LABEL_18:
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      else
      {
        v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (!v7)
          goto LABEL_18;
      }
      v8 = 4;
      while (1)
      {
        v9 = v8 - 4;
        if ((v6 & 0xC000000000000001) == 0)
          break;
        v5 = MEMORY[0x1A85AEC04](v8 - 4, v6);
        v10 = v8 - 3;
        if (__OFADD__(v9, 1))
          goto LABEL_22;
LABEL_11:
        (*(void (**)(void))(*(_QWORD *)v5 + 312))();
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          swift_release();
          swift_bridgeObjectRelease();
          memcpy(v18, v4, 0x15AuLL);
          sub_1A5904888((uint64_t)v18);
          return 0;
        }
        v11 = sub_1A55034FC((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
        v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 448))(v11);
        swift_release();
        if (v12 <= a1)
        {
          v13 = a1 - v12;
          if ((uint64_t)(a1 - v12) < 0)
            goto LABEL_24;
        }
        else
        {
          if ((uint64_t)(v12 - a1) < 0)
            goto LABEL_23;
          v13 = a1 - v12;
        }
        if ((double)v13 / 1000000000.0 < 60.0)
        {
          swift_bridgeObjectRelease();
          return 0;
        }
        ++v8;
        if (v10 == v7)
          goto LABEL_18;
      }
      v5 = *(_QWORD *)(v6 + 8 * v8);
      swift_retain();
      v10 = v8 - 3;
      if (!__OFADD__(v9, 1))
        goto LABEL_11;
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v15 = sub_1A594CA38();
      swift_bridgeObjectRelease();
    }
    while (v15);
  }
  return 0;
}

uint64_t sub_1A5923444()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5923474 + 4 * byte_1A59E1296[*v0]))(0x656D614E676F6CLL, 0xE700000000000000);
}

uint64_t sub_1A5923474()
{
  return 0x4449656E69676E65;
}

uint64_t sub_1A592348C()
{
  return 0x697463656E6E6F63;
}

uint64_t sub_1A59234AC()
{
  return 0x6F7272457473616CLL;
}

uint64_t sub_1A59234C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5926FF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A59234EC()
{
  sub_1A5926D68();
  return sub_1A594CFB4();
}

uint64_t sub_1A5923514()
{
  sub_1A5926D68();
  return sub_1A594CFC0();
}

uint64_t sub_1A592353C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AD30);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5926D68();
  sub_1A594CF3C();
  v13 = 0;
  sub_1A594CC18();
  if (!v2)
  {
    v12 = 1;
    sub_1A594CC18();
    v11 = *(_QWORD *)(v3 + 32);
    v10[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799650);
    sub_1A5926DAC();
    sub_1A594CC3C();
    v10[14] = 3;
    sub_1A594CBD0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A59236C4(_QWORD *a1)
{
  return sub_1A592353C(a1);
}

uint64_t sub_1A59236D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A54F11CC(a1, a2, a3, a4, &qword_1EE7AB1F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CCEB10]);
}

_QWORD *sub_1A59236EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB1F8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A592575C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5923810(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A54F11CC(a1, a2, a3, a4, &qword_1EE7AB200, type metadata accessor for ConnectionStatus.Error);
}

_QWORD *sub_1A5923824(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A5923A64(a1, a2, a3, a4, &qword_1EE796270);
}

_QWORD *sub_1A5923838(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A12D8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A54F5F1C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1A5923944(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B140);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v13 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1A54F963C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A5923A50(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A5923A64(a1, a2, a3, a4, &qword_1EE796248);
}

_QWORD *sub_1A5923A64(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4])
          memmove(v14, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A5925D3C(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A5923B7C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B1C0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A58D6870(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5923C9C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A5923D28(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A5923CB8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A5923F08(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A5923CD4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A5924070(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A5923CF0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A59241D8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A5923D0C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A5924334(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A5923D28(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B178);
  v10 = *(_QWORD *)(type metadata accessor for ConnectionState() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size_0(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for ConnectionState() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5923F08(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796248);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5924070(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7962B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A59241D8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B140);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5924334(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B160);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 232);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 232 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A59244B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79A6C8);
  result = sub_1A594C6CC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v14);
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void *sub_1A5924758()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796170);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    v19 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v19 = v18;
    *(_DWORD *)(v19 + 8) = v17;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A5924910()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79A6C8);
  v2 = *v0;
  v3 = sub_1A594C6C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A5924AA4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79A6C8);
  result = sub_1A594C6CC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v14);
    sub_1A594CE64();
    sub_1A594CEAC();
    result = sub_1A594CED0();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A5924D1C(_DWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_1A594CE64();
  sub_1A594CEAC();
  v6 = sub_1A594CED0();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1A5924E38(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_DWORD *)(v9 + 4 * v8) != (_DWORD)a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_DWORD *)(v9 + 4 * v8) != (_DWORD)a2);
  }
  result = 0;
  LODWORD(a2) = *(_DWORD *)(*(_QWORD *)(*v2 + 48) + 4 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1A5924E38(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1A59244B0();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1A5924910();
      goto LABEL_14;
    }
    sub_1A5924AA4();
  }
  v8 = *v3;
  sub_1A594CE64();
  sub_1A594CEAC();
  result = sub_1A594CED0();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      result = sub_1A594CDEC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_DWORD *)(v10 + 4 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(_QWORD *)(v12 + 48) + 4 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1A5924F84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;

  v26 = a1;
  v3 = type metadata accessor for ConnectionConfiguration();
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_nextConnectionID;
  v5 = *(_DWORD *)(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_nextConnectionID);
  v6 = (unint64_t *)(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  while (1)
  {
    v7 = *v6;
    if (*v6 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v8 = sub_1A594CA38();
      result = swift_bridgeObjectRelease();
      if (!v8)
        goto LABEL_33;
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
      if (!v8)
        goto LABEL_33;
    }
    if ((v7 & 0xC000000000000001) != 0)
      break;
    if (*(_DWORD *)(*(_QWORD *)(v7 + 32) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v5)
    {
      if (v8 == 1)
        goto LABEL_33;
      if (*(_DWORD *)(*(_QWORD *)(v7 + 40) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v5)
      {
        if (v8 == 2)
          goto LABEL_33;
        if (*(_DWORD *)(*(_QWORD *)(v7 + 48) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v5)
        {
          if (v8 == 3)
            goto LABEL_33;
          if (*(_DWORD *)(*(_QWORD *)(v7 + 56) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v5)
            goto LABEL_13;
        }
      }
    }
LABEL_2:
    swift_bridgeObjectRelease_n();
    ++v5;
  }
  v14 = *(_DWORD *)(MEMORY[0x1A85AEC04](0, v7) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  swift_unknownObjectRelease();
  if (v14 == v5)
    goto LABEL_2;
  if (v8 == 1)
    goto LABEL_33;
  v15 = *(_DWORD *)(MEMORY[0x1A85AEC04](1, v7) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  swift_unknownObjectRelease();
  if (v15 == v5)
    goto LABEL_2;
  if (v8 == 2)
    goto LABEL_33;
  v16 = *(_DWORD *)(MEMORY[0x1A85AEC04](2, v7) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  swift_unknownObjectRelease();
  if (v16 == v5)
    goto LABEL_2;
  if (v8 == 3)
    goto LABEL_33;
  v17 = *(_DWORD *)(MEMORY[0x1A85AEC04](3, v7) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  result = swift_unknownObjectRelease();
  if (v17 == v5)
    goto LABEL_2;
LABEL_13:
  if (v8 == 4)
  {
LABEL_33:
    swift_bridgeObjectRelease_n();
    v18 = (uint64_t)v25;
    *(_DWORD *)(a2 + v24) = v5 + 1;
    v19 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1A55034B8(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_configuration, v18, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionConfiguration);
    v20 = *(void **)(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
    v21 = *(_QWORD *)(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_dataTransferReportAccumulator);
    v22 = v20;
    v23 = v26;
    swift_retain();
    swift_retain();
    return sub_1A59252B8(v5, v19, v18, v22, v23, (uint64_t)sub_1A5926878, v21);
  }
  v10 = 4;
  while (2)
  {
    if ((v7 & 0xC000000000000001) == 0)
    {
      if (__OFADD__(v10, 1))
        goto LABEL_35;
      v13 = *(_DWORD *)(*(_QWORD *)(v7 + 32 + 8 * v10++) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      if (v13 == v5)
        goto LABEL_2;
      goto LABEL_15;
    }
    result = MEMORY[0x1A85AEC04](v10, v7);
    if (!__OFADD__(v10++, 1))
    {
      v12 = *(_DWORD *)(result + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      result = swift_unknownObjectRelease();
      if (v12 == v5)
        goto LABEL_2;
LABEL_15:
      if (v10 == v8)
        goto LABEL_33;
      continue;
    }
    break;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1A59252B8(unsigned int a1, int a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  void *v38;
  int v39;

  v34 = a7;
  v35 = a6;
  v37 = a5;
  v38 = a4;
  v39 = a2;
  v36 = a1;
  v8 = sub_1A594A8D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ConnectionConfiguration(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v30 - v16;
  v18 = (int *)type metadata accessor for ConnectionConfiguration();
  v19 = ConnectionConfiguration.TransportLayerSecurity.init(_:)(*(unsigned __int8 *)(a3 + v18[7]));
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  ConnectionConfiguration.init(endpoint:prohibitConstrainedPaths:prohibitedInterfaceTypes:transportLayerSecurity:sourceApplicationBundleIdentifier:networkAccountIdentifier:)((uint64_t)v11, *(_BYTE *)(a3 + v18[5]), *(_QWORD *)(a3 + v18[6]), v19, *(_QWORD *)(a3 + v18[8]), *(_QWORD *)(a3 + v18[8] + 8), *(_QWORD *)(a3 + v18[9]), *(_QWORD *)(a3 + v18[9] + 8), (uint64_t)v17);
  sub_1A55034B8((uint64_t)v17, (uint64_t)v14, type metadata accessor for ConnectionConfiguration);
  v20 = (uint64_t *)(a3 + v18[10]);
  v21 = *v20;
  v22 = v20[1];
  v23 = (uint64_t *)(a3 + v18[11]);
  v24 = *v23;
  v25 = v23[1];
  v32 = v21;
  v33 = v24;
  v26 = (uint64_t *)(a3 + v18[12]);
  v27 = v26[1];
  v31 = *v26;
  type metadata accessor for CommandConnection();
  swift_allocObject();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v28 = CommandConnection.init(id:engineID:configuration:makeCredentials:getPushInformation:finishPushRegistration:queue:delegate:reportDataTransfer:test_overrideIdleRefreshInterval:)(v36, v39, (uint64_t)v14, v32, v22, v33, v25, v31, v27, v38, v37, (uint64_t)&off_1E4E7B480, v35, v34, 0, 1u);
  sub_1A55034FC(a3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionConfiguration);
  sub_1A55034FC((uint64_t)v17, type metadata accessor for ConnectionConfiguration);
  return v28;
}

uint64_t sub_1A5925510(unsigned int a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v34)(_QWORD, _QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, char);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;

  v40 = a7;
  v41 = a6;
  v43 = a5;
  v44 = a4;
  v45 = a2;
  v42 = a1;
  v38 = a8;
  v39 = a10;
  v11 = sub_1A594A8D8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ConnectionConfiguration(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v34 - v19;
  v21 = (int *)type metadata accessor for ConnectionConfiguration();
  v22 = ConnectionConfiguration.TransportLayerSecurity.init(_:)(*(unsigned __int8 *)(a3 + v21[7]));
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  ConnectionConfiguration.init(endpoint:prohibitConstrainedPaths:prohibitedInterfaceTypes:transportLayerSecurity:sourceApplicationBundleIdentifier:networkAccountIdentifier:)((uint64_t)v14, *(_BYTE *)(a3 + v21[5]), *(_QWORD *)(a3 + v21[6]), v22, *(_QWORD *)(a3 + v21[8]), *(_QWORD *)(a3 + v21[8] + 8), *(_QWORD *)(a3 + v21[9]), *(_QWORD *)(a3 + v21[9] + 8), (uint64_t)v20);
  sub_1A55034B8((uint64_t)v20, (uint64_t)v17, type metadata accessor for ConnectionConfiguration);
  v23 = (uint64_t *)(a3 + v21[10]);
  v24 = *v23;
  v25 = v23[1];
  v26 = (uint64_t *)(a3 + v21[11]);
  v27 = *v26;
  v28 = v26[1];
  v35 = v24;
  v36 = v27;
  v29 = (uint64_t *)(a3 + v21[12]);
  v31 = *v29;
  v30 = v29[1];
  v34 = *(uint64_t (**)(_QWORD, _QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, char))(v38 + 504);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v32 = v34(v42, v45, v37, v35, v25, v36, v28, v31, v30, v44, v43, v39, v41, v40, 0, 1);
  sub_1A55034FC(a3, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionConfiguration);
  sub_1A55034FC((uint64_t)v20, type metadata accessor for ConnectionConfiguration);
  return v32;
}

uint64_t sub_1A592575C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5925850(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t i;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int v24;

  v6 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = 0;
  v13 = MEMORY[0x1E0DEE9D8];
  if (v9)
    goto LABEL_8;
LABEL_14:
  if (__OFADD__(v12++, 1))
    goto LABEL_37;
  if (v12 >= v10)
    goto LABEL_34;
  v21 = *(_QWORD *)(v6 + 8 * v12);
  if (!v21)
  {
    v22 = v12 + 1;
    if (v12 + 1 < v10)
    {
      v21 = *(_QWORD *)(v6 + 8 * v22);
      if (v21)
        goto LABEL_25;
      v22 = v12 + 2;
      if (v12 + 2 >= v10)
        goto LABEL_34;
      v21 = *(_QWORD *)(v6 + 8 * v22);
      if (v21)
        goto LABEL_25;
      v22 = v12 + 3;
      if (v12 + 3 >= v10)
        goto LABEL_34;
      v21 = *(_QWORD *)(v6 + 8 * v22);
      if (v21)
      {
LABEL_25:
        v12 = v22;
        goto LABEL_26;
      }
      v22 = v12 + 4;
      if (v12 + 4 < v10)
      {
        v21 = *(_QWORD *)(v6 + 8 * v22);
        if (v21)
          goto LABEL_25;
        while (1)
        {
          v12 = v22 + 1;
          if (__OFADD__(v22, 1))
            goto LABEL_38;
          if (v12 >= v10)
            break;
          v21 = *(_QWORD *)(v6 + 8 * v12);
          ++v22;
          if (v21)
            goto LABEL_26;
        }
      }
    }
LABEL_34:
    swift_release();
    return v13;
  }
LABEL_26:
  v9 = (v21 - 1) & v21;
  for (i = __clz(__rbit64(v21)) + (v12 << 6); ; i = v15 | (v12 << 6))
  {
    v23 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    if (v23 <= a2)
      break;
    if ((uint64_t)(v23 - a2) < 0)
      goto LABEL_36;
    v14 = a2 - v23;
LABEL_6:
    if ((double)v14 / 1000000000.0 >= a3)
    {
      v24 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * i);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A5923944(0, *(_QWORD *)(v13 + 16) + 1, 1, (char *)v13);
        v13 = result;
      }
      v18 = *(_QWORD *)(v13 + 16);
      v17 = *(_QWORD *)(v13 + 24);
      v19 = v13;
      if (v18 >= v17 >> 1)
      {
        result = (uint64_t)sub_1A5923944((char *)(v17 > 1), v18 + 1, 1, (char *)v13);
        v19 = result;
      }
      *(_QWORD *)(v19 + 16) = v18 + 1;
      v13 = v19;
      *(_DWORD *)(v19 + 4 * v18 + 32) = v24;
      if (!v9)
        goto LABEL_14;
    }
    else if (!v9)
    {
      goto LABEL_14;
    }
LABEL_8:
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
  }
  v14 = a2 - v23;
  if ((uint64_t)(a2 - v23) >= 0)
    goto LABEL_6;
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1A5925A90(unint64_t a1, uint64_t a2, unsigned int a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  _QWORD v17[2];
  unsigned int v18;

  v4 = v3;
  v18 = a3;
  v7 = type metadata accessor for ConnectionState();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_14:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v10 = sub_1A594CA38();
    if (v10)
      goto LABEL_3;
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v10)
    {
LABEL_3:
      v17[1] = v4;
      v4 = a1 & 0xC000000000000001;
      v11 = 4;
      do
      {
        v12 = v11 - 4;
        if (v4)
        {
          v13 = MEMORY[0x1A85AEC04](v11 - 4, a1);
          v14 = v11 - 3;
          if (__OFADD__(v12, 1))
            goto LABEL_13;
        }
        else
        {
          v13 = *(_QWORD *)(a1 + 8 * v11);
          swift_retain();
          v14 = v11 - 3;
          if (__OFADD__(v12, 1))
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        (*(void (**)(void))(*(_QWORD *)v13 + 312))();
        v15 = ConnectionState.hasMailboxSelectedOrSelectionIsInProgress(_:)(a2, v18);
        sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
        if (v15)
        {
          swift_bridgeObjectRelease();
          return v13;
        }
        swift_release();
        ++v11;
      }
      while (v14 != v10);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A5925C24(unint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  if (a1 >> 62)
  {
LABEL_15:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v4 = sub_1A594CA38();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v4)
    {
LABEL_3:
      v5 = 4;
      do
      {
        v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v7 = MEMORY[0x1A85AEC04](v5 - 4, a1);
          v8 = __OFADD__(v6, 1);
          v9 = v5 - 3;
          if (v8)
            goto LABEL_14;
        }
        else
        {
          v7 = *(_QWORD *)(a1 + 8 * v5);
          swift_retain();
          v8 = __OFADD__(v6, 1);
          v9 = v5 - 3;
          if (v8)
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        if (*(_DWORD *)(v7 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) == a2)
        {
          swift_bridgeObjectRelease();
          return v7;
        }
        swift_release();
        ++v5;
      }
      while (v9 != v4);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A5925D3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5925E28(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned int *v4;
  unsigned int v5;
  int v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A59267D4();
  result = sub_1A594BBD4();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned int *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1A5924D1C(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1A5925E98(unint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t i;
  BOOL v14;
  uint64_t v15;
  _QWORD v17[2];

  v4 = v3;
  v8 = type metadata accessor for ConnectionState();
  v9.n128_f64[0] = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a1 >> 62))
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_3;
    return 0;
  }
LABEL_13:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = sub_1A594CA38();
  swift_bridgeObjectRelease();
  if (!v12)
    return 0;
LABEL_3:
  v17[1] = v4;
  for (i = 0; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v4 = MEMORY[0x1A85AEC04](i, a1, v9);
    }
    else
    {
      v4 = *(_QWORD *)(a1 + 8 * i + 32);
      swift_retain();
    }
    (*(void (**)(void))(*(_QWORD *)v4 + 312))();
    v14 = ConnectionState.hasMailboxSelected(_:)(a2, a3);
    sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionState);
    swift_release();
    if (v14)
      break;
    v15 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    if (v15 == v12)
      return 0;
  }
  return i;
}

uint64_t sub_1A592600C(unint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;

  if (a1 >> 62)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v6 = sub_1A594CA38();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_3;
    return 0;
  }
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
    return 0;
LABEL_3:
  v7 = 0;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v9 = MEMORY[0x1A85AEC04](v7, a1);
    }
    else
    {
      v9 = *(_QWORD *)(a1 + 32 + 8 * v7);
      swift_retain();
    }
    v10 = (*(uint64_t (**)(void))(*(_QWORD *)v9 + 576))();
    if (v10)
      break;
    swift_release();
    v8 = __OFADD__(v7++, 1);
    if (v8)
    {
LABEL_23:
      __break(1u);
      return 0;
    }
LABEL_5:
    if (v7 == v6)
      return 0;
  }
  if (v11 != a3)
    goto LABEL_4;
  v12 = *(_QWORD *)(v10 + 16);
  if (v12 != *(_QWORD *)(a2 + 16))
    goto LABEL_4;
  if (!v12 || v10 == a2)
    goto LABEL_25;
  if (*(unsigned __int8 *)(v10 + 32) != *(unsigned __int8 *)(a2 + 32))
    goto LABEL_4;
  if (v12 == 1)
    goto LABEL_25;
  if (*(unsigned __int8 *)(v10 + 33) != *(unsigned __int8 *)(a2 + 33))
  {
LABEL_4:
    swift_release();
    swift_bridgeObjectRelease();
    v8 = __OFADD__(v7++, 1);
    if (v8)
      goto LABEL_23;
    goto LABEL_5;
  }
  v13 = 0;
  v14 = v12 - 2;
  while (v14 != v13)
  {
    v15 = *(unsigned __int8 *)(v10 + v13 + 34);
    v16 = *(unsigned __int8 *)(a2 + 34 + v13++);
    if (v15 != v16)
      goto LABEL_4;
  }
LABEL_25:
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1A59261E0(unint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;

  if (a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = *(_DWORD *)(MEMORY[0x1A85AEC04](v5, a1) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
        swift_unknownObjectRelease();
        if (v6 == a2)
          return v5;
      }
      else if (*(_DWORD *)(*(_QWORD *)(a1 + 8 * v5 + 32) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1))
        break;
      if (++v5 == v4)
        return 0;
    }
    __break(1u);
LABEL_13:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v4 = sub_1A594CA38();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1A59262E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int v39;
  unsigned int v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798858);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - v8;
  v10 = (uint64_t *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_enqueuedEvents);
  swift_beginAccess();
  if (!*v10)
  {
    *v10 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(a2 + 16);
    if (v18)
    {
      v38 = v6;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v19 = (_QWORD *)(a2 + 64);
      do
      {
        v20 = *(v19 - 3);
        v21 = *((_DWORD *)v19 - 4);
        v22 = *(v19 - 1);
        v23 = *v19;
        v40 = *((_DWORD *)v19 - 8);
        v41 = v20;
        v42 = v21;
        v43 = v22;
        v44 = v23;
        sub_1A5910E08(v20);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A591E03C(&v40);
        sub_1A5910DD8(v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v19 += 5;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      v6 = v38;
    }
    v24 = *v10;
    if (*v10)
    {
      *v10 = 0;
      if (*(_QWORD *)(v24 + 16)
        && MEMORY[0x1A85B1A0C](a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engine))
      {
        sub_1A590BD68(v24);
        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
      return swift_bridgeObjectRelease();
    }
    v31 = a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1A54E330C(v31, (uint64_t)v6, (uint64_t *)&unk_1EE798858);
    v32 = sub_1A594A764();
    v33 = *(_QWORD *)(v32 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v6, 1, v32);
    if ((_DWORD)result != 1)
    {
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v34 = sub_1A594A74C();
      v35 = sub_1A594C018();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = swift_slowAlloc();
        *(_DWORD *)v36 = 68157952;
        v39 = 2;
        sub_1A594C3CC();
        *(_WORD *)(v36 + 8) = 256;
        LOBYTE(v39) = *(_BYTE *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
        sub_1A594C3CC();
        swift_release();
        _os_log_impl(&dword_1A4F90000, v34, v35, "[%.*hhx] nil enqueued events after enqueueing.", (uint8_t *)v36, 0xBu);
        MEMORY[0x1A85B1964](v36, -1, -1);
      }
      else
      {
        swift_release();
      }

      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v6, v32);
    }
LABEL_25:
    __break(1u);
    return result;
  }
  v11 = a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1A54E330C(v11, (uint64_t)v9, (uint64_t *)&unk_1EE798858);
  v12 = sub_1A594A764();
  v13 = *(_QWORD *)(v12 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  swift_retain();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v15 = sub_1A594A74C();
  v16 = sub_1A594C00C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    *(_DWORD *)v17 = 68157952;
    v40 = 2;
    sub_1A594C3CC();
    *(_WORD *)(v17 + 8) = 256;
    LOBYTE(v40) = *(_BYTE *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1A594C3CC();
    swift_release();
    _os_log_impl(&dword_1A4F90000, v15, v16, "[%.*hhx] withEnqueuedSend() called while we already have enqueued events.", (uint8_t *)v17, 0xBu);
    MEMORY[0x1A85B1964](v17, -1, -1);
  }
  else
  {
    swift_release();
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v9, v12);
  v25 = *(_QWORD *)(a2 + 16);
  if (v25)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v26 = (_QWORD *)(a2 + 64);
    do
    {
      v27 = *(v26 - 3);
      v28 = *((_DWORD *)v26 - 4);
      v29 = *(v26 - 1);
      v30 = *v26;
      v40 = *((_DWORD *)v26 - 8);
      v41 = v27;
      v42 = v28;
      v43 = v29;
      v44 = v30;
      sub_1A5910E08(v27);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A591E03C(&v40);
      sub_1A5910DD8(v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 += 5;
      --v25;
    }
    while (v25);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A59267D4()
{
  unint64_t result;

  result = qword_1EE7A0490;
  if (!qword_1EE7A0490)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ConnectionID, &type metadata for ConnectionID);
    atomic_store(result, (unint64_t *)&qword_1EE7A0490);
  }
  return result;
}

uint64_t sub_1A5926818(uint64_t a1)
{
  return sub_1A5919FE0(a1) & 1;
}

unint64_t sub_1A5926834()
{
  unint64_t result;

  result = qword_1EE7AB1E8;
  if (!qword_1EE7AB1E8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E142C, &type metadata for ConnectionPool.Error);
    atomic_store(result, (unint64_t *)&qword_1EE7AB1E8);
  }
  return result;
}

unint64_t *sub_1A592687C(unint64_t *a1)
{
  sub_1A5910E08(*a1);
  return a1;
}

unint64_t *sub_1A59268A4(unint64_t *a1)
{
  sub_1A5910DD8(*a1);
  return a1;
}

uint64_t sub_1A59268CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5926914()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A5926938()
{
  uint64_t v0;

  return sub_1A589145C(v0, (void (*)(void))sub_1A5922CE4);
}

unint64_t sub_1A5926958()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE795E88;
  if (!qword_1EE795E88)
  {
    v1 = sub_1A594ACEC();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CCEB28], v1);
    atomic_store(result, (unint64_t *)&qword_1EE795E88);
  }
  return result;
}

unint64_t sub_1A59269A0()
{
  unint64_t result;

  result = qword_1EE798758;
  if (!qword_1EE798758)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1404, &type metadata for ConnectionPool.CapturedValue);
    atomic_store(result, (unint64_t *)&qword_1EE798758);
  }
  return result;
}

uint64_t sub_1A59269E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5926A20()
{
  return swift_deallocObject();
}

uint64_t destroy for ConnectionPool.CapturedValue()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ConnectionPool.CapturedValue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for ConnectionPool.CapturedValue(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8_4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ConnectionPool.CapturedValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectionPool.CapturedValue(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for ConnectionPool.CapturedValue()
{
  return &type metadata for ConnectionPool.CapturedValue;
}

_BYTE *__swift_memcpy1_1_8(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for ConnectionPool.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5926CA0 + 4 * byte_1A59E129F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5926CD4 + 4 * byte_1A59E129A[v4]))();
}

uint64_t sub_1A5926CD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5926CDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5926CE4);
  return result;
}

uint64_t sub_1A5926CF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5926CF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5926CFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5926D04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionPool.Error()
{
  return &type metadata for ConnectionPool.Error;
}

unint64_t sub_1A5926D24()
{
  unint64_t result;

  result = qword_1EE7AB208;
  if (!qword_1EE7AB208)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E13DC, &type metadata for ConnectionPool.Error);
    atomic_store(result, (unint64_t *)&qword_1EE7AB208);
  }
  return result;
}

unint64_t sub_1A5926D68()
{
  unint64_t result;

  result = qword_1EE798738;
  if (!qword_1EE798738)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1530, &type metadata for ConnectionPool.CapturedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE798738);
  }
  return result;
}

unint64_t sub_1A5926DAC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE799658;
  if (!qword_1EE799658)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE799650);
    v2 = sub_1A5926E10();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE799658);
  }
  return result;
}

unint64_t sub_1A5926E10()
{
  unint64_t result;

  result = qword_1EE797ED0;
  if (!qword_1EE797ED0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for CommandConnection.CapturedValue, &type metadata for CommandConnection.CapturedValue);
    atomic_store(result, (unint64_t *)&qword_1EE797ED0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ConnectionPool.CapturedValue.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A5926EA0 + 4 * byte_1A59E12A9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A5926ED4 + 4 * byte_1A59E12A4[v4]))();
}

uint64_t sub_1A5926ED4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5926EDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5926EE4);
  return result;
}

uint64_t sub_1A5926EF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5926EF8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A5926EFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5926F04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionPool.CapturedValue.CodingKeys()
{
  return &type metadata for ConnectionPool.CapturedValue.CodingKeys;
}

unint64_t sub_1A5926F24()
{
  unint64_t result;

  result = qword_1EE7AB218;
  if (!qword_1EE7AB218)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1508, &type metadata for ConnectionPool.CapturedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB218);
  }
  return result;
}

unint64_t sub_1A5926F6C()
{
  unint64_t result;

  result = qword_1EE798750;
  if (!qword_1EE798750)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1478, &type metadata for ConnectionPool.CapturedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE798750);
  }
  return result;
}

unint64_t sub_1A5926FB4()
{
  unint64_t result;

  result = qword_1EE798748;
  if (!qword_1EE798748)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E14A0, &type metadata for ConnectionPool.CapturedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE798748);
  }
  return result;
}

uint64_t sub_1A5926FF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D614E676F6CLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656E69676E65 && a2 == 0xE800000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697463656E6E6F63 && a2 == 0xEB00000000736E6FLL || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F7272457473616CLL && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t initializeWithCopy for PowerTelemetry(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for PowerTelemetry(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8_7(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for PowerTelemetry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PowerTelemetry()
{
  return &type metadata for PowerTelemetry;
}

uint64_t sub_1A59272DC(char a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, _QWORD);
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t inited;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  _QWORD *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70[4];
  _QWORD v71[4];

  v66 = a3;
  v5 = a1 & 1;
  v63 = type metadata accessor for Engine.Logger(0);
  MEMORY[0x1E0C80A78](v63);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1A594A764();
  v64 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v58 = sub_1A594A0EC();
  v10 = *(_QWORD *)(v58 - 8);
  v57 = *(_QWORD *)(v10 + 64);
  v11 = MEMORY[0x1E0C80A78](v58);
  v55 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v65 = (char *)&v54 - v13;
  v59 = (char *)static MonotonicTime.now()();
  sub_1A594A0E0();
  v14 = *(char **)(v3 + 16);
  v61 = *(char **)(v3 + 8);
  v60 = v14;
  v67 = v3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5927F6C(v5, a2, v70);
  v15 = swift_allocObject();
  v16 = (uint64_t *)(v15 + 16);
  v17 = v15;
  v18 = __swift_project_boxed_opaque_existential_1_0(v70, v70[3]);
  MEMORY[0x1E0C80A78](v18);
  (*(void (**)(char *))(v20 + 16))((char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v54 = v17;
  *(_QWORD *)(v17 + 40) = AssociatedTypeWitness;
  *(_QWORD *)(v17 + 48) = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v16);
  sub_1A594B730();
  v22 = (uint64_t *)swift_allocObject();
  v23 = __swift_project_boxed_opaque_existential_1_0(v71, v71[3]);
  MEMORY[0x1E0C80A78](v23);
  (*(void (**)(char *))(v25 + 16))((char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22[5] = swift_getAssociatedTypeWitness();
  v22[6] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v22 + 2);
  sub_1A594B730();
  v26 = v10;
  v27 = *(void (**)(char *, char *, _QWORD))(v10 + 16);
  v28 = v55;
  v29 = v58;
  v27(v55, v65, v58);
  v30 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v31 = (v57 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = swift_allocObject();
  v33 = v59;
  *(_QWORD *)(v32 + 16) = v54;
  *(_QWORD *)(v32 + 24) = v33;
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v32 + v30, v28, v29);
  v34 = (_QWORD *)(v32 + v31);
  v35 = v60;
  *v34 = v61;
  v34[1] = v35;
  *(_QWORD *)(v32 + ((v31 + 23) & 0xFFFFFFFFFFFFFFF8)) = v22;
  v36 = v64;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B7B0);
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = sub_1A59283B4;
  *(_QWORD *)(v37 + 24) = v32;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B7C8);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v37;
  sub_1A5928418((uint64_t)v70);
  v39 = *(void (**)(char *, uint64_t))(v26 + 8);
  v40 = v56;
  v39(v65, v29);
  v57 = inited;
  v41 = *(_QWORD *)(inited + 16);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B7C0);
  *(_QWORD *)(swift_initStackObject() + 16) = v41;
  swift_retain();
  swift_retain();
  sub_1A594CA80();
  if (v68)
  {
    v61 = (char *)&v68 + 4;
    v60 = (char *)&v68 + 1;
    v59 = &v69;
    v65 = (char *)(MEMORY[0x1E0DEE9B8] + 8);
    *(_QWORD *)&v42 = 68158210;
    v58 = v42;
    v62 = v9;
    do
    {
      v43 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5927B68(v43);
      swift_bridgeObjectRelease();
      v44 = (void *)sub_1A594AFBC();
      swift_bridgeObjectRelease();
      PPSSendTelemetry();

      v45 = v66;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v9, v66, v40);
      sub_1A592844C(v45, (uint64_t)v7);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v46 = sub_1A594A74C();
      v47 = sub_1A594C00C();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = swift_slowAlloc();
        v49 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v48 = v58;
        LODWORD(v68) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v48 + 8) = 256;
        v50 = v7[*(int *)(v63 + 20)];
        sub_1A59285B4((uint64_t)v7);
        LOBYTE(v68) = v50;
        sub_1A594C3CC();
        *(_WORD *)(v48 + 11) = 2112;
        __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B648);
        v51 = sub_1A594AFBC();
        v68 = v51;
        sub_1A594C3CC();
        *v49 = v51;
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A4F90000, v46, v47, "[%.*hhx] Sending power telemetry event: %@", (uint8_t *)v48, 0x15u);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1A60);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v49, -1, -1);
        v52 = v48;
        v36 = v64;
        v9 = v62;
        MEMORY[0x1A85B1964](v52, -1, -1);

      }
      else
      {
        sub_1A59285B4((uint64_t)v7);

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v40);
      sub_1A594CA80();
    }
    while (v68);
  }
  swift_release();
  swift_release();
  swift_setDeallocating();
  return swift_release();
}

unint64_t sub_1A5927A28(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B830);
  v2 = sub_1A594CA5C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A54E330C(v6, (uint64_t)&v15, &qword_1EE79B658);
    v7 = v15;
    v8 = v16;
    result = sub_1A54FE060(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_1A54FBF38(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A5927B68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD v39[7];
  __int128 v40[2];
  uint64_t v41;
  __int128 v42;
  _OWORD v43[2];
  uint64_t v44;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B840);
    v2 = sub_1A594CA5C();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1A54FBF7C(*(_QWORD *)(a1 + 56) + 40 * v12, (uint64_t)v43);
    *(_QWORD *)&v42 = v19;
    *((_QWORD *)&v42 + 1) = v18;
    *(_OWORD *)&v39[5] = v42;
    v40[0] = v43[0];
    v40[1] = v43[1];
    v41 = v44;
    v30 = v19;
    v31 = v18;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_dynamicCast();
    sub_1A54FBF38(v40, (uint64_t)v29);
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B648);
    swift_dynamicCast();
    v36 = v32;
    v37 = v33;
    v38 = v34;
    sub_1A578B7E0(&v35, v39);
    v32 = v36;
    v33 = v37;
    v34 = v38;
    sub_1A578B7E0(v39, v29);
    sub_1A578B7E0(v29, &v36);
    result = sub_1A594C690();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v32;
    *(_OWORD *)(v10 + 16) = v33;
    *(_QWORD *)(v10 + 32) = v34;
    result = (uint64_t)sub_1A578B7E0(&v36, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1A550F72C();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1A5927F6C@<X0>(char a1@<W0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  char v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[64];
  _QWORD v18[4];
  _QWORD v19[4];

  v6 = a1 & 1;
  v7 = *v3;
  *v3 = (uint64_t)a2;
  swift_bridgeObjectRetain_n();
  RunningSyncRequests.Change.init(previous:current:)(v7, a2, v18);
  v8 = __swift_project_boxed_opaque_existential_1_0(v18, v18[3]);
  MEMORY[0x1E0C80A78](v8);
  (*(void (**)(_BYTE *))(v10 + 16))(&v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v17[48] = v6;
  v11 = sub_1A594B7C0();
  v12 = __swift_project_boxed_opaque_existential_1_0(v19, v19[3]);
  MEMORY[0x1E0C80A78](v12);
  (*(void (**)(_BYTE *))(v14 + 16))(&v17[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v17[16] = v6;
  v15 = sub_1A594B7C0();
  a3[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B660);
  a3[4] = sub_1A5524F80(&qword_1EE79B668, &qword_1EE79B660);
  *a3 = v11;
  a3[8] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B680);
  a3[9] = sub_1A5524F80(&qword_1EE79B698, &qword_1EE79B680);
  a3[5] = v15;
  return sub_1A5928418((uint64_t)v18);
}

uint64_t sub_1A5928124()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_1A5928148@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t result;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  unint64_t v26;

  v22 = a2;
  v23 = a4;
  v24 = a7;
  v11 = sub_1A594A0EC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  __swift_mutable_project_boxed_opaque_existential_1_0(a1 + 16, *(_QWORD *)(a1 + 40));
  sub_1A594C3C0();
  swift_endAccess();
  v15 = v25 | ((unint64_t)BYTE4(v25) << 32);
  if ((v15 & 0xFF00000000) == 0x400000000)
  {
    v21 = a3;
    swift_beginAccess();
    __swift_mutable_project_boxed_opaque_existential_1_0(a6 + 16, *(_QWORD *)(a6 + 40));
    sub_1A594C3C0();
    swift_endAccess();
    v17 = v24;
    v16 = v25;
    if ((v25 & 0xFF00000000) == 0x400000000)
    {
      result = 0;
    }
    else
    {
      v19 = v26;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v21, v11);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      result = sub_1A5928AD0(v22, (uint64_t)v14, v23, a5, v16 & 0xFFFFFFFFFFLL, v19);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A592898C((uint64_t)v14, v23, a5, v15);
    v17 = v24;
  }
  *v17 = result;
  return result;
}

uint64_t sub_1A5928310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A594A0EC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1A59283B4@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_1A594A0EC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A5928148(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_1A5928418(uint64_t a1)
{
  destroy for RunningSyncRequests.Change(a1);
  return a1;
}

uint64_t sub_1A592844C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Engine.Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5928490(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  double v13;
  double v14;
  uint64_t result;
  uint64_t v16;

  v6 = sub_1A594A0EC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v16 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
  Date.init(_:now:now:)(a3, a1, (uint64_t)v10);
  sub_1A594A0B0();
  v14 = round(v13);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v14 < 9.22337204e18)
    return (uint64_t)v14;
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1A59285B4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Engine.Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A59285F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  int v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A10C8);
    v3 = (_QWORD *)sub_1A594CA5C();
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_DWORD *)i - 2);
      v6 = *i;
      result = sub_1A5816DF4(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1A59286C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  _BYTE *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  char v20;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A10E0);
  v3 = (_QWORD *)sub_1A594CA5C();
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_DWORD *)(a1 + 48);
  v7 = *(_BYTE *)(a1 + 52);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_BYTE *)(a1 + 64);
  result = sub_1A5816C08(v4, v5);
  if ((v11 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return (unint64_t)v3;
  }
  v12 = (_BYTE *)(a1 + 104);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v3[6] + 16 * result);
    *v13 = v4;
    v13[1] = v5;
    v14 = v3[7] + 24 * result;
    *(_DWORD *)v14 = v6;
    *(_BYTE *)(v14 + 4) = v7 & 1;
    *(_QWORD *)(v14 + 8) = v8;
    *(_BYTE *)(v14 + 16) = v9 & 1;
    v15 = v3[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      break;
    v3[2] = v17;
    if (!--v1)
      goto LABEL_8;
    v18 = v12 + 40;
    v19 = *((_QWORD *)v12 - 4);
    v5 = *((_QWORD *)v12 - 3);
    v6 = *((_DWORD *)v12 - 4);
    v7 = *(v12 - 12);
    v8 = *((_QWORD *)v12 - 1);
    v9 = *v12;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A5816C08(v19, v5);
    v12 = v18;
    v4 = v19;
    if ((v20 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A592881C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t result;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796890);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB38);
    v7 = (_QWORD *)sub_1A594CA5C();
    v8 = (uint64_t)&v5[*(int *)(v2 + 48)];
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_1A54E330C(v9, (uint64_t)v5, &qword_1EE796890);
      v11 = *(_QWORD *)v5;
      v12 = *((_DWORD *)v5 + 2);
      result = sub_1A5816CE4(*(_QWORD *)v5, v12);
      if ((v14 & 1) != 0)
        break;
      v15 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v16 = v7[6] + 16 * result;
      *(_QWORD *)v16 = v11;
      *(_DWORD *)(v16 + 8) = v12;
      v17 = v7[7];
      v18 = type metadata accessor for ConnectionStatus(0);
      result = sub_1A5910FA0(v8, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v15);
      v19 = v7[2];
      v20 = __OFADD__(v19, 1);
      v21 = v19 + 1;
      if (v20)
        goto LABEL_10;
      v7[2] = v21;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1A592898C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B868);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD20;
  *(_QWORD *)(inited + 32) = 0x746E756F636361;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v9 = MEMORY[0x1E0DEA970];
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 80) = v9;
  *(_QWORD *)(inited + 48) = a2;
  *(_QWORD *)(inited + 56) = a3;
  *(_QWORD *)(inited + 88) = 1684957547;
  *(_QWORD *)(inited + 96) = 0xE400000000000000;
  v10 = qword_1A59E1650[a4 << 24 >> 56];
  v11 = MEMORY[0x1E0DEDC68];
  *(_QWORD *)(inited + 128) = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(inited + 136) = v11;
  *(_QWORD *)(inited + 104) = v10;
  v12 = MEMORY[0x1E0DEE0F8];
  *(_QWORD *)(inited + 144) = 1668184435;
  *(_QWORD *)(inited + 152) = 0xE400000000000000;
  v13 = MEMORY[0x1E0DEE100];
  *(_QWORD *)(inited + 184) = v12;
  *(_QWORD *)(inited + 192) = v13;
  *(_DWORD *)(inited + 160) = a4;
  *(_QWORD *)(inited + 200) = 0x746E657665;
  *(_QWORD *)(inited + 208) = 0xE500000000000000;
  v14 = MEMORY[0x1E0DEB420];
  *(_QWORD *)(inited + 240) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 248) = v14;
  *(_QWORD *)(inited + 216) = 1;
  v15 = sub_1A5927A28(inited);
  v16 = sub_1A594A0EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a1, v16);
  return v15;
}

unint64_t sub_1A5928AD0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B868);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD70;
  *(_QWORD *)(inited + 32) = 0x7472617473;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v13 = sub_1A5928490(a1, a2, a6);
  v14 = MEMORY[0x1E0DEDC60];
  v15 = MEMORY[0x1E0DEDC68];
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(inited + 80) = v15;
  *(_QWORD *)(inited + 48) = v13;
  *(_QWORD *)(inited + 88) = 0x746E756F636361;
  *(_QWORD *)(inited + 96) = 0xE700000000000000;
  v16 = MEMORY[0x1E0DEA970];
  *(_QWORD *)(inited + 128) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 136) = v16;
  *(_QWORD *)(inited + 104) = a3;
  *(_QWORD *)(inited + 112) = a4;
  *(_QWORD *)(inited + 144) = 1684957547;
  *(_QWORD *)(inited + 152) = 0xE400000000000000;
  v17 = qword_1A59E1650[a5 << 24 >> 56];
  *(_QWORD *)(inited + 184) = v14;
  *(_QWORD *)(inited + 192) = v15;
  *(_QWORD *)(inited + 160) = v17;
  *(_QWORD *)(inited + 200) = 1668184435;
  *(_QWORD *)(inited + 208) = 0xE400000000000000;
  v18 = MEMORY[0x1E0DEE100];
  *(_QWORD *)(inited + 240) = MEMORY[0x1E0DEE0F8];
  *(_QWORD *)(inited + 248) = v18;
  *(_DWORD *)(inited + 216) = a5;
  *(_QWORD *)(inited + 256) = 0x746E657665;
  *(_QWORD *)(inited + 264) = 0xE500000000000000;
  v19 = MEMORY[0x1E0DEB420];
  *(_QWORD *)(inited + 296) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 304) = v19;
  *(_QWORD *)(inited + 272) = 2;
  v20 = sub_1A5927A28(inited);
  v21 = sub_1A594A0EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a2, v21);
  return v20;
}

uint64_t sub_1A5928C5C(uint64_t a1)
{
  uint64_t v1;

  return *(_BYTE *)(v1 + 16) & 1 | (*(_BYTE *)(a1 + 4) != 2);
}

ValueMetadata *type metadata accessor for PowerTelemetry.Event()
{
  return &type metadata for PowerTelemetry.Event;
}

_QWORD *assignWithCopy for PowerTelemetry.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8_5(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for PowerTelemetry.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PowerTelemetry.State(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PowerTelemetry.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerTelemetry.State()
{
  return &type metadata for PowerTelemetry.State;
}

ValueMetadata *type metadata accessor for PowerTelemetry.AccountID()
{
  return &type metadata for PowerTelemetry.AccountID;
}

unint64_t sub_1A5928DCC()
{
  unint64_t result;

  result = qword_1EE7AB228;
  if (!qword_1EE7AB228)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E15E4, &type metadata for PowerTelemetry.AccountID);
    atomic_store(result, (unint64_t *)&qword_1EE7AB228);
  }
  return result;
}

__n128 __swift_memcpy24_8_7(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for RateLimit()
{
  return &type metadata for RateLimit;
}

__uint64_t sub_1A5928E38(__uint64_t *a1, uint64_t a2)
{
  __uint64_t result;
  __uint64_t v5;
  int64_t v6;

  result = static MonotonicTime.now()();
  if ((a1[1] & 1) == 0)
  {
    v5 = *a1;
    v6 = result - *a1;
    if (result >= *a1)
    {
      if ((uint64_t)(result - *a1) >= 0)
      {
LABEL_6:
        if (v6 < (uint64_t)a1[2])
          return result;
        goto LABEL_7;
      }
    }
    else
    {
      if ((uint64_t)(v5 - result) >= 0)
      {
        v6 = result - v5;
        goto LABEL_6;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
LABEL_7:
  *a1 = result;
  *((_BYTE *)a1 + 8) = 0;
  return sub_1A591BEA4(a2);
}

uint64_t AccountID.rawValue.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

IMAPSearchIndexerXPC::AccountID_optional __swiftcall AccountID.init(rawValue:)(IMAPSearchIndexerXPC::AccountID_optional rawValue)
{
  uint64_t v1;

  v1 = HIBYTE(rawValue.value.rawValue._object) & 0xF;
  if (((uint64_t)rawValue.value.rawValue._object & 0x2000000000000000) == 0)
    v1 = rawValue.value.rawValue._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (!v1)
  {
    swift_bridgeObjectRelease();
    rawValue.value.rawValue._countAndFlagsBits = 0;
    rawValue.value.rawValue._object = 0;
  }
  return rawValue;
}

uint64_t AccountID.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  return swift_bridgeObjectRelease();
}

uint64_t static AccountID.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t sub_1A5928F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A592A7A8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A5928FB8()
{
  sub_1A59290F8();
  return sub_1A594CFB4();
}

uint64_t sub_1A5928FE0()
{
  sub_1A59290F8();
  return sub_1A594CFC0();
}

uint64_t AccountID.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1288);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A59290F8();
  sub_1A594CF3C();
  sub_1A594CC18();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1A59290F8()
{
  unint64_t result;

  result = qword_1EE7A0AF8;
  if (!qword_1EE7A0AF8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E245C, &type metadata for AccountID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0AF8);
  }
  return result;
}

uint64_t AccountID.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t AccountID.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1178);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)__swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A59290F8();
  sub_1A594CF18();
  if (!v1)
  {
    v7 = sub_1A594CB70();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

uint64_t sub_1A59292A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1178);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A59290F8();
  sub_1A594CF18();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = sub_1A594CB70();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_1A59293C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1288);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A59290F8();
  sub_1A594CF3C();
  sub_1A594CC18();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t AccountConfiguration.accountID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t AccountConfiguration.accountID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*AccountConfiguration.accountID.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AccountConfiguration.endpoint.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t AccountConfiguration.endpoint.setter(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v3;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_WORD *)(v3 + 32) = a3;
  return result;
}

double (*AccountConfiguration.endpoint.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AccountConfiguration.Endpoint.host.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t AccountConfiguration.Endpoint.host.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*AccountConfiguration.Endpoint.host.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AccountConfiguration.Endpoint.port.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t AccountConfiguration.Endpoint.port.setter(uint64_t result)
{
  uint64_t v1;

  *(_WORD *)(v1 + 16) = result;
  return result;
}

double (*AccountConfiguration.Endpoint.port.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL static AccountConfiguration.Endpoint.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  char v8;
  _BOOL8 result;

  if (a1 == a4 && a2 == a5)
    return a3 == a6;
  v8 = sub_1A594CD38();
  result = 0;
  if ((v8 & 1) != 0)
    return a3 == a6;
  return result;
}

uint64_t sub_1A59296A0(char a1)
{
  if ((a1 & 1) != 0)
    return 1953656688;
  else
    return 1953722216;
}

uint64_t sub_1A59296C0()
{
  char *v0;

  return sub_1A59296A0(*v0);
}

uint64_t sub_1A59296C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A592A82C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A59296EC()
{
  sub_1A5929860();
  return sub_1A594CFB4();
}

uint64_t sub_1A5929714()
{
  sub_1A5929860();
  return sub_1A594CFC0();
}

uint64_t AccountConfiguration.Endpoint.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;

  v12 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1278);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5929860();
  sub_1A594CF3C();
  v14 = 0;
  sub_1A594CC18();
  if (!v4)
  {
    v13 = 1;
    sub_1A594CC54();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1A5929860()
{
  unint64_t result;

  result = qword_1EE7A0A60;
  if (!qword_1EE7A0A60)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E240C, &type metadata for AccountConfiguration.Endpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A60);
  }
  return result;
}

uint64_t AccountConfiguration.Endpoint.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_1A592A8F4(a1);
  if (v1)
    return v3;
  return result;
}

uint64_t sub_1A59298C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  __int16 v6;

  result = sub_1A592A8F4(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_WORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1A59298F0(_QWORD *a1)
{
  uint64_t v1;

  return AccountConfiguration.Endpoint.encode(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int16 *)(v1 + 16));
}

BOOL sub_1A592990C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  _BOOL8 result;

  v2 = *(unsigned __int16 *)(a1 + 16);
  v3 = *(unsigned __int16 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_1A594CD38();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t AccountConfiguration.transportLayerSecurity.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 34);
}

uint64_t AccountConfiguration.transportLayerSecurity.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 34) = result;
  return result;
}

double (*AccountConfiguration.transportLayerSecurity.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static AccountConfiguration.TransportLayerSecurity.__derived_enum_equals(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      if ((a2 & 0xC0) == 0x40)
        return ((a2 ^ a1) & 0x3F) == 0;
    }
    else if (a2 == 128)
    {
      return 1;
    }
  }
  else if (a2 <= 0x3Fu)
  {
    return a1 == a2;
  }
  return 0;
}

BOOL static AccountConfiguration.CertificateTrustPolicy.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1A59299F8(char a1)
{
  return *(_QWORD *)&aInsecurestartt[8 * a1];
}

uint64_t sub_1A5929A18()
{
  char *v0;

  return sub_1A59299F8(*v0);
}

uint64_t sub_1A5929A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A592ABD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5929A44()
{
  sub_1A592AA84();
  return sub_1A594CFB4();
}

uint64_t sub_1A5929A6C()
{
  sub_1A592AA84();
  return sub_1A594CFC0();
}

uint64_t sub_1A5929A94()
{
  return 0;
}

uint64_t sub_1A5929AA0()
{
  sub_1A592AB94();
  return sub_1A594CFB4();
}

uint64_t sub_1A5929AC8()
{
  sub_1A592AB94();
  return sub_1A594CFC0();
}

uint64_t sub_1A5929AF4()
{
  sub_1A592AB50();
  return sub_1A594CFB4();
}

uint64_t sub_1A5929B1C()
{
  sub_1A592AB50();
  return sub_1A594CFC0();
}

uint64_t sub_1A5929B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A592AD0C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A5929B6C()
{
  sub_1A592AAC8();
  return sub_1A594CFB4();
}

uint64_t sub_1A5929B94()
{
  sub_1A592AAC8();
  return sub_1A594CFC0();
}

uint64_t AccountConfiguration.TransportLayerSecurity.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned __int8 v15;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  char v28;
  unsigned __int8 v29;
  char v30;
  char v31;
  char v32;

  v26 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1260);
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  MEMORY[0x1E0C80A78](v3);
  v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1270);
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1268);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1258);
  v27 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A592AA84();
  v15 = v26;
  sub_1A594CF3C();
  if (!(v15 >> 6))
  {
    v30 = 1;
    sub_1A592AB50();
    sub_1A594CBC4();
    v29 = v15;
    sub_1A592AB0C();
    v19 = v22;
    sub_1A594CC3C();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v14, v12);
  }
  if (v15 >> 6 == 1)
  {
    v16 = v15 & 0x3F;
    v32 = 2;
    sub_1A592AAC8();
    v17 = v23;
    sub_1A594CBC4();
    v31 = v16;
    sub_1A592AB0C();
    v18 = v25;
    sub_1A594CC3C();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v14, v12);
  }
  v28 = 0;
  sub_1A592AB94();
  sub_1A594CBC4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v14, v12);
}

uint64_t AccountConfiguration.TransportLayerSecurity.init(from:)(_QWORD *a1)
{
  return sub_1A592AD78(a1);
}

uint64_t sub_1A5929EBC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1A592AD78(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A5929EE4(_QWORD *a1)
{
  unsigned __int8 *v1;

  return AccountConfiguration.TransportLayerSecurity.encode(to:)(a1, *v1);
}

uint64_t AccountConfiguration.CertificateTrustPolicy.hash(into:)()
{
  return sub_1A594CE88();
}

unint64_t sub_1A5929F20(unsigned __int8 a1)
{
  unint64_t result;

  result = 0xD000000000000013;
  if (a1 >= 2u)
    return 0xD000000000000011;
  return result;
}

uint64_t sub_1A5929F7C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1A5929FA8()
{
  sub_1A592B274();
  return sub_1A594CFB4();
}

uint64_t sub_1A5929FD0()
{
  sub_1A592B274();
  return sub_1A594CFC0();
}

unint64_t sub_1A5929FF8()
{
  unsigned __int8 *v0;

  return sub_1A5929F20(*v0);
}

uint64_t sub_1A592A000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A592B498(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A592A024()
{
  sub_1A592B230();
  return sub_1A594CFB4();
}

uint64_t sub_1A592A04C()
{
  sub_1A592B230();
  return sub_1A594CFC0();
}

uint64_t sub_1A592A074()
{
  sub_1A592B2FC();
  return sub_1A594CFB4();
}

uint64_t sub_1A592A09C()
{
  sub_1A592B2FC();
  return sub_1A594CFC0();
}

uint64_t sub_1A592A0C4()
{
  sub_1A592B2B8();
  return sub_1A594CFB4();
}

uint64_t sub_1A592A0EC()
{
  sub_1A592B2B8();
  return sub_1A594CFC0();
}

uint64_t AccountConfiguration.CertificateTrustPolicy.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  char v26;
  char v27;

  v24 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1240);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1250);
  v18 = *(_QWORD *)(v5 - 8);
  v19 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1248);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1238);
  v23 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A592B230();
  sub_1A594CF3C();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      v26 = 1;
      sub_1A592B2B8();
      sub_1A594CBC4();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
    }
    else
    {
      v27 = 2;
      sub_1A592B274();
      v15 = v20;
      sub_1A594CBC4();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v22);
    }
  }
  else
  {
    v25 = 0;
    sub_1A592B2FC();
    sub_1A594CBC4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v12);
}

uint64_t AccountConfiguration.CertificateTrustPolicy.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

_QWORD *AccountConfiguration.CertificateTrustPolicy.init(from:)(_QWORD *a1)
{
  return sub_1A592B5D4(a1);
}

_QWORD *sub_1A592A3D0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1A592B5D4(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1A592A3F8(_QWORD *a1)
{
  unsigned __int8 *v1;

  return AccountConfiguration.CertificateTrustPolicy.encode(to:)(a1, *v1);
}

uint64_t AccountConfiguration.init(accountID:endpoint:transportLayerSecurity:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int16 a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_WORD *)(a7 + 32) = a5;
  *(_BYTE *)(a7 + 34) = a6;
  return result;
}

uint64_t sub_1A592A428(char a1)
{
  if (!a1)
    return 0x49746E756F636361;
  if (a1 == 1)
    return 0x746E696F70646E65;
  return 0xD000000000000016;
}

uint64_t sub_1A592A488()
{
  char *v0;

  return sub_1A592A428(*v0);
}

uint64_t sub_1A592A490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A592BACC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A592A4B4()
{
  sub_1A592B9AC();
  return sub_1A594CFB4();
}

uint64_t sub_1A592A4DC()
{
  sub_1A592B9AC();
  return sub_1A594CFC0();
}

uint64_t AccountConfiguration.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v10;
  __int16 v11;
  char v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1230);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A592B9AC();
  sub_1A594CF3C();
  v10 = *v3;
  v12 = 0;
  sub_1A592B9F0();
  sub_1A594CC3C();
  if (!v2)
  {
    v10 = v3[1];
    v11 = *((_WORD *)v3 + 16);
    v12 = 1;
    sub_1A592BA34();
    sub_1A594CC3C();
    sub_1A592BA78((_BYTE *)v3 + 34, &v13);
    sub_1A592BA78(&v13, &v10);
    v12 = 2;
    sub_1A592BA88();
    sub_1A594CC3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double AccountConfiguration.init(from:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _BYTE v7[19];

  sub_1A592BC14(a1, (uint64_t)&v6);
  if (!v2)
  {
    result = *(double *)&v6;
    v5 = *(_OWORD *)v7;
    *(_OWORD *)a2 = v6;
    *(_OWORD *)(a2 + 16) = v5;
    *(_DWORD *)(a2 + 31) = *(_DWORD *)&v7[15];
  }
  return result;
}

double sub_1A592A6E4@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _BYTE v7[19];

  sub_1A592BC14(a1, (uint64_t)&v6);
  if (!v2)
  {
    result = *(double *)&v6;
    v5 = *(_OWORD *)v7;
    *(_OWORD *)a2 = v6;
    *(_OWORD *)(a2 + 16) = v5;
    *(_DWORD *)(a2 + 31) = *(_DWORD *)&v7[15];
  }
  return result;
}

uint64_t sub_1A592A728(_QWORD *a1)
{
  return AccountConfiguration.encode(to:)(a1);
}

BOOL sub_1A592A760(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_DWORD *)((char *)v6 + 15) = *(_DWORD *)((char *)a1 + 31);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_DWORD *)((char *)v8 + 15) = *(_DWORD *)((char *)a2 + 31);
  return _s20IMAPSearchIndexerXPC20AccountConfigurationV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)&v5, (uint64_t)&v7);
}

uint64_t sub_1A592A7A8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A592A82C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1953722216 && a2 == 0xE400000000000000;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953656688 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A592A8F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB300);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5929860();
  sub_1A594CF18();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v9[15] = 0;
    v7 = sub_1A594CB70();
    v9[14] = 1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594CBA0();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1A592AA84()
{
  unint64_t result;

  result = qword_1EE7A0A08;
  if (!qword_1EE7A0A08)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E23BC, &type metadata for AccountConfiguration.TransportLayerSecurity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A08);
  }
  return result;
}

unint64_t sub_1A592AAC8()
{
  unint64_t result;

  result = qword_1EE7A0A20;
  if (!qword_1EE7A0A20)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E236C, &type metadata for AccountConfiguration.TransportLayerSecurity.TlsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A20);
  }
  return result;
}

unint64_t sub_1A592AB0C()
{
  unint64_t result;

  result = qword_1EE7A0A00;
  if (!qword_1EE7A0A00)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AccountConfiguration.CertificateTrustPolicy, &type metadata for AccountConfiguration.CertificateTrustPolicy);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A00);
  }
  return result;
}

unint64_t sub_1A592AB50()
{
  unint64_t result;

  result = qword_1EE7AB230;
  if (!qword_1EE7AB230)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E231C, &type metadata for AccountConfiguration.TransportLayerSecurity.StartTLSCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB230);
  }
  return result;
}

unint64_t sub_1A592AB94()
{
  unint64_t result;

  result = qword_1EE7AB238;
  if (!qword_1EE7AB238)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E22CC, &type metadata for AccountConfiguration.TransportLayerSecurity.InsecureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB238);
  }
  return result;
}

uint64_t sub_1A592ABD8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6572756365736E69 && a2 == 0xE800000000000000;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x534C547472617473 && a2 == 0xE800000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7564404 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A592AD0C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A592AD78(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;
  unsigned __int8 v38;
  char v39;
  unsigned __int8 v40;
  char v41;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2D8);
  v3 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  v31 = v3;
  MEMORY[0x1E0C80A78](v2);
  v34 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2E0);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2E8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2F0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1_0(a1, v14);
  sub_1A592AA84();
  v15 = v36;
  sub_1A594CF18();
  if (!v15)
  {
    v28 = v6;
    v16 = v33;
    v17 = v34;
    v36 = v11;
    v18 = sub_1A594CBB8();
    v19 = v10;
    if (*(_QWORD *)(v18 + 16) == 1)
    {
      if (*(_BYTE *)(v18 + 32))
      {
        if (*(_BYTE *)(v18 + 32) == 1)
        {
          v39 = 1;
          sub_1A592AB50();
          v20 = v16;
          sub_1A594CB34();
          sub_1A592CF20();
          v21 = v29;
          sub_1A594CB88();
          (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v21);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v19);
          v6 = v38;
        }
        else
        {
          v41 = 2;
          sub_1A592AAC8();
          sub_1A594CB34();
          sub_1A592CF20();
          v25 = v30;
          sub_1A594CB88();
          v26 = v36;
          (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v25);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v10);
          v6 = v40 | 0x40u;
        }
      }
      else
      {
        v37 = 0;
        sub_1A592AB94();
        sub_1A594CB34();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v28);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v10);
        v6 = 128;
      }
    }
    else
    {
      v6 = sub_1A594C7B0();
      swift_allocError();
      v23 = v22;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2D0);
      *v23 = &type metadata for AccountConfiguration.TransportLayerSecurity;
      sub_1A594CB40();
      sub_1A594C7A4();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v23, *MEMORY[0x1E0DEC450], v6);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v10);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return v6;
}

unint64_t sub_1A592B230()
{
  unint64_t result;

  result = qword_1EE7A09B0;
  if (!qword_1EE7A09B0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E227C, &type metadata for AccountConfiguration.CertificateTrustPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A09B0);
  }
  return result;
}

unint64_t sub_1A592B274()
{
  unint64_t result;

  result = qword_1EE7AB240;
  if (!qword_1EE7AB240)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E222C, &type metadata for AccountConfiguration.CertificateTrustPolicy.AllowUserOverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB240);
  }
  return result;
}

unint64_t sub_1A592B2B8()
{
  unint64_t result;

  result = qword_1EE7AB248;
  if (!qword_1EE7AB248)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E21DC, &type metadata for AccountConfiguration.CertificateTrustPolicy.RequireTrustedTLS13CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB248);
  }
  return result;
}

unint64_t sub_1A592B2FC()
{
  unint64_t result;

  result = qword_1EE7A09D8;
  if (!qword_1EE7A09D8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E218C, &type metadata for AccountConfiguration.CertificateTrustPolicy.RequireTrustedTLS12CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A09D8);
  }
  return result;
}

BOOL _s20IMAPSearchIndexerXPC20AccountConfigurationV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  _BOOL8 result;
  int v7;
  int v8;
  char v10;
  int v11;
  int v12;
  int v13;
  char v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  unsigned __int8 v18;
  unsigned __int8 v19;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_1A594CD38(), result = 0, (v5 & 1) != 0))
  {
    v7 = *(unsigned __int16 *)(a1 + 32);
    v8 = *(unsigned __int16 *)(a2 + 32);
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    {
      if (v7 != v8)
        return 0;
    }
    else
    {
      v10 = sub_1A594CD38();
      result = 0;
      if ((v10 & 1) == 0 || v7 != v8)
        return result;
    }
    sub_1A592BA78((_BYTE *)(a1 + 34), &v15);
    sub_1A592BA78((_BYTE *)(a2 + 34), &v14);
    sub_1A592BA78(&v15, &v16);
    v11 = v16 >> 6;
    if (!v11)
    {
      v13 = v16 & 0x3F;
      v16 &= 0x3Fu;
      sub_1A592BA78(&v14, &v18);
      return v18 <= 0x3Fu && v13 == v18;
    }
    if (v11 == 1)
    {
      v12 = v16 & 0x3F;
      v16 &= 0x3Fu;
      sub_1A592BA78(&v14, &v17);
      return (v17 & 0xC0) == 0x40 && v12 == (v17 & 0x3F);
    }
    sub_1A592BA78(&v14, &v19);
    return v19 == 128;
  }
  return result;
}

uint64_t sub_1A592B498(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001A5A13710 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A5A136F0 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A5A136D0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

_QWORD *sub_1A592B5D4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  char v31;
  char v32;
  char v33;

  v27 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2B0);
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2B8);
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2C0);
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2C8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A592B230();
  v11 = (uint64_t)v30;
  sub_1A594CF18();
  if (v11)
    goto LABEL_7;
  v21 = v4;
  v22 = v8;
  v12 = v29;
  v30 = a1;
  v13 = v10;
  v14 = sub_1A594CBB8();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v18 = sub_1A594C7B0();
    swift_allocError();
    v10 = v19;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2D0);
    *v10 = &type metadata for AccountConfiguration.CertificateTrustPolicy;
    sub_1A594CB40();
    sub_1A594C7A4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v10, *MEMORY[0x1E0DEC450], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v13, v7);
    a1 = v30;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  v10 = (_QWORD *)*(unsigned __int8 *)(v14 + 32);
  if (*(_BYTE *)(v14 + 32))
  {
    if ((_DWORD)v10 == 1)
    {
      v32 = 1;
      sub_1A592B2B8();
      v16 = v28;
      sub_1A594CB34();
      v17 = v22;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v26);
    }
    else
    {
      v33 = 2;
      sub_1A592B274();
      sub_1A594CB34();
      v17 = v22;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v27);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v13, v15);
  }
  else
  {
    v31 = 0;
    sub_1A592B2FC();
    sub_1A594CB34();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v24);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v13, v7);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return v10;
}

unint64_t sub_1A592B9AC()
{
  unint64_t result;

  result = qword_1EE7A0998;
  if (!qword_1EE7A0998)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E213C, &type metadata for AccountConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0998);
  }
  return result;
}

unint64_t sub_1A592B9F0()
{
  unint64_t result;

  result = qword_1EE7A0B10;
  if (!qword_1EE7A0B10)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AccountID, &type metadata for AccountID);
    atomic_store(result, (unint64_t *)&qword_1EE7A0B10);
  }
  return result;
}

unint64_t sub_1A592BA34()
{
  unint64_t result;

  result = qword_1EE7A0A78;
  if (!qword_1EE7A0A78)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AccountConfiguration.Endpoint, &type metadata for AccountConfiguration.Endpoint);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A78);
  }
  return result;
}

_BYTE *sub_1A592BA78(_BYTE *a1, _BYTE *a2)
{
  *a2 = *a1;
  return a2;
}

unint64_t sub_1A592BA88()
{
  unint64_t result;

  result = qword_1EE7A0A58;
  if (!qword_1EE7A0A58)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AccountConfiguration.TransportLayerSecurity, &type metadata for AccountConfiguration.TransportLayerSecurity);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A58);
  }
  return result;
}

uint64_t sub_1A592BACC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000044;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xE800000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A5A150B0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A592BC14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int16 v18;
  int v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB298);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A592B9AC();
  sub_1A594CF18();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = 0;
  sub_1A592CE54();
  sub_1A594CB88();
  v9 = v17;
  v15 = v16;
  v20 = 1;
  sub_1A592CE98();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594CB88();
  v10 = v17;
  v13 = v16;
  v19 = v18;
  v20 = 2;
  sub_1A592CEDC();
  v14 = v10;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594CB88();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v10) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v11 = v14;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v11;
  *(_WORD *)(a2 + 32) = v19;
  *(_BYTE *)(a2 + 34) = v10;
  return result;
}

unint64_t sub_1A592BE88()
{
  unint64_t result;

  result = qword_1EE7AB250;
  if (!qword_1EE7AB250)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AccountID, &type metadata for AccountID);
    atomic_store(result, (unint64_t *)&qword_1EE7AB250);
  }
  return result;
}

unint64_t sub_1A592BED0()
{
  unint64_t result;

  result = qword_1EE7AB258;
  if (!qword_1EE7AB258)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AccountConfiguration.CertificateTrustPolicy, &type metadata for AccountConfiguration.CertificateTrustPolicy);
    atomic_store(result, (unint64_t *)&qword_1EE7AB258);
  }
  return result;
}

__n128 __swift_memcpy16_8_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for AccountID()
{
  return &type metadata for AccountID;
}

uint64_t initializeWithCopy for AccountConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for AccountConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  return a1;
}

__n128 __swift_memcpy35_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AccountConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 35))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 35) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 35) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountConfiguration()
{
  return &type metadata for AccountConfiguration;
}

uint64_t sub_1A592C104(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for AccountConfiguration.Endpoint(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy18_8_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AccountConfiguration.Endpoint(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountConfiguration.Endpoint(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountConfiguration.Endpoint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountConfiguration.Endpoint()
{
  return &type metadata for AccountConfiguration.Endpoint;
}

_BYTE *__swift_memcpy1_1_9(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for AccountConfiguration.TransportLayerSecurity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 194 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 194) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x3E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x3D)
    return ((uint64_t (*)(void))((char *)&loc_1A592C2D0 + 4 * byte_1A59E16B5[v4]))();
  *a1 = a2 - 62;
  return ((uint64_t (*)(void))((char *)sub_1A592C304 + 4 * byte_1A59E16B0[v4]))();
}

uint64_t sub_1A592C304(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A592C30C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A592C314);
  return result;
}

uint64_t sub_1A592C32C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A592C334);
  *(_BYTE *)result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1A592C338(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A592C340(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountConfiguration.TransportLayerSecurity()
{
  return &type metadata for AccountConfiguration.TransportLayerSecurity;
}

ValueMetadata *type metadata accessor for AccountConfiguration.CertificateTrustPolicy()
{
  return &type metadata for AccountConfiguration.CertificateTrustPolicy;
}

ValueMetadata *type metadata accessor for AccountConfiguration.CodingKeys()
{
  return &type metadata for AccountConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for AccountConfiguration.CertificateTrustPolicy.CodingKeys()
{
  return &type metadata for AccountConfiguration.CertificateTrustPolicy.CodingKeys;
}

ValueMetadata *type metadata accessor for AccountConfiguration.CertificateTrustPolicy.RequireTrustedTLS12CodingKeys()
{
  return &type metadata for AccountConfiguration.CertificateTrustPolicy.RequireTrustedTLS12CodingKeys;
}

ValueMetadata *type metadata accessor for AccountConfiguration.CertificateTrustPolicy.RequireTrustedTLS13CodingKeys()
{
  return &type metadata for AccountConfiguration.CertificateTrustPolicy.RequireTrustedTLS13CodingKeys;
}

ValueMetadata *type metadata accessor for AccountConfiguration.CertificateTrustPolicy.AllowUserOverrideCodingKeys()
{
  return &type metadata for AccountConfiguration.CertificateTrustPolicy.AllowUserOverrideCodingKeys;
}

uint64_t _s20IMAPSearchIndexerXPC20AccountConfigurationV22CertificateTrustPolicyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A592C40C + 4 * byte_1A59E16BF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A592C440 + 4 * byte_1A59E16BA[v4]))();
}

uint64_t sub_1A592C440(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A592C448(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A592C450);
  return result;
}

uint64_t sub_1A592C45C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A592C464);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A592C468(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A592C470(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountConfiguration.TransportLayerSecurity.CodingKeys()
{
  return &type metadata for AccountConfiguration.TransportLayerSecurity.CodingKeys;
}

ValueMetadata *type metadata accessor for AccountConfiguration.TransportLayerSecurity.InsecureCodingKeys()
{
  return &type metadata for AccountConfiguration.TransportLayerSecurity.InsecureCodingKeys;
}

ValueMetadata *type metadata accessor for AccountConfiguration.TransportLayerSecurity.StartTLSCodingKeys()
{
  return &type metadata for AccountConfiguration.TransportLayerSecurity.StartTLSCodingKeys;
}

ValueMetadata *type metadata accessor for AccountConfiguration.TransportLayerSecurity.TlsCodingKeys()
{
  return &type metadata for AccountConfiguration.TransportLayerSecurity.TlsCodingKeys;
}

uint64_t storeEnumTagSinglePayload for AccountConfiguration.Endpoint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A592C510 + 4 * byte_1A59E16C9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A592C544 + 4 * byte_1A59E16C4[v4]))();
}

uint64_t sub_1A592C544(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A592C54C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A592C554);
  return result;
}

uint64_t sub_1A592C560(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A592C568);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A592C56C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A592C574(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountConfiguration.Endpoint.CodingKeys()
{
  return &type metadata for AccountConfiguration.Endpoint.CodingKeys;
}

uint64_t _s20IMAPSearchIndexerXPC20AccountConfigurationV22TransportLayerSecurityO18StartTLSCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A592C5D0 + 4 * byte_1A59E16CE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A592C5F0 + 4 * byte_1A59E16D3[v4]))();
}

_BYTE *sub_1A592C5D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A592C5F0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A592C5F8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A592C600(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A592C608(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A592C610(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AccountID.CodingKeys()
{
  return &type metadata for AccountID.CodingKeys;
}

unint64_t sub_1A592C630()
{
  unint64_t result;

  result = qword_1EE7AB260;
  if (!qword_1EE7AB260)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1B84, &type metadata for AccountID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB260);
  }
  return result;
}

unint64_t sub_1A592C678()
{
  unint64_t result;

  result = qword_1EE7AB268;
  if (!qword_1EE7AB268)
  {
    result = MEMORY[0x1A85B1874]("ՠS?<T\n", &type metadata for AccountConfiguration.Endpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB268);
  }
  return result;
}

unint64_t sub_1A592C6C0()
{
  unint64_t result;

  result = qword_1EE7AB270;
  if (!qword_1EE7AB270)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1CF4, &type metadata for AccountConfiguration.TransportLayerSecurity.TlsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB270);
  }
  return result;
}

unint64_t sub_1A592C708()
{
  unint64_t result;

  result = qword_1EE7AB278;
  if (!qword_1EE7AB278)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1DAC, &type metadata for AccountConfiguration.TransportLayerSecurity.StartTLSCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB278);
  }
  return result;
}

unint64_t sub_1A592C750()
{
  unint64_t result;

  result = qword_1EE7AB280;
  if (!qword_1EE7AB280)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1EB4, &type metadata for AccountConfiguration.TransportLayerSecurity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB280);
  }
  return result;
}

unint64_t sub_1A592C798()
{
  unint64_t result;

  result = qword_1EE7AB288;
  if (!qword_1EE7AB288)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E205C, &type metadata for AccountConfiguration.CertificateTrustPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB288);
  }
  return result;
}

unint64_t sub_1A592C7E0()
{
  unint64_t result;

  result = qword_1EE7AB290;
  if (!qword_1EE7AB290)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E2114, &type metadata for AccountConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB290);
  }
  return result;
}

unint64_t sub_1A592C828()
{
  unint64_t result;

  result = qword_1EE7A09A8;
  if (!qword_1EE7A09A8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E2084, &type metadata for AccountConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A09A8);
  }
  return result;
}

unint64_t sub_1A592C870()
{
  unint64_t result;

  result = qword_1EE7A09A0;
  if (!qword_1EE7A09A0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E20AC, &type metadata for AccountConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A09A0);
  }
  return result;
}

unint64_t sub_1A592C8B8()
{
  unint64_t result;

  result = qword_1EE7A09E8;
  if (!qword_1EE7A09E8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1F7C, &type metadata for AccountConfiguration.CertificateTrustPolicy.RequireTrustedTLS12CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A09E8);
  }
  return result;
}

unint64_t sub_1A592C900()
{
  unint64_t result;

  result = qword_1EE7A09E0;
  if (!qword_1EE7A09E0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1FA4, &type metadata for AccountConfiguration.CertificateTrustPolicy.RequireTrustedTLS12CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A09E0);
  }
  return result;
}

unint64_t sub_1A592C948()
{
  unint64_t result;

  result = qword_1EE7A09F8;
  if (!qword_1EE7A09F8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1F2C, &type metadata for AccountConfiguration.CertificateTrustPolicy.RequireTrustedTLS13CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A09F8);
  }
  return result;
}

unint64_t sub_1A592C990()
{
  unint64_t result;

  result = qword_1EE7A09F0;
  if (!qword_1EE7A09F0)
  {
    result = MEMORY[0x1A85B1874]("ݝS?LP\n", &type metadata for AccountConfiguration.CertificateTrustPolicy.RequireTrustedTLS13CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A09F0);
  }
  return result;
}

unint64_t sub_1A592C9D8()
{
  unint64_t result;

  result = qword_1EE7A09D0;
  if (!qword_1EE7A09D0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1EDC, &type metadata for AccountConfiguration.CertificateTrustPolicy.AllowUserOverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A09D0);
  }
  return result;
}

unint64_t sub_1A592CA20()
{
  unint64_t result;

  result = qword_1EE7A09C8;
  if (!qword_1EE7A09C8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1F04, &type metadata for AccountConfiguration.CertificateTrustPolicy.AllowUserOverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A09C8);
  }
  return result;
}

unint64_t sub_1A592CA68()
{
  unint64_t result;

  result = qword_1EE7A09C0;
  if (!qword_1EE7A09C0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1FCC, &type metadata for AccountConfiguration.CertificateTrustPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A09C0);
  }
  return result;
}

unint64_t sub_1A592CAB0()
{
  unint64_t result;

  result = qword_1EE7A09B8;
  if (!qword_1EE7A09B8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1FF4, &type metadata for AccountConfiguration.CertificateTrustPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A09B8);
  }
  return result;
}

unint64_t sub_1A592CAF8()
{
  unint64_t result;

  result = qword_1EE7A0A40;
  if (!qword_1EE7A0A40)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1DD4, &type metadata for AccountConfiguration.TransportLayerSecurity.InsecureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A40);
  }
  return result;
}

unint64_t sub_1A592CB40()
{
  unint64_t result;

  result = qword_1EE7A0A38;
  if (!qword_1EE7A0A38)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1DFC, &type metadata for AccountConfiguration.TransportLayerSecurity.InsecureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A38);
  }
  return result;
}

unint64_t sub_1A592CB88()
{
  unint64_t result;

  result = qword_1EE7A0A50;
  if (!qword_1EE7A0A50)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1D1C, &type metadata for AccountConfiguration.TransportLayerSecurity.StartTLSCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A50);
  }
  return result;
}

unint64_t sub_1A592CBD0()
{
  unint64_t result;

  result = qword_1EE7A0A48;
  if (!qword_1EE7A0A48)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1D44, &type metadata for AccountConfiguration.TransportLayerSecurity.StartTLSCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A48);
  }
  return result;
}

unint64_t sub_1A592CC18()
{
  unint64_t result;

  result = qword_1EE7A0A30;
  if (!qword_1EE7A0A30)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1C64, &type metadata for AccountConfiguration.TransportLayerSecurity.TlsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A30);
  }
  return result;
}

unint64_t sub_1A592CC60()
{
  unint64_t result;

  result = qword_1EE7A0A28;
  if (!qword_1EE7A0A28)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1C8C, &type metadata for AccountConfiguration.TransportLayerSecurity.TlsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A28);
  }
  return result;
}

unint64_t sub_1A592CCA8()
{
  unint64_t result;

  result = qword_1EE7A0A18;
  if (!qword_1EE7A0A18)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1E24, &type metadata for AccountConfiguration.TransportLayerSecurity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A18);
  }
  return result;
}

unint64_t sub_1A592CCF0()
{
  unint64_t result;

  result = qword_1EE7A0A10;
  if (!qword_1EE7A0A10)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1E4C, &type metadata for AccountConfiguration.TransportLayerSecurity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A10);
  }
  return result;
}

unint64_t sub_1A592CD38()
{
  unint64_t result;

  result = qword_1EE7A0A70;
  if (!qword_1EE7A0A70)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1BAC, &type metadata for AccountConfiguration.Endpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A70);
  }
  return result;
}

unint64_t sub_1A592CD80()
{
  unint64_t result;

  result = qword_1EE7A0A68;
  if (!qword_1EE7A0A68)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1BD4, &type metadata for AccountConfiguration.Endpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A68);
  }
  return result;
}

unint64_t sub_1A592CDC8()
{
  unint64_t result;

  result = qword_1EE7A0B08;
  if (!qword_1EE7A0B08)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1AF4, &type metadata for AccountID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0B08);
  }
  return result;
}

unint64_t sub_1A592CE10()
{
  unint64_t result;

  result = qword_1EE7A0B00;
  if (!qword_1EE7A0B00)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E1B1C, &type metadata for AccountID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0B00);
  }
  return result;
}

unint64_t sub_1A592CE54()
{
  unint64_t result;

  result = qword_1EE7A0B18;
  if (!qword_1EE7A0B18)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AccountID, &type metadata for AccountID);
    atomic_store(result, (unint64_t *)&qword_1EE7A0B18);
  }
  return result;
}

unint64_t sub_1A592CE98()
{
  unint64_t result;

  result = qword_1EE7AB2A0;
  if (!qword_1EE7AB2A0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AccountConfiguration.Endpoint, &type metadata for AccountConfiguration.Endpoint);
    atomic_store(result, (unint64_t *)&qword_1EE7AB2A0);
  }
  return result;
}

unint64_t sub_1A592CEDC()
{
  unint64_t result;

  result = qword_1EE7AB2A8;
  if (!qword_1EE7AB2A8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AccountConfiguration.TransportLayerSecurity, &type metadata for AccountConfiguration.TransportLayerSecurity);
    atomic_store(result, (unint64_t *)&qword_1EE7AB2A8);
  }
  return result;
}

unint64_t sub_1A592CF20()
{
  unint64_t result;

  result = qword_1EE7AB2F8;
  if (!qword_1EE7AB2F8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AccountConfiguration.CertificateTrustPolicy, &type metadata for AccountConfiguration.CertificateTrustPolicy);
    atomic_store(result, (unint64_t *)&qword_1EE7AB2F8);
  }
  return result;
}

void _s3__C16os_unfair_lock_sVMa_1()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_1EE7960C8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE7960C8);
  }
}

uint64_t sub_1A592CFC4(char a1)
{
  return *(_QWORD *)&aPersonidtoken[8 * a1];
}

uint64_t sub_1A592CFE4(char a1)
{
  return *(_QWORD *)&aUsernameapplet[8 * a1];
}

uint64_t sub_1A592D004(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6F54737365636361;
  else
    return 0x656D616E72657375;
}

uint64_t sub_1A592D044(char a1)
{
  if ((a1 & 1) != 0)
    return 0x64726F7773736170;
  else
    return 12383;
}

uint64_t sub_1A592D074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A592F430(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A592D09C()
{
  sub_1A592F320();
  return sub_1A594CFB4();
}

uint64_t sub_1A592D0C4()
{
  sub_1A592F320();
  return sub_1A594CFC0();
}

uint64_t sub_1A592D0EC()
{
  char *v0;

  return sub_1A592CFC4(*v0);
}

uint64_t sub_1A592D0F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A592F4C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A592D118()
{
  sub_1A592F3A8();
  return sub_1A594CFB4();
}

uint64_t sub_1A592D140()
{
  sub_1A592F3A8();
  return sub_1A594CFC0();
}

uint64_t sub_1A592D168()
{
  char *v0;

  return sub_1A592CFE4(*v0);
}

uint64_t sub_1A592D170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A592F6DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A592D194()
{
  sub_1A592F254();
  return sub_1A594CFB4();
}

uint64_t sub_1A592D1BC()
{
  sub_1A592F254();
  return sub_1A594CFC0();
}

uint64_t sub_1A592D1E4()
{
  char *v0;

  return sub_1A592D004(*v0);
}

uint64_t sub_1A592D1EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A592F8E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A592D210()
{
  sub_1A592F2DC();
  return sub_1A594CFB4();
}

uint64_t sub_1A592D238()
{
  sub_1A592F2DC();
  return sub_1A594CFC0();
}

uint64_t sub_1A592D260()
{
  sub_1A592F298();
  return sub_1A594CFB4();
}

uint64_t sub_1A592D288()
{
  sub_1A592F298();
  return sub_1A594CFC0();
}

uint64_t sub_1A592D2B0()
{
  char *v0;

  return sub_1A592D044(*v0);
}

uint64_t sub_1A592D2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A592F9E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A592D2DC()
{
  sub_1A592F3EC();
  return sub_1A594CFB4();
}

uint64_t sub_1A592D304()
{
  sub_1A592F3EC();
  return sub_1A594CFC0();
}

void Credentials.encode(to:)(_QWORD *a1)
{
  _OWORD *v1;
  _OWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v9[5];
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v24;

  v2 = v1;
  sub_1A581ED2C(v2, &v20);
  v9[3] = *((_QWORD *)&v20 + 1);
  v9[4] = v20;
  v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A11B8);
  v9[2] = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A11D0);
  v9[1] = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v12 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A11D8);
  v15 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v17 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A11C8);
  v9[0] = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v14 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A11C0);
  v16 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v24 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A11B0);
  v18 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v8 = (char *)v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A592F254();
  v19 = v8;
  sub_1A594CF3C();
  sub_1A581ED2C(v2, &v21);
  __asm { BR              X12 }
}

uint64_t sub_1A592D5B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v2 + 56) = v1 & 0xDFFFFFFFFFFFFFFFLL;
  *(_QWORD *)(v2 + 72) = a1 & 0xCFFFFFFFFFFFFFFFLL;
  v6 = *(_QWORD *)(v5 - 168);
  v7 = *(_QWORD *)(v5 - 160);
  v8 = *(_QWORD *)(v5 - 152);
  v9 = *(_QWORD *)(v5 - 144);
  *(_BYTE *)(v5 - 264) = 0;
  sub_1A54E42B4(v6, v7);
  *(_QWORD *)(v5 - 304) = v8;
  *(_QWORD *)(v5 - 320) = v9;
  sub_1A54E42B4(v8, v9);
  sub_1A592F3EC();
  v10 = *(_QWORD *)(v5 - 72);
  v11 = *(_QWORD *)(v5 - 280);
  sub_1A594CBC4();
  *(_QWORD *)(v5 - 264) = v6;
  *(_QWORD *)(v5 - 256) = v7;
  *(_BYTE *)(v5 - 265) = 0;
  sub_1A592F364();
  v12 = *(_QWORD *)(v5 - 288);
  sub_1A594CC3C();
  if (v12)
  {
    sub_1A54E46E8(*(_QWORD *)(v5 - 304), *(_QWORD *)(v5 - 320));
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 312) + 8))(v4, v3);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 296) + 8))(v11, v10);
    return sub_1A54E46E8(v6, v7);
  }
  else
  {
    *(_QWORD *)(v5 - 264) = *(_QWORD *)(v5 - 304);
    *(_QWORD *)(v5 - 256) = *(_QWORD *)(v5 - 320);
    *(_BYTE *)(v5 - 265) = 1;
    sub_1A594CC3C();
    sub_1A54E46E8(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 312) + 8))(v4, v3);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 296) + 8))(v11, v10);
    return sub_1A54E46E8(*(_QWORD *)(v5 - 304), *(_QWORD *)(v5 - 320));
  }
}

_OWORD *Credentials.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  _OWORD *result;
  _OWORD v5[5];

  result = (_OWORD *)sub_1A592FAB0(a1, (uint64_t)v5);
  if (!v2)
    return sub_1A581ED2C(v5, a2);
  return result;
}

uint64_t sub_1A592DF70(_OWORD *a1, _OWORD *a2)
{
  char v3;
  _OWORD v5[5];
  _OWORD v6[5];

  sub_1A581ED2C(a1, v5);
  sub_1A581ED2C(a2, v6);
  _s20IMAPSearchIndexerXPC11CredentialsO21__derived_enum_equalsySbAC_ACtFZ_0(v5);
  return v3 & 1;
}

_OWORD *sub_1A592DFB8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  _OWORD *result;
  _OWORD v5[5];

  result = (_OWORD *)sub_1A592FAB0(a1, (uint64_t)v5);
  if (!v2)
    return sub_1A581ED2C(v5, a2);
  return result;
}

void sub_1A592DFFC(_QWORD *a1)
{
  _OWORD *v1;
  _OWORD v3[5];

  sub_1A581ED2C(v1, v3);
  Credentials.encode(to:)(a1);
}

void Credentials.init(_:)(uint64_t a1)
{
  sub_1A592E060(a1, (void (*)(uint64_t, _BYTE *))sub_1A5868528);
}

{
  sub_1A592E060(a1, (void (*)(uint64_t, _BYTE *))sub_1A581ED2C);
}

void sub_1A592E060(uint64_t a1, void (*a2)(uint64_t, _BYTE *))
{
  _BYTE v2[56];

  a2(a1, v2);
  __asm { BR              X11 }
}

uint64_t sub_1A592E0EC()
{
  uint64_t *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_1A54E42B4(v3, v4);
  sub_1A54E42B4(v5, v6);
  result = sub_1A593055C(v2);
  *v0 = v3;
  v0[1] = v4;
  v0[2] = v5;
  v0[3] = v6;
  v0[4] = 0;
  v0[5] = 0;
  v0[6] = 0;
  v0[7] = 0;
  v0[8] = 0;
  v0[9] = 0;
  return result;
}

void sub_1A592E268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1A592E2C8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1A592E4ACLL);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_1A592E4D0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A592E52C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_1A592E268((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_1A54E46E8(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1A592E6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1A5949BE8();
  v11 = result;
  if (result)
  {
    result = sub_1A5949C0C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1A5949C00();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1A592E268(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1A592E7A8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1A592E7EC()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1A592E820 + *((int *)qword_1A592E8E0 + (v0 >> 62))))();
}

uint64_t sub_1A592E830@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 == BYTE6(v1))
  {
    if (a1 < 1)
    {
      v5 = 1;
    }
    else
    {
      sub_1A54E42B4(v2, v1);
      sub_1A592E4D0(v4, v3);
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

void _s20IMAPSearchIndexerXPC11CredentialsO21__derived_enum_equalsySbAC_ACtFZ_0(_OWORD *a1)
{
  __int128 v2;
  _OWORD v3[3];

  sub_1A581ED2C(a1, &v2);
  sub_1A581ED2C(a1, v3);
  __asm { BR              X12 }
}

uint64_t sub_1A592E960@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(v3 - 112) = v1 & 0xDFFFFFFFFFFFFFFFLL;
  *(_QWORD *)(v3 - 96) = a1 & 0xCFFFFFFFFFFFFFFFLL;
  v4 = *(_QWORD *)(v3 - 160);
  sub_1A581ED2C(v2, &v6);
  if (!((v8 >> 59) & 6 | ((v7 & 0x2000000000000000) != 0)))
  {
    v7 &= ~0x2000000000000000uLL;
    v8 &= 0xCFFFFFFFFFFFFFFFLL;
    __asm { BR              X10 }
  }
  return 0;
}

unint64_t sub_1A592F254()
{
  unint64_t result;

  result = qword_1EE7A0708;
  if (!qword_1EE7A0708)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E2BEC, &type metadata for Credentials.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0708);
  }
  return result;
}

unint64_t sub_1A592F298()
{
  unint64_t result;

  result = qword_1EE7AB308;
  if (!qword_1EE7AB308)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E2B9C, &type metadata for Credentials.PreAuthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB308);
  }
  return result;
}

unint64_t sub_1A592F2DC()
{
  unint64_t result;

  result = qword_1EE7AB310;
  if (!qword_1EE7AB310)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E2B4C, &type metadata for Credentials.OAuthTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB310);
  }
  return result;
}

unint64_t sub_1A592F320()
{
  unint64_t result;

  result = qword_1EE7AB318;
  if (!qword_1EE7AB318)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E2AFC, &type metadata for Credentials.AppleToken2CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB318);
  }
  return result;
}

unint64_t sub_1A592F364()
{
  unint64_t result;

  result = qword_1EE796400;
  if (!qword_1EE796400)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EE796400);
  }
  return result;
}

unint64_t sub_1A592F3A8()
{
  unint64_t result;

  result = qword_1EE7A0740;
  if (!qword_1EE7A0740)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E2AAC, &type metadata for Credentials.AppleTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0740);
  }
  return result;
}

unint64_t sub_1A592F3EC()
{
  unint64_t result;

  result = qword_1EE7AB320;
  if (!qword_1EE7AB320)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E2A5C, &type metadata for Credentials.UsernameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB320);
  }
  return result;
}

uint64_t sub_1A592F430(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E656B6F74 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A592F4AC()
{
  return 0x6E656B6F74;
}

uint64_t sub_1A592F4C0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x44496E6F73726570 && a2 == 0xE800000000000000;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656B6F74 && a2 == 0xE500000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49656E696863616DLL && a2 == 0xE900000000000044 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x50656D6954656E6FLL && a2 == 0xEF64726F77737361 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E49746E65696C63 && a2 == 0xEA00000000006F66)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A592F6DC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x656D616E72657375 && a2 == 0xE800000000000000;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B6F54656C707061 && a2 == 0xEA00000000006E65 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B6F54656C707061 && a2 == 0xEB00000000326E65 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B6F54687475416FLL && a2 == 0xEA00000000006E65 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x68747541657270 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A592F8E8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x656D616E72657375 && a2 == 0xE800000000000000;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F54737365636361 && a2 == 0xEB000000006E656BLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A592F9E0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64726F7773736170 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A592FAB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD v26[5];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;

  v35 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB350);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB358);
  v6 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  v33 = v6;
  MEMORY[0x1E0C80A78](v5);
  v38 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB360);
  v28 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v37 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB368);
  v26[4] = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v36 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB370);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB378);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1_0(a1, v16);
  sub_1A592F254();
  v17 = v40;
  sub_1A594CF18();
  if (!v17)
  {
    v26[2] = v11;
    v26[3] = v10;
    v40 = v13;
    v18 = sub_1A594CBB8();
    v19 = v12;
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X10 }
    v20 = sub_1A594C7B0();
    swift_allocError();
    v21 = v19;
    v22 = v15;
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2D0);
    *v24 = &type metadata for Credentials;
    sub_1A594CB40();
    sub_1A594C7A4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v24, *MEMORY[0x1E0DEC450], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v21);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_1A593055C(uint64_t a1)
{
  sub_1A59305A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return a1;
}

uint64_t sub_1A59305A4(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  unint64_t v15;

  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_1A54E46E8(result, a2);
      result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1A54E46E8(result, a2);
      sub_1A54E46E8(a3, a4);
      sub_1A54E46E8(a5, a6);
      sub_1A54E46E8(a7, v15);
      result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      result = sub_1A54E46E8(result, a2);
      break;
    case 3uLL:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A59306A4(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  unint64_t v15;

  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_1A54E42B4(result, a2);
      result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1A54E42B4(result, a2);
      sub_1A54E42B4(a3, a4);
      sub_1A54E42B4(a5, a6);
      sub_1A54E42B4(a7, v15);
      result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      result = sub_1A54E42B4(result, a2);
      break;
    case 3uLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return result;
  }
  return result;
}

__n128 __swift_memcpy80_8_4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Credentials.CodingKeys()
{
  return &type metadata for Credentials.CodingKeys;
}

ValueMetadata *type metadata accessor for Credentials.UsernameCodingKeys()
{
  return &type metadata for Credentials.UsernameCodingKeys;
}

uint64_t _s20IMAPSearchIndexerXPC11CredentialsO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A5930A3C + 4 * byte_1A59E2521[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A5930A70 + 4 * byte_1A59E251C[v4]))();
}

uint64_t sub_1A5930A70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5930A78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5930A80);
  return result;
}

uint64_t sub_1A5930A8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5930A94);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A5930A98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5930AA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Credentials.AppleTokenCodingKeys()
{
  return &type metadata for Credentials.AppleTokenCodingKeys;
}

uint64_t storeEnumTagSinglePayload for Credentials.AppleToken2CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5930AFC + 4 * byte_1A59E2526[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5930B1C + 4 * byte_1A59E252B[v4]))();
}

_BYTE *sub_1A5930AFC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5930B1C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5930B24(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5930B2C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5930B34(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5930B3C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Credentials.AppleToken2CodingKeys()
{
  return &type metadata for Credentials.AppleToken2CodingKeys;
}

uint64_t _s20IMAPSearchIndexerXPC11CredentialsO18UsernameCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5930BA4 + 4 * byte_1A59E2535[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5930BD8 + 4 * byte_1A59E2530[v4]))();
}

uint64_t sub_1A5930BD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5930BE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5930BE8);
  return result;
}

uint64_t sub_1A5930BF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5930BFCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5930C00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5930C08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Credentials.OAuthTokenCodingKeys()
{
  return &type metadata for Credentials.OAuthTokenCodingKeys;
}

ValueMetadata *type metadata accessor for Credentials.PreAuthCodingKeys()
{
  return &type metadata for Credentials.PreAuthCodingKeys;
}

unint64_t sub_1A5930C38()
{
  unint64_t result;

  result = qword_1EE7AB328;
  if (!qword_1EE7AB328)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E2754, &type metadata for Credentials.OAuthTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB328);
  }
  return result;
}

unint64_t sub_1A5930C80()
{
  unint64_t result;

  result = qword_1EE7AB330;
  if (!qword_1EE7AB330)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E280C, &type metadata for Credentials.AppleToken2CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB330);
  }
  return result;
}

unint64_t sub_1A5930CC8()
{
  unint64_t result;

  result = qword_1EE7AB338;
  if (!qword_1EE7AB338)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E28C4, &type metadata for Credentials.AppleTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB338);
  }
  return result;
}

unint64_t sub_1A5930D10()
{
  unint64_t result;

  result = qword_1EE7AB340;
  if (!qword_1EE7AB340)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E297C, &type metadata for Credentials.UsernameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB340);
  }
  return result;
}

unint64_t sub_1A5930D58()
{
  unint64_t result;

  result = qword_1EE7AB348;
  if (!qword_1EE7AB348)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E2A34, &type metadata for Credentials.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB348);
  }
  return result;
}

unint64_t sub_1A5930DA0()
{
  unint64_t result;

  result = qword_1EE7A0738;
  if (!qword_1EE7A0738)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E28EC, &type metadata for Credentials.UsernameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0738);
  }
  return result;
}

unint64_t sub_1A5930DE8()
{
  unint64_t result;

  result = qword_1EE7A0730;
  if (!qword_1EE7A0730)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E2914, &type metadata for Credentials.UsernameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0730);
  }
  return result;
}

unint64_t sub_1A5930E30()
{
  unint64_t result;

  result = qword_1EE7A0750;
  if (!qword_1EE7A0750)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E2834, &type metadata for Credentials.AppleTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0750);
  }
  return result;
}

unint64_t sub_1A5930E78()
{
  unint64_t result;

  result = qword_1EE7A0748;
  if (!qword_1EE7A0748)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E285C, &type metadata for Credentials.AppleTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0748);
  }
  return result;
}

unint64_t sub_1A5930EC0()
{
  unint64_t result;

  result = qword_1EE7A0770;
  if (!qword_1EE7A0770)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E277C, &type metadata for Credentials.AppleToken2CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0770);
  }
  return result;
}

unint64_t sub_1A5930F08()
{
  unint64_t result;

  result = qword_1EE7A0768;
  if (!qword_1EE7A0768)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E27A4, &type metadata for Credentials.AppleToken2CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0768);
  }
  return result;
}

unint64_t sub_1A5930F50()
{
  unint64_t result;

  result = qword_1EE7A0760;
  if (!qword_1EE7A0760)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E26C4, &type metadata for Credentials.OAuthTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0760);
  }
  return result;
}

unint64_t sub_1A5930F98()
{
  unint64_t result;

  result = qword_1EE7A0758;
  if (!qword_1EE7A0758)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E26EC, &type metadata for Credentials.OAuthTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0758);
  }
  return result;
}

unint64_t sub_1A5930FE0()
{
  unint64_t result;

  result = qword_1EE7A0728;
  if (!qword_1EE7A0728)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E2674, &type metadata for Credentials.PreAuthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0728);
  }
  return result;
}

unint64_t sub_1A5931028()
{
  unint64_t result;

  result = qword_1EE7A0720;
  if (!qword_1EE7A0720)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E269C, &type metadata for Credentials.PreAuthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0720);
  }
  return result;
}

unint64_t sub_1A5931070()
{
  unint64_t result;

  result = qword_1EE7A0718;
  if (!qword_1EE7A0718)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E29A4, &type metadata for Credentials.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0718);
  }
  return result;
}

unint64_t sub_1A59310B8()
{
  unint64_t result;

  result = qword_1EE7A0710;
  if (!qword_1EE7A0710)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E29CC, &type metadata for Credentials.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0710);
  }
  return result;
}

unint64_t sub_1A59310FC()
{
  unint64_t result;

  result = qword_1EE7AB380;
  if (!qword_1EE7AB380)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EE7AB380);
  }
  return result;
}

uint64_t static DownloadRequest.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return a6 & (a1 == a4);
  result = 0;
  if ((a6 & 1) == 0 && a1 == a4)
    return sub_1A5932B34(a2, a5);
  return result;
}

uint64_t sub_1A5931180(char a1)
{
  return *(_QWORD *)&aDownloadsearch_0[8 * a1];
}

uint64_t sub_1A59311A0()
{
  char *v0;

  return sub_1A5931180(*v0);
}

uint64_t sub_1A59311A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A59350C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A59311CC()
{
  sub_1A5934C84();
  return sub_1A594CFB4();
}

uint64_t sub_1A59311F4()
{
  sub_1A5934C84();
  return sub_1A594CFC0();
}

uint64_t sub_1A593121C()
{
  sub_1A5934CC8();
  return sub_1A594CFB4();
}

uint64_t sub_1A5931244()
{
  sub_1A5934CC8();
  return sub_1A594CFC0();
}

uint64_t sub_1A593126C()
{
  sub_1A5934EC8();
  return sub_1A594CFB4();
}

uint64_t sub_1A5931294()
{
  sub_1A5934EC8();
  return sub_1A594CFC0();
}

uint64_t sub_1A59312BC()
{
  sub_1A5934DA8();
  return sub_1A594CFB4();
}

uint64_t sub_1A59312E4()
{
  sub_1A5934DA8();
  return sub_1A594CFC0();
}

uint64_t MessageToSearchIndexer.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  _QWORD v34[4];
  unsigned __int8 v35;
  __int128 v36[2];
  unsigned __int8 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v2 = v1;
  sub_1A58004BC(v2, (uint64_t)v34);
  v26 = (void *)v34[0];
  v25 = v34[1];
  v24 = v34[2];
  v23 = v34[3];
  v22 = v35;
  v30 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A11A8);
  v29 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1190);
  v27 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A11A0);
  v21 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1198);
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5934C84();
  sub_1A594CF3C();
  sub_1A58004BC(v2, (uint64_t)v36);
  v13 = v37 >> 6;
  if (v13)
  {
    v37 &= 0x3Fu;
    if (v13 == 1)
    {
      sub_1A58004BC(v36, (uint64_t)&v39);
      LOBYTE(v33[0]) = 1;
      sub_1A5934D50(v26, v25, v24, v23, v22 & 0x3F);
      sub_1A5934DA8();
      v14 = v32;
      sub_1A594CBC4();
      sub_1A58004BC(&v39, (uint64_t)v33);
      sub_1A5934DEC();
      v15 = v28;
      sub_1A594CC3C();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v15);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v14);
      return sub_1A57D6A08((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5934E30);
    }
    else
    {
      sub_1A581F948(v36, &v40);
      LOBYTE(v33[0]) = 2;
      sub_1A5934CC8();
      v18 = v32;
      sub_1A594CBC4();
      sub_1A581F948(&v40, v33);
      sub_1A5934D0C();
      v19 = v30;
      sub_1A594CC3C();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v19);
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v18);
    }
  }
  else
  {
    v37 &= 0x3Fu;
    sub_1A5846F74(v36, (uint64_t)&v38);
    LOBYTE(v33[0]) = 0;
    sub_1A5934EC8();
    v17 = v32;
    sub_1A594CBC4();
    sub_1A5846F74(&v38, (uint64_t)v33);
    sub_1A5934F0C();
    sub_1A594CC3C();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v17);
  }
}

void MessageToSearchIndexer.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 v4[2];

  sub_1A5935210(a1, v4);
  if (!v2)
    sub_1A58004BC((__int128 *)v4, a2);
}

void sub_1A59317D4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 v4[2];

  sub_1A5935210(a1, v4);
  if (!v2)
    sub_1A58004BC((__int128 *)v4, a2);
}

uint64_t sub_1A5931818(_QWORD *a1)
{
  __int128 *v1;
  _BYTE v4[40];

  sub_1A58004BC(v1, (uint64_t)v4);
  return MessageToSearchIndexer.encode(to:)(a1);
}

uint64_t sub_1A5931864(__int128 *a1, __int128 *a2)
{
  __int128 v4[2];
  __int128 v5[2];

  sub_1A58004BC(a1, (uint64_t)v4);
  sub_1A58004BC(a2, (uint64_t)v5);
  return _s20IMAPSearchIndexerXPC015MessageToSearchB0O21__derived_enum_equalsySbAC_ACtFZ_0(v4, v5) & 1;
}

BOOL static DownloadRequest.Response.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t static CredentialRequest.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t sub_1A59318E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A593191C + 4 * byte_1A59E2CE0[a1]))(0xD000000000000018, 0x80000001A5A15100);
}

uint64_t sub_1A593191C()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_1A5931934()
{
  return 0x69746E6564657263;
}

uint64_t sub_1A5931954()
{
  return 0x686372616573;
}

uint64_t sub_1A5931968()
{
  unsigned __int8 *v0;

  return sub_1A59318E4(*v0);
}

uint64_t sub_1A5931970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A59359D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5931994()
{
  sub_1A593576C();
  return sub_1A594CFB4();
}

uint64_t sub_1A59319BC()
{
  sub_1A593576C();
  return sub_1A594CFC0();
}

uint64_t sub_1A59319E4()
{
  sub_1A5935838();
  return sub_1A594CFB4();
}

uint64_t sub_1A5931A0C()
{
  sub_1A5935838();
  return sub_1A594CFC0();
}

uint64_t sub_1A5931A34()
{
  sub_1A5935948();
  return sub_1A594CFB4();
}

uint64_t sub_1A5931A5C()
{
  sub_1A5935948();
  return sub_1A594CFC0();
}

uint64_t sub_1A5931A84()
{
  sub_1A59357B0();
  return sub_1A594CFB4();
}

uint64_t sub_1A5931AAC()
{
  sub_1A59357B0();
  return sub_1A594CFC0();
}

uint64_t sub_1A5931AD4()
{
  sub_1A59358C0();
  return sub_1A594CFB4();
}

uint64_t sub_1A5931AFC()
{
  sub_1A59358C0();
  return sub_1A594CFC0();
}

void MessageFromSearchIndexer.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[13];
  int v13;

  v13 = a5;
  v12[8] = a4;
  v12[9] = a3;
  v12[10] = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB388);
  v12[6] = *(_QWORD *)(v6 - 8);
  v12[7] = v6;
  MEMORY[0x1E0C80A78](v6);
  v12[5] = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB390);
  v12[3] = *(_QWORD *)(v8 - 8);
  v12[4] = v8;
  MEMORY[0x1E0C80A78](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB398);
  v12[1] = *(_QWORD *)(v9 - 8);
  v12[2] = v9;
  MEMORY[0x1E0C80A78](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB3A0);
  MEMORY[0x1E0C80A78](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB3A8);
  v12[11] = *(_QWORD *)(v11 - 8);
  v12[12] = v11;
  MEMORY[0x1E0C80A78](v11);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A593576C();
  sub_1A594CF3C();
  __asm { BR              X10 }
}

uint64_t sub_1A5931CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 112) = 0;
  sub_1A5935948();
  v5 = *(_QWORD *)(v4 - 128);
  sub_1A594CBC4();
  *(_BYTE *)(v4 - 112) = *(_QWORD *)(v4 - 144);
  sub_1A593598C();
  sub_1A594CC3C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(v1, v5);
}

uint64_t MessageFromSearchIndexer.init(from:)(uint64_t a1)
{
  return sub_1A5934794(a1, (uint64_t (*)(void))sub_1A5935B74);
}

uint64_t sub_1A5931F50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;

  result = sub_1A5935B74(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_BYTE *)(a2 + 24) = v7;
  }
  return result;
}

void sub_1A5931F80(_QWORD *a1)
{
  uint64_t v1;

  MessageFromSearchIndexer.encode(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1A5931FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5934814(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))_s20IMAPSearchIndexerXPC017MessageFromSearchB0O21__derived_enum_equalsySbAC_ACtFZ_0);
}

uint64_t XPCSession.sendToSearchIndexer(_:replyHandler:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _BYTE v7[40];

  sub_1A58004BC(a1, (uint64_t)v7);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  sub_1A5936248();
  sub_1A593628C();
  swift_retain();
  sub_1A594A7B8();
  return swift_release();
}

uint64_t sub_1A593205C(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  return a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24) | (*(unsigned __int8 *)(a1 + 25) << 8));
}

uint64_t XPCSession.sendToSearchIndexer(_:)(__int128 *a1)
{
  _BYTE v2[40];

  sub_1A58004BC(a1, (uint64_t)v2);
  sub_1A5936248();
  return sub_1A594A7C4();
}

uint64_t XPCSession.sendToMaild(_:replyHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a5;
  *(_QWORD *)(v8 + 24) = a6;
  sub_1A5936304();
  sub_1A5936348();
  swift_retain();
  sub_1A594A7B8();
  return swift_release();
}

uint64_t XPCSession.sendToMaild(_:)()
{
  sub_1A5936304();
  return sub_1A594A7C4();
}

uint64_t DownloadRequest.Response.hash(into:)()
{
  return sub_1A594CE88();
}

uint64_t sub_1A593220C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A5932244 + 4 * byte_1A59E2CE8[a1]))(0xD000000000000014, 0x80000001A5A15120);
}

uint64_t sub_1A5932244()
{
  return 0x7265666544646964;
}

uint64_t sub_1A593225C()
{
  return 0x6F43746F4E646964;
}

uint64_t sub_1A5932280()
{
  return 0x6C706D6F43646964;
}

uint64_t sub_1A59322A0()
{
  return 0x6572756C696166;
}

uint64_t sub_1A59322B8()
{
  unsigned __int8 *v0;

  return sub_1A593220C(*v0);
}

uint64_t sub_1A59322C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5936524(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A59322E4()
{
  sub_1A593638C();
  return sub_1A594CFB4();
}

uint64_t sub_1A593230C()
{
  sub_1A593638C();
  return sub_1A594CFC0();
}

uint64_t sub_1A5932334()
{
  sub_1A5936458();
  return sub_1A594CFB4();
}

uint64_t sub_1A593235C()
{
  sub_1A5936458();
  return sub_1A594CFC0();
}

uint64_t sub_1A5932384()
{
  sub_1A5936414();
  return sub_1A594CFB4();
}

uint64_t sub_1A59323AC()
{
  sub_1A5936414();
  return sub_1A594CFC0();
}

uint64_t sub_1A59323D4()
{
  sub_1A59364E0();
  return sub_1A594CFB4();
}

uint64_t sub_1A59323FC()
{
  sub_1A59364E0();
  return sub_1A594CFC0();
}

uint64_t sub_1A5932424()
{
  sub_1A593649C();
  return sub_1A594CFB4();
}

uint64_t sub_1A593244C()
{
  sub_1A593649C();
  return sub_1A594CFC0();
}

uint64_t sub_1A5932474()
{
  sub_1A59363D0();
  return sub_1A594CFB4();
}

uint64_t sub_1A593249C()
{
  sub_1A59363D0();
  return sub_1A594CFC0();
}

void DownloadRequest.Response.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[11];
  uint64_t v13;
  uint64_t v14;

  v13 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB3E0);
  v12[9] = *(_QWORD *)(v3 - 8);
  v12[10] = v3;
  MEMORY[0x1E0C80A78](v3);
  v12[8] = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB3E8);
  v12[6] = *(_QWORD *)(v5 - 8);
  v12[7] = v5;
  MEMORY[0x1E0C80A78](v5);
  v12[5] = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB3F0);
  v12[3] = *(_QWORD *)(v7 - 8);
  v12[4] = v7;
  MEMORY[0x1E0C80A78](v7);
  v12[2] = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB3F8);
  v12[0] = *(_QWORD *)(v9 - 8);
  v12[1] = v9;
  MEMORY[0x1E0C80A78](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB400);
  MEMORY[0x1E0C80A78](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB408);
  v14 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A593638C();
  sub_1A594CF3C();
  __asm { BR              X10 }
}

uint64_t sub_1A59326BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 69) = 0;
  sub_1A59364E0();
  sub_1A594CBC4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 88) + 8))(v2, v1);
}

uint64_t DownloadRequest.Response.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

char *DownloadRequest.Response.init(from:)(_QWORD *a1)
{
  return sub_1A5936748(a1);
}

char *sub_1A5932884@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_1A5936748(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

void sub_1A59328AC(_QWORD *a1)
{
  unsigned __int8 *v1;

  DownloadRequest.Response.encode(to:)(a1, *v1);
}

BOOL static DownloadRequest.ID.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t _s20IMAPSearchIndexerXPC18CredentialResponseO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  char v6;
  char v7;
  BOOL v9;
  _OWORD v11[5];
  _OWORD v12[5];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v7 = 1;
    }
    else
    {
      v3 = (_OWORD *)(a1 + 32);
      v4 = (_OWORD *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        sub_1A581ED2C(v3, v11);
        sub_1A581ED2C(v4, v12);
        sub_1A58687AC(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A59306A4);
        sub_1A58687AC(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A59306A4);
        _s20IMAPSearchIndexerXPC11CredentialsO21__derived_enum_equalsySbAC_ACtFZ_0(v11);
        v7 = v6;
        sub_1A58687AC(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A593B850);
        sub_1A58687AC(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A593B850);
        v9 = v5-- != 0;
        if ((v7 & 1) == 0)
          break;
        v3 += 5;
        v4 += 5;
      }
      while (v9);
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

BOOL sub_1A59329BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  _BOOL8 result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
    return 0;
  v3 = (int *)(a1 + 36);
  v4 = (int *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1A5932A28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  unsigned __int8 **v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  BOOL v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  uint64_t i;
  int v17;
  int v18;
  int v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    v4 = a1 + 32;
    v5 = a2 + 32;
    while (1)
    {
      v6 = (unsigned __int8 **)(v4 + 24 * v3);
      v7 = *v6;
      v8 = (unsigned __int8 **)(v5 + 24 * v3);
      v9 = *v8;
      v10 = *((_QWORD *)*v6 + 2);
      if (v10 != *((_QWORD *)*v8 + 2))
        break;
      v11 = v6[1];
      v12 = v6[2];
      if (v10)
        v13 = v7 == v9;
      else
        v13 = 1;
      if (!v13)
      {
        if (v7[32] != v9[32])
          return 0;
        if (v10 != 1)
        {
          if (v7[33] != v9[33])
            return 0;
          v14 = v7 + 34;
          v15 = v9 + 34;
          for (i = v10 - 2; i; --i)
          {
            v18 = *v14++;
            v17 = v18;
            v19 = *v15++;
            if (v17 != v19)
              return 0;
          }
        }
      }
      if ((v11 != v8[1] || v12 != v8[2]) && (sub_1A594CD38() & 1) == 0)
        break;
      if (++v3 == v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1A5932B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  BOOL v13;
  char v15;
  uint64_t result;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    v3 = a2;
    if (a1 != a2)
    {
      v4 = 0;
      v19 = a1;
      while (1)
      {
        v5 = *(_QWORD *)(a1 + v4 + 48);
        v6 = *(_QWORD *)(a1 + v4 + 56);
        v7 = *(unsigned __int16 *)(a1 + v4 + 64);
        v8 = *(unsigned __int8 *)(a1 + v4 + 66);
        v9 = *(_QWORD *)(v3 + v4 + 48);
        v10 = *(_QWORD *)(v3 + v4 + 56);
        v11 = *(unsigned __int16 *)(v3 + v4 + 64);
        v12 = *(unsigned __int8 *)(v3 + v4 + 66);
        v13 = *(_QWORD *)(a1 + v4 + 32) == *(_QWORD *)(v3 + v4 + 32)
           && *(_QWORD *)(a1 + v4 + 40) == *(_QWORD *)(v3 + v4 + 40);
        if (!v13 && (sub_1A594CD38() & 1) == 0)
          break;
        if (v5 == v9 && v6 == v10)
        {
          if (v7 != v11)
            return 0;
        }
        else
        {
          v15 = sub_1A594CD38();
          result = 0;
          if ((v15 & 1) == 0 || v7 != v11)
            return result;
        }
        if (v8 >> 6)
        {
          if (v8 >> 6 == 1)
          {
            if ((v12 & 0xC0) != 0x40 || ((v12 ^ v8) & 0x3F) != 0)
              return 0;
          }
          else if (v12 != 128)
          {
            return 0;
          }
        }
        else if (v12 > 0x3F || v8 != v12)
        {
          return 0;
        }
        v4 += 40;
        --v2;
        a1 = v19;
        v3 = a2;
        if (!v2)
          return 1;
      }
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1A5932C80(char a1)
{
  if ((a1 & 1) != 0)
    return 1886352499;
  else
    return 0x7472617473;
}

uint64_t sub_1A5932CAC()
{
  char *v0;

  return sub_1A5932C80(*v0);
}

uint64_t sub_1A5932CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5936D7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5932CD8()
{
  sub_1A5936C28();
  return sub_1A594CFB4();
}

uint64_t sub_1A5932D00()
{
  sub_1A5936C28();
  return sub_1A594CFC0();
}

uint64_t sub_1A5932D28()
{
  sub_1A5936CF4();
  return sub_1A594CFB4();
}

uint64_t sub_1A5932D50()
{
  sub_1A5936CF4();
  return sub_1A594CFC0();
}

uint64_t sub_1A5932D78()
{
  sub_1A5936C6C();
  return sub_1A594CFB4();
}

uint64_t sub_1A5932DA0()
{
  sub_1A5936C6C();
  return sub_1A594CFC0();
}

uint64_t DownloadRequest.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v24 = a2;
  v23 = a4;
  v19 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1210);
  v20 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1218);
  v21 = *(_QWORD *)(v8 - 8);
  v22 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1208);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5936C28();
  sub_1A594CF3C();
  if ((v23 & 1) != 0)
  {
    LOBYTE(v27) = 1;
    sub_1A5936C6C();
    sub_1A594CBC4();
    v27 = v24;
    sub_1A5936CB0();
    sub_1A594CC3C();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v15 = v12;
    LOBYTE(v27) = 0;
    sub_1A5936CF4();
    sub_1A594CBC4();
    v27 = v24;
    v26 = 0;
    sub_1A5936CB0();
    v16 = v22;
    v17 = v25;
    sub_1A594CC3C();
    if (!v17)
    {
      v27 = v19;
      v26 = 1;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0E20);
      sub_1A569ECC8(&qword_1EE7A0E28, &qword_1EE7A0E20, (uint64_t (*)(void))sub_1A5936D38, MEMORY[0x1E0DEAF10]);
      sub_1A594CC3C();
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v16);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v14, v11);
  }
}

_QWORD *DownloadRequest.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;

  result = sub_1A5936E4C(a1);
  if (v1)
    return (_QWORD *)v3;
  return result;
}

_QWORD *sub_1A59330C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  char v6;

  result = sub_1A5936E4C(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1A59330F0(_QWORD *a1)
{
  uint64_t v1;

  return DownloadRequest.encode(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_1A593310C(uint64_t a1, uint64_t a2)
{
  char v3;

  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if (*(_QWORD *)a1 == *(_QWORD *)a2)
      return *(unsigned __int8 *)(a2 + 16);
    else
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 == *(_QWORD *)a2)
      v3 = *(_BYTE *)(a2 + 16);
    else
      v3 = 1;
    if ((v3 & 1) != 0)
      return 0;
    else
      return sub_1A5932B34(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8));
  }
}

uint64_t DownloadRequest.ID.next.getter(uint64_t a1)
{
  BOOL v1;
  uint64_t result;

  v1 = __OFADD__(a1, 1);
  result = a1 + 1;
  if (v1)
    __break(1u);
  return result;
}

BOOL static DownloadRequest.ID.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

BOOL static DownloadRequest.ID.> infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a2 < a1;
}

uint64_t DownloadRequest.ID.init(from:)(uint64_t a1)
{
  uint64_t v2;
  _BYTE v4[40];

  sub_1A54FBF7C(a1, (uint64_t)v4);
  v2 = sub_1A594BCE8();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t DownloadRequest.ID.encode(to:)()
{
  return sub_1A594BCF4();
}

uint64_t sub_1A593324C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[40];

  sub_1A54FBF7C(a1, (uint64_t)v7);
  v5 = sub_1A594BCE8();
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1A59332B0()
{
  return sub_1A594BCF4();
}

uint64_t sub_1A59332D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A593736C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A59332F8()
{
  sub_1A59372E4();
  return sub_1A594CFB4();
}

uint64_t sub_1A5933320()
{
  sub_1A59372E4();
  return sub_1A594CFC0();
}

uint64_t sub_1A5933348()
{
  sub_1A5937328();
  return sub_1A594CFB4();
}

uint64_t sub_1A5933370()
{
  sub_1A5937328();
  return sub_1A594CFC0();
}

uint64_t CredentialRequest.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v13 = a2;
  v14 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB430);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB438);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A59372E4();
  sub_1A594CF3C();
  sub_1A5937328();
  sub_1A594CBC4();
  v15 = v13;
  v16 = v14;
  sub_1A592B9F0();
  sub_1A594CC3C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

_QWORD *CredentialRequest.init(from:)(_QWORD *a1)
{
  return sub_1A593742C(a1);
}

_QWORD *sub_1A5933524@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_1A593742C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1A593354C(_QWORD *a1)
{
  uint64_t *v1;

  return CredentialRequest.encode(to:)(a1, *v1, v1[1]);
}

uint64_t sub_1A5933568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A59377BC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A5933590()
{
  sub_1A59376F0();
  return sub_1A594CFB4();
}

uint64_t sub_1A59335B8()
{
  sub_1A59376F0();
  return sub_1A594CFC0();
}

uint64_t sub_1A59335E0()
{
  sub_1A5937734();
  return sub_1A594CFB4();
}

uint64_t sub_1A5933608()
{
  sub_1A5937734();
  return sub_1A594CFC0();
}

uint64_t CredentialResponse.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1228);
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1220);
  v11 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A59376F0();
  sub_1A594CF3C();
  sub_1A5937734();
  sub_1A594CBC4();
  v13 = a2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0E10);
  sub_1A569ECC8(&qword_1EE7A0E18, &qword_1EE7A0E10, (uint64_t (*)(void))sub_1A5937778, MEMORY[0x1E0DEAF10]);
  sub_1A594CC3C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v9, v7);
}

_QWORD *CredentialResponse.init(from:)(_QWORD *a1)
{
  return sub_1A5937870(a1);
}

_QWORD *sub_1A59337F0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1A5937870(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A5933818(_QWORD *a1)
{
  uint64_t *v1;

  return CredentialResponse.encode(to:)(a1, *v1);
}

uint64_t sub_1A5933830(uint64_t *a1, uint64_t *a2)
{
  return _s20IMAPSearchIndexerXPC18CredentialResponseO21__derived_enum_equalsySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1A593383C(char a1)
{
  if (!a1)
    return 0x686372616573;
  if (a1 == 1)
    return 0xD000000000000015;
  return 0xD000000000000012;
}

uint64_t sub_1A5933894(char a1)
{
  if ((a1 & 1) != 0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_1A59338AC()
{
  char *v0;

  return sub_1A593383C(*v0);
}

uint64_t sub_1A59338B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5937D40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A59338D8()
{
  sub_1A5937B64();
  return sub_1A594CFB4();
}

uint64_t sub_1A5933900()
{
  sub_1A5937B64();
  return sub_1A594CFC0();
}

uint64_t sub_1A5933928()
{
  char *v0;

  return sub_1A5933894(*v0);
}

uint64_t sub_1A5933930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5937E7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5933954()
{
  sub_1A5937BA8();
  return sub_1A594CFB4();
}

uint64_t sub_1A593397C()
{
  sub_1A5937BA8();
  return sub_1A594CFC0();
}

uint64_t sub_1A59339A4()
{
  sub_1A5937C74();
  return sub_1A594CFB4();
}

uint64_t sub_1A59339CC()
{
  sub_1A5937C74();
  return sub_1A594CFC0();
}

uint64_t sub_1A59339F4()
{
  sub_1A5937CB8();
  return sub_1A594CFB4();
}

uint64_t sub_1A5933A1C()
{
  sub_1A5937CB8();
  return sub_1A594CFC0();
}

uint64_t SearchRequest.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  __int128 v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  _QWORD v36[5];
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  v2 = v1;
  sub_1A58004BC(v2, (uint64_t)v36);
  v26 = (id)v36[0];
  *(_QWORD *)&v27 = v36[2];
  v30 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A11F8);
  v29 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v28 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1200);
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A11E8);
  v25 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A11F0);
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5937B64();
  sub_1A594CF3C();
  sub_1A58004BC(v2, (uint64_t)&v37);
  if (v40)
  {
    if (v40 == 1)
    {
      v27 = v37;
      v14 = v38;
      v13 = v39;
      LOBYTE(v34) = 2;
      sub_1A5937BA8();
      v15 = v28;
      v16 = v32;
      sub_1A594CBC4();
      v34 = v27;
      v35 = v14;
      v33 = 0;
      sub_1A5937BEC();
      v17 = v30;
      v18 = v43;
      sub_1A594CC3C();
      if (!v18)
      {
        *(_QWORD *)&v34 = v13;
        v33 = 1;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0E38);
        sub_1A569ECC8(&qword_1EE7AB448, &qword_1EE7A0E38, (uint64_t (*)(void))sub_1A5937C30, MEMORY[0x1E0DEAF10]);
        sub_1A594CC3C();
      }
      (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v17);
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v16);
    }
    else
    {
      LOBYTE(v34) = 1;
      sub_1A5937C74();
      v22 = v32;
      sub_1A594CBC4();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v22);
    }
  }
  else
  {
    v41 = v37;
    v42 = v38;
    LOBYTE(v34) = 0;
    sub_1A5937CB8();
    v20 = v26;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v21 = v32;
    sub_1A594CBC4();
    v34 = v41;
    v35 = v42;
    sub_1A5937CFC();
    sub_1A594CC3C();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v21);
    return sub_1A57D6A08((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5934E70);
  }
}

uint64_t SearchRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5[2];

  result = sub_1A5937F34(a1, (uint64_t)v5);
  if (!v2)
    return sub_1A58004BC(v5, a2);
  return result;
}

uint64_t sub_1A5933EDC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5[2];

  result = sub_1A5937F34(a1, (uint64_t)v5);
  if (!v2)
    return sub_1A58004BC(v5, a2);
  return result;
}

uint64_t sub_1A5933F20(_QWORD *a1)
{
  __int128 *v1;
  _BYTE v4[40];

  sub_1A58004BC(v1, (uint64_t)v4);
  return SearchRequest.encode(to:)(a1);
}

BOOL sub_1A5933F6C(__int128 *a1, __int128 *a2)
{
  __int128 v4[2];
  __int128 v5[2];

  sub_1A58004BC(a1, (uint64_t)v4);
  sub_1A58004BC(a2, (uint64_t)v5);
  return _s20IMAPSearchIndexerXPC13SearchRequestO21__derived_enum_equalsySbAC_ACtFZ_0(v4, v5);
}

uint64_t sub_1A5933FB4(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  unsigned __int8 *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  int64_t v30;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v30 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v10 = v9 | (v4 << 6);
LABEL_25:
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 24 * v10);
    v16 = *v14;
    v15 = (unsigned __int8 *)v14[1];
    v17 = (unsigned __int8 *)v14[2];
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v10);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v19 = sub_1A593E164(v16, v15, v17);
    v21 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0
      || (v22 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v19), v23 = *(_QWORD *)(v22 + 16), v23 != *(_QWORD *)(v18 + 16)))
    {
LABEL_37:
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v23)
      v24 = v22 == v18;
    else
      v24 = 1;
    if (!v24)
    {
      if (*(_DWORD *)(v22 + 32) != *(_DWORD *)(v18 + 32))
        goto LABEL_37;
      if (v23 != 1)
      {
        if (*(_DWORD *)(v22 + 36) != *(_DWORD *)(v18 + 36))
          goto LABEL_37;
        v25 = 0;
        v26 = v22 + 40;
        v27 = v23 - 2;
        while (v27 != v25)
        {
          v28 = *(_DWORD *)(v26 + 4 * v25);
          v29 = *(_DWORD *)(v18 + 4 * v25++ + 40);
          if (v28 != v29)
            goto LABEL_37;
        }
      }
    }
    result = swift_bridgeObjectRelease();
  }
  v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v11 >= v30)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v11);
  ++v4;
  if (v12)
    goto LABEL_24;
  v4 = v11 + 1;
  if (v11 + 1 >= v30)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v4);
  if (v12)
    goto LABEL_24;
  v4 = v11 + 2;
  if (v11 + 2 >= v30)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v4);
  if (v12)
    goto LABEL_24;
  v4 = v11 + 3;
  if (v11 + 3 >= v30)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v4);
  if (v12)
  {
LABEL_24:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_25;
  }
  v13 = v11 + 4;
  if (v13 >= v30)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v30)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_24;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A5934224(char a1)
{
  if (!a1)
    return 0x6552686372616573;
  if (a1 == 1)
    return 0xD000000000000012;
  return 0x646564756C637865;
}

uint64_t sub_1A5934294()
{
  char *v0;

  return sub_1A5934224(*v0);
}

uint64_t sub_1A593429C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A593868C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A59342C0()
{
  sub_1A59384F0();
  return sub_1A594CFB4();
}

uint64_t sub_1A59342E8()
{
  sub_1A59384F0();
  return sub_1A594CFC0();
}

uint64_t sub_1A5934310()
{
  sub_1A5938534();
  return sub_1A594CFB4();
}

uint64_t sub_1A5934338()
{
  sub_1A5938534();
  return sub_1A594CFC0();
}

uint64_t sub_1A5934360()
{
  sub_1A5938578();
  return sub_1A594CFB4();
}

uint64_t sub_1A5934388()
{
  sub_1A5938578();
  return sub_1A594CFC0();
}

uint64_t sub_1A59343B0()
{
  sub_1A59385BC();
  return sub_1A594CFB4();
}

uint64_t sub_1A59343D8()
{
  sub_1A59385BC();
  return sub_1A594CFC0();
}

uint64_t SearchResponse.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v32 = a5;
  v28 = a3;
  v29 = a4;
  v33 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB458);
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB460);
  v26 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB468);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB470);
  v34 = *(_QWORD *)(v16 - 8);
  v35 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A59384F0();
  sub_1A594CF3C();
  if ((_BYTE)v32)
  {
    if (v32 == 1)
    {
      LOBYTE(v36) = 1;
      sub_1A5938578();
      v19 = v35;
      sub_1A594CBC4();
      v36 = v33;
      v37 = v28;
      v38 = v29;
      sub_1A59357F4();
      v20 = v27;
      sub_1A594CC3C();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v20);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v18, v19);
    }
    else
    {
      LOBYTE(v36) = 2;
      sub_1A5938534();
      v23 = v35;
      sub_1A594CBC4();
      v36 = v33;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0E38);
      sub_1A569ECC8(&qword_1EE7AB448, &qword_1EE7A0E38, (uint64_t (*)(void))sub_1A5937C30, MEMORY[0x1E0DEAF10]);
      v24 = v31;
      sub_1A594CC3C();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v18, v23);
    }
  }
  else
  {
    LOBYTE(v36) = 0;
    sub_1A59385BC();
    v22 = v35;
    sub_1A594CBC4();
    v36 = v33;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0D38);
    sub_1A5938600();
    sub_1A594CC3C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v18, v22);
  }
}

uint64_t SearchResponse.init(from:)(uint64_t a1)
{
  return sub_1A5934794(a1, (uint64_t (*)(void))sub_1A59387F8);
}

uint64_t sub_1A5934794(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  result = a2();
  if (v2)
    return v4;
  return result;
}

char *sub_1A59347B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char *result;
  uint64_t v5;
  uint64_t v6;
  char v7;

  result = sub_1A59387F8(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_BYTE *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_1A59347E8(_QWORD *a1)
{
  uint64_t v1;

  return SearchResponse.encode(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1A5934808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5934814(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))_s20IMAPSearchIndexerXPC14SearchResponseO21__derived_enum_equalsySbAC_ACtFZ_0);
}

uint64_t sub_1A5934814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(unsigned __int8 *)(a2 + 24));
}

BOOL _s20IMAPSearchIndexerXPC13SearchRequestO21__derived_enum_equalsySbAC_ACtFZ_0(__int128 *a1, __int128 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int8x16_t v8;
  char v9;
  BOOL v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  int8x16_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int8x16_t v24;
  int8x8_t v25;
  char v27;
  char v28;
  int8x16_t v30;
  int8x16_t v31;
  char v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  id v38;
  uint64_t v39;

  sub_1A58004BC(a1, (uint64_t)&v33);
  if (!v37)
  {
    v11 = v33;
    v12 = v34;
    v13 = v35;
    sub_1A58004BC(a2, (uint64_t)&v30);
    if (v32)
      return 0;
    v14 = v30;
    v15 = v31.i64[0];
    v38 = v11;
    v39 = v30.i64[0];
    sub_1A593B950(&v38);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A593B950((id *)&v39);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v16 = objc_msgSend(v11, sel_uniqueIdentifier);
    v17 = sub_1A594B40C();
    v19 = v18;

    v20 = objc_msgSend((id)v14.i64[0], sel_uniqueIdentifier);
    v21 = sub_1A594B40C();
    v23 = v22;

    if (v17 == v21 && v19 == v23)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v27 = sub_1A594CD38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
        goto LABEL_23;
    }
    if (v12 == v14.i64[1])
    {
      v28 = sub_1A5932A28(v13, v15);
      sub_1A593B978((id *)&v39);
      swift_bridgeObjectRelease();
      sub_1A593B978(&v38);
      swift_bridgeObjectRelease();
      return (v28 & 1) != 0;
    }
LABEL_23:
    sub_1A593B978((id *)&v39);
    swift_bridgeObjectRelease();
    sub_1A593B978(&v38);
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v37 != 1)
  {
    sub_1A58004BC(a2, (uint64_t)&v30);
    v24 = vorrq_s8(v30, v31);
    v25 = vorr_s8(*(int8x8_t *)v24.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v24, v24, 8uLL));
    return v32 == 2 && *(_QWORD *)&v25 == 0;
  }
  v4 = (uint64_t)v33;
  v3 = v34;
  v6 = v35;
  v5 = v36;
  sub_1A58004BC(a2, (uint64_t)&v30);
  if (v32 != 1)
    return 0;
  v7 = v30.i64[1];
  v8 = v31;
  if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(v4, v30.i64[0]))
    return 0;
  if (v3 == v7 && v6 == v8.i64[0])
    return sub_1A59329BC(v5, v8.i64[1]);
  v9 = sub_1A594CD38();
  v10 = 0;
  if ((v9 & 1) != 0)
    return sub_1A59329BC(v5, v8.i64[1]);
  return v10;
}

uint64_t _s20IMAPSearchIndexerXPC015MessageToSearchB0O21__derived_enum_equalsySbAC_ACtFZ_0(__int128 *a1, __int128 *a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  _QWORD v11[2];
  char v12;
  __int128 v13[2];
  char v14;
  __int128 v15;
  char v16;
  __int128 v17[2];
  unsigned __int8 v18;
  __int128 v19[2];
  unsigned __int8 v20;

  sub_1A58004BC(a1, (uint64_t)v17);
  v4 = v18 >> 6;
  if (!v4)
  {
    v18 &= 0x3Fu;
    sub_1A5846F74(v17, (uint64_t)v13);
    sub_1A58004BC(a2, (uint64_t)v19);
    if (v20 <= 0x3Fu)
    {
      sub_1A5846F74(v19, (uint64_t)&v10);
      sub_1A5846F74(v13, (uint64_t)&v15);
      v6 = v15;
      if ((v16 & 1) != 0)
      {
        sub_1A5846F74(&v10, (uint64_t)v11);
        if (v12 != 1 || v6 != v11[0])
          goto LABEL_16;
      }
      else
      {
        v8 = *((_QWORD *)&v15 + 1);
        sub_1A5846F74(&v10, (uint64_t)v11);
        if ((v12 & 1) != 0 || v6 != v11[0] || (sub_1A5932B34(v8, v11[1]) & 1) == 0)
          goto LABEL_16;
      }
      v5 = 1;
      return v5 & 1;
    }
LABEL_16:
    v5 = 0;
    return v5 & 1;
  }
  if (v4 != 1)
  {
    v18 &= 0x3Fu;
    v7 = *(_QWORD *)&v17[0];
    sub_1A58004BC(a2, (uint64_t)v19);
    if ((v20 & 0xC0) == 0x80)
    {
      v20 &= 0x3Fu;
      v5 = _s20IMAPSearchIndexerXPC18CredentialResponseO21__derived_enum_equalsySbAC_ACtFZ_0(v7, *(uint64_t *)&v19[0]);
      return v5 & 1;
    }
    goto LABEL_16;
  }
  v18 &= 0x3Fu;
  sub_1A58004BC(v17, (uint64_t)v19);
  sub_1A58004BC(a2, (uint64_t)v13);
  if ((v14 & 0xC0) != 0x40)
    goto LABEL_16;
  v14 &= 0x3Fu;
  sub_1A58004BC(v13, (uint64_t)&v15);
  sub_1A57D6A08((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5938E24);
  sub_1A57D6A08((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5938E24);
  v5 = _s20IMAPSearchIndexerXPC13SearchRequestO21__derived_enum_equalsySbAC_ACtFZ_0(v19, &v15);
  sub_1A57D6A08((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5934E30);
  sub_1A57D6A08((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5934E30);
  return v5 & 1;
}

unint64_t sub_1A5934C84()
{
  unint64_t result;

  result = qword_1EE7A0630;
  if (!qword_1EE7A0630)
  {
    result = MEMORY[0x1A85B1874]("\rnS?P%\n", &type metadata for MessageToSearchIndexer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0630);
  }
  return result;
}

unint64_t sub_1A5934CC8()
{
  unint64_t result;

  result = qword_1EE7A0660;
  if (!qword_1EE7A0660)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E50E4, &type metadata for MessageToSearchIndexer.CredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0660);
  }
  return result;
}

unint64_t sub_1A5934D0C()
{
  unint64_t result;

  result = qword_1EE7A0978;
  if (!qword_1EE7A0978)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for CredentialResponse, &type metadata for CredentialResponse);
    atomic_store(result, (unint64_t *)&qword_1EE7A0978);
  }
  return result;
}

void *sub_1A5934D50(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  id v5;

  if (a5 == 1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    if (a5)
      return result;
    v5 = result;
  }
  return (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

unint64_t sub_1A5934DA8()
{
  unint64_t result;

  result = qword_1EE7A0618;
  if (!qword_1EE7A0618)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E5094, &type metadata for MessageToSearchIndexer.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0618);
  }
  return result;
}

unint64_t sub_1A5934DEC()
{
  unint64_t result;

  result = qword_1EE7986C8;
  if (!qword_1EE7986C8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchRequest, &type metadata for SearchRequest);
    atomic_store(result, (unint64_t *)&qword_1EE7986C8);
  }
  return result;
}

void *sub_1A5934E30(void *result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v5;

  v5 = a5 >> 6;
  if (v5 == 2)
    return (void *)swift_bridgeObjectRelease();
  if (v5 == 1)
    return sub_1A5934E70(result, a2, a3, a4, a5 & 0x3F);
  if (!(a5 >> 6))
    return (void *)sub_1A5934E60((uint64_t)result, a2, a3 & 1);
  return result;
}

uint64_t sub_1A5934E60(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

void *sub_1A5934E70(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (a5)
      return result;

  }
  return (void *)swift_bridgeObjectRelease();
}

unint64_t sub_1A5934EC8()
{
  unint64_t result;

  result = qword_1EE7A0648;
  if (!qword_1EE7A0648)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E5044, &type metadata for MessageToSearchIndexer.DownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0648);
  }
  return result;
}

unint64_t sub_1A5934F0C()
{
  unint64_t result;

  result = qword_1EE7A0908;
  if (!qword_1EE7A0908)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for DownloadRequest, &type metadata for DownloadRequest);
    atomic_store(result, (unint64_t *)&qword_1EE7A0908);
  }
  return result;
}

void _s20IMAPSearchIndexerXPC017MessageFromSearchB0O21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X11 }
}

BOOL sub_1A5934F78@<W0>(char a1@<W0>, char a2@<W4>, unsigned int a3@<W8>)
{
  return a3 < 0x40 && a2 == a1;
}

uint64_t _s20IMAPSearchIndexerXPC14SearchResponseO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  _BOOL4 v10;

  if (!a4)
  {
    if (!a8)
      return sub_1A5933FB4(a1, a5);
    return 0;
  }
  if (a4 != 1)
  {
    if (a8 == 2)
      return sub_1A59329BC(a1, a5);
    return 0;
  }
  v10 = a1 == a5 && a2 == a6 && a3 == a7;
  return a8 == 1 && v10;
}

uint64_t sub_1A59350C4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x64616F6C6E776F64 && a2 == 0xE800000000000000;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x686372616573 && a2 == 0xE600000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69746E6564657263 && a2 == 0xEB00000000736C61)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

double sub_1A5935210@<D0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  double result;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  __n128 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 *v39;
  char *v40;
  char *v41;
  __n128 v42;
  __n128 v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  _QWORD *v47;

  v39 = a2;
  v35 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB5F0);
  v37 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v41 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB5F8);
  v38 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v40 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB600);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB608);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1_0(a1, v13);
  sub_1A5934C84();
  v14 = v42.n128_u64[0];
  sub_1A594CF18();
  if (v14)
    goto LABEL_7;
  v34 = v6;
  v15 = v5;
  v17 = v40;
  v16 = v41;
  v42.n128_u64[0] = v10;
  v18 = sub_1A594CBB8();
  v19 = v9;
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v20 = sub_1A594C7B0();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2D0);
    *v22 = &type metadata for MessageToSearchIndexer;
    sub_1A594CB40();
    sub_1A594C7A4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DEC450], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42.n128_u64[0] + 8))(v12, v9);
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    return result;
  }
  if (*(_BYTE *)(v18 + 32))
  {
    if (*(_BYTE *)(v18 + 32) == 1)
    {
      v43.n128_u8[0] = 1;
      sub_1A5934DA8();
      sub_1A594CB34();
      sub_1A593B7C8();
      v26 = v36;
      sub_1A594CB88();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v42.n128_u64[0] + 8))(v12, v9);
      v42 = v43;
      v28 = v44;
      v27 = v45;
      v29 = v46 | 0x40;
    }
    else
    {
      v43.n128_u8[0] = 2;
      sub_1A5934CC8();
      v24 = v16;
      v25 = v19;
      sub_1A594CB34();
      sub_1A593B784();
      v30 = v35;
      sub_1A594CB88();
      v31 = v42.n128_u64[0];
      (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v30);
      swift_bridgeObjectRelease();
      v32 = ((__n128 (*)(char *, uint64_t))*(_QWORD *)(v31 + 8))(v12, v25);
      v28 = 0;
      v27 = 0;
      v32.n128_u64[0] = v43.n128_u64[0];
      v42 = v32;
      v29 = 0x80;
    }
  }
  else
  {
    v43.n128_u8[0] = 0;
    sub_1A5934EC8();
    sub_1A594CB34();
    sub_1A593B80C();
    sub_1A594CB88();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42.n128_u64[0] + 8))(v12, v9);
    v27 = 0;
    v29 = 0;
    v42 = v43;
    v28 = v44;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  v33 = v39;
  result = v42.n128_f64[0];
  *v39 = v42;
  v33[1].n128_u64[0] = v28;
  v33[1].n128_u64[1] = v27;
  v33[2].n128_u8[0] = v29;
  return result;
}

unint64_t sub_1A593576C()
{
  unint64_t result;

  result = qword_1EE7A0698;
  if (!qword_1EE7A0698)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4FF4, &type metadata for MessageFromSearchIndexer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0698);
  }
  return result;
}

unint64_t sub_1A59357B0()
{
  unint64_t result;

  result = qword_1EE7A06E0;
  if (!qword_1EE7A06E0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4FA4, &type metadata for MessageFromSearchIndexer.IndexingStatisticsUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A06E0);
  }
  return result;
}

unint64_t sub_1A59357F4()
{
  unint64_t result;

  result = qword_1EE7AB3B0;
  if (!qword_1EE7AB3B0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for IndexingStatistics, &type metadata for IndexingStatistics);
    atomic_store(result, (unint64_t *)&qword_1EE7AB3B0);
  }
  return result;
}

unint64_t sub_1A5935838()
{
  unint64_t result;

  result = qword_1EE7A06C8;
  if (!qword_1EE7A06C8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4F54, &type metadata for MessageFromSearchIndexer.CredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A06C8);
  }
  return result;
}

unint64_t sub_1A593587C()
{
  unint64_t result;

  result = qword_1EE7AB3B8;
  if (!qword_1EE7AB3B8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for CredentialRequest, &type metadata for CredentialRequest);
    atomic_store(result, (unint64_t *)&qword_1EE7AB3B8);
  }
  return result;
}

unint64_t sub_1A59358C0()
{
  unint64_t result;

  result = qword_1EE7A0680;
  if (!qword_1EE7A0680)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4F04, &type metadata for MessageFromSearchIndexer.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0680);
  }
  return result;
}

unint64_t sub_1A5935904()
{
  unint64_t result;

  result = qword_1EE7AB3C0;
  if (!qword_1EE7AB3C0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchResponse, &type metadata for SearchResponse);
    atomic_store(result, (unint64_t *)&qword_1EE7AB3C0);
  }
  return result;
}

unint64_t sub_1A5935948()
{
  unint64_t result;

  result = qword_1EE7A06B0;
  if (!qword_1EE7A06B0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4EB4, &type metadata for MessageFromSearchIndexer.DownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A06B0);
  }
  return result;
}

unint64_t sub_1A593598C()
{
  unint64_t result;

  result = qword_1EE7AB3C8;
  if (!qword_1EE7AB3C8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for DownloadRequest.Response, &type metadata for DownloadRequest.Response);
    atomic_store(result, (unint64_t *)&qword_1EE7AB3C8);
  }
  return result;
}

uint64_t sub_1A59359D0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x64616F6C6E776F64 && a2 == 0xE800000000000000;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x686372616573 && a2 == 0xE600000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69746E6564657263 && a2 == 0xEB00000000736C61 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A5A15100)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A5935B74(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;

  v20 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1110);
  v23 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v27 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1108);
  v24 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A10F0);
  v21 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v25 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1100);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A10F8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1_0(a1, v11);
  sub_1A593576C();
  v12 = v29;
  sub_1A594CF18();
  if (!v12)
  {
    v18[0] = v6;
    v18[1] = v5;
    v29 = v8;
    v13 = sub_1A594CBB8();
    v14 = v7;
    if (*(_QWORD *)(v13 + 16) == 1)
      __asm { BR              X10 }
    v7 = sub_1A594C7B0();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2D0);
    *v16 = &type metadata for MessageFromSearchIndexer;
    sub_1A594CB40();
    sub_1A594C7A4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v16, *MEMORY[0x1E0DEC450], v7);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v14);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return v7;
}

uint64_t sub_1A59361E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5936208(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24) | (*(unsigned __int8 *)(a1 + 25) << 8));
}

unint64_t sub_1A5936248()
{
  unint64_t result;

  result = qword_1EE7A0678;
  if (!qword_1EE7A0678)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageToSearchIndexer, &type metadata for MessageToSearchIndexer);
    atomic_store(result, (unint64_t *)&qword_1EE7A0678);
  }
  return result;
}

unint64_t sub_1A593628C()
{
  unint64_t result;

  result = qword_1EE7A06F8;
  if (!qword_1EE7A06F8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageFromSearchIndexer, &type metadata for MessageFromSearchIndexer);
    atomic_store(result, (unint64_t *)&qword_1EE7A06F8);
  }
  return result;
}

uint64_t sub_1A59362D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_BYTE *);
  _BYTE v4[40];

  v2 = *(uint64_t (**)(_BYTE *))(v1 + 16);
  sub_1A593B670(a1, (uint64_t)v4);
  return v2(v4);
}

unint64_t sub_1A5936304()
{
  unint64_t result;

  result = qword_1EE7AB3D0;
  if (!qword_1EE7AB3D0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageFromSearchIndexer, &type metadata for MessageFromSearchIndexer);
    atomic_store(result, (unint64_t *)&qword_1EE7AB3D0);
  }
  return result;
}

unint64_t sub_1A5936348()
{
  unint64_t result;

  result = qword_1EE7AB3D8;
  if (!qword_1EE7AB3D8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageToSearchIndexer, &type metadata for MessageToSearchIndexer);
    atomic_store(result, (unint64_t *)&qword_1EE7AB3D8);
  }
  return result;
}

unint64_t sub_1A593638C()
{
  unint64_t result;

  result = qword_1EE7A08A0;
  if (!qword_1EE7A08A0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4E64, &type metadata for DownloadRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A08A0);
  }
  return result;
}

unint64_t sub_1A59363D0()
{
  unint64_t result;

  result = qword_1EE7AB410;
  if (!qword_1EE7AB410)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4E14, &type metadata for DownloadRequest.Response.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB410);
  }
  return result;
}

unint64_t sub_1A5936414()
{
  unint64_t result;

  result = qword_1EE7AB418;
  if (!qword_1EE7AB418)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4DC4, &type metadata for DownloadRequest.Response.DidCompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB418);
  }
  return result;
}

unint64_t sub_1A5936458()
{
  unint64_t result;

  result = qword_1EE7AB420;
  if (!qword_1EE7AB420)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4D74, &type metadata for DownloadRequest.Response.CurrentlyUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB420);
  }
  return result;
}

unint64_t sub_1A593649C()
{
  unint64_t result;

  result = qword_1EE7AB428;
  if (!qword_1EE7AB428)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4D24, &type metadata for DownloadRequest.Response.DidNotCompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB428);
  }
  return result;
}

unint64_t sub_1A59364E0()
{
  unint64_t result;

  result = qword_1EE7A08C8;
  if (!qword_1EE7A08C8)
  {
    result = MEMORY[0x1A85B1874]("mrS?H(\n", &type metadata for DownloadRequest.Response.DidDeferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A08C8);
  }
  return result;
}

uint64_t sub_1A5936524(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x7265666544646964 && a2 == 0xE800000000000000;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F43746F4E646964 && a2 == 0xEE006574656C706DLL || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A5A15120 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C706D6F43646964 && a2 == 0xEB00000000657465 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

char *sub_1A5936748(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD v26[11];
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1140);
  v26[9] = *(_QWORD *)(v2 - 8);
  v26[10] = v2;
  MEMORY[0x1E0C80A78](v2);
  v31 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1150);
  v26[6] = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB5E0);
  v26[7] = *(_QWORD *)(v5 - 8);
  v26[8] = v5;
  MEMORY[0x1E0C80A78](v5);
  v29 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1158);
  v26[4] = *(_QWORD *)(v7 - 8);
  v26[5] = v7;
  MEMORY[0x1E0C80A78](v7);
  v28 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1148);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1138);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v32 = a1;
  __swift_project_boxed_opaque_existential_1_0(a1, v17);
  sub_1A593638C();
  v18 = v33;
  sub_1A594CF18();
  if (!v18)
  {
    v26[2] = v9;
    v26[3] = v12;
    v26[1] = v10;
    v33 = 0;
    v19 = v14;
    v20 = sub_1A594CBB8();
    v21 = v13;
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X9 }
    v22 = sub_1A594C7B0();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2D0);
    *v24 = &type metadata for DownloadRequest.Response;
    sub_1A594CB40();
    sub_1A594C7A4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x1E0DEC450], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v21);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return v16;
}

void sub_1A5936ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 68) = 1;
  sub_1A593649C();
  v4 = *(_QWORD *)(v3 - 88);
  sub_1A594CB34();
  if (v4)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
    JUMPOUT(0x1A5936A90);
  }
  JUMPOUT(0x1A5936BFCLL);
}

void sub_1A5936B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 67) = 2;
  sub_1A5936458();
  v4 = *(_QWORD *)(v3 - 88);
  sub_1A594CB34();
  if (!v4)
    JUMPOUT(0x1A5936B3CLL);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  JUMPOUT(0x1A5936A90);
}

void sub_1A5936B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 66) = 3;
  sub_1A5936414();
  v5 = *(_QWORD *)(v4 - 88);
  sub_1A594CB34();
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 176) + 8))(v2, *(_QWORD *)(v4 - 136));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v3);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v4 - 96));
    JUMPOUT(0x1A5936A94);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v3);
  JUMPOUT(0x1A5936A90);
}

void sub_1A5936B94()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 - 65) = 4;
  sub_1A59363D0();
  v1 = *(_QWORD *)(v0 - 88);
  sub_1A594CB34();
  if (v1)
    JUMPOUT(0x1A5936BCCLL);
  JUMPOUT(0x1A5936BFCLL);
}

unint64_t sub_1A5936C28()
{
  unint64_t result;

  result = qword_1EE7A0850;
  if (!qword_1EE7A0850)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4C84, &type metadata for DownloadRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0850);
  }
  return result;
}

unint64_t sub_1A5936C6C()
{
  unint64_t result;

  result = qword_1EE7A0868;
  if (!qword_1EE7A0868)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4C34, &type metadata for DownloadRequest.StopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0868);
  }
  return result;
}

unint64_t sub_1A5936CB0()
{
  unint64_t result;

  result = qword_1EE7A0898;
  if (!qword_1EE7A0898)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for DownloadRequest.ID, &type metadata for DownloadRequest.ID);
    atomic_store(result, (unint64_t *)&qword_1EE7A0898);
  }
  return result;
}

unint64_t sub_1A5936CF4()
{
  unint64_t result;

  result = qword_1EE7A0880;
  if (!qword_1EE7A0880)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4BE4, &type metadata for DownloadRequest.StartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0880);
  }
  return result;
}

unint64_t sub_1A5936D38()
{
  unint64_t result;

  result = qword_1EE7A0A80;
  if (!qword_1EE7A0A80)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AccountConfiguration, &type metadata for AccountConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A80);
  }
  return result;
}

uint64_t sub_1A5936D7C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1886352499 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_QWORD *sub_1A5936E4C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  _QWORD *v28;
  char v29;
  uint64_t v30;
  _QWORD *v31;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB5B0);
  v24 = *(_QWORD *)(v2 - 8);
  v25 = v2;
  MEMORY[0x1E0C80A78](v2);
  v26 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB5B8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB5C0);
  v9 = *(_QWORD **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1_0(a1, v12);
  sub_1A5936C28();
  v13 = v28;
  sub_1A594CF18();
  if (!v13)
  {
    v23 = v5;
    v28 = v9;
    v14 = sub_1A594CBB8();
    v15 = (char *)v14;
    if (*(_QWORD *)(v14 + 16) == 1)
    {
      if ((*(_BYTE *)(v14 + 32) & 1) != 0)
      {
        LOBYTE(v31) = 1;
        sub_1A5936C6C();
        v16 = v26;
        sub_1A594CB34();
        sub_1A593B5E8();
        v17 = v25;
        sub_1A594CB88();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v17);
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v28[1])(v11, v8);
        v9 = v31;
      }
      else
      {
        LOBYTE(v31) = 0;
        sub_1A5936CF4();
        sub_1A594CB34();
        LOBYTE(v30) = 0;
        sub_1A593B5E8();
        sub_1A594CB88();
        v26 = v15;
        v9 = v31;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0E20);
        v29 = 1;
        sub_1A569ECC8(&qword_1EE7AB5D0, &qword_1EE7A0E20, (uint64_t (*)(void))sub_1A593B62C, MEMORY[0x1E0DEAF40]);
        sub_1A594CB88();
        v21 = v4;
        v22 = v28;
        (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v21);
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v22[1])(v11, v8);
      }
    }
    else
    {
      v18 = sub_1A594C7B0();
      swift_allocError();
      v9 = v19;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2D0);
      *v9 = &type metadata for DownloadRequest;
      sub_1A594CB40();
      sub_1A594C7A4();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v9, *MEMORY[0x1E0DEC450], v18);
      swift_willThrow();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v28[1])(v11, v8);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v9;
}

unint64_t sub_1A59372E4()
{
  unint64_t result;

  result = qword_1EE7A0910;
  if (!qword_1EE7A0910)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4B94, &type metadata for CredentialRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0910);
  }
  return result;
}

unint64_t sub_1A5937328()
{
  unint64_t result;

  result = qword_1EE7A0928;
  if (!qword_1EE7A0928)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4B44, &type metadata for CredentialRequest.MakeCredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0928);
  }
  return result;
}

uint64_t sub_1A593736C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x64657243656B616DLL && a2 == 0xEF736C6169746E65)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A5937408()
{
  return 0x64657243656B616DLL;
}

_QWORD *sub_1A593742C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1168);
  v2 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1160);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A59372E4();
  v9 = v22;
  sub_1A594CF18();
  if (v9)
    goto LABEL_5;
  v17 = v2;
  v18 = a1;
  v10 = v19;
  v11 = v20;
  v22 = v5;
  v8 = v7;
  if (*(_QWORD *)(sub_1A594CBB8() + 16) != 1)
  {
    v13 = sub_1A594C7B0();
    swift_allocError();
    v15 = v14;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2D0);
    *v15 = &type metadata for CredentialRequest;
    sub_1A594CB40();
    sub_1A594C7A4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v15, *MEMORY[0x1E0DEC450], v13);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v11);
    a1 = v18;
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v8;
  }
  sub_1A5937328();
  sub_1A594CB34();
  v12 = v22;
  sub_1A592CE54();
  sub_1A594CB88();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
  v8 = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return v8;
}

unint64_t sub_1A59376F0()
{
  unint64_t result;

  result = qword_1EE7A0948;
  if (!qword_1EE7A0948)
  {
    result = MEMORY[0x1A85B1874]("MtS?\b)\n", &type metadata for CredentialResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0948);
  }
  return result;
}

unint64_t sub_1A5937734()
{
  unint64_t result;

  result = qword_1EE7A0960;
  if (!qword_1EE7A0960)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4AA4, &type metadata for CredentialResponse.CredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0960);
  }
  return result;
}

unint64_t sub_1A5937778()
{
  unint64_t result;

  result = qword_1EE7A0778;
  if (!qword_1EE7A0778)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Credentials, &type metadata for Credentials);
    atomic_store(result, (unint64_t *)&qword_1EE7A0778);
  }
  return result;
}

uint64_t sub_1A59377BC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x69746E6564657263 && a2 == 0xEB00000000736C61)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A5937850()
{
  return 0x69746E6564657263;
}

_QWORD *sub_1A5937870(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v22 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB590);
  v2 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB598);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A59376F0();
  v9 = v7;
  v10 = v24;
  sub_1A594CF18();
  if (v10)
    goto LABEL_5;
  v11 = v4;
  v20 = v2;
  v21 = a1;
  v12 = v22;
  v13 = v23;
  v24 = v5;
  if (*(_QWORD *)(sub_1A594CBB8() + 16) != 1)
  {
    v15 = sub_1A594C7B0();
    swift_allocError();
    v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2D0);
    *v17 = &type metadata for CredentialResponse;
    v8 = v9;
    sub_1A594CB40();
    sub_1A594C7A4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC450], v15);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v24 + 8))(v9, v13);
    a1 = v21;
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v8;
  }
  sub_1A5937734();
  sub_1A594CB34();
  v14 = v24;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0E10);
  sub_1A569ECC8(&qword_1EE7AB5A0, &qword_1EE7A0E10, (uint64_t (*)(void))sub_1A593B5A4, MEMORY[0x1E0DEAF40]);
  sub_1A594CB88();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v9, v13);
  v8 = v25;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v8;
}

unint64_t sub_1A5937B64()
{
  unint64_t result;

  result = qword_1EE7A07B8;
  if (!qword_1EE7A07B8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4A54, &type metadata for SearchRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A07B8);
  }
  return result;
}

unint64_t sub_1A5937BA8()
{
  unint64_t result;

  result = qword_1EE7AB440;
  if (!qword_1EE7AB440)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4A04, &type metadata for SearchRequest.ExcludeIndexedUIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB440);
  }
  return result;
}

unint64_t sub_1A5937BEC()
{
  unint64_t result;

  result = qword_1EE7A0AD0;
  if (!qword_1EE7A0AD0)
  {
    result = MEMORY[0x1A85B1874]("}mS?l#\n", &type metadata for Mailbox);
    atomic_store(result, (unint64_t *)&qword_1EE7A0AD0);
  }
  return result;
}

unint64_t sub_1A5937C30()
{
  unint64_t result;

  result = qword_1EE7AB450;
  if (!qword_1EE7AB450)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UID, &type metadata for UID);
    atomic_store(result, (unint64_t *)&qword_1EE7AB450);
  }
  return result;
}

unint64_t sub_1A5937C74()
{
  unint64_t result;

  result = qword_1EE7A07E0;
  if (!qword_1EE7A07E0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E49B4, &type metadata for SearchRequest.GetIndexingStatisticsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A07E0);
  }
  return result;
}

unint64_t sub_1A5937CB8()
{
  unint64_t result;

  result = qword_1EE7A07A0;
  if (!qword_1EE7A07A0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4964, &type metadata for SearchRequest.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A07A0);
  }
  return result;
}

unint64_t sub_1A5937CFC()
{
  unint64_t result;

  result = qword_1EE7A0798;
  if (!qword_1EE7A0798)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchQuery, &type metadata for SearchQuery);
    atomic_store(result, (unint64_t *)&qword_1EE7A0798);
  }
  return result;
}

uint64_t sub_1A5937D40(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x686372616573 && a2 == 0xE600000000000000;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A5A15140 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A5A15160)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A5937E7C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A5937F34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v45 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB568);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  MEMORY[0x1E0C80A78](v3);
  v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB570);
  v42 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v46 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB578);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB580);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v49 = a1;
  __swift_project_boxed_opaque_existential_1_0(a1, v14);
  sub_1A5937B64();
  v15 = v50;
  sub_1A594CF18();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  v40 = v6;
  v41 = v7;
  v16 = v46;
  v17 = v47;
  v18 = v48;
  v50 = v11;
  v19 = sub_1A594CBB8();
  v20 = v19;
  v21 = v10;
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v29 = sub_1A594C7B0();
    swift_allocError();
    v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2D0);
    *v31 = &type metadata for SearchRequest;
    sub_1A594CB40();
    sub_1A594C7A4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x1E0DEC450], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  }
  v22 = v13;
  if (*(_BYTE *)(v19 + 32))
  {
    if (*(_BYTE *)(v19 + 32) == 1)
    {
      LOBYTE(v52) = 1;
      sub_1A5937C74();
      sub_1A594CB34();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v17);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v21);
      v23 = 0;
      v24 = 0;
      v25 = 0;
      v26 = 0;
      v27 = 2;
      v28 = (uint64_t)v49;
    }
    else
    {
      LOBYTE(v52) = 2;
      sub_1A5937BA8();
      v32 = v21;
      sub_1A594CB34();
      LOBYTE(v55) = 0;
      sub_1A593B51C();
      v33 = v18;
      sub_1A594CB88();
      v47 = v20;
      v23 = v52;
      v36 = v53;
      v25 = v54;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0E38);
      v51 = 1;
      v37 = v44;
      sub_1A569ECC8(&qword_1EE7A0E40, &qword_1EE7A0E38, (uint64_t (*)(void))sub_1A593B408, MEMORY[0x1E0DEAF40]);
      sub_1A594CB88();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v32);
      v26 = v55;
      v27 = 1;
      v28 = (uint64_t)v49;
      v24 = v36;
    }
  }
  else
  {
    LOBYTE(v52) = 0;
    sub_1A5937CB8();
    sub_1A594CB34();
    sub_1A593B560();
    v35 = v40;
    sub_1A594CB88();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v35);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v21);
    v26 = 0;
    v27 = 0;
    v23 = v52;
    v24 = v53;
    v25 = v54;
    v28 = (uint64_t)v49;
  }
  v38 = v45;
  result = __swift_destroy_boxed_opaque_existential_1(v28);
  *(_QWORD *)v38 = v23;
  *(_QWORD *)(v38 + 8) = v24;
  *(_QWORD *)(v38 + 16) = v25;
  *(_QWORD *)(v38 + 24) = v26;
  *(_BYTE *)(v38 + 32) = v27;
  return result;
}

unint64_t sub_1A59384F0()
{
  unint64_t result;

  result = qword_1EE7A0810;
  if (!qword_1EE7A0810)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4914, &type metadata for SearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0810);
  }
  return result;
}

unint64_t sub_1A5938534()
{
  unint64_t result;

  result = qword_1EE7AB478;
  if (!qword_1EE7AB478)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E48C4, &type metadata for SearchResponse.ExcludedUIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB478);
  }
  return result;
}

unint64_t sub_1A5938578()
{
  unint64_t result;

  result = qword_1EE7A0838;
  if (!qword_1EE7A0838)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4874, &type metadata for SearchResponse.IndexingStatisticsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0838);
  }
  return result;
}

unint64_t sub_1A59385BC()
{
  unint64_t result;

  result = qword_1EE7A07F8;
  if (!qword_1EE7A07F8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4824, &type metadata for SearchResponse.SearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A07F8);
  }
  return result;
}

unint64_t sub_1A5938600()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE7AB480;
  if (!qword_1EE7AB480)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7A0D38);
    v2[0] = sub_1A5937BEC();
    v2[1] = sub_1A569ECC8(&qword_1EE7AB448, &qword_1EE7A0E38, (uint64_t (*)(void))sub_1A5937C30, MEMORY[0x1E0DEAF10]);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE7AB480);
  }
  return result;
}

uint64_t sub_1A593868C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6552686372616573 && a2 == 0xED000073746C7573;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A5A15180 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646564756C637865 && a2 == 0xEC00000073444955)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

char *sub_1A59387F8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1128);
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  MEMORY[0x1E0C80A78](v2);
  v39 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1130);
  v34 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v37 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1118);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1120);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v40 = a1;
  __swift_project_boxed_opaque_existential_1_0(a1, v13);
  sub_1A59384F0();
  v14 = v42;
  sub_1A594CF18();
  if (v14)
    goto LABEL_7;
  v32 = v6;
  v33 = v5;
  v15 = v37;
  v16 = v38;
  v17 = v39;
  v42 = v10;
  v18 = sub_1A594CBB8();
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v21 = v12;
    v12 = (char *)sub_1A594C7B0();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB2D0);
    *v23 = &type metadata for SearchResponse;
    sub_1A594CB40();
    sub_1A594C7A4();
    (*(void (**)(_QWORD *, _QWORD, char *))(*((_QWORD *)v12 - 1) + 104))(v23, *MEMORY[0x1E0DEC450], v12);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v21, v9);
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    return v12;
  }
  v31 = v9;
  v19 = *(unsigned __int8 *)(v18 + 32);
  if (*(_BYTE *)(v18 + 32))
  {
    if (v19 == 1)
    {
      LOBYTE(v41) = 1;
      sub_1A5938578();
      sub_1A594CB34();
      sub_1A593B44C();
      sub_1A594CB88();
      v20 = v42;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v16);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v31);
    }
    else
    {
      LOBYTE(v41) = 2;
      sub_1A5938534();
      sub_1A594CB34();
      v38 = (uint64_t)v12;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0E38);
      sub_1A569ECC8(&qword_1EE7A0E40, &qword_1EE7A0E38, (uint64_t (*)(void))sub_1A593B408, MEMORY[0x1E0DEAF40]);
      v29 = v36;
      sub_1A594CB88();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v29);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v38, v31);
    }
    v12 = v41;
    v28 = (uint64_t)v40;
  }
  else
  {
    LOBYTE(v41) = 0;
    sub_1A59385BC();
    v25 = v8;
    v26 = v31;
    sub_1A594CB34();
    LODWORD(v39) = v19;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0D38);
    sub_1A593B490();
    v27 = v33;
    sub_1A594CB88();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v26);
    v28 = (uint64_t)v40;
    v12 = v41;
  }
  __swift_destroy_boxed_opaque_existential_1(v28);
  return v12;
}

unint64_t sub_1A5938D98()
{
  unint64_t result;

  result = qword_1EE7AB488;
  if (!qword_1EE7AB488)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for DownloadRequest.Response, &type metadata for DownloadRequest.Response);
    atomic_store(result, (unint64_t *)&qword_1EE7AB488);
  }
  return result;
}

unint64_t sub_1A5938DE0()
{
  unint64_t result;

  result = qword_1EE7AB490;
  if (!qword_1EE7AB490)
  {
    result = MEMORY[0x1A85B1874]("ՎS?dB\n", &type metadata for DownloadRequest.ID);
    atomic_store(result, (unint64_t *)&qword_1EE7AB490);
  }
  return result;
}

void *sub_1A5938E24(void *result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v5;

  v5 = a5 >> 6;
  if (v5 == 2)
    return (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v5 == 1)
    return sub_1A5934D50(result, a2, a3, a4, a5 & 0x3F);
  if (!(a5 >> 6))
    return (void *)sub_1A5938E54((uint64_t)result, a2, a3 & 1);
  return result;
}

uint64_t sub_1A5938E54(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t destroy for MessageToSearchIndexer(uint64_t a1, uint64_t a2)
{
  return sub_1A5939344(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5934E30);
}

uint64_t initializeWithCopy for MessageToSearchIndexer(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A5939368(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5938E24);
}

uint64_t *assignWithCopy for MessageToSearchIndexer(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A59393E0(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5938E24, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5934E30);
}

__n128 __swift_memcpy33_8_4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for MessageToSearchIndexer(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A593946C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5934E30);
}

uint64_t getEnumTagSinglePayload for MessageToSearchIndexer(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3E && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 62);
  v3 = (*(_BYTE *)(a1 + 32) & 0x3C | (*(unsigned __int8 *)(a1 + 32) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MessageToSearchIndexer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 62;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1A5938F5C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 6;
}

uint64_t sub_1A5938F68(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = *(_BYTE *)(result + 32) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for MessageToSearchIndexer()
{
  return &type metadata for MessageToSearchIndexer;
}

uint64_t sub_1A5938F8C(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v4;

  v4 = a4 >> 6;
  if (v4 == 2)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v4 == 1)
    return sub_1A5938FB4(result, a2, a3, a4 & 0x3F);
  return result;
}

uint64_t sub_1A5938FB4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if ((a4 | 2) == 2)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t destroy for MessageFromSearchIndexer(uint64_t a1)
{
  return sub_1A5938FE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_1A5938FE0(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v4;

  v4 = a4 >> 6;
  if (v4 == 2)
    return swift_bridgeObjectRelease();
  if (v4 == 1)
    return sub_1A5939008(result, a2, a3, a4 & 0x3F);
  return result;
}

uint64_t sub_1A5939008(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if ((a4 | 2) == 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for MessageFromSearchIndexer(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A59395AC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1A5938F8C);
}

uint64_t *assignWithCopy for MessageFromSearchIndexer(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A5939620(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1A5938F8C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5938FE0);
}

__n128 __swift_memcpy25_8_4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *assignWithTake for MessageFromSearchIndexer(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A59396A0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5938FE0);
}

uint64_t getEnumTagSinglePayload for MessageFromSearchIndexer(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3D && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 61);
  v3 = (*(_BYTE *)(a1 + 24) & 0x3C | (*(unsigned __int8 *)(a1 + 24) >> 6)) ^ 0x3F;
  if (v3 >= 0x3C)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MessageFromSearchIndexer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3C)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 61;
    if (a3 >= 0x3D)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x3D)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_BYTE *)(result + 24) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1A593910C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24) >> 6;
}

uint64_t sub_1A5939118(uint64_t result)
{
  *(_BYTE *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_1A5939128(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = *(_BYTE *)(result + 24) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for MessageFromSearchIndexer()
{
  return &type metadata for MessageFromSearchIndexer;
}

uint64_t _s20IMAPSearchIndexerXPC15DownloadRequestOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A5938E54(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

__n128 __swift_memcpy17_8_7(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for DownloadRequest.Response()
{
  return &type metadata for DownloadRequest.Response;
}

ValueMetadata *type metadata accessor for CredentialRequest()
{
  return &type metadata for CredentialRequest;
}

_QWORD *__swift_memcpy8_8_6(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CredentialResponse(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 8))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CredentialResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CredentialResponse()
{
  return &type metadata for CredentialResponse;
}

uint64_t destroy for SearchRequest(uint64_t a1, uint64_t a2)
{
  return sub_1A5939344(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5934E70);
}

uint64_t sub_1A5939344(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a3(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
}

uint64_t initializeWithCopy for SearchRequest(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A5939368(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5934D50);
}

uint64_t sub_1A5939368(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  v9 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v6, v7, v8, v9);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  return a1;
}

uint64_t *assignWithCopy for SearchRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A59393E0(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5934D50, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5934E70);
}

uint64_t *sub_1A59393E0(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v8, v9, v10, v11);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  v16 = *((unsigned __int8 *)a1 + 32);
  *((_BYTE *)a1 + 32) = v11;
  a5(v12, v13, v14, v15, v16);
  return a1;
}

uint64_t *assignWithTake for SearchRequest(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A593946C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5934E70);
}

uint64_t *sub_1A593946C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v6 = *(_BYTE *)(a2 + 32);
  v7 = *a1;
  v9 = a1[1];
  v8 = a1[2];
  v10 = a1[3];
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  v12 = *((unsigned __int8 *)a1 + 32);
  *((_BYTE *)a1 + 32) = v6;
  a4(v7, v9, v8, v10, v12);
  return a1;
}

uint64_t sub_1A5939548(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A5939560(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

uint64_t destroy for SearchResponse(uint64_t a1)
{
  return sub_1A5939008(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for SearchResponse(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A59395AC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1A5938FB4);
}

uint64_t sub_1A59395AC(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v6, v7, v8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  return a1;
}

uint64_t *assignWithCopy for SearchResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A5939620(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1A5938FB4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5939008);
}

uint64_t *sub_1A5939620(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v8, v9, v10);
  v11 = *a1;
  v12 = a1[1];
  v13 = a1[2];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  v14 = *((unsigned __int8 *)a1 + 24);
  *((_BYTE *)a1 + 24) = v10;
  a5(v11, v12, v13, v14);
  return a1;
}

uint64_t *assignWithTake for SearchResponse(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A59396A0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5939008);
}

uint64_t *sub_1A59396A0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v8 = *a1;
  v10 = a1[1];
  v9 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v6;
  v11 = *((unsigned __int8 *)a1 + 24);
  *((_BYTE *)a1 + 24) = v7;
  a4(v8, v10, v9, v11);
  return a1;
}

ValueMetadata *type metadata accessor for SearchResponse()
{
  return &type metadata for SearchResponse;
}

ValueMetadata *type metadata accessor for SearchResponse.CodingKeys()
{
  return &type metadata for SearchResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchResponse.SearchResultsCodingKeys()
{
  return &type metadata for SearchResponse.SearchResultsCodingKeys;
}

ValueMetadata *type metadata accessor for SearchResponse.IndexingStatisticsCodingKeys()
{
  return &type metadata for SearchResponse.IndexingStatisticsCodingKeys;
}

ValueMetadata *type metadata accessor for SearchResponse.ExcludedUIDsCodingKeys()
{
  return &type metadata for SearchResponse.ExcludedUIDsCodingKeys;
}

ValueMetadata *type metadata accessor for SearchRequest.CodingKeys()
{
  return &type metadata for SearchRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchRequest.SearchCodingKeys()
{
  return &type metadata for SearchRequest.SearchCodingKeys;
}

ValueMetadata *type metadata accessor for SearchRequest.GetIndexingStatisticsCodingKeys()
{
  return &type metadata for SearchRequest.GetIndexingStatisticsCodingKeys;
}

ValueMetadata *type metadata accessor for SearchRequest.ExcludeIndexedUIDsCodingKeys()
{
  return &type metadata for SearchRequest.ExcludeIndexedUIDsCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialResponse.CodingKeys()
{
  return &type metadata for CredentialResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for CredentialResponse.CredentialsCodingKeys()
{
  return &type metadata for CredentialResponse.CredentialsCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialRequest.CodingKeys()
{
  return &type metadata for CredentialRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for CredentialRequest.MakeCredentialsCodingKeys()
{
  return &type metadata for CredentialRequest.MakeCredentialsCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadRequest.CodingKeys()
{
  return &type metadata for DownloadRequest.CodingKeys;
}

uint64_t _s20IMAPSearchIndexerXPC13SearchRequestO28ExcludeIndexedUIDsCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5939828 + 4 * byte_1A59E2D04[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A593985C + 4 * byte_1A59E2CFF[v4]))();
}

uint64_t sub_1A593985C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5939864(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A593986CLL);
  return result;
}

uint64_t sub_1A5939878(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5939880);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5939884(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A593988C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadRequest.StartCodingKeys()
{
  return &type metadata for DownloadRequest.StartCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadRequest.StopCodingKeys()
{
  return &type metadata for DownloadRequest.StopCodingKeys;
}

uint64_t _s20IMAPSearchIndexerXPC15DownloadRequestO8ResponseOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A5939904 + 4 * byte_1A59E2D0E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A5939938 + 4 * byte_1A59E2D09[v4]))();
}

uint64_t sub_1A5939938(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5939940(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5939948);
  return result;
}

uint64_t sub_1A5939954(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A593995CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A5939960(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5939968(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadRequest.Response.CodingKeys()
{
  return &type metadata for DownloadRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for DownloadRequest.Response.DidDeferCodingKeys()
{
  return &type metadata for DownloadRequest.Response.DidDeferCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadRequest.Response.DidNotCompleteCodingKeys()
{
  return &type metadata for DownloadRequest.Response.DidNotCompleteCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadRequest.Response.CurrentlyUnavailableCodingKeys()
{
  return &type metadata for DownloadRequest.Response.CurrentlyUnavailableCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadRequest.Response.DidCompleteCodingKeys()
{
  return &type metadata for DownloadRequest.Response.DidCompleteCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadRequest.Response.FailureCodingKeys()
{
  return &type metadata for DownloadRequest.Response.FailureCodingKeys;
}

uint64_t storeEnumTagSinglePayload for MessageFromSearchIndexer.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A5939A20 + 4 * byte_1A59E2D18[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A5939A54 + 4 * byte_1A59E2D13[v4]))();
}

uint64_t sub_1A5939A54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5939A5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5939A64);
  return result;
}

uint64_t sub_1A5939A70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5939A78);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A5939A7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5939A84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MessageFromSearchIndexer.CodingKeys()
{
  return &type metadata for MessageFromSearchIndexer.CodingKeys;
}

ValueMetadata *type metadata accessor for MessageFromSearchIndexer.DownloadCodingKeys()
{
  return &type metadata for MessageFromSearchIndexer.DownloadCodingKeys;
}

ValueMetadata *type metadata accessor for MessageFromSearchIndexer.SearchCodingKeys()
{
  return &type metadata for MessageFromSearchIndexer.SearchCodingKeys;
}

ValueMetadata *type metadata accessor for MessageFromSearchIndexer.CredentialsCodingKeys()
{
  return &type metadata for MessageFromSearchIndexer.CredentialsCodingKeys;
}

ValueMetadata *type metadata accessor for MessageFromSearchIndexer.IndexingStatisticsUpdateCodingKeys()
{
  return &type metadata for MessageFromSearchIndexer.IndexingStatisticsUpdateCodingKeys;
}

uint64_t _s20IMAPSearchIndexerXPC14SearchResponseO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A5939B2C + 4 * byte_1A59E2D22[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A5939B60 + 4 * byte_1A59E2D1D[v4]))();
}

uint64_t sub_1A5939B60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5939B68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5939B70);
  return result;
}

uint64_t sub_1A5939B7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5939B84);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A5939B88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5939B90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MessageToSearchIndexer.CodingKeys()
{
  return &type metadata for MessageToSearchIndexer.CodingKeys;
}

ValueMetadata *type metadata accessor for MessageToSearchIndexer.DownloadCodingKeys()
{
  return &type metadata for MessageToSearchIndexer.DownloadCodingKeys;
}

ValueMetadata *type metadata accessor for MessageToSearchIndexer.SearchCodingKeys()
{
  return &type metadata for MessageToSearchIndexer.SearchCodingKeys;
}

uint64_t _s20IMAPSearchIndexerXPC14SearchResponseO23SearchResultsCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5939C0C + 4 * byte_1A59E2D27[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5939C2C + 4 * byte_1A59E2D2C[v4]))();
}

_BYTE *sub_1A5939C0C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5939C2C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5939C34(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5939C3C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5939C44(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5939C4C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MessageToSearchIndexer.CredentialsCodingKeys()
{
  return &type metadata for MessageToSearchIndexer.CredentialsCodingKeys;
}

unint64_t sub_1A5939C6C()
{
  unint64_t result;

  result = qword_1EE7AB498;
  if (!qword_1EE7AB498)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3594, &type metadata for MessageToSearchIndexer.CredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB498);
  }
  return result;
}

unint64_t sub_1A5939CB4()
{
  unint64_t result;

  result = qword_1EE7AB4A0;
  if (!qword_1EE7AB4A0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E364C, &type metadata for MessageToSearchIndexer.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB4A0);
  }
  return result;
}

unint64_t sub_1A5939CFC()
{
  unint64_t result;

  result = qword_1EE7AB4A8;
  if (!qword_1EE7AB4A8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3704, &type metadata for MessageToSearchIndexer.DownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB4A8);
  }
  return result;
}

unint64_t sub_1A5939D44()
{
  unint64_t result;

  result = qword_1EE7AB4B0;
  if (!qword_1EE7AB4B0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E37BC, &type metadata for MessageToSearchIndexer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB4B0);
  }
  return result;
}

unint64_t sub_1A5939D8C()
{
  unint64_t result;

  result = qword_1EE7AB4B8;
  if (!qword_1EE7AB4B8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3874, &type metadata for MessageFromSearchIndexer.IndexingStatisticsUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB4B8);
  }
  return result;
}

unint64_t sub_1A5939DD4()
{
  unint64_t result;

  result = qword_1EE7AB4C0;
  if (!qword_1EE7AB4C0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E392C, &type metadata for MessageFromSearchIndexer.CredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB4C0);
  }
  return result;
}

unint64_t sub_1A5939E1C()
{
  unint64_t result;

  result = qword_1EE7AB4C8;
  if (!qword_1EE7AB4C8)
  {
    result = MEMORY[0x1A85B1874]("ՄS?4<\n", &type metadata for MessageFromSearchIndexer.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB4C8);
  }
  return result;
}

unint64_t sub_1A5939E64()
{
  unint64_t result;

  result = qword_1EE7AB4D0;
  if (!qword_1EE7AB4D0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3A9C, &type metadata for MessageFromSearchIndexer.DownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB4D0);
  }
  return result;
}

unint64_t sub_1A5939EAC()
{
  unint64_t result;

  result = qword_1EE7AB4D8;
  if (!qword_1EE7AB4D8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3B54, &type metadata for MessageFromSearchIndexer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB4D8);
  }
  return result;
}

unint64_t sub_1A5939EF4()
{
  unint64_t result;

  result = qword_1EE7AB4E0;
  if (!qword_1EE7AB4E0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3D9C, &type metadata for DownloadRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB4E0);
  }
  return result;
}

unint64_t sub_1A5939F3C()
{
  unint64_t result;

  result = qword_1EE7AB4E8;
  if (!qword_1EE7AB4E8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3E54, &type metadata for DownloadRequest.StopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB4E8);
  }
  return result;
}

unint64_t sub_1A5939F84()
{
  unint64_t result;

  result = qword_1EE7AB4F0;
  if (!qword_1EE7AB4F0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3F0C, &type metadata for DownloadRequest.StartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB4F0);
  }
  return result;
}

unint64_t sub_1A5939FCC()
{
  unint64_t result;

  result = qword_1EE7AB4F8;
  if (!qword_1EE7AB4F8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3FC4, &type metadata for DownloadRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB4F8);
  }
  return result;
}

unint64_t sub_1A593A014()
{
  unint64_t result;

  result = qword_1EE7AB500;
  if (!qword_1EE7AB500)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E407C, &type metadata for CredentialRequest.MakeCredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB500);
  }
  return result;
}

unint64_t sub_1A593A05C()
{
  unint64_t result;

  result = qword_1EE7AB508;
  if (!qword_1EE7AB508)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4134, &type metadata for CredentialRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB508);
  }
  return result;
}

unint64_t sub_1A593A0A4()
{
  unint64_t result;

  result = qword_1EE7AB510;
  if (!qword_1EE7AB510)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E41EC, &type metadata for CredentialResponse.CredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB510);
  }
  return result;
}

unint64_t sub_1A593A0EC()
{
  unint64_t result;

  result = qword_1EE7AB518;
  if (!qword_1EE7AB518)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E42A4, &type metadata for CredentialResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB518);
  }
  return result;
}

unint64_t sub_1A593A134()
{
  unint64_t result;

  result = qword_1EE7AB520;
  if (!qword_1EE7AB520)
  {
    result = MEMORY[0x1A85B1874]("]{S?|0\n", &type metadata for SearchRequest.ExcludeIndexedUIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB520);
  }
  return result;
}

unint64_t sub_1A593A17C()
{
  unint64_t result;

  result = qword_1EE7AB528;
  if (!qword_1EE7AB528)
  {
    result = MEMORY[0x1A85B1874]("UzS?,/\n", &type metadata for SearchRequest.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB528);
  }
  return result;
}

unint64_t sub_1A593A1C4()
{
  unint64_t result;

  result = qword_1EE7AB530;
  if (!qword_1EE7AB530)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E451C, &type metadata for SearchRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB530);
  }
  return result;
}

unint64_t sub_1A593A20C()
{
  unint64_t result;

  result = qword_1EE7AB538;
  if (!qword_1EE7AB538)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E45D4, &type metadata for SearchResponse.ExcludedUIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB538);
  }
  return result;
}

unint64_t sub_1A593A254()
{
  unint64_t result;

  result = qword_1EE7AB540;
  if (!qword_1EE7AB540)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E468C, &type metadata for SearchResponse.IndexingStatisticsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB540);
  }
  return result;
}

unint64_t sub_1A593A29C()
{
  unint64_t result;

  result = qword_1EE7AB548;
  if (!qword_1EE7AB548)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4744, &type metadata for SearchResponse.SearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB548);
  }
  return result;
}

unint64_t sub_1A593A2E4()
{
  unint64_t result;

  result = qword_1EE7AB550;
  if (!qword_1EE7AB550)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E47FC, &type metadata for SearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB550);
  }
  return result;
}

unint64_t sub_1A593A32C()
{
  unint64_t result;

  result = qword_1EE7A0808;
  if (!qword_1EE7A0808)
  {
    result = MEMORY[0x1A85B1874]("mxS?L,\n", &type metadata for SearchResponse.SearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0808);
  }
  return result;
}

unint64_t sub_1A593A374()
{
  unint64_t result;

  result = qword_1EE7A0800;
  if (!qword_1EE7A0800)
  {
    result = MEMORY[0x1A85B1874]("UxS?$,\n", &type metadata for SearchResponse.SearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0800);
  }
  return result;
}

unint64_t sub_1A593A3BC()
{
  unint64_t result;

  result = qword_1EE7A0848;
  if (!qword_1EE7A0848)
  {
    result = MEMORY[0x1A85B1874]("%yS?(-\n", &type metadata for SearchResponse.IndexingStatisticsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0848);
  }
  return result;
}

unint64_t sub_1A593A404()
{
  unint64_t result;

  result = qword_1EE7A0840;
  if (!qword_1EE7A0840)
  {
    result = MEMORY[0x1A85B1874]("\ryS?", &type metadata for SearchResponse.IndexingStatisticsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0840);
  }
  return result;
}

unint64_t sub_1A593A44C()
{
  unint64_t result;

  result = qword_1EE7A0830;
  if (!qword_1EE7A0830)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4544, &type metadata for SearchResponse.ExcludedUIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0830);
  }
  return result;
}

unint64_t sub_1A593A494()
{
  unint64_t result;

  result = qword_1EE7A0828;
  if (!qword_1EE7A0828)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E456C, &type metadata for SearchResponse.ExcludedUIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0828);
  }
  return result;
}

unint64_t sub_1A593A4DC()
{
  unint64_t result;

  result = qword_1EE7A0820;
  if (!qword_1EE7A0820)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E476C, &type metadata for SearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0820);
  }
  return result;
}

unint64_t sub_1A593A524()
{
  unint64_t result;

  result = qword_1EE7A0818;
  if (!qword_1EE7A0818)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4794, &type metadata for SearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0818);
  }
  return result;
}

unint64_t sub_1A593A56C()
{
  unint64_t result;

  result = qword_1EE7A07B0;
  if (!qword_1EE7A07B0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E43D4, &type metadata for SearchRequest.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A07B0);
  }
  return result;
}

unint64_t sub_1A593A5B4()
{
  unint64_t result;

  result = qword_1EE7A07A8;
  if (!qword_1EE7A07A8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E43FC, &type metadata for SearchRequest.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A07A8);
  }
  return result;
}

unint64_t sub_1A593A5FC()
{
  unint64_t result;

  result = qword_1EE7A07F0;
  if (!qword_1EE7A07F0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4384, &type metadata for SearchRequest.GetIndexingStatisticsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A07F0);
  }
  return result;
}

unint64_t sub_1A593A644()
{
  unint64_t result;

  result = qword_1EE7A07E8;
  if (!qword_1EE7A07E8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E43AC, &type metadata for SearchRequest.GetIndexingStatisticsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A07E8);
  }
  return result;
}

unint64_t sub_1A593A68C()
{
  unint64_t result;

  result = qword_1EE7A07D8;
  if (!qword_1EE7A07D8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E42CC, &type metadata for SearchRequest.ExcludeIndexedUIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A07D8);
  }
  return result;
}

unint64_t sub_1A593A6D4()
{
  unint64_t result;

  result = qword_1EE7A07D0;
  if (!qword_1EE7A07D0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E42F4, &type metadata for SearchRequest.ExcludeIndexedUIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A07D0);
  }
  return result;
}

unint64_t sub_1A593A71C()
{
  unint64_t result;

  result = qword_1EE7A07C8;
  if (!qword_1EE7A07C8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E448C, &type metadata for SearchRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A07C8);
  }
  return result;
}

unint64_t sub_1A593A764()
{
  unint64_t result;

  result = qword_1EE7A07C0;
  if (!qword_1EE7A07C0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E44B4, &type metadata for SearchRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A07C0);
  }
  return result;
}

unint64_t sub_1A593A7AC()
{
  unint64_t result;

  result = qword_1EE7A0970;
  if (!qword_1EE7A0970)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E415C, &type metadata for CredentialResponse.CredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0970);
  }
  return result;
}

unint64_t sub_1A593A7F4()
{
  unint64_t result;

  result = qword_1EE7A0968;
  if (!qword_1EE7A0968)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4184, &type metadata for CredentialResponse.CredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0968);
  }
  return result;
}

unint64_t sub_1A593A83C()
{
  unint64_t result;

  result = qword_1EE7A0958;
  if (!qword_1EE7A0958)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4214, &type metadata for CredentialResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0958);
  }
  return result;
}

unint64_t sub_1A593A884()
{
  unint64_t result;

  result = qword_1EE7A0950;
  if (!qword_1EE7A0950)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E423C, &type metadata for CredentialResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0950);
  }
  return result;
}

unint64_t sub_1A593A8CC()
{
  unint64_t result;

  result = qword_1EE7A0938;
  if (!qword_1EE7A0938)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3FEC, &type metadata for CredentialRequest.MakeCredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0938);
  }
  return result;
}

unint64_t sub_1A593A914()
{
  unint64_t result;

  result = qword_1EE7A0930;
  if (!qword_1EE7A0930)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E4014, &type metadata for CredentialRequest.MakeCredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0930);
  }
  return result;
}

unint64_t sub_1A593A95C()
{
  unint64_t result;

  result = qword_1EE7A0920;
  if (!qword_1EE7A0920)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E40A4, &type metadata for CredentialRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0920);
  }
  return result;
}

unint64_t sub_1A593A9A4()
{
  unint64_t result;

  result = qword_1EE7A0918;
  if (!qword_1EE7A0918)
  {
    result = MEMORY[0x1A85B1874]("e~S?x3\n", &type metadata for CredentialRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0918);
  }
  return result;
}

unint64_t sub_1A593A9EC()
{
  unint64_t result;

  result = qword_1EE7A0890;
  if (!qword_1EE7A0890)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3E7C, &type metadata for DownloadRequest.StartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0890);
  }
  return result;
}

unint64_t sub_1A593AA34()
{
  unint64_t result;

  result = qword_1EE7A0888;
  if (!qword_1EE7A0888)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3EA4, &type metadata for DownloadRequest.StartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0888);
  }
  return result;
}

unint64_t sub_1A593AA7C()
{
  unint64_t result;

  result = qword_1EE7A0878;
  if (!qword_1EE7A0878)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3DC4, &type metadata for DownloadRequest.StopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0878);
  }
  return result;
}

unint64_t sub_1A593AAC4()
{
  unint64_t result;

  result = qword_1EE7A0870;
  if (!qword_1EE7A0870)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3DEC, &type metadata for DownloadRequest.StopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0870);
  }
  return result;
}

unint64_t sub_1A593AB0C()
{
  unint64_t result;

  result = qword_1EE7A0860;
  if (!qword_1EE7A0860)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3F34, &type metadata for DownloadRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0860);
  }
  return result;
}

unint64_t sub_1A593AB54()
{
  unint64_t result;

  result = qword_1EE7A0858;
  if (!qword_1EE7A0858)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3F5C, &type metadata for DownloadRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0858);
  }
  return result;
}

unint64_t sub_1A593AB9C()
{
  unint64_t result;

  result = qword_1EE7A08D8;
  if (!qword_1EE7A08D8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3CBC, &type metadata for DownloadRequest.Response.DidDeferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A08D8);
  }
  return result;
}

unint64_t sub_1A593ABE4()
{
  unint64_t result;

  result = qword_1EE7A08D0;
  if (!qword_1EE7A08D0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3CE4, &type metadata for DownloadRequest.Response.DidDeferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A08D0);
  }
  return result;
}

unint64_t sub_1A593AC2C()
{
  unint64_t result;

  result = qword_1EE7A08F8;
  if (!qword_1EE7A08F8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3C6C, &type metadata for DownloadRequest.Response.DidNotCompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A08F8);
  }
  return result;
}

unint64_t sub_1A593AC74()
{
  unint64_t result;

  result = qword_1EE7A08F0;
  if (!qword_1EE7A08F0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3C94, &type metadata for DownloadRequest.Response.DidNotCompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A08F0);
  }
  return result;
}

unint64_t sub_1A593ACBC()
{
  unint64_t result;

  result = qword_1EE7AB558;
  if (!qword_1EE7AB558)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3C1C, &type metadata for DownloadRequest.Response.CurrentlyUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB558);
  }
  return result;
}

unint64_t sub_1A593AD04()
{
  unint64_t result;

  result = qword_1EE7AB560;
  if (!qword_1EE7AB560)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3C44, &type metadata for DownloadRequest.Response.CurrentlyUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB560);
  }
  return result;
}

unint64_t sub_1A593AD4C()
{
  unint64_t result;

  result = qword_1EE7A08E8;
  if (!qword_1EE7A08E8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3BCC, &type metadata for DownloadRequest.Response.DidCompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A08E8);
  }
  return result;
}

unint64_t sub_1A593AD94()
{
  unint64_t result;

  result = qword_1EE7A08E0;
  if (!qword_1EE7A08E0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3BF4, &type metadata for DownloadRequest.Response.DidCompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A08E0);
  }
  return result;
}

unint64_t sub_1A593ADDC()
{
  unint64_t result;

  result = qword_1EE7A08C0;
  if (!qword_1EE7A08C0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3B7C, &type metadata for DownloadRequest.Response.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A08C0);
  }
  return result;
}

unint64_t sub_1A593AE24()
{
  unint64_t result;

  result = qword_1EE7A08B8;
  if (!qword_1EE7A08B8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3BA4, &type metadata for DownloadRequest.Response.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A08B8);
  }
  return result;
}

unint64_t sub_1A593AE6C()
{
  unint64_t result;

  result = qword_1EE7A08B0;
  if (!qword_1EE7A08B0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3D0C, &type metadata for DownloadRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A08B0);
  }
  return result;
}

unint64_t sub_1A593AEB4()
{
  unint64_t result;

  result = qword_1EE7A08A8;
  if (!qword_1EE7A08A8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3D34, &type metadata for DownloadRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A08A8);
  }
  return result;
}

unint64_t sub_1A593AEFC()
{
  unint64_t result;

  result = qword_1EE7A06C0;
  if (!qword_1EE7A06C0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3A0C, &type metadata for MessageFromSearchIndexer.DownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A06C0);
  }
  return result;
}

unint64_t sub_1A593AF44()
{
  unint64_t result;

  result = qword_1EE7A06B8;
  if (!qword_1EE7A06B8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3A34, &type metadata for MessageFromSearchIndexer.DownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A06B8);
  }
  return result;
}

unint64_t sub_1A593AF8C()
{
  unint64_t result;

  result = qword_1EE7A0690;
  if (!qword_1EE7A0690)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3954, &type metadata for MessageFromSearchIndexer.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0690);
  }
  return result;
}

unint64_t sub_1A593AFD4()
{
  unint64_t result;

  result = qword_1EE7A0688;
  if (!qword_1EE7A0688)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E397C, &type metadata for MessageFromSearchIndexer.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0688);
  }
  return result;
}

unint64_t sub_1A593B01C()
{
  unint64_t result;

  result = qword_1EE7A06D8;
  if (!qword_1EE7A06D8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E389C, &type metadata for MessageFromSearchIndexer.CredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A06D8);
  }
  return result;
}

unint64_t sub_1A593B064()
{
  unint64_t result;

  result = qword_1EE7A06D0;
  if (!qword_1EE7A06D0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E38C4, &type metadata for MessageFromSearchIndexer.CredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A06D0);
  }
  return result;
}

unint64_t sub_1A593B0AC()
{
  unint64_t result;

  result = qword_1EE7A06F0;
  if (!qword_1EE7A06F0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E37E4, &type metadata for MessageFromSearchIndexer.IndexingStatisticsUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A06F0);
  }
  return result;
}

unint64_t sub_1A593B0F4()
{
  unint64_t result;

  result = qword_1EE7A06E8;
  if (!qword_1EE7A06E8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E380C, &type metadata for MessageFromSearchIndexer.IndexingStatisticsUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A06E8);
  }
  return result;
}

unint64_t sub_1A593B13C()
{
  unint64_t result;

  result = qword_1EE7A06A8;
  if (!qword_1EE7A06A8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3AC4, &type metadata for MessageFromSearchIndexer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A06A8);
  }
  return result;
}

unint64_t sub_1A593B184()
{
  unint64_t result;

  result = qword_1EE7A06A0;
  if (!qword_1EE7A06A0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3AEC, &type metadata for MessageFromSearchIndexer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A06A0);
  }
  return result;
}

unint64_t sub_1A593B1CC()
{
  unint64_t result;

  result = qword_1EE7A0658;
  if (!qword_1EE7A0658)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3674, &type metadata for MessageToSearchIndexer.DownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0658);
  }
  return result;
}

unint64_t sub_1A593B214()
{
  unint64_t result;

  result = qword_1EE7A0650;
  if (!qword_1EE7A0650)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E369C, &type metadata for MessageToSearchIndexer.DownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0650);
  }
  return result;
}

unint64_t sub_1A593B25C()
{
  unint64_t result;

  result = qword_1EE7A0628;
  if (!qword_1EE7A0628)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E35BC, &type metadata for MessageToSearchIndexer.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0628);
  }
  return result;
}

unint64_t sub_1A593B2A4()
{
  unint64_t result;

  result = qword_1EE7A0620;
  if (!qword_1EE7A0620)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E35E4, &type metadata for MessageToSearchIndexer.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0620);
  }
  return result;
}

unint64_t sub_1A593B2EC()
{
  unint64_t result;

  result = qword_1EE7A0670;
  if (!qword_1EE7A0670)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E3504, &type metadata for MessageToSearchIndexer.CredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0670);
  }
  return result;
}

unint64_t sub_1A593B334()
{
  unint64_t result;

  result = qword_1EE7A0668;
  if (!qword_1EE7A0668)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E352C, &type metadata for MessageToSearchIndexer.CredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0668);
  }
  return result;
}

unint64_t sub_1A593B37C()
{
  unint64_t result;

  result = qword_1EE7A0640;
  if (!qword_1EE7A0640)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E372C, &type metadata for MessageToSearchIndexer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0640);
  }
  return result;
}

unint64_t sub_1A593B3C4()
{
  unint64_t result;

  result = qword_1EE7A0638;
  if (!qword_1EE7A0638)
  {
    result = MEMORY[0x1A85B1874]("݇S?0?\n", &type metadata for MessageToSearchIndexer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0638);
  }
  return result;
}

unint64_t sub_1A593B408()
{
  unint64_t result;

  result = qword_1EE7A0A98;
  if (!qword_1EE7A0A98)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UID, &type metadata for UID);
    atomic_store(result, (unint64_t *)&qword_1EE7A0A98);
  }
  return result;
}

unint64_t sub_1A593B44C()
{
  unint64_t result;

  result = qword_1EE7986D8;
  if (!qword_1EE7986D8)
  {
    result = MEMORY[0x1A85B1874]("-lS?d\"\n", &type metadata for IndexingStatistics);
    atomic_store(result, (unint64_t *)&qword_1EE7986D8);
  }
  return result;
}

unint64_t sub_1A593B490()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE7A0D48;
  if (!qword_1EE7A0D48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7A0D38);
    v2[0] = sub_1A593B51C();
    v2[1] = sub_1A569ECC8(&qword_1EE7A0E40, &qword_1EE7A0E38, (uint64_t (*)(void))sub_1A593B408, MEMORY[0x1E0DEAF40]);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE7A0D48);
  }
  return result;
}

unint64_t sub_1A593B51C()
{
  unint64_t result;

  result = qword_1EE7A0AE8;
  if (!qword_1EE7A0AE8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Mailbox, &type metadata for Mailbox);
    atomic_store(result, (unint64_t *)&qword_1EE7A0AE8);
  }
  return result;
}

unint64_t sub_1A593B560()
{
  unint64_t result;

  result = qword_1EE7AB588;
  if (!qword_1EE7AB588)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchQuery, &type metadata for SearchQuery);
    atomic_store(result, (unint64_t *)&qword_1EE7AB588);
  }
  return result;
}

unint64_t sub_1A593B5A4()
{
  unint64_t result;

  result = qword_1EE7AB5A8;
  if (!qword_1EE7AB5A8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Credentials, &type metadata for Credentials);
    atomic_store(result, (unint64_t *)&qword_1EE7AB5A8);
  }
  return result;
}

unint64_t sub_1A593B5E8()
{
  unint64_t result;

  result = qword_1EE7AB5C8;
  if (!qword_1EE7AB5C8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for DownloadRequest.ID, &type metadata for DownloadRequest.ID);
    atomic_store(result, (unint64_t *)&qword_1EE7AB5C8);
  }
  return result;
}

unint64_t sub_1A593B62C()
{
  unint64_t result;

  result = qword_1EE7AB5D8;
  if (!qword_1EE7AB5D8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AccountConfiguration, &type metadata for AccountConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EE7AB5D8);
  }
  return result;
}

uint64_t sub_1A593B670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB5E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A593B6B8()
{
  unint64_t result;

  result = qword_1EE7A0940;
  if (!qword_1EE7A0940)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for CredentialRequest, &type metadata for CredentialRequest);
    atomic_store(result, (unint64_t *)&qword_1EE7A0940);
  }
  return result;
}

unint64_t sub_1A593B6FC()
{
  unint64_t result;

  result = qword_1EE7986D0;
  if (!qword_1EE7986D0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchResponse, &type metadata for SearchResponse);
    atomic_store(result, (unint64_t *)&qword_1EE7986D0);
  }
  return result;
}

unint64_t sub_1A593B740()
{
  unint64_t result;

  result = qword_1EE7A0900;
  if (!qword_1EE7A0900)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for DownloadRequest.Response, &type metadata for DownloadRequest.Response);
    atomic_store(result, (unint64_t *)&qword_1EE7A0900);
  }
  return result;
}

unint64_t sub_1A593B784()
{
  unint64_t result;

  result = qword_1EE7AB610;
  if (!qword_1EE7AB610)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for CredentialResponse, &type metadata for CredentialResponse);
    atomic_store(result, (unint64_t *)&qword_1EE7AB610);
  }
  return result;
}

unint64_t sub_1A593B7C8()
{
  unint64_t result;

  result = qword_1EE7AB618;
  if (!qword_1EE7AB618)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchRequest, &type metadata for SearchRequest);
    atomic_store(result, (unint64_t *)&qword_1EE7AB618);
  }
  return result;
}

unint64_t sub_1A593B80C()
{
  unint64_t result;

  result = qword_1EE7AB620;
  if (!qword_1EE7AB620)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for DownloadRequest, &type metadata for DownloadRequest);
    atomic_store(result, (unint64_t *)&qword_1EE7AB620);
  }
  return result;
}

uint64_t sub_1A593B850(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  unint64_t v15;

  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_1A54E46E8(result, a2);
      result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1A54E46E8(result, a2);
      sub_1A54E46E8(a3, a4);
      sub_1A54E46E8(a5, a6);
      sub_1A54E46E8(a7, v15);
      result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      result = sub_1A54E46E8(result, a2);
      break;
    case 3uLL:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

id *sub_1A593B950(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id *sub_1A593B978(id *a1)
{

  return a1;
}

void *SearchIndexerXPC.serviceName.unsafeMutableAddressor()
{
  return &static SearchIndexerXPC.serviceName;
}

unint64_t static SearchIndexerXPC.serviceName.getter()
{
  return 0xD00000000000001DLL;
}

ValueMetadata *type metadata accessor for SearchIndexerXPC()
{
  return &type metadata for SearchIndexerXPC;
}

uint64_t sub_1A593B9E4()
{
  uint64_t v0;

  v0 = sub_1A594A764();
  __swift_allocate_value_buffer_0(v0, qword_1EE7986E0);
  __swift_project_value_buffer_0(v0, (uint64_t)qword_1EE7986E0);
  return sub_1A594A758();
}

uint64_t SearchSession.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  SearchSession.init()();
  return v0;
}

uint64_t SearchSession.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1A594A794();
  MEMORY[0x1E0C80A78](v2);
  sub_1A594A7E8();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B860);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1A59ABD10;
  sub_1A594A788();
  sub_1A593BC0C();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B6B8);
  sub_1A593BC54();
  sub_1A594C5C4();
  v3 = sub_1A594A77C();
  if (v1)
    swift_deallocPartialClassInstance();
  else
    *(_QWORD *)(v0 + 16) = v3;
  return v0;
}

unint64_t sub_1A593BC0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE79B580;
  if (!qword_1EE79B580)
  {
    v1 = sub_1A594A794();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DF0458], v1);
    atomic_store(result, (unint64_t *)&qword_1EE79B580);
  }
  return result;
}

unint64_t sub_1A593BC54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE79B6C0;
  if (!qword_1EE79B6C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE79B6B8);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EE79B6C0);
  }
  return result;
}

uint64_t SearchSession.deinit()
{
  uint64_t v0;

  sub_1A594A7D0();
  swift_release();
  return v0;
}

uint64_t SearchSession.__deallocating_deinit()
{
  sub_1A594A7D0();
  swift_release();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchSession.activate()()
{
  sub_1A594A7DC();
}

Swift::Void __swiftcall SearchSession.cancel(reason:)(Swift::String reason)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_1EE7986F8 != -1)
    swift_once();
  v1 = sub_1A594A764();
  __swift_project_value_buffer_0(v1, (uint64_t)qword_1EE7986E0);
  v2 = sub_1A594A74C();
  v3 = sub_1A594C030();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1A4F90000, v2, v3, "cancel", v4, 2u);
    MEMORY[0x1A85B1964](v4, -1, -1);
  }

  sub_1A594A7D0();
}

uint64_t SearchSession.perform(query:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint8_t *v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  uint64_t v24;
  uint64_t v25[4];
  char v26;

  if (qword_1EE7986F8 != -1)
    swift_once();
  v10 = sub_1A594A764();
  __swift_project_value_buffer_0(v10, (uint64_t)qword_1EE7986E0);
  v11 = a1;
  swift_bridgeObjectRetain_n();
  v12 = v11;
  v13 = sub_1A594A74C();
  v14 = sub_1A594C030();
  if (os_log_type_enabled(v13, v14))
  {
    v24 = a2;
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v25[0] = v16;
    *(_DWORD *)v15 = 136315138;
    v17 = SearchQuery.debugDescription.getter();
    sub_1A593DA7C(v17, v18, v25);
    sub_1A594C3CC();
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v13, v14, "Sending search %s to SearchIndexer.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v16, -1, -1);
    v19 = v15;
    a2 = v24;
    MEMORY[0x1A85B1964](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v12;
  v20[3] = a2;
  v20[4] = a3;
  v20[5] = a4;
  v20[6] = a5;
  v25[0] = (uint64_t)v12;
  v25[1] = a2;
  v25[2] = a3;
  v25[3] = 0;
  v26 = 64;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_1A593DA44;
  *(_QWORD *)(v21 + 24) = v20;
  sub_1A5936248();
  sub_1A593628C();
  v22 = v12;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  sub_1A594A7B8();
  swift_release();
  return swift_release();
}

void sub_1A593C260(char *a1, uint64_t a2, uint64_t a3, __int16 a4, char *a5, int a6, int a7, void (*a8)(void), uint64_t a9)
{
  uint64_t v10;
  uint64_t v14;
  char *v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;

  LOBYTE(v10) = a4;
  if ((a4 & 0x100) != 0)
  {
    v34 = a1;
    if (qword_1EE7986F8 == -1)
    {
LABEL_32:
      v35 = sub_1A594A764();
      __swift_project_value_buffer_0(v35, (uint64_t)qword_1EE7986E0);
      sub_1A593E378(a1, a2, a3, v10, 1);
      v36 = a5;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A593E378(a1, a2, a3, v10, 1);
      v37 = v36;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v38 = sub_1A594A74C();
      v39 = sub_1A594C018();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = swift_slowAlloc();
        v52 = (_QWORD *)swift_slowAlloc();
        v54 = swift_slowAlloc();
        v57 = v54;
        *(_DWORD *)v40 = 136315394;
        v41 = SearchQuery.debugDescription.getter();
        sub_1A593DA7C(v41, v42, &v57);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();

        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2112;
        v56 = sub_1A5949D98();
        sub_1A594C3CC();
        *v52 = v56;
        sub_1A593E158(a1, a2, a3, v10, 1);
        sub_1A593E158(a1, a2, a3, v10, 1);
        _os_log_impl(&dword_1A4F90000, v38, v39, "Search %s failed: %@", (uint8_t *)v40, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1A68);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v52, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v54, -1, -1);
        MEMORY[0x1A85B1964](v40, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        sub_1A593E158(a1, a2, a3, v10, 1);
        sub_1A593E158(a1, a2, a3, v10, 1);
      }

      sub_1A593CAE4(MEMORY[0x1E0DEE9D8]);
      a8();
      swift_bridgeObjectRelease();
      sub_1A593E158(a1, a2, a3, v10, 1);
      return;
    }
LABEL_47:
    swift_once();
    goto LABEL_32;
  }
  if (a4 == 64)
  {
    if (qword_1EE7986F8 != -1)
      swift_once();
    v14 = sub_1A594A764();
    __swift_project_value_buffer_0(v14, (uint64_t)qword_1EE7986E0);
    v15 = a5;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A593E378(a1, a2, a3, 0x40u, 0);
    v16 = v15;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A593E378(a1, a2, a3, 0x40u, 0);
    v17 = sub_1A594A74C();
    v18 = sub_1A594C030();
    if (os_log_type_enabled(v17, v18))
    {
      v10 = swift_slowAlloc();
      v53 = swift_slowAlloc();
      v57 = v53;
      *(_DWORD *)v10 = 136315394;
      v19 = SearchQuery.debugDescription.getter();
      sub_1A593DA7C(v19, v20, &v57);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease();
      v21 = 0;
      a5 = 0;
      *(_WORD *)(v10 + 12) = 2048;
      v22 = a1 + 64;
      v23 = 1 << a1[32];
      if (v23 < 64)
        v24 = ~(-1 << v23);
      else
        v24 = -1;
      v25 = v24 & *((_QWORD *)a1 + 8);
      v26 = (unint64_t)(v23 + 63) >> 6;
      do
      {
        if (v25)
        {
          v27 = __clz(__rbit64(v25));
          v25 &= v25 - 1;
          v28 = v27 | (v21 << 6);
        }
        else
        {
          v31 = v21 + 1;
          if (__OFADD__(v21, 1))
            goto LABEL_46;
          if (v31 >= v26)
          {
LABEL_43:
            swift_release();
            sub_1A594C3CC();
            sub_1A593E158(a1, a2, a3, 0x40u, 0);
            _os_log_impl(&dword_1A4F90000, v17, v18, "Received response for search %s with %ld) results.", (uint8_t *)v10, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v53, -1, -1);
            MEMORY[0x1A85B1964](v10, -1, -1);
            goto LABEL_44;
          }
          v32 = *(_QWORD *)&v22[8 * v31];
          ++v21;
          if (!v32)
          {
            v21 = v31 + 1;
            if (v31 + 1 >= v26)
              goto LABEL_43;
            v32 = *(_QWORD *)&v22[8 * v21];
            if (!v32)
            {
              v21 = v31 + 2;
              if (v31 + 2 >= v26)
                goto LABEL_43;
              v32 = *(_QWORD *)&v22[8 * v21];
              if (!v32)
              {
                v21 = v31 + 3;
                if (v31 + 3 >= v26)
                  goto LABEL_43;
                v32 = *(_QWORD *)&v22[8 * v21];
                if (!v32)
                {
                  v21 = v31 + 4;
                  if (v31 + 4 >= v26)
                    goto LABEL_43;
                  v32 = *(_QWORD *)&v22[8 * v21];
                  if (!v32)
                  {
                    v33 = v31 + 5;
                    if (v33 >= v26)
                      goto LABEL_43;
                    v32 = *(_QWORD *)&v22[8 * v33];
                    if (!v32)
                    {
                      while (1)
                      {
                        v21 = v33 + 1;
                        if (__OFADD__(v33, 1))
                          break;
                        if (v21 >= v26)
                          goto LABEL_43;
                        v32 = *(_QWORD *)&v22[8 * v21];
                        ++v33;
                        if (v32)
                          goto LABEL_30;
                      }
                      __break(1u);
                      return;
                    }
                    v21 = v33;
                  }
                }
              }
            }
          }
LABEL_30:
          v25 = (v32 - 1) & v32;
          v28 = __clz(__rbit64(v32)) + (v21 << 6);
        }
        v29 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a1 + 7) + 8 * v28) + 16);
        v30 = __OFADD__(a5, v29);
        a5 += v29;
      }
      while (!v30);
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    sub_1A593E158(a1, a2, a3, 0x40u, 0);
    swift_bridgeObjectRelease_n();

    sub_1A593E158(a1, a2, a3, 0x40u, 0);
LABEL_44:

    ((void (*)(char *))a8)(a1);
  }
  else
  {
    if (qword_1EE7986F8 != -1)
      swift_once();
    v43 = sub_1A594A764();
    __swift_project_value_buffer_0(v43, (uint64_t)qword_1EE7986E0);
    v44 = a5;
    swift_bridgeObjectRetain_n();
    v45 = v44;
    v46 = sub_1A594A74C();
    v47 = sub_1A594C018();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      v57 = v49;
      *(_DWORD *)v48 = 136315138;
      v50 = SearchQuery.debugDescription.getter();
      sub_1A593DA7C(v50, v51, &v57);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v46, v47, "Invalid response for %s", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v49, -1, -1);
      MEMORY[0x1A85B1964](v48, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1A593CAE4(MEMORY[0x1E0DEE9D8]);
    a8();
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1A593CAE4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB628);
  v2 = (_QWORD *)sub_1A594CA5C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = (unsigned __int8 *)*(v4 - 2);
    v8 = (unsigned __int8 *)*(v4 - 1);
    v7 = *v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A593E164(v5, v6, v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 24 * result);
    *v11 = v5;
    v11[1] = (uint64_t)v6;
    v11[2] = (uint64_t)v8;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 4;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t SearchSession.getIndexingStatistics(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_1EE7986F8 != -1)
    swift_once();
  v4 = sub_1A594A764();
  __swift_project_value_buffer_0(v4, (uint64_t)qword_1EE7986E0);
  v5 = sub_1A594A74C();
  v6 = sub_1A594C030();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1A4F90000, v5, v6, "Sending request for indexing statistics to SearchIndexer.", v7, 2u);
    MEMORY[0x1A85B1964](v7, -1, -1);
  }

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1A593E0BC;
  *(_QWORD *)(v9 + 24) = v8;
  sub_1A5936248();
  sub_1A593628C();
  swift_retain();
  swift_retain();
  sub_1A594A7B8();
  swift_release();
  return swift_release();
}

void sub_1A593CF18(id a1, uint64_t a2, uint64_t a3, __int16 a4, void (*a5)(_QWORD, _QWORD, _QWORD))
{
  unsigned __int8 v6;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  uint8_t *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD *v30;
  void (*v31)(_QWORD, _QWORD, _QWORD);
  uint64_t v32;

  v6 = a4;
  if ((a4 & 0x100) != 0)
  {
    v17 = a1;
    if (qword_1EE7986F8 != -1)
      swift_once();
    v18 = sub_1A594A764();
    __swift_project_value_buffer_0(v18, (uint64_t)qword_1EE7986E0);
    v19 = a1;
    v20 = a1;
    v21 = sub_1A594A74C();
    v22 = sub_1A594C018();
    if (os_log_type_enabled(v21, v22))
    {
      v31 = a5;
      v23 = (uint8_t *)swift_slowAlloc();
      v30 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v23 = 138412290;
      v24 = a1;
      v32 = _swift_stdlib_bridgeErrorToNSError();
      sub_1A594C3CC();
      *v30 = v32;
      sub_1A593E158(a1, a2, a3, v6, 1);
      sub_1A593E158(a1, a2, a3, v6, 1);
      _os_log_impl(&dword_1A4F90000, v21, v22, "Requesting statistics failed with error %@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1A68);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v30, -1, -1);
      v25 = v23;
      a5 = v31;
      MEMORY[0x1A85B1964](v25, -1, -1);
    }
    else
    {
      sub_1A593E158(a1, a2, a3, v6, 1);
      sub_1A593E158(a1, a2, a3, v6, 1);
    }

    a5(0, 0, 0);
    sub_1A593E158(a1, a2, a3, v6, 1);
  }
  else
  {
    if (a4 == 65)
    {
      if (qword_1EE7986F8 != -1)
        swift_once();
      v10 = sub_1A594A764();
      __swift_project_value_buffer_0(v10, (uint64_t)qword_1EE7986E0);
      v11 = sub_1A594A74C();
      v12 = sub_1A594C030();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_1A4F90000, v11, v12, "Received a response when requesting statistics", v13, 2u);
        MEMORY[0x1A85B1964](v13, -1, -1);
      }

      v14 = a1;
      v15 = a2;
      v16 = a3;
    }
    else
    {
      if (qword_1EE7986F8 != -1)
        swift_once();
      v26 = sub_1A594A764();
      __swift_project_value_buffer_0(v26, (uint64_t)qword_1EE7986E0);
      v27 = sub_1A594A74C();
      v28 = sub_1A594C018();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_1A4F90000, v27, v28, "Invalid response when requesting statistics", v29, 2u);
        MEMORY[0x1A85B1964](v29, -1, -1);
      }

      v14 = 0;
      v15 = 0;
      v16 = 0;
    }
    a5(v14, v15, v16);
  }
}

uint64_t SearchSession.excludeIndexedUIDs(in:from:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint8_t *v16;
  _QWORD *v17;
  uint64_t v18;

  if (qword_1EE7986F8 != -1)
    swift_once();
  v9 = sub_1A594A764();
  __swift_project_value_buffer_0(v9, (uint64_t)qword_1EE7986E0);
  v10 = sub_1A594A74C();
  v11 = sub_1A594C030();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = a4;
    v13 = a6;
    v14 = a5;
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_1A4F90000, v10, v11, "Sending request to exclude indexed UIDs to SearchIndexer.", v15, 2u);
    v16 = v15;
    a5 = v14;
    a6 = v13;
    a4 = v12;
    MEMORY[0x1A85B1964](v16, -1, -1);
  }

  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a5;
  v17[3] = a6;
  v17[4] = a4;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1A593E0FC;
  *(_QWORD *)(v18 + 24) = v17;
  sub_1A5936248();
  sub_1A593628C();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  sub_1A594A7B8();
  swift_release();
  return swift_release();
}

void sub_1A593D640(id a1, uint64_t a2, uint64_t a3, __int16 a4, void (*a5)(_QWORD), uint64_t a6, void *a7)
{
  unsigned __int8 v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  void (*v32)(_QWORD);
  uint64_t v33;

  v9 = a4;
  if ((a4 & 0x100) != 0)
  {
    v18 = a1;
    if (qword_1EE7986F8 != -1)
      swift_once();
    v19 = sub_1A594A764();
    __swift_project_value_buffer_0(v19, (uint64_t)qword_1EE7986E0);
    v20 = a1;
    v21 = a1;
    v22 = sub_1A594A74C();
    v23 = sub_1A594C018();
    if (os_log_type_enabled(v22, v23))
    {
      v32 = a5;
      v24 = (uint8_t *)swift_slowAlloc();
      v31 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412290;
      v25 = a1;
      v33 = _swift_stdlib_bridgeErrorToNSError();
      sub_1A594C3CC();
      *v31 = v33;
      sub_1A593E158(a1, a2, a3, v9, 1);
      sub_1A593E158(a1, a2, a3, v9, 1);
      _os_log_impl(&dword_1A4F90000, v22, v23, "Request to exclude indexed UIDs failed with error %@", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1A68);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v31, -1, -1);
      v26 = v24;
      a5 = v32;
      MEMORY[0x1A85B1964](v26, -1, -1);
    }
    else
    {
      sub_1A593E158(a1, a2, a3, v9, 1);
      sub_1A593E158(a1, a2, a3, v9, 1);
    }

    a5(a7);
    sub_1A593E158(a1, a2, a3, v9, 1);
  }
  else
  {
    if (a4 == 66)
    {
      if (qword_1EE7986F8 != -1)
        swift_once();
      v11 = sub_1A594A764();
      __swift_project_value_buffer_0(v11, (uint64_t)qword_1EE7986E0);
      v12 = sub_1A594A74C();
      v13 = sub_1A594C030();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_1A4F90000, v12, v13, "Received a response when requesting to exclude indexed UIDs", v14, 2u);
        MEMORY[0x1A85B1964](v14, -1, -1);
      }

      v15 = a1;
    }
    else
    {
      if (qword_1EE7986F8 != -1)
        swift_once();
      v27 = sub_1A594A764();
      __swift_project_value_buffer_0(v27, (uint64_t)qword_1EE7986E0);
      v28 = sub_1A594A74C();
      v29 = sub_1A594C018();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_1A4F90000, v28, v29, "Invalid response when requesting to exclude indexed UIDs", v30, 2u);
        MEMORY[0x1A85B1964](v30, -1, -1);
      }

      v15 = a7;
    }
    a5(v15);
  }
}

uint64_t sub_1A593DA10()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1A593DA44(char *a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v4;

  sub_1A593C260(a1, a2, a3, a4 & 0x1FF, *(char **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(void (**)(void))(v4 + 40), *(_QWORD *)(v4 + 48));
}

uint64_t sub_1A593DA74(uint64_t a1)
{
  uint64_t v1;

  return sub_1A593205C(a1, *(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16));
}

uint64_t sub_1A593DA7C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1A593DB4C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1A558CC98((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1A558CC98((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1A593DB4C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A594C420();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1A593DD04(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1A594C7D4();
  if (!v8)
  {
    sub_1A594C9B4();
    __break(1u);
LABEL_17:
    result = sub_1A594CA68();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1A593DD04(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1A593DD98(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A593DF70(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1A593DF70(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A593DD98(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1A593DF0C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1A594C72C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1A594C9B4();
      __break(1u);
LABEL_10:
      v2 = sub_1A594B640();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1A594CA68();
    __break(1u);
LABEL_14:
    result = sub_1A594C9B4();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1A593DF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B380);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size_0(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A593DF70(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B380);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

void sub_1A593E0BC(void *a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v4;

  sub_1A593CF18(a1, a2, a3, a4 & 0x1FF, *(void (**)(_QWORD, _QWORD, _QWORD))(v4 + 16));
}

uint64_t sub_1A593E0D0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A593E0FC(void *a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v4;

  sub_1A593D640(a1, a2, a3, a4 & 0x1FF, *(void (**)(_QWORD))(v4 + 16), *(_QWORD *)(v4 + 24), *(void **)(v4 + 32));
}

uint64_t sub_1A593E114()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for SearchSession()
{
  return objc_opt_self();
}

void sub_1A593E158(id a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, char a5)
{
  if ((a5 & 1) != 0)

  else
    sub_1A5938FE0((uint64_t)a1, a2, a3, a4);
}

unint64_t sub_1A593E164(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1A594CE64();
  v6 = *(_QWORD *)(a1 + 16);
  sub_1A594CE88();
  if (v6)
  {
    v7 = a1 + 32;
    do
    {
      ++v7;
      sub_1A594CE94();
      --v6;
    }
    while (v6);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  v8 = sub_1A594CED0();
  return sub_1A593E21C(a1, a2, a3, v8);
}

unint64_t sub_1A593E21C(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 **v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unsigned __int8 *v18;
  uint64_t v19;
  unsigned __int8 *v20;
  int v21;
  int v22;
  int v23;
  unsigned __int8 *v25;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v11 = ~v6;
    v12 = *(_QWORD *)(a1 + 16);
    v13 = *(_QWORD *)(v4 + 48);
    v25 = (unsigned __int8 *)(a1 + 34);
    do
    {
      v14 = (unsigned __int8 **)(v13 + 24 * v7);
      v15 = *v14;
      if (*((_QWORD *)*v14 + 2) == v12)
      {
        v16 = v14[1];
        v17 = v14[2];
        if (v12 && v15 != (unsigned __int8 *)a1)
        {
          if (v15[32] != *(unsigned __int8 *)(a1 + 32))
            goto LABEL_4;
          if (v12 != 1)
          {
            if (v15[33] != *(unsigned __int8 *)(a1 + 33))
              goto LABEL_4;
            v18 = v15 + 34;
            v19 = v12 - 2;
            v20 = v25;
            while (v19)
            {
              v22 = *v18++;
              v21 = v22;
              v23 = *v20++;
              --v19;
              if (v21 != v23)
                goto LABEL_4;
            }
          }
        }
        if (v16 == a2 && v17 == a3 || (sub_1A594CD38() & 1) != 0)
          return v7;
      }
LABEL_4:
      v7 = (v7 + 1) & v11;
    }
    while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

id sub_1A593E378(id a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, char a5)
{
  if ((a5 & 1) != 0)
    return a1;
  else
    return (id)sub_1A5938F8C((uint64_t)a1, a2, a3, a4);
}

uint64_t sub_1A593E3A0(void **a1, void **a2)
{
  return _s20IMAPSearchIndexerXPC10SuggestionV2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t Suggestion.init(from:)(_QWORD *a1)
{
  return sub_1A593EA44(a1);
}

uint64_t Suggestion.encode(to:)(_QWORD *a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _BYTE v11[24];
  uint64_t v12;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36F8]), sel_initRequiringSecureCoding_, 1);
  objc_msgSend(v4, sel_setOutputFormat_, 200);
  v5 = (void *)sub_1A594B3F4();
  objc_msgSend(v4, sel_encodeObject_forKey_, a2, v5);

  v6 = objc_msgSend(v4, sel_encodedData);
  v7 = sub_1A5949F90();
  v9 = v8;

  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A594CF30();
  __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)v11, v12);
  sub_1A592F364();
  sub_1A594CD5C();

  sub_1A54E46E8(v7, v9);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

uint64_t sub_1A593E50C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1A593EA44(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A593E534(_QWORD *a1)
{
  uint64_t *v1;

  return Suggestion.encode(to:)(a1, *v1);
}

uint64_t Suggestion.id.getter(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_uniqueIdentifier);
  v3 = sub_1A594B40C();

  return v3;
}

IMAPSearchIndexerXPC::Suggestion::ID __swiftcall Suggestion.ID.init(_:)(CSSuggestion a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  IMAPSearchIndexerXPC::Suggestion::ID result;

  v2 = -[objc_class uniqueIdentifier](a1.super.isa, sel_uniqueIdentifier);
  v3 = sub_1A594B40C();
  v5 = v4;

  v6 = v3;
  v7 = v5;
  result.underlying._object = v7;
  result.underlying._countAndFlagsBits = v6;
  return result;
}

uint64_t Suggestion.ID.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  return swift_bridgeObjectRelease();
}

uint64_t static Suggestion.ID.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t Suggestion.ID.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

void sub_1A593E6C4(uint64_t *a1@<X8>)
{
  id *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  v4 = objc_msgSend(v3, sel_uniqueIdentifier);
  v5 = sub_1A594B40C();
  v7 = v6;

  *a1 = v5;
  a1[1] = v7;
}

uint64_t _s20IMAPSearchIndexerXPC10SuggestionV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v3 = objc_msgSend(a1, sel_uniqueIdentifier);
  v4 = sub_1A594B40C();
  v6 = v5;

  v7 = objc_msgSend(a2, sel_uniqueIdentifier);
  v8 = sub_1A594B40C();
  v10 = v9;

  if (v4 == v8 && v6 == v10)
    v12 = 1;
  else
    v12 = sub_1A594CD38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

id sub_1A593E988()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1A5949F78();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1A5949DA4();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1A593EA44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[4];

  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A594CF0C();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1_0(v10, v10[3]);
    sub_1A59310FC();
    sub_1A594CD50();
    v4 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
    sub_1A54E42B4(v8, v9);
    v5 = sub_1A593E988();
    sub_1A54E46E8(v8, v9);
    objc_msgSend(v5, sel_setRequiresSecureCoding_, 1);
    sub_1A593ECB4();
    v7 = sub_1A594C2AC();
    if (v7)
    {
      v2 = v7;

      sub_1A54E46E8(v8, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      return v2;
    }
    sub_1A593ECF0();
    swift_allocError();
    swift_willThrow();

    sub_1A54E46E8(v8, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t sub_1A593EBE0()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1A593EC08()
{
  unint64_t result;

  result = qword_1EE7AB630;
  if (!qword_1EE7AB630)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Suggestion.ID, &type metadata for Suggestion.ID);
    atomic_store(result, (unint64_t *)&qword_1EE7AB630);
  }
  return result;
}

unint64_t sub_1A593EC50()
{
  unint64_t result;

  result = qword_1EE7AB638;
  if (!qword_1EE7AB638)
  {
    result = MEMORY[0x1A85B1874]("InS?", &type metadata for Suggestion.ID);
    atomic_store(result, (unint64_t *)&qword_1EE7AB638);
  }
  return result;
}

ValueMetadata *type metadata accessor for Suggestion()
{
  return &type metadata for Suggestion;
}

ValueMetadata *type metadata accessor for Suggestion.ID()
{
  return &type metadata for Suggestion.ID;
}

unint64_t sub_1A593ECB4()
{
  unint64_t result;

  result = qword_1EE7AB640;
  if (!qword_1EE7AB640)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE7AB640);
  }
  return result;
}

unint64_t sub_1A593ECF0()
{
  unint64_t result;

  result = qword_1EE7AB648;
  if (!qword_1EE7AB648)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E5350, &type metadata for Suggestion.WrongObject);
    atomic_store(result, (unint64_t *)&qword_1EE7AB648);
  }
  return result;
}

ValueMetadata *type metadata accessor for Suggestion.WrongObject()
{
  return &type metadata for Suggestion.WrongObject;
}

uint64_t sub_1A593ED44()
{
  uint64_t v0;

  v0 = sub_1A594A764();
  __swift_allocate_value_buffer_0(v0, qword_1EE7A0AA0);
  __swift_project_value_buffer_0(v0, (uint64_t)qword_1EE7A0AA0);
  return sub_1A594A758();
}

uint64_t sub_1A593EDC8()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1030);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = 1;
  off_1EE7A0A88 = (_UNKNOWN *)result;
  return result;
}

uint64_t *SyncSession.__allocating_init(generateCredentials:updateIndexingStatistics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a2;
  v20 = a1;
  v28 = a4;
  v21 = a3;
  v25 = sub_1A594A794();
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v24 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594C078();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A594C048();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v9);
  v11 = sub_1A594AD70();
  MEMORY[0x1E0C80A78](v11);
  v22 = sub_1A593F15C();
  sub_1A594AD4C();
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1A55E1698((unint64_t *)&unk_1EE7A48A0, v10, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A4828);
  sub_1A5524F80((unint64_t *)&unk_1EE7A4860, (uint64_t *)&unk_1EE7A4828);
  sub_1A594C5C4();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF8D0], v5);
  v12 = (void *)sub_1A594C0A8();
  sub_1A594A7E8();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B860);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1A59ABD10;
  v14 = v12;
  sub_1A594A788();
  v29 = v13;
  sub_1A55E1698((unint64_t *)&qword_1EE79B580, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0448], MEMORY[0x1E0DF0458]);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B6B8);
  sub_1A5524F80((unint64_t *)&qword_1EE79B6C0, &qword_1EE79B6B8);
  sub_1A594C5C4();
  v15 = v26;
  v16 = sub_1A594A77C();
  if (v15)
  {

    swift_release();
    return (uint64_t *)swift_release();
  }
  else
  {
    v18 = v16;
    swift_allocObject();
    return sub_1A593F198(v18, v14, v20, v27, v21, v28);
  }
}

unint64_t sub_1A593F15C()
{
  unint64_t result;

  result = qword_1EE7A4778;
  if (!qword_1EE7A4778)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE7A4778);
  }
  return result;
}

uint64_t *sub_1A593F198(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v13;
  _QWORD *v14;
  id v15;

  v7 = v6;
  v13 = *v7;
  v7[2] = (uint64_t)a2;
  v7[3] = a1;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a3;
  v14[4] = a4;
  v14[5] = a5;
  v14[6] = a6;
  swift_retain_n();
  v15 = a2;
  swift_retain();
  swift_retain();
  sub_1A594A7AC();
  swift_release();
  swift_release();
  swift_retain();
  sub_1A594A7A0();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return v7;
}

void sub_1A593F2A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  v2 = sub_1A594A7F4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v18 - v7;
  if (qword_1EE79B8A0 != -1)
    swift_once();
  v9 = sub_1A594A764();
  __swift_project_value_buffer_0(v9, (uint64_t)qword_1EE7A0AA0);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, a1, v2);
  v11 = sub_1A594A74C();
  v12 = sub_1A594C018();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412290;
    v18[0] = v13 + 4;
    v10(v5, (uint64_t)v8, v2);
    sub_1A55E1698(&qword_1EE7A0B78, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF04E8], MEMORY[0x1E0DF04F8]);
    v15 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v16, v5, v2);
    v17 = sub_1A5949D98();

    v18[1] = v17;
    sub_1A594C3CC();
    *v14 = v17;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    _os_log_impl(&dword_1A4F90000, v11, v12, "cancelled: %@", v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1A68);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v14, -1, -1);
    MEMORY[0x1A85B1964](v13, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }

}

uint64_t SyncSession.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_1EE79B8A0 != -1)
    swift_once();
  v2 = sub_1A594A764();
  __swift_project_value_buffer_0(v2, (uint64_t)qword_1EE7A0AA0);
  v3 = sub_1A594A74C();
  v4 = sub_1A594C030();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1A4F90000, v3, v4, "deinit", v5, 2u);
    MEMORY[0x1A85B1964](v5, -1, -1);
  }

  sub_1A594A7D0();
  swift_release();
  return v1;
}

uint64_t SyncSession.__deallocating_deinit()
{
  SyncSession.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A593F620@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, unint64_t, uint64_t (*)(), uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t)@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  int v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  void (*v22)(uint64_t, unint64_t, uint64_t (*)(), uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;

  v20 = a5;
  v21 = a4;
  v22 = a2;
  v23 = a3;
  v8 = sub_1A594A818();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A593628C();
  sub_1A594A80C();
  v13 = v24;
  v12 = v25;
  v14 = v26;
  v15 = v27;
  v16 = v27 >> 6;
  if (v16 == 3)
  {
    result = v21(v24, v25, v26);
LABEL_5:
    *(_QWORD *)(a6 + 32) = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
    return result;
  }
  if (v16 == 2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
    v18 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v19 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v18, v11, v8);
    sub_1A5940600(v13, v12, (uint64_t)sub_1A5940598, v19, v22);
    sub_1A5938FE0(v13, v12, v14, v15);
    result = swift_release();
    goto LABEL_5;
  }
  sub_1A5938FE0(v24, v25, v26, v27);
  result = sub_1A594C9C0();
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SyncSession.activate()()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;

  sub_1A594A7DC();
  if (v0)
  {
    if (qword_1EE79B8A0 != -1)
      swift_once();
    v1 = sub_1A594A764();
    __swift_project_value_buffer_0(v1, (uint64_t)qword_1EE7A0AA0);
    v2 = v0;
    v3 = v0;
    v4 = sub_1A594A74C();
    v5 = sub_1A594C024();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v6 = 138412290;
      v8 = v0;
      v13 = _swift_stdlib_bridgeErrorToNSError();
      sub_1A594C3CC();
      *v7 = v13;

      _os_log_impl(&dword_1A4F90000, v4, v5, "Could not activate XPCSession due to %@.", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1A68);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v7, -1, -1);
      MEMORY[0x1A85B1964](v6, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
  }
  else
  {
    if (qword_1EE79B8A0 != -1)
      swift_once();
    v9 = sub_1A594A764();
    __swift_project_value_buffer_0(v9, (uint64_t)qword_1EE7A0AA0);
    v10 = sub_1A594A74C();
    v11 = sub_1A594C030();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1A4F90000, v10, v11, "Activated XPCSession", v12, 2u);
      MEMORY[0x1A85B1964](v12, -1, -1);
    }

  }
}

Swift::Void __swiftcall SyncSession.cancel(reason:)(Swift::String reason)
{
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  sub_1A594A7D0();
  if (qword_1EE79B8A0 != -1)
    swift_once();
  v1 = sub_1A594A764();
  __swift_project_value_buffer_0(v1, (uint64_t)qword_1EE7A0AA0);
  oslog = sub_1A594A74C();
  v2 = sub_1A594C030();
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1A4F90000, oslog, v2, "Cancelled XPCSession", v3, 2u);
    MEMORY[0x1A85B1964](v3, -1, -1);
  }

}

void SyncSession.start(configurations:_:)(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  _QWORD *v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;

  if (qword_1EE7A0A90 != -1)
    swift_once();
  v6 = off_1EE7A0A88;
  v7 = (os_unfair_lock_s *)((char *)off_1EE7A0A88 + 24);
  swift_retain();
  os_unfair_lock_lock(v7);
  v8 = v6[2];
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    swift_once();
    v11 = sub_1A594A764();
    __swift_project_value_buffer_0(v11, (uint64_t)qword_1EE7A0AA0);
    v12 = a1;
    v13 = a1;
    v14 = sub_1A594A74C();
    v15 = sub_1A594C018();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v16 = 138412290;
      v18 = a1;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      sub_1A594C3CC();
      *v17 = v19;

      _os_log_impl(&dword_1A4F90000, v14, v15, "Unexpected error %@ while sending a start download request.", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1A68);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v17, -1, -1);
      MEMORY[0x1A85B1964](v16, -1, -1);
    }
    else
    {

    }
    a2(4);

  }
  else
  {
    v6[2] = v8 + 1;
    os_unfair_lock_unlock(v7);
    swift_release();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a2;
    *(_QWORD *)(v9 + 24) = a3;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_1A59404C8;
    *(_QWORD *)(v10 + 24) = v9;
    sub_1A5936248();
    sub_1A593628C();
    swift_retain();
    swift_retain();
    sub_1A594A7B8();
    swift_release();
    swift_release();
  }
}

void sub_1A593FEC4(id a1, uint64_t a2, uint64_t a3, __int16 a4, void (*a5)(_QWORD))
{
  unsigned __int8 v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint8_t *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  void (*v27)(_QWORD);
  uint64_t v28;

  v6 = a4;
  if ((a4 & 0x100) != 0)
  {
    v15 = a1;
    if (qword_1EE79B8A0 != -1)
      swift_once();
    v16 = sub_1A594A764();
    __swift_project_value_buffer_0(v16, (uint64_t)qword_1EE7A0AA0);
    v17 = a1;
    v18 = sub_1A594A74C();
    v19 = sub_1A594C018();
    if (os_log_type_enabled(v18, v19))
    {
      v27 = a5;
      v20 = (uint8_t *)swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v20 = 138412290;
      v28 = sub_1A5949D98();
      sub_1A594C3CC();
      *v26 = v28;
      sub_1A593E158(a1, a2, a3, v6, 1);
      _os_log_impl(&dword_1A4F90000, v18, v19, "Start download request failed: %@", v20, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1A68);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v26, -1, -1);
      v21 = v20;
      a5 = v27;
      MEMORY[0x1A85B1964](v21, -1, -1);
    }
    else
    {
      sub_1A593E158(a1, a2, a3, v6, 1);
    }

    a5(4);
    sub_1A593E158(a1, a2, a3, v6, 1);
  }
  else
  {
    if (a4 > 0x3Fu)
    {
      if (qword_1EE79B8A0 != -1)
        swift_once();
      v22 = sub_1A594A764();
      __swift_project_value_buffer_0(v22, (uint64_t)qword_1EE7A0AA0);
      v23 = sub_1A594A74C();
      v24 = sub_1A594C018();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_1A4F90000, v23, v24, "Invalid response for start download request.", v25, 2u);
        MEMORY[0x1A85B1964](v25, -1, -1);
      }

      v12 = 4;
    }
    else
    {
      if (qword_1EE79B8A0 != -1)
        swift_once();
      v8 = sub_1A594A764();
      __swift_project_value_buffer_0(v8, (uint64_t)qword_1EE7A0AA0);
      v9 = sub_1A594A74C();
      v10 = sub_1A594C030();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_1A4F90000, v9, v10, "Received response for start download request.", v11, 2u);
        MEMORY[0x1A85B1964](v11, -1, -1);
      }

      v12 = (uint64_t)a1;
    }
    a5(v12);
  }
}

Swift::Void __swiftcall SyncSession.stop()()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  os_unfair_lock_s *v10;
  uint64_t v11;

  if (qword_1EE7A0A90 != -1)
    swift_once();
  v0 = off_1EE7A0A88;
  v1 = (os_unfair_lock_s *)((char *)off_1EE7A0A88 + 24);
  swift_retain();
  os_unfair_lock_lock(v1);
  v2 = v0[2];
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    swift_once();
    v3 = sub_1A594A764();
    __swift_project_value_buffer_0(v3, (uint64_t)qword_1EE7A0AA0);
    v4 = v1;
    v5 = v1;
    v6 = sub_1A594A74C();
    v7 = sub_1A594C018();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 138412290;
      v10 = v1;
      v11 = _swift_stdlib_bridgeErrorToNSError();
      sub_1A594C3CC();
      *v9 = v11;

      _os_log_impl(&dword_1A4F90000, v6, v7, "Unexpected error %@ while sending a stop download request.", v8, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1A68);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v9, -1, -1);
      MEMORY[0x1A85B1964](v8, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v0[2] = v2 + 1;
    os_unfair_lock_unlock(v1);
    swift_release();
    sub_1A5936248();
    sub_1A594A7C4();
  }
}

uint64_t sub_1A59404A4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A59404C8(void *a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v4;

  sub_1A593FEC4(a1, a2, a3, a4 & 0x1FF, *(void (**)(_QWORD))(v4 + 16));
}

uint64_t type metadata accessor for SyncSession()
{
  return objc_opt_self();
}

uint64_t sub_1A59404FC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5940528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A593F620(a1, *(void (**)(uint64_t, unint64_t, uint64_t (*)(), uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 40), *(_QWORD *)(v2 + 48), a2);
}

uint64_t sub_1A5940538()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A594A818();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A5940598()
{
  sub_1A594A818();
  sub_1A5936248();
  return sub_1A594A800();
}

uint64_t sub_1A5940600(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, unint64_t, uint64_t (*)(), uint64_t))
{
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v17;

  if (qword_1EE79B8A0 != -1)
    swift_once();
  v9 = sub_1A594A764();
  __swift_project_value_buffer_0(v9, (uint64_t)qword_1EE7A0AA0);
  swift_bridgeObjectRetain_n();
  v10 = sub_1A594A74C();
  v11 = sub_1A594C030();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v17 = v13;
    *(_DWORD *)v12 = 136315138;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A593DA7C(a1, a2, &v17);
    sub_1A594C3CC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A4F90000, v10, v11, "Responding to credential request for account %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v13, -1, -1);
    MEMORY[0x1A85B1964](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  swift_retain();
  a5(a1, a2, sub_1A564AEE0, v14);
  return swift_release();
}

BOOL static IndexingStatistics.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a1 == a4 && a2 == a5 && a3 == a6;
}

uint64_t static Mailbox.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(a1, a4))
    return 0;
  if (a2 == a5 && a3 == a6)
    return 1;
  return sub_1A594CD38();
}

uint64_t SearchQuery.debugDescription.getter()
{
  uint64_t v0;

  sub_1A594C924();
  sub_1A594B5F8();
  v0 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MEMORY[0x1A85ADDF4](v0, &type metadata for Mailbox);
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t static IndexingStatistics.empty.getter()
{
  return 0;
}

uint64_t sub_1A5940980()
{
  sub_1A5942688();
  return sub_1A594B91C();
}

uint64_t sub_1A59409DC()
{
  sub_1A5942688();
  return sub_1A594B8EC();
}

uint64_t Mailbox.accountID.getter(uint64_t a1, uint64_t a2)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a2;
}

uint64_t Mailbox.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  sub_1A594CE88();
  if (v3)
  {
    v4 = a2 + 32;
    do
    {
      ++v4;
      sub_1A594CE94();
      --v3;
    }
    while (v3);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5940AD4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x49746E756F636361;
  else
    return 1701667182;
}

uint64_t sub_1A5940B08()
{
  char *v0;

  return sub_1A5940AD4(*v0);
}

uint64_t sub_1A5940B10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A59416D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5940B34()
{
  sub_1A5941694();
  return sub_1A594CFB4();
}

uint64_t sub_1A5940B5C()
{
  sub_1A5941694();
  return sub_1A594CFC0();
}

uint64_t Mailbox.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v14 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1280);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5941694();
  sub_1A594CF3C();
  v15 = a2;
  v17 = 0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796040);
  sub_1A5942778(&qword_1EE7A0EC8, MEMORY[0x1E0DEDE78], MEMORY[0x1E0DEAF10]);
  sub_1A594CC3C();
  if (!v4)
  {
    v15 = a3;
    v16 = v14;
    v17 = 1;
    sub_1A592B9F0();
    sub_1A594CC3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t Mailbox.hashValue.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1A594CE64();
  v2 = *(_QWORD *)(a1 + 16);
  sub_1A594CE88();
  if (v2)
  {
    v3 = a1 + 32;
    do
    {
      ++v3;
      sub_1A594CE94();
      --v2;
    }
    while (v2);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t Mailbox.init(from:)(uint64_t a1)
{
  return sub_1A5934794(a1, (uint64_t (*)(void))sub_1A59417B8);
}

uint64_t sub_1A5940DB0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1A59417B8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A5940DDC(_QWORD *a1)
{
  uint64_t *v1;

  return Mailbox.encode(to:)(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1A5940DF8()
{
  uint64_t *v0;

  return Mailbox.hashValue.getter(*v0);
}

uint64_t sub_1A5940E04(uint64_t a1)
{
  uint64_t *v1;

  return Mailbox.hash(into:)(a1, *v1);
}

uint64_t sub_1A5940E10()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  sub_1A594CE64();
  v2 = *(_QWORD *)(v1 + 16);
  sub_1A594CE88();
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      ++v3;
      sub_1A594CE94();
      --v2;
    }
    while (v2);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t SearchQuery.limit.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SearchQuery.mailboxes.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A5940EBC(char a1)
{
  return *(_QWORD *)&aSuggestilimit[8 * a1];
}

uint64_t sub_1A5940EDC()
{
  char *v0;

  return sub_1A5940EBC(*v0);
}

uint64_t sub_1A5940EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5941A24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5940F08()
{
  sub_1A594199C();
  return sub_1A594CFB4();
}

uint64_t sub_1A5940F30()
{
  sub_1A594199C();
  return sub_1A594CFC0();
}

uint64_t SearchQuery.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v13 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A11E0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A594199C();
  sub_1A594CF3C();
  v15 = a2;
  v14 = 0;
  sub_1A59419E0();
  sub_1A594CC3C();
  if (!v4)
  {
    LOBYTE(v15) = 1;
    sub_1A594CC30();
    v15 = a4;
    v14 = 2;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0E50);
    sub_1A5942710(&qword_1EE7A0E58, (uint64_t (*)(void))sub_1A5937BEC, MEMORY[0x1E0DEAF10]);
    sub_1A594CC3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t SearchQuery.init(from:)(uint64_t a1)
{
  return sub_1A5934794(a1, (uint64_t (*)(void))sub_1A5941B70);
}

id sub_1A594110C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1A5941B70(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A5941138(_QWORD *a1)
{
  uint64_t *v1;

  return SearchQuery.encode(to:)(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1A5941154(uint64_t a1, uint64_t a2)
{
  return _s20IMAPSearchIndexerXPC11SearchQueryV23__derived_struct_equalsySbAC_ACtFZ_0(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16));
}

uint64_t SearchQuery.id.getter(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_uniqueIdentifier);
  v3 = sub_1A594B40C();

  return v3;
}

uint64_t IndexingStatistics.totalMessages.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*IndexingStatistics.totalMessages.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t IndexingStatistics.messagesIndexed.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t IndexingStatistics.messagesIndexed.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*IndexingStatistics.messagesIndexed.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t IndexingStatistics.messagesNotIndexed.getter(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  uint64_t result;

  v2 = __OFSUB__(a1, a2);
  result = a1 - a2;
  if (v2)
    __break(1u);
  return result;
}

uint64_t IndexingStatistics.messagesInLargestAccount.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t IndexingStatistics.messagesInLargestAccount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

double (*IndexingStatistics.messagesInLargestAccount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1A5941238(char a1)
{
  if (!a1)
    return 0x73654D6C61746F74;
  if (a1 == 1)
    return 0x736567617373656DLL;
  return 0xD000000000000018;
}

uint64_t sub_1A59412AC()
{
  char *v0;

  return sub_1A5941238(*v0);
}

uint64_t sub_1A59412B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5941DC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A59412D8()
{
  sub_1A5941D80();
  return sub_1A594CFB4();
}

uint64_t sub_1A5941300()
{
  sub_1A5941D80();
  return sub_1A594CFC0();
}

uint64_t IndexingStatistics.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;

  v10[1] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB650);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5941D80();
  sub_1A594CF3C();
  v13 = 0;
  sub_1A594CC30();
  if (!v3)
  {
    v12 = 1;
    sub_1A594CC30();
    v11 = 2;
    sub_1A594CC30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t IndexingStatistics.init(from:)(uint64_t a1)
{
  return sub_1A5934794(a1, (uint64_t (*)(void))sub_1A5941F34);
}

uint64_t sub_1A5941490@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1A5941F34(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A59414BC(_QWORD *a1)
{
  uint64_t *v1;

  return IndexingStatistics.encode(to:)(a1, *v1, v1[1]);
}

double IndexingStatistics.fractionCompleted.getter(uint64_t a1, uint64_t a2)
{
  if (a1 < 1)
    return 0.0;
  else
    return (double)a2 / (double)a1;
}

uint64_t IndexingStatistics.fractionCompletedAsInt.getter(uint64_t result, uint64_t a2)
{
  double v2;
  double v3;

  if (result < 1)
    v2 = 0.0;
  else
    v2 = (double)a2 / (double)result * 100.0;
  v3 = round(v2);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 < 9.22337204e18)
    return (uint64_t)v3;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1A594156C()
{
  return SearchQuery.debugDescription.getter();
}

uint64_t _s20IMAPSearchIndexerXPC11SearchQueryV23__derived_struct_equalsySbAC_ACtFZ_0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;

  v11 = objc_msgSend(a1, sel_uniqueIdentifier);
  v12 = sub_1A594B40C();
  v14 = v13;

  v15 = objc_msgSend(a4, sel_uniqueIdentifier);
  v16 = sub_1A594B40C();
  v18 = v17;

  if (v12 == v16 && v14 == v18)
  {
    swift_bridgeObjectRelease_n();
    if (a2 == a5)
      return sub_1A5932A28(a3, a6);
  }
  else
  {
    v20 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0 && a2 == a5)
      return sub_1A5932A28(a3, a6);
  }
  return 0;
}

unint64_t sub_1A5941694()
{
  unint64_t result;

  result = qword_1EE7A0AB8;
  if (!qword_1EE7A0AB8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E59A8, &type metadata for Mailbox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0AB8);
  }
  return result;
}

uint64_t sub_1A59416D8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A59417B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB690);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1_0(a1, v7);
  sub_1A5941694();
  sub_1A594CF18();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796040);
    v10 = 0;
    sub_1A5942778(&qword_1EE7AB698, MEMORY[0x1E0DEDE98], MEMORY[0x1E0DEAF40]);
    sub_1A594CB88();
    v7 = v9[1];
    v10 = 1;
    sub_1A592CE54();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594CB88();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1A594199C()
{
  unint64_t result;

  result = qword_1EE7A0780;
  if (!qword_1EE7A0780)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E5958, &type metadata for SearchQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0780);
  }
  return result;
}

unint64_t sub_1A59419E0()
{
  unint64_t result;

  result = qword_1EE7A0700;
  if (!qword_1EE7A0700)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Suggestion, &type metadata for Suggestion);
    atomic_store(result, (unint64_t *)&qword_1EE7A0700);
  }
  return result;
}

uint64_t sub_1A5941A24(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6974736567677573 && a2 == 0xEA00000000006E6FLL;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65786F626C69616DLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

id sub_1A5941B70(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v9;
  uint64_t v10;
  void *v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7AB678);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (id)a1[3];
  __swift_project_boxed_opaque_existential_1_0(a1, (uint64_t)v7);
  sub_1A594199C();
  sub_1A594CF18();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    HIBYTE(v10) = 0;
    sub_1A59426CC();
    sub_1A594CB88();
    v9 = v11;
    LOBYTE(v11) = 1;
    v7 = v9;
    sub_1A594CB7C();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0E50);
    HIBYTE(v10) = 2;
    sub_1A5942710(&qword_1EE7AB688, (uint64_t (*)(void))sub_1A593B51C, MEMORY[0x1E0DEAF40]);
    sub_1A594CB88();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();

  }
  return v7;
}

unint64_t sub_1A5941D80()
{
  unint64_t result;

  result = qword_1EE7A0980;
  if (!qword_1EE7A0980)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E5908, &type metadata for IndexingStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0980);
  }
  return result;
}

uint64_t sub_1A5941DC4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x73654D6C61746F74 && a2 == 0xED00007365676173;
  if (v3 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736567617373656DLL && a2 == 0xEF64657865646E49 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A5A152C0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A5941F34(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v8[16];

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1170);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5941D80();
  sub_1A594CF18();
  v8[15] = 0;
  v6 = sub_1A594CB7C();
  v8[14] = 1;
  sub_1A594CB7C();
  v8[13] = 2;
  sub_1A594CB7C();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

unint64_t sub_1A59420B0()
{
  unint64_t result;

  result = qword_1EE7A0AE0;
  if (!qword_1EE7A0AE0)
  {
    result = MEMORY[0x1A85B1874]("emS?D#\n", &type metadata for Mailbox);
    atomic_store(result, (unint64_t *)&qword_1EE7A0AE0);
  }
  return result;
}

__n128 __swift_memcpy24_8_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for Mailbox()
{
  return &type metadata for Mailbox;
}

uint64_t destroy for SearchQuery(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *_s20IMAPSearchIndexerXPC11SearchQueryVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for SearchQuery(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SearchQuery(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SearchQuery()
{
  return &type metadata for SearchQuery;
}

ValueMetadata *type metadata accessor for IndexingStatistics()
{
  return &type metadata for IndexingStatistics;
}

ValueMetadata *type metadata accessor for IndexingStatistics.CodingKeys()
{
  return &type metadata for IndexingStatistics.CodingKeys;
}

uint64_t _s20IMAPSearchIndexerXPC18IndexingStatisticsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A59422B4 + 4 * byte_1A59E53D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A59422E8 + 4 * asc_1A59E53D0[v4]))();
}

uint64_t sub_1A59422E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A59422F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A59422F8);
  return result;
}

uint64_t sub_1A5942304(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A594230CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A5942310(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5942318(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchQuery.CodingKeys()
{
  return &type metadata for SearchQuery.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Mailbox.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5942380 + 4 * byte_1A59E53DF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A59423B4 + 4 * byte_1A59E53DA[v4]))();
}

uint64_t sub_1A59423B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A59423BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A59423C4);
  return result;
}

uint64_t sub_1A59423D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A59423D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A59423DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A59423E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Mailbox.CodingKeys()
{
  return &type metadata for Mailbox.CodingKeys;
}

unint64_t sub_1A5942404()
{
  unint64_t result;

  result = qword_1EE7AB658;
  if (!qword_1EE7AB658)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E5770, &type metadata for Mailbox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB658);
  }
  return result;
}

unint64_t sub_1A594244C()
{
  unint64_t result;

  result = qword_1EE7AB660;
  if (!qword_1EE7AB660)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E5828, &type metadata for SearchQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB660);
  }
  return result;
}

unint64_t sub_1A5942494()
{
  unint64_t result;

  result = qword_1EE7AB668;
  if (!qword_1EE7AB668)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E58E0, &type metadata for IndexingStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7AB668);
  }
  return result;
}

unint64_t sub_1A59424DC()
{
  unint64_t result;

  result = qword_1EE7A0990;
  if (!qword_1EE7A0990)
  {
    result = MEMORY[0x1A85B1874]("QjS?4 \n", &type metadata for IndexingStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0990);
  }
  return result;
}

unint64_t sub_1A5942524()
{
  unint64_t result;

  result = qword_1EE7A0988;
  if (!qword_1EE7A0988)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E5878, &type metadata for IndexingStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0988);
  }
  return result;
}

unint64_t sub_1A594256C()
{
  unint64_t result;

  result = qword_1EE7A0790;
  if (!qword_1EE7A0790)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E5798, &type metadata for SearchQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0790);
  }
  return result;
}

unint64_t sub_1A59425B4()
{
  unint64_t result;

  result = qword_1EE7A0788;
  if (!qword_1EE7A0788)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E57C0, &type metadata for SearchQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0788);
  }
  return result;
}

unint64_t sub_1A59425FC()
{
  unint64_t result;

  result = qword_1EE7A0AC8;
  if (!qword_1EE7A0AC8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E56E0, &type metadata for Mailbox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0AC8);
  }
  return result;
}

unint64_t sub_1A5942644()
{
  unint64_t result;

  result = qword_1EE7A0AC0;
  if (!qword_1EE7A0AC0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59E5708, &type metadata for Mailbox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A0AC0);
  }
  return result;
}

unint64_t sub_1A5942688()
{
  unint64_t result;
  _DWORD *vars0;

  result = qword_1EE7AB670;
  if (!qword_1EE7AB670)
  {
    result = MEMORY[0x1A85B1874]("%nS?($\n", vars0);
    atomic_store(result, (unint64_t *)&qword_1EE7AB670);
  }
  return result;
}

unint64_t sub_1A59426CC()
{
  unint64_t result;

  result = qword_1EE7AB680;
  if (!qword_1EE7AB680)
  {
    result = MEMORY[0x1A85B1874]("ynS?4%\n", &type metadata for Suggestion);
    atomic_store(result, (unint64_t *)&qword_1EE7AB680);
  }
  return result;
}

uint64_t sub_1A5942710(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7A0E50);
    v8 = a2();
    result = MEMORY[0x1A85B1874](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A5942778(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE796040);
    v8 = a2;
    result = MEMORY[0x1A85B1874](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t compatibilityInitializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(1);
}

uint64_t __isPlatformVersionAtLeast(uint64_t a1, int a2, int a3, int a4)
{
  BOOL v8;

  if (qword_1EE7F9178 == -1)
  {
    if (qword_1EE7F9180)
      return _availability_version_check();
  }
  else
  {
    dispatch_once_f(&qword_1EE7F9178, 0, (dispatch_function_t)initializeAvailabilityCheck);
    if (qword_1EE7F9180)
      return _availability_version_check();
  }
  if (qword_1EE7F9170 == -1)
  {
    v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_1EE7F9170, 0, (dispatch_function_t)compatibilityInitializeAvailabilityCheck);
    v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2)
      return 1;
  }
  if (v8)
    return 0;
  if (dword_1EE7F9164 > a3)
    return 1;
  return dword_1EE7F9164 >= a3 && dword_1EE7F9168 >= a4;
}

uint64_t initializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(0);
}

uint64_t _initializeAvailabilityCheck(uint64_t result)
{
  uint64_t (*v1)(void);
  BOOL v2;
  unsigned __int8 *v4;
  uint64_t (*v5)(_QWORD);
  unint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t, _QWORD, _QWORD);
  uint64_t (*v8)(_QWORD, const char *, uint64_t, unsigned __int8 *);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(void);
  FILE *v12;
  FILE *v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  FILE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  FILE *v27;
  unsigned int (*v28)(uint64_t, char *, uint64_t, uint64_t);
  char v29[32];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v1 = (uint64_t (*)(void))qword_1EE7F9180;
  if (qword_1EE7F9180)
    v2 = (_DWORD)result == 0;
  else
    v2 = 0;
  if (!v2)
  {
    if (MEMORY[0x1E0C80CC0])
    {
      qword_1EE7F9180 = (uint64_t)MEMORY[0x1E0C80CC0];
      v1 = MEMORY[0x1E0C80CC0];
    }
    if (!v1 || (_DWORD)result != 0)
    {
      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        v4 = *(unsigned __int8 **)result;
        result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          v5 = (uint64_t (*)(_QWORD))result;
          v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            v7 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))result;
            result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              v8 = (uint64_t (*)(_QWORD, const char *, uint64_t, unsigned __int8 *))result;
              result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  v10 = (uint64_t (*)(uint64_t))result;
                  result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    v11 = (uint64_t (*)(void))result;
                    result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        v12 = (FILE *)result;
                        result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          v13 = (FILE *)result;
                          v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          v14 = MEMORY[0x1A85B0A40](v13);
                          if (v14 < 0)
                          {
                            v16 = 0;
                          }
                          else
                          {
                            v15 = v14;
                            rewind(v13);
                            v16 = malloc(v15);
                            if (v16)
                            {
                              v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                v17 = v5(0);
                                if (v17)
                                {
                                  v18 = v17;
                                  v19 = v13;
                                  if (v6)
                                    v20 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))v6)(0, v17, 0, 0, 0);
                                  else
                                    v20 = v7(0, v17, 0, 0);
                                  v21 = v20;
                                  if (v20)
                                  {
                                    v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      v23 = v22;
                                      v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984))
                                            sscanf(v29, "%d.%d.%d", &_MergedGlobals, &dword_1EE7F9164, &dword_1EE7F9168);
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  v19 = v13;
                                }
                                v16 = v26;
                              }
                              else
                              {
                                v16 = v26;
                                v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void copyAccountsForEmailAddress_cold_1(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138543362;
  *(_QWORD *)(buf + 4) = a1;
  _os_log_error_impl(&dword_1A4F90000, log, OS_LOG_TYPE_ERROR, "#ACE-DB error retrieving configuration: %{public}@", buf, 0xCu);

}

void MFWalkUpDAErrorChain_cold_1()
{
  __assert_rtn("MFWalkUpDAErrorChain", "DAMailAccount.m", 90, "error && \"Error ref passed in to here must not be NULL.\"");
}

void clearMailboxUIDCache_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_7(&dword_1A4F90000, v0, v1, "Clearing mailbox UID from account cache.", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_9();
}

void _configureMailboxCache_cold_1(void *a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)a2 = 138543362;
  *(_QWORD *)(a2 + 4) = a1;
  OUTLINED_FUNCTION_0_1(&dword_1A4F90000, a3, (uint64_t)a3, "Not reading cached info for %{public}@", (uint8_t *)a2);

  OUTLINED_FUNCTION_1();
}

void _MFFlagsBySettingValueForKey_cold_1(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl(&dword_1A4F90000, a2, OS_LOG_TYPE_DEBUG, "Unexpected flag key \"%@\"", (uint8_t *)&v2, 0xCu);
}

void _createOutgoingMessageFromTopLevelMimePart_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_3(&dword_1A4F90000, v0, v1, "Cancelled message encryption", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_9();
}

void _createOutgoingMessageFromTopLevelMimePart_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_3(&dword_1A4F90000, v0, v1, "Failed to encrypt message", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_9();
}

void _createOutgoingMessageFromTopLevelMimePart_cold_3()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_3(&dword_1A4F90000, v0, v1, "Cancelled message signing", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_9();
}

void _createOutgoingMessageFromTopLevelMimePart_cold_4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_3(&dword_1A4F90000, v0, v1, "Failed to sign message", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_9();
}

void _createOutgoingMessageFromTopLevelMimePart_cold_5()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_3(&dword_1A4F90000, v0, v1, "Failed to wrap message as message/rfc822", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_9();
}

void _emailEqual_cold_1()
{
  __assert_rtn("_emailEqual", "MFEmailSet.m", 98, "val1 && [(id)val1 isKindOfClass:[_MFEmailSetEmail class]] && \"we only accept emails here\"");
}

void _emailEqual_cold_2()
{
  __assert_rtn("_emailEqual", "MFEmailSet.m", 99, "val2 && [(id)val2 isKindOfClass:[_MFEmailSetEmail class]] && \"we only accept emails here\"");
}

void fetchArgumentsForCriterion_cold_1(NSObject *a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (os_log_type_enabled(a1, OS_LOG_TYPE_DEFAULT))
  {
    v4 = 138412290;
    v5 = a2;
    _os_log_impl(&dword_1A4F90000, a1, OS_LOG_TYPE_DEFAULT, "#Warning need to handle criterion for IMAP search: %@", (uint8_t *)&v4, 0xCu);
  }
}

void rawAddress_cold_1(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_0(&dword_1A4F90000, a2, a3, "wrong number of arguments (%d) to rawAddress", a5, a6, a7, a8, 0);
}

void displayName_cold_1(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_0(&dword_1A4F90000, a2, a3, "wrong number of arguments (%d) to displayName", a5, a6, a7, a8, 0);
}

void _resetLocalAccountMboxCache_cold_1(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = 138543362;
  v4 = a1;
  OUTLINED_FUNCTION_0_1(&dword_1A4F90000, a2, a3, "Error removing local account mboxCache: %{public}@", (uint8_t *)&v3);
  OUTLINED_FUNCTION_5();
}

uint64_t sub_1A5949A38()
{
  return MEMORY[0x1E0CADE70]();
}

uint64_t sub_1A5949A44()
{
  return MEMORY[0x1E0CADE90]();
}

uint64_t sub_1A5949A50()
{
  return MEMORY[0x1E0CADF88]();
}

uint64_t sub_1A5949A5C()
{
  return MEMORY[0x1E0CADFC0]();
}

uint64_t sub_1A5949A68()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1A5949A74()
{
  return MEMORY[0x1E0CAE098]();
}

uint64_t sub_1A5949A80()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1A5949A8C()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1A5949A98()
{
  return MEMORY[0x1E0CAE0C8]();
}

uint64_t sub_1A5949AA4()
{
  return MEMORY[0x1E0CAE0D8]();
}

uint64_t sub_1A5949AB0()
{
  return MEMORY[0x1E0CAE0E0]();
}

uint64_t sub_1A5949ABC()
{
  return MEMORY[0x1E0CAE108]();
}

uint64_t sub_1A5949AC8()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1A5949AD4()
{
  return MEMORY[0x1E0CAE1C8]();
}

uint64_t sub_1A5949AE0()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1A5949AEC()
{
  return MEMORY[0x1E0CAE370]();
}

uint64_t sub_1A5949AF8()
{
  return MEMORY[0x1E0CAE390]();
}

uint64_t sub_1A5949B04()
{
  return MEMORY[0x1E0CAE3A0]();
}

uint64_t sub_1A5949B10()
{
  return MEMORY[0x1E0CAE3C8]();
}

uint64_t sub_1A5949B1C()
{
  return MEMORY[0x1E0CAE3E8]();
}

uint64_t sub_1A5949B28()
{
  return MEMORY[0x1E0CAE430]();
}

uint64_t sub_1A5949B34()
{
  return MEMORY[0x1E0CAE490]();
}

uint64_t sub_1A5949B40()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1A5949B4C()
{
  return MEMORY[0x1E0CAE530]();
}

uint64_t sub_1A5949B58()
{
  return MEMORY[0x1E0CAE610]();
}

uint64_t sub_1A5949B64()
{
  return MEMORY[0x1E0CAE618]();
}

uint64_t sub_1A5949B70()
{
  return MEMORY[0x1E0CAE620]();
}

uint64_t sub_1A5949B7C()
{
  return MEMORY[0x1E0CAE648]();
}

uint64_t sub_1A5949B88()
{
  return MEMORY[0x1E0CAE7D0]();
}

uint64_t sub_1A5949B94()
{
  return MEMORY[0x1E0CAE7F0]();
}

uint64_t sub_1A5949BA0()
{
  return MEMORY[0x1E0CAE808]();
}

uint64_t sub_1A5949BAC()
{
  return MEMORY[0x1E0CAE848]();
}

uint64_t sub_1A5949BB8()
{
  return MEMORY[0x1E0CAE878]();
}

uint64_t sub_1A5949BC4()
{
  return MEMORY[0x1E0CAE890]();
}

uint64_t sub_1A5949BD0()
{
  return MEMORY[0x1E0CAE8A8]();
}

uint64_t sub_1A5949BDC()
{
  return MEMORY[0x1E0CAE8B8]();
}

uint64_t sub_1A5949BE8()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1A5949BF4()
{
  return MEMORY[0x1E0CAE8D8]();
}

uint64_t sub_1A5949C00()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1A5949C0C()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1A5949C18()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_1A5949C24()
{
  return MEMORY[0x1E0CAE9C8]();
}

uint64_t sub_1A5949C30()
{
  return MEMORY[0x1E0CAE9F8]();
}

uint64_t sub_1A5949C3C()
{
  return MEMORY[0x1E0CAEA10]();
}

uint64_t sub_1A5949C48()
{
  return MEMORY[0x1E0CAEA20]();
}

uint64_t sub_1A5949C54()
{
  return MEMORY[0x1E0CAEA38]();
}

uint64_t sub_1A5949C60()
{
  return MEMORY[0x1E0CAEA48]();
}

uint64_t sub_1A5949C6C()
{
  return MEMORY[0x1E0CAEA68]();
}

uint64_t sub_1A5949C78()
{
  return MEMORY[0x1E0CAEA80]();
}

uint64_t sub_1A5949C84()
{
  return MEMORY[0x1E0CAEAA0]();
}

uint64_t sub_1A5949C90()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_1A5949C9C()
{
  return MEMORY[0x1E0CAEE50]();
}

uint64_t sub_1A5949CA8()
{
  return MEMORY[0x1E0CAEE88]();
}

uint64_t sub_1A5949CB4()
{
  return MEMORY[0x1E0CAEE98]();
}

uint64_t sub_1A5949CC0()
{
  return MEMORY[0x1E0CAF328]();
}

uint64_t sub_1A5949CCC()
{
  return MEMORY[0x1E0CAF3A0]();
}

uint64_t sub_1A5949CD8()
{
  return MEMORY[0x1E0CAF3B0]();
}

uint64_t sub_1A5949CE4()
{
  return MEMORY[0x1E0CAF3B8]();
}

uint64_t sub_1A5949CF0()
{
  return MEMORY[0x1E0CAF3D8]();
}

uint64_t sub_1A5949CFC()
{
  return MEMORY[0x1E0CAF5C8]();
}

uint64_t sub_1A5949D08()
{
  return MEMORY[0x1E0CAF5F0]();
}

uint64_t sub_1A5949D14()
{
  return MEMORY[0x1E0CAF608]();
}

uint64_t sub_1A5949D20()
{
  return MEMORY[0x1E0CAF628]();
}

uint64_t sub_1A5949D2C()
{
  return MEMORY[0x1E0CAF638]();
}

uint64_t sub_1A5949D38()
{
  return MEMORY[0x1E0CAF658]();
}

uint64_t sub_1A5949D44()
{
  return MEMORY[0x1E0CAF668]();
}

uint64_t sub_1A5949D50()
{
  return MEMORY[0x1E0CAF670]();
}

uint64_t sub_1A5949D5C()
{
  return MEMORY[0x1E0CAF6A0]();
}

uint64_t sub_1A5949D68()
{
  return MEMORY[0x1E0CAF6A8]();
}

uint64_t sub_1A5949D74()
{
  return MEMORY[0x1E0CAF6B0]();
}

uint64_t sub_1A5949D80()
{
  return MEMORY[0x1E0CAF6C0]();
}

uint64_t sub_1A5949D8C()
{
  return MEMORY[0x1E0CAF940]();
}

uint64_t sub_1A5949D98()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1A5949DA4()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1A5949DB0()
{
  return MEMORY[0x1E0CAFA88]();
}

uint64_t sub_1A5949DBC()
{
  return MEMORY[0x1E0CAFAE0]();
}

uint64_t sub_1A5949DC8()
{
  return MEMORY[0x1E0CAFCA0]();
}

uint64_t sub_1A5949DD4()
{
  return MEMORY[0x1E0CAFCC0]();
}

uint64_t sub_1A5949DE0()
{
  return MEMORY[0x1E0CAFD20]();
}

uint64_t sub_1A5949DEC()
{
  return MEMORY[0x1E0CAFD90]();
}

uint64_t sub_1A5949DF8()
{
  return MEMORY[0x1E0CAFD98]();
}

uint64_t sub_1A5949E04()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1A5949E10()
{
  return MEMORY[0x1E0CAFDB0]();
}

uint64_t sub_1A5949E1C()
{
  return MEMORY[0x1E0CAFDC0]();
}

uint64_t sub_1A5949E28()
{
  return MEMORY[0x1E0CAFDD8]();
}

uint64_t sub_1A5949E34()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1A5949E40()
{
  return MEMORY[0x1E0CAFE78]();
}

uint64_t sub_1A5949E4C()
{
  return MEMORY[0x1E0CAFE90]();
}

uint64_t sub_1A5949E58()
{
  return MEMORY[0x1E0CAFEA0]();
}

uint64_t sub_1A5949E64()
{
  return MEMORY[0x1E0CAFEA8]();
}

uint64_t sub_1A5949E70()
{
  return MEMORY[0x1E0CAFEB8]();
}

uint64_t sub_1A5949E7C()
{
  return MEMORY[0x1E0CAFED8]();
}

uint64_t sub_1A5949E88()
{
  return MEMORY[0x1E0CAFEE0]();
}

uint64_t sub_1A5949E94()
{
  return MEMORY[0x1E0CAFEE8]();
}

uint64_t sub_1A5949EA0()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1A5949EAC()
{
  return MEMORY[0x1E0CAFF20]();
}

uint64_t sub_1A5949EB8()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_1A5949EC4()
{
  return MEMORY[0x1E0CAFF80]();
}

uint64_t sub_1A5949ED0()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1A5949EDC()
{
  return MEMORY[0x1E0CAFF98]();
}

uint64_t sub_1A5949EE8()
{
  return MEMORY[0x1E0CAFFD0]();
}

uint64_t sub_1A5949EF4()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1A5949F00()
{
  return MEMORY[0x1E0CB0078]();
}

uint64_t sub_1A5949F0C()
{
  return MEMORY[0x1E0CB0088]();
}

uint64_t sub_1A5949F18()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1A5949F24()
{
  return MEMORY[0x1E0CB00F0]();
}

uint64_t sub_1A5949F30()
{
  return MEMORY[0x1E0CB0128]();
}

uint64_t sub_1A5949F3C()
{
  return MEMORY[0x1E0CB0140]();
}

uint64_t sub_1A5949F48()
{
  return MEMORY[0x1E0CB0160]();
}

uint64_t sub_1A5949F54()
{
  return MEMORY[0x1E0CB0180]();
}

uint64_t sub_1A5949F60()
{
  return MEMORY[0x1E0CB0188]();
}

uint64_t sub_1A5949F6C()
{
  return MEMORY[0x1E0CB01D0]();
}

uint64_t sub_1A5949F78()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1A5949F84()
{
  return MEMORY[0x1E0CB0218]();
}

uint64_t sub_1A5949F90()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1A5949F9C()
{
  return MEMORY[0x1E0CB0240]();
}

uint64_t sub_1A5949FA8()
{
  return MEMORY[0x1E0CB0260]();
}

uint64_t sub_1A5949FB4()
{
  return MEMORY[0x1E0CB0268]();
}

uint64_t sub_1A5949FC0()
{
  return MEMORY[0x1E0CB0270]();
}

uint64_t sub_1A5949FCC()
{
  return MEMORY[0x1E0CB0280]();
}

uint64_t sub_1A5949FD8()
{
  return MEMORY[0x1E0CB0288]();
}

uint64_t sub_1A5949FE4()
{
  return MEMORY[0x1E0CB0298]();
}

uint64_t sub_1A5949FF0()
{
  return MEMORY[0x1E0CB02A8]();
}

uint64_t sub_1A5949FFC()
{
  return MEMORY[0x1E0CB02C0]();
}

uint64_t sub_1A594A008()
{
  return MEMORY[0x1E0CB02E8]();
}

uint64_t sub_1A594A014()
{
  return MEMORY[0x1E0CB0320]();
}

uint64_t sub_1A594A020()
{
  return MEMORY[0x1E0CB0398]();
}

uint64_t sub_1A594A02C()
{
  return MEMORY[0x1E0CB03A0]();
}

uint64_t sub_1A594A038()
{
  return MEMORY[0x1E0CB03B8]();
}

uint64_t sub_1A594A044()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t sub_1A594A050()
{
  return MEMORY[0x1E0CB0588]();
}

uint64_t sub_1A594A05C()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1A594A068()
{
  return MEMORY[0x1E0CB0680]();
}

uint64_t sub_1A594A074()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1A594A080()
{
  return MEMORY[0x1E0CB06D0]();
}

uint64_t sub_1A594A08C()
{
  return MEMORY[0x1E0CB0700]();
}

uint64_t sub_1A594A098()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t sub_1A594A0A4()
{
  return MEMORY[0x1E0CB07B0]();
}

uint64_t sub_1A594A0B0()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1A594A0BC()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1A594A0C8()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1A594A0D4()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1A594A0E0()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1A594A0EC()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1A594A0F8()
{
  return MEMORY[0x1E0CB0900]();
}

uint64_t sub_1A594A104()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1A594A110()
{
  return MEMORY[0x1E0CB0970]();
}

uint64_t sub_1A594A11C()
{
  return MEMORY[0x1E0CB0978]();
}

uint64_t sub_1A594A128()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1A594A134()
{
  return MEMORY[0x1E0CB0A80]();
}

uint64_t sub_1A594A140()
{
  return MEMORY[0x1E0CB0BE0]();
}

uint64_t sub_1A594A14C()
{
  return MEMORY[0x1E0CB0BF8]();
}

uint64_t sub_1A594A158()
{
  return MEMORY[0x1E0CB0C30]();
}

uint64_t sub_1A594A164()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_1A594A170()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1A594A17C()
{
  return MEMORY[0x1E0CB0F00]();
}

uint64_t sub_1A594A188()
{
  return MEMORY[0x1E0CB0F20]();
}

uint64_t sub_1A594A194()
{
  return MEMORY[0x1E0CB0FB8]();
}

uint64_t sub_1A594A1A0()
{
  return MEMORY[0x1E0CB1060]();
}

uint64_t sub_1A594A1AC()
{
  return MEMORY[0x1E0CB10E0]();
}

uint64_t sub_1A594A1B8()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t sub_1A594A1C4()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_1A594A1D0()
{
  return MEMORY[0x1E0CB1268]();
}

uint64_t sub_1A594A1DC()
{
  return MEMORY[0x1E0CB1280]();
}

uint64_t sub_1A594A1E8()
{
  return MEMORY[0x1E0CB12A8]();
}

uint64_t sub_1A594A1F4()
{
  return MEMORY[0x1E0CB12B8]();
}

uint64_t sub_1A594A200()
{
  return MEMORY[0x1E0CB12C0]();
}

uint64_t sub_1A594A20C()
{
  return MEMORY[0x1E0CB12D0]();
}

uint64_t sub_1A594A218()
{
  return MEMORY[0x1E0CB12F8]();
}

uint64_t sub_1A594A224()
{
  return MEMORY[0x1E0CB1300]();
}

uint64_t sub_1A594A230()
{
  return MEMORY[0x1E0CB1308]();
}

uint64_t sub_1A594A23C()
{
  return MEMORY[0x1E0CB1340]();
}

uint64_t sub_1A594A248()
{
  return MEMORY[0x1E0CB1358]();
}

uint64_t sub_1A594A254()
{
  return MEMORY[0x1E0CB1388]();
}

uint64_t sub_1A594A260()
{
  return MEMORY[0x1E0CB1398]();
}

uint64_t sub_1A594A26C()
{
  return MEMORY[0x1E0CB13A0]();
}

uint64_t sub_1A594A278()
{
  return MEMORY[0x1E0CB1420]();
}

uint64_t sub_1A594A284()
{
  return MEMORY[0x1E0CB1430]();
}

uint64_t sub_1A594A290()
{
  return MEMORY[0x1E0CB1438]();
}

uint64_t sub_1A594A29C()
{
  return MEMORY[0x1E0CB1440]();
}

uint64_t sub_1A594A2A8()
{
  return MEMORY[0x1E0CB1470]();
}

uint64_t sub_1A594A2B4()
{
  return MEMORY[0x1E0DEFC78]();
}

uint64_t sub_1A594A2C0()
{
  return MEMORY[0x1E0DEFC80]();
}

uint64_t sub_1A594A2CC()
{
  return MEMORY[0x1E0DEFCD0]();
}

uint64_t sub_1A594A2D8()
{
  return MEMORY[0x1E0D1E7F8]();
}

uint64_t sub_1A594A2E4()
{
  return MEMORY[0x1E0D1E800]();
}

uint64_t sub_1A594A2F0()
{
  return MEMORY[0x1E0D1E820]();
}

uint64_t sub_1A594A2FC()
{
  return MEMORY[0x1E0D1E828]();
}

uint64_t sub_1A594A308()
{
  return MEMORY[0x1E0D1E830]();
}

uint64_t sub_1A594A314()
{
  return MEMORY[0x1E0D1E838]();
}

uint64_t sub_1A594A320()
{
  return MEMORY[0x1E0D1E840]();
}

uint64_t sub_1A594A32C()
{
  return MEMORY[0x1E0D1E848]();
}

uint64_t sub_1A594A338()
{
  return MEMORY[0x1E0D1E850]();
}

uint64_t sub_1A594A344()
{
  return MEMORY[0x1E0D1E860]();
}

uint64_t sub_1A594A350()
{
  return MEMORY[0x1E0D1E868]();
}

uint64_t sub_1A594A35C()
{
  return MEMORY[0x1E0D1E870]();
}

uint64_t sub_1A594A368()
{
  return MEMORY[0x1E0D1E878]();
}

uint64_t sub_1A594A374()
{
  return MEMORY[0x1E0D1E880]();
}

uint64_t sub_1A594A380()
{
  return MEMORY[0x1E0D46AE0]();
}

uint64_t sub_1A594A38C()
{
  return MEMORY[0x1E0D46AF0]();
}

uint64_t sub_1A594A398()
{
  return MEMORY[0x1E0D20EF8]();
}

uint64_t sub_1A594A3A4()
{
  return MEMORY[0x1E0D12DA0]();
}

uint64_t sub_1A594A3B0()
{
  return MEMORY[0x1E0D12DA8]();
}

uint64_t sub_1A594A3BC()
{
  return MEMORY[0x1E0D12DB0]();
}

uint64_t sub_1A594A3C8()
{
  return MEMORY[0x1E0D12DC0]();
}

uint64_t sub_1A594A3D4()
{
  return MEMORY[0x1E0D12E30]();
}

uint64_t sub_1A594A3E0()
{
  return MEMORY[0x1E0D12E38]();
}

uint64_t sub_1A594A3EC()
{
  return MEMORY[0x1E0D12E40]();
}

uint64_t sub_1A594A3F8()
{
  return MEMORY[0x1E0D12E48]();
}

uint64_t sub_1A594A404()
{
  return MEMORY[0x1E0D12E50]();
}

uint64_t sub_1A594A410()
{
  return MEMORY[0x1E0D12E58]();
}

uint64_t sub_1A594A41C()
{
  return MEMORY[0x1E0D12E60]();
}

uint64_t sub_1A594A428()
{
  return MEMORY[0x1E0D12E68]();
}

uint64_t sub_1A594A434()
{
  return MEMORY[0x1E0D12E70]();
}

uint64_t sub_1A594A440()
{
  return MEMORY[0x1E0D12E78]();
}

uint64_t sub_1A594A44C()
{
  return MEMORY[0x1E0D12E80]();
}

uint64_t sub_1A594A458()
{
  return MEMORY[0x1E0D12FB0]();
}

uint64_t sub_1A594A464()
{
  return MEMORY[0x1E0D12FE8]();
}

uint64_t sub_1A594A470()
{
  return MEMORY[0x1E0CA9B98]();
}

uint64_t sub_1A594A47C()
{
  return MEMORY[0x1E0CA9BA8]();
}

uint64_t sub_1A594A488()
{
  return MEMORY[0x1E0DF0180]();
}

uint64_t sub_1A594A494()
{
  return MEMORY[0x1E0DF0190]();
}

uint64_t sub_1A594A4A0()
{
  return MEMORY[0x1E0DF01B8]();
}

uint64_t sub_1A594A4AC()
{
  return MEMORY[0x1E0DF01E0]();
}

uint64_t sub_1A594A4B8()
{
  return MEMORY[0x1E0DF01E8]();
}

uint64_t sub_1A594A4C4()
{
  return MEMORY[0x1E0DF01F0]();
}

uint64_t sub_1A594A4D0()
{
  return MEMORY[0x1E0DF01F8]();
}

uint64_t sub_1A594A4DC()
{
  return MEMORY[0x1E0DF0210]();
}

uint64_t sub_1A594A4E8()
{
  return MEMORY[0x1E0DF0220]();
}

uint64_t sub_1A594A4F4()
{
  return MEMORY[0x1E0DF0230]();
}

uint64_t sub_1A594A500()
{
  return MEMORY[0x1E0DF0238]();
}

uint64_t sub_1A594A50C()
{
  return MEMORY[0x1E0DF0240]();
}

uint64_t sub_1A594A518()
{
  return MEMORY[0x1E0DF0250]();
}

uint64_t sub_1A594A524()
{
  return MEMORY[0x1E0DF0260]();
}

uint64_t sub_1A594A530()
{
  return MEMORY[0x1E0DF0268]();
}

uint64_t sub_1A594A53C()
{
  return MEMORY[0x1E0DF0270]();
}

uint64_t sub_1A594A548()
{
  return MEMORY[0x1E0DF0288]();
}

uint64_t sub_1A594A554()
{
  return MEMORY[0x1E0DF02D8]();
}

uint64_t sub_1A594A560()
{
  return MEMORY[0x1E0DF02F0]();
}

uint64_t sub_1A594A56C()
{
  return MEMORY[0x1E0DF0300]();
}

uint64_t sub_1A594A578()
{
  return MEMORY[0x1E0DF0308]();
}

uint64_t sub_1A594A584()
{
  return MEMORY[0x1E0DF0318]();
}

uint64_t sub_1A594A590()
{
  return MEMORY[0x1E0DF0320]();
}

uint64_t sub_1A594A59C()
{
  return MEMORY[0x1E0DF0328]();
}

uint64_t sub_1A594A5A8()
{
  return MEMORY[0x1E0DF0338]();
}

uint64_t sub_1A594A5B4()
{
  return MEMORY[0x1E0DF0340]();
}

uint64_t sub_1A594A5C0()
{
  return MEMORY[0x1E0DF20A8]();
}

uint64_t sub_1A594A5CC()
{
  return MEMORY[0x1E0DF20B8]();
}

uint64_t sub_1A594A5D8()
{
  return MEMORY[0x1E0DF20C0]();
}

uint64_t sub_1A594A5E4()
{
  return MEMORY[0x1E0DF20C8]();
}

uint64_t sub_1A594A5F0()
{
  return MEMORY[0x1E0DF20D0]();
}

uint64_t sub_1A594A5FC()
{
  return MEMORY[0x1E0DF20E0]();
}

uint64_t sub_1A594A608()
{
  return MEMORY[0x1E0DF20E8]();
}

uint64_t sub_1A594A614()
{
  return MEMORY[0x1E0DF20F0]();
}

uint64_t sub_1A594A620()
{
  return MEMORY[0x1E0DF2108]();
}

uint64_t sub_1A594A62C()
{
  return MEMORY[0x1E0DF2118]();
}

uint64_t sub_1A594A638()
{
  return MEMORY[0x1E0DF2128]();
}

uint64_t sub_1A594A644()
{
  return MEMORY[0x1E0DF2148]();
}

uint64_t sub_1A594A650()
{
  return MEMORY[0x1E0DF2150]();
}

uint64_t sub_1A594A65C()
{
  return MEMORY[0x1E0DF2170]();
}

uint64_t sub_1A594A668()
{
  return MEMORY[0x1E0DF2188]();
}

uint64_t sub_1A594A674()
{
  return MEMORY[0x1E0DF2198]();
}

uint64_t sub_1A594A680()
{
  return MEMORY[0x1E0DF21A0]();
}

uint64_t sub_1A594A68C()
{
  return MEMORY[0x1E0DF21A8]();
}

uint64_t sub_1A594A698()
{
  return MEMORY[0x1E0DF21B0]();
}

uint64_t sub_1A594A6A4()
{
  return MEMORY[0x1E0DF21B8]();
}

uint64_t sub_1A594A6B0()
{
  return MEMORY[0x1E0DF21C0]();
}

uint64_t sub_1A594A6BC()
{
  return MEMORY[0x1E0DF21C8]();
}

uint64_t sub_1A594A6C8()
{
  return MEMORY[0x1E0DF21D0]();
}

uint64_t sub_1A594A6D4()
{
  return MEMORY[0x1E0DF21D8]();
}

uint64_t sub_1A594A6E0()
{
  return MEMORY[0x1E0DF21E0]();
}

uint64_t sub_1A594A6EC()
{
  return MEMORY[0x1E0DF21E8]();
}

uint64_t sub_1A594A6F8()
{
  return MEMORY[0x1E0DF2200]();
}

uint64_t sub_1A594A704()
{
  return MEMORY[0x1E0DF2208]();
}

uint64_t sub_1A594A710()
{
  return MEMORY[0x1E0DF2210]();
}

uint64_t sub_1A594A71C()
{
  return MEMORY[0x1E0DF2218]();
}

uint64_t sub_1A594A728()
{
  return MEMORY[0x1E0DF2220]();
}

uint64_t sub_1A594A734()
{
  return MEMORY[0x1E0DF2228]();
}

uint64_t sub_1A594A740()
{
  return MEMORY[0x1E0DF2238]();
}

uint64_t sub_1A594A74C()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1A594A758()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1A594A764()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1A594A770()
{
  return MEMORY[0x1E0DF2268]();
}

uint64_t sub_1A594A77C()
{
  return MEMORY[0x1E0DF0428]();
}

uint64_t sub_1A594A788()
{
  return MEMORY[0x1E0DF0440]();
}

uint64_t sub_1A594A794()
{
  return MEMORY[0x1E0DF0448]();
}

uint64_t sub_1A594A7A0()
{
  return MEMORY[0x1E0DF0460]();
}

uint64_t sub_1A594A7AC()
{
  return MEMORY[0x1E0DF0468]();
}

uint64_t sub_1A594A7B8()
{
  return MEMORY[0x1E0DF0478]();
}

uint64_t sub_1A594A7C4()
{
  return MEMORY[0x1E0DF0480]();
}

uint64_t sub_1A594A7D0()
{
  return MEMORY[0x1E0DF0488]();
}

uint64_t sub_1A594A7DC()
{
  return MEMORY[0x1E0DF0490]();
}

uint64_t sub_1A594A7E8()
{
  return MEMORY[0x1E0DF0498]();
}

uint64_t sub_1A594A7F4()
{
  return MEMORY[0x1E0DF04E8]();
}

uint64_t sub_1A594A800()
{
  return MEMORY[0x1E0DF0550]();
}

uint64_t sub_1A594A80C()
{
  return MEMORY[0x1E0DF0558]();
}

uint64_t sub_1A594A818()
{
  return MEMORY[0x1E0DF0568]();
}

uint64_t sub_1A594A824()
{
  return MEMORY[0x1E0DEF358]();
}

uint64_t sub_1A594A830()
{
  return MEMORY[0x1E0DF2010]();
}

uint64_t sub_1A594A83C()
{
  return MEMORY[0x1E0DF2018]();
}

uint64_t sub_1A594A848()
{
  return MEMORY[0x1E0DF2040]();
}

uint64_t sub_1A594A854()
{
  return MEMORY[0x1E0DEF3A0]();
}

uint64_t sub_1A594A860()
{
  return MEMORY[0x1E0DF2070]();
}

uint64_t sub_1A594A86C()
{
  return MEMORY[0x1E0DF0048]();
}

uint64_t sub_1A594A878()
{
  return MEMORY[0x1E0DF0050]();
}

uint64_t sub_1A594A884()
{
  return MEMORY[0x1E0CCE230]();
}

uint64_t sub_1A594A890()
{
  return MEMORY[0x1E0CCE240]();
}

uint64_t sub_1A594A89C()
{
  return MEMORY[0x1E0CCE250]();
}

uint64_t sub_1A594A8A8()
{
  return MEMORY[0x1E0CCE258]();
}

uint64_t sub_1A594A8B4()
{
  return MEMORY[0x1E0CCE260]();
}

uint64_t sub_1A594A8C0()
{
  return MEMORY[0x1E0CCE268]();
}

uint64_t sub_1A594A8CC()
{
  return MEMORY[0x1E0CCE270]();
}

uint64_t sub_1A594A8D8()
{
  return MEMORY[0x1E0CCE2A0]();
}

uint64_t sub_1A594A8E4()
{
  return MEMORY[0x1E0CCE388]();
}

uint64_t sub_1A594A8F0()
{
  return MEMORY[0x1E0CCE3A8]();
}

uint64_t sub_1A594A8FC()
{
  return MEMORY[0x1E0CCE3B0]();
}

uint64_t sub_1A594A908()
{
  return MEMORY[0x1E0CCE3C0]();
}

uint64_t sub_1A594A914()
{
  return MEMORY[0x1E0CCE3F8]();
}

uint64_t sub_1A594A920()
{
  return MEMORY[0x1E0CCE408]();
}

uint64_t sub_1A594A92C()
{
  return MEMORY[0x1E0CCE410]();
}

uint64_t sub_1A594A938()
{
  return MEMORY[0x1E0CCE418]();
}

uint64_t sub_1A594A944()
{
  return MEMORY[0x1E0CCE430]();
}

uint64_t sub_1A594A950()
{
  return MEMORY[0x1E0CCE438]();
}

uint64_t sub_1A594A95C()
{
  return MEMORY[0x1E0CCE448]();
}

uint64_t sub_1A594A968()
{
  return MEMORY[0x1E0CCE468]();
}

uint64_t sub_1A594A974()
{
  return MEMORY[0x1E0CCE470]();
}

uint64_t sub_1A594A980()
{
  return MEMORY[0x1E0CCE478]();
}

uint64_t sub_1A594A98C()
{
  return MEMORY[0x1E0CCE480]();
}

uint64_t sub_1A594A998()
{
  return MEMORY[0x1E0CCE4A0]();
}

uint64_t sub_1A594A9A4()
{
  return MEMORY[0x1E0CCE4B0]();
}

uint64_t sub_1A594A9B0()
{
  return MEMORY[0x1E0CCE4C8]();
}

uint64_t sub_1A594A9BC()
{
  return MEMORY[0x1E0CCE4D8]();
}

uint64_t sub_1A594A9C8()
{
  return MEMORY[0x1E0CCE4E0]();
}

uint64_t sub_1A594A9D4()
{
  return MEMORY[0x1E0CCE4E8]();
}

uint64_t sub_1A594A9E0()
{
  return MEMORY[0x1E0CCE548]();
}

uint64_t sub_1A594A9EC()
{
  return MEMORY[0x1E0CCE550]();
}

uint64_t sub_1A594A9F8()
{
  return MEMORY[0x1E0CCE558]();
}

uint64_t sub_1A594AA04()
{
  return MEMORY[0x1E0CCE560]();
}

uint64_t sub_1A594AA10()
{
  return MEMORY[0x1E0CCE580]();
}

uint64_t sub_1A594AA1C()
{
  return MEMORY[0x1E0CCE598]();
}

uint64_t sub_1A594AA28()
{
  return MEMORY[0x1E0CCE5A0]();
}

uint64_t sub_1A594AA34()
{
  return MEMORY[0x1E0CCE5A8]();
}

uint64_t sub_1A594AA40()
{
  return MEMORY[0x1E0CCE5E0]();
}

uint64_t sub_1A594AA4C()
{
  return MEMORY[0x1E0CCE5F0]();
}

uint64_t sub_1A594AA58()
{
  return MEMORY[0x1E0CCE5F8]();
}

uint64_t sub_1A594AA64()
{
  return MEMORY[0x1E0CCE600]();
}

uint64_t sub_1A594AA70()
{
  return MEMORY[0x1E0CCE610]();
}

uint64_t sub_1A594AA7C()
{
  return MEMORY[0x1E0CCE618]();
}

uint64_t sub_1A594AA88()
{
  return MEMORY[0x1E0CCE620]();
}

uint64_t sub_1A594AA94()
{
  return MEMORY[0x1E0CCE640]();
}

uint64_t sub_1A594AAA0()
{
  return MEMORY[0x1E0CCE648]();
}

uint64_t sub_1A594AAAC()
{
  return MEMORY[0x1E0CCE650]();
}

uint64_t sub_1A594AAB8()
{
  return MEMORY[0x1E0CCE668]();
}

uint64_t sub_1A594AAC4()
{
  return MEMORY[0x1E0CCE680]();
}

uint64_t sub_1A594AAD0()
{
  return MEMORY[0x1E0CCE688]();
}

uint64_t sub_1A594AADC()
{
  return MEMORY[0x1E0CCE690]();
}

uint64_t sub_1A594AAE8()
{
  return MEMORY[0x1E0CCE6A8]();
}

uint64_t sub_1A594AAF4()
{
  return MEMORY[0x1E0CCE6C0]();
}

uint64_t sub_1A594AB00()
{
  return MEMORY[0x1E0CCE6C8]();
}

uint64_t sub_1A594AB0C()
{
  return MEMORY[0x1E0CCE770]();
}

uint64_t sub_1A594AB18()
{
  return MEMORY[0x1E0CCE778]();
}

uint64_t sub_1A594AB24()
{
  return MEMORY[0x1E0CCE780]();
}

uint64_t sub_1A594AB30()
{
  return MEMORY[0x1E0CCE788]();
}

uint64_t sub_1A594AB3C()
{
  return MEMORY[0x1E0CCE790]();
}

uint64_t sub_1A594AB48()
{
  return MEMORY[0x1E0CCE798]();
}

uint64_t sub_1A594AB54()
{
  return MEMORY[0x1E0CCE7A0]();
}

uint64_t sub_1A594AB60()
{
  return MEMORY[0x1E0CCE7A8]();
}

uint64_t sub_1A594AB6C()
{
  return MEMORY[0x1E0CCE7B0]();
}

uint64_t sub_1A594AB78()
{
  return MEMORY[0x1E0CCE7B8]();
}

uint64_t sub_1A594AB84()
{
  return MEMORY[0x1E0CCE860]();
}

uint64_t sub_1A594AB90()
{
  return MEMORY[0x1E0CCE868]();
}

uint64_t sub_1A594AB9C()
{
  return MEMORY[0x1E0CCE878]();
}

uint64_t sub_1A594ABA8()
{
  return MEMORY[0x1E0CCE888]();
}

uint64_t sub_1A594ABB4()
{
  return MEMORY[0x1E0CCE890]();
}

uint64_t sub_1A594ABC0()
{
  return MEMORY[0x1E0CCE898]();
}

uint64_t sub_1A594ABCC()
{
  return MEMORY[0x1E0CCE8A0]();
}

uint64_t sub_1A594ABD8()
{
  return MEMORY[0x1E0CCE8A8]();
}

uint64_t sub_1A594ABE4()
{
  return MEMORY[0x1E0CCE8B0]();
}

uint64_t sub_1A594ABF0()
{
  return MEMORY[0x1E0CCE8B8]();
}

uint64_t sub_1A594ABFC()
{
  return MEMORY[0x1E0CCE8C0]();
}

uint64_t sub_1A594AC08()
{
  return MEMORY[0x1E0CCE8C8]();
}

uint64_t sub_1A594AC14()
{
  return MEMORY[0x1E0CCE8D0]();
}

uint64_t sub_1A594AC20()
{
  return MEMORY[0x1E0CCE8D8]();
}

uint64_t sub_1A594AC2C()
{
  return MEMORY[0x1E0CCE8E0]();
}

uint64_t sub_1A594AC38()
{
  return MEMORY[0x1E0CCE8F0]();
}

uint64_t sub_1A594AC44()
{
  return MEMORY[0x1E0CCE8F8]();
}

uint64_t sub_1A594AC50()
{
  return MEMORY[0x1E0CCE900]();
}

uint64_t sub_1A594AC5C()
{
  return MEMORY[0x1E0CCE908]();
}

uint64_t sub_1A594AC68()
{
  return MEMORY[0x1E0CCE910]();
}

uint64_t sub_1A594AC74()
{
  return MEMORY[0x1E0CCE918]();
}

uint64_t sub_1A594AC80()
{
  return MEMORY[0x1E0CCE920]();
}

uint64_t sub_1A594AC8C()
{
  return MEMORY[0x1E0CCE9E8]();
}

uint64_t sub_1A594AC98()
{
  return MEMORY[0x1E0CCEA38]();
}

uint64_t sub_1A594ACA4()
{
  return MEMORY[0x1E0CCEA40]();
}

uint64_t sub_1A594ACB0()
{
  return MEMORY[0x1E0CCEA48]();
}

uint64_t sub_1A594ACBC()
{
  return MEMORY[0x1E0CCEA90]();
}

uint64_t sub_1A594ACC8()
{
  return MEMORY[0x1E0CCEAD8]();
}

uint64_t sub_1A594ACD4()
{
  return MEMORY[0x1E0CCEAE8]();
}

uint64_t sub_1A594ACE0()
{
  return MEMORY[0x1E0CCEAF0]();
}

uint64_t sub_1A594ACEC()
{
  return MEMORY[0x1E0CCEB10]();
}

uint64_t sub_1A594ACF8()
{
  return MEMORY[0x1E0DEF450]();
}

uint64_t sub_1A594AD04()
{
  return MEMORY[0x1E0DEF468]();
}

uint64_t sub_1A594AD10()
{
  return MEMORY[0x1E0DEF4A8]();
}

uint64_t sub_1A594AD1C()
{
  return MEMORY[0x1E0DEF4B8]();
}

uint64_t sub_1A594AD28()
{
  return MEMORY[0x1E0DEF4F0]();
}

uint64_t sub_1A594AD34()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1A594AD40()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1A594AD4C()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1A594AD58()
{
  return MEMORY[0x1E0DEF580]();
}

uint64_t sub_1A594AD64()
{
  return MEMORY[0x1E0DEF598]();
}

uint64_t sub_1A594AD70()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1A594AD7C()
{
  return MEMORY[0x1E0CB1780]();
}

uint64_t sub_1A594AD88()
{
  return MEMORY[0x1E0CB1788]();
}

uint64_t sub_1A594AD94()
{
  return MEMORY[0x1E0CB1790]();
}

uint64_t sub_1A594ADA0()
{
  return MEMORY[0x1E0CB1798]();
}

uint64_t sub_1A594ADAC()
{
  return MEMORY[0x1E0CB17A8]();
}

uint64_t sub_1A594ADB8()
{
  return MEMORY[0x1E0DEF5D8]();
}

uint64_t sub_1A594ADC4()
{
  return MEMORY[0x1E0DEF5E0]();
}

uint64_t sub_1A594ADD0()
{
  return MEMORY[0x1E0DEF5E8]();
}

uint64_t sub_1A594ADDC()
{
  return MEMORY[0x1E0DEF5F0]();
}

uint64_t sub_1A594ADE8()
{
  return MEMORY[0x1E0DEF5F8]();
}

uint64_t sub_1A594ADF4()
{
  return MEMORY[0x1E0DEF600]();
}

uint64_t sub_1A594AE00()
{
  return MEMORY[0x1E0DEF608]();
}

uint64_t sub_1A594AE0C()
{
  return MEMORY[0x1E0DEF610]();
}

uint64_t _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0()
{
  return MEMORY[0x1E0DEF618]();
}

uint64_t sub_1A594AE24()
{
  return MEMORY[0x1E0DEF620]();
}

uint64_t sub_1A594AE30()
{
  return MEMORY[0x1E0DEF628]();
}

uint64_t sub_1A594AE3C()
{
  return MEMORY[0x1E0DEF630]();
}

uint64_t sub_1A594AE48()
{
  return MEMORY[0x1E0DEF638]();
}

uint64_t sub_1A594AE54()
{
  return MEMORY[0x1E0DEF640]();
}

uint64_t sub_1A594AE60()
{
  return MEMORY[0x1E0DEF648]();
}

uint64_t sub_1A594AE6C()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1A594AE78()
{
  return MEMORY[0x1E0DEF6A0]();
}

uint64_t sub_1A594AE84()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1A594AE90()
{
  return MEMORY[0x1E0DEF6D8]();
}

uint64_t sub_1A594AE9C()
{
  return MEMORY[0x1E0DEF6E8]();
}

uint64_t sub_1A594AEA8()
{
  return MEMORY[0x1E0DEF6F8]();
}

uint64_t sub_1A594AEB4()
{
  return MEMORY[0x1E0DEF700]();
}

uint64_t sub_1A594AEC0()
{
  return MEMORY[0x1E0DEF710]();
}

uint64_t sub_1A594AECC()
{
  return MEMORY[0x1E0DEF728]();
}

uint64_t sub_1A594AED8()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t sub_1A594AEE4()
{
  return MEMORY[0x1E0DEF760]();
}

uint64_t sub_1A594AEF0()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t sub_1A594AEFC()
{
  return MEMORY[0x1E0CA92A8]();
}

uint64_t sub_1A594AF08()
{
  return MEMORY[0x1E0CA92B0]();
}

uint64_t sub_1A594AF14()
{
  return MEMORY[0x1E0CA92C0]();
}

uint64_t sub_1A594AF20()
{
  return MEMORY[0x1E0CA92C8]();
}

uint64_t sub_1A594AF2C()
{
  return MEMORY[0x1E0CA9348]();
}

uint64_t sub_1A594AF38()
{
  return MEMORY[0x1E0CA93B0]();
}

uint64_t sub_1A594AF44()
{
  return MEMORY[0x1E0CA93C8]();
}

uint64_t sub_1A594AF50()
{
  return MEMORY[0x1E0CA9588]();
}

uint64_t sub_1A594AF5C()
{
  return MEMORY[0x1E0CA9968]();
}

uint64_t sub_1A594AF68()
{
  return MEMORY[0x1E0CA9970]();
}

uint64_t sub_1A594AF74()
{
  return MEMORY[0x1E0CA9980]();
}

uint64_t sub_1A594AF80()
{
  return MEMORY[0x1E0CA9988]();
}

uint64_t sub_1A594AF8C()
{
  return MEMORY[0x1E0CA9A18]();
}

uint64_t sub_1A594AF98()
{
  return MEMORY[0x1E0CA9A48]();
}

uint64_t sub_1A594AFA4()
{
  return MEMORY[0x1E0DE9D78]();
}

uint64_t sub_1A594AFB0()
{
  return MEMORY[0x1E0CB17C0]();
}

uint64_t sub_1A594AFBC()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1A594AFC8()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1A594AFD4()
{
  return MEMORY[0x1E0DE9E40]();
}

uint64_t sub_1A594AFE0()
{
  return MEMORY[0x1E0DE9E50]();
}

uint64_t sub_1A594AFEC()
{
  return MEMORY[0x1E0DE9E78]();
}

uint64_t sub_1A594AFF8()
{
  return MEMORY[0x1E0DE9E80]();
}

uint64_t sub_1A594B004()
{
  return MEMORY[0x1E0DE9E98]();
}

uint64_t sub_1A594B010()
{
  return MEMORY[0x1E0DE9EA0]();
}

uint64_t _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0()
{
  return MEMORY[0x1E0DE9EE8]();
}

uint64_t sub_1A594B028()
{
  return MEMORY[0x1E0DE9F38]();
}

uint64_t sub_1A594B034()
{
  return MEMORY[0x1E0DE9F48]();
}

uint64_t sub_1A594B040()
{
  return MEMORY[0x1E0DE9F60]();
}

uint64_t sub_1A594B04C()
{
  return MEMORY[0x1E0DE9F68]();
}

uint64_t sub_1A594B058()
{
  return MEMORY[0x1E0DE9F88]();
}

uint64_t sub_1A594B064()
{
  return MEMORY[0x1E0DE9F90]();
}

uint64_t sub_1A594B070()
{
  return MEMORY[0x1E0DE9FA8]();
}

uint64_t sub_1A594B07C()
{
  return MEMORY[0x1E0DE9FB0]();
}

uint64_t sub_1A594B088()
{
  return MEMORY[0x1E0DE9FB8]();
}

uint64_t sub_1A594B094()
{
  return MEMORY[0x1E0DE9FC0]();
}

uint64_t sub_1A594B0A0()
{
  return MEMORY[0x1E0DE9FC8]();
}

uint64_t sub_1A594B0AC()
{
  return MEMORY[0x1E0DE9FD8]();
}

uint64_t sub_1A594B0B8()
{
  return MEMORY[0x1E0DEA038]();
}

uint64_t sub_1A594B0C4()
{
  return MEMORY[0x1E0DEA040]();
}

uint64_t sub_1A594B0D0()
{
  return MEMORY[0x1E0DEA058]();
}

uint64_t sub_1A594B0DC()
{
  return MEMORY[0x1E0DEA060]();
}

uint64_t sub_1A594B0E8()
{
  return MEMORY[0x1E0DEA068]();
}

uint64_t sub_1A594B0F4()
{
  return MEMORY[0x1E0DEA078]();
}

uint64_t sub_1A594B100()
{
  return MEMORY[0x1E0DEA088]();
}

uint64_t sub_1A594B10C()
{
  return MEMORY[0x1E0DEA098]();
}

uint64_t sub_1A594B118()
{
  return MEMORY[0x1E0DEA0A0]();
}

uint64_t sub_1A594B124()
{
  return MEMORY[0x1E0DEA0A8]();
}

uint64_t sub_1A594B130()
{
  return MEMORY[0x1E0DEA0B0]();
}

uint64_t sub_1A594B13C()
{
  return MEMORY[0x1E0DEA1A8]();
}

uint64_t sub_1A594B148()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1A594B154()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1A594B160()
{
  return MEMORY[0x1E0DEA1E0]();
}

uint64_t sub_1A594B16C()
{
  return MEMORY[0x1E0DEA1E8]();
}

uint64_t sub_1A594B178()
{
  return MEMORY[0x1E0DEA1F0]();
}

uint64_t sub_1A594B184()
{
  return MEMORY[0x1E0DEA1F8]();
}

uint64_t sub_1A594B190()
{
  return MEMORY[0x1E0DEA200]();
}

uint64_t sub_1A594B19C()
{
  return MEMORY[0x1E0DEA230]();
}

uint64_t sub_1A594B1A8()
{
  return MEMORY[0x1E0DEA258]();
}

uint64_t sub_1A594B1B4()
{
  return MEMORY[0x1E0DEA280]();
}

uint64_t sub_1A594B1C0()
{
  return MEMORY[0x1E0DEA290]();
}

uint64_t sub_1A594B1CC()
{
  return MEMORY[0x1E0DEA298]();
}

uint64_t sub_1A594B1D8()
{
  return MEMORY[0x1E0DEA2A0]();
}

uint64_t sub_1A594B1E4()
{
  return MEMORY[0x1E0DEA2A8]();
}

uint64_t sub_1A594B1F0()
{
  return MEMORY[0x1E0DEA308]();
}

uint64_t sub_1A594B1FC()
{
  return MEMORY[0x1E0DEA318]();
}

uint64_t sub_1A594B208()
{
  return MEMORY[0x1E0DEA360]();
}

uint64_t sub_1A594B214()
{
  return MEMORY[0x1E0DEA368]();
}

uint64_t sub_1A594B220()
{
  return MEMORY[0x1E0DEA370]();
}

uint64_t sub_1A594B22C()
{
  return MEMORY[0x1E0DEA378]();
}

uint64_t sub_1A594B238()
{
  return MEMORY[0x1E0DEA380]();
}

uint64_t sub_1A594B244()
{
  return MEMORY[0x1E0DEA388]();
}

uint64_t sub_1A594B250()
{
  return MEMORY[0x1E0DEA390]();
}

uint64_t sub_1A594B25C()
{
  return MEMORY[0x1E0DEA3A8]();
}

uint64_t sub_1A594B268()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1A594B274()
{
  return MEMORY[0x1E0DEA3B8]();
}

uint64_t sub_1A594B280()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1A594B28C()
{
  return MEMORY[0x1E0DEA3C8]();
}

uint64_t sub_1A594B298()
{
  return MEMORY[0x1E0DEA3D0]();
}

uint64_t sub_1A594B2A4()
{
  return MEMORY[0x1E0DEA3E0]();
}

uint64_t sub_1A594B2B0()
{
  return MEMORY[0x1E0DEA3E8]();
}

uint64_t sub_1A594B2BC()
{
  return MEMORY[0x1E0DEA3F0]();
}

uint64_t sub_1A594B2C8()
{
  return MEMORY[0x1E0DEA428]();
}

uint64_t sub_1A594B2D4()
{
  return MEMORY[0x1E0DEA430]();
}

uint64_t sub_1A594B2E0()
{
  return MEMORY[0x1E0DEA438]();
}

uint64_t sub_1A594B2EC()
{
  return MEMORY[0x1E0DEA440]();
}

uint64_t sub_1A594B2F8()
{
  return MEMORY[0x1E0DEA448]();
}

uint64_t sub_1A594B304()
{
  return MEMORY[0x1E0DEA450]();
}

uint64_t sub_1A594B310()
{
  return MEMORY[0x1E0DEA460]();
}

uint64_t sub_1A594B31C()
{
  return MEMORY[0x1E0DEA468]();
}

uint64_t sub_1A594B328()
{
  return MEMORY[0x1E0DEA478]();
}

uint64_t sub_1A594B334()
{
  return MEMORY[0x1E0DEA480]();
}

uint64_t sub_1A594B340()
{
  return MEMORY[0x1E0DEA490]();
}

uint64_t sub_1A594B34C()
{
  return MEMORY[0x1E0DEA498]();
}

uint64_t sub_1A594B358()
{
  return MEMORY[0x1E0DEA4A0]();
}

uint64_t sub_1A594B364()
{
  return MEMORY[0x1E0DEA4B0]();
}

uint64_t sub_1A594B370()
{
  return MEMORY[0x1E0DEA4C0]();
}

uint64_t sub_1A594B37C()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1A594B388()
{
  return MEMORY[0x1E0DEA580]();
}

uint64_t sub_1A594B394()
{
  return MEMORY[0x1E0DEA588]();
}

uint64_t sub_1A594B3A0()
{
  return MEMORY[0x1E0DEA5A8]();
}

uint64_t sub_1A594B3AC()
{
  return MEMORY[0x1E0CB18C0]();
}

uint64_t sub_1A594B3B8()
{
  return MEMORY[0x1E0CB18D8]();
}

uint64_t sub_1A594B3C4()
{
  return MEMORY[0x1E0CB18E0]();
}

uint64_t sub_1A594B3D0()
{
  return MEMORY[0x1E0CB18E8]();
}

uint64_t sub_1A594B3DC()
{
  return MEMORY[0x1E0CB18F0]();
}

uint64_t sub_1A594B3E8()
{
  return MEMORY[0x1E0CB18F8]();
}

uint64_t sub_1A594B3F4()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1A594B400()
{
  return MEMORY[0x1E0CB1950]();
}

uint64_t sub_1A594B40C()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1A594B418()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_1A594B424()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_1A594B430()
{
  return MEMORY[0x1E0CB1998]();
}

uint64_t sub_1A594B43C()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1A594B448()
{
  return MEMORY[0x1E0CB19C8]();
}

uint64_t sub_1A594B454()
{
  return MEMORY[0x1E0CB19D8]();
}

uint64_t sub_1A594B460()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1A594B46C()
{
  return MEMORY[0x1E0CB19F0]();
}

uint64_t sub_1A594B478()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1A594B484()
{
  return MEMORY[0x1E0CB1A30]();
}

uint64_t sub_1A594B490()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1A594B49C()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_1A594B4A8()
{
  return MEMORY[0x1E0DEA618]();
}

uint64_t sub_1A594B4B4()
{
  return MEMORY[0x1E0DEA628]();
}

uint64_t sub_1A594B4C0()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_1A594B4CC()
{
  return MEMORY[0x1E0DEA650]();
}

uint64_t sub_1A594B4D8()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1A594B4E4()
{
  return MEMORY[0x1E0DEA670]();
}

uint64_t sub_1A594B4F0()
{
  return MEMORY[0x1E0DEA688]();
}

uint64_t sub_1A594B4FC()
{
  return MEMORY[0x1E0DEA6A0]();
}

uint64_t sub_1A594B508()
{
  return MEMORY[0x1E0DEA6A8]();
}

uint64_t sub_1A594B514()
{
  return MEMORY[0x1E0DEA6B0]();
}

uint64_t sub_1A594B520()
{
  return MEMORY[0x1E0DEA6B8]();
}

uint64_t sub_1A594B52C()
{
  return MEMORY[0x1E0DEA6C0]();
}

uint64_t sub_1A594B538()
{
  return MEMORY[0x1E0DEA6F0]();
}

uint64_t sub_1A594B544()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1A594B550()
{
  return MEMORY[0x1E0DEA708]();
}

uint64_t sub_1A594B55C()
{
  return MEMORY[0x1E0DEA710]();
}

uint64_t sub_1A594B568()
{
  return MEMORY[0x1E0DEA718]();
}

