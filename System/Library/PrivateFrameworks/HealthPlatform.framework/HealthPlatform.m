uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1BCCF5A3C](a1, v6, a5);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

id HealthExperienceStoreCleanupOperation.__allocating_init(context:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return HealthExperienceStoreCleanupOperation.init(context:)(a1);
}

id HealthExperienceStoreCleanupOperation.init(context:)(void *a1)
{
  char *v1;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  objc_super v15;

  *(_QWORD *)&v1[OBJC_IVAR____TtC14HealthPlatform37HealthExperienceStoreCleanupOperation_context] = a1;
  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for HealthExperienceStoreCleanupOperation();
  v3 = a1;
  v4 = objc_msgSendSuper2(&v15, sel_init);
  v5 = qword_1ED6BB5B0;
  v6 = v4;
  if (v5 != -1)
    swift_once();
  v7 = sub_1BC817590();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED6BB5D0);
  v8 = v6;
  v9 = sub_1BC81756C();
  v10 = sub_1BC817E9C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = v8;
    sub_1BC818148();
    *v12 = v8;

    _os_log_impl(&dword_1BC6DD000, v9, v10, "%@ init", v11, 0xCu);
    sub_1BC6E1440(0, (unint64_t *)&qword_1ED6BA800, (void (*)(uint64_t))sub_1BC6E1404);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v12, -1, -1);
    MEMORY[0x1BCCF5BA4](v11, -1, -1);
  }
  else
  {

    v3 = v8;
  }

  return v8;
}

uint64_t type metadata accessor for HealthExperienceStoreCleanupOperation()
{
  return objc_opt_self();
}

uint64_t sub_1BC6DFFC0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint8_t *v24;
  char *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint8_t *v28;
  char *v29;
  uint8_t *v30;
  uint64_t v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(char *, uint64_t);
  uint8_t *v43;
  char *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t result;
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  char *v60;
  _QWORD *v61;
  uint8_t *v62;
  void (*v63)(char *, uint64_t);
  _QWORD *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  _QWORD *v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t aBlock[6];
  uint64_t v77;

  v1 = sub_1BC816FFC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v74 = (uint8_t *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC817008();
  v72 = *(_QWORD *)(v4 - 8);
  v73 = (_QWORD *)v4;
  MEMORY[0x1E0C80A78](v4);
  v70 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6E1440(0, (unint64_t *)&qword_1ED6B9BE8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v6);
  v71 = (char *)&v64 - v7;
  v8 = sub_1BC816EF4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v68 = (char *)&v64 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v64 - v15;
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v17 = sub_1BC817590();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED6BB5D0);
  v19 = v0;
  v67 = v18;
  v20 = sub_1BC81756C();
  v21 = sub_1BC817E9C();
  v22 = os_log_type_enabled(v20, v21);
  v69 = v8;
  v75 = v9;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v66 = v16;
    v24 = (uint8_t *)v23;
    v64 = (_QWORD *)swift_slowAlloc();
    v65 = v12;
    *(_DWORD *)v24 = 138412290;
    aBlock[0] = (uint64_t)v19;
    v25 = v19;
    v12 = v65;
    sub_1BC818148();
    v26 = v64;
    *v64 = v19;

    v8 = v69;
    _os_log_impl(&dword_1BC6DD000, v20, v21, "%@ main()", v24, 0xCu);
    sub_1BC6E1440(0, (unint64_t *)&qword_1ED6BA800, (void (*)(uint64_t))sub_1BC6E1404);
    swift_arrayDestroy();
    v27 = v26;
    v9 = v75;
    MEMORY[0x1BCCF5BA4](v27, -1, -1);
    v28 = v24;
    v16 = v66;
    MEMORY[0x1BCCF5BA4](v28, -1, -1);

  }
  else
  {

  }
  sub_1BC816EE8();
  v29 = v70;
  sub_1BC816FF0();
  v30 = v74;
  (*(void (**)(uint8_t *, _QWORD, uint64_t))(v2 + 104))(v74, *MEMORY[0x1E0CB1130], v1);
  v31 = (uint64_t)v71;
  sub_1BC816FE4();
  (*(void (**)(uint8_t *, uint64_t))(v2 + 8))(v30, v1);
  (*(void (**)(char *, _QWORD *))(v72 + 8))(v29, v73);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v31, 1, v8) == 1)
  {
    sub_1BC6E148C(v31);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v16, v8);
    v32 = v19;
    v33 = sub_1BC81756C();
    v34 = sub_1BC817E84();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v36 = (_QWORD *)swift_slowAlloc();
      v74 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = (uint64_t)v74;
      *(_DWORD *)v35 = 138412546;
      v77 = (uint64_t)v32;
      v37 = v32;
      v66 = v16;
      v38 = v37;
      sub_1BC818148();
      *v36 = v32;

      *(_WORD *)(v35 + 12) = 2080;
      sub_1BC6E1788(&qword_1ED6B7C30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v39 = v69;
      v40 = sub_1BC818670();
      v77 = sub_1BC6E14D8(v40, v41, aBlock);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      v42 = *(void (**)(char *, uint64_t))(v75 + 8);
      v42(v12, v39);
      _os_log_impl(&dword_1BC6DD000, v33, v34, "%@ cannot generate yesterday from today: %s", (uint8_t *)v35, 0x16u);
      sub_1BC6E1440(0, (unint64_t *)&qword_1ED6BA800, (void (*)(uint64_t))sub_1BC6E1404);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v36, -1, -1);
      v43 = v74;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v43, -1, -1);
      MEMORY[0x1BCCF5BA4](v35, -1, -1);

      v44 = v66;
      v45 = v39;
    }
    else
    {

      v42 = *(void (**)(char *, uint64_t))(v9 + 8);
      v42(v12, v8);

      v44 = v16;
      v45 = v8;
    }
    return ((uint64_t (*)(char *, uint64_t))v42)(v44, v45);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v68, v31, v8);
    v46 = (void *)objc_opt_self();
    v47 = (void *)sub_1BC816EAC();
    v48 = objc_msgSend(v46, sel_deleteHistoryBeforeDate_, v47);

    v49 = *(void **)&v19[OBJC_IVAR____TtC14HealthPlatform37HealthExperienceStoreCleanupOperation_context];
    v50 = swift_allocObject();
    *(_QWORD *)(v50 + 16) = v19;
    *(_QWORD *)(v50 + 24) = v48;
    v51 = swift_allocObject();
    *(_QWORD *)(v51 + 16) = sub_1BC6E15D4;
    *(_QWORD *)(v51 + 24) = v50;
    aBlock[4] = (uint64_t)sub_1BC6E15EC;
    aBlock[5] = v51;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BC6E0C04;
    aBlock[3] = (uint64_t)&block_descriptor;
    v52 = _Block_copy(aBlock);
    v53 = v19;
    v54 = (char *)v48;
    swift_retain();
    swift_release();
    objc_msgSend(v49, sel_performBlockAndWait_, v52);
    _Block_release(v52);
    LOBYTE(v48) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v48 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v56 = v53;
      v57 = sub_1BC81756C();
      v58 = sub_1BC817E9C();
      if (os_log_type_enabled(v57, v58))
      {
        v59 = (uint8_t *)swift_slowAlloc();
        v73 = (_QWORD *)swift_slowAlloc();
        v74 = v59;
        *(_DWORD *)v59 = 138412290;
        aBlock[0] = (uint64_t)v56;
        v60 = v56;
        sub_1BC818148();
        v61 = v73;
        *v73 = v56;

        v8 = v69;
        v62 = v74;
        _os_log_impl(&dword_1BC6DD000, v57, v58, "%@ start() done!", v74, 0xCu);
        sub_1BC6E1440(0, (unint64_t *)&qword_1ED6BA800, (void (*)(uint64_t))sub_1BC6E1404);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v61, -1, -1);
        MEMORY[0x1BCCF5BA4](v62, -1, -1);
      }
      else
      {

        v54 = v56;
      }

      v63 = *(void (**)(char *, uint64_t))(v75 + 8);
      v63(v68, v8);
      v63(v16, v8);
      return swift_release();
    }
  }
  return result;
}

void sub_1BC6E0840(char *a1, void *a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  void *v30;
  id v31[2];

  v31[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = *(void **)&a1[OBJC_IVAR____TtC14HealthPlatform37HealthExperienceStoreCleanupOperation_context];
  v31[0] = 0;
  v5 = objc_msgSend(v4, sel_executeRequest_error_, a2, v31);
  if (v5)
  {
    v6 = v5;
    v7 = v31[0];

  }
  else
  {
    v8 = v31[0];
    v9 = (void *)sub_1BC816D5C();

    swift_willThrow();
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v10 = sub_1BC817590();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED6BB5D0);
    v11 = a1;
    v12 = a2;
    v13 = v9;
    v14 = v11;
    v15 = v12;
    v16 = v9;
    v17 = sub_1BC81756C();
    v18 = sub_1BC817E84();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v29 = (_QWORD *)swift_slowAlloc();
      v30 = (void *)swift_slowAlloc();
      v31[0] = v30;
      *(_DWORD *)v19 = 138412802;
      v20 = v14;
      sub_1BC818148();
      *v29 = v14;

      *(_WORD *)(v19 + 12) = 2080;
      v21 = v15;
      v22 = objc_msgSend(v21, sel_description);
      v23 = sub_1BC817AE8();
      v25 = v24;

      sub_1BC6E14D8(v23, v25, (uint64_t *)v31);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2080;
      v26 = v9;
      sub_1BC6E1878();
      v27 = sub_1BC817B00();
      sub_1BC6E14D8(v27, v28, (uint64_t *)v31);
      sub_1BC818148();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC6DD000, v17, v18, "%@ executing this request failed: %s with error: %s", (uint8_t *)v19, 0x20u);
      sub_1BC6E1440(0, (unint64_t *)&qword_1ED6BA800, (void (*)(uint64_t))sub_1BC6E1404);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v29, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v30, -1, -1);
      MEMORY[0x1BCCF5BA4](v19, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_1BC6E0BE4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1BC6E0C04(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

id HealthExperienceStoreCleanupOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void HealthExperienceStoreCleanupOperation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id HealthExperienceStoreCleanupOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthExperienceStoreCleanupOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC6E0DD4()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t sub_1BC6E0E18()
{
  return sub_1BC818748();
}

uint64_t sub_1BC6E0E40()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t sub_1BC6E0E80(uint64_t a1, uint64_t a2)
{
  return sub_1BC6E1290(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1BC6E0EA0(uint64_t a1, uint64_t a2)
{
  return sub_1BC6E1290(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

BOOL sub_1BC6E0EAC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_1BC6E0EC0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1BC6E0ED0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1BC6E0EDC(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1BC817AD0();
  *a2 = 0;
  return result;
}

uint64_t sub_1BC6E0F50(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1BC817ADC();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1BC6E0FCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BC817AE8();
  v2 = sub_1BC817AC4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BC6E1014()
{
  sub_1BC6E1788(&qword_1ED6B9690, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_1BC819870);
  sub_1BC6E1788((unint64_t *)&unk_1EF45AE50, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_1BC819818);
  return sub_1BC81855C();
}

uint64_t sub_1BC6E1098@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BC817AE8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BC6E10C0()
{
  sub_1BC6E1788(&qword_1EF45AEB0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1BC819E14);
  sub_1BC6E1788((unint64_t *)&unk_1EF45AEB8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1BC819DB4);
  return sub_1BC81855C();
}

uint64_t sub_1BC6E1144()
{
  sub_1BC6E1788((unint64_t *)&unk_1ED6B8580, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_1BC819EA4);
  sub_1BC6E1788(&qword_1EF45AEC8, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_1BC819CA0);
  return sub_1BC81855C();
}

uint64_t sub_1BC6E11C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC817AC4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BC6E120C()
{
  sub_1BC6E1788(&qword_1EF45AED0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1BC819EE8);
  sub_1BC6E1788(&qword_1EF45AED8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1BC819B8C);
  return sub_1BC81855C();
}

uint64_t sub_1BC6E1290(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1BC817AE8();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BC6E12CC()
{
  sub_1BC817AE8();
  sub_1BC817B30();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC6E130C()
{
  uint64_t v0;

  sub_1BC817AE8();
  sub_1BC81873C();
  sub_1BC817B30();
  v0 = sub_1BC818778();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BC6E137C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1BC817AE8();
  v2 = v1;
  if (v0 == sub_1BC817AE8() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BC818694();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1BC6E1404()
{
  unint64_t result;

  result = qword_1ED6BB280;
  if (!qword_1ED6BB280)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BB280);
  }
  return result;
}

void sub_1BC6E1440(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC818130();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC6E148C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC6E1440(0, (unint64_t *)&qword_1ED6B9BE8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC6E14D8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1BC6E18CC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1BC6E1A84((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1BC6E1A84((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1BC6E15A8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC6E15D4()
{
  uint64_t v0;

  sub_1BC6E0840(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1BC6E15DC()
{
  return swift_deallocObject();
}

uint64_t sub_1BC6E15EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t method lookup function for HealthExperienceStoreCleanupOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthExperienceStoreCleanupOperation.__allocating_init(context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_1BC6E1634(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BC6E1654(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for os_unfair_recursive_lock_s(uint64_t a1)
{
  sub_1BC6E1E98(a1, &qword_1ED6BA860, (uint64_t)&unk_1E7516D00, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKOnboardingCompletionCountryCodeProvenance(uint64_t a1)
{
  sub_1BC6E1E98(a1, &qword_1ED6B5E48, (uint64_t)&unk_1E7516D28, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_1BC6E1E98(a1, (unint64_t *)&unk_1EF45ADB0, (uint64_t)&unk_1E7516D48, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKBiologicalSex(uint64_t a1)
{
  sub_1BC6E1E98(a1, &qword_1ED6B9678, (uint64_t)&unk_1E7516D78, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKWheelchairUse(uint64_t a1)
{
  sub_1BC6E1E98(a1, (unint64_t *)&unk_1ED6B8EB0, (uint64_t)&unk_1E7516D98, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1BC6E1E98(a1, &qword_1ED6BA7F8, (uint64_t)&unk_1E7516DB8, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKFeatureIdentifier(uint64_t a1)
{
  sub_1BC6E1E98(a1, (unint64_t *)&unk_1ED6B8550, (uint64_t)&unk_1E7516DE0, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for _HKDataTypeCode(uint64_t a1)
{
  sub_1BC6E1E98(a1, &qword_1ED6B84E8, (uint64_t)&unk_1E7516E08, MEMORY[0x1E0DEEC78]);
}

uint64_t sub_1BC6E175C()
{
  return sub_1BC6E1788(&qword_1ED6B84E0, (uint64_t (*)(uint64_t))type metadata accessor for _HKDataTypeCode, (uint64_t)&unk_1BC819758);
}

uint64_t sub_1BC6E1788(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1BCCF5AB4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC6E17C8()
{
  return sub_1BC6E1788(&qword_1EF45AE28, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_1BC8197E0);
}

uint64_t sub_1BC6E17F4()
{
  return sub_1BC6E1788((unint64_t *)&unk_1EF45AE30, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_1BC8197B8);
}

uint64_t sub_1BC6E1820()
{
  return sub_1BC6E1788(&qword_1ED6B9698, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_1BC819848);
}

uint64_t sub_1BC6E184C()
{
  return sub_1BC6E1788((unint64_t *)&unk_1EF45AE40, (uint64_t (*)(uint64_t))type metadata accessor for HKOnboardingCompletionCountryCodeProvenance, (uint64_t)&unk_1BC8199BC);
}

unint64_t sub_1BC6E1878()
{
  unint64_t result;

  result = qword_1ED6B87B0;
  if (!qword_1ED6B87B0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B87B0);
  }
  return result;
}

uint64_t sub_1BC6E18CC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1BC818154();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1BC6E1AC0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1BC81834C();
  if (!v8)
  {
    sub_1BC8184A8();
    __break(1u);
LABEL_17:
    result = sub_1BC818538();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1BC6E1A84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1BC6E1AC0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1BC6E1B54(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BC6E1CC8(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1BC6E1CC8(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1BC6E1B54(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1BC779A30(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1BC8182D4();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1BC8184A8();
      __break(1u);
LABEL_10:
      v2 = sub_1BC817B54();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1BC818538();
    __break(1u);
LABEL_14:
    result = sub_1BC8184A8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1BC6E1CC8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6B9DD0, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_1BC6E1E98(a1, &qword_1ED6BA4A8, (uint64_t)&unk_1E7516E28, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKMCPregnancyState(uint64_t a1)
{
  sub_1BC6E1E98(a1, &qword_1ED6B8510, (uint64_t)&unk_1E7516E50, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for ProgressUserInfoKey(uint64_t a1)
{
  sub_1BC6E1E98(a1, &qword_1ED6B8598, (uint64_t)&unk_1E7516E70, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_1BC6E1E98(a1, &qword_1EF45AE60, (uint64_t)&unk_1E7516E98, MEMORY[0x1E0DEEC78]);
}

void sub_1BC6E1E98(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BC6E1EDC()
{
  return sub_1BC6E1788(&qword_1EF45AE68, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1BC819B50);
}

uint64_t sub_1BC6E1F08()
{
  return sub_1BC6E1788(&qword_1EF45AE70, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1BC819B24);
}

uint64_t sub_1BC6E1F34()
{
  return sub_1BC6E1788(&qword_1EF45AE78, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_1BC819C64);
}

uint64_t sub_1BC6E1F60()
{
  return sub_1BC6E1788(&qword_1EF45AE80, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_1BC819C38);
}

uint64_t sub_1BC6E1F8C()
{
  return sub_1BC6E1788(&qword_1EF45AE88, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1BC819D78);
}

uint64_t sub_1BC6E1FB8()
{
  return sub_1BC6E1788(&qword_1EF45AE90, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1BC819D4C);
}

uint64_t sub_1BC6E1FE4()
{
  return sub_1BC6E1788((unint64_t *)&unk_1EF45AE98, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1BC819DE8);
}

uint64_t sub_1BC6E2010()
{
  return sub_1BC6E1788(&qword_1ED6B8590, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_1BC819CD4);
}

uint64_t sub_1BC6E203C()
{
  return sub_1BC6E1788(&qword_1EF45AEA8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1BC819BC0);
}

double ContentMagnitudeFeatureTag.value.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

HealthPlatform::ContentMagnitudeFeatureTag __swiftcall ContentMagnitudeFeatureTag.init(_:)(HealthPlatform::ContentMagnitudeFeatureTag result)
{
  HealthPlatform::ContentMagnitudeFeatureTag *v1;

  v1->value = result.value;
  return result;
}

double sub_1BC6E2090@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

double sub_1BC6E209C@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

ValueMetadata *type metadata accessor for ContentMagnitudeFeatureTag()
{
  return &type metadata for ContentMagnitudeFeatureTag;
}

uint64_t static FeedItem.entityName.getter()
{
  return 0x6D65744964656546;
}

uint64_t sub_1BC6E20D0()
{
  return 0x6D65744964656546;
}

unint64_t static FeedItem.uniqueIdentifierKeyPath.getter()
{
  return 0xD000000000000010;
}

uint64_t static FeedItem.defaultSortOrder.getter()
{
  return 99999;
}

void FeedItem.eligibleFeedKinds.getter()
{
  char v0;

  FeedItem.contentKind.getter(&v0);
  __asm { BR              X8 }
}

void FeedItem.contentKind.getter(char *a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  char v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v3 = objc_msgSend(v1, sel_contentKindRawValue);
  v4 = sub_1BC817AE8();
  v6 = v5;

  v7._countAndFlagsBits = v4;
  v7._object = v6;
  ContentKind.init(rawValue:)(v7);
  v8 = v25;
  if (v25 == 24)
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v9 = sub_1BC817590();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED6BB5D0);
    v10 = v1;
    v11 = sub_1BC81756C();
    v12 = sub_1BC817E90();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v24 = a1;
      v14 = swift_slowAlloc();
      v25 = v14;
      *(_DWORD *)v13 = 136315394;
      v15 = objc_msgSend(v10, sel_contentKindRawValue);
      v16 = sub_1BC817AE8();
      v18 = v17;

      sub_1BC6E14D8(v16, v18, &v25);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      v19 = objc_msgSend(v10, sel_uniqueIdentifier);
      v20 = sub_1BC817AE8();
      v22 = v21;

      sub_1BC6E14D8(v20, v22, &v25);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v11, v12, "Somehow a content kind got stored that we do not know about: %s, identifier: %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      v23 = v14;
      a1 = v24;
      MEMORY[0x1BCCF5BA4](v23, -1, -1);
      MEMORY[0x1BCCF5BA4](v13, -1, -1);

    }
    else
    {

    }
    v8 = 15;
  }
  *a1 = v8;
}

void sub_1BC6E2550(_BYTE *a1@<X8>)
{
  char v2;

  FeedItem.contentKind.getter(&v2);
  *a1 = v2;
}

id sub_1BC6E2588(uint64_t a1, void **a2)
{
  void *v2;
  void *v3;

  v2 = *a2;
  ContentKind.rawValue.getter();
  v3 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setContentKindRawValue_, v3);

  return sub_1BC6E2660();
}

id FeedItem.contentKind.setter()
{
  void *v0;
  void *v1;

  ContentKind.rawValue.getter();
  v1 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setContentKindRawValue_, v1);

  return sub_1BC6E2660();
}

id sub_1BC6E2660()
{
  void *v0;
  unsigned __int8 v1;
  uint64_t v2;
  char v4;

  if ((objc_msgSend(v0, sel_searchSectionHintRawValue) & 0x80000000) != 0
    || (v1 = _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(v0, sel_searchSectionHintRawValue)), v1 == 13))
  {
    FeedItem.contentKind.getter(&v4);
    v2 = FeedItem.associatedKeywords.getter();
    v1 = sub_1BC811E20(&v4, v2);
    swift_bridgeObjectRelease();
  }
  return objc_msgSend(v0, sel_setSearchSectionRawValue_, v1);
}

id (*FeedItem.contentKind.modify(uint64_t a1))(void **a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  FeedItem.contentKind.getter((char *)(a1 + 8));
  return sub_1BC6E2728;
}

id sub_1BC6E2728(void **a1)
{
  void *v1;
  void *v2;

  v1 = *a1;
  ContentKind.rawValue.getter();
  v2 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setContentKindRawValue_, v2);

  return sub_1BC6E2660();
}

uint64_t FeedItem.favoriteStatus.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  swift_getObjectType();
  v1 = objc_msgSend(v0, sel_favoriteStatusRawValue);
  v2 = sub_1BC817AE8();
  v4 = v3;

  swift_bridgeObjectRelease();
  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v5
    || (v6 = objc_msgSend(v0, sel_favoriteStatusRawValue),
        sub_1BC817AE8(),
        v6,
        v7 = sub_1BC818568(),
        swift_bridgeObjectRelease(),
        v7 >= 3))
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v8 = sub_1BC817590();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED6BB5D0);
    v9 = v0;
    v10 = sub_1BC81756C();
    v11 = sub_1BC817E90();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v27 = v13;
      *(_DWORD *)v12 = 136446723;
      v14 = sub_1BC818814();
      v25 = sub_1BC6E14D8(v14, v15, &v27);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2082;
      v16 = objc_msgSend(v9, sel_favoriteStatusRawValue, v25, v27);
      v17 = sub_1BC817AE8();
      v19 = v18;

      v26 = sub_1BC6E14D8(v17, v19, &v27);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 22) = 2081;
      v20 = objc_msgSend(v9, sel_description, v26);
      v21 = sub_1BC817AE8();
      v23 = v22;

      sub_1BC6E14D8(v21, v23, &v27);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v10, v11, "%{public}s Unexpected favorite status %{public}s for feed item %{private}s", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v13, -1, -1);
      MEMORY[0x1BCCF5BA4](v12, -1, -1);

    }
    else
    {

    }
    return 2;
  }
  return v7;
}

void sub_1BC6E2AD4(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setFavoriteStatusRawValue_, v3);

}

void FeedItem.favoriteStatus.setter()
{
  void *v0;
  id v1;

  v1 = (id)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setFavoriteStatusRawValue_, v1);

}

void (*FeedItem.favoriteStatus.modify(uint64_t a1))(void **a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = FeedItem.favoriteStatus.getter();
  return sub_1BC6E2C70;
}

void sub_1BC6E2C70(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  v2 = (id)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setFavoriteStatusRawValue_, v2);

}

uint64_t FeedItem.searchSection.getter()
{
  void *v0;
  uint64_t result;

  result = _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(v0, sel_searchSectionRawValue));
  if (result == 13)
  {
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC6E2DB4@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(*a1, sel_searchSectionRawValue));
  if (result == 13)
  {
    result = sub_1BC8184B4();
    __break(1u);
  }
  else
  {
    *a2 = result;
  }
  return result;
}

id FeedItem.searchSection.setter(unsigned __int8 a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setSearchSectionRawValue_, a1);
}

id (*FeedItem.searchSection.modify(_QWORD *a1))(uint64_t a1)
{
  void *v1;
  _BYTE *v2;
  char v3;
  id (*result)(uint64_t);

  *a1 = v1;
  v2 = a1 + 1;
  v3 = _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(v1, sel_searchSectionRawValue));
  if (v3 == 13)
  {
    result = (id (*)(uint64_t))sub_1BC8184B4();
    __break(1u);
  }
  else
  {
    *v2 = v3;
    return sub_1BC6E2F00;
  }
  return result;
}

id sub_1BC6E2F00(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setSearchSectionRawValue_, *(unsigned __int8 *)(a1 + 8));
}

uint64_t FeedItem.searchSectionHint.getter()
{
  void *v0;

  if ((objc_msgSend(v0, sel_searchSectionHintRawValue) & 0x80000000) != 0)
    return 13;
  else
    return _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(v0, sel_searchSectionHintRawValue));
}

id FeedItem.searchSectionHint.setter(unsigned __int8 a1)
{
  void *v1;
  uint64_t v2;

  if (a1 == 13)
    v2 = 0xFFFFFFFFLL;
  else
    v2 = a1;
  objc_msgSend(v1, sel_setSearchSectionHintRawValue_, v2);
  return sub_1BC6E2660();
}

id (*FeedItem.searchSectionHint.modify(_QWORD *a1))(uint64_t a1)
{
  void *v1;
  char *v2;
  char v3;

  *a1 = v1;
  v2 = (char *)(a1 + 1);
  if ((objc_msgSend(v1, sel_searchSectionHintRawValue) & 0x80000000) != 0)
    v3 = 13;
  else
    v3 = _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(v1, sel_searchSectionHintRawValue));
  *v2 = v3;
  return sub_1BC6E2FF0;
}

id sub_1BC6E2FF0(uint64_t a1)
{
  uint64_t v1;

  if (*(_BYTE *)(a1 + 8) == 13)
    v1 = 0xFFFFFFFFLL;
  else
    v1 = *(unsigned __int8 *)(a1 + 8);
  objc_msgSend(*(id *)a1, sel_setSearchSectionHintRawValue_, v1);
  return sub_1BC6E2660();
}

uint64_t FeedItem.associatedKeywords.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  int64_t v15;
  char v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t v28;
  unint64_t v29;
  char v30[32];
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v1 = objc_msgSend(v0, sel_keywords);
  type metadata accessor for Keyword();
  sub_1BC6EAF74();
  v2 = sub_1BC817D7C();

  v29 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) != 0)
  {
    v3 = sub_1BC8181FC();
    if (v3)
      goto LABEL_3;
LABEL_6:
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    v28 = sub_1BC6EAD84(v7);
    swift_bridgeObjectRelease();
    return v28;
  }
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    goto LABEL_6;
LABEL_3:
  v34 = MEMORY[0x1E0DEE9D8];
  sub_1BC6E8A7C(0, v3 & ~(v3 >> 63), 0);
  if (v29)
  {
    result = sub_1BC8181B4();
    v6 = 1;
  }
  else
  {
    result = sub_1BC6EACFC(v2);
    v6 = v8 & 1;
  }
  v31 = result;
  v32 = v5;
  v33 = v6;
  if ((v3 & 0x8000000000000000) == 0)
  {
    do
    {
      while (1)
      {
        v15 = v31;
        v14 = v32;
        v16 = v33;
        sub_1BC6EAA14(v31, v32, v33, v2, (void (*)(_QWORD))type metadata accessor for Keyword);
        v18 = v17;
        v19 = objc_msgSend(v17, sel_identifier);
        v20 = sub_1BC817AE8();
        v22 = v21;

        v23 = v34;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = sub_1BC6E8A7C(0, *(_QWORD *)(v23 + 16) + 1, 1);
          v23 = v34;
        }
        v25 = *(_QWORD *)(v23 + 16);
        v24 = *(_QWORD *)(v23 + 24);
        if (v25 >= v24 >> 1)
        {
          result = sub_1BC6E8A7C(v24 > 1, v25 + 1, 1);
          v23 = v34;
        }
        *(_QWORD *)(v23 + 16) = v25 + 1;
        v26 = v23 + 16 * v25;
        *(_QWORD *)(v26 + 32) = v20;
        *(_QWORD *)(v26 + 40) = v22;
        if (v29)
          break;
        v9 = sub_1BC6EA6C4(v15, v14, v16, v2);
        v11 = v10;
        v13 = v12;
        sub_1BC6EAF90(v15, v14, v16);
        v31 = v9;
        v32 = v11;
        v33 = v13 & 1;
        if (!--v3)
          goto LABEL_20;
      }
      if ((v16 & 1) == 0)
        goto LABEL_23;
      if (sub_1BC8181CC())
        swift_isUniquelyReferenced_nonNull_native();
      sub_1BC6EC860(0, &qword_1ED6BA7F0, (void (*)(uint64_t))type metadata accessor for Keyword, (void (*)(void))sub_1BC6EAF74);
      v27 = (void (*)(char *, _QWORD))sub_1BC817DA0();
      sub_1BC818250();
      v27(v30, 0);
      --v3;
    }
    while (v3);
LABEL_20:
    sub_1BC6EAF90(v31, v32, v33);
    swift_bridgeObjectRelease();
    v7 = v34;
    goto LABEL_21;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t FeedItem.associatedHKTypes.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = objc_msgSend(v0, sel_dataTypes);
  type metadata accessor for DataType();
  sub_1BC6EAF9C();
  v2 = sub_1BC817D7C();

  sub_1BC6E3714(v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  v5 = sub_1BC6EBF00(v4, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, (unint64_t *)&qword_1ED6B97F8, (void (*)(id *, uint64_t))sub_1BC7266C0);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BC6E33E0@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = objc_msgSend(*a1, sel_dataTypes);
  type metadata accessor for DataType();
  sub_1BC6EAF9C();
  v4 = sub_1BC817D7C();

  sub_1BC6E3714(v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = sub_1BC6EBF00(v6, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, (unint64_t *)&qword_1ED6B97F8, (void (*)(id *, uint64_t))sub_1BC7266C0);
  result = swift_bridgeObjectRelease();
  *a2 = v7;
  return result;
}

void sub_1BC6E34A0(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  unint64_t v6;
  void *v7;

  v2 = *a1;
  v3 = *a2;
  swift_bridgeObjectRetain();
  v4 = objc_msgSend(v3, sel_managedObjectContext);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1BC6EAFDC(v2, v5);
    swift_bridgeObjectRelease();

    sub_1BC6EB484(v6, (void (*)(_QWORD))type metadata accessor for DataType, (void (*)(void))sub_1BC6EAF9C, (void (*)(id *, uint64_t))sub_1BC72699C);
    swift_bridgeObjectRelease();
    type metadata accessor for DataType();
    sub_1BC6EAF9C();
    v7 = (void *)sub_1BC817D70();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setDataTypes_, v7);

  }
  else
  {
    sub_1BC8184B4();
    __break(1u);
  }
}

void FeedItem.associatedHKTypes.setter(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  unint64_t v5;
  void *v6;

  v3 = objc_msgSend(v1, sel_managedObjectContext);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BC6EAFDC(a1, v4);
    swift_bridgeObjectRelease();

    sub_1BC6EB484(v5, (void (*)(_QWORD))type metadata accessor for DataType, (void (*)(void))sub_1BC6EAF9C, (void (*)(id *, uint64_t))sub_1BC72699C);
    swift_bridgeObjectRelease();
    type metadata accessor for DataType();
    sub_1BC6EAF9C();
    v6 = (void *)sub_1BC817D70();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setDataTypes_, v6);

  }
  else
  {
    sub_1BC8184B4();
    __break(1u);
  }
}

void sub_1BC6E3714(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  id v11;
  unint64_t v12;
  int64_t v13;
  id v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;

  v1 = a1;
  v24 = MEMORY[0x1E0DEE9D8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC8181C0();
    type metadata accessor for DataType();
    sub_1BC6EAF9C();
    sub_1BC817DB8();
    v1 = v19;
    v17 = v20;
    v2 = v21;
    v3 = v22;
    v4 = v23;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v16 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_1BC81822C())
      goto LABEL_36;
    type metadata accessor for DataType();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v11 = v18;
    swift_unknownObjectRelease();
    v10 = v3;
    v8 = v4;
    if (!v18)
      goto LABEL_36;
LABEL_26:
    v14 = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, objc_msgSend(v11, sel_codeRaw));

    v3 = v10;
    v4 = v8;
    if (v14)
    {
      MEMORY[0x1BCCF48F0]();
      if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC817C98();
      sub_1BC817CD4();
      sub_1BC817C74();
      v3 = v10;
      v4 = v8;
    }
  }
  if (v4)
  {
    v8 = (v4 - 1) & v4;
    v9 = __clz(__rbit64(v4)) | (v3 << 6);
    v10 = v3;
LABEL_25:
    v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v9);
    if (!v11)
      goto LABEL_36;
    goto LABEL_26;
  }
  v10 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v10 >= v16)
      goto LABEL_36;
    v12 = *(_QWORD *)(v17 + 8 * v10);
    if (!v12)
    {
      v13 = v3 + 2;
      if (v3 + 2 >= v16)
        goto LABEL_36;
      v12 = *(_QWORD *)(v17 + 8 * v13);
      if (v12)
        goto LABEL_23;
      v13 = v3 + 3;
      if (v3 + 3 >= v16)
        goto LABEL_36;
      v12 = *(_QWORD *)(v17 + 8 * v13);
      if (v12)
        goto LABEL_23;
      v13 = v3 + 4;
      if (v3 + 4 >= v16)
        goto LABEL_36;
      v12 = *(_QWORD *)(v17 + 8 * v13);
      if (v12)
      {
LABEL_23:
        v10 = v13;
      }
      else
      {
        v10 = v3 + 5;
        if (v3 + 5 >= v16)
          goto LABEL_36;
        v12 = *(_QWORD *)(v17 + 8 * v10);
        if (!v12)
        {
          v15 = v3 + 6;
          while (v16 != v15)
          {
            v12 = *(_QWORD *)(v17 + 8 * v15++);
            if (v12)
            {
              v10 = v15 - 1;
              goto LABEL_24;
            }
          }
LABEL_36:
          sub_1BC6ECC4C();
          return;
        }
      }
    }
LABEL_24:
    v8 = (v12 - 1) & v12;
    v9 = __clz(__rbit64(v12)) + (v10 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t sub_1BC6E3A50(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1BC817D94();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1BC726514(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void (*FeedItem.associatedHKTypes.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  void *v1;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = objc_msgSend(v1, sel_dataTypes);
  v3[4] = type metadata accessor for DataType();
  v3[5] = sub_1BC6EAF9C();
  v5 = sub_1BC817D7C();

  sub_1BC6E3714(v5);
  v7 = v6;
  v3[6] = 0;
  swift_bridgeObjectRelease();
  v8 = sub_1BC6EBF00(v7, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, (unint64_t *)&qword_1ED6B97F8, (void (*)(id *, uint64_t))sub_1BC7266C0);
  swift_bridgeObjectRelease();
  *v3 = v8;
  return sub_1BC6E3CD0;
}

void sub_1BC6E3CD0(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  unint64_t v13;
  void *v14;

  v2 = *a1;
  v3 = **a1;
  v4 = (void *)(*a1)[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v5 = objc_msgSend(v4, sel_managedObjectContext);
    if (v5)
    {
      v6 = (void *)v2[3];
      v7 = v5;
      v8 = sub_1BC6EAFDC(v3, v7);

      swift_bridgeObjectRelease();
      sub_1BC6EB484(v8, (void (*)(_QWORD))type metadata accessor for DataType, (void (*)(void))sub_1BC6EAF9C, (void (*)(id *, uint64_t))sub_1BC72699C);
      swift_bridgeObjectRelease();
      v9 = (void *)sub_1BC817D70();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setDataTypes_, v9);

      swift_bridgeObjectRelease();
LABEL_6:
      free(v2);
      return;
    }
  }
  else
  {
    v10 = objc_msgSend((id)(*a1)[3], sel_managedObjectContext);
    if (v10)
    {
      v11 = (void *)v2[3];
      v12 = v10;
      v13 = sub_1BC6EAFDC(v3, v12);

      swift_bridgeObjectRelease();
      sub_1BC6EB484(v13, (void (*)(_QWORD))type metadata accessor for DataType, (void (*)(void))sub_1BC6EAF9C, (void (*)(id *, uint64_t))sub_1BC72699C);
      swift_bridgeObjectRelease();
      v14 = (void *)sub_1BC817D70();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_setDataTypes_, v14);

      goto LABEL_6;
    }
  }
  sub_1BC8184B4();
  __break(1u);
}

uint64_t sub_1BC6E3EE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = FeedItem.associatedKeywords.getter();
  *a1 = result;
  return result;
}

void sub_1BC6E3F0C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  FeedItem.associatedKeywords.setter(v0);
}

void FeedItem.associatedKeywords.setter(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  unint64_t v5;
  void *v6;

  v3 = objc_msgSend(v1, sel_managedObjectContext);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BC6EC084(a1, v4);
    swift_bridgeObjectRelease();

    sub_1BC6EB484(v5, (void (*)(_QWORD))type metadata accessor for Keyword, (void (*)(void))sub_1BC6EAF74, (void (*)(id *, uint64_t))sub_1BC726C68);
    swift_bridgeObjectRelease();
    type metadata accessor for Keyword();
    sub_1BC6EAF74();
    v6 = (void *)sub_1BC817D70();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setKeywords_, v6);

    sub_1BC6E2660();
  }
  else
  {
    sub_1BC8184B4();
    __break(1u);
  }
}

void (*FeedItem.associatedKeywords.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[3] = v1;
  *a1 = FeedItem.associatedKeywords.getter();
  return sub_1BC6E40A0;
}

void sub_1BC6E40A0(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  void *v9;
  id v10;
  void *v11;
  unint64_t v12;
  void *v13;
  id v14;

  v3 = *(_QWORD *)a1;
  v4 = *(void **)(a1 + 24);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v5 = objc_msgSend(v4, sel_managedObjectContext);
    if (v5)
    {
      v6 = *(void **)(a1 + 24);
      v7 = v5;
      v8 = sub_1BC6EC084(v3, v7);

      swift_bridgeObjectRelease();
      sub_1BC6EB484(v8, (void (*)(_QWORD))type metadata accessor for Keyword, (void (*)(void))sub_1BC6EAF74, (void (*)(id *, uint64_t))sub_1BC726C68);
      swift_bridgeObjectRelease();
      type metadata accessor for Keyword();
      sub_1BC6EAF74();
      v9 = (void *)sub_1BC817D70();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setKeywords_, v9);

      sub_1BC6E2660();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v10 = objc_msgSend(*(id *)(a1 + 24), sel_managedObjectContext);
    if (v10)
    {
      v11 = *(void **)(a1 + 24);
      v14 = v10;
      v12 = sub_1BC6EC084(v3, v14);

      swift_bridgeObjectRelease();
      sub_1BC6EB484(v12, (void (*)(_QWORD))type metadata accessor for Keyword, (void (*)(void))sub_1BC6EAF74, (void (*)(id *, uint64_t))sub_1BC726C68);
      swift_bridgeObjectRelease();
      type metadata accessor for Keyword();
      sub_1BC6EAF74();
      v13 = (void *)sub_1BC817D70();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_setKeywords_, v13);

      sub_1BC6E2660();
      return;
    }
  }
  sub_1BC8184B4();
  __break(1u);
}

uint64_t FeedItem.associatedProfiles.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  int64_t v19;
  char v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(char *, _QWORD);
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  unint64_t v32;
  char v33[32];
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;

  v31 = type metadata accessor for UserProfile();
  v1 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v3 = (char *)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(v0, sel_profiles);
  type metadata accessor for Profile();
  sub_1BC6EC424();
  v5 = sub_1BC817D7C();

  v32 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = sub_1BC8181FC();
    if (v6)
      goto LABEL_3;
LABEL_6:
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
LABEL_23:
    v29 = sub_1BC6EB5FC(v10);
    swift_bridgeObjectRelease();
    return v29;
  }
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
    goto LABEL_6;
LABEL_3:
  v37 = MEMORY[0x1E0DEE9D8];
  sub_1BC6E8AC4(0, v6 & ~(v6 >> 63), 0);
  if (v32)
  {
    result = sub_1BC8181B4();
    v9 = 1;
  }
  else
  {
    result = sub_1BC6EACFC(v5);
    v9 = v11 & 1;
  }
  v34 = result;
  v35 = v8;
  v36 = v9;
  if ((v6 & 0x8000000000000000) == 0)
  {
    v12 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v5 < 0)
      v12 = v5;
    v30[1] = v12;
    do
    {
      while (1)
      {
        v19 = v34;
        v18 = v35;
        v20 = v36;
        sub_1BC6EAA14(v34, v35, v36, v5, (void (*)(_QWORD))type metadata accessor for Profile);
        v22 = v21;
        v23 = (void *)Profile.hkProfileIdentifier.getter();
        v24 = objc_msgSend(v23, sel_identifier);
        sub_1BC816F24();

        *(_QWORD *)&v3[*(int *)(v31 + 20)] = v23;
        v25 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC6E8AC4(0, *(_QWORD *)(v25 + 16) + 1, 1);
          v25 = v37;
        }
        v27 = *(_QWORD *)(v25 + 16);
        v26 = *(_QWORD *)(v25 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1BC6E8AC4(v26 > 1, v27 + 1, 1);
          v25 = v37;
        }
        *(_QWORD *)(v25 + 16) = v27 + 1;
        result = sub_1BC6ECBA4((uint64_t)v3, v25+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v27, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
        if (v32)
          break;
        v13 = sub_1BC6EA6C4(v19, v18, v20, v5);
        v15 = v14;
        v17 = v16;
        sub_1BC6EAF90(v19, v18, v20);
        v34 = v13;
        v35 = v15;
        v36 = v17 & 1;
        if (!--v6)
          goto LABEL_22;
      }
      if ((v20 & 1) == 0)
        goto LABEL_25;
      if (sub_1BC8181CC())
        swift_isUniquelyReferenced_nonNull_native();
      sub_1BC6EC860(0, (unint64_t *)&qword_1ED6BA450, (void (*)(uint64_t))type metadata accessor for Profile, (void (*)(void))sub_1BC6EC424);
      v28 = (void (*)(char *, _QWORD))sub_1BC817DA0();
      sub_1BC818250();
      v28(v33, 0);
      --v6;
    }
    while (v6);
LABEL_22:
    sub_1BC6EAF90(v34, v35, v36);
    swift_bridgeObjectRelease();
    v10 = v37;
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void sub_1BC6E464C(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;

  v2 = *a1;
  v3 = *a2;
  swift_bridgeObjectRetain();
  v4 = objc_msgSend(v3, sel_managedObjectContext);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1BC6EC440(v2, (uint64_t)v5);

    sub_1BC6EB484((unint64_t)v6, (void (*)(_QWORD))type metadata accessor for Profile, (void (*)(void))sub_1BC6EC424, (void (*)(id *, uint64_t))sub_1BC726F34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for Profile();
    sub_1BC6EC424();
    v7 = (void *)sub_1BC817D70();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setProfiles_, v7);

  }
  else
  {
    sub_1BC8184B4();
    __break(1u);
  }
}

void FeedItem.associatedProfiles.setter(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  void *v6;

  v3 = objc_msgSend(v1, sel_managedObjectContext);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BC6EC440(a1, (uint64_t)v4);

    sub_1BC6EB484((unint64_t)v5, (void (*)(_QWORD))type metadata accessor for Profile, (void (*)(void))sub_1BC6EC424, (void (*)(id *, uint64_t))sub_1BC726F34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for Profile();
    sub_1BC6EC424();
    v6 = (void *)sub_1BC817D70();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setProfiles_, v6);

  }
  else
  {
    sub_1BC8184B4();
    __break(1u);
  }
}

void (*FeedItem.associatedProfiles.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[3] = v1;
  *a1 = FeedItem.associatedProfiles.getter();
  return sub_1BC6E4904;
}

void sub_1BC6E4904(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;

  v3 = *(_QWORD *)a1;
  v4 = *(void **)(a1 + 24);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v5 = objc_msgSend(v4, sel_managedObjectContext);
    if (v5)
    {
      v6 = *(void **)(a1 + 24);
      v7 = v5;
      v8 = sub_1BC6EC440(v3, (uint64_t)v7);

      sub_1BC6EB484((unint64_t)v8, (void (*)(_QWORD))type metadata accessor for Profile, (void (*)(void))sub_1BC6EC424, (void (*)(id *, uint64_t))sub_1BC726F34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for Profile();
      sub_1BC6EC424();
      v9 = (void *)sub_1BC817D70();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setProfiles_, v9);

      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v10 = objc_msgSend(*(id *)(a1 + 24), sel_managedObjectContext);
    if (v10)
    {
      v11 = *(void **)(a1 + 24);
      v14 = v10;
      v12 = sub_1BC6EC440(v3, (uint64_t)v14);

      sub_1BC6EB484((unint64_t)v12, (void (*)(_QWORD))type metadata accessor for Profile, (void (*)(void))sub_1BC6EC424, (void (*)(id *, uint64_t))sub_1BC726F34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for Profile();
      sub_1BC6EC424();
      v13 = (void *)sub_1BC817D70();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_setProfiles_, v13);

      return;
    }
  }
  sub_1BC8184B4();
  __break(1u);
}

uint64_t FeedItem.associatedSharableModelReferences.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  int64_t v15;
  char v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t v28;
  unint64_t v29;
  char v30[32];
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v1 = objc_msgSend(v0, sel_sharableModelReferences);
  type metadata accessor for SharableModelReference();
  sub_1BC6EC844();
  v2 = sub_1BC817D7C();

  v29 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) != 0)
  {
    v3 = sub_1BC8181FC();
    if (v3)
      goto LABEL_3;
LABEL_6:
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    v28 = sub_1BC6EBA5C(v7);
    swift_bridgeObjectRelease();
    return v28;
  }
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    goto LABEL_6;
LABEL_3:
  v34 = MEMORY[0x1E0DEE9D8];
  sub_1BC6E8AF0(0, v3 & ~(v3 >> 63), 0);
  if (v29)
  {
    result = sub_1BC8181B4();
    v6 = 1;
  }
  else
  {
    result = sub_1BC6EACFC(v2);
    v6 = v8 & 1;
  }
  v31 = result;
  v32 = v5;
  v33 = v6;
  if ((v3 & 0x8000000000000000) == 0)
  {
    do
    {
      while (1)
      {
        v15 = v31;
        v14 = v32;
        v16 = v33;
        sub_1BC6EAA14(v31, v32, v33, v2, (void (*)(_QWORD))type metadata accessor for SharableModelReference);
        v18 = v17;
        v19 = objc_msgSend(v17, sel_identifier);
        v20 = sub_1BC817AE8();
        v22 = v21;

        v23 = v34;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = sub_1BC6E8AF0(0, *(_QWORD *)(v23 + 16) + 1, 1);
          v23 = v34;
        }
        v25 = *(_QWORD *)(v23 + 16);
        v24 = *(_QWORD *)(v23 + 24);
        if (v25 >= v24 >> 1)
        {
          result = sub_1BC6E8AF0(v24 > 1, v25 + 1, 1);
          v23 = v34;
        }
        *(_QWORD *)(v23 + 16) = v25 + 1;
        v26 = v23 + 16 * v25;
        *(_QWORD *)(v26 + 32) = v20;
        *(_QWORD *)(v26 + 40) = v22;
        if (v29)
          break;
        v9 = sub_1BC6EA6C4(v15, v14, v16, v2);
        v11 = v10;
        v13 = v12;
        sub_1BC6EAF90(v15, v14, v16);
        v31 = v9;
        v32 = v11;
        v33 = v13 & 1;
        if (!--v3)
          goto LABEL_20;
      }
      if ((v16 & 1) == 0)
        goto LABEL_23;
      if (sub_1BC8181CC())
        swift_isUniquelyReferenced_nonNull_native();
      sub_1BC6EC860(0, &qword_1ED6BA7E8, (void (*)(uint64_t))type metadata accessor for SharableModelReference, (void (*)(void))sub_1BC6EC844);
      v27 = (void (*)(char *, _QWORD))sub_1BC817DA0();
      sub_1BC818250();
      v27(v30, 0);
      --v3;
    }
    while (v3);
LABEL_20:
    sub_1BC6EAF90(v31, v32, v33);
    swift_bridgeObjectRelease();
    v7 = v34;
    goto LABEL_21;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

void sub_1BC6E4E38(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  unint64_t v7;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  swift_bridgeObjectRetain();
  v4 = objc_msgSend(v3, sel_managedObjectContext);
  if (v4)
  {
    v5 = v4;
    v6 = v3;
    v7 = sub_1BC6EC8C4(v2, (uint64_t)v5, v6);

    sub_1BC6EB484(v7, (void (*)(_QWORD))type metadata accessor for SharableModelReference, (void (*)(void))sub_1BC6EC844, (void (*)(id *, uint64_t))sub_1BC7273AC);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for SharableModelReference();
    sub_1BC6EC844();
    v8 = (void *)sub_1BC817D70();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSharableModelReferences_, v8);

  }
  else
  {
    sub_1BC8184B4();
    __break(1u);
  }
}

void FeedItem.associatedSharableModelReferences.setter(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  unint64_t v7;
  void *v8;

  v2 = v1;
  v4 = objc_msgSend(v2, sel_managedObjectContext);
  if (v4)
  {
    v5 = v4;
    v6 = v2;
    v7 = sub_1BC6EC8C4(a1, (uint64_t)v5, v6);

    sub_1BC6EB484(v7, (void (*)(_QWORD))type metadata accessor for SharableModelReference, (void (*)(void))sub_1BC6EC844, (void (*)(id *, uint64_t))sub_1BC7273AC);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for SharableModelReference();
    sub_1BC6EC844();
    v8 = (void *)sub_1BC817D70();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSharableModelReferences_, v8);

  }
  else
  {
    sub_1BC8184B4();
    __break(1u);
  }
}

void (*FeedItem.associatedSharableModelReferences.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[3] = v1;
  *a1 = FeedItem.associatedSharableModelReferences.getter();
  return sub_1BC6E5114;
}

void sub_1BC6E5114(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  unint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  void *v15;
  id v16;

  v3 = *(_QWORD *)a1;
  v4 = *(void **)(a1 + 24);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v5 = objc_msgSend(v4, sel_managedObjectContext);
    if (v5)
    {
      v6 = v5;
      v7 = *(id *)(a1 + 24);
      v8 = v6;
      v9 = sub_1BC6EC8C4(v3, (uint64_t)v8, v7);

      sub_1BC6EB484(v9, (void (*)(_QWORD))type metadata accessor for SharableModelReference, (void (*)(void))sub_1BC6EC844, (void (*)(id *, uint64_t))sub_1BC7273AC);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for SharableModelReference();
      sub_1BC6EC844();
      v10 = (void *)sub_1BC817D70();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_setSharableModelReferences_, v10);

      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v11 = objc_msgSend(*(id *)(a1 + 24), sel_managedObjectContext);
    if (v11)
    {
      v12 = *(void **)(a1 + 24);
      v16 = v11;
      v13 = v12;
      v14 = sub_1BC6EC8C4(v3, (uint64_t)v16, v13);

      sub_1BC6EB484(v14, (void (*)(_QWORD))type metadata accessor for SharableModelReference, (void (*)(void))sub_1BC6EC844, (void (*)(id *, uint64_t))sub_1BC7273AC);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for SharableModelReference();
      sub_1BC6EC844();
      v15 = (void *)sub_1BC817D70();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_setSharableModelReferences_, v15);

      return;
    }
  }
  sub_1BC8184B4();
  __break(1u);
}

uint64_t FeedItem.relevantDateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  void *v28;
  id v29;
  void *v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;

  v3 = sub_1BC816C9C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v49 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6B9BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v44 - v10;
  v12 = sub_1BC816EF4();
  v13 = *(_QWORD **)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v47 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v48 = (char *)&v44 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v44 - v19;
  MEMORY[0x1E0C80A78](v18);
  v51 = (char *)&v44 - v21;
  v22 = v1;
  v23 = objc_msgSend(v1, sel_relevantStartDate);
  if (v23)
  {
    v24 = v23;
    v45 = v4;
    v46 = v3;
    v50 = a1;
    sub_1BC816ED0();

    v25 = (void (*)(char *, char *, uint64_t))v13[4];
    v25(v11, v20, v12);
    v26 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v13[7];
    v26(v11, 0, 1, v12);
    v27 = (unsigned int (*)(char *, uint64_t, uint64_t))v13[6];
    if (v27(v11, 1, v12) == 1)
    {
      v9 = v11;
    }
    else
    {
      v25(v51, v11, v12);
      v28 = v22;
      v29 = objc_msgSend(v22, sel_relevantEndDate);
      if (v29)
      {
        v30 = v29;
        sub_1BC816ED0();

        v25(v9, v20, v12);
        v26(v9, 0, 1, v12);
        if (v27(v9, 1, v12) != 1)
        {
          v31 = v48;
          v25(v48, v9, v12);
          v32 = (void (*)(char *, char *, uint64_t))v13[2];
          v33 = v51;
          v32(v20, v51, v12);
          v32(v47, v31, v12);
          v34 = v49;
          sub_1BC816C84();
          objc_msgSend(v28, sel_relevantRampUpTime);
          v36 = v35;
          objc_msgSend(v28, sel_relevantRampDownTime);
          v38 = v37;
          v39 = (void (*)(char *, uint64_t))v13[1];
          v39(v31, v12);
          v39(v33, v12);
          v40 = v50;
          (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v50, v34, v46);
          v41 = type metadata accessor for RelevantDateInterval();
          *(_QWORD *)(v40 + *(int *)(v41 + 20)) = v36;
          *(_QWORD *)(v40 + *(int *)(v41 + 24)) = v38;
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
        }
      }
      else
      {
        v26(v9, 1, 1, v12);
      }
      ((void (*)(char *, uint64_t))v13[1])(v51, v12);
    }
    a1 = v50;
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v13[7])(v11, 1, 1, v12);
    v9 = v11;
  }
  sub_1BC6E148C((uint64_t)v9);
  v43 = type metadata accessor for RelevantDateInterval();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(a1, 1, 1, v43);
}

uint64_t sub_1BC6E5754@<X0>(uint64_t a1@<X8>)
{
  return FeedItem.relevantDateInterval.getter(a1);
}

uint64_t sub_1BC6E5774(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;

  sub_1BC6ECA48(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECB08(a1, (uint64_t)v4, v5);
  return FeedItem.relevantDateInterval.setter((uint64_t)v4);
}

uint64_t FeedItem.relevantDateInterval.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  double v39;
  double v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;

  v2 = sub_1BC816C9C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA48(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v47 = (uint64_t)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v46 = (uint64_t)&v44 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v44 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v44 - v14;
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6B9BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v44 - v20;
  v48 = a1;
  sub_1BC6ECB08(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
  v22 = type metadata accessor for RelevantDateInterval();
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48);
  v24 = v23(v15, 1, v22);
  v44 = v3;
  v45 = v2;
  if (v24 == 1)
  {
    sub_1BC6ED784((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
    v25 = sub_1BC816EF4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v21, 1, 1, v25);
    v26 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v15, v2);
    sub_1BC6ED784((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for RelevantDateInterval);
    sub_1BC816C90();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v27 = sub_1BC816EF4();
    v28 = *(_QWORD *)(v27 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v21, 0, 1, v27);
    v26 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v21, 1, v27) != 1)
    {
      v26 = (void *)sub_1BC816EAC();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v27);
    }
  }
  objc_msgSend(v49, sel_setRelevantStartDate_, v26, v44, v45);

  v29 = v48;
  sub_1BC6ECB08(v48, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
  if (v23(v13, 1, v22) == 1)
  {
    sub_1BC6ED784((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
    v30 = sub_1BC816EF4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v19, 1, 1, v30);
    v31 = 0;
  }
  else
  {
    v33 = v44;
    v32 = v45;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v5, v13, v45);
    sub_1BC6ED784((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for RelevantDateInterval);
    sub_1BC816C78();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v32);
    v34 = sub_1BC816EF4();
    v35 = *(_QWORD *)(v34 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v19, 0, 1, v34);
    v31 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v19, 1, v34) != 1)
    {
      v31 = (void *)sub_1BC816EAC();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v34);
    }
  }
  v36 = v49;
  objc_msgSend(v49, sel_setRelevantEndDate_, v31);

  v37 = (uint64_t (*)(_QWORD))sub_1BC6ECA48;
  v38 = v46;
  sub_1BC6ECB08(v29, v46, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
  v39 = 0.0;
  v40 = 0.0;
  if (v23((char *)v38, 1, v22) != 1)
  {
    v40 = *(double *)(v38 + *(int *)(v22 + 20));
    v37 = (uint64_t (*)(_QWORD))type metadata accessor for RelevantDateInterval;
  }
  sub_1BC6ED784(v38, v37);
  objc_msgSend(v36, sel_setRelevantRampUpTime_, v40);
  v41 = (uint64_t (*)(_QWORD))sub_1BC6ECA48;
  v42 = v47;
  sub_1BC6ECB08(v29, v47, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
  if (v23((char *)v42, 1, v22) != 1)
  {
    v39 = *(double *)(v42 + *(int *)(v22 + 24));
    v41 = (uint64_t (*)(_QWORD))type metadata accessor for RelevantDateInterval;
  }
  sub_1BC6ED784(v42, v41);
  objc_msgSend(v36, sel_setRelevantRampDownTime_, v39);
  return sub_1BC6ED784(v29, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
}

void (*FeedItem.relevantDateInterval.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  void *v5;

  *a1 = v1;
  sub_1BC6ECA48(0);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  a1[1] = malloc(v4);
  v5 = malloc(v4);
  a1[2] = v5;
  FeedItem.relevantDateInterval.getter((uint64_t)v5);
  return sub_1BC6E5D30;
}

void sub_1BC6E5D30(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_1BC6ECB08(*(_QWORD *)(a1 + 16), (uint64_t)v2, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
    FeedItem.relevantDateInterval.setter((uint64_t)v2);
    sub_1BC6ED784((uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
  }
  else
  {
    FeedItem.relevantDateInterval.setter(*(_QWORD *)(a1 + 16));
  }
  free(v3);
  free(v2);
}

uint64_t FeedItem.userInterface.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;

  v1 = objc_msgSend(v0, sel_storyboardIdentifier);
  if (v1)
  {
    v2 = v1;
  }
  else
  {
    v3 = objc_msgSend(v0, sel_viewControllerClassName);
    if (v3)
    {
      v2 = v3;
    }
    else
    {
      v4 = objc_msgSend(v0, sel_viewClassName);
      if (v4)
      {
        v2 = v4;
      }
      else
      {
        v5 = objc_msgSend(v0, sel_hostingControllerClassName);
        if (v5)
        {
          v2 = v5;
        }
        else
        {
          v6 = objc_msgSend(v0, sel_contentConfigurationProviderClassName);
          if (v6)
          {
            v2 = v6;
          }
          else
          {
            v7 = objc_msgSend(v0, sel_listContentConfigurationProviderClassName);
            if (!v7)
              return 0;
            v2 = v7;
          }
        }
      }
    }
  }
  v8 = sub_1BC817AE8();

  return v8;
}

void FeedItem.userInterface.setter(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;

  objc_msgSend(v3, sel_setStoryboardIdentifier_, 0);
  objc_msgSend(v3, sel_setViewClassName_, 0);
  objc_msgSend(v3, sel_setViewControllerClassName_, 0);
  objc_msgSend(v3, sel_setHostingControllerClassName_, 0);
  __asm { BR              X10 }
}

void sub_1BC6E5F74(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;

  v22 = (void *)sub_1BC817AC4();
  objc_msgSend(v21, sel_setViewControllerClassName_, v22);
  sub_1BC6ECABC(v20, v19, v18);

}

void (*FeedItem.userInterface.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)a1 = FeedItem.userInterface.getter();
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BC6E6048;
}

void sub_1BC6E6048(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_1BC6ECAD4(*(_QWORD *)a1, v3, v4);
    FeedItem.userInterface.setter(v2, v3, v4);
    sub_1BC6ECABC(v2, v3, v4);
  }
  else
  {
    FeedItem.userInterface.setter(*(_QWORD *)a1, v3, v4);
  }
}

Swift::String_optional __swiftcall FeedItem.displayTitle(in:)(HKHealthStore in)
{
  void *v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  unint64_t v31;
  Swift::String_optional result;
  uint64_t v33;

  v3 = objc_msgSend(v1, sel_dataTypes);
  type metadata accessor for DataType();
  sub_1BC6EAF9C();
  v4 = sub_1BC817D7C();

  sub_1BC6E3714(v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = sub_1BC6EBF00(v6, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, (unint64_t *)&qword_1ED6B97F8, (void (*)(id *, uint64_t))sub_1BC7266C0);
  swift_bridgeObjectRelease();
  v8 = (void *)sub_1BC6E6524(v7, (unint64_t *)&qword_1ED6BB1D0);
  swift_bridgeObjectRelease();
  if (v8)
  {
    v9 = -[objc_class displayTypeController](in.super.isa, sel_displayTypeController);
    if (v9)
    {
      v11 = v9;
      v12 = objc_msgSend(v9, sel_displayTypeForObjectType_, v8);

      if (v12)
      {
        v13 = objc_msgSend(v12, sel_localization);

        v14 = objc_msgSend(v13, sel_displayName);
        v15 = sub_1BC817AE8();
        v17 = v16;

        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
  v18 = objc_msgSend(v1, sel_localizedTitle);
  if (!v18)
  {
    if (qword_1ED6BACE0 != -1)
      swift_once();
    v19 = sub_1BC817590();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED6BACC0);
    v20 = v1;
    v21 = sub_1BC81756C();
    v22 = sub_1BC817E84();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v33 = v24;
      *(_DWORD *)v23 = 136315138;
      v25 = v20;
      v26 = objc_msgSend(v25, sel_description);
      v27 = sub_1BC817AE8();
      v29 = v28;

      sub_1BC6E14D8(v27, v29, &v33);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v21, v22, "This is probably a bug and should not happen. The description is %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v24, -1, -1);
      MEMORY[0x1BCCF5BA4](v23, -1, -1);

    }
    else
    {

    }
    if (!objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall))
    {
      v15 = 0;
      v17 = 0xE000000000000000;
      goto LABEL_14;
    }
    v18 = objc_msgSend(v20, sel_description);
  }
  v30 = v18;
  v15 = sub_1BC817AE8();
  v17 = v31;

LABEL_14:
  v9 = (id)v15;
  v10 = (void *)v17;
LABEL_18:
  result.value._object = v10;
  result.value._countAndFlagsBits = (uint64_t)v9;
  return result;
}

uint64_t sub_1BC6E6470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  result = sub_1BC7D0860(a1);
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v7 = type metadata accessor for UserProfile();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 1;
  }
  else
  {
    sub_1BC6EAC60(result, v5, a1, a2);
    v7 = type metadata accessor for UserProfile();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 0;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t sub_1BC6E6510(uint64_t a1)
{
  return sub_1BC6E6524(a1, &qword_1ED6B6390);
}

uint64_t sub_1BC6E6524(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v4 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v5 = sub_1BC8181B4();
    v7 = v6;
    v8 = sub_1BC818244();
    v10 = MEMORY[0x1BCCF4E84](v5, v7, v8, v9);
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
LABEL_3:
      sub_1BC6EAF90(v5, v7, v4 != 0);
      return 0;
    }
LABEL_7:
    sub_1BC6EA7A8(v5, v7, v4 != 0, a1, a2);
    v11 = v15;
    sub_1BC6EAF90(v5, v7, v4 != 0);
    return v11;
  }
  result = sub_1BC6EACFC(a1);
  if ((v14 & 1) == 0)
  {
    v7 = v13;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v13)
    {
      v5 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void FeedItem.hostViewStyle.getter(char *a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  swift_getObjectType();
  v3 = objc_msgSend(v1, sel_hostViewStyleRawValue);
  v4 = sub_1BC817AE8();
  v6 = v5;

  swift_bridgeObjectRelease();
  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v7)
    goto LABEL_7;
  v8 = objc_msgSend(v1, sel_hostViewStyleRawValue);
  sub_1BC817AE8();

  v9 = sub_1BC818568();
  swift_bridgeObjectRelease();
  if (!v9)
  {
LABEL_12:
    v10 = 0;
    goto LABEL_13;
  }
  if (v9 != 1)
  {
LABEL_7:
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v11 = sub_1BC817590();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED6BB5D0);
    v12 = v1;
    v13 = sub_1BC81756C();
    v14 = sub_1BC817E90();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v28 = a1;
      v16 = swift_slowAlloc();
      v29 = v16;
      *(_DWORD *)v15 = 136446722;
      v17 = sub_1BC818814();
      sub_1BC6E14D8(v17, v18, &v29);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      v19 = objc_msgSend(v12, sel_hostViewStyleRawValue);
      v20 = sub_1BC817AE8();
      v22 = v21;

      sub_1BC6E14D8(v20, v22, &v29);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2080;
      v23 = objc_msgSend(v12, sel_description);
      v24 = sub_1BC817AE8();
      v26 = v25;

      sub_1BC6E14D8(v24, v26, &v29);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v13, v14, "%{public}s Unexpected host view style raw value %{public}s for feed item: %s, privacy: .private)", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy();
      v27 = v16;
      a1 = v28;
      MEMORY[0x1BCCF5BA4](v27, -1, -1);
      MEMORY[0x1BCCF5BA4](v15, -1, -1);

    }
    else
    {

    }
    goto LABEL_12;
  }
  v10 = 1;
LABEL_13:
  *a1 = v10;
}

void sub_1BC6E698C(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setHostViewStyleRawValue_, v3);

}

void FeedItem.hostViewStyle.setter()
{
  void *v0;
  id v1;

  v1 = (id)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setHostViewStyleRawValue_, v1);

}

void (*FeedItem.hostViewStyle.modify(uint64_t a1))(void **a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  FeedItem.hostViewStyle.getter((char *)(a1 + 8));
  return sub_1BC6E6AC4;
}

void sub_1BC6E6AC4(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  v2 = (id)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setHostViewStyleRawValue_, v2);

}

id static FeedItem.fetchRequest(predicate:)(uint64_t a1)
{
  id v2;

  v2 = _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0();
  objc_msgSend(v2, sel_setPredicate_, a1);
  return v2;
}

uint64_t FeedItem.__allocating_init(context:uniqueIdentifier:userInterface:pluginPackage:userData:dateSubmitted:relevantDateRange:contentKind:searchSectionHint:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 *a13, unsigned __int8 a14)
{
  objc_class *v14;
  objc_class *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  unsigned __int8 v38;
  void *v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  void *v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  char *v67;
  int v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;

  v15 = v14;
  v66 = a7;
  v65 = a6;
  v63 = a4;
  v64 = a5;
  v62 = a2;
  v17 = type metadata accessor for RelevantDateInterval();
  v60 = *(_QWORD *)(v17 - 8);
  v61 = v17;
  MEMORY[0x1E0C80A78](v17);
  v57 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA48(0);
  MEMORY[0x1E0C80A78](v19);
  v59 = (uint64_t)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECAEC(0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v58 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v56 - v24;
  v26 = sub_1BC816C9C();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v67 = (char *)&v56 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = *a13;
  v29 = (void *)objc_opt_self();
  v30 = (void *)sub_1BC817AC4();
  v31 = objc_msgSend(v29, sel_entityForName_inManagedObjectContext_, v30, a1);

  if (v31)
  {
    v70 = a12;
    v71 = a11;
    v32 = a9;
    v33 = objc_allocWithZone(v15);
    v69 = a1;
    v34 = objc_msgSend(v33, sel_initWithEntity_insertIntoManagedObjectContext_, v31, a1);
    v35 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
    objc_msgSend(v34, sel_setUniqueIdentifier_, v35);

    FeedItem.userInterface.setter(v63, v64, v65);
    v36 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
    objc_msgSend(v34, sel_setPluginPackage_, v36);

    if (a10 >> 60 == 15)
    {
      v37 = 0;
    }
    else
    {
      sub_1BC6ECBE8(a9, a10);
      v37 = (void *)sub_1BC816E58();
      sub_1BC6ECB4C(a9, a10);
    }
    v38 = a14;
    objc_msgSend(v34, sel_setUserData_, v37);

    v39 = (void *)sub_1BC816EAC();
    objc_msgSend(v34, sel_setDateSubmitted_, v39);

    sub_1BC6ECB08(v70, (uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BC6ECAEC);
    v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    if (v40((uint64_t)v25, 1, v26) == 1)
    {
      sub_1BC6ED784((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BC6ECAEC);
      v41 = v69;
    }
    else
    {
      LODWORD(v66) = a14;
      v42 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
      v43 = v67;
      v42(v67, v25, v26);
      v44 = (uint64_t)v58;
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v58, v43, v26);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v44, 0, 1, v26);
      if (v40(v44, 1, v26) == 1)
      {
        sub_1BC6ED784(v44, (uint64_t (*)(_QWORD))sub_1BC6ECAEC);
        v45 = 1;
        v41 = v69;
        v32 = a9;
        v46 = v61;
        v47 = v59;
      }
      else
      {
        v48 = v44;
        v49 = (uint64_t)v57;
        v42(v57, (char *)v48, v26);
        v46 = v61;
        *(_QWORD *)(v49 + *(int *)(v61 + 20)) = 0;
        *(_QWORD *)(v49 + *(int *)(v46 + 24)) = 0;
        v47 = v59;
        sub_1BC6ECBA4(v49, v59, (uint64_t (*)(_QWORD))type metadata accessor for RelevantDateInterval);
        v45 = 0;
        v41 = v69;
        v32 = a9;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v47, v45, 1, v46);
      FeedItem.relevantDateInterval.setter(v47);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v67, v26);
      v38 = v66;
    }
    v72 = v68;
    ContentKind.rawValue.getter();
    v50 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
    objc_msgSend(v34, sel_setContentKindRawValue_, v50);

    sub_1BC6E2660();
    if (v38 == 13)
      v51 = 0xFFFFFFFFLL;
    else
      v51 = v38;
    objc_msgSend(v34, sel_setSearchSectionHintRawValue_, v51);
    sub_1BC6E2660();
    v52 = (void *)sub_1BC817AC4();
    objc_msgSend(v34, sel_setFavoriteStatusRawValue_, v52);

    v53 = (void *)sub_1BC817AC4();
    objc_msgSend(v34, sel_setHostViewStyleRawValue_, v53);

    sub_1BC6ECB4C(v32, a10);
    sub_1BC6ED784(v70, (uint64_t (*)(_QWORD))sub_1BC6ECAEC);
    v54 = sub_1BC816EF4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v71, v54);
    return (uint64_t)v34;
  }
  else
  {
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

uint64_t FeedItem.addFeatureTag<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t result;

  v5 = v4;
  swift_getDynamicType();
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a3 + 8) + 16))(a2);
  v11 = v10;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a2, a4);
  v14 = v13;
  v15 = objc_msgSend(v5, sel_managedObjectContext);
  if (v15)
  {
    v16 = v15;
    _s14HealthPlatform8FeedItemC9removeTag4nameySS_tF_0(v9, v11);
    type metadata accessor for EncodedFeatureTag();
    v17 = v16;
    swift_bridgeObjectRetain();
    sub_1BC6ECBE8(v12, v14);
    v18 = (void *)EncodedFeatureTag.__allocating_init(context:name:data:)(v17, v9, v11, v12, v14);
    objc_msgSend(v5, sel_addFeatureTagsObject_, v18);

    sub_1BC6ECB60(v12, v14);
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

void FeedItem.addFeatureTag(name:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  void *v4;
  id v9;
  void *v10;
  id v11;
  id v12;

  v9 = objc_msgSend(v4, sel_managedObjectContext);
  if (v9)
  {
    v10 = v9;
    _s14HealthPlatform8FeedItemC9removeTag4nameySS_tF_0(a1, a2);
    type metadata accessor for EncodedFeatureTag();
    v11 = v10;
    swift_bridgeObjectRetain();
    sub_1BC6ECBE8(a3, a4);
    v12 = (id)EncodedFeatureTag.__allocating_init(context:name:data:)(v11, a1, a2, a3, a4);
    objc_msgSend(v4, sel_addFeatureTagsObject_, v12);

  }
  else
  {
    sub_1BC8184B4();
    __break(1u);
  }
}

uint64_t FeedItem.featureTag<A>(kind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void *v5;
  void *v6;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  _QWORD v18[8];

  v6 = v5;
  v12 = objc_msgSend(v6, sel_featureTags);
  type metadata accessor for EncodedFeatureTag();
  sub_1BC6E1788(&qword_1ED6BA708, (uint64_t (*)(uint64_t))type metadata accessor for EncodedFeatureTag, MEMORY[0x1E0DEFCF8]);
  v13 = sub_1BC817D7C();

  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  v18[5] = a1;
  v14 = 0;
  sub_1BC6E75CC(sub_1BC6ECC2C, (uint64_t)v18, v13);
  v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    (*(void (**)(void *, uint64_t, uint64_t))(a3 + 16))(v16, a2, a3);

  }
  else
  {
    v14 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a5, v14, 1, a2);
}

uint64_t sub_1BC6E74FC(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v6 = objc_msgSend(*a1, sel_name);
  v7 = sub_1BC817AE8();
  v9 = v8;

  if (v7 == (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a4 + 8) + 16))(a3) && v9 == v10)
    v12 = 1;
  else
    v12 = sub_1BC818694();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

void sub_1BC6E75CC(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  id v29;

  v4 = v3;
  v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC8181C0();
    type metadata accessor for EncodedFeatureTag();
    sub_1BC6E1788(&qword_1ED6BA708, (uint64_t (*)(uint64_t))type metadata accessor for EncodedFeatureTag, MEMORY[0x1E0DEFCF8]);
    sub_1BC817DB8();
    v5 = v24;
    v23 = v25;
    v7 = v26;
    v8 = v27;
    v9 = v28;
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a3 + 32);
    v23 = a3 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a3 + 56);
    swift_bridgeObjectRetain();
    v7 = v11;
    v8 = 0;
  }
  v22 = (unint64_t)(v7 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (!sub_1BC81822C())
    goto LABEL_36;
  type metadata accessor for EncodedFeatureTag();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v14 = v29;
  swift_unknownObjectRelease();
  v15 = v8;
  v16 = v9;
  if (!v14)
    goto LABEL_36;
  while (1)
  {
    v29 = v14;
    v20 = a1(&v29);
    if (v4)
    {

      goto LABEL_36;
    }
    if ((v20 & 1) != 0)
      goto LABEL_36;

    v8 = v15;
    v9 = v16;
    if (v5 < 0)
      goto LABEL_8;
LABEL_11:
    if (!v9)
      break;
    v16 = (v9 - 1) & v9;
    v17 = __clz(__rbit64(v9)) | (v8 << 6);
    v15 = v8;
LABEL_24:
    v14 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    if (!v14)
      goto LABEL_36;
  }
  v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v15 >= v22)
    goto LABEL_36;
  v18 = *(_QWORD *)(v23 + 8 * v15);
  if (v18)
  {
LABEL_23:
    v16 = (v18 - 1) & v18;
    v17 = __clz(__rbit64(v18)) + (v15 << 6);
    goto LABEL_24;
  }
  v19 = v8 + 2;
  if (v8 + 2 >= v22)
    goto LABEL_36;
  v18 = *(_QWORD *)(v23 + 8 * v19);
  if (v18)
    goto LABEL_22;
  v19 = v8 + 3;
  if (v8 + 3 >= v22)
    goto LABEL_36;
  v18 = *(_QWORD *)(v23 + 8 * v19);
  if (v18)
    goto LABEL_22;
  v19 = v8 + 4;
  if (v8 + 4 >= v22)
    goto LABEL_36;
  v18 = *(_QWORD *)(v23 + 8 * v19);
  if (v18)
  {
LABEL_22:
    v15 = v19;
    goto LABEL_23;
  }
  v15 = v8 + 5;
  if (v8 + 5 >= v22)
    goto LABEL_36;
  v18 = *(_QWORD *)(v23 + 8 * v15);
  if (v18)
    goto LABEL_23;
  v21 = v8 + 6;
  while (v22 != v21)
  {
    v18 = *(_QWORD *)(v23 + 8 * v21++);
    if (v18)
    {
      v15 = v21 - 1;
      goto LABEL_23;
    }
  }
LABEL_36:
  sub_1BC6ECC4C();
}

void _s14HealthPlatform8FeedItemC9removeTag4nameySS_tF_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;

  v3 = v2;
  v13 = objc_msgSend(v3, sel_managedObjectContext);
  if (v13)
  {
    v6 = objc_msgSend(v3, sel_featureTags);
    type metadata accessor for EncodedFeatureTag();
    sub_1BC6E1788(&qword_1ED6BA708, (uint64_t (*)(uint64_t))type metadata accessor for EncodedFeatureTag, MEMORY[0x1E0DEFCF8]);
    v7 = sub_1BC817D7C();

    swift_bridgeObjectRetain();
    sub_1BC780558(v7, a1, a2);
    v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v13;
    if (v9)
    {
      v11 = objc_msgSend(v3, sel_featureTags);
      sub_1BC817D7C();

      v12 = (void *)sub_1BC817D70();
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setFeatureTags_, v12);

      objc_msgSend(v13, sel_deleteObject_, v9);
      v10 = v13;
    }

  }
  else
  {
    sub_1BC8184B4();
    __break(1u);
  }
}

uint64_t FeedItem.numberOfTags.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_featureTags);
  type metadata accessor for EncodedFeatureTag();
  sub_1BC6E1788(&qword_1ED6BA708, (uint64_t (*)(uint64_t))type metadata accessor for EncodedFeatureTag, MEMORY[0x1E0DEFCF8]);
  v2 = sub_1BC817D7C();

  if ((v2 & 0xC000000000000001) != 0)
    v3 = sub_1BC8181FC();
  else
    v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRelease();
  return v3;
}

Swift::Void __swiftcall FeedItem.removeAllTags()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v1 = objc_msgSend(v0, sel_managedObjectContext);
  if (!v1)
    goto LABEL_33;
  v2 = v1;
  v3 = objc_msgSend(v0, sel_featureTags);
  type metadata accessor for EncodedFeatureTag();
  sub_1BC6E1788(&qword_1ED6BA708, (uint64_t (*)(uint64_t))type metadata accessor for EncodedFeatureTag, MEMORY[0x1E0DEFCF8]);
  v4 = sub_1BC817D7C();

  v21 = v0;
  if ((v4 & 0xC000000000000001) != 0)
  {
    sub_1BC8181C0();
    sub_1BC817DB8();
    v4 = v24;
    v22 = v25;
    v5 = v26;
    v6 = v27;
    v7 = v28;
  }
  else
  {
    v6 = 0;
    v8 = -1 << *(_BYTE *)(v4 + 32);
    v22 = v4 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(v4 + 56);
  }
  v11 = (unint64_t)(v5 + 64) >> 6;
  if (v4 < 0)
    goto LABEL_11;
  while (1)
  {
    if (v7)
    {
      v12 = (v7 - 1) & v7;
      v13 = __clz(__rbit64(v7)) | (v6 << 6);
      v14 = v6;
      goto LABEL_28;
    }
    v16 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v16 >= v11)
      goto LABEL_31;
    v17 = *(_QWORD *)(v22 + 8 * v16);
    v14 = v6 + 1;
    if (!v17)
    {
      v14 = v6 + 2;
      if (v6 + 2 >= v11)
        goto LABEL_31;
      v17 = *(_QWORD *)(v22 + 8 * v14);
      if (!v17)
      {
        v14 = v6 + 3;
        if (v6 + 3 >= v11)
          goto LABEL_31;
        v17 = *(_QWORD *)(v22 + 8 * v14);
        if (!v17)
        {
          v14 = v6 + 4;
          if (v6 + 4 >= v11)
            goto LABEL_31;
          v17 = *(_QWORD *)(v22 + 8 * v14);
          if (!v17)
          {
            v18 = v6 + 5;
            while (v11 != v18)
            {
              v17 = *(_QWORD *)(v22 + 8 * v18++);
              if (v17)
              {
                v14 = v18 - 1;
                goto LABEL_27;
              }
            }
LABEL_31:
            sub_1BC6ECC4C();
            v19 = (void *)sub_1BC817AC4();
            v20 = objc_msgSend(v21, sel_mutableSetValueForKeyPath_, v19);

            objc_msgSend(v20, sel_removeAllObjects);
            return;
          }
        }
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v13 = __clz(__rbit64(v17)) + (v14 << 6);
LABEL_28:
    v15 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
    if (!v15)
      goto LABEL_31;
    while (1)
    {
      objc_msgSend(v2, sel_deleteObject_, v15);

      v6 = v14;
      v7 = v12;
      if ((v4 & 0x8000000000000000) == 0)
        break;
LABEL_11:
      if (sub_1BC81822C())
      {
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v15 = v23;
        swift_unknownObjectRelease();
        v14 = v6;
        v12 = v7;
        if (v23)
          continue;
      }
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_33:
  sub_1BC8184B4();
  __break(1u);
}

uint64_t static FeedItem.FeedItemCreationError.== infix(_:_:)()
{
  return 1;
}

uint64_t FeedItem.FeedItemCreationError.hash(into:)()
{
  return sub_1BC818748();
}

uint64_t FeedItem.FeedItemCreationError.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t sub_1BC6E7F34()
{
  return 1;
}

uint64_t sub_1BC6E7F3C()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t sub_1BC6E7F7C()
{
  return sub_1BC818748();
}

uint64_t sub_1BC6E7FA0()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t static FeedItem.existingFeedItem(with:in:)(uint64_t a1, id a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v9[0] = 0;
  v3 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v9);
  v4 = v9[0];
  if (!v3)
  {
    v7 = v9[0];
    sub_1BC816D5C();

    goto LABEL_5;
  }
  v5 = v3;
  type metadata accessor for FeedItem();
  v2 = swift_dynamicCastClass();
  v6 = v4;
  if (!v2)
  {

    sub_1BC6ECC54();
    swift_allocError();
LABEL_5:
    swift_willThrow();
  }
  return v2;
}

uint64_t FeedItem.description.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v1 = sub_1BC8187B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1BC6EAD84((uint64_t)&unk_1E7515E68);
  v6 = MEMORY[0x1E0DEA968];
  swift_arrayDestroy();
  v17 = type metadata accessor for FeedItem();
  v15 = (uint64_t)v0;
  v7 = v0;
  sub_1BC818784();
  v8 = sub_1BC8187A8();
  v13 = v5;
  v9 = sub_1BC6EAE18(v8, (uint64_t (*)(_QWORD, _QWORD, _OWORD *))sub_1BC6ECC98);
  swift_bridgeObjectRelease();
  swift_release();
  v15 = (uint64_t)v9;
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BB1C0, v6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC6ECCA0();
  sub_1BC817A88();
  swift_bridgeObjectRelease();
  v15 = 60;
  v16 = 0xE100000000000000;
  ObjectType = swift_getObjectType();
  sub_1BC6ECD00();
  sub_1BC817AF4();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  v10 = v15;
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return v10;
}

uint64_t sub_1BC6E8308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1;
  if (a2)
  {
    if ((sub_1BC7C9F44(a1, a2, a4) & 1) != 0)
    {
      return 0;
    }
    else
    {
      v9 = v4;
      v10 = a2;
      swift_bridgeObjectRetain();
      sub_1BC817B48();
      sub_1BC6E1A84(a3, (uint64_t)&v8);
      sub_1BC817AF4();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  return v4;
}

uint64_t sub_1BC6E83B4(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1BC6E89B8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1BC818694();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1BC818694() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC6E8A7C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC6E8DE8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC6E8A98(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC6E9564(a1, a2, a3, *v3, &qword_1ED6B8738, (uint64_t)&type metadata for Feed.Kind);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC6E8AC4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC6E96BC(a1, a2, a3, (_QWORD *)*v3, sub_1BC6ED7F8, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
  *v3 = result;
  return result;
}

uint64_t sub_1BC6E8AF0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC6E8F64(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC6E8B0C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC6E90E0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC6E8B28(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC6E925C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC6E8B44(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC6E93F4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC6E8B60(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC6E9564(a1, a2, a3, *v3, (unint64_t *)&unk_1ED6BB598, (uint64_t)&type metadata for ContentKind);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC6E8B8C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC6E96BC(a1, a2, a3, (_QWORD *)*v3, sub_1BC6ED4D4, (uint64_t (*)(_QWORD))sub_1BC6ED4F0);
  *v3 = result;
  return result;
}

uint64_t sub_1BC6E8BB8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC6E989C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC6E8BD4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC6E96BC(a1, a2, a3, (_QWORD *)*v3, sub_1BC6ED49C, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
  *v3 = result;
  return result;
}

uint64_t sub_1BC6E8C00(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC6E96BC(a1, a2, a3, (_QWORD *)*v3, sub_1BC6ED480, type metadata accessor for HealthAppPluginSource.KnownBundle);
  *v3 = result;
  return result;
}

uint64_t sub_1BC6E8C2C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC6E96BC(a1, a2, a3, (_QWORD *)*v3, sub_1BC6ED350, type metadata accessor for UnprotectedNotificationContentState);
  *v3 = result;
  return result;
}

uint64_t sub_1BC6E8C58(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC6E96BC(a1, a2, a3, (_QWORD *)*v3, sub_1BC6ED36C, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
  *v3 = result;
  return result;
}

uint64_t sub_1BC6E8C84(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC6E96BC(a1, a2, a3, (_QWORD *)*v3, sub_1BC6ED388, type metadata accessor for ProtectedNotificationContentState);
  *v3 = result;
  return result;
}

uint64_t sub_1BC6E8CB0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC6E96BC(a1, a2, a3, (_QWORD *)*v3, sub_1BC6ED2F0, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BC6E8CDC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC6E9A20(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC6E8CF8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC6E9BE8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC6E8D14(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC6E9D84(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC6E8D30(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC6E9F00(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC6E8D4C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC6E96BC(a1, a2, a3, (_QWORD *)*v3, sub_1BC6ED294, (uint64_t (*)(_QWORD))type metadata accessor for PluginSharableModel);
  *v3 = result;
  return result;
}

uint64_t sub_1BC6E8D78(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC6EA098(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC6E8D94(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC6EA248(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC6E8DB0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC6EA3B8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC6E8DCC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC6EA528(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC6E8DE8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BB1F0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6E8F64(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6E1E98(0, &qword_1ED6BA810, (uint64_t)&type metadata for PluginFeedItem.SharableModelReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6E90E0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6E1E98(0, &qword_1EF45AFC8, (uint64_t)&type metadata for CachingSharedSummaryTransactionBuilder.SummaryIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6E925C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6ECA64(0, &qword_1ED6B87A8, (uint64_t (*)(uint64_t))sub_1BC6ED114, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1BC6ED114();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6E93F4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6ECA64(0, &qword_1ED6B8790, (uint64_t (*)(uint64_t))sub_1BC6ED1D4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6E9564(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  int64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BC6E1E98(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v10])
      memmove(v14, v15, v10);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v10] || v14 >= &v15[v10])
  {
    memcpy(v14, v15, v10);
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6E96BC(char a1, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  a5(0);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6E989C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6E1E98(0, &qword_1ED6B9DD8, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6E9A20(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6ED238(0, &qword_1EF45AFA0, (unint64_t *)&qword_1EF45B1E0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_1BC6ED814(0, (unint64_t *)&qword_1EF45B1E0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6E9BE8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6E1E98(0, &qword_1EF45AF78, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8])
      memmove(v12, v13, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6E9D84(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6E1E98(0, &qword_1EF45AF98, (uint64_t)&type metadata for SourceProfile, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6E9F00(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6E1E98(0, &qword_1ED6BAC98, (uint64_t)&type metadata for ContentKind.Group, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6EA098(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6ED238(0, &qword_1ED6B8750, &qword_1ED6B7FB0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1BC6ED814(0, &qword_1ED6B7FB0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6EA248(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6ECA64(0, &qword_1ED6B87A0, (uint64_t (*)(uint64_t))sub_1BC6ED170, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6EA3B8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6E1E98(0, &qword_1EF45AF90, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6EA528(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC6ECA64(0, &qword_1EF45AF80, (uint64_t (*)(uint64_t))sub_1BC6ED154, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1BC6ED154(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

int64_t sub_1BC6EA6C4(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1BC6EA7A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  id v16;
  unint64_t *v17;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_1BC8181E4() == *(_DWORD *)(a4 + 36))
      {
        sub_1BC8181F0();
        sub_1BC6ED7C0(0, a5);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        a5 = v17;
        swift_unknownObjectRelease();
        v9 = sub_1BC8180C4();
        v10 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v9 & ~v10;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v11 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v12 = sub_1BC8180D0();

          if ((v12 & 1) == 0)
          {
            v13 = ~v10;
            do
            {
              v7 = (v7 + 1) & v13;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v14 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v15 = sub_1BC8180D0();

            }
            while ((v15 & 1) == 0);
          }

LABEL_20:
          v16 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x1BCCF4EC0](a1, a2, v8);
  sub_1BC6ED7C0(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

void sub_1BC6EAA08(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1BC6EAA14(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Profile);
}

void sub_1BC6EAA14(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(_QWORD))
{
  void *v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  id v17;
  void *v18;

  v8 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_1BC8181E4() == *(_DWORD *)(a4 + 36))
      {
        sub_1BC8181F0();
        a5(0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v5 = v18;
        swift_unknownObjectRelease();
        v10 = sub_1BC8180C4();
        v11 = -1 << *(_BYTE *)(a4 + 32);
        v8 = v10 & ~v11;
        if (((*(_QWORD *)(a4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
        {
          v12 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v8);
          v13 = sub_1BC8180D0();

          if ((v13 & 1) == 0)
          {
            v14 = ~v11;
            do
            {
              v8 = (v8 + 1) & v14;
              if (((*(_QWORD *)(a4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
                goto LABEL_24;
              v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v8);
              v16 = sub_1BC8180D0();

            }
            while ((v16 & 1) == 0);
          }

LABEL_20:
          v17 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v8);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v9 = a4;
  else
    v9 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x1BCCF4EC0](a1, a2, v9);
  a5(0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_1BC6EAC60@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if (result < 0 || (v4 = result, 1 << *(_BYTE *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v6 = *(_QWORD *)(a3 + 48);
    v7 = type metadata accessor for UserProfile();
    return sub_1BC6ECB08(v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v4, a4, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1BC6EACFC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1BC6EAD84(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1BC817D94();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1BC726514(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

_QWORD *sub_1BC6EAE18(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _OWORD *))
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  _OWORD v12[2];
  __int128 v13;
  __int128 v14;
  __int128 v15;

  swift_retain();
  sub_1BC8183DC();
  swift_release();
  sub_1BC818544();
  if (*((_QWORD *)&v15 + 1))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v11 = v13;
      v12[0] = v14;
      v12[1] = v15;
      v5 = a2(v13, *((_QWORD *)&v13 + 1), v12);
      v7 = v6;
      sub_1BC6ED784((uint64_t)&v11, (uint64_t (*)(_QWORD))sub_1BC6ED678);
      if (v7)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1BC725568(0, v3[2] + 1, 1, v3);
        v9 = v3[2];
        v8 = v3[3];
        if (v9 >= v8 >> 1)
          v3 = sub_1BC725568((_QWORD *)(v8 > 1), v9 + 1, 1, v3);
        v3[2] = v9 + 1;
        v4 = &v3[2 * v9];
        v4[4] = v5;
        v4[5] = v7;
      }
      sub_1BC818544();
    }
    while (*((_QWORD *)&v15 + 1));
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_release();
  return v3;
}

uint64_t sub_1BC6EAF74()
{
  return sub_1BC6E1788(&qword_1ED6BA730, (uint64_t (*)(uint64_t))type metadata accessor for Keyword, MEMORY[0x1E0DEFCF8]);
}

uint64_t sub_1BC6EAF90(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BC6EAF9C()
{
  return sub_1BC6E1788((unint64_t *)&unk_1ED6BA3F0, (uint64_t (*)(uint64_t))type metadata accessor for DataType, MEMORY[0x1E0DEFCF8]);
}

uint64_t sub_1BC6EAFB8(unint64_t a1)
{
  return sub_1BC6EBF00(a1, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, (unint64_t *)&qword_1ED6B97F8, (void (*)(id *, uint64_t))sub_1BC7266C0);
}

uint64_t sub_1BC6EAFDC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void (*v29)(_QWORD *, _QWORD);
  unint64_t v31;
  _QWORD v32[5];
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  v3 = a1;
  v31 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = sub_1BC8181FC();
    result = MEMORY[0x1E0DEE9D8];
    if (!v4)
      return result;
    v36 = MEMORY[0x1E0DEE9D8];
    sub_1BC81837C();
    v33 = sub_1BC8181B4();
    v34 = v6;
    v35 = 1;
    if ((v4 & 0x8000000000000000) == 0)
      goto LABEL_7;
    __break(1u);
  }
  v4 = *(_QWORD *)(v3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return result;
  v36 = MEMORY[0x1E0DEE9D8];
  sub_1BC81837C();
  v33 = sub_1BC6EACFC(v3);
  v34 = v7;
  v35 = v8 & 1;
LABEL_7:
  type metadata accessor for DataType();
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  v9 = a2;
  while (1)
  {
    v18 = v3;
    sub_1BC6EA7A8(v33, v34, v35, v3, (unint64_t *)&qword_1ED6BB1D0);
    v20 = v19;
    v21 = objc_msgSend(v19, sel_code);
    sub_1BC6ED238(0, (unint64_t *)&qword_1ED6BA818, (unint64_t *)&qword_1ED6BB290);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BC81A0E0;
    *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v22 + 64) = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v22 + 32) = v21;
    *(_QWORD *)(v22 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v22 + 104) = sub_1BC6ED740();
    *(_QWORD *)(v22 + 72) = 0x77615265646F63;
    *(_QWORD *)(v22 + 80) = 0xE700000000000000;
    v23 = (void *)sub_1BC817E3C();
    v24 = sub_1BC6FD448(v9, (uint64_t)v23, 1);
    if (v2)
      break;
    v25 = (void *)v24;
    if (v24)
    {

    }
    else
    {
      v26 = (void *)objc_opt_self();
      v27 = (void *)sub_1BC817AC4();
      v28 = objc_msgSend(v26, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v27, v9);

      v25 = (void *)swift_dynamicCastClassUnconditional();
    }
    objc_msgSend(v25, sel_setCodeRaw_, v21);

    sub_1BC818358();
    v23 = *(void **)(v36 + 16);
    sub_1BC818388();
    sub_1BC818394();
    sub_1BC818364();
    if (v31)
    {
      if ((v35 & 1) == 0)
      {
        __break(1u);
        break;
      }
      v3 = v18;
      if (sub_1BC8181CC())
        swift_isUniquelyReferenced_nonNull_native();
      sub_1BC6ED860();
      v29 = (void (*)(_QWORD *, _QWORD))sub_1BC817DA0();
      sub_1BC818250();
      v29(v32, 0);
      if (!--v4)
      {
LABEL_18:
        sub_1BC6EAF90(v33, v34, v35);
        return v36;
      }
    }
    else
    {
      v10 = v33;
      v11 = v34;
      v12 = v35;
      v3 = v18;
      v13 = sub_1BC6EA6C4(v33, v34, v35, v18);
      v15 = v14;
      v17 = v16;
      sub_1BC6EAF90(v10, v11, v12);
      v33 = v13;
      v34 = v15;
      v9 = a2;
      v35 = v17 & 1;
      if (!--v4)
        goto LABEL_18;
    }
  }

  v32[0] = 0;
  v32[1] = 0xE000000000000000;
  sub_1BC8182C8();
  sub_1BC817B48();
  v32[4] = v2;
  sub_1BC6ED814(0, (unint64_t *)&qword_1ED6B87B0);
  sub_1BC8183E8();
  result = sub_1BC8184B4();
  __break(1u);
  return result;
}

uint64_t sub_1BC6EB468(unint64_t a1)
{
  return sub_1BC6EB484(a1, (void (*)(_QWORD))type metadata accessor for DataType, (void (*)(void))sub_1BC6EAF9C, (void (*)(id *, uint64_t))sub_1BC72699C);
}

uint64_t sub_1BC6EB484(unint64_t a1, void (*a2)(_QWORD), void (*a3)(void), void (*a4)(id *, uint64_t))
{
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  uint64_t v16;

  v8 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC8184E4();
    swift_bridgeObjectRelease();
  }
  a2(0);
  a3();
  result = sub_1BC817D94();
  v16 = result;
  if (v8)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC8184E4();
    result = swift_bridgeObjectRelease();
    if (!v10)
      return v16;
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v10)
      return v16;
  }
  if (v10 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v10; ++i)
      {
        v12 = MEMORY[0x1BCCF4FB0](i, a1);
        a4(&v15, v12);

      }
    }
    else
    {
      v13 = (void **)(a1 + 32);
      do
      {
        v14 = *v13++;
        a4(&v15, (uint64_t)v14);

        --v10;
      }
      while (v10);
    }
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC6EB5E0(unint64_t a1)
{
  return sub_1BC6EB484(a1, (void (*)(_QWORD))type metadata accessor for Keyword, (void (*)(void))sub_1BC6EAF74, (void (*)(id *, uint64_t))sub_1BC726C68);
}

uint64_t sub_1BC6EB5FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = type metadata accessor for UserProfile();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v35 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v42 = (uint64_t)&v35 - v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v35 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  sub_1BC6E1788(&qword_1ED6BA320, v15, (uint64_t)&protocol conformance descriptor for UserProfile);
  v41 = v2;
  v16 = sub_1BC817D94();
  v37 = v14;
  if (!v14)
    return v16;
  v17 = 0;
  v36 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v18 = *(_QWORD *)(v3 + 72);
  while (1)
  {
    v40 = v17;
    sub_1BC6ECB08(v36 + v18 * v17, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
    sub_1BC81873C();
    v23 = sub_1BC816F3C();
    v24 = sub_1BC6E1788(&qword_1ED6BA298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    swift_bridgeObjectRetain();
    v38 = v24;
    v39 = v23;
    sub_1BC817A7C();
    v25 = sub_1BC818778();
    v26 = -1 << *(_BYTE *)(v16 + 32);
    v27 = v25 & ~v26;
    if (((*(_QWORD *)(v16 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
    {
      v28 = ~v26;
      while (1)
      {
        sub_1BC6ECB08(*(_QWORD *)(v16 + 48) + v27 * v18, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
        if ((sub_1BC816F18() & 1) != 0)
        {
          sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
          if ((sub_1BC8180D0() & 1) != 0)
            break;
        }
        sub_1BC6ED784((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
        v27 = (v27 + 1) & v28;
        if (((*(_QWORD *)(v16 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
          goto LABEL_14;
      }
      sub_1BC6ED784((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
      goto LABEL_7;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BC6ECB08((uint64_t)v13, v42, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
    v43 = v16;
    if (*(_QWORD *)(v16 + 24) > *(_QWORD *)(v16 + 16))
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BC7E265C();
      goto LABEL_5;
    }
    if (isUniquelyReferenced_nonNull_native)
      sub_1BC72A4A0();
    else
      sub_1BC72EBAC();
    v30 = v43;
    sub_1BC81873C();
    sub_1BC817A7C();
    v31 = sub_1BC818778();
    v32 = -1 << *(_BYTE *)(v30 + 32);
    v27 = v31 & ~v32;
    if (((*(_QWORD *)(v30 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
      break;
LABEL_5:
    v19 = v42;
    v16 = v43;
    *(_QWORD *)(v43 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v27;
    sub_1BC6ECBA4(v19, *(_QWORD *)(v16 + 48) + v27 * v18, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
    v20 = *(_QWORD *)(v16 + 16);
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
      goto LABEL_26;
    }
    *(_QWORD *)(v16 + 16) = v22;
LABEL_7:
    swift_bridgeObjectRelease();
    v17 = v40 + 1;
    sub_1BC6ED784((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
    if (v17 == v37)
      return v16;
  }
  v33 = ~v32;
  while (1)
  {
    sub_1BC6ECB08(*(_QWORD *)(v30 + 48) + v27 * v18, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
    if ((sub_1BC816F18() & 1) != 0)
    {
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
      if ((sub_1BC8180D0() & 1) != 0)
        break;
    }
    sub_1BC6ED784((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
    v27 = (v27 + 1) & v33;
    if (((*(_QWORD *)(v30 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
      goto LABEL_5;
  }
LABEL_26:
  sub_1BC6ED784((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
  result = sub_1BC8186DC();
  __break(1u);
  return result;
}

uint64_t sub_1BC6EBA40(unint64_t a1)
{
  return sub_1BC6EB484(a1, (void (*)(_QWORD))type metadata accessor for Profile, (void (*)(void))sub_1BC6EC424, (void (*)(id *, uint64_t))sub_1BC726F34);
}

uint64_t sub_1BC6EBA5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1BC6ED6FC();
  result = sub_1BC817D94();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1BC727200(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1BC6EBAF0(unint64_t a1)
{
  return sub_1BC6EB484(a1, (void (*)(_QWORD))type metadata accessor for SharableModelReference, (void (*)(void))sub_1BC6EC844, (void (*)(id *, uint64_t))sub_1BC7273AC);
}

uint64_t sub_1BC6EBB0C(unint64_t a1)
{
  return sub_1BC6EB484(a1, (void (*)(_QWORD))type metadata accessor for FeedItem, (void (*)(void))sub_1BC6ED4B8, (void (*)(id *, uint64_t))sub_1BC727954);
}

uint64_t sub_1BC6EBB28(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1BC6ED43C();
  result = sub_1BC817D94();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1BC728124(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1BC6EBB98(unint64_t a1)
{
  return sub_1BC6EBF00(a1, &qword_1ED6B6390, 0x1E0CB6C90, &qword_1ED6B8578, (void (*)(id *, uint64_t))sub_1BC7287FC);
}

uint64_t sub_1BC6EBBBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _OWORD v9[3];
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1BC6ED3A4();
  result = sub_1BC817D94();
  v8 = result;
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      v5 = *(_OWORD *)(v4 + 16);
      v9[0] = *(_OWORD *)v4;
      v9[1] = v5;
      v9[2] = *(_OWORD *)(v4 + 32);
      v10 = *(_QWORD *)(v4 + 48);
      sub_1BC6ED3E8((id *)v9);
      sub_1BC728AD8((uint64_t)&v7, v9);
      v6 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v4 += 56;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1BC6EBC80(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1BC816F3C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  sub_1BC6ECA64(0, &qword_1ED6B7C40, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  sub_1BC6E1788(&qword_1ED6BA298, v3, MEMORY[0x1E0CB09C8]);
  v19 = sub_1BC817D94();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_1BC728F84((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_1BC6EBE5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void **v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1BC6ED30C();
  result = sub_1BC817D94();
  v8 = result;
  if (v2)
  {
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4++;
      v6 = v5;
      sub_1BC7291E0(&v7, v5);

      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1BC6EBEDC(unint64_t a1)
{
  return sub_1BC6EBF00(a1, (unint64_t *)&qword_1ED6B85C0, 0x1E0CB6B70, &qword_1ED6B85D0, (void (*)(id *, uint64_t))sub_1BC7297D4);
}

uint64_t sub_1BC6EBF00(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  void **v15;
  void *v16;
  id v17;
  uint64_t v18;

  v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC8184E4();
    swift_bridgeObjectRelease();
  }
  sub_1BC6ED7C0(0, a2);
  sub_1BC6ED2B0(a4, a2, a3, MEMORY[0x1E0DEFCF8]);
  result = sub_1BC817D94();
  v18 = result;
  if (v10)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1BC8184E4();
    result = swift_bridgeObjectRelease();
    if (!v12)
      return v18;
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
      return v18;
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v12; ++i)
      {
        v14 = MEMORY[0x1BCCF4FB0](i, a1);
        a5(&v17, v14);

      }
    }
    else
    {
      v15 = (void **)(a1 + 32);
      do
      {
        v16 = *v15++;
        a5(&v17, (uint64_t)v16);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC6EC084(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int64_t v6;
  int v7;
  int v8;
  char v9;
  char v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  int64_t v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v3 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1BC81837C();
    v6 = sub_1BC7D0860(v3);
    v8 = v7;
    v10 = v9 & 1;
    v26 = v3 + 56;
    type metadata accessor for Keyword();
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
    v25 = v3;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
    {
      if (((*(_QWORD *)(v26 + (((unint64_t)v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        goto LABEL_15;
      if (*(_DWORD *)(v3 + 36) != v8)
        goto LABEL_16;
      v28 = v4;
      v19 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
      v21 = *v19;
      v20 = v19[1];
      sub_1BC6ED238(0, (unint64_t *)&qword_1ED6BA818, (unint64_t *)&qword_1ED6BB290);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1BC81A0F0;
      *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v22 + 64) = sub_1BC6ED740();
      *(_QWORD *)(v22 + 32) = v21;
      *(_QWORD *)(v22 + 40) = v20;
      swift_bridgeObjectRetain_n();
      v23 = (void *)sub_1BC817E3C();
      v24 = sub_1BC6FD480(a2, (uint64_t)v23, 1);
      if (v2)
        goto LABEL_17;
      v14 = (void *)v24;
      if (v24)
      {

      }
      else
      {
        v11 = (void *)objc_opt_self();
        v12 = (void *)sub_1BC817AC4();
        v13 = objc_msgSend(v11, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v12, a2);

        v14 = (void *)swift_dynamicCastClassUnconditional();
      }
      v15 = (void *)sub_1BC817AC4();
      objc_msgSend(v14, sel_setIdentifier_, v15);
      swift_bridgeObjectRelease();

      sub_1BC818358();
      sub_1BC818388();
      sub_1BC818394();
      sub_1BC818364();
      v3 = v25;
      v16 = sub_1BC6EA6C4(v6, v8, v10 & 1, v25);
      v6 = v16;
      v8 = v17;
      v10 = v18 & 1;
      v4 = v28 - 1;
      if (v28 == 1)
      {
        sub_1BC6EAF90(v16, v17, v18 & 1);
        return v29;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    sub_1BC8182C8();
    sub_1BC817B48();
    sub_1BC6ED814(0, (unint64_t *)&qword_1ED6B87B0);
    sub_1BC8183E8();
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC6EC424()
{
  return sub_1BC6E1788(&qword_1ED6BA3E8, (uint64_t (*)(uint64_t))type metadata accessor for Profile, MEMORY[0x1E0DEFCF8]);
}

id sub_1BC6EC440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  char *v26;
  void *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char *v31;
  id v32;
  unint64_t v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v39 = a2;
  v4 = sub_1BC816F3C();
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  MEMORY[0x1E0C80A78](v4);
  v36 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UserProfile();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v40 = (uint64_t)&v30 - v10;
  v11 = *(_QWORD *)(a1 + 16);
  result = (id)MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v30 = v2;
    v46 = MEMORY[0x1E0DEE9D8];
    sub_1BC81837C();
    v13 = sub_1BC7D0860(a1);
    v15 = v14;
    v17 = v16 & 1;
    v35 = a1 + 56;
    result = (id)type metadata accessor for Profile();
    v32 = result;
    v34 = xmmword_1BC81A0E0;
    v33 = 0x80000001BC825700;
    v31 = v9;
    while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(v35 + (((unint64_t)v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_12;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v15)
        goto LABEL_13;
      v44 = v15;
      v45 = v11;
      v43 = v17;
      v18 = v40;
      sub_1BC6ECB08(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v41 + 72) * v13, v40, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
      sub_1BC6ECBA4(v18, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
      v19 = *(void **)&v9[*(int *)(v42 + 20)];
      sub_1BC6ED238(0, (unint64_t *)&qword_1ED6BA818, (unint64_t *)&qword_1ED6BB290);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = v34;
      *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v20 + 64) = sub_1BC6ED740();
      *(_QWORD *)(v20 + 32) = 0xD000000000000010;
      *(_QWORD *)(v20 + 40) = v33;
      result = objc_msgSend(v19, sel_identifier);
      if (!result)
        goto LABEL_14;
      v21 = a1;
      v22 = result;
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
      *(_QWORD *)(v20 + 96) = sub_1BC6ED7C0(0, &qword_1ED6BA508);
      *(_QWORD *)(v20 + 104) = sub_1BC6ED2B0((unint64_t *)&qword_1ED6BA510, &qword_1ED6BA508, 0x1E0CB3A28, MEMORY[0x1E0DEFD08]);
      *(_QWORD *)(v20 + 72) = v22;
      v23 = (void *)sub_1BC817E3C();
      v24 = (void *)sub_1BC806104(v39, (uint64_t)v23);

      v25 = objc_msgSend(v19, sel_identifier);
      v26 = v36;
      sub_1BC816F24();

      v27 = (void *)sub_1BC816F0C();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v38);
      objc_msgSend(v24, sel_setUniqueIdentifier_, v27);

      Profile.hkProfileIdentifier.setter((uint64_t)v19);
      v9 = v31;
      sub_1BC6ED784((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
      sub_1BC818358();
      sub_1BC818388();
      sub_1BC818394();
      sub_1BC818364();
      result = (id)sub_1BC6EA6C4(v13, v44, v43 & 1, v21);
      v13 = (int64_t)result;
      v15 = v28;
      v17 = v29 & 1;
      v11 = v45 - 1;
      a1 = v21;
      if (v45 == 1)
      {
        sub_1BC6EAF90((uint64_t)result, v28, v29 & 1);
        return (id)v46;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC6EC844()
{
  return sub_1BC6E1788(&qword_1ED6BA728, (uint64_t (*)(uint64_t))type metadata accessor for SharableModelReference, MEMORY[0x1E0DEFCF8]);
}

void sub_1BC6EC860(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1BC817DAC();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BC6EC8C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t result;
  int64_t v6;
  int v7;
  int v8;
  char v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v17[2];
  uint64_t v18;

  v4 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BC81837C();
    v6 = sub_1BC7D0860(a1);
    v8 = v7;
    v10 = v9 & 1;
    result = type metadata accessor for SharableModelReference();
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        goto LABEL_11;
      if (*(_DWORD *)(a1 + 36) != v8)
        goto LABEL_12;
      v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
      v12 = v11[1];
      v17[0] = *v11;
      v17[1] = v12;
      swift_bridgeObjectRetain();
      static SharableModelReference.findOrCreate(pluginSharableModelReference:in:for:)(v17, a2, a3);
      swift_bridgeObjectRelease();
      sub_1BC818358();
      sub_1BC818388();
      sub_1BC818394();
      sub_1BC818364();
      result = sub_1BC6EA6C4(v6, v8, v10 & 1, a1);
      v6 = result;
      v8 = v13;
      v10 = v14 & 1;
      if (!--v4)
      {
        sub_1BC6EAF90(result, v13, v14 & 1);
        return v18;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

void sub_1BC6ECA48(uint64_t a1)
{
  sub_1BC6ECA64(a1, (unint64_t *)&unk_1ED6BB2A0, (uint64_t (*)(uint64_t))type metadata accessor for RelevantDateInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BC6ECA64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BC6ECABC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BC6ECAD4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return swift_bridgeObjectRetain();
  return result;
}

void sub_1BC6ECAEC(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1ED6BACE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BC6ECB08(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BC6ECB4C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1BC6ECB60(a1, a2);
  return a1;
}

uint64_t sub_1BC6ECB60(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1BC6ECBA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BC6ECBE8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1BC6ECC2C(id *a1)
{
  uint64_t *v1;

  return sub_1BC6E74FC(a1, v1[5], v1[2], v1[3]) & 1;
}

uint64_t sub_1BC6ECC4C()
{
  return swift_release();
}

unint64_t sub_1BC6ECC54()
{
  unint64_t result;

  result = qword_1EF45AF68;
  if (!qword_1EF45AF68)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeedItem.FeedItemCreationError, &type metadata for FeedItem.FeedItemCreationError);
    atomic_store(result, (unint64_t *)&qword_1EF45AF68);
  }
  return result;
}

uint64_t sub_1BC6ECC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BC6E8308(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

unint64_t sub_1BC6ECCA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6BB1C8;
  if (!qword_1ED6BB1C8)
  {
    sub_1BC6E1E98(255, (unint64_t *)&qword_1ED6BB1C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6BB1C8);
  }
  return result;
}

unint64_t sub_1BC6ECD00()
{
  unint64_t result;

  result = qword_1ED6B64F0;
  if (!qword_1ED6B64F0)
  {
    type metadata accessor for FeedItem();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B64F0);
  }
  return result;
}

unint64_t sub_1BC6ECD3C()
{
  unint64_t result;

  result = qword_1EF45AF70;
  if (!qword_1EF45AF70)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeedItem.FeedItemCreationError, &type metadata for FeedItem.FeedItemCreationError);
    atomic_store(result, (unint64_t *)&qword_1EF45AF70);
  }
  return result;
}

void sub_1BC6ECD80(_BYTE *a1@<X8>)
{
  char v2;

  FeedItem.contentKind.getter(&v2);
  *a1 = v2;
}

uint64_t sub_1BC6ECDBC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = FeedItem.favoriteStatus.getter();
  *a1 = result;
  return result;
}

id sub_1BC6ECDEC(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSearchSectionRawValue_, *a1);
}

uint64_t sub_1BC6ECE00@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id v3;
  uint64_t result;

  v3 = *a1;
  if ((objc_msgSend(*a1, sel_searchSectionHintRawValue) & 0x80000000) != 0)
    result = 13;
  else
    result = _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(v3, sel_searchSectionHintRawValue));
  *a2 = result;
  return result;
}

id sub_1BC6ECE58(_BYTE *a1, id *a2)
{
  uint64_t v2;

  if (*a1 == 13)
    v2 = 0xFFFFFFFFLL;
  else
    v2 = *a1;
  objc_msgSend(*a2, sel_setSearchSectionHintRawValue_, v2);
  return sub_1BC6E2660();
}

uint64_t sub_1BC6ECE9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = FeedItem.associatedKeywords.getter();
  *a1 = result;
  return result;
}

void sub_1BC6ECEC4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  FeedItem.associatedKeywords.setter(v0);
}

uint64_t sub_1BC6ECEEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = FeedItem.associatedProfiles.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1BC6ECF18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = FeedItem.associatedSharableModelReferences.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1BC6ECF44@<X0>(uint64_t a1@<X8>)
{
  return FeedItem.relevantDateInterval.getter(a1);
}

uint64_t sub_1BC6ECF68@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  result = FeedItem.userInterface.getter();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return result;
}

void sub_1BC6ECF94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  sub_1BC6ECAD4(*(_QWORD *)a1, v2, v3);
  FeedItem.userInterface.setter(v1, v2, v3);
}

void sub_1BC6ECFE0(_BYTE *a1@<X8>)
{
  char v2;

  FeedItem.hostViewStyle.getter(&v2);
  *a1 = v2;
}

uint64_t _s21FeedItemCreationErrorOwet(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s21FeedItemCreationErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC6ED0AC + 4 * byte_1BC819FCD[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC6ED0CC + 4 * byte_1BC819FD2[v4]))();
}

_BYTE *sub_1BC6ED0AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC6ED0CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC6ED0D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC6ED0DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC6ED0E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC6ED0EC(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1BC6ED0F8()
{
  return 0;
}

ValueMetadata *type metadata accessor for FeedItem.FeedItemCreationError()
{
  return &type metadata for FeedItem.FeedItemCreationError;
}

unint64_t sub_1BC6ED114()
{
  unint64_t result;

  result = qword_1ED6B87D0;
  if (!qword_1ED6B87D0)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1ED6B87D0);
  }
  return result;
}

void sub_1BC6ED154(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1EF45AF88, (uint64_t (*)(uint64_t))type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BC6ED170()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6B84F0)
  {
    type metadata accessor for _HKDataTypeCode(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6B84F0);
  }
}

void sub_1BC6ED1D4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6B8490)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6B8490);
  }
}

void sub_1BC6ED238(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC6ED814(255, a3);
    v4 = sub_1BC81867C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC6ED294(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1ED6B8710, (uint64_t (*)(uint64_t))type metadata accessor for PluginSharableModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

uint64_t sub_1BC6ED2B0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1BC6ED7C0(255, a2);
    result = MEMORY[0x1BCCF5AB4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC6ED2F0(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1ED6BACA0, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

unint64_t sub_1BC6ED30C()
{
  unint64_t result;

  result = qword_1ED6B7D38;
  if (!qword_1ED6B7D38)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for SourceProfile, &type metadata for SourceProfile);
    atomic_store(result, (unint64_t *)&qword_1ED6B7D38);
  }
  return result;
}

void sub_1BC6ED350(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1EF45AFA8, type metadata accessor for UnprotectedNotificationContentState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC6ED36C(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1ED6B86F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC6ED388(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1EF45AFB0, type metadata accessor for ProtectedNotificationContentState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

unint64_t sub_1BC6ED3A4()
{
  unint64_t result;

  result = qword_1EF45AFB8;
  if (!qword_1EF45AFB8)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for PluginFeedItem.NotificationIdentifier, &type metadata for PluginFeedItem.NotificationIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EF45AFB8);
  }
  return result;
}

id *sub_1BC6ED3E8(id *a1)
{
  id v2;

  v2 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1BC6ED43C()
{
  unint64_t result;

  result = qword_1ED6B5CB0;
  if (!qword_1ED6B5CB0)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ContentKind, &type metadata for ContentKind);
    atomic_store(result, (unint64_t *)&qword_1ED6B5CB0);
  }
  return result;
}

void sub_1BC6ED480(uint64_t a1)
{
  sub_1BC6ECA64(a1, (unint64_t *)&unk_1ED6BA560, type metadata accessor for HealthAppPluginSource.KnownBundle, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC6ED49C(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1ED6BA558, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

uint64_t sub_1BC6ED4B8()
{
  return sub_1BC6E1788(&qword_1EF45AFC0, (uint64_t (*)(uint64_t))type metadata accessor for FeedItem, MEMORY[0x1E0DEFCF8]);
}

void sub_1BC6ED4D4(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1ED6B8780, (uint64_t (*)(uint64_t))sub_1BC6ED4F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC6ED4F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8050)
  {
    sub_1BC6ED584();
    type metadata accessor for PluginFeedItem();
    sub_1BC6E1788((unint64_t *)&unk_1ED6B80D0, (uint64_t (*)(uint64_t))sub_1BC6ED584, MEMORY[0x1E0C95A38]);
    v0 = sub_1BC8175D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8050);
  }
}

void sub_1BC6ED584()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B80E0)
  {
    sub_1BC6ED5FC();
    sub_1BC6E1788(&qword_1ED6B8C80, (uint64_t (*)(uint64_t))sub_1BC6ED5FC, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC817644();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B80E0);
  }
}

void sub_1BC6ED5FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8C88)
  {
    sub_1BC6ECA64(255, &qword_1ED6BAAD0, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BC81771C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8C88);
  }
}

void sub_1BC6ED678()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6BAC68)
  {
    sub_1BC6E1E98(255, (unint64_t *)&qword_1ED6BAC70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6BAC68);
  }
}

unint64_t sub_1BC6ED6FC()
{
  unint64_t result;

  result = qword_1ED6BA6F8;
  if (!qword_1ED6BA6F8)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for PluginFeedItem.SharableModelReference, &type metadata for PluginFeedItem.SharableModelReference);
    atomic_store(result, (unint64_t *)&qword_1ED6BA6F8);
  }
  return result;
}

unint64_t sub_1BC6ED740()
{
  unint64_t result;

  result = qword_1ED6BA7C0;
  if (!qword_1ED6BA7C0)
  {
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED6BA7C0);
  }
  return result;
}

uint64_t sub_1BC6ED784(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BC6ED7C0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1BC6ED7F8(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1ED6BA570, (uint64_t (*)(uint64_t))type metadata accessor for UserProfile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

uint64_t sub_1BC6ED814(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1BC6ED860()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45AFD0)
  {
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BB1D0);
    sub_1BC6ED2B0((unint64_t *)&qword_1ED6B97F8, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1BC817DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45AFD0);
  }
}

void sub_1BC6ED8F8(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  unsigned int v53;
  _QWORD *v54;
  void *v55;
  unint64_t v56;
  void *v57;
  void *v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  id v92;
  NSObject *v93;
  int v94;
  uint64_t v95;
  id v96;
  void *v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  char *v112;
  uint64_t inited;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  void *v121;
  unint64_t v122;
  void *v123;
  void *v124;
  void *v125;
  id v126;
  NSObject *v127;
  os_log_type_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  NSObject *v145;
  id v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155[5];
  __int128 v156;
  __int128 v157;
  void *v158;
  void *v159;
  void *v160;

  v137 = a2;
  v3 = sub_1BC816CE4();
  v144 = *(_QWORD *)(v3 - 8);
  v145 = v3;
  MEMORY[0x1E0C80A78](v3);
  v143 = (char *)&v137 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0DEE9E8];
  v159 = (void *)MEMORY[0x1E0DEE9E8];
  v160 = (void *)MEMORY[0x1E0DEE9E8];
  v158 = (void *)MEMORY[0x1E0DEE9E8];
  if (a1 >> 62)
  {
LABEL_101:
    swift_bridgeObjectRetain();
    v6 = sub_1BC8184E4();
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v7 = (uint64_t *)MEMORY[0x1E0C97870];
  v8 = (uint64_t *)MEMORY[0x1E0C97838];
  v9 = (uint64_t *)MEMORY[0x1E0C97A18];
  v10 = MEMORY[0x1E0DEE9B8];
  if (v6)
  {
    v11 = (void *)objc_opt_self();
    v148 = 0;
    v12 = 0;
    v146 = v11;
    v147 = a1 & 0xC000000000000001;
    v13 = *v7;
    v141 = *v8;
    v142 = v13;
    v5 = 4;
    v14 = *v9;
    v139 = v10 + 8;
    v140 = v14;
    while (1)
    {
      if (v147)
        v15 = (id)MEMORY[0x1BCCF4FB0](v5 - 4, a1);
      else
        v15 = *(id *)(a1 + 8 * v5);
      v16 = v15;
      if (__OFADD__(v5 - 4, 1))
      {
        __break(1u);
LABEL_100:
        __break(1u);
        goto LABEL_101;
      }
      v149 = v5 - 3;
      v17 = v6;
      v18 = a1;
      v150 = objc_msgSend(v15, sel_token, v137);

      v19 = objc_msgSend(v16, sel_bundleID);
      v20 = sub_1BC817AE8();
      v22 = v21;

      v23 = objc_msgSend(v146, sel_mainBundle);
      v24 = objc_msgSend(v23, sel_bundleIdentifier);

      if (v24)
      {
        v25 = sub_1BC817AE8();
        v27 = v26;

        if (v20 == v25 && v22 == v27)
        {

          swift_bridgeObjectRelease_n();
          v12 = v150;
          a1 = v18;
LABEL_20:
          v6 = v17;
          goto LABEL_8;
        }
        v28 = sub_1BC818694();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v18;
        if ((v28 & 1) != 0)
        {

          v12 = v150;
          goto LABEL_20;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        a1 = v18;
      }
      if (__OFADD__(v148++, 1))
        goto LABEL_100;
      v6 = v17;
      v30 = objc_msgSend(v16, sel_objectIDNotification);
      v31 = v143;
      sub_1BC816CA8();

      v32 = sub_1BC816CD8();
      (*(void (**)(char *, NSObject *))(v144 + 8))(v31, v145);
      if (!v32)
      {

        __break(1u);
        return;
      }
      v153 = sub_1BC817AE8();
      v154 = v33;
      sub_1BC818274();
      if (*(_QWORD *)(v32 + 16) && (v34 = sub_1BC7066B8((uint64_t)v155), (v35 & 1) != 0))
      {
        sub_1BC6E1A84(*(_QWORD *)(v32 + 56) + 32 * v34, (uint64_t)&v156);
      }
      else
      {
        v156 = 0u;
        v157 = 0u;
      }
      sub_1BC6EF788((uint64_t)v155);
      if (*((_QWORD *)&v157 + 1))
      {
        sub_1BC6EF8B8();
        if ((swift_dynamicCast() & 1) != 0)
        {
          v36 = v153;
          if ((v153 & 0xC000000000000001) != 0)
          {
            if (!sub_1BC8181FC())
              goto LABEL_34;
          }
          else if (!*(_QWORD *)(v153 + 16))
          {
LABEL_34:
            swift_bridgeObjectRelease();
            goto LABEL_35;
          }
          sub_1BC79DF48(v36, v160);
          v160 = v37;
        }
      }
      else
      {
        sub_1BC6EF7BC((uint64_t)&v156);
      }
LABEL_35:
      v153 = sub_1BC817AE8();
      v154 = v38;
      sub_1BC818274();
      if (*(_QWORD *)(v32 + 16) && (v39 = sub_1BC7066B8((uint64_t)v155), (v40 & 1) != 0))
      {
        sub_1BC6E1A84(*(_QWORD *)(v32 + 56) + 32 * v39, (uint64_t)&v156);
      }
      else
      {
        v156 = 0u;
        v157 = 0u;
      }
      sub_1BC6EF788((uint64_t)v155);
      if (*((_QWORD *)&v157 + 1))
      {
        sub_1BC6EF8B8();
        if ((swift_dynamicCast() & 1) != 0)
        {
          v41 = v153;
          if ((v153 & 0xC000000000000001) != 0)
          {
            if (!sub_1BC8181FC())
              goto LABEL_46;
          }
          else if (!*(_QWORD *)(v153 + 16))
          {
LABEL_46:
            swift_bridgeObjectRelease();
            goto LABEL_47;
          }
          sub_1BC79DF48(v41, v159);
          v159 = v42;
        }
      }
      else
      {
        sub_1BC6EF7BC((uint64_t)&v156);
      }
LABEL_47:
      v153 = sub_1BC817AE8();
      v154 = v43;
      sub_1BC818274();
      if (*(_QWORD *)(v32 + 16) && (v44 = sub_1BC7066B8((uint64_t)v155), (v45 & 1) != 0))
      {
        sub_1BC6E1A84(*(_QWORD *)(v32 + 56) + 32 * v44, (uint64_t)&v156);
      }
      else
      {
        v156 = 0u;
        v157 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1BC6EF788((uint64_t)v155);
      if (*((_QWORD *)&v157 + 1))
      {
        sub_1BC6EF8B8();
        if ((swift_dynamicCast() & 1) != 0)
        {
          v46 = v153;
          if ((v153 & 0xC000000000000001) != 0)
          {
            if (sub_1BC8181FC())
              goto LABEL_58;
          }
          else if (*(_QWORD *)(v153 + 16))
          {
LABEL_58:
            sub_1BC79DF48(v46, v158);
            v48 = v47;

            v158 = v48;
            goto LABEL_7;
          }
          swift_bridgeObjectRelease();
        }

      }
      else
      {

        sub_1BC6EF7BC((uint64_t)&v156);
      }
LABEL_7:
      v12 = v150;
LABEL_8:
      ++v5;
      if (v149 == v6)
      {
        swift_bridgeObjectRelease();
        v49 = (uint64_t)v159;
        v5 = MEMORY[0x1E0DEE9E8];
        goto LABEL_61;
      }
    }
  }
  swift_bridgeObjectRelease();
  v148 = 0;
  v150 = 0;
  v49 = MEMORY[0x1E0DEE9E8];
LABEL_61:
  v50 = swift_bridgeObjectRetain();
  sub_1BC7E510C(v50);
  sub_1BC7E510C(v49);
  swift_bridgeObjectRelease();
  v51 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v52 = (void *)sub_1BC817AC4();
  v53 = objc_msgSend(v51, sel_BOOLForKey_, v52);

  v54 = &unk_1ED6BB000;
  if (v53)
  {
    v55 = v160;
    swift_bridgeObjectRetain();
    v56 = swift_bridgeObjectRetain();
    sub_1BC79DF48(v56, v55);
    v58 = v57;
    v59 = swift_bridgeObjectRetain();
    sub_1BC79DF48(v59, v58);
    v60 = v138;
    v62 = sub_1BC6EEB08(v61);
    swift_bridgeObjectRelease();
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v63 = sub_1BC817590();
    __swift_project_value_buffer(v63, (uint64_t)qword_1ED6BB5D0);
    v64 = v60;
    swift_bridgeObjectRetain_n();
    v65 = v64;
    v66 = sub_1BC81756C();
    v67 = sub_1BC817E9C();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = swift_slowAlloc();
      v149 = swift_slowAlloc();
      v155[0] = v149;
      *(_DWORD *)v68 = 136315394;
      v69 = v62;
      v70 = objc_msgSend(v65, sel_debugDescription);
      v71 = sub_1BC817AE8();
      v73 = v72;

      v62 = v69;
      *(_QWORD *)&v156 = sub_1BC6E14D8(v71, v73, v155);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2048;
      if ((v69 & 0xC000000000000001) != 0)
        v74 = sub_1BC8181FC();
      else
        v74 = *(_QWORD *)(v69 + 16);
      v54 = &unk_1ED6BB000;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v156 = v74;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v66, v67, "%s mergeExternalChanges() PREFETCHED objects: %ld", (uint8_t *)v68, 0x16u);
      v86 = v149;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v86, -1, -1);
      MEMORY[0x1BCCF5BA4](v68, -1, -1);

LABEL_78:
      v60 = v138;
      goto LABEL_79;
    }

    swift_bridgeObjectRelease_n();
  }
  else
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v75 = sub_1BC817590();
    __swift_project_value_buffer(v75, (uint64_t)qword_1ED6BB5D0);
    v60 = v138;
    v76 = v138;
    v77 = sub_1BC81756C();
    v78 = sub_1BC817E9C();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = swift_slowAlloc();
      v149 = swift_slowAlloc();
      v155[0] = v149;
      *(_DWORD *)v79 = 136315394;
      v80 = objc_msgSend(v76, sel_debugDescription);
      v81 = sub_1BC817AE8();
      v83 = v82;

      *(_QWORD *)&v156 = sub_1BC6E14D8(v81, v83, v155);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 12) = 2048;
      if ((v5 & 0xC000000000000001) != 0)
        v84 = sub_1BC8181FC();
      else
        v84 = 0;
      v54 = (_QWORD *)&unk_1ED6BB000;
      *(_QWORD *)&v156 = v84;
      sub_1BC818148();
      _os_log_impl(&dword_1BC6DD000, v77, v78, "%s mergeExternalChanges() PREFETCHING DISABLED %ld", (uint8_t *)v79, 0x16u);
      v85 = v149;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v85, -1, -1);
      MEMORY[0x1BCCF5BA4](v79, -1, -1);

      v62 = MEMORY[0x1E0DEE9E8];
      goto LABEL_78;
    }

    v62 = MEMORY[0x1E0DEE9E8];
  }
LABEL_79:
  if (v54[182] != -1)
    swift_once();
  v87 = sub_1BC817590();
  v88 = __swift_project_value_buffer(v87, (uint64_t)qword_1ED6BB5D0);
  v90 = (unint64_t)v159;
  v89 = (unint64_t)v160;
  v91 = (unint64_t)v158;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v92 = v60;
  v149 = v88;
  v93 = sub_1BC81756C();
  v94 = sub_1BC817E9C();
  if (os_log_type_enabled(v93, (os_log_type_t)v94))
  {
    LODWORD(v144) = v94;
    v145 = v93;
    v147 = v62;
    v95 = swift_slowAlloc();
    v143 = (char *)swift_slowAlloc();
    v155[0] = (uint64_t)v143;
    *(_DWORD *)v95 = 136316674;
    v96 = objc_msgSend(v92, sel_debugDescription);
    v97 = v92;
    v98 = sub_1BC817AE8();
    v100 = v99;

    *(_QWORD *)&v156 = sub_1BC6E14D8(v98, v100, v155);
    sub_1BC818148();

    v146 = v97;
    swift_bridgeObjectRelease();
    *(_WORD *)(v95 + 12) = 2080;
    sub_1BC6EF8B8();
    v101 = sub_1BC818814();
    *(_QWORD *)&v156 = sub_1BC6E14D8(v101, v102, v155);
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v95 + 22) = 2048;
    if ((v89 & 0xC000000000000001) != 0)
      v103 = sub_1BC8181FC();
    else
      v103 = *(_QWORD *)(v89 + 16);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v156 = v103;
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v95 + 32) = 2080;
    v104 = sub_1BC818814();
    *(_QWORD *)&v156 = sub_1BC6E14D8(v104, v105, v155);
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v95 + 42) = 2048;
    v92 = v146;
    if ((v90 & 0xC000000000000001) != 0)
      v106 = sub_1BC8181FC();
    else
      v106 = *(_QWORD *)(v90 + 16);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v156 = v106;
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v95 + 52) = 2080;
    v107 = sub_1BC818814();
    *(_QWORD *)&v156 = sub_1BC6E14D8(v107, v108, v155);
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v95 + 62) = 2048;
    if ((v91 & 0xC000000000000001) != 0)
      v109 = sub_1BC8181FC();
    else
      v109 = *(_QWORD *)(v91 + 16);
    v110 = v145;
    v111 = v144;
    v112 = v143;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v156 = v109;
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v110, v111, "%s mergeExternalChanges() allInsertedObjectIDs: %s count: %ld, allDeletedObjectIDs: %s count: %ld, allUpdatedObjectIDs: %s count: %ld", (uint8_t *)v95, 0x48u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v112, -1, -1);
    MEMORY[0x1BCCF5BA4](v95, -1, -1);

    v62 = v147;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_1BC6EF9A0(0, (unint64_t *)&qword_1ED6BA578, (void (*)(uint64_t))sub_1BC6EF850);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC81A110;
  *(_QWORD *)(inited + 32) = sub_1BC817AE8();
  *(_QWORD *)(inited + 40) = v114;
  swift_beginAccess();
  v115 = v160;
  sub_1BC6EF8B8();
  v117 = v116;
  *(_QWORD *)(inited + 72) = v116;
  *(_QWORD *)(inited + 48) = v115;
  *(_QWORD *)(inited + 80) = sub_1BC817AE8();
  *(_QWORD *)(inited + 88) = v118;
  swift_beginAccess();
  v119 = v159;
  *(_QWORD *)(inited + 120) = v117;
  *(_QWORD *)(inited + 96) = v119;
  *(_QWORD *)(inited + 128) = sub_1BC817AE8();
  *(_QWORD *)(inited + 136) = v120;
  swift_beginAccess();
  v121 = v158;
  *(_QWORD *)(inited + 168) = v117;
  *(_QWORD *)(inited + 144) = v121;
  v122 = sub_1BC710164(inited);
  v123 = (void *)objc_opt_self();
  sub_1BC6EF3C8(v122);
  v124 = (void *)sub_1BC817A28();
  swift_bridgeObjectRelease();
  sub_1BC6ED7C0(0, &qword_1ED6BA4F0);
  v125 = (void *)sub_1BC817C50();
  objc_msgSend(v123, sel_mergeChangesFromRemoteContextSave_intoContexts_, v124, v125);
  swift_bridgeObjectRelease();

  v126 = v92;
  swift_bridgeObjectRetain();
  v127 = sub_1BC81756C();
  v128 = sub_1BC817E9C();
  if (os_log_type_enabled(v127, v128))
  {
    v129 = swift_slowAlloc();
    v149 = swift_slowAlloc();
    v152 = v149;
    *(_DWORD *)v129 = 136315650;
    v130 = v62;
    v131 = objc_msgSend(v126, sel_debugDescription);
    v132 = sub_1BC817AE8();
    v134 = v133;

    v151 = sub_1BC6E14D8(v132, v134, &v152);
    sub_1BC818148();

    swift_bridgeObjectRelease();
    *(_WORD *)(v129 + 12) = 2048;
    v151 = v148;
    sub_1BC818148();
    *(_WORD *)(v129 + 22) = 2048;
    if ((v130 & 0xC000000000000001) != 0)
      v135 = sub_1BC8181FC();
    else
      v135 = *(_QWORD *)(v130 + 16);
    swift_bridgeObjectRelease();
    v151 = v135;
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v127, v128, "%s mergeExternalChanges() complete merged transactions: %ld objects: %ld", (uint8_t *)v129, 0x20u);
    v136 = v149;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v136, -1, -1);
    MEMORY[0x1BCCF5BA4](v129, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1BC6EEB08(uint64_t a1)
{
  void *v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t result;
  uint64_t v8;
  _QWORD aBlock[6];
  uint64_t v10;

  v10 = MEMORY[0x1E0DEE9E8];
  v3 = (_QWORD *)swift_allocObject();
  v3[2] = a1;
  v3[3] = &v10;
  v3[4] = v1;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1BC6EF974;
  *(_QWORD *)(v4 + 24) = v3;
  aBlock[4] = sub_1BC6EF990;
  aBlock[5] = v4;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC6E0C04;
  aBlock[3] = &block_descriptor_0;
  v5 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v6 = v1;
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_performBlockAndWait_, v5);
  _Block_release(v5);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v6 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_1BC6EEC58(uint64_t a1, uint64_t *a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0();
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  sub_1BC6EF9A0(0, (unint64_t *)&qword_1ED6BA818, (void (*)(uint64_t))sub_1BC6EF9EC);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC81A0F0;
  sub_1BC6EF8B8();
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 64) = sub_1BC6E1788(&qword_1EF45AFD8, (uint64_t (*)(uint64_t))sub_1BC6EF8B8, MEMORY[0x1E0CB1BE8]);
  *(_QWORD *)(v5 + 32) = a1;
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1BC817E3C();
  objc_msgSend(v4, sel_setPredicate_, v7);

  type metadata accessor for FeedItem();
  v8 = sub_1BC8180AC();
  v9 = sub_1BC6EBB0C(v8);
  swift_bridgeObjectRelease();
  v10 = sub_1BC6EF038(v9);

  swift_bridgeObjectRelease();
  *a2 = v10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC6EF038(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1BC8181FC())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x1E0DEE9E8];
    if (v2)
      goto LABEL_4;
LABEL_7:
    v8 = -1 << *(_BYTE *)(v1 + 32);
    v29 = v1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(v1 + 56);
    swift_bridgeObjectRetain();
    result = swift_retain();
    v6 = 0;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  sub_1BC6EFAA4();
  v3 = sub_1BC8182A4();
  if (!v2)
    goto LABEL_7;
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BC8181C0();
  type metadata accessor for FeedItem();
  sub_1BC6E1788(&qword_1EF45AFC0, (uint64_t (*)(uint64_t))type metadata accessor for FeedItem, MEMORY[0x1E0DEFCF8]);
  result = sub_1BC817DB8();
  v1 = v31;
  v29 = v32;
  v5 = v33;
  v6 = v34;
  v7 = v35;
LABEL_11:
  v11 = (unint64_t)(v5 + 64) >> 6;
  v12 = v3 + 56;
  while (v1 < 0)
  {
    if (!sub_1BC81822C())
      goto LABEL_45;
    type metadata accessor for FeedItem();
    swift_dynamicCast();
    v16 = v30;
LABEL_36:
    result = sub_1BC8180C4();
    v22 = -1 << *(_BYTE *)(v3 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v16;
    ++*(_QWORD *)(v3 + 16);
  }
  if (v7)
  {
    v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v15 = v14 | (v6 << 6);
LABEL_35:
    v16 = *(void **)(*(_QWORD *)(v1 + 48) + 8 * v15);
    v30 = v16;
    v21 = v16;
    goto LABEL_36;
  }
  v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v11)
      goto LABEL_45;
    v18 = *(_QWORD *)(v29 + 8 * v17);
    v19 = v6 + 1;
    if (!v18)
    {
      v19 = v6 + 2;
      if (v6 + 2 >= v11)
        goto LABEL_45;
      v18 = *(_QWORD *)(v29 + 8 * v19);
      if (!v18)
      {
        v19 = v6 + 3;
        if (v6 + 3 >= v11)
          goto LABEL_45;
        v18 = *(_QWORD *)(v29 + 8 * v19);
        if (!v18)
        {
          v19 = v6 + 4;
          if (v6 + 4 >= v11)
            goto LABEL_45;
          v18 = *(_QWORD *)(v29 + 8 * v19);
          if (!v18)
          {
            v19 = v6 + 5;
            if (v6 + 5 >= v11)
              goto LABEL_45;
            v18 = *(_QWORD *)(v29 + 8 * v19);
            if (!v18)
            {
              v20 = v6 + 6;
              while (v11 != v20)
              {
                v18 = *(_QWORD *)(v29 + 8 * v20++);
                if (v18)
                {
                  v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_1BC6ECC4C();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    v7 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v19 << 6);
    v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1BC6EF3C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1BC6EFB74();
    v2 = sub_1BC818520();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1BC6E1A84(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1BC6EFBDC(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1BC6EFBDC(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1BC6EFBDC(v36, v37);
    sub_1BC6EFBDC(v37, &v33);
    result = sub_1BC81825C();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1BC6EFBDC(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1BC6ECC4C();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1BC6EF788(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1BC6EF7BC(uint64_t a1)
{
  uint64_t v2;

  sub_1BC6EF7F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC6EF7F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B9DE0)
  {
    v0 = sub_1BC818130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B9DE0);
  }
}

void sub_1BC6EF850()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6BA418)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6BA418);
  }
}

void sub_1BC6EF8B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BA458)
  {
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BA4B0);
    sub_1BC6EFB34(&qword_1ED6BA4B8, (unint64_t *)&qword_1ED6BA4B0);
    v0 = sub_1BC817DC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BA458);
  }
}

uint64_t sub_1BC6EF948()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC6EF974()
{
  uint64_t v0;

  return sub_1BC6EEC58(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1BC6EF980()
{
  return swift_deallocObject();
}

uint64_t sub_1BC6EF990()
{
  uint64_t v0;

  return sub_1BC6E0BE4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

void sub_1BC6EF9A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC81867C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BC6EF9EC()
{
  unint64_t result;

  result = qword_1ED6BB290;
  if (!qword_1ED6BB290)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BB290);
  }
  return result;
}

void sub_1BC6EFA40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BA800)
  {
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BB280);
    v0 = sub_1BC818130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BA800);
  }
}

void sub_1BC6EFAA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45AFE0)
  {
    sub_1BC6ED7C0(255, &qword_1EF45AFE8);
    sub_1BC6EFB34(&qword_1EF45AFF0, &qword_1EF45AFE8);
    v0 = sub_1BC8182B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45AFE0);
  }
}

uint64_t sub_1BC6EFB34(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1BC6ED7C0(255, a2);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC6EFB74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BA550)
  {
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BA550);
  }
}

_OWORD *sub_1BC6EFBDC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1BC6EFBEC()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LegacyGenerationExecutor()
{
  return objc_opt_self();
}

uint64_t sub_1BC6EFC38()
{
  return sub_1BC817320();
}

uint64_t sub_1BC6EFC54()
{
  type metadata accessor for LegacyGenerationExecutor.Planner();
  return swift_allocObject();
}

uint64_t sub_1BC6EFC70(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  return sub_1BC6F01E0(a2, a3);
}

uint64_t sub_1BC6EFC7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, _QWORD, uint64_t);
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = a1;
  v10 = sub_1BC817278();
  v1 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6EF9A0(0, &qword_1ED6B8758, (void (*)(uint64_t))MEMORY[0x1E0D2CFD0]);
  v9 = *(_QWORD *)(*(_QWORD *)(sub_1BC817290() - 8) + 72);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC81A0E0;
  sub_1BC6EF9A0(0, &qword_1ED6B8770, (void (*)(uint64_t))MEMORY[0x1E0D2D218]);
  sub_1BC8174F4();
  v4 = swift_allocObject();
  v8 = xmmword_1BC81A0F0;
  *(_OWORD *)(v4 + 16) = xmmword_1BC81A0F0;
  sub_1BC817AE8();
  sub_1BC8174C4();
  swift_bridgeObjectRelease();
  v5 = *(void (**)(char *, _QWORD, uint64_t))(v1 + 104);
  v6 = v10;
  v5(v3, *MEMORY[0x1E0D2CFB0], v10);
  sub_1BC817284();
  *(_OWORD *)(swift_allocObject() + 16) = v8;
  sub_1BC8174D0();
  v5(v3, *MEMORY[0x1E0D2CFA8], v6);
  sub_1BC817284();
  v5(v3, *MEMORY[0x1E0D2CFB8], v6);
  return sub_1BC817284();
}

uint64_t sub_1BC6EFE8C()
{
  return 0;
}

uint64_t sub_1BC6EFE98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1BC6EFEC4()
{
  return 0;
}

void sub_1BC6EFED0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1BC6EFEDC()
{
  sub_1BC6F0ADC();
  return sub_1BC8187FC();
}

uint64_t sub_1BC6EFF04()
{
  sub_1BC6F0ADC();
  return sub_1BC818808();
}

uint64_t sub_1BC6EFF2C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1BC6EFF3C()
{
  return sub_1BC817350();
}

uint64_t sub_1BC6EFF54@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC6EFC7C(a1);
}

uint64_t sub_1BC6EFF68@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t sub_1BC6EFF74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = swift_allocObject();
  result = __swift_destroy_boxed_opaque_existential_0(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_1BC6EFFC4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BC6F0A84();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC6F0ADC();
  sub_1BC8187F0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for LegacyGenerationExecutor.Planner()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LegacyGenerationExecutor.Planner.WorkPlan()
{
  return objc_opt_self();
}

uint64_t sub_1BC6F00C4(uint64_t a1, uint64_t a2)
{
  return sub_1BC6F0A44((unint64_t *)&unk_1ED6B62F8, a2, (uint64_t (*)(uint64_t))type metadata accessor for LegacyGenerationExecutor.Planner.WorkPlan, (uint64_t)&unk_1BC81A194);
}

uint64_t sub_1BC6F00F0(uint64_t a1, uint64_t a2)
{
  return sub_1BC6F0A44(&qword_1ED6B7E00, a2, (uint64_t (*)(uint64_t))type metadata accessor for LegacyGenerationExecutor.Planner.WorkPlan, (uint64_t)&unk_1BC81A16C);
}

uint64_t sub_1BC6F011C(uint64_t a1, uint64_t a2)
{
  return sub_1BC6F0A44(&qword_1EF45AFF8, a2, (uint64_t (*)(uint64_t))type metadata accessor for LegacyGenerationExecutor.Planner.WorkPlan, (uint64_t)&unk_1BC81A1BC);
}

uint64_t sub_1BC6F014C()
{
  uint64_t v0;

  sub_1BC6F080C();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC81A120;
  type metadata accessor for LegacyGenerationExecutor.Planner.WorkPlan();
  *(_QWORD *)(v0 + 32) = swift_allocObject();
  sub_1BC817C74();
  return v0;
}

uint64_t sub_1BC6F01B4(uint64_t a1, uint64_t a2)
{
  return sub_1BC6F0A44(&qword_1ED6B7E08, a2, (uint64_t (*)(uint64_t))type metadata accessor for LegacyGenerationExecutor.Planner, (uint64_t)&unk_1BC81A204);
}

uint64_t sub_1BC6F01E0(uint64_t (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  os_unfair_lock_s *v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  _BOOL4 v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint8_t *v33;
  uint64_t v34;
  int v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint8_t *v44;
  uint8_t *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(_QWORD);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v5 = sub_1BC817590();
  v56 = *(_QWORD *)(v5 - 8);
  v57 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v44 - v10;
  MEMORY[0x1E0C80A78](v9);
  v58 = (char *)&v44 - v12;
  v13 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 16) + 16);
  v14 = v13 + 4;
  v15 = v13 + 26;
  os_unfair_lock_lock(v13 + 26);
  sub_1BC7DF5E8((uint64_t)v14, (uint64_t)&v60);
  os_unfair_lock_unlock(v15);
  v16 = v62;
  if (v62)
  {
    v52 = a2;
    v53 = a1;
    v17 = v61;
    v18 = v65;
    v54 = v64;
    v55 = v63;
    v19 = v66;
    v20 = v67;
    v21 = v69;
    v50 = v68;
    v51 = v60;
    swift_getObjectType();
    sub_1BC8171E8();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    v22 = sub_1BC81756C();
    v23 = sub_1BC817E9C();
    v24 = v23;
    v25 = os_log_type_enabled(v22, v23);
    v49 = v22;
    if (v25)
    {
      v48 = v19;
      v26 = swift_slowAlloc();
      v46 = v24;
      v27 = (uint8_t *)v26;
      v47 = swift_slowAlloc();
      v59 = v47;
      v45 = v27;
      *(_DWORD *)v27 = 136315138;
      v44 = v27 + 4;
      v28 = v51;
      LOBYTE(v60) = v51 & 1;
      v61 = v17;
      v62 = v16;
      LOBYTE(v63) = v55 & 1;
      v64 = v54;
      v65 = v18;
      v66 = v19;
      v67 = v20;
      v68 = v50;
      v69 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      v29 = sub_1BC817AF4();
      v60 = sub_1BC6E14D8(v29, v30, &v59);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      v31 = v28;
      sub_1BC6F07B0(v28, v17, v16);
      sub_1BC6F07B0(v28, v17, v16);
      v32 = v49;
      v33 = v45;
      _os_log_impl(&dword_1BC6DD000, v49, (os_log_type_t)v46, "[Legacy Generation Orchestration] Beginning background work request %s", v45, 0xCu);
      v34 = v47;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v34, -1, -1);
      MEMORY[0x1BCCF5BA4](v33, -1, -1);

      sub_1BC6F07B0(v31, v17, v16);
    }
    else
    {
      v39 = v51;
      sub_1BC6F07B0(v51, v17, v16);
      sub_1BC6F07B0(v39, v17, v16);

      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v57);
    return v53(0);
  }
  else
  {
    os_unfair_lock_lock(v15);
    sub_1BC6F0BEC(v14, &v60);
    os_unfair_lock_unlock(v15);
    v35 = v60;
    swift_getObjectType();
    if (v35 == 1)
    {
      sub_1BC8171E8();
      v36 = sub_1BC81756C();
      v37 = sub_1BC817E9C();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_1BC6DD000, v36, v37, "[Legacy Generation Orchestration] Foreground generation.", v38, 2u);
        MEMORY[0x1BCCF5BA4](v38, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v11, v57);
    }
    else
    {
      sub_1BC8171E8();
      v41 = sub_1BC81756C();
      v42 = sub_1BC817E9C();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v43 = 0;
        _os_log_impl(&dword_1BC6DD000, v41, v42, "[Legacy Generation Orchestration] Idle.", v43, 2u);
        MEMORY[0x1BCCF5BA4](v43, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v8, v57);
    }
    return a1(0);
  }
}

uint64_t sub_1BC6F07B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BC6F080C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BA580)
  {
    v0 = sub_1BC81867C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BA580);
  }
}

uint64_t sub_1BC6F0864(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);

  v2 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC6F080C();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BC81A120;
  sub_1BC817248();
  sub_1BC6EF9A0(0, &qword_1ED6B8760, (void (*)(uint64_t))sub_1BC6F09F0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC81A0F0;
  v5 = sub_1BC8173D4();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D0F0];
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = sub_1BC6F0A44(&qword_1ED6B7FC8, 255, v6, MEMORY[0x1E0D2D0E8]);
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v4 + 32));
  sub_1BC8173E0();
  sub_1BC8173C8();
  *(_QWORD *)(v3 + 32) = sub_1BC817224();
  sub_1BC817C74();
  a1(v3);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BC6F09F0()
{
  unint64_t result;

  result = qword_1ED6B7FE0;
  if (!qword_1ED6B7FE0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B7FE0);
  }
  return result;
}

uint64_t sub_1BC6F0A44(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1BCCF5AB4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC6F0A84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45B000)
  {
    sub_1BC6F0ADC();
    v0 = sub_1BC81864C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45B000);
  }
}

unint64_t sub_1BC6F0ADC()
{
  unint64_t result;

  result = qword_1EF45B008;
  if (!qword_1EF45B008)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81A308, &type metadata for LegacyGenerationExecutor.Planner.WorkPlan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45B008);
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyGenerationExecutor.Planner.WorkPlan.CodingKeys()
{
  return &type metadata for LegacyGenerationExecutor.Planner.WorkPlan.CodingKeys;
}

unint64_t sub_1BC6F0B34()
{
  unint64_t result;

  result = qword_1EF45B010;
  if (!qword_1EF45B010)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81A2B8, &type metadata for LegacyGenerationExecutor.Planner.WorkPlan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45B010);
  }
  return result;
}

unint64_t sub_1BC6F0B7C()
{
  unint64_t result;

  result = qword_1EF45B018;
  if (!qword_1EF45B018)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81A2E0, &type metadata for LegacyGenerationExecutor.Planner.WorkPlan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45B018);
  }
  return result;
}

void ContentKindFeatureTag.value.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

HealthPlatform::ContentKindFeatureTag __swiftcall ContentKindFeatureTag.init(_:)(HealthPlatform::ContentKindFeatureTag result)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)result.value;
  return result;
}

void sub_1BC6F0BE0(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *sub_1BC6F0BEC@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BC6F0BF8()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ED6B7DE8 = result;
  return result;
}

uint64_t static ContentKindFeatureTag.keyPath.getter()
{
  if (qword_1ED6B7DE0 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t static ContentKindFeatureTag.keyPath.setter(uint64_t a1)
{
  if (qword_1ED6B7DE0 != -1)
    swift_once();
  swift_beginAccess();
  qword_1ED6B7DE8 = a1;
  return swift_release();
}

uint64_t (*static ContentKindFeatureTag.keyPath.modify())()
{
  if (qword_1ED6B7DE0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC6F0D6C()
{
  if (qword_1ED6B7DE0 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t getEnumTagSinglePayload for ContentKind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE9)
    goto LABEL_17;
  if (a2 + 23 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 23) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 23;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 23;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 23;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x18;
  v8 = v6 - 24;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentKindFeatureTag(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 23 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 23) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE8)
    return ((uint64_t (*)(void))((char *)&loc_1BC6F0EB4 + 4 * byte_1BC81A365[v4]))();
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_1BC6F0EE8 + 4 * byte_1BC81A360[v4]))();
}

uint64_t sub_1BC6F0EE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC6F0EF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC6F0EF8);
  return result;
}

uint64_t sub_1BC6F0F04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC6F0F0CLL);
  *(_BYTE *)result = a2 + 23;
  return result;
}

uint64_t sub_1BC6F0F10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC6F0F18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentKindFeatureTag()
{
  return &type metadata for ContentKindFeatureTag;
}

uint64_t sub_1BC6F0F3C()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t HealthPluginDelegate.makeSharableModelPipelines(for:)()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t dispatch thunk of HealthPluginDelegate.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HealthPluginDelegate.makeGeneratorPipelines(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of HealthPluginDelegate.makeSharableModelPipelines(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1BC6F0F6C()
{
  uint64_t result;

  result = sub_1BC817AC4();
  qword_1ED6B8538 = result;
  return result;
}

id static NSNotificationName.cachedSharedSummaryTransactionCompleted.getter()
{
  if (qword_1ED6B8548 != -1)
    swift_once();
  return (id)qword_1ED6B8538;
}

void sub_1BC6F0FE0()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_transactionUUID);
  sub_1BC816F24();

}

_QWORD *CachingSharedSummaryTransactionBuilder.__allocating_init(transactionBuilder:fallbackTransactionFilter:)(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  swift_allocObject();
  v6 = sub_1BC6F630C(a1, a2, a3);

  swift_release();
  return v6;
}

_QWORD *CachingSharedSummaryTransactionBuilder.init(transactionBuilder:fallbackTransactionFilter:)(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;

  v4 = sub_1BC6F630C(a1, a2, a3);

  swift_release();
  return v4;
}

uint64_t sub_1BC6F10D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC6F2104(a1, a2, a3, (uint64_t)&unk_1E7517430, (uint64_t)&unk_1E7517458, (uint64_t)sub_1BC6F6558, (uint64_t)sub_1BC6F7CBC);
}

void sub_1BC6F10F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F21D8(a1, a2, a3, a4, (uint64_t)&unk_1E7517AD8, (uint64_t)sub_1BC6F755C, (uint64_t)&block_descriptor_118);
}

uint64_t sub_1BC6F1110(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v2;
  v5[3] = a1;
  v5[4] = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain_n();
  swift_retain();
  sub_1BC6F4C60((uint64_t)sub_1BC6F6590, (uint64_t)v5, (uint64_t)sub_1BC6F7CBC, v6);
  swift_release();
  return swift_release();
}

void sub_1BC6F11B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  _QWORD *v7;
  void *v8;
  _QWORD v9[6];

  v6 = *(void **)(a1 + 16);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a2;
  v7[3] = a3;
  v7[4] = a1;
  v9[4] = sub_1BC6F7480;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1BC76C088;
  v9[3] = &block_descriptor_105;
  v8 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_discardWithCompletion_, v8);
  _Block_release(v8);
}

void sub_1BC6F1290(int a1, id a2, void (*a3)(id), uint64_t a4, uint64_t a5)
{
  id v7;
  id v9;
  uint64_t v10;
  unint64_t v11;

  if (a2)
  {
    v7 = a2;
    a3(a2);

  }
  else
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    if (qword_1ED6B8548 != -1)
      swift_once();
    objc_msgSend(v9, sel_postNotificationName_object_, qword_1ED6B8538, a5);

    v10 = *(_QWORD *)(a5 + 40);
    os_unfair_lock_lock((os_unfair_lock_t)(v10 + 64));
    v11 = sub_1BC7102CC(MEMORY[0x1E0DEE9D8]);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 16) = v11;
    os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 64));
    a3(0);
  }
}

uint64_t sub_1BC6F139C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v3;
  *(_BYTE *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 32) = a2;
  *(_QWORD *)(v7 + 40) = a3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_retain_n();
  swift_retain();
  sub_1BC6F4C60((uint64_t)sub_1BC6F65C8, v7, (uint64_t)sub_1BC6F7CC0, v8);
  swift_release();
  return swift_release();
}

void sub_1BC6F144C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  _QWORD *v9;
  void *v10;
  _QWORD v11[6];

  v8 = *(void **)(a1 + 16);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a3;
  v9[4] = a4;
  v11[4] = sub_1BC6F7430;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1BC6F1678;
  v11[3] = &block_descriptor_99;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_commitAsUrgent_completion_, a2 & 1, v10);
  _Block_release(v10);
}

void sub_1BC6F152C(void *a1, id a2, uint64_t a3, void (*a4)(void *, uint64_t))
{
  void *v7;
  id v8;
  id v9;
  id v11;
  id v12;
  id v13;

  if (a1)
  {
    v7 = (void *)objc_opt_self();
    v8 = a1;
    v9 = objc_msgSend(v7, sel_defaultCenter);
    if (qword_1ED6B8548 != -1)
      swift_once();
    objc_msgSend(v9, sel_postNotificationName_object_, qword_1ED6B8538, a3);

    v13 = v8;
    a4(a1, 0);

  }
  else
  {
    if (a2)
      v11 = a2;
    else
      v11 = objc_msgSend((id)objc_opt_self(), sel_hk_error_userInfo_, 0, 0);
    v12 = a2;
    a4(v11, 1);

  }
}

void sub_1BC6F1678(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1BC6F16EC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  return a2(a1, 1);
}

uint64_t sub_1BC6F1714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC6F2104(a1, a2, a3, (uint64_t)&unk_1E7517520, (uint64_t)&unk_1E7517548, (uint64_t)sub_1BC6F65DC, (uint64_t)sub_1BC6E15EC);
}

void sub_1BC6F1738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v6 = *(void **)(a1 + 16);
  v7 = (void *)sub_1BC817A28();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v10[4] = sub_1BC6F73DC;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1BC76C088;
  v10[3] = &block_descriptor_93;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_addMetadata_completion_, v7, v9);
  _Block_release(v9);

}

uint64_t sub_1BC6F1834(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1BC6F1854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;

  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v4;
  v9[3] = a1;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = a4;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  swift_retain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC6F4C60((uint64_t)sub_1BC6F661C, (uint64_t)v9, (uint64_t)sub_1BC6F7CBC, v10);
  swift_release();
  return swift_release();
}

void sub_1BC6F1910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v10;
  void *v11;
  _QWORD *v12;
  void *v13;
  _QWORD v14[6];

  v10 = *(void **)(a1 + 16);
  v11 = (void *)sub_1BC817AC4();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a1;
  v12[5] = a2;
  v12[6] = a3;
  v14[4] = sub_1BC6F73CC;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC76C088;
  v14[3] = &block_descriptor_87;
  v13 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v10, sel_removeAllSummariesWithPackage_completion_, v11, v13);
  _Block_release(v13);

}

void sub_1BC6F1A1C(int a1, id a2, void (*a3)(id), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v9;
  os_unfair_lock_s *v12;
  uint64_t *v13;
  os_unfair_lock_s *v14;

  if (a2)
  {
    v9 = a2;
    a3(a2);

  }
  else
  {
    v12 = *(os_unfair_lock_s **)(a5 + 40);
    v13 = (uint64_t *)&v12[4];
    v14 = v12 + 16;
    os_unfair_lock_lock(v12 + 16);
    sub_1BC6F1ADC(v13, a6, a7);
    os_unfair_lock_unlock(v14);
    a3(0);
  }
}

uint64_t sub_1BC6F1ADC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  void *v18;
  uint64_t v20;

  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BC6F6B10(v6, a2, a3);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = (uint64_t *)(v7 + 56);
    do
    {
      v10 = *(v9 - 3);
      v11 = *(v9 - 2);
      v12 = *(v9 - 1);
      v13 = *v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_1BC7066E8(v10, v11, v12, v13);
      LOBYTE(v12) = v15;
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v17 = *a1;
        v20 = *a1;
        *a1 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BC70AB7C();
          v17 = v20;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v18 = *(void **)(*(_QWORD *)(v17 + 56) + 8 * v14);
        sub_1BC71E7EC(v14, v17);
        *a1 = v17;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v9 += 4;
      --v8;
    }
    while (v8);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC6F1C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v5;
  v11[3] = a1;
  v11[4] = a2;
  v11[5] = a3;
  v11[6] = a4;
  v11[7] = a5;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a4;
  *(_QWORD *)(v12 + 24) = a5;
  swift_retain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC6F4C60((uint64_t)sub_1BC6F6668, (uint64_t)v11, (uint64_t)sub_1BC6F7CBC, v12);
  swift_release();
  return swift_release();
}

void sub_1BC6F1D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v17[6];

  v12 = *(void **)(a1 + 16);
  v13 = (void *)sub_1BC817AC4();
  v14 = (void *)sub_1BC817C50();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a5;
  v15[3] = a6;
  v15[4] = a1;
  v15[5] = a2;
  v15[6] = a3;
  v15[7] = a4;
  v17[4] = sub_1BC6F7388;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1BC76C088;
  v17[3] = &block_descriptor_81;
  v16 = _Block_copy(v17);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v12, sel_removeSummariesWithPackage_names_completion_, v13, v14, v16);
  _Block_release(v16);

}

void sub_1BC6F1E74(int a1, id a2, void (*a3)(id), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  id v10;
  os_unfair_lock_s *v14;
  uint64_t *v15;
  os_unfair_lock_s *v16;

  if (a2)
  {
    v10 = a2;
    a3(a2);

  }
  else
  {
    v14 = *(os_unfair_lock_s **)(a5 + 40);
    v15 = (uint64_t *)&v14[4];
    v16 = v14 + 16;
    os_unfair_lock_lock(v14 + 16);
    sub_1BC6F1F3C(v15, a6, a7, a8);
    os_unfair_lock_unlock(v16);
    a3(0);
  }
}

uint64_t sub_1BC6F1F3C(uint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  void *v20;
  uint64_t v22;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1BC6F6D70(v8, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = (uint64_t *)(v9 + 56);
    do
    {
      v12 = *(v11 - 3);
      v13 = *(v11 - 2);
      v14 = *(v11 - 1);
      v15 = *v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = sub_1BC7066E8(v12, v13, v14, v15);
      LOBYTE(v14) = v17;
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v19 = *a1;
        v22 = *a1;
        *a1 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BC70AB7C();
          v19 = v22;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v20 = *(void **)(*(_QWORD *)(v19 + 56) + 8 * v16);
        sub_1BC71E7EC(v16, v19);
        *a1 = v19;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v11 += 4;
      --v10;
    }
    while (v10);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC6F20E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC6F2104(a1, a2, a3, (uint64_t)&unk_1E7517610, (uint64_t)&unk_1E7517638, (uint64_t)sub_1BC6F66B0, (uint64_t)sub_1BC6F7CBC);
}

uint64_t sub_1BC6F2104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v13;
  uint64_t v14;

  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v7;
  v13[3] = a1;
  v13[4] = a2;
  v13[5] = a3;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  swift_retain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC6F4C60(a6, (uint64_t)v13, a7, v14);
  swift_release();
  return swift_release();
}

void sub_1BC6F21BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F21D8(a1, a2, a3, a4, (uint64_t)&unk_1E75178A8, (uint64_t)sub_1BC6F7C8C, (uint64_t)&block_descriptor_75);
}

void sub_1BC6F21D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v17[6];

  v13 = *(void **)(a1 + 16);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6B84C8);
  v14 = (void *)sub_1BC817C50();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a1;
  v15[5] = a2;
  v17[4] = a6;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1BC76C088;
  v17[3] = a7;
  v16 = _Block_copy(v17);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v13, sel_addSummaries_completion_, v14, v16);
  _Block_release(v16);

}

void sub_1BC6F22F4(int a1, id a2, void (*a3)(id), uint64_t a4, uint64_t a5, unint64_t a6)
{
  id v8;
  os_unfair_lock_s *v10;
  unint64_t v11;
  os_unfair_lock_s *v12;

  if (a2)
  {
    v8 = a2;
    a3(a2);

  }
  else
  {
    v10 = *(os_unfair_lock_s **)(a5 + 40);
    v11 = (unint64_t)&v10[4];
    v12 = v10 + 16;
    os_unfair_lock_lock(v10 + 16);
    sub_1BC6F23A0(v11, a6);
    os_unfair_lock_unlock(v12);
    a3(0);
  }
}

uint64_t sub_1BC6F23A0(unint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;

  v2 = a2;
  if (a2 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    v4 = sub_1BC8184E4();
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
    return swift_bridgeObjectRelease();
LABEL_3:
  v33 = v2;
  v34 = v2 & 0xC000000000000001;
  v5 = 4;
  v31 = v4;
  v32 = (_QWORD *)a1;
  while (1)
  {
    if (v34)
      v7 = (id)MEMORY[0x1BCCF4FB0](v5 - 4, v2);
    else
      v7 = *(id *)(v2 + 8 * v5);
    v8 = v7;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v35 = v5 - 3;
    v36 = v5;
    v9 = objc_msgSend(v7, sel_package);
    v10 = sub_1BC817AE8();
    v12 = v11;

    v2 = (unint64_t)objc_msgSend(v8, sel_name);
    v13 = sub_1BC817AE8();
    v15 = v14;

    v16 = v8;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *(_QWORD **)a1;
    v37 = *(_QWORD **)a1;
    *(_QWORD *)a1 = 0x8000000000000000;
    a1 = sub_1BC7066E8(v10, v12, v13, v15);
    v20 = v18[2];
    v21 = (v19 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      goto LABEL_22;
    v2 = v19;
    if (v18[3] < v22)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v25 = v37;
      if ((v19 & 1) != 0)
        goto LABEL_4;
    }
    else
    {
      sub_1BC70AB7C();
      v25 = v37;
      if ((v2 & 1) != 0)
      {
LABEL_4:
        v6 = v25[7];

        *(_QWORD *)(v6 + 8 * a1) = v16;
        goto LABEL_5;
      }
    }
LABEL_17:
    v25[(a1 >> 6) + 8] |= 1 << a1;
    v26 = (uint64_t *)(v25[6] + 32 * a1);
    *v26 = v10;
    v26[1] = v12;
    v26[2] = v13;
    v26[3] = v15;
    *(_QWORD *)(v25[7] + 8 * a1) = v16;
    v27 = v25[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_23;
    v25[2] = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_5:
    a1 = (unint64_t)v32;
    *v32 = v25;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = v36 + 1;
    v2 = v33;
    if (v35 == v31)
      return swift_bridgeObjectRelease();
  }
  sub_1BC707464(v22, isUniquelyReferenced_nonNull_native);
  v23 = sub_1BC7066E8(v10, v12, v13, v15);
  if ((v2 & 1) == (v24 & 1))
  {
    a1 = v23;
    v25 = v37;
    if ((v2 & 1) != 0)
      goto LABEL_4;
    goto LABEL_17;
  }
  result = sub_1BC8186E8();
  __break(1u);
  return result;
}

uint64_t sub_1BC6F2664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  os_unfair_lock_s *v15;

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = v5;
  v11[6] = a4;
  v11[7] = a5;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a4;
  *(_QWORD *)(v12 + 24) = a5;
  v13 = *(os_unfair_lock_s **)(v5 + 40);
  v14 = (uint64_t)&v13[4];
  v15 = v13 + 16;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v15);
  sub_1BC6F4B54(v14, (void (*)(void *))sub_1BC6F6730, v12, (void (*)(uint64_t))sub_1BC6F6720, (uint64_t)v11);
  os_unfair_lock_unlock(v15);
  swift_release();
  return swift_release();
}

uint64_t sub_1BC6F2760(uint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  BOOL v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  unint64_t v52;
  char isUniquelyReferenced_nonNull_native;
  char v54;
  unint64_t v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  char v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  int64_t v73;
  unint64_t v74;
  unint64_t v75;
  int64_t v76;
  unint64_t v77;
  int64_t v78;
  id v79;
  void *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int64_t v92;
  BOOL v93;
  BOOL v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  unint64_t v108;
  char v109;
  char v110;
  unint64_t v111;
  uint64_t v112;
  _BOOL8 v113;
  uint64_t v114;
  char v115;
  unint64_t v116;
  char v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  void *v126;
  char *v127;
  void (*v128)(uint64_t);
  char *v129;
  uint64_t v130;
  uint64_t result;
  _QWORD v132[2];
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  _QWORD *v142;
  int64_t v143;
  _QWORD *v144;
  unint64_t v145;
  uint64_t v146;
  int64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD aBlock[7];

  v134 = a7;
  v133 = a6;
  v132[1] = a5;
  v150 = a2;
  v10 = sub_1BC817950();
  v139 = *(_QWORD *)(v10 - 8);
  v140 = v10;
  MEMORY[0x1E0C80A78](v10);
  v138 = (char *)v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_1BC817974();
  v136 = *(_QWORD *)(v137 - 8);
  MEMORY[0x1E0C80A78](v137);
  v135 = (char *)v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_1BC7102CC(MEMORY[0x1E0DEE9D8]);
  v141 = a1;
  v13 = a1[1];
  v14 = *(_QWORD *)(v13 + 64);
  v146 = v13 + 64;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v147 = (unint64_t)(v15 + 63) >> 6;
  v148 = v13;
  swift_bridgeObjectRetain();
  v18 = 0;
  v142 = a4 + 9;
  v144 = a4;
  v149 = a3;
  while (v17)
  {
    v19 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    v20 = v19 | (v18 << 6);
LABEL_23:
    v24 = *(id *)(*(_QWORD *)(v148 + 56) + 8 * v20);
    v25 = v24;
    if (!a3)
      goto LABEL_31;
    v26 = objc_msgSend(v24, sel_package);
    v27 = sub_1BC817AE8();
    v29 = v28;

    if (v27 == v150 && v29 == a3)
    {
      swift_bridgeObjectRelease();
LABEL_31:
      if (!a4)
        goto LABEL_55;
      v32 = objc_msgSend(v25, sel_name);
      v33 = sub_1BC817AE8();
      v35 = v34;

      v36 = a4[2];
      if (v36)
      {
        v37 = a4[4] == v33 && a4[5] == v35;
        if (!v37 && (sub_1BC818694() & 1) == 0)
        {
          if (v36 == 1)
            goto LABEL_53;
          v38 = a4[6] == v33 && a4[7] == v35;
          if (!v38 && (sub_1BC818694() & 1) == 0)
          {
            if (v36 != 2)
            {
              v39 = v142;
              v40 = 2;
              while (1)
              {
                v41 = v40 + 1;
                if (__OFADD__(v40, 1))
                  break;
                v42 = *(v39 - 1) == v33 && *v39 == v35;
                if (v42 || (sub_1BC818694() & 1) != 0)
                  goto LABEL_54;
                v39 += 2;
                ++v40;
                if (v41 == v36)
                  goto LABEL_53;
              }
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
              goto LABEL_144;
            }
LABEL_53:

            goto LABEL_67;
          }
        }
LABEL_54:
        swift_bridgeObjectRelease();
LABEL_55:
        v143 = v18;
        v43 = objc_msgSend(v25, sel_package);
        v44 = sub_1BC817AE8();
        v46 = v45;

        v47 = objc_msgSend(v25, sel_name);
        v48 = sub_1BC817AE8();
        v50 = v49;

        v51 = v25;
        v52 = v145;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        aBlock[0] = v52;
        v55 = sub_1BC7066E8(v44, v46, v48, v50);
        v56 = *(_QWORD *)(v52 + 16);
        v57 = (v54 & 1) == 0;
        v58 = v56 + v57;
        if (__OFADD__(v56, v57))
          goto LABEL_139;
        v59 = v54;
        if (*(_QWORD *)(v52 + 24) >= v58)
        {
          v18 = v143;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1BC70AB7C();
            v18 = v143;
          }
          a4 = v144;
        }
        else
        {
          sub_1BC707464(v58, isUniquelyReferenced_nonNull_native);
          v60 = sub_1BC7066E8(v44, v46, v48, v50);
          if ((v59 & 1) != (v61 & 1))
            goto LABEL_145;
          v55 = v60;
          v18 = v143;
          a4 = v144;
        }
        v62 = (_QWORD *)aBlock[0];
        v145 = aBlock[0];
        if ((v59 & 1) != 0)
        {
          v63 = *(_QWORD *)(aBlock[0] + 56);

          *(_QWORD *)(v63 + 8 * v55) = v51;
        }
        else
        {
          *(_QWORD *)(aBlock[0] + 8 * (v55 >> 6) + 64) |= 1 << v55;
          v64 = (uint64_t *)(v62[6] + 32 * v55);
          *v64 = v44;
          v64[1] = v46;
          v64[2] = v48;
          v64[3] = v50;
          *(_QWORD *)(v62[7] + 8 * v55) = v51;
          v65 = v62[2];
          v66 = __OFADD__(v65, 1);
          v67 = v65 + 1;
          if (v66)
            goto LABEL_141;
          v62[2] = v67;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_67:
        swift_bridgeObjectRelease();
        a3 = v149;
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v31 = sub_1BC818694();
      swift_bridgeObjectRelease();
      if ((v31 & 1) != 0)
        goto LABEL_31;

    }
  }
  v21 = v18 + 1;
  if (__OFADD__(v18, 1))
    goto LABEL_137;
  if (v21 < v147)
  {
    v22 = *(_QWORD *)(v146 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v147)
        goto LABEL_68;
      v22 = *(_QWORD *)(v146 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v147)
          goto LABEL_68;
        v22 = *(_QWORD *)(v146 + 8 * v18);
        if (!v22)
        {
          v18 = v21 + 3;
          if (v21 + 3 >= v147)
            goto LABEL_68;
          v22 = *(_QWORD *)(v146 + 8 * v18);
          if (!v22)
          {
            v23 = v21 + 4;
            if (v23 >= v147)
              goto LABEL_68;
            v22 = *(_QWORD *)(v146 + 8 * v23);
            if (!v22)
            {
              while (1)
              {
                v18 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_143;
                if (v18 >= v147)
                  goto LABEL_68;
                v22 = *(_QWORD *)(v146 + 8 * v18);
                ++v23;
                if (v22)
                  goto LABEL_22;
              }
            }
            v18 = v23;
          }
        }
      }
    }
LABEL_22:
    v17 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_23;
  }
LABEL_68:
  swift_release();
  v68 = *v141;
  v69 = *(_QWORD *)(*v141 + 64);
  v146 = *v141 + 64;
  v70 = 1 << *(_BYTE *)(v68 + 32);
  v71 = -1;
  if (v70 < 64)
    v71 = ~(-1 << v70);
  v72 = v71 & v69;
  v147 = (unint64_t)(v70 + 63) >> 6;
  v148 = v68;
  swift_bridgeObjectRetain();
  v73 = 0;
  v142 = a4 + 9;
  while (v72)
  {
    v74 = __clz(__rbit64(v72));
    v72 &= v72 - 1;
    v75 = v74 | (v73 << 6);
LABEL_90:
    v79 = *(id *)(*(_QWORD *)(v148 + 56) + 8 * v75);
    v80 = v79;
    if (a3)
    {
      v81 = objc_msgSend(v79, sel_package);
      v82 = sub_1BC817AE8();
      v84 = v83;

      if (v82 == v150 && v84 == a3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v86 = sub_1BC818694();
        swift_bridgeObjectRelease();
        if ((v86 & 1) == 0)
        {

          continue;
        }
      }
    }
    if (a4)
    {
      v87 = objc_msgSend(v80, sel_name);
      v88 = sub_1BC817AE8();
      v90 = v89;

      v91 = a4[2];
      if (!v91)
      {

        swift_bridgeObjectRelease();
        continue;
      }
      v92 = v73;
      v93 = a4[4] == v88 && a4[5] == v90;
      if (v93 || (sub_1BC818694() & 1) != 0)
        goto LABEL_122;
      if (v91 == 1)
      {

        swift_bridgeObjectRelease();
        a3 = v149;
        continue;
      }
      v94 = a4[6] == v88 && a4[7] == v90;
      if (v94 || (sub_1BC818694() & 1) != 0)
      {
LABEL_122:
        swift_bridgeObjectRelease();
        v73 = v92;
        goto LABEL_123;
      }
      if (v91 != 2)
      {
        v95 = v142;
        v96 = 2;
        do
        {
          v97 = v96 + 1;
          if (__OFADD__(v96, 1))
            goto LABEL_136;
          v98 = *(v95 - 1) == v88 && *v95 == v90;
          if (v98 || (sub_1BC818694() & 1) != 0)
            goto LABEL_122;
          v95 += 2;
          ++v96;
        }
        while (v97 != v91);
      }

      swift_bridgeObjectRelease();
      a3 = v149;
      v73 = v92;
    }
    else
    {
LABEL_123:
      v143 = v73;
      v99 = objc_msgSend(v80, sel_package);
      v100 = sub_1BC817AE8();
      v102 = v101;

      v103 = objc_msgSend(v80, sel_name);
      v104 = sub_1BC817AE8();
      v106 = v105;

      v107 = v80;
      v108 = v145;
      v109 = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v108;
      v111 = sub_1BC7066E8(v100, v102, v104, v106);
      v112 = *(_QWORD *)(v108 + 16);
      v113 = (v110 & 1) == 0;
      v114 = v112 + v113;
      if (__OFADD__(v112, v113))
        goto LABEL_140;
      v115 = v110;
      if (*(_QWORD *)(v108 + 24) >= v114)
      {
        if ((v109 & 1) == 0)
          sub_1BC70AB7C();
      }
      else
      {
        sub_1BC707464(v114, v109);
        v116 = sub_1BC7066E8(v100, v102, v104, v106);
        if ((v115 & 1) != (v117 & 1))
          goto LABEL_145;
        v111 = v116;
      }
      a4 = v144;
      v118 = (_QWORD *)aBlock[0];
      v145 = aBlock[0];
      if ((v115 & 1) != 0)
      {
        v119 = *(_QWORD *)(aBlock[0] + 56);
        v120 = 8 * v111;

        *(_QWORD *)(v119 + v120) = v107;
      }
      else
      {
        *(_QWORD *)(aBlock[0] + 8 * (v111 >> 6) + 64) |= 1 << v111;
        v121 = (uint64_t *)(v118[6] + 32 * v111);
        *v121 = v100;
        v121[1] = v102;
        v121[2] = v104;
        v121[3] = v106;
        *(_QWORD *)(v118[7] + 8 * v111) = v107;
        v122 = v118[2];
        v66 = __OFADD__(v122, 1);
        v123 = v122 + 1;
        if (v66)
          goto LABEL_142;
        v118[2] = v123;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a3 = v149;
      v73 = v143;
    }
  }
  v76 = v73 + 1;
  if (__OFADD__(v73, 1))
    goto LABEL_138;
  if (v76 >= v147)
  {
LABEL_134:
    swift_release();
    v124 = (_QWORD *)swift_allocObject();
    v125 = v134;
    v124[2] = v133;
    v124[3] = v125;
    v124[4] = v145;
    aBlock[4] = sub_1BC6F72F0;
    aBlock[5] = v124;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC719640;
    aBlock[3] = &block_descriptor_69;
    v126 = _Block_copy(aBlock);
    swift_retain();
    v127 = v135;
    sub_1BC817968();
    v151 = MEMORY[0x1E0DEE9D8];
    v128 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC6F72FC(0, (unint64_t *)&unk_1ED6BA7D0, v128);
    sub_1BC6F75D4((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v128);
    v129 = v138;
    v130 = v140;
    sub_1BC818184();
    MEMORY[0x1BCCF4C68](0, v127, v129, v126);
    _Block_release(v126);
    (*(void (**)(char *, uint64_t))(v139 + 8))(v129, v130);
    (*(void (**)(char *, uint64_t))(v136 + 8))(v127, v137);
    return swift_release();
  }
  v77 = *(_QWORD *)(v146 + 8 * v76);
  ++v73;
  if (v77)
    goto LABEL_89;
  v73 = v76 + 1;
  if (v76 + 1 >= v147)
    goto LABEL_134;
  v77 = *(_QWORD *)(v146 + 8 * v73);
  if (v77)
    goto LABEL_89;
  v73 = v76 + 2;
  if (v76 + 2 >= v147)
    goto LABEL_134;
  v77 = *(_QWORD *)(v146 + 8 * v73);
  if (v77)
    goto LABEL_89;
  v73 = v76 + 3;
  if (v76 + 3 >= v147)
    goto LABEL_134;
  v77 = *(_QWORD *)(v146 + 8 * v73);
  if (v77)
  {
LABEL_89:
    v72 = (v77 - 1) & v77;
    v75 = __clz(__rbit64(v77)) + (v73 << 6);
    goto LABEL_90;
  }
  v78 = v76 + 4;
  if (v78 >= v147)
    goto LABEL_134;
  v77 = *(_QWORD *)(v146 + 8 * v78);
  if (v77)
  {
    v73 = v78;
    goto LABEL_89;
  }
  while (1)
  {
    v73 = v78 + 1;
    if (__OFADD__(v78, 1))
      break;
    if (v73 >= v147)
      goto LABEL_134;
    v77 = *(_QWORD *)(v146 + 8 * v73);
    ++v78;
    if (v77)
      goto LABEL_89;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1BC8186E8();
  __break(1u);
  return result;
}

uint64_t sub_1BC6F331C(void (*a1)(_QWORD *, _QWORD), uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v8;

  swift_bridgeObjectRetain();
  v5 = (unint64_t)sub_1BC705FBC(a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if ((v5 & 0x8000000000000000) != 0 || (v6 = (_QWORD *)v5, (v5 & 0x4000000000000000) != 0))
  {
    v6 = sub_1BC705EB0(v5);
    swift_release();
  }
  v8 = v6;
  sub_1BC6F4FA0((uint64_t *)&v8);
  swift_release();
  a1(v8, 0);
  return swift_release();
}

uint64_t sub_1BC6F33D4(id *a1, void **a2)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  char v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *a1;
  v3 = *a2;
  v4 = objc_msgSend(*a1, sel_package);
  v5 = sub_1BC817AE8();
  v7 = v6;

  v8 = objc_msgSend(v3, sel_package);
  v9 = sub_1BC817AE8();
  v11 = v10;

  if (v5 == v9 && v7 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = 1;
    v14 = sub_1BC818694();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      return v13 & 1;
  }
  v15 = objc_msgSend(v2, sel_package);
  v16 = sub_1BC817AE8();
  v18 = v17;

  v19 = objc_msgSend(v3, sel_package);
  v20 = sub_1BC817AE8();
  v22 = v21;

  if (v20 == v16 && v22 == v18)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v23 = sub_1BC818694();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
    {
      v13 = 0;
      return v13 & 1;
    }
  }
  v24 = objc_msgSend(v2, sel_name);
  v25 = sub_1BC817AE8();
  v27 = v26;

  v28 = objc_msgSend(v3, sel_name);
  v29 = sub_1BC817AE8();
  v31 = v30;

  if (v25 == v29 && v27 == v31)
    v13 = 0;
  else
    v13 = sub_1BC818694();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

uint64_t sub_1BC6F3608(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1BC818694(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_1BC818694();
  }
  return result;
}

uint64_t sub_1BC6F3698()
{
  sub_1BC81873C();
  sub_1BC817B30();
  sub_1BC817B30();
  return sub_1BC818778();
}

uint64_t sub_1BC6F36FC()
{
  sub_1BC817B30();
  return sub_1BC817B30();
}

uint64_t sub_1BC6F3738()
{
  sub_1BC81873C();
  sub_1BC817B30();
  sub_1BC817B30();
  return sub_1BC818778();
}

void sub_1BC6F3798()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[6];

  v1 = *v0;
  v2 = v0[5];
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 64));
  if (*(_QWORD *)(v2 + 32))
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 64));
  }
  else
  {
    *(_QWORD *)(v2 + 32) = 1;
    os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 64));
    v3 = (void *)v0[2];
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v0;
    *(_QWORD *)(v4 + 24) = v1;
    v6[4] = sub_1BC6F7270;
    v6[5] = v4;
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 1107296256;
    v6[2] = sub_1BC6F3F68;
    v6[3] = &block_descriptor_60;
    v5 = _Block_copy(v6);
    swift_retain();
    swift_release();
    objc_msgSend(v3, sel_addedSummariesWithPackage_names_resultsHandler_, 0, 0, v5);
    _Block_release(v5);
  }
}

void sub_1BC6F389C(unint64_t a1, char a2, void *a3, uint64_t a4)
{
  os_unfair_lock_s *v7;
  unint64_t *p_os_unfair_lock_opaque;
  os_unfair_lock_s *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  unint64_t v15;

  v7 = *(os_unfair_lock_s **)(a4 + 40);
  p_os_unfair_lock_opaque = (unint64_t *)&v7[4]._os_unfair_lock_opaque;
  v9 = v7 + 16;
  os_unfair_lock_lock(v7 + 16);
  sub_1BC6F399C(a3, p_os_unfair_lock_opaque, a1, a2, (uint64_t *)&v15);
  os_unfair_lock_unlock(v9);
  v10 = v15;
  if (v15)
  {
    if (v15 != 1)
    {
      v11 = *(_QWORD *)(v15 + 16);
      if (v11)
      {
        swift_bridgeObjectRetain();
        v12 = v10 + 40;
        do
        {
          v13 = *(void (**)(uint64_t))(v12 - 8);
          v14 = swift_retain();
          v13(v14);
          swift_release();
          v12 += 16;
          --v11;
        }
        while (v11);
        sub_1BC6F7278(v10);
      }
      sub_1BC6F7278(v10);
    }
  }
  else
  {
    sub_1BC6F3798();
  }
}

void sub_1BC6F399C(id a1@<X1>, unint64_t *a2@<X0>, unint64_t a3@<X3>, char a4@<W4>, uint64_t *a5@<X8>)
{
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  id v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  void (*v55)(id);
  uint64_t v56;
  id v57;
  char v58;
  uint64_t v60;
  unint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;

  if (a1)
  {
    v9 = a1;
    v10 = (void *)sub_1BC816D50();
    if ((objc_msgSend(v10, sel_hk_isObjectNotFoundError) & 1) == 0)
    {
      if (qword_1ED6BB338 != -1)
        swift_once();
      v38 = sub_1BC817590();
      __swift_project_value_buffer(v38, (uint64_t)qword_1ED6BB320);
      v39 = a1;
      v40 = a1;
      v41 = sub_1BC81756C();
      v42 = sub_1BC817E84();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        v66 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v43 = 138412290;
        v44 = a1;
        v68 = _swift_stdlib_bridgeErrorToNSError();
        sub_1BC818148();
        *v66 = v68;

        _os_log_impl(&dword_1BC6DD000, v41, v42, "Failed to warm shared summary cache: %@", v43, 0xCu);
        sub_1BC6EFA40();
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v66, -1, -1);
        MEMORY[0x1BCCF5BA4](v43, -1, -1);
      }
      else
      {

      }
      v45 = a2[5];
      if (v45 > 2)
      {
        v48 = MEMORY[0x1E0DEE9D8];
        *a2 = sub_1BC7102CC(MEMORY[0x1E0DEE9D8]);
        swift_bridgeObjectRelease();
        v49 = (void *)a2[2];
        v50 = v10;
        sub_1BC6F723C(v49);
        a2[2] = (unint64_t)v10;
        v51 = a2[3];
        v52 = *(_QWORD *)(v51 + 16);
        if (v52)
        {
          v53 = a2;
          swift_bridgeObjectRetain();
          v54 = v51 + 56;
          do
          {
            v55 = *(void (**)(id))(v54 - 8);
            v54 += 32;
            swift_retain();
            swift_retain();
            v55(v50);
            swift_release();
            swift_release();
            --v52;
          }
          while (v52);
          swift_bridgeObjectRelease();
          a2 = v53;
        }
        swift_bridgeObjectRelease();
        v56 = a2[4];
        a2[3] = v48;
        a2[4] = v48;
        v57 = v50;
        v47 = sub_1BC6F61EC(v56, v57);
        swift_bridgeObjectRelease();

      }
      else
      {
        a2[5] = v45 + 1;
        v46 = sub_1BC7102CC(MEMORY[0x1E0DEE9D8]);

        *a2 = v46;
        swift_bridgeObjectRelease();
        sub_1BC6F723C((id)a2[2]);
        v47 = 0;
        a2[2] = 0;
      }
      goto LABEL_45;
    }

  }
  if (!a3)
  {
LABEL_42:
    if ((a4 & 1) != 0)
      sub_1BC6F3FFC();
    v47 = 1;
LABEL_45:
    *a5 = v47;
    return;
  }
  v58 = a4;
  if (a3 >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    v11 = sub_1BC8184E4();
    if (v11)
      goto LABEL_7;
    goto LABEL_41;
  }
  v11 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    a4 = v58;
    goto LABEL_42;
  }
LABEL_7:
  v62 = a2;
  v63 = a3 & 0xC000000000000001;
  v12 = 4;
  v60 = v11;
  v61 = a3;
  while (1)
  {
    if (v63)
      v14 = (id)MEMORY[0x1BCCF4FB0](v12 - 4, a3);
    else
      v14 = *(id *)(a3 + 8 * v12);
    v15 = v14;
    if (__OFADD__(v12 - 4, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v64 = v12 - 3;
    v65 = v12;
    v16 = objc_msgSend(v14, sel_package);
    v17 = sub_1BC817AE8();
    v19 = v18;

    v20 = objc_msgSend(v15, sel_name);
    v21 = sub_1BC817AE8();
    a3 = v22;

    v23 = v15;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = *a2;
    v67 = (_QWORD *)*a2;
    *a2 = 0x8000000000000000;
    v27 = sub_1BC7066E8(v17, v19, v21, a3);
    v28 = *(_QWORD *)(v25 + 16);
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      goto LABEL_38;
    a2 = v26;
    if (*(_QWORD *)(v25 + 24) < v30)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v33 = v67;
      if ((v26 & 1) != 0)
        goto LABEL_8;
    }
    else
    {
      sub_1BC70AB7C();
      v33 = v67;
      if ((a2 & 1) != 0)
      {
LABEL_8:
        v13 = v33[7];

        *(_QWORD *)(v13 + 8 * v27) = v23;
        goto LABEL_9;
      }
    }
LABEL_21:
    v33[(v27 >> 6) + 8] |= 1 << v27;
    v34 = (uint64_t *)(v33[6] + 32 * v27);
    *v34 = v17;
    v34[1] = v19;
    v34[2] = v21;
    v34[3] = a3;
    *(_QWORD *)(v33[7] + 8 * v27) = v23;
    v35 = v33[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_39;
    v33[2] = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_9:
    a2 = v62;
    *v62 = (unint64_t)v33;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v65 + 1;
    a3 = v61;
    if (v64 == v60)
      goto LABEL_41;
  }
  sub_1BC707464(v30, isUniquelyReferenced_nonNull_native);
  v31 = sub_1BC7066E8(v17, v19, v21, a3);
  if ((a2 & 1) == (v32 & 1))
  {
    v27 = v31;
    v33 = v67;
    if ((a2 & 1) != 0)
      goto LABEL_8;
    goto LABEL_21;
  }
  sub_1BC8186E8();
  __break(1u);
}

uint64_t sub_1BC6F3F68(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, void *);
  id v8;

  v6 = a2;
  v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6B84C8);
    v6 = sub_1BC817C5C();
  }
  swift_retain();
  v8 = a4;
  v7(v6, a3, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1BC6F3FFC()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD aBlock[6];

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_healthStore);
  if (v1)
  {
    v2 = v1;
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v0;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = objc_allocWithZone(MEMORY[0x1E0CB6B88]);
    aBlock[4] = sub_1BC6F6B00;
    aBlock[5] = v3;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC74C608;
    aBlock[3] = &block_descriptor_1;
    v5 = _Block_copy(aBlock);
    swift_retain();
    v6 = v2;
    v7 = objc_msgSend(v4, sel_initWithHandler_, v5);
    _Block_release(v5);
    swift_release();
    objc_msgSend(v6, sel_executeQuery_, v7);

  }
  else
  {
    sub_1BC8184B4();
    __break(1u);
  }
}

uint64_t sub_1BC6F4154(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  os_unfair_lock_s *v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v17;

  v9 = *(os_unfair_lock_s **)(a4 + 40);
  v10 = (uint64_t)&v9[4];
  v11 = v9 + 16;
  os_unfair_lock_lock(v9 + 16);
  sub_1BC6F4208(a3, v10, a4, a2, a5, &v17);
  os_unfair_lock_unlock(v11);
  v12 = *(_QWORD *)(v17 + 16);
  if (v12)
  {
    v13 = v17 + 40;
    do
    {
      v14 = *(void (**)(uint64_t))(v13 - 8);
      v15 = swift_retain();
      v14(v15);
      swift_release();
      v13 += 16;
      --v12;
    }
    while (v12);
  }
  return swift_bridgeObjectRelease();
}

void sub_1BC6F4208(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  id v17;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  const char *v30;
  uint64_t v31;
  _QWORD aBlock[6];
  uint64_t *v33;

  if (!a1)
  {
    if (a4)
    {
      v20 = (*(uint64_t (**)(uint64_t))(a3 + 24))(a4);
      if (v20)
      {
        v21 = (void *)v20;
        v22 = objc_allocWithZone(MEMORY[0x1E0CB6B68]);
        aBlock[4] = sub_1BC6F7234;
        aBlock[5] = a3;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1BC6F4EF0;
        aBlock[3] = &block_descriptor_51;
        v23 = _Block_copy(aBlock);
        swift_retain();
        v24 = objc_msgSend(v22, sel_initWithTransaction_package_resultsHandler_, v21, 0, v23);
        _Block_release(v23);
        swift_release();
        objc_msgSend(a5, sel_executeQuery_, v24);

        v25 = MEMORY[0x1E0DEE9D8];
        goto LABEL_21;
      }
      if (qword_1ED6BB338 != -1)
        swift_once();
      v31 = sub_1BC817590();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED6BB320);
      v27 = sub_1BC81756C();
      v28 = sub_1BC817E84();
      if (!os_log_type_enabled(v27, v28))
      {
LABEL_20:

        v25 = sub_1BC6F707C(a2);
        goto LABEL_21;
      }
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      v30 = "No fallback transaction selected.";
    }
    else
    {
      if (qword_1ED6BB338 != -1)
        swift_once();
      v26 = sub_1BC817590();
      __swift_project_value_buffer(v26, (uint64_t)qword_1ED6BB320);
      v27 = sub_1BC81756C();
      v28 = sub_1BC817E84();
      if (!os_log_type_enabled(v27, v28))
        goto LABEL_20;
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      v30 = "No fallback transactions found.";
    }
    _os_log_impl(&dword_1BC6DD000, v27, v28, v30, v29, 2u);
    MEMORY[0x1BCCF5BA4](v29, -1, -1);
    goto LABEL_20;
  }
  v9 = a1;
  if (qword_1ED6BB338 != -1)
    swift_once();
  v10 = sub_1BC817590();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED6BB320);
  v11 = a1;
  v12 = a1;
  v13 = sub_1BC81756C();
  v14 = sub_1BC817E84();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v33 = a6;
    v16 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v15 = 138412290;
    v17 = a1;
    aBlock[0] = _swift_stdlib_bridgeErrorToNSError();
    sub_1BC818148();
    *v16 = aBlock[0];

    _os_log_impl(&dword_1BC6DD000, v13, v14, "Failed to fetch fallback transactions: %@", v15, 0xCu);
    sub_1BC6EFA40();
    swift_arrayDestroy();
    a6 = v33;
    MEMORY[0x1BCCF5BA4](v16, -1, -1);
    MEMORY[0x1BCCF5BA4](v15, -1, -1);
  }
  else
  {

  }
  v25 = sub_1BC6F707C(a2);

LABEL_21:
  *a6 = v25;
}

uint64_t sub_1BC6F4610(uint64_t a1, unint64_t a2, char a3, void *a4, uint64_t a5)
{
  os_unfair_lock_s *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v16;

  v8 = *(os_unfair_lock_s **)(a5 + 40);
  v9 = (uint64_t)&v8[4];
  v10 = v8 + 16;
  os_unfair_lock_lock(v8 + 16);
  sub_1BC6F46C4(a4, v9, a2, a3, &v16);
  os_unfair_lock_unlock(v10);
  v11 = *(_QWORD *)(v16 + 16);
  if (v11)
  {
    v12 = v16 + 40;
    do
    {
      v13 = *(void (**)(uint64_t))(v12 - 8);
      v14 = swift_retain();
      v13(v14);
      swift_release();
      v12 += 16;
      --v11;
    }
    while (v11);
  }
  return swift_bridgeObjectRelease();
}

void sub_1BC6F46C4(id a1@<X1>, uint64_t a2@<X0>, unint64_t a3@<X3>, char a4@<W4>, uint64_t *a5@<X8>)
{
  unint64_t v5;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  if (a1)
  {
    v5 = (unint64_t)a1;
    v7 = a1;
    if (qword_1ED6BB338 != -1)
LABEL_31:
      swift_once();
    v8 = sub_1BC817590();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED6BB320);
    v9 = (id)v5;
    v10 = (id)v5;
    v11 = sub_1BC81756C();
    v12 = sub_1BC817E84();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v13 = 138412290;
      v15 = (id)v5;
      v53 = _swift_stdlib_bridgeErrorToNSError();
      sub_1BC818148();
      *v14 = v53;

      _os_log_impl(&dword_1BC6DD000, v11, v12, "Failed to fetch fallback transactions: %@", v13, 0xCu);
      sub_1BC6EFA40();
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v14, -1, -1);
      MEMORY[0x1BCCF5BA4](v13, -1, -1);
    }
    else
    {

    }
    v44 = sub_1BC6F707C(a2);

    goto LABEL_37;
  }
  v16 = a3;
  if (!a3)
  {
LABEL_34:
    if ((a4 & 1) != 0)
      v44 = sub_1BC6F707C(a2);
    else
      v44 = MEMORY[0x1E0DEE9D8];
LABEL_37:
    *a5 = v44;
    return;
  }
  v45 = a4;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_1BC8184E4();
    if (v17)
      goto LABEL_8;
    goto LABEL_33;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v17)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    a4 = v45;
    goto LABEL_34;
  }
LABEL_8:
  v49 = a2;
  v50 = v16 & 0xC000000000000001;
  v18 = 4;
  v47 = v17;
  v48 = v16;
  while (1)
  {
    if (v50)
      v20 = (id)MEMORY[0x1BCCF4FB0](v18 - 4, v16);
    else
      v20 = *(id *)(v16 + 8 * v18);
    v21 = v20;
    if (__OFADD__(v18 - 4, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v51 = v18 - 3;
    v52 = v18;
    v22 = objc_msgSend(v20, sel_package);
    v23 = sub_1BC817AE8();
    v25 = v24;

    v26 = objc_msgSend(v21, sel_name);
    v27 = sub_1BC817AE8();
    v29 = v28;

    v30 = v21;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v32 = *(_QWORD **)(a2 + 8);
    *(_QWORD *)(a2 + 8) = 0x8000000000000000;
    v5 = sub_1BC7066E8(v23, v25, v27, v29);
    v34 = v32[2];
    v35 = (v33 & 1) == 0;
    v36 = v34 + v35;
    if (__OFADD__(v34, v35))
      goto LABEL_29;
    a2 = v33;
    if (v32[3] < v36)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v39 = v32;
      if ((v33 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_1BC70AB7C();
      v39 = v32;
      if ((a2 & 1) != 0)
      {
LABEL_9:
        v19 = v39[7];

        *(_QWORD *)(v19 + 8 * v5) = v30;
        goto LABEL_10;
      }
    }
LABEL_22:
    v39[(v5 >> 6) + 8] |= 1 << v5;
    v40 = (uint64_t *)(v39[6] + 32 * v5);
    *v40 = v23;
    v40[1] = v25;
    v40[2] = v27;
    v40[3] = v29;
    *(_QWORD *)(v39[7] + 8 * v5) = v30;
    v41 = v39[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_30;
    v39[2] = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_10:
    a2 = v49;
    *(_QWORD *)(v49 + 8) = v39;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = v52 + 1;
    v16 = v48;
    if (v51 == v47)
      goto LABEL_33;
  }
  sub_1BC707464(v36, isUniquelyReferenced_nonNull_native);
  v37 = sub_1BC7066E8(v23, v25, v27, v29);
  if ((a2 & 1) == (v38 & 1))
  {
    v5 = v37;
    v39 = v32;
    if ((a2 & 1) != 0)
      goto LABEL_9;
    goto LABEL_22;
  }
  sub_1BC8186E8();
  __break(1u);
}

void sub_1BC6F4B54(uint64_t a1, void (*a2)(void *), uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  void *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;

  v10 = *(void **)(a1 + 16);
  if ((unint64_t)v10 >= 2)
  {
    if (v10 == (void *)2)
    {
      a4(a1);
    }
    else
    {
      a2(v10);
      sub_1BC6F723C(v10);
    }
  }
  else
  {
    v11 = *(_QWORD **)(a1 + 24);
    swift_retain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BC725680(0, v11[2] + 1, 1, v11);
    v13 = v11[2];
    v12 = v11[3];
    if (v13 >= v12 >> 1)
      v11 = sub_1BC725680((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
    v11[2] = v13 + 1;
    v14 = &v11[4 * v13];
    v14[4] = a4;
    v14[5] = a5;
    v14[6] = a2;
    v14[7] = a3;
    *(_QWORD *)(a1 + 24) = v11;
  }
}

void sub_1BC6F4C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  os_unfair_lock_s *v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t (*v14)();

  v9 = *(os_unfair_lock_s **)(v4 + 40);
  v10 = (uint64_t)&v9[4];
  v11 = v9 + 16;
  os_unfair_lock_lock(v9 + 16);
  sub_1BC6F4D20(v10, a3, a4, a1, a2, &v14);
  os_unfair_lock_unlock(v11);
  v12 = v14;
  if (v14)
  {
    v13 = swift_retain();
    ((void (*)(uint64_t))v12)(v13);
    sub_1BC6F748C((uint64_t)v12);
    sub_1BC6F748C((uint64_t)v12);
  }
}

uint64_t sub_1BC6F4D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)()@<X8>)
{
  void *v11;
  _QWORD *v13;
  uint64_t result;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t (*v18)();

  v11 = *(void **)(a1 + 16);
  if ((unint64_t)v11 >= 2)
  {
    v18 = (uint64_t (*)())swift_allocObject();
    if (v11 == (void *)2)
    {
      *((_QWORD *)v18 + 2) = a4;
      *((_QWORD *)v18 + 3) = a5;
      *a6 = sub_1BC6F7CBC;
      a6[1] = v18;
    }
    else
    {
      *((_QWORD *)v18 + 2) = a2;
      *((_QWORD *)v18 + 3) = a3;
      *((_QWORD *)v18 + 4) = v11;
      *a6 = sub_1BC6F74EC;
      a6[1] = v18;
      sub_1BC6F7514(v11);
    }
    return swift_retain();
  }
  else
  {
    v13 = *(_QWORD **)(a1 + 32);
    swift_retain();
    swift_retain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1BC725694(0, v13[2] + 1, 1, v13);
      v13 = (_QWORD *)result;
    }
    v16 = v13[2];
    v15 = v13[3];
    if (v16 >= v15 >> 1)
    {
      result = (uint64_t)sub_1BC725694((_QWORD *)(v15 > 1), v16 + 1, 1, v13);
      v13 = (_QWORD *)result;
    }
    v13[2] = v16 + 1;
    v17 = &v13[4 * v16];
    v17[4] = a4;
    v17[5] = a5;
    v17[6] = a2;
    v17[7] = a3;
    *(_QWORD *)(a1 + 32) = v13;
    *a6 = 0;
    a6[1] = 0;
  }
  return result;
}

uint64_t CachingSharedSummaryTransactionBuilder.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return v0;
}

uint64_t CachingSharedSummaryTransactionBuilder.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1BC6F4EF0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  void (*v9)(id, uint64_t, uint64_t, void *);
  id v10;
  id v11;

  v7 = a3;
  v9 = *(void (**)(id, uint64_t, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6B84C8);
    v7 = sub_1BC817C5C();
  }
  swift_retain();
  v10 = a2;
  v11 = a5;
  v9(v10, v7, a4, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC6F4FA0(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BC7DCF94();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BC6F5018(v6);
  return sub_1BC818364();
}

void sub_1BC6F5018(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  void *v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  BOOL v125;
  uint64_t v126;
  char v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  BOOL v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  unint64_t v148;
  char *v149;
  uint64_t v150;
  unint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  unint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void **__dst;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  id v171;
  uint64_t v172;

  v2 = v1;
  v3 = a1;
  v4 = a1[1];
  v5 = sub_1BC818664();
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_177;
    if (v4)
      sub_1BC6F5BD8(0, v4, 1, v3);
  }
  else
  {
    if (v4 >= 0)
      v6 = v4;
    else
      v6 = v4 + 1;
    if (v4 < -1)
    {
LABEL_185:
      sub_1BC8184A8();
      __break(1u);
      return;
    }
    v159 = v5;
    v163 = v4;
    if (v4 < 2)
    {
      v9 = (char *)MEMORY[0x1E0DEE9D8];
      v172 = MEMORY[0x1E0DEE9D8];
      __dst = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
      if (v4 != 1)
      {
        v100 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
        if (v100 < 2)
          goto LABEL_152;
        goto LABEL_139;
      }
    }
    else
    {
      v7 = v6 >> 1;
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6B84C8);
      v8 = sub_1BC817CB0();
      *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      v4 = v163;
      __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
      v172 = v8;
    }
    v10 = 0;
    v11 = *v3;
    v157 = v3;
    v158 = *v3 - 8;
    v9 = (char *)MEMORY[0x1E0DEE9D8];
    v169 = *v3;
LABEL_13:
    v12 = v10 + 1;
    v164 = v10;
    if (v10 + 1 >= v4)
    {
      v23 = v10 + 1;
      goto LABEL_85;
    }
    v13 = *(void **)(v11 + 8 * v12);
    v170 = *(void **)(v11 + 8 * v10);
    v14 = v170;
    v171 = v13;
    v15 = v10;
    v16 = v13;
    v17 = v14;
    v18 = sub_1BC6F33D4(&v171, &v170);
    if (!v2)
    {
      v19 = v18;
      v160 = v9;

      v20 = v15 + 2;
      v21 = v169;
      if (v15 + 2 >= v163)
      {
LABEL_16:
        v22 = v19;
        v23 = v20;
LABEL_17:
        if ((v22 & 1) == 0)
        {
          v9 = v160;
          v2 = 0;
          v24 = v163;
          goto LABEL_19;
        }
LABEL_44:
        v10 = v164;
        if (v23 < v164)
          goto LABEL_178;
        if (v164 < v23)
        {
          v56 = (uint64_t *)(v158 + 8 * v23);
          v57 = v23;
          v58 = v164;
          v59 = (uint64_t *)(v21 + 8 * v164);
          v9 = v160;
          v2 = 0;
          v24 = v163;
          while (1)
          {
            if (v58 != --v57)
            {
              if (!v21)
                goto LABEL_183;
              v60 = *v59;
              *v59 = *v56;
              *v56 = v60;
            }
            ++v58;
            --v56;
            ++v59;
            if (v58 >= v57)
              goto LABEL_19;
          }
        }
        v9 = v160;
        v2 = 0;
        v24 = v163;
        if (v23 >= v163)
        {
LABEL_85:
          if (v23 < v10)
            goto LABEL_172;
          goto LABEL_86;
        }
LABEL_53:
        if (__OFSUB__(v23, v10))
          goto LABEL_176;
        if (v23 - v10 >= v159)
        {
          v10 = v164;
          goto LABEL_85;
        }
        v10 = v164;
        if (__OFADD__(v164, v159))
          goto LABEL_179;
        if (v164 + v159 >= v24)
          v61 = v24;
        else
          v61 = v164 + v159;
        if (v61 >= v164)
        {
          if (v23 == v61)
            goto LABEL_85;
          v161 = v9;
          v62 = v158 + 8 * v23;
          v162 = v61;
LABEL_65:
          v64 = *(void **)(v21 + 8 * v23);
          v65 = v10;
          v165 = v62;
          v167 = v23;
          while (1)
          {
            v66 = *(void **)v62;
            v67 = v64;
            v68 = v66;
            v69 = objc_msgSend(v67, sel_package);
            v70 = sub_1BC817AE8();
            v72 = v71;

            v73 = objc_msgSend(v68, sel_package);
            v74 = sub_1BC817AE8();
            v76 = v75;

            if (v70 == v74 && v72 == v76)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              v78 = sub_1BC818694();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v78 & 1) != 0)
              {

                goto LABEL_80;
              }
            }
            v79 = objc_msgSend(v67, sel_package);
            v80 = sub_1BC817AE8();
            v82 = v81;

            v83 = objc_msgSend(v68, sel_package);
            v84 = sub_1BC817AE8();
            v86 = v85;

            if (v84 == v80 && v86 == v82)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              v87 = sub_1BC818694();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v87 & 1) != 0)
              {

LABEL_63:
                v21 = v169;
                v63 = v167;
LABEL_64:
                v23 = v63 + 1;
                v10 = v164;
                v62 = v165 + 8;
                if (v23 == v162)
                {
                  v23 = v162;
                  v9 = v161;
                  v2 = 0;
                  if (v162 < v164)
                    goto LABEL_172;
LABEL_86:
                  v168 = v23;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    v9 = sub_1BC7DC2A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
                  v99 = *((_QWORD *)v9 + 2);
                  v98 = *((_QWORD *)v9 + 3);
                  v100 = v99 + 1;
                  v11 = v169;
                  v101 = v164;
                  if (v99 >= v98 >> 1)
                  {
                    v149 = sub_1BC7DC2A4((char *)(v98 > 1), v99 + 1, 1, v9);
                    v101 = v164;
                    v11 = v169;
                    v9 = v149;
                  }
                  *((_QWORD *)v9 + 2) = v100;
                  v102 = v9 + 32;
                  v103 = &v9[16 * v99 + 32];
                  *(_QWORD *)v103 = v101;
                  *((_QWORD *)v103 + 1) = v23;
                  if (v99)
                  {
LABEL_91:
                    v104 = v100 - 1;
                    if (v100 >= 4)
                    {
                      v109 = &v102[16 * v100];
                      v110 = *((_QWORD *)v109 - 8);
                      v111 = *((_QWORD *)v109 - 7);
                      v115 = __OFSUB__(v111, v110);
                      v112 = v111 - v110;
                      if (v115)
                        goto LABEL_160;
                      v114 = *((_QWORD *)v109 - 6);
                      v113 = *((_QWORD *)v109 - 5);
                      v115 = __OFSUB__(v113, v114);
                      v107 = v113 - v114;
                      v108 = v115;
                      if (v115)
                        goto LABEL_161;
                      v116 = v100 - 2;
                      v117 = &v102[16 * v100 - 32];
                      v119 = *(_QWORD *)v117;
                      v118 = *((_QWORD *)v117 + 1);
                      v115 = __OFSUB__(v118, v119);
                      v120 = v118 - v119;
                      if (v115)
                        goto LABEL_163;
                      v115 = __OFADD__(v107, v120);
                      v121 = v107 + v120;
                      if (v115)
                        goto LABEL_166;
                      if (v121 >= v112)
                      {
                        v139 = &v102[16 * v104];
                        v141 = *(_QWORD *)v139;
                        v140 = *((_QWORD *)v139 + 1);
                        v115 = __OFSUB__(v140, v141);
                        v142 = v140 - v141;
                        if (v115)
                          goto LABEL_170;
                        v132 = v107 < v142;
                      }
                      else
                      {
LABEL_104:
                        if ((v108 & 1) != 0)
                          goto LABEL_162;
                        v116 = v100 - 2;
                        v122 = &v102[16 * v100 - 32];
                        v124 = *(_QWORD *)v122;
                        v123 = *((_QWORD *)v122 + 1);
                        v125 = __OFSUB__(v123, v124);
                        v126 = v123 - v124;
                        v127 = v125;
                        if (v125)
                          goto LABEL_165;
                        v128 = &v102[16 * v104];
                        v130 = *(_QWORD *)v128;
                        v129 = *((_QWORD *)v128 + 1);
                        v115 = __OFSUB__(v129, v130);
                        v131 = v129 - v130;
                        if (v115)
                          goto LABEL_168;
                        if (__OFADD__(v126, v131))
                          goto LABEL_169;
                        if (v126 + v131 < v107)
                          goto LABEL_116;
                        v132 = v107 < v131;
                      }
                      if (v132)
                        v104 = v116;
                    }
                    else
                    {
                      if (v100 == 3)
                      {
                        v106 = *((_QWORD *)v9 + 4);
                        v105 = *((_QWORD *)v9 + 5);
                        v115 = __OFSUB__(v105, v106);
                        v107 = v105 - v106;
                        v108 = v115;
                        goto LABEL_104;
                      }
                      v133 = *((_QWORD *)v9 + 4);
                      v134 = *((_QWORD *)v9 + 5);
                      v115 = __OFSUB__(v134, v133);
                      v126 = v134 - v133;
                      v127 = v115;
LABEL_116:
                      if ((v127 & 1) != 0)
                        goto LABEL_164;
                      v135 = &v102[16 * v104];
                      v137 = *(_QWORD *)v135;
                      v136 = *((_QWORD *)v135 + 1);
                      v115 = __OFSUB__(v136, v137);
                      v138 = v136 - v137;
                      if (v115)
                        goto LABEL_167;
                      if (v138 < v126)
                        goto LABEL_133;
                    }
                    v143 = v104 - 1;
                    if (v104 - 1 >= v100)
                    {
                      __break(1u);
LABEL_157:
                      __break(1u);
LABEL_158:
                      __break(1u);
LABEL_159:
                      __break(1u);
LABEL_160:
                      __break(1u);
LABEL_161:
                      __break(1u);
LABEL_162:
                      __break(1u);
LABEL_163:
                      __break(1u);
LABEL_164:
                      __break(1u);
LABEL_165:
                      __break(1u);
LABEL_166:
                      __break(1u);
LABEL_167:
                      __break(1u);
LABEL_168:
                      __break(1u);
LABEL_169:
                      __break(1u);
LABEL_170:
                      __break(1u);
LABEL_171:
                      __break(1u);
LABEL_172:
                      __break(1u);
LABEL_173:
                      __break(1u);
LABEL_174:
                      __break(1u);
LABEL_175:
                      __break(1u);
LABEL_176:
                      __break(1u);
LABEL_177:
                      __break(1u);
LABEL_178:
                      __break(1u);
LABEL_179:
                      __break(1u);
                      break;
                    }
                    if (!v11)
                      goto LABEL_182;
                    v144 = &v102[16 * v143];
                    v145 = *(_QWORD *)v144;
                    v146 = &v102[16 * v104];
                    v147 = *((_QWORD *)v146 + 1);
                    sub_1BC6F5EB8((void **)(v11 + 8 * *(_QWORD *)v144), (void **)(v11 + 8 * *(_QWORD *)v146), v11 + 8 * v147, __dst);
                    if (v2)
                      goto LABEL_152;
                    if (v147 < v145)
                      goto LABEL_157;
                    if (v104 > *((_QWORD *)v9 + 2))
                      goto LABEL_158;
                    *(_QWORD *)v144 = v145;
                    *(_QWORD *)&v102[16 * v143 + 8] = v147;
                    v148 = *((_QWORD *)v9 + 2);
                    if (v104 >= v148)
                      goto LABEL_159;
                    v100 = v148 - 1;
                    memmove(&v102[16 * v104], v146 + 16, 16 * (v148 - 1 - v104));
                    *((_QWORD *)v9 + 2) = v148 - 1;
                    v11 = v169;
                    if (v148 <= 2)
                      goto LABEL_133;
                    goto LABEL_91;
                  }
                  v100 = 1;
LABEL_133:
                  v4 = v163;
                  v10 = v168;
                  if (v168 >= v163)
                  {
                    v3 = v157;
                    if (v100 < 2)
                    {
LABEL_152:
                      swift_bridgeObjectRelease();
                      goto LABEL_153;
                    }
LABEL_139:
                    v150 = *v3;
                    while (1)
                    {
                      v151 = v100 - 2;
                      if (v100 < 2)
                        goto LABEL_171;
                      if (!v150)
                        goto LABEL_184;
                      v152 = v9;
                      v153 = *(_QWORD *)&v9[16 * v151 + 32];
                      v154 = *(_QWORD *)&v9[16 * v100 + 24];
                      sub_1BC6F5EB8((void **)(v150 + 8 * v153), (void **)(v150 + 8 * *(_QWORD *)&v9[16 * v100 + 16]), v150 + 8 * v154, __dst);
                      if (v2)
                        goto LABEL_152;
                      if (v154 < v153)
                        goto LABEL_173;
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                        v152 = sub_1BC7DC4E8((uint64_t)v9);
                      if (v151 >= *((_QWORD *)v152 + 2))
                        goto LABEL_174;
                      v155 = &v152[16 * v151 + 32];
                      *(_QWORD *)v155 = v153;
                      *((_QWORD *)v155 + 1) = v154;
                      v156 = *((_QWORD *)v152 + 2);
                      if (v100 > v156)
                        goto LABEL_175;
                      v9 = v152;
                      memmove(&v152[16 * v100 + 16], &v152[16 * v100 + 32], 16 * (v156 - v100));
                      *((_QWORD *)v152 + 2) = v156 - 1;
                      v100 = v156 - 1;
                      if (v156 <= 2)
                        goto LABEL_152;
                    }
                  }
                  goto LABEL_13;
                }
                goto LABEL_65;
              }
            }
            v88 = objc_msgSend(v67, sel_name);
            v89 = sub_1BC817AE8();
            v91 = v90;

            v92 = objc_msgSend(v68, sel_name);
            v93 = sub_1BC817AE8();
            v95 = v94;

            if (v89 == v93 && v91 == v95)
            {

              swift_bridgeObjectRelease_n();
              goto LABEL_63;
            }
            v96 = sub_1BC818694();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v96 & 1) == 0)
              goto LABEL_63;
LABEL_80:
            v21 = v169;
            v63 = v167;
            if (!v169)
              goto LABEL_181;
            v97 = *(void **)v62;
            v64 = *(void **)(v62 + 8);
            *(_QWORD *)v62 = v64;
            *(_QWORD *)(v62 + 8) = v97;
            v62 -= 8;
            if (v167 == ++v65)
              goto LABEL_64;
          }
        }
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
        goto LABEL_185;
      }
      while (1)
      {
        v26 = *(void **)(v21 + 8 * v12);
        v27 = *(id *)(v21 + 8 * v20);
        v28 = v26;
        v29 = objc_msgSend(v27, sel_package);
        v30 = sub_1BC817AE8();
        v32 = v31;

        v33 = objc_msgSend(v28, sel_package);
        v34 = sub_1BC817AE8();
        v36 = v35;

        if (v30 == v34 && v32 == v36)
          break;
        v38 = sub_1BC818694();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v38 & 1) != 0)
        {

          if ((v19 & 1) == 0)
          {
            v23 = v20;
            v9 = v160;
            v2 = 0;
            v24 = v163;
            v21 = v169;
LABEL_19:
            v10 = v164;
            if (v23 >= v24)
              goto LABEL_85;
            goto LABEL_53;
          }
          v23 = v20 + 1;
          v12 = v20;
          v20 = v23;
          v21 = v169;
          if (v23 >= v163)
            goto LABEL_44;
        }
        else
        {
LABEL_32:
          v39 = objc_msgSend(v27, sel_package);
          v40 = sub_1BC817AE8();
          v42 = v41;

          v43 = objc_msgSend(v28, sel_package);
          v44 = sub_1BC817AE8();
          v46 = v45;

          if (v44 == v40 && v46 == v42)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v47 = sub_1BC818694();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v47 & 1) != 0)
            {

              if ((v19 & 1) != 0)
                goto LABEL_43;
              goto LABEL_41;
            }
          }
          v48 = objc_msgSend(v27, sel_name);
          v49 = sub_1BC817AE8();
          v51 = v50;

          v52 = objc_msgSend(v28, sel_name);
          v53 = sub_1BC817AE8();
          v55 = v54;

          if (v49 != v53 || v51 != v55)
          {
            v25 = sub_1BC818694();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v22 = v19;
            v21 = v169;
            if (((v19 ^ v25) & 1) != 0)
              goto LABEL_16;
            goto LABEL_22;
          }

          swift_bridgeObjectRelease_n();
          if ((v19 & 1) != 0)
          {
LABEL_43:
            v23 = v20;
            v21 = v169;
            goto LABEL_44;
          }
LABEL_41:
          v22 = 0;
          v21 = v169;
LABEL_22:
          v23 = v20 + 1;
          v12 = v20;
          v20 = v23;
          if (v23 >= v163)
            goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_32;
    }
    swift_bridgeObjectRelease();

LABEL_153:
    *(_QWORD *)((v172 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1BC817C74();
    swift_bridgeObjectRelease();
  }
}

void sub_1BC6F5BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void *v39;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  if (a3 != a2)
  {
    v43 = *a4;
    v4 = *a4 + 8 * a3 - 8;
LABEL_7:
    v6 = *(void **)(v43 + 8 * a3);
    v7 = a1;
    v42 = v4;
    v44 = a3;
    while (1)
    {
      v8 = *(void **)v4;
      v9 = v6;
      v10 = v8;
      v11 = objc_msgSend(v9, sel_package);
      v12 = sub_1BC817AE8();
      v14 = v13;

      v15 = objc_msgSend(v10, sel_package);
      v16 = sub_1BC817AE8();
      v18 = v17;

      if (v12 == v16 && v14 == v18)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v20 = sub_1BC818694();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
        {

          v5 = v44;
          goto LABEL_22;
        }
      }
      v21 = objc_msgSend(v9, sel_package);
      v22 = sub_1BC817AE8();
      v24 = v23;

      v25 = objc_msgSend(v10, sel_package);
      v26 = sub_1BC817AE8();
      v28 = v27;

      if (v26 == v22 && v28 == v24)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v29 = sub_1BC818694();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
        {

          goto LABEL_5;
        }
      }
      v30 = objc_msgSend(v9, sel_name);
      v31 = sub_1BC817AE8();
      v33 = v32;

      v34 = objc_msgSend(v10, sel_name);
      v35 = sub_1BC817AE8();
      v37 = v36;

      if (v31 == v35 && v33 == v37)
      {

        swift_bridgeObjectRelease_n();
LABEL_5:
        v5 = v44;
LABEL_6:
        a3 = v5 + 1;
        v4 = v42 + 8;
        if (a3 == a2)
          return;
        goto LABEL_7;
      }
      v38 = sub_1BC818694();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = v44;
      if ((v38 & 1) == 0)
        goto LABEL_6;
LABEL_22:
      if (!v43)
      {
        __break(1u);
        return;
      }
      v39 = *(void **)v4;
      v6 = *(void **)(v4 + 8);
      *(_QWORD *)v4 = v6;
      *(_QWORD *)(v4 + 8) = v39;
      v4 -= 8;
      if (v5 == ++v7)
        goto LABEL_6;
    }
  }
}

uint64_t sub_1BC6F5EB8(void **__src, void **a2, unint64_t a3, void **__dst)
{
  id *v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  char v18;
  char v19;
  id *v20;
  void **v21;
  id *v22;
  id *v23;
  id *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  char v29;
  char v30;
  id *v31;
  void **v32;
  uint64_t result;
  void **v34;
  void **v35;
  uint64_t v36;
  void *v37;
  id v38;
  void **v39;
  void **v40;
  void **v41;

  v35 = __dst;
  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v41 = __src;
  v40 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != a2 || &a2[v12] <= __dst)
      {
        memmove(__dst, a2, 8 * v12);
        __dst = v35;
      }
      v21 = &__dst[v12];
      v39 = v21;
      v41 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        v22 = (id *)(a3 - 8);
        v23 = v5;
        v34 = v6;
        while (1)
        {
          v24 = v21;
          v25 = *--v21;
          v38 = v25;
          v26 = *--v23;
          v37 = v26;
          v27 = v38;
          v28 = v26;
          v29 = sub_1BC6F33D4(&v38, &v37);
          if (v36)
            break;
          v30 = v29;
          v36 = 0;
          v31 = v22 + 1;

          if ((v30 & 1) != 0)
          {
            v32 = v35;
            if (v31 != v5 || v22 >= v5)
              *v22 = *v23;
            v41 = v23;
            v21 = v24;
          }
          else
          {
            v39 = v21;
            v32 = v35;
            if (v31 < v24 || v22 >= v24 || v31 != v24)
              *v22 = *v21;
            v23 = v5;
          }
          if (v23 > v34)
          {
            --v22;
            v5 = v23;
            if (v21 > v32)
              continue;
          }
          goto LABEL_48;
        }

      }
      goto LABEL_48;
    }
  }
  else if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
    {
      memmove(__dst, __src, 8 * v9);
      __dst = v35;
    }
    v13 = &__dst[v9];
    v39 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      while (1)
      {
        v38 = *v5;
        v14 = __dst;
        v37 = *__dst;
        v15 = v37;
        v16 = v38;
        v17 = v15;
        v18 = sub_1BC6F33D4(&v38, &v37);
        if (v36)
          break;
        v19 = v18;

        if ((v19 & 1) != 0)
        {
          v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5)
            *v6 = *v5;
          __dst = v14;
        }
        else
        {
          if (v6 != v14)
            *v6 = *v14;
          __dst = v14 + 1;
          v40 = v14 + 1;
          v20 = v5;
        }
        v36 = 0;
        v41 = ++v6;
        if (__dst < v13)
        {
          v5 = v20;
          if ((unint64_t)v20 < a3)
            continue;
        }
        goto LABEL_48;
      }

    }
LABEL_48:
    sub_1BC7DC398((void **)&v41, (const void **)&v40, &v39);
    return 1;
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC6F61EC(uint64_t a1, void *a2)
{
  int64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1BC6E8B28(0, v2, 0);
    v3 = v15;
    v6 = (_QWORD *)(a1 + 56);
    do
    {
      v7 = *(v6 - 3);
      v8 = *v6;
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = v7;
      *(_OWORD *)(v9 + 24) = *((_OWORD *)v6 - 1);
      *(_QWORD *)(v9 + 40) = v8;
      *(_QWORD *)(v9 + 48) = a2;
      v11 = *(_QWORD *)(v15 + 16);
      v10 = *(_QWORD *)(v15 + 24);
      swift_retain();
      swift_retain();
      v12 = a2;
      if (v11 >= v10 >> 1)
        sub_1BC6E8B28(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v15 + 16) = v11 + 1;
      v13 = v15 + 16 * v11;
      *(_QWORD *)(v13 + 32) = sub_1BC6F72BC;
      *(_QWORD *)(v13 + 40) = v9;
      v6 += 4;
      --v2;
    }
    while (v2);
  }
  return v3;
}

_QWORD *sub_1BC6F630C(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a2;
  v22 = a3;
  v20 = a1;
  v4 = sub_1BC817FA4();
  v18 = *(_QWORD *)(v4 - 8);
  v19 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC817F5C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1BC817974();
  MEMORY[0x1E0C80A78](v9);
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = sub_1BC7102CC(MEMORY[0x1E0DEE9D8]);
  v12 = sub_1BC7102CC(v10);
  sub_1BC6F7578();
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 64) = 0;
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = 0;
  *(_QWORD *)(v13 + 40) = v10;
  *(_QWORD *)(v13 + 48) = v10;
  *(_QWORD *)(v13 + 56) = 0;
  v3[5] = v13;
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  sub_1BC817968();
  v23 = v10;
  sub_1BC6E1788((unint64_t *)&unk_1ED6BA4C0, v8, MEMORY[0x1E0DEF828]);
  sub_1BC6F72FC(0, (unint64_t *)&unk_1ED6BA420, (void (*)(uint64_t))v8);
  sub_1BC6F75D4(qword_1ED6BA430, (unint64_t *)&unk_1ED6BA420, (void (*)(uint64_t))v8);
  sub_1BC818184();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v6, *MEMORY[0x1E0DEF8D0], v19);
  v3[6] = sub_1BC817FC8();
  v14 = v20;
  v15 = v21;
  v3[2] = v20;
  v3[3] = v15;
  v3[4] = v22;
  v16 = v14;
  swift_retain();
  sub_1BC6F3798();
  return v3;
}

void sub_1BC6F6558()
{
  uint64_t *v0;

  sub_1BC6F21D8(v0[2], v0[3], v0[4], v0[5], (uint64_t)&unk_1E7517AD8, (uint64_t)sub_1BC6F755C, (uint64_t)&block_descriptor_118);
}

void sub_1BC6F6590()
{
  uint64_t *v0;

  sub_1BC6F11B8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BC6F659C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC6F65C8()
{
  uint64_t v0;

  sub_1BC6F144C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_1BC6F65DC()
{
  uint64_t *v0;

  sub_1BC6F1738(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1BC6F65E8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC6F661C()
{
  uint64_t *v0;

  sub_1BC6F1910(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1BC6F662C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC6F6668()
{
  uint64_t *v0;

  sub_1BC6F1D38(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC6F66B0()
{
  uint64_t *v0;

  sub_1BC6F21D8(v0[2], v0[3], v0[4], v0[5], (uint64_t)&unk_1E75178A8, (uint64_t)sub_1BC6F7C8C, (uint64_t)&block_descriptor_75);
}

uint64_t sub_1BC6F66E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC6F6720(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BC6F2760(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1BC6F6730(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(a1, 1);
}

uint64_t type metadata accessor for CachingSharedSummaryTransactionBuilder()
{
  return objc_opt_self();
}

uint64_t method lookup function for CachingSharedSummaryTransactionBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.transactionUUID.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.__allocating_init(transactionBuilder:fallbackTransactionFilter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.addSummaries(_:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.discard(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.commit(asUrgent:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.addMetadata(_:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.removeAllSummaries(withPackage:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.removeSummaries(withPackage:names:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.reuseSummaries(_:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.addedSummaries(withPackage:names:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t destroy for CachingSharedSummaryTransactionBuilder.ProtectedState(uint64_t a1)
{
  void *v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(void **)(a1 + 16);
  if ((unint64_t)v2 >= 3)

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CachingSharedSummaryTransactionBuilder.ProtectedState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (void *)a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)v5 >= 3)
    v6 = v5;
  v7 = a2[3];
  v8 = a2[4];
  a1[2] = v5;
  a1[3] = v7;
  v9 = a2[5];
  a1[4] = v8;
  a1[5] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CachingSharedSummaryTransactionBuilder.ProtectedState(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  if ((unint64_t)v4 >= 3)
  {
    if ((unint64_t)v5 >= 3)
    {
      a1[2] = v5;
      v7 = v5;

      goto LABEL_8;
    }

    v5 = (void *)a2[2];
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 3)
  {
LABEL_6:
    a1[2] = v5;
    goto LABEL_8;
  }
  a1[2] = v5;
  v6 = v5;
LABEL_8:
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CachingSharedSummaryTransactionBuilder.ProtectedState(uint64_t a1, uint64_t a2)
{
  void *v4;
  unint64_t v5;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if ((unint64_t)v4 >= 3)
  {
    if (v5 >= 3)
    {
      *(_QWORD *)(a1 + 16) = v5;

      goto LABEL_6;
    }

  }
  *(_QWORD *)(a1 + 16) = v5;
LABEL_6:
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for CachingSharedSummaryTransactionBuilder.ProtectedState(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CachingSharedSummaryTransactionBuilder.ProtectedState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CachingSharedSummaryTransactionBuilder.ProtectedState()
{
  return &type metadata for CachingSharedSummaryTransactionBuilder.ProtectedState;
}

uint64_t sub_1BC6F6AD4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC6F6B00(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_1BC6F4154(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1BC6F6B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int64_t v31;

  v5 = 0;
  v8 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v7 = v8;
  v30 = result;
  v9 = 1 << *(_BYTE *)(result - 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v7;
  v31 = (unint64_t)(v9 + 63) >> 6;
  v12 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v15 >= v31)
      goto LABEL_34;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v31)
        goto LABEL_34;
      v16 = *(_QWORD *)(v30 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v31)
          goto LABEL_34;
        v16 = *(_QWORD *)(v30 + 8 * v5);
        if (!v16)
        {
          v5 = v15 + 3;
          if (v15 + 3 >= v31)
            goto LABEL_34;
          v16 = *(_QWORD *)(v30 + 8 * v5);
          if (!v16)
            break;
        }
      }
    }
LABEL_21:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_22:
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 32 * v14);
    v19 = *v18;
    v20 = v18[1];
    v21 = v18[2];
    v22 = v18[3];
    if (*v18 == a2 && v20 == a3)
    {
      v19 = a2;
      v20 = a3;
      goto LABEL_29;
    }
    result = sub_1BC818694();
    if ((result & 1) != 0)
    {
LABEL_29:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_1BC6E8B0C(0, *(_QWORD *)(v12 + 16) + 1, 1);
      v25 = *(_QWORD *)(v12 + 16);
      v24 = *(_QWORD *)(v12 + 24);
      v26 = v25 + 1;
      if (v25 >= v24 >> 1)
      {
        v28 = *(_QWORD *)(v12 + 16);
        v29 = v25 + 1;
        result = sub_1BC6E8B0C(v24 > 1, v25 + 1, 1);
        v25 = v28;
        v26 = v29;
      }
      *(_QWORD *)(v12 + 16) = v26;
      v27 = (_QWORD *)(v12 + 32 * v25);
      v27[4] = v19;
      v27[5] = v20;
      v27[6] = v21;
      v27[7] = v22;
    }
  }
  v17 = v15 + 4;
  if (v17 >= v31)
  {
LABEL_34:
    swift_release();
    return v12;
  }
  v16 = *(_QWORD *)(v30 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v31)
      goto LABEL_34;
    v16 = *(_QWORD *)(v30 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_21;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1BC6F6D70(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t i;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  int64_t v24;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v42;

  v4 = a3;
  v5 = a2;
  i = 0;
  v9 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v8 = v9;
  v10 = 1 << *(_BYTE *)(result - 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v8;
  v36 = result;
  v37 = (unint64_t)(v10 + 63) >> 6;
  v34 = a4 + 7;
  v35 = MEMORY[0x1E0DEE9D8];
  do
  {
    while (1)
    {
      while (1)
      {
LABEL_4:
        if (v12)
        {
          v13 = __clz(__rbit64(v12));
          v12 &= v12 - 1;
          v14 = v13 | (i << 6);
        }
        else
        {
          v15 = i + 1;
          if (__OFADD__(i, 1))
            goto LABEL_49;
          if (v15 >= v37)
          {
LABEL_47:
            swift_release();
            return v35;
          }
          v16 = *(_QWORD *)(v36 + 8 * v15);
          ++i;
          if (!v16)
          {
            i = v15 + 1;
            if (v15 + 1 >= v37)
              goto LABEL_47;
            v16 = *(_QWORD *)(v36 + 8 * i);
            if (!v16)
            {
              i = v15 + 2;
              if (v15 + 2 >= v37)
                goto LABEL_47;
              v16 = *(_QWORD *)(v36 + 8 * i);
              if (!v16)
              {
                i = v15 + 3;
                if (v15 + 3 >= v37)
                  goto LABEL_47;
                v16 = *(_QWORD *)(v36 + 8 * i);
                if (!v16)
                {
                  v17 = v15 + 4;
                  if (v17 >= v37)
                    goto LABEL_47;
                  v16 = *(_QWORD *)(v36 + 8 * v17);
                  for (i = v17; !v16; ++v17)
                  {
                    i = v17 + 1;
                    if (__OFADD__(v17, 1))
                      goto LABEL_50;
                    if (i >= v37)
                      goto LABEL_47;
                    v16 = *(_QWORD *)(v36 + 8 * i);
                  }
                }
              }
            }
          }
          v12 = (v16 - 1) & v16;
          v14 = __clz(__rbit64(v16)) + (i << 6);
        }
        v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 32 * v14);
        v19 = v18[1];
        v21 = v18[2];
        v20 = v18[3];
        v42 = *v18;
        if (*v18 != v5 || v19 != v4)
        {
          result = sub_1BC818694();
          if ((result & 1) == 0)
            continue;
        }
        v23 = a4[2];
        if (v23)
          break;
      }
      v24 = i;
      if (a4[4] != v21 || a4[5] != v20)
      {
        result = sub_1BC818694();
        if ((result & 1) == 0)
          break;
      }
LABEL_42:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30 = v35;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1BC6E8B0C(0, *(_QWORD *)(v35 + 16) + 1, 1);
        v30 = v35;
      }
      i = v24;
      v32 = *(_QWORD *)(v30 + 16);
      v31 = *(_QWORD *)(v30 + 24);
      if (v32 >= v31 >> 1)
      {
        result = sub_1BC6E8B0C(v31 > 1, v32 + 1, 1);
        v30 = v35;
      }
      *(_QWORD *)(v30 + 16) = v32 + 1;
      v35 = v30;
      v33 = (_QWORD *)(v30 + 32 * v32);
      v33[4] = v42;
      v33[5] = v19;
      v33[6] = v21;
      v33[7] = v20;
      v5 = a2;
      v4 = a3;
    }
    v5 = a2;
    v4 = a3;
  }
  while (v23 == 1);
  v26 = v34;
  v27 = 1;
  while (1)
  {
    v28 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (*(v26 - 1) == v21 && *v26 == v20)
      goto LABEL_42;
    result = sub_1BC818694();
    if ((result & 1) != 0)
      goto LABEL_42;
    v26 += 2;
    ++v27;
    if (v28 == v23)
    {
      v5 = a2;
      v4 = a3;
      i = v24;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_1BC6F707C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  sub_1BC6F723C(*(id *)(a1 + 16));
  *(_QWORD *)(a1 + 16) = 2;
  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = v2 + 56;
    do
    {
      v5 = *(void (**)(uint64_t))(v4 - 24);
      v4 += 32;
      swift_retain();
      swift_retain();
      v5(a1);
      swift_release();
      swift_release();
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v6 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 32) = v6;
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v18 = v6;
    sub_1BC6E8B28(0, v8, 0);
    v9 = v18;
    v10 = (uint64_t *)(v7 + 40);
    do
    {
      v12 = *(v10 - 1);
      v11 = *v10;
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v12;
      *(_QWORD *)(v13 + 24) = v11;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC6E8B28(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v18;
      }
      v15 = *(_QWORD *)(v9 + 16);
      v14 = *(_QWORD *)(v9 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BC6E8B28(v14 > 1, v15 + 1, 1);
        v9 = v18;
      }
      *(_QWORD *)(v9 + 16) = v15 + 1;
      v16 = v9 + 16 * v15;
      *(_QWORD *)(v16 + 32) = sub_1BC6E15EC;
      *(_QWORD *)(v16 + 40) = v13;
      v10 += 4;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v9;
}

uint64_t sub_1BC6F7234(uint64_t a1, unint64_t a2, char a3, void *a4)
{
  uint64_t v4;

  return sub_1BC6F4610(a1, a2, a3, a4, v4);
}

void sub_1BC6F723C(id a1)
{
  if ((unint64_t)a1 >= 3)

}

uint64_t sub_1BC6F724C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC6F7270(unint64_t a1, char a2, void *a3)
{
  uint64_t v3;

  sub_1BC6F389C(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

unint64_t sub_1BC6F7278(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BC6F7288()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC6F72BC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 32))(*(_QWORD *)(v0 + 48));
}

uint64_t sub_1BC6F72E4()
{
  return objectdestroy_65Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BC6F72F0()
{
  uint64_t v0;

  return sub_1BC6F331C(*(void (**)(_QWORD *, _QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1BC6F72FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC817D04();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC6F734C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC6F7388(int a1, void *a2)
{
  uint64_t v2;

  sub_1BC6F1E74(a1, a2, *(void (**)(id))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD **)(v2 + 56));
}

uint64_t sub_1BC6F7398()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC6F73CC(int a1, void *a2)
{
  uint64_t v2;

  sub_1BC6F1A1C(a1, a2, *(void (**)(id))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1BC6F73DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 16))(a2);
}

uint64_t objectdestroy_5Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC6F7430(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BC6F152C(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void *, uint64_t))(v2 + 24));
}

uint64_t sub_1BC6F743C()
{
  return objectdestroy_65Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_65Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

void sub_1BC6F7480(int a1, void *a2)
{
  uint64_t v2;

  sub_1BC6F1290(a1, a2, *(void (**)(id))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1BC6F748C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1BC6F749C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC6F74C0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC6F74EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

id sub_1BC6F7514(id result)
{
  if ((unint64_t)result >= 3)
    return result;
  return result;
}

uint64_t objectdestroy_71Tm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC6F755C(int a1, void *a2)
{
  uint64_t v2;

  sub_1BC6F22F4(a1, a2, *(void (**)(id))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

void sub_1BC6F7578()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8690)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8690);
  }
}

uint64_t sub_1BC6F75D4(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC6F72FC(255, a2, a3);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for CachingSharedSummaryTransactionBuilder.PendingWork(uint64_t a1, uint64_t a2)
{
  return sub_1BC6F7A30(a1, a2, (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for CachingSharedSummaryTransactionBuilder.PendingQueryWork()
{
  return &type metadata for CachingSharedSummaryTransactionBuilder.PendingQueryWork;
}

uint64_t _s14HealthPlatform38CachingSharedSummaryTransactionBuilderC11PendingWorkVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s14HealthPlatform38CachingSharedSummaryTransactionBuilderC11PendingWorkVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s14HealthPlatform38CachingSharedSummaryTransactionBuilderC11PendingWorkVwta_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t _s14HealthPlatform38CachingSharedSummaryTransactionBuilderC11PendingWorkVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BC6F7780(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CachingSharedSummaryTransactionBuilder.PendingWork()
{
  return &type metadata for CachingSharedSummaryTransactionBuilder.PendingWork;
}

_QWORD *initializeBufferWithCopyOfBuffer for CachingSharedSummaryTransactionBuilder.CacheState(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for CachingSharedSummaryTransactionBuilder.CacheState(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for CachingSharedSummaryTransactionBuilder.CacheState(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

void **assignWithTake for CachingSharedSummaryTransactionBuilder.CacheState(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for CachingSharedSummaryTransactionBuilder.CacheState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CachingSharedSummaryTransactionBuilder.CacheState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_1BC6F79AC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1BC6F79C4(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for CachingSharedSummaryTransactionBuilder.CacheState()
{
  return &type metadata for CachingSharedSummaryTransactionBuilder.CacheState;
}

uint64_t initializeBufferWithCopyOfBuffer for CachingSharedSummaryTransactionBuilder.SummaryIdentifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for CachingSharedSummaryTransactionBuilder.SummaryIdentifier(uint64_t a1, uint64_t a2)
{
  return sub_1BC6F7A30(a1, a2, (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BC6F7A30(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  a3(*(_QWORD *)(a1 + 8));
  return ((uint64_t (*)(_QWORD))a3)(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for CachingSharedSummaryTransactionBuilder.SummaryIdentifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CachingSharedSummaryTransactionBuilder.SummaryIdentifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for CachingSharedSummaryTransactionBuilder.SummaryIdentifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CachingSharedSummaryTransactionBuilder.SummaryIdentifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CachingSharedSummaryTransactionBuilder.SummaryIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CachingSharedSummaryTransactionBuilder.SummaryIdentifier()
{
  return &type metadata for CachingSharedSummaryTransactionBuilder.SummaryIdentifier;
}

unint64_t sub_1BC6F7BF4()
{
  unint64_t result;

  result = qword_1ED6B7F78;
  if (!qword_1ED6B7F78)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81A4D4, &type metadata for CachingSharedSummaryTransactionBuilder.SummaryIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED6B7F78);
  }
  return result;
}

uint64_t PluginStorage.uniqueIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginStorage.uniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PluginStorage.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

void *PluginStorage.sourceProfile.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void PluginStorage.sourceProfile.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*PluginStorage.sourceProfile.modify())()
{
  return nullsub_1;
}

uint64_t PluginStorage.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1BC6F7DC4(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t sub_1BC6F7DC4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1BC6ECBE8(a1, a2);
  return a1;
}

uint64_t PluginStorage.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC6ECB4C(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*PluginStorage.data.modify())()
{
  return nullsub_1;
}

uint64_t PluginStorage.pluginIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginStorage.pluginIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*PluginStorage.pluginIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PluginStorage.init(uniqueIdentifier:sourceProfile:data:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  a6[5] = 0;
  a6[6] = 0xE000000000000000;
  return result;
}

unint64_t PluginStorage.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD v13[2];
  unint64_t v14;
  unint64_t v15;

  v1 = sub_1BC816F3C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + 16);
  v14 = 0;
  v15 = 0xE000000000000000;
  sub_1BC8182C8();
  swift_bridgeObjectRelease();
  v14 = 0xD000000000000011;
  v15 = 0x80000001BC825E00;
  swift_bridgeObjectRetain();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v6, sel_type);
    v7 = (id)HKStringFromProfileType();
    v8 = sub_1BC817AE8();
    v10 = v9;

    v13[0] = v8;
    v13[1] = v10;
    sub_1BC817B48();
    v11 = objc_msgSend(v6, sel_identifier);
    sub_1BC816F24();

    sub_1BC816F00();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_1BC817B48();

    swift_bridgeObjectRelease();
  }
  sub_1BC817B48();

  swift_bridgeObjectRelease();
  return v14;
}

uint64_t destroy for PluginStorage(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();

  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >> 60 != 15)
    sub_1BC6ECB60(*(_QWORD *)(a1 + 24), v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PluginStorage(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  _OWORD *v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (void *)a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  v6 = a2 + 3;
  v7 = a2[4];
  swift_bridgeObjectRetain();
  v8 = v5;
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v6;
  }
  else
  {
    v9 = *(_QWORD *)v6;
    sub_1BC6ECBE8(v9, v7);
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v7;
  }
  v10 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PluginStorage(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  v7 = a2 + 3;
  v8 = a2[4];
  if (a1[4] >> 60 != 15)
  {
    if (v8 >> 60 != 15)
    {
      v10 = *v7;
      sub_1BC6ECBE8(*v7, a2[4]);
      v11 = a1[3];
      v12 = a1[4];
      a1[3] = v10;
      a1[4] = v8;
      sub_1BC6ECB60(v11, v12);
      goto LABEL_8;
    }
    sub_1BC6F8258((uint64_t)(a1 + 3));
    goto LABEL_6;
  }
  if (v8 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)v7;
    goto LABEL_8;
  }
  v9 = *v7;
  sub_1BC6ECBE8(*v7, a2[4]);
  a1[3] = v9;
  a1[4] = v8;
LABEL_8:
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC6F8258(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

_QWORD *assignWithTake for PluginStorage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = (void *)a1[2];
  a1[2] = a2[2];

  v6 = a2 + 3;
  v7 = a1[4];
  if (v7 >> 60 != 15)
  {
    v8 = a2[4];
    if (v8 >> 60 != 15)
    {
      v9 = a1[3];
      a1[3] = *v6;
      a1[4] = v8;
      sub_1BC6ECB60(v9, v7);
      goto LABEL_6;
    }
    sub_1BC6F8258((uint64_t)(a1 + 3));
  }
  *(_OWORD *)(a1 + 3) = *(_OWORD *)v6;
LABEL_6:
  v10 = a2[6];
  a1[5] = a2[5];
  a1[6] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginStorage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PluginStorage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginStorage()
{
  return &type metadata for PluginStorage;
}

void sub_1BC6F83DC(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_dateSubmitted);
  sub_1BC816ED0();

}

void sub_1BC6F8428(id *a1@<X0>, SEL *a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, unint64_t *a4@<X5>, uint64_t *a5@<X8>)
{
  id v8;
  uint64_t v9;

  v8 = objc_msgSend(*a1, *a2);
  a3(0);
  sub_1BC6F9604(a4, a3);
  v9 = sub_1BC817D7C();

  *a5 = v9;
}

void sub_1BC6F84A8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, SEL *a7)
{
  void *v10;
  id v11;

  v10 = *a2;
  a5(0);
  sub_1BC6F9604(a6, a5);
  v11 = (id)sub_1BC817D70();
  objc_msgSend(v10, *a7, v11);

}

void sub_1BC6F852C(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = objc_msgSend(*a1, *a2);
  v5 = sub_1BC817AE8();
  v7 = v6;

  *a3 = v5;
  a3[1] = v7;
}

void sub_1BC6F857C(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1BC816E64();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0xF000000000000000;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_1BC6F85DC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  uint64_t v7;
  id v8;

  v6 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v7 = 0;
  else
    v7 = sub_1BC816E58();
  v8 = (id)v7;
  objc_msgSend(v6, *a5);

}

void sub_1BC6F8640(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1BC817AE8();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_1BC6F86A0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  uint64_t v7;
  id v8;

  v6 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v7 = sub_1BC817AC4();
  else
    v7 = 0;
  v8 = (id)v7;
  objc_msgSend(v6, *a5);

}

uint64_t sub_1BC6F86FC@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    sub_1BC816ED0();

    v6 = sub_1BC816EF4();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a3;
    v9 = 0;
  }
  else
  {
    v6 = sub_1BC816EF4();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a3;
    v9 = 1;
  }
  return v7(v8, v9, 1, v6);
}

void sub_1BC6F877C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  sub_1BC6F956C();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6F95C0(a1, (uint64_t)v10);
  v11 = *a2;
  v12 = sub_1BC816EF4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    v14 = (void *)sub_1BC816EAC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, *a5, v14);

}

id _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  unsigned int v5;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1BC817AC4();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v4 = (void *)sub_1BC817AC4();
  v5 = objc_msgSend(v3, sel_BOOLForKey_, v4);

  if (v5)
    objc_msgSend(v2, sel_setReturnsObjectsAsFaults_, 0);
  return v2;
}

char *keypath_get_selector_actionHandlerClassName()
{
  return sel_actionHandlerClassName;
}

void sub_1BC6F8948(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8640(a1, (SEL *)&selRef_actionHandlerClassName, a2);
}

void sub_1BC6F8964(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F86A0(a1, a2, a3, a4, (SEL *)&selRef_setActionHandlerClassName_);
}

char *keypath_get_selector_actionHandlerUserData()
{
  return sel_actionHandlerUserData;
}

void sub_1BC6F898C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F857C(a1, (SEL *)&selRef_actionHandlerUserData, a2);
}

void sub_1BC6F89A8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F85DC(a1, a2, a3, a4, (SEL *)&selRef_setActionHandlerUserData_);
}

char *keypath_get_selector_baseAutomationIdentifier()
{
  return sel_baseAutomationIdentifier;
}

void sub_1BC6F89D0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8640(a1, (SEL *)&selRef_baseAutomationIdentifier, a2);
}

void sub_1BC6F89EC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F86A0(a1, a2, a3, a4, (SEL *)&selRef_setBaseAutomationIdentifier_);
}

char *keypath_get_selector_categoryIdentifier()
{
  return sel_categoryIdentifier;
}

void sub_1BC6F8A14(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8640(a1, (SEL *)&selRef_categoryIdentifier, a2);
}

void sub_1BC6F8A30(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F86A0(a1, a2, a3, a4, (SEL *)&selRef_setCategoryIdentifier_);
}

char *keypath_get_selector_pinnedContentIdentifier()
{
  return sel_pinnedContentIdentifier;
}

void sub_1BC6F8A58(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8640(a1, (SEL *)&selRef_pinnedContentIdentifier, a2);
}

void sub_1BC6F8A74(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F86A0(a1, a2, a3, a4, (SEL *)&selRef_setPinnedContentIdentifier_);
}

char *keypath_get_selector_contentKindRawValue()
{
  return sel_contentKindRawValue;
}

void sub_1BC6F8A9C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F852C(a1, (SEL *)&selRef_contentKindRawValue, a2);
}

void sub_1BC6F8AB8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_10Tm(a1, a2, a3, a4, (SEL *)&selRef_setContentKindRawValue_);
}

char *keypath_get_selector_contentConfigurationProviderClassName()
{
  return sel_contentConfigurationProviderClassName;
}

void sub_1BC6F8AD0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8640(a1, (SEL *)&selRef_contentConfigurationProviderClassName, a2);
}

void sub_1BC6F8AEC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F86A0(a1, a2, a3, a4, (SEL *)&selRef_setContentConfigurationProviderClassName_);
}

char *keypath_get_selector_executorIdentifier()
{
  return sel_executorIdentifier;
}

void sub_1BC6F8B14(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8640(a1, (SEL *)&selRef_executorIdentifier, a2);
}

void sub_1BC6F8B30(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F86A0(a1, a2, a3, a4, (SEL *)&selRef_setExecutorIdentifier_);
}

char *keypath_get_selector_listContentConfigurationProviderClassName()
{
  return sel_listContentConfigurationProviderClassName;
}

void sub_1BC6F8B58(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8640(a1, (SEL *)&selRef_listContentConfigurationProviderClassName, a2);
}

void sub_1BC6F8B74(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F86A0(a1, a2, a3, a4, (SEL *)&selRef_setListContentConfigurationProviderClassName_);
}

char *keypath_get_selector_dataTypes()
{
  return sel_dataTypes;
}

void sub_1BC6F8B9C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8428(a1, (SEL *)&selRef_dataTypes, (uint64_t (*)(uint64_t))type metadata accessor for DataType, (unint64_t *)&unk_1ED6BA3F0, a2);
}

void sub_1BC6F8BC8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F84A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))type metadata accessor for DataType, (unint64_t *)&unk_1ED6BA3F0, (SEL *)&selRef_setDataTypes_);
}

char *keypath_get_selector_dateSubmitted()
{
  return sel_dateSubmitted;
}

void sub_1BC6F8C04(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1BC816EAC();
  objc_msgSend(v2, sel_setDateSubmitted_, v3);

}

char *keypath_get_selector_favoriteStatusRawValue()
{
  return sel_favoriteStatusRawValue;
}

void sub_1BC6F8C58(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F852C(a1, (SEL *)&selRef_favoriteStatusRawValue, a2);
}

void sub_1BC6F8C74(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_10Tm(a1, a2, a3, a4, (SEL *)&selRef_setFavoriteStatusRawValue_);
}

char *keypath_get_selector_featureTags()
{
  return sel_featureTags;
}

void sub_1BC6F8C8C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8428(a1, (SEL *)&selRef_featureTags, (uint64_t (*)(uint64_t))type metadata accessor for EncodedFeatureTag, &qword_1ED6BA708, a2);
}

void sub_1BC6F8CB8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F84A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))type metadata accessor for EncodedFeatureTag, &qword_1ED6BA708, (SEL *)&selRef_setFeatureTags_);
}

char *keypath_get_selector_feedSection()
{
  return sel_feedSection;
}

id sub_1BC6F8CF0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_feedSection);
  *a2 = result;
  return result;
}

id sub_1BC6F8D28(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFeedSection_, *a1);
}

char *keypath_get_selector_hideInDiscover()
{
  return sel_hideInDiscover;
}

id sub_1BC6F8D48@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_hideInDiscover);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1BC6F8D78(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHideInDiscover_, *a1);
}

char *keypath_get_selector_hostingControllerClassName()
{
  return sel_hostingControllerClassName;
}

void sub_1BC6F8D98(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8640(a1, (SEL *)&selRef_hostingControllerClassName, a2);
}

void sub_1BC6F8DB4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F86A0(a1, a2, a3, a4, (SEL *)&selRef_setHostingControllerClassName_);
}

char *keypath_get_selector_hostViewStyleRawValue()
{
  return sel_hostViewStyleRawValue;
}

void sub_1BC6F8DDC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F852C(a1, (SEL *)&selRef_hostViewStyleRawValue, a2);
}

void sub_1BC6F8DF8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_10Tm(a1, a2, a3, a4, (SEL *)&selRef_setHostViewStyleRawValue_);
}

char *keypath_get_selector_keywords()
{
  return sel_keywords;
}

void sub_1BC6F8E10(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8428(a1, (SEL *)&selRef_keywords, (uint64_t (*)(uint64_t))type metadata accessor for Keyword, &qword_1ED6BA730, a2);
}

void sub_1BC6F8E3C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F84A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))type metadata accessor for Keyword, &qword_1ED6BA730, (SEL *)&selRef_setKeywords_);
}

char *keypath_get_selector_localizedCategoryName()
{
  return sel_localizedCategoryName;
}

void sub_1BC6F8E74(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8640(a1, (SEL *)&selRef_localizedCategoryName, a2);
}

void sub_1BC6F8E90(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F86A0(a1, a2, a3, a4, (SEL *)&selRef_setLocalizedCategoryName_);
}

char *keypath_get_selector_localizedDescription()
{
  return sel_localizedDescription;
}

void sub_1BC6F8EB8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8640(a1, (SEL *)&selRef_localizedDescription, a2);
}

void sub_1BC6F8ED4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F86A0(a1, a2, a3, a4, (SEL *)&selRef_setLocalizedDescription_);
}

char *keypath_get_selector_localizedTitle()
{
  return sel_localizedTitle;
}

void sub_1BC6F8EFC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8640(a1, (SEL *)&selRef_localizedTitle, a2);
}

void sub_1BC6F8F18(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F86A0(a1, a2, a3, a4, (SEL *)&selRef_setLocalizedTitle_);
}

char *keypath_get_selector_pluginPackage()
{
  return sel_pluginPackage;
}

void sub_1BC6F8F40(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F852C(a1, (SEL *)&selRef_pluginPackage, a2);
}

void sub_1BC6F8F5C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_10Tm(a1, a2, a3, a4, (SEL *)&selRef_setPluginPackage_);
}

char *keypath_get_selector_profiles()
{
  return sel_profiles;
}

void sub_1BC6F8F74(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8428(a1, (SEL *)&selRef_profiles, (uint64_t (*)(uint64_t))type metadata accessor for Profile, &qword_1ED6BA3E8, a2);
}

void sub_1BC6F8FA0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F84A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))type metadata accessor for Profile, &qword_1ED6BA3E8, (SEL *)&selRef_setProfiles_);
}

char *keypath_get_selector_searchSectionHintRawValue()
{
  return sel_searchSectionHintRawValue;
}

id sub_1BC6F8FD8@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_searchSectionHintRawValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_1BC6F9008(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSearchSectionHintRawValue_, *a1);
}

char *keypath_get_selector_searchSectionRawValue()
{
  return sel_searchSectionRawValue;
}

id sub_1BC6F9028@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_searchSectionRawValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_1BC6F9058(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSearchSectionRawValue_, *a1);
}

char *keypath_get_selector_sectionSortOrder()
{
  return sel_sectionSortOrder;
}

id sub_1BC6F9078@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_sectionSortOrder);
  *a2 = result;
  return result;
}

id sub_1BC6F90A8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSectionSortOrder_, *a1);
}

char *keypath_get_selector_sharableModelReferences()
{
  return sel_sharableModelReferences;
}

void sub_1BC6F90C8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8428(a1, (SEL *)&selRef_sharableModelReferences, (uint64_t (*)(uint64_t))type metadata accessor for SharableModelReference, &qword_1ED6BA728, a2);
}

void sub_1BC6F90F4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F84A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))type metadata accessor for SharableModelReference, &qword_1ED6BA728, (SEL *)&selRef_setSharableModelReferences_);
}

char *keypath_get_selector_sortOrder()
{
  return sel_sortOrder;
}

id sub_1BC6F912C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_sortOrder);
  *a2 = result;
  return result;
}

id sub_1BC6F915C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSortOrder_, *a1);
}

char *keypath_get_selector_storyboardIdentifier()
{
  return sel_storyboardIdentifier;
}

void sub_1BC6F917C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8640(a1, (SEL *)&selRef_storyboardIdentifier, a2);
}

void sub_1BC6F9198(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F86A0(a1, a2, a3, a4, (SEL *)&selRef_setStoryboardIdentifier_);
}

char *keypath_get_selector_suggestionRelevanceScore()
{
  return sel_suggestionRelevanceScore;
}

id sub_1BC6F91C0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_suggestionRelevanceScore);
  *a2 = v4;
  return result;
}

id sub_1BC6F91F0(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSuggestionRelevanceScore_, *a1);
}

char *keypath_get_selector_uniqueIdentifier()
{
  return sel_uniqueIdentifier;
}

void sub_1BC6F9210(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F852C(a1, (SEL *)&selRef_uniqueIdentifier, a2);
}

void sub_1BC6F922C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_10Tm(a1, a2, a3, a4, (SEL *)&selRef_setUniqueIdentifier_);
}

void keypath_set_10Tm(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  id v7;

  v6 = *a2;
  v7 = (id)sub_1BC817AC4();
  objc_msgSend(v6, *a5, v7);

}

char *keypath_get_selector_userData()
{
  return sel_userData;
}

void sub_1BC6F9294(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F857C(a1, (SEL *)&selRef_userData, a2);
}

void sub_1BC6F92B0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F85DC(a1, a2, a3, a4, (SEL *)&selRef_setUserData_);
}

char *keypath_get_selector_usesPlatformView()
{
  return sel_usesPlatformView;
}

id sub_1BC6F92D8@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_usesPlatformView);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1BC6F9308(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setUsesPlatformView_, *a1);
}

char *keypath_get_selector_viewClassName()
{
  return sel_viewClassName;
}

void sub_1BC6F9328(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8640(a1, (SEL *)&selRef_viewClassName, a2);
}

void sub_1BC6F9344(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F86A0(a1, a2, a3, a4, (SEL *)&selRef_setViewClassName_);
}

char *keypath_get_selector_viewControllerClassName()
{
  return sel_viewControllerClassName;
}

void sub_1BC6F936C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8640(a1, (SEL *)&selRef_viewControllerClassName, a2);
}

void sub_1BC6F9388(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F86A0(a1, a2, a3, a4, (SEL *)&selRef_setViewControllerClassName_);
}

char *keypath_get_selector_relevantStartDate()
{
  return sel_relevantStartDate;
}

uint64_t sub_1BC6F93B0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC6F86FC(a1, (SEL *)&selRef_relevantStartDate, a2);
}

void sub_1BC6F93CC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F877C(a1, a2, a3, a4, (SEL *)&selRef_setRelevantStartDate_);
}

char *keypath_get_selector_relevantEndDate()
{
  return sel_relevantEndDate;
}

uint64_t sub_1BC6F93F4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC6F86FC(a1, (SEL *)&selRef_relevantEndDate, a2);
}

void sub_1BC6F9410(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F877C(a1, a2, a3, a4, (SEL *)&selRef_setRelevantEndDate_);
}

char *keypath_get_selector_relevantRampUpTime()
{
  return sel_relevantRampUpTime;
}

id sub_1BC6F9438@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_relevantRampUpTime);
  *a2 = v4;
  return result;
}

id sub_1BC6F9468(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRelevantRampUpTime_, *a1);
}

char *keypath_get_selector_relevantRampDownTime()
{
  return sel_relevantRampDownTime;
}

id sub_1BC6F9488@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_relevantRampDownTime);
  *a2 = v4;
  return result;
}

id sub_1BC6F94B8(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRelevantRampDownTime_, *a1);
}

char *keypath_get_selector_sortHint()
{
  return sel_sortHint;
}

id sub_1BC6F94D8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_sortHint);
  *a2 = result;
  return result;
}

id sub_1BC6F9508(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSortHint_, *a1);
}

char *keypath_get_selector_indexForSearch()
{
  return sel_indexForSearch;
}

id sub_1BC6F9528@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_indexForSearch);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1BC6F9558(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIndexForSearch_, *a1);
}

void sub_1BC6F956C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B9BE8)
  {
    sub_1BC816EF4();
    v0 = sub_1BC818130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B9BE8);
  }
}

uint64_t sub_1BC6F95C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6F956C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC6F9604(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Publisher.receive(on:domain:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int128 v14;
  char v15;

  v8 = *a2;
  v9 = *((_BYTE *)a2 + 24);
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v13 = v8;
  v14 = *(_OWORD *)(a2 + 1);
  v15 = v9;
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(v4, &v13, a3, a4, v10, v11);
}

uint64_t Publisher.subscribe(on:domain:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int128 v14;
  char v15;

  v8 = *a2;
  v9 = *((_BYTE *)a2 + 24);
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v13 = v8;
  v14 = *(_OWORD *)(a2 + 1);
  v15 = v9;
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))(v4, &v13, a3, a4, v10, v11);
}

uint64_t dispatch thunk of GeneratorScheduler.receiveOn<A>(for:domain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of GeneratorScheduler.subscribeOn<A>(for:domain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t CountryRetrievalRecord.isoCountryCode.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CountryRetrievalRecord.isoCountryCode.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CountryRetrievalRecord.isoCountryCode.modify())()
{
  return nullsub_1;
}

uint64_t CountryRetrievalRecord.provenance.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t CountryRetrievalRecord.provenance.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*CountryRetrievalRecord.provenance.modify())()
{
  return nullsub_1;
}

uint64_t CountryRetrievalRecord.retrieved.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
  v4 = sub_1BC816EF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for CountryRetrievalRecord()
{
  uint64_t result;

  result = qword_1ED6B5D68;
  if (!qword_1ED6B5D68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CountryRetrievalRecord.retrieved.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
  v4 = sub_1BC816EF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CountryRetrievalRecord.retrieved.modify())()
{
  type metadata accessor for CountryRetrievalRecord();
  return nullsub_1;
}

uint64_t CountryRetrievalRecord.init(isoCountryCode:provenance:retrieved:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v6;
  uint64_t v7;

  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  v6 = (char *)a5 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
  v7 = sub_1BC816EF4();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a4, v7);
}

BOOL sub_1BC6F994C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s14HealthPlatform15GenerationPhaseO9hashValueSivg_0()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t sub_1BC6F99A4()
{
  return sub_1BC818748();
}

uint64_t sub_1BC6F99CC()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t sub_1BC6F9A0C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E616E65766F7270;
  if (*v0 != 1)
    v1 = 0x6576656972746572;
  if (*v0)
    return v1;
  else
    return 0x746E756F436F7369;
}

uint64_t sub_1BC6F9A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC6FABE4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC6F9AA0(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1BC6F9AAC()
{
  sub_1BC6F9C80();
  return sub_1BC8187FC();
}

uint64_t sub_1BC6F9AD4()
{
  sub_1BC6F9C80();
  return sub_1BC818808();
}

uint64_t CountryRetrievalRecord.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BC6F9F68(0, &qword_1EF45B020, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC6F9C80();
  sub_1BC8187F0();
  v9[15] = 0;
  sub_1BC818604();
  if (!v1)
  {
    type metadata accessor for CountryRetrievalRecord();
    v9[14] = 2;
    sub_1BC816EF4();
    sub_1BC6E1788(&qword_1EF45B030, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1BC818634();
    v9[13] = 1;
    sub_1BC818628();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BC6F9C80()
{
  unint64_t result;

  result = qword_1EF45B028;
  if (!qword_1EF45B028)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81A7E4, &type metadata for CountryRetrievalRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45B028);
  }
  return result;
}

uint64_t CountryRetrievalRecord.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v19 = a2;
  v3 = sub_1BC816EF4();
  v20 = *(_QWORD *)(v3 - 8);
  v21 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6F9F68(0, &qword_1EF45B038, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v23 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - v8;
  v10 = type metadata accessor for CountryRetrievalRecord();
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC6F9C80();
  v22 = v9;
  v13 = v24;
  sub_1BC8187E4();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v14 = v7;
  v15 = v21;
  v27 = 0;
  *v12 = sub_1BC818598();
  v12[1] = v16;
  v26 = 2;
  sub_1BC6E1788(&qword_1EF45B040, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1BC8185C8();
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))((char *)v12 + *(int *)(v10 + 24), v5, v15);
  v25 = 1;
  v24 = 0;
  v17 = sub_1BC8185BC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v23);
  v12[2] = v17;
  sub_1BC6F9FC4((uint64_t)v12, v19);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_1BC6FA008((uint64_t)v12);
}

void sub_1BC6F9F68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC6F9C80();
    v7 = a3(a1, &type metadata for CountryRetrievalRecord.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC6F9FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CountryRetrievalRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC6FA008(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CountryRetrievalRecord();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CountryRetrievalRecord.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  sub_1BC818748();
  type metadata accessor for CountryRetrievalRecord();
  sub_1BC816EF4();
  sub_1BC6E1788(&qword_1EF45B048, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  return sub_1BC817A7C();
}

uint64_t CountryRetrievalRecord.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC817B30();
  sub_1BC818748();
  type metadata accessor for CountryRetrievalRecord();
  sub_1BC816EF4();
  sub_1BC6E1788(&qword_1EF45B048, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BC817A7C();
  return sub_1BC818778();
}

uint64_t sub_1BC6FA18C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CountryRetrievalRecord.init(from:)(a1, a2);
}

uint64_t sub_1BC6FA1A0(_QWORD *a1)
{
  return CountryRetrievalRecord.encode(to:)(a1);
}

uint64_t sub_1BC6FA1B4()
{
  sub_1BC81873C();
  sub_1BC817B30();
  sub_1BC818748();
  sub_1BC816EF4();
  sub_1BC6E1788(&qword_1EF45B048, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BC817A7C();
  return sub_1BC818778();
}

uint64_t sub_1BC6FA250()
{
  sub_1BC817B30();
  sub_1BC818748();
  sub_1BC816EF4();
  sub_1BC6E1788(&qword_1EF45B048, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  return sub_1BC817A7C();
}

uint64_t sub_1BC6FA2D0()
{
  sub_1BC81873C();
  sub_1BC817B30();
  sub_1BC818748();
  sub_1BC816EF4();
  sub_1BC6E1788(&qword_1EF45B048, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BC817A7C();
  return sub_1BC818778();
}

uint64_t _s14HealthPlatform22CountryRetrievalRecordV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1BC818694() & 1) == 0 || a1[2] != a2[2])
    return 0;
  type metadata accessor for CountryRetrievalRecord();
  return sub_1BC816EC4();
}

uint64_t sub_1BC6FA3E0()
{
  return sub_1BC6E1788(&qword_1EF45B050, (uint64_t (*)(uint64_t))type metadata accessor for CountryRetrievalRecord, (uint64_t)&protocol conformance descriptor for CountryRetrievalRecord);
}

uint64_t *initializeBufferWithCopyOfBuffer for CountryRetrievalRecord(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BC816EF4();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for CountryRetrievalRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1BC816EF4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for CountryRetrievalRecord(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BC816EF4();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for CountryRetrievalRecord(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC816EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for CountryRetrievalRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1BC816EF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for CountryRetrievalRecord(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC816EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CountryRetrievalRecord()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC6FA6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC816EF4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CountryRetrievalRecord()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC6FA760(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BC816EF4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BC6FA7D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC816EF4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **initializeBufferWithCopyOfBuffer for SourceProfile(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for SourceProfile(id *a1)
{

}

void **assignWithCopy for SourceProfile(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **assignWithTake for SourceProfile(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for SourceProfile(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SourceProfile(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CountryRetrievalError()
{
  return &type metadata for CountryRetrievalError;
}

uint64_t getEnumTagSinglePayload for CountryRetrievalRecord.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CountryRetrievalRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC6FAA7C + 4 * byte_1BC81A5B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC6FAAB0 + 4 * asc_1BC81A5B0[v4]))();
}

uint64_t sub_1BC6FAAB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC6FAAB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC6FAAC0);
  return result;
}

uint64_t sub_1BC6FAACC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC6FAAD4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC6FAAD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC6FAAE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC6FAAEC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1BC6FAAF4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CountryRetrievalRecord.CodingKeys()
{
  return &type metadata for CountryRetrievalRecord.CodingKeys;
}

unint64_t sub_1BC6FAB10()
{
  unint64_t result;

  result = qword_1EF45B058;
  if (!qword_1EF45B058)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81A7BC, &type metadata for CountryRetrievalRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45B058);
  }
  return result;
}

unint64_t sub_1BC6FAB58()
{
  unint64_t result;

  result = qword_1EF45B060;
  if (!qword_1EF45B060)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81A72C, &type metadata for CountryRetrievalRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45B060);
  }
  return result;
}

unint64_t sub_1BC6FABA0()
{
  unint64_t result;

  result = qword_1EF45B068;
  if (!qword_1EF45B068)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81A754, &type metadata for CountryRetrievalRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45B068);
  }
  return result;
}

uint64_t sub_1BC6FABE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E756F436F7369 && a2 == 0xEE0065646F437972;
  if (v2 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E616E65766F7270 && a2 == 0xEA00000000006563 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6576656972746572 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t Publisher.handleStartAndIdleEvents(idleTimeInterval:queue:startBlock:idleBlock:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  uint64_t v9;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  _QWORD *v24;
  _QWORD *v25;
  id v26;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v18 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v9, v21);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a8, v20, a6);
  v23 = (int *)type metadata accessor for Publishers.HandleStartAndIdleEvents(0, a6, a7, v22);
  *(double *)(a8 + v23[9]) = a9;
  *(_QWORD *)(a8 + v23[10]) = a1;
  v24 = (_QWORD *)(a8 + v23[11]);
  *v24 = a2;
  v24[1] = a3;
  v25 = (_QWORD *)(a8 + v23[12]);
  *v25 = v29;
  v25[1] = a5;
  v26 = a1;
  swift_retain();
  return swift_retain();
}

int *Publishers.HandleStartAndIdleEvents.init(_:idleTimeInterval:queue:startBlock:idleBlock:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>)
{
  uint64_t v19;
  int *result;
  _QWORD *v21;
  _QWORD *v22;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(a9, a1, a7);
  result = (int *)type metadata accessor for Publishers.HandleStartAndIdleEvents(0, a7, a8, v19);
  *(double *)(a9 + result[9]) = a10;
  *(_QWORD *)(a9 + result[10]) = a2;
  v21 = (_QWORD *)(a9 + result[11]);
  *v21 = a3;
  v21[1] = a4;
  v22 = (_QWORD *)(a9 + result[12]);
  *v22 = a5;
  v22[1] = a6;
  return result;
}

uint64_t type metadata accessor for Publishers.HandleStartAndIdleEvents(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Publishers.HandleStartAndIdleEvents);
}

void Publishers.HandleStartAndIdleEvents.receive<A>(subscriber:)(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  _s24HandleStartAndIdleEventsV5InnerCMa();
}

uint64_t sub_1BC6FAFBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  double v9;
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
  v9 = *(double *)(v1 + v5[9]);
  v10 = *(void **)(v1 + v5[10]);
  v11 = v5[12];
  v12 = (uint64_t *)(v1 + v5[11]);
  v13 = *v12;
  v14 = v12[1];
  v15 = *(_QWORD *)(v1 + v11);
  v16 = *(_QWORD *)(v1 + v11 + 8);
  swift_allocObject();
  v17 = v10;
  swift_retain();
  swift_retain();
  *(_QWORD *)(v7 - 128) = sub_1BC6FB9A4(v2, (uint64_t)v17, v13, v14, v15, v16, v9);
  MEMORY[0x1BCCF5AB4](&unk_1BC81A9C0, a1);
  sub_1BC817914();
  return swift_release();
}

void _s24HandleStartAndIdleEventsV5InnerCMa()
{
  JUMPOUT(0x1BCCF5A3CLL);
}

uint64_t *sub_1BC6FB0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  swift_allocObject();
  return sub_1BC6FB9A4(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1BC6FB138()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_1BC6FB154(uint64_t a1)
{
  Publishers.HandleStartAndIdleEvents.receive<A>(subscriber:)(a1);
}

uint64_t sub_1BC6FB168()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC6FB170()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BC6FB208(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  void **v13;
  void *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
    v13 = (void **)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
    v14 = *v13;
    *v12 = *v13;
    v15 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
    v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v14;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1BC6FB318(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();

  swift_release();
  return swift_release();
}

uint64_t sub_1BC6FB37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  void **v10;
  void *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (void **)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v10;
  *v9 = *v10;
  v12 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v11;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1BC6FB424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void **v10;
  void *v11;
  void *v12;
  id v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (void **)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (void **)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v10;
  v12 = *v9;
  *v9 = *v10;
  v13 = v11;

  v14 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1BC6FB4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _OWORD *v11;
  _OWORD *v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_OWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8);
  v12 = (_OWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  *v11 = *v12;
  *(_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BC6FB570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void **v10;
  void *v11;
  _OWORD *v12;
  _OWORD *v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (void **)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (void **)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v9;
  *v9 = *v10;

  v12 = (_OWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_OWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  *v12 = *v13;
  swift_release();
  *(_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1BC6FB618(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BC6FB6AC + 4 * byte_1BC81A840[v10]))();
  }
}

void sub_1BC6FB738(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1BC6FB844()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BC6FB8C0);
}

void sub_1BC6FB84C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BC6FB854);
  JUMPOUT(0x1BC6FB8C0);
}

void sub_1BC6FB89C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BC6FB8C0);
}

void sub_1BC6FB8A4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BC6FB8C0);
}

uint64_t sub_1BC6FB8AC(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1BC6FB8C0);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1BC6FB8BCLL);
    JUMPOUT(0x1BC6FB8B8);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_1BC6FB8DC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_1BC6FB9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t *v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  v15 = *v7;
  v16 = *(_QWORD *)(*v7 + 152);
  type metadata accessor for UnfairLock();
  v17 = swift_allocObject();
  v18 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v17 + 16) = v18;
  *v18 = 0;
  *(uint64_t *)((char *)v7 + v16) = v17;
  v19 = (uint64_t)v7 + *(_QWORD *)(*v7 + 160);
  *(_QWORD *)(v19 + 32) = 0;
  *(_OWORD *)v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(_BYTE *)(v19 + 40) = 2;
  *(uint64_t *)((char *)v7 + *(_QWORD *)(*v7 + 168)) = 0;
  *((_BYTE *)v7 + *(_QWORD *)(*v7 + 176)) = 1;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v15 + 88) - 8) + 32))((uint64_t)v7 + *(_QWORD *)(*v7 + 112), a1);
  *(uint64_t *)((char *)v7 + *(_QWORD *)(*v7 + 128)) = a2;
  *(double *)((char *)v7 + *(_QWORD *)(*v7 + 120)) = a7;
  v20 = (uint64_t *)((char *)v7 + *(_QWORD *)(*v7 + 136));
  *v20 = a3;
  v20[1] = a4;
  v21 = (uint64_t *)((char *)v7 + *(_QWORD *)(*v7 + 144));
  *v21 = a5;
  v21[1] = a6;
  return v7;
}

uint64_t sub_1BC6FBAD0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int8x16_t v7;
  uint64_t v9;
  uint64_t *v10;
  int8x16_t v11;
  int8x16_t v12;
  char v13;

  v2 = v1;
  v4 = *v2;
  v5 = *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 152));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 16));
  v6 = (uint64_t)v2 + *(_QWORD *)(*v2 + 160);
  swift_beginAccess();
  sub_1BC6FC690(v6, (uint64_t)&v10);
  if (v13 == 2
    && (v7 = vorrq_s8(v11, v12),
        !(*(_QWORD *)&vorr_s8(*(int8x8_t *)v7.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL)) | (unint64_t)v10)))
  {
    sub_1BC6FC6CC((uint64_t)&v10);
    sub_1BC6FC700((uint64_t)a1, (uint64_t)&v10);
    v13 = 0;
    swift_beginAccess();
    sub_1BC6FC54C((uint64_t)&v10, v6);
    swift_endAccess();
    sub_1BC6FBC5C();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
    v12.i64[0] = v4;
    v12.i64[1] = MEMORY[0x1BCCF5AB4](&unk_1BC81A988, v4);
    v10 = v2;
    swift_retain();
    sub_1BC8176C8();
    v9 = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v10);
    return (*(uint64_t (**)(uint64_t))((char *)v2 + *(_QWORD *)(*v2 + 136)))(v9);
  }
  else
  {
    sub_1BC6FC6CC((uint64_t)&v10);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    return sub_1BC8176E0();
  }
}

uint64_t sub_1BC6FBC5C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v1 = *v0;
  v2 = sub_1BC81798C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  v9 = sub_1BC817950();
  result = MEMORY[0x1E0C80A78](v9);
  v11 = *(_QWORD *)(v1 + 168);
  v12 = v1;
  if (*(uint64_t *)((char *)v0 + v11))
  {
    swift_retain();
    sub_1BC8179A4();
    result = swift_release();
    v12 = *v0;
  }
  if (*((_BYTE *)v0 + *(_QWORD *)(v12 + 176)) == 1)
  {
    v13 = swift_allocObject();
    v22 = v2;
    v14 = v13;
    swift_weakInit();
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v1 + 80);
    *(_OWORD *)(v15 + 24) = *(_OWORD *)(v1 + 88);
    *(_QWORD *)(v15 + 40) = *(_QWORD *)(v1 + 104);
    *(_QWORD *)(v15 + 48) = v14;
    aBlock[4] = sub_1BC6FC5D0;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC719640;
    aBlock[3] = &block_descriptor_2;
    v20 = _Block_copy(aBlock);
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1BC6FC5E8();
    v21 = v3;
    sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC6FC630();
    swift_retain();
    sub_1BC818184();
    sub_1BC8179B0();
    swift_allocObject();
    v16 = sub_1BC817998();
    swift_release();
    swift_release();
    *(uint64_t *)((char *)v0 + v11) = v16;
    swift_retain();
    swift_release();
    sub_1BC817980();
    MEMORY[0x1BCCF4680](v6, *(double *)((char *)v0 + *(_QWORD *)(*v0 + 120)));
    v17 = *(void (**)(char *, uint64_t))(v21 + 8);
    v18 = v6;
    v19 = v22;
    v17(v18, v22);
    sub_1BC817F74();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v17)(v8, v19);
  }
  return result;
}

uint64_t sub_1BC6FBF24()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC6FBF78();
    return swift_release();
  }
  return result;
}

void sub_1BC6FBF78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  v3 = *(unsigned __int8 *)(v0 + v2);
  *(_BYTE *)(v0 + v2) = 0;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  if (v3 == 1)
    (*(void (**)(void))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144)))();
}

uint64_t sub_1BC6FBFE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1BC6FBC5C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return sub_1BC8176D4();
}

void sub_1BC6FC040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  char v7;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  v4 = 1;
  v5 = 0u;
  v6 = 0u;
  v7 = 2;
  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 160);
  swift_beginAccess();
  sub_1BC6FC54C((uint64_t)&v4, v3);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  sub_1BC8176BC();
  sub_1BC6FBF78();
}

uint64_t sub_1BC6FC108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4[2];
  char v5;
  _QWORD v6[3];
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  v2 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_beginAccess();
  sub_1BC6FC690(v2, (uint64_t)v6);
  sub_1BC6FC690((uint64_t)v6, (uint64_t)v4);
  if (v5 != 1 && v5)
  {
    v9 = 0;
    memset(v8, 0, sizeof(v8));
    sub_1BC6FC6CC((uint64_t)v4);
  }
  else
  {
    sub_1BC6FC848(v4, (uint64_t)v8);
  }
  sub_1BC6FC6CC((uint64_t)v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1BC6FC744((uint64_t)v8, (uint64_t)v6);
  if (v7)
  {
    __swift_project_boxed_opaque_existential_1(v6, v7);
    sub_1BC817728();
    sub_1BC6FC7F4((uint64_t)v8);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  }
  else
  {
    sub_1BC6FC7F4((uint64_t)v8);
    return sub_1BC6FC7F4((uint64_t)v6);
  }
}

uint64_t sub_1BC6FC220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4[2];
  char v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  char v9;
  _OWORD v10[2];
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  v2 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_beginAccess();
  sub_1BC6FC690(v2, (uint64_t)&v6);
  sub_1BC6FC690((uint64_t)&v6, (uint64_t)v4);
  if (v5 != 1 && v5)
  {
    v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_1BC6FC6CC((uint64_t)v4);
  }
  else
  {
    sub_1BC6FC848(v4, (uint64_t)v10);
  }
  sub_1BC6FC6CC((uint64_t)&v6);
  if (*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168)))
  {
    swift_retain();
    sub_1BC8179A4();
    swift_release();
  }
  v6 = 1;
  v7 = 0u;
  v8 = 0u;
  v9 = 2;
  swift_beginAccess();
  sub_1BC6FC54C((uint64_t)&v6, v2);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1BC6FC744((uint64_t)v10, (uint64_t)&v6);
  if ((_QWORD)v8)
  {
    __swift_project_boxed_opaque_existential_1(&v6, v8);
    sub_1BC8176E0();
    sub_1BC6FC7F4((uint64_t)v10);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v6);
  }
  else
  {
    sub_1BC6FC7F4((uint64_t)v10);
    return sub_1BC6FC7F4((uint64_t)&v6);
  }
}

uint64_t sub_1BC6FC394()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 88) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));

  swift_release();
  swift_release();
  swift_release();
  sub_1BC6FC6CC(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160));
  swift_release();
  return v0;
}

uint64_t sub_1BC6FC42C()
{
  sub_1BC6FC394();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC6FC44C(_QWORD *a1)
{
  return sub_1BC6FBAD0(a1);
}

uint64_t sub_1BC6FC46C()
{
  return sub_1BC6FBFE0();
}

void sub_1BC6FC48C()
{
  sub_1BC6FC040();
}

uint64_t sub_1BC6FC4AC()
{
  return sub_1BC6FC108();
}

uint64_t sub_1BC6FC4CC()
{
  return sub_1BC8175B4();
}

uint64_t sub_1BC6FC4EC()
{
  return sub_1BC6FC220();
}

void sub_1BC6FC50C()
{
  JUMPOUT(0x1BCCF5AB4);
}

void sub_1BC6FC51C()
{
  JUMPOUT(0x1BCCF5AB4);
}

uint64_t sub_1BC6FC52C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1BC6FC54C(uint64_t a1, uint64_t a2)
{
  _s18SubscriptionStatusOwta(a2, a1);
  return a2;
}

uint64_t sub_1BC6FC588()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC6FC5AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC6FC5D0()
{
  return sub_1BC6FBF24();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

unint64_t sub_1BC6FC5E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B9DC0;
  if (!qword_1ED6B9DC0)
  {
    v1 = sub_1BC817950();
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B9DC0);
  }
  return result;
}

unint64_t sub_1BC6FC630()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6BA7E0;
  if (!qword_1ED6BA7E0)
  {
    sub_1BC6ECA64(255, (unint64_t *)&unk_1ED6BA7D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6BA7E0);
  }
  return result;
}

uint64_t sub_1BC6FC690(uint64_t a1, uint64_t a2)
{
  _s18SubscriptionStatusOwcp(a2, a1);
  return a2;
}

uint64_t sub_1BC6FC6CC(uint64_t a1)
{
  _s18SubscriptionStatusOwxx(a1);
  return a1;
}

uint64_t sub_1BC6FC700(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1BC6FC744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6ECA64(0, &qword_1ED6B8CB0, (uint64_t (*)(uint64_t))sub_1BC6FC7A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC6FC7A0()
{
  unint64_t result;

  result = qword_1ED6B5CA0;
  if (!qword_1ED6B5CA0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B5CA0);
  }
  return result;
}

uint64_t sub_1BC6FC7F4(uint64_t a1)
{
  uint64_t v2;

  sub_1BC6ECA64(0, &qword_1ED6B8CB0, (uint64_t (*)(uint64_t))sub_1BC6FC7A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC6FC848(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t PluginFeedItem.HostViewStyle.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BC818568();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t PluginFeedItem.HostViewStyle.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x656D6F7268436F6ELL;
  else
    return 0x656D6F726863;
}

uint64_t sub_1BC6FC8F8(char *a1, char *a2)
{
  return sub_1BC7E09E4(*a1, *a2);
}

uint64_t sub_1BC6FC904@<X0>(char *a1@<X8>)
{
  return PluginFeedItem.HostViewStyle.init(rawValue:)(a1);
}

void sub_1BC6FC910(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x656D6F726863;
  if (*v1)
    v2 = 0x656D6F7268436F6ELL;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1BC6FC950()
{
  unint64_t result;

  result = qword_1EF45B070;
  if (!qword_1EF45B070)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for PluginFeedItem.HostViewStyle, &type metadata for PluginFeedItem.HostViewStyle);
    atomic_store(result, (unint64_t *)&qword_1EF45B070);
  }
  return result;
}

uint64_t sub_1BC6FC994()
{
  sub_1BC81873C();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  return sub_1BC818778();
}

uint64_t sub_1BC6FCA10()
{
  sub_1BC817B30();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC6FCA68()
{
  sub_1BC81873C();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  return sub_1BC818778();
}

uint64_t _s13HostViewStyleOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13HostViewStyleOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC6FCBBC + 4 * byte_1BC81AA1D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC6FCBF0 + 4 * byte_1BC81AA18[v4]))();
}

uint64_t sub_1BC6FCBF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC6FCBF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC6FCC00);
  return result;
}

uint64_t sub_1BC6FCC0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC6FCC14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC6FCC18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC6FCC20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1BC6FCC2C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PluginFeedItem.HostViewStyle()
{
  return &type metadata for PluginFeedItem.HostViewStyle;
}

void *static Plugin.findOrCreatePlugin(_:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;

  sub_1BC6FCD40();
  sub_1BC6FCD7C();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = sub_1BC6ED740();
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1BC817E3C();
  v8 = (void *)sub_1BC805F30(a3, (uint64_t)v7);

  v9 = (void *)sub_1BC817AC4();
  objc_msgSend(v8, sel_setPackage_, v9);

  return v8;
}

unint64_t sub_1BC6FCD40()
{
  unint64_t result;

  result = qword_1ED6BA460;
  if (!qword_1ED6BA460)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BA460);
  }
  return result;
}

void sub_1BC6FCD7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BA818)
  {
    sub_1BC6EF9EC();
    v0 = sub_1BC81867C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BA818);
  }
}

id Plugin.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id Plugin.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for Plugin();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for Plugin()
{
  return objc_opt_self();
}

id Plugin.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Plugin();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static PluginData.entityName.getter()
{
  return 0x61446E6967756C50;
}

void *static PluginData.findOrCreate(uniqueIdentifier:pluginIdentifier:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  void *v14;
  void *v15;

  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  sub_1BC6FCD7C();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC81AB00;
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1BC6ED740();
  strcpy((char *)(v10 + 32), "plugin.package");
  *(_BYTE *)(v10 + 47) = -18;
  *(_QWORD *)(v10 + 96) = v11;
  *(_QWORD *)(v10 + 104) = v12;
  *(_QWORD *)(v10 + 64) = v12;
  *(_QWORD *)(v10 + 72) = a3;
  *(_QWORD *)(v10 + 80) = a4;
  *(_QWORD *)(v10 + 136) = v11;
  *(_QWORD *)(v10 + 144) = v12;
  *(_QWORD *)(v10 + 112) = 0xD000000000000010;
  *(_QWORD *)(v10 + 120) = 0x80000001BC825700;
  *(_QWORD *)(v10 + 176) = v11;
  *(_QWORD *)(v10 + 184) = v12;
  *(_QWORD *)(v10 + 152) = a1;
  *(_QWORD *)(v10 + 160) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = (void *)sub_1BC817E3C();
  v14 = (void *)sub_1BC8060D8(a5, (uint64_t)v13);
  v15 = (void *)sub_1BC817AC4();
  objc_msgSend(v14, sel_setUniqueIdentifier_, v15);

  return v14;
}

unint64_t static PluginData.find(uniqueIdentifier:pluginIdentifier:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  unint64_t v14;

  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  sub_1BC6FCD7C();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC81AB00;
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1BC6ED740();
  strcpy((char *)(v10 + 32), "plugin.package");
  *(_BYTE *)(v10 + 47) = -18;
  *(_QWORD *)(v10 + 96) = v11;
  *(_QWORD *)(v10 + 104) = v12;
  *(_QWORD *)(v10 + 64) = v12;
  *(_QWORD *)(v10 + 72) = a3;
  *(_QWORD *)(v10 + 80) = a4;
  *(_QWORD *)(v10 + 136) = v11;
  *(_QWORD *)(v10 + 144) = v12;
  *(_QWORD *)(v10 + 112) = 0xD000000000000010;
  *(_QWORD *)(v10 + 120) = 0x80000001BC825700;
  *(_QWORD *)(v10 + 176) = v11;
  *(_QWORD *)(v10 + 184) = v12;
  *(_QWORD *)(v10 + 152) = a1;
  *(_QWORD *)(v10 + 160) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = (void *)sub_1BC817E3C();
  v14 = sub_1BC6FD5AC(a5, (uint64_t)v13, 1, 0x61446E6967756C50, 0xEA00000000006174, (void (*)(uint64_t))type metadata accessor for PluginData, &qword_1EF45B090);

  return v14;
}

uint64_t sub_1BC6FD2E0()
{
  return 0x61446E6967756C50;
}

uint64_t PluginData.__allocating_init(context:uniqueIdentifier:)(void *a1)
{
  objc_class *v1;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t result;

  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_1BC817AC4();
  v5 = objc_msgSend(v3, sel_entityForName_inManagedObjectContext_, v4, a1);

  if (v5)
  {
    v6 = objc_msgSend(objc_allocWithZone(v1), sel_initWithEntity_insertIntoManagedObjectContext_, v5, a1);
    v7 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setUniqueIdentifier_, v7);

    return (uint64_t)v6;
  }
  else
  {
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

unint64_t sub_1BC6FD448(void *a1, uint64_t a2, char a3)
{
  return sub_1BC6FD5AC(a1, a2, a3, 0x6570795461746144, 0xE800000000000000, (void (*)(uint64_t))type metadata accessor for DataType, &qword_1EF45B0A8);
}

unint64_t sub_1BC6FD480(void *a1, uint64_t a2, char a3)
{
  return sub_1BC6FD5AC(a1, a2, a3, 0x64726F7779654BLL, 0xE700000000000000, (void (*)(uint64_t))type metadata accessor for Keyword, &qword_1EF45B0A0);
}

unint64_t sub_1BC6FD4B8(void *a1, uint64_t a2, char a3)
{
  return sub_1BC6FD5AC(a1, a2, a3, 0x6E6967756C50, 0xE600000000000000, (void (*)(uint64_t))type metadata accessor for Plugin, &qword_1EF45B098);
}

unint64_t sub_1BC6FD4EC(void *a1, uint64_t a2, char a3)
{
  return sub_1BC6FD5AC(a1, a2, a3, 0x61446E6967756C50, 0xEA00000000006174, (void (*)(uint64_t))type metadata accessor for PluginData, &qword_1EF45B090);
}

uint64_t sub_1BC6FD528(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1BC6FD574(void *a1, uint64_t a2, char a3)
{
  return sub_1BC6FD5AC(a1, a2, a3, 0x656C69666F7250, 0xE700000000000000, (void (*)(uint64_t))type metadata accessor for Profile, &qword_1EF45B088);
}

unint64_t sub_1BC6FD5AC(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), unint64_t *a7)
{
  void *v7;
  uint64_t v8;
  void *v10;
  id v14;
  void *v15;
  id v16;
  unint64_t result;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint8_t *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  id *v49;
  void *v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v10 = v7;
  v14 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v15 = (void *)sub_1BC817AC4();
  v16 = objc_msgSend(v14, sel_initWithEntityName_, v15);

  objc_msgSend(v16, sel_setPredicate_, a2);
  a6(0);
  result = sub_1BC8180AC();
  if (v8)
    goto LABEL_2;
  v18 = result;
  v46 = a1;
  v47 = v16;
  v51 = a3;
  v50 = v10;
  v19 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v44 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    if (v44 >= 2)
      goto LABEL_6;
    swift_bridgeObjectRetain();
    v15 = (void *)sub_1BC8184E4();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(void **)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v15 > 1)
    {
LABEL_6:
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v20 = sub_1BC817590();
      v21 = (id *)__swift_project_value_buffer(v20, (uint64_t)qword_1ED6BB5D0);
      v22 = sub_1BC81756C();
      v23 = sub_1BC817E84();
      if (os_log_type_enabled(v22, v23))
      {
        v21 = (id *)v18;
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_1BC6DD000, v22, v23, "Error: duplicate feed item created...", v24, 2u);
        v25 = v24;
        v18 = (unint64_t)v21;
        MEMORY[0x1BCCF5BA4](v25, -1, -1);
      }

      if (v19)
      {
        swift_bridgeObjectRetain();
        v26 = sub_1BC8184E4();
      }
      else
      {
        v26 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      v15 = v10;
      v27 = a3;
      if (!v26)
      {
LABEL_23:
        swift_bridgeObjectRelease_n();
        sub_1BC6FDF4C(v46, v27 & 1, a7, a6);
        v16 = v47;
        sub_1BC6FE97C();
        swift_allocError();
        swift_willThrow();
LABEL_2:

        return (unint64_t)v15;
      }
      v54 = v26 - 1;
      if (v26 >= 1)
      {
        v28 = 0;
        v53 = v18 & 0xC000000000000001;
        v49 = (id *)v18;
        while (1)
        {
          v30 = v28;
          if (v53)
            v31 = (id)MEMORY[0x1BCCF4FB0]();
          else
            v31 = *(id *)(v18 + 8 * v28 + 32);
          v32 = v31;
          v33 = sub_1BC81756C();
          v34 = sub_1BC817E84();
          if (os_log_type_enabled(v33, v34))
          {
            v35 = swift_slowAlloc();
            v36 = swift_slowAlloc();
            v55 = v36;
            *(_DWORD *)v35 = 134218242;
            v52 = v30;
            *(_QWORD *)(v35 + 4) = v30;
            *(_WORD *)(v35 + 12) = 2080;
            v37 = v32;
            v38 = a6;
            v39 = objc_msgSend(v37, sel_description);
            v40 = sub_1BC817AE8();
            v42 = v41;

            a6 = v38;
            v15 = v50;
            *(_QWORD *)(v35 + 14) = sub_1BC6E14D8(v40, v42, &v55);

            v27 = v51;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1BC6DD000, v33, v34, "Existing item %ld: %s", (uint8_t *)v35, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1BCCF5BA4](v36, -1, -1);
            v43 = v35;
            v18 = (unint64_t)v49;
            MEMORY[0x1BCCF5BA4](v43, -1, -1);

            v29 = v52;
            if (v54 == v52)
              goto LABEL_23;
          }
          else
          {

            v29 = v30;
            if (v54 == v30)
              goto LABEL_23;
          }
          v28 = v29 + 1;
        }
      }
      __break(1u);
LABEL_33:
      v45 = (id)MEMORY[0x1BCCF4FB0](0, v18);
      goto LABEL_30;
    }
  }
  v21 = (id *)v16;
  if (!v15)
  {
LABEL_31:
    swift_bridgeObjectRelease();

    return (unint64_t)v15;
  }
  if ((v18 & 0xC000000000000001) != 0)
    goto LABEL_33;
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v45 = *(id *)(v18 + 32);
LABEL_30:
    v15 = v45;
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BC6FDA78(void *a1, uint64_t a2, uint64_t a3)
{
  NSObject *v3;
  NSObject *v4;
  id v8;
  void *v9;
  id v10;
  unint64_t result;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *v19;
  id i;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  id v37;
  unint64_t v38;
  void *v39;
  os_log_type_t type;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v4 = v3;
  v8 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v9 = (void *)sub_1BC817AC4();
  v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  objc_msgSend(v10, sel_setPredicate_, a2);
  type metadata accessor for FeedSection();
  result = sub_1BC8180AC();
  if (v3)
    goto LABEL_2;
  v12 = result;
  v37 = v10;
  v13 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v35 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    if (v35 >= 2)
      goto LABEL_6;
    swift_bridgeObjectRetain();
    v4 = sub_1BC8184E4();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(NSObject **)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v4 > 1)
    {
LABEL_6:
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v14 = sub_1BC817590();
      v15 = (void *)__swift_project_value_buffer(v14, (uint64_t)qword_1ED6BB5D0);
      v4 = sub_1BC81756C();
      v16 = sub_1BC817E84();
      if (os_log_type_enabled(v4, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_1BC6DD000, v4, v16, "Error: duplicate feed item created...", v17, 2u);
        MEMORY[0x1BCCF5BA4](v17, -1, -1);
      }

      if (v13)
      {
        swift_bridgeObjectRetain();
        v18 = sub_1BC8184E4();
        if (!v18)
        {
LABEL_24:
          swift_bridgeObjectRelease_n();
          sub_1BC6FE45C(a1, a3 & 1);
          v10 = v37;
          sub_1BC6FE97C();
          swift_allocError();
          swift_willThrow();
LABEL_2:

          return (unint64_t)v4;
        }
      }
      else
      {
        v18 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v18)
          goto LABEL_24;
      }
      v4 = (v18 - 1);
      if (v18 >= 1)
      {
        v19 = 0;
        v42 = v12 & 0xC000000000000001;
        v38 = v12;
        v39 = a1;
        if ((v12 & 0xC000000000000001) == 0)
          goto LABEL_17;
        while (1)
        {
          for (i = (id)MEMORY[0x1BCCF4FB0](v19, v12); ; i = *(id *)(v12 + 8 * (_QWORD)v19 + 32))
          {
            v21 = i;
            v22 = sub_1BC81756C();
            v23 = sub_1BC817E84();
            if (os_log_type_enabled(v22, v23))
            {
              v24 = swift_slowAlloc();
              v41 = swift_slowAlloc();
              v43 = v41;
              *(_DWORD *)v24 = 134218242;
              *(_QWORD *)(v24 + 4) = v19;
              *(_WORD *)(v24 + 12) = 2080;
              v25 = v21;
              v26 = objc_msgSend(v25, sel_description);
              type = v23;
              v27 = v19;
              v28 = v4;
              v29 = a3;
              v30 = sub_1BC817AE8();
              v32 = v31;

              v33 = v30;
              a3 = v29;
              v4 = v28;
              v19 = v27;
              *(_QWORD *)(v24 + 14) = sub_1BC6E14D8(v33, v32, &v43);

              a1 = v39;
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1BC6DD000, v22, type, "Existing item %ld: %s", (uint8_t *)v24, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1BCCF5BA4](v41, -1, -1);
              v34 = v24;
              v12 = v38;
              MEMORY[0x1BCCF5BA4](v34, -1, -1);

              if (v4 == v27)
                goto LABEL_24;
            }
            else
            {

              if (v4 == v19)
                goto LABEL_24;
            }
            v19 = ((char *)v19 + 1);
            if (v42)
              break;
LABEL_17:
            ;
          }
        }
      }
      __break(1u);
LABEL_34:
      v36 = MEMORY[0x1BCCF4FB0](0, v12);
      goto LABEL_31;
    }
  }
  v15 = v10;
  if (!v4)
  {
LABEL_32:
    swift_bridgeObjectRelease();

    return (unint64_t)v4;
  }
  if ((v12 & 0xC000000000000001) != 0)
    goto LABEL_34;
  if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v36 = *(id *)(v12 + 32);
LABEL_31:
    v4 = v36;
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

void sub_1BC6FDF4C(void *a1, char a2, unint64_t *a3, void (*a4)(uint64_t))
{
  id v8;
  void *v9;
  id v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  unsigned __int8 v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  void (*v30)(uint64_t);
  _OWORD v31[2];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v8 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  if (!v8)
  {
    if (qword_1ED6BB5B0 == -1)
    {
LABEL_11:
      v19 = sub_1BC817590();
      __swift_project_value_buffer(v19, (uint64_t)qword_1ED6BB5D0);
      v20 = sub_1BC81756C();
      v21 = sub_1BC817E90();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_1BC6DD000, v20, v21, "No coordinator, unable to reset cache version", v22, 2u);
        MEMORY[0x1BCCF5BA4](v22, -1, -1);
      }

      return;
    }
LABEL_24:
    swift_once();
    goto LABEL_11;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, sel_persistentStores);
  sub_1BC6ED7C0(0, &qword_1ED6B9C80);
  v11 = sub_1BC817C5C();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v24 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    if (v24)
      goto LABEL_4;
  }
  else if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_4:
    v30 = a4;
    if ((v11 & 0xC000000000000001) != 0)
    {
      v12 = (id)MEMORY[0x1BCCF4FB0](0, v11);
LABEL_7:
      v13 = v12;
      swift_bridgeObjectRelease();
      v14 = objc_msgSend(v9, sel_metadataForPersistentStore_, v13);
      sub_1BC817A34();

      sub_1BC71DFC0(0xD000000000000023, 0x80000001BC826480, v31);
      sub_1BC6EF7BC((uint64_t)v31);
      swift_bridgeObjectRetain();
      v15 = (void *)sub_1BC817A28();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setMetadata_forPersistentStore_, v15, v13);

      *(_QWORD *)&v31[0] = 0;
      v16 = objc_msgSend(a1, sel_save_, v31);
      v17 = *(void **)&v31[0];
      if ((v16 & 1) != 0)
      {
        if ((a2 & 1) != 0)
        {
          *(_QWORD *)&v31[0] = 0;
          *((_QWORD *)&v31[0] + 1) = 0xE000000000000000;
          v29 = v17;
          sub_1BC8182C8();
          sub_1BC817B48();
          sub_1BC6FE9C0(0, a3, v30);
          sub_1BC817AF4();
          sub_1BC817B48();
          swift_bridgeObjectRelease();
          sub_1BC817B48();
          sub_1BC8184B4();
          __break(1u);
        }
        else
        {
          v18 = *(id *)&v31[0];

          swift_bridgeObjectRelease();
        }
      }
      else
      {
        v23 = *(id *)&v31[0];
        swift_bridgeObjectRelease();
        sub_1BC816D5C();

        swift_willThrow();
      }
      return;
    }
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v12 = *(id *)(v11 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v25 = sub_1BC817590();
  __swift_project_value_buffer(v25, (uint64_t)qword_1ED6BB5D0);
  v26 = sub_1BC81756C();
  v27 = sub_1BC817E90();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_1BC6DD000, v26, v27, "No persistent stores, unable to reset cache version", v28, 2u);
    MEMORY[0x1BCCF5BA4](v28, -1, -1);
  }

}

void sub_1BC6FE45C(void *a1, char a2)
{
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  unsigned __int8 v12;
  void *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  _OWORD v26[2];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  type metadata accessor for FeedSection();
  v4 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  if (!v4)
  {
    if (qword_1ED6BB5B0 == -1)
    {
LABEL_11:
      v15 = sub_1BC817590();
      __swift_project_value_buffer(v15, (uint64_t)qword_1ED6BB5D0);
      v16 = sub_1BC81756C();
      v17 = sub_1BC817E90();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_1BC6DD000, v16, v17, "No coordinator, unable to reset cache version", v18, 2u);
        MEMORY[0x1BCCF5BA4](v18, -1, -1);
      }

      return;
    }
LABEL_24:
    swift_once();
    goto LABEL_11;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_persistentStores);
  sub_1BC6ED7C0(0, &qword_1ED6B9C80);
  v7 = sub_1BC817C5C();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    if (v20)
      goto LABEL_4;
  }
  else if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_4:
    if ((v7 & 0xC000000000000001) != 0)
    {
      v8 = (id)MEMORY[0x1BCCF4FB0](0, v7);
LABEL_7:
      v9 = v8;
      swift_bridgeObjectRelease();
      v10 = objc_msgSend(v5, sel_metadataForPersistentStore_, v9);
      sub_1BC817A34();

      sub_1BC71DFC0(0xD000000000000023, 0x80000001BC826480, v26);
      sub_1BC6EF7BC((uint64_t)v26);
      swift_bridgeObjectRetain();
      v11 = (void *)sub_1BC817A28();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setMetadata_forPersistentStore_, v11, v9);

      *(_QWORD *)&v26[0] = 0;
      v12 = objc_msgSend(a1, sel_save_, v26);
      v13 = *(void **)&v26[0];
      if ((v12 & 1) != 0)
      {
        if ((a2 & 1) != 0)
        {
          *(_QWORD *)&v26[0] = 0;
          *((_QWORD *)&v26[0] + 1) = 0xE000000000000000;
          v25 = v13;
          sub_1BC8182C8();
          sub_1BC817B48();
          sub_1BC6FE9C0(0, &qword_1EF45B080, (void (*)(uint64_t))type metadata accessor for FeedSection);
          sub_1BC817AF4();
          sub_1BC817B48();
          swift_bridgeObjectRelease();
          sub_1BC817B48();
          sub_1BC8184B4();
          __break(1u);
        }
        else
        {
          v14 = *(id *)&v26[0];

          swift_bridgeObjectRelease();
        }
      }
      else
      {
        v19 = *(id *)&v26[0];
        swift_bridgeObjectRelease();
        sub_1BC816D5C();

        swift_willThrow();
      }
      return;
    }
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v8 = *(id *)(v7 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v21 = sub_1BC817590();
  __swift_project_value_buffer(v21, (uint64_t)qword_1ED6BB5D0);
  v22 = sub_1BC81756C();
  v23 = sub_1BC817E90();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v24 = 0;
    _os_log_impl(&dword_1BC6DD000, v22, v23, "No persistent stores, unable to reset cache version", v24, 2u);
    MEMORY[0x1BCCF5BA4](v24, -1, -1);
  }

}

unint64_t sub_1BC6FE97C()
{
  unint64_t result;

  result = qword_1EF45B078;
  if (!qword_1EF45B078)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC8201A4, &type metadata for NSManagedObjectUniqueError);
    atomic_store(result, (unint64_t *)&qword_1EF45B078);
  }
  return result;
}

uint64_t sub_1BC6FE9C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    a3(255);
    result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t Publisher<>.collectAndReduceOutput()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = a3;
  v5 = sub_1BC817668();
  v17 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - v6;
  swift_getAssociatedTypeWitness();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B60], v5);
  v8 = sub_1BC817614();
  v15 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  sub_1BC8178D8();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = v16;
  sub_1BC81786C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v5);
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v8);
  v12 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v8);
  return v12;
}

uint64_t sub_1BC6FEBB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = &v15[-v10];
  v12 = *a1;
  sub_1BC817E24();
  v20 = v12;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  v19 = AssociatedTypeWitness;
  v13 = sub_1BC817D04();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEAF38], v13);
  sub_1BC817BF0();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
}

uint64_t sub_1BC6FECCC()
{
  return swift_deallocObject();
}

uint64_t sub_1BC6FECDC(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1BC6FEBB0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1BC6FECE8()
{
  swift_getAssociatedTypeWitness();
  return sub_1BC817E18();
}

uint64_t Subscribers.SubscriptionStatus.upstream.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v4[2];
  char v5;

  sub_1BC6FC690(v1, (uint64_t)v4);
  if (v5 == 1 || !v5)
    return sub_1BC6FC848(v4, a1);
  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return sub_1BC6FC6CC((uint64_t)v4);
}

BOOL Subscribers.SubscriptionStatus.isActive.getter()
{
  uint64_t v0;
  _BOOL8 v1;
  _BYTE v3[48];

  sub_1BC6FC690(v0, (uint64_t)v3);
  v1 = v3[40] < 2u;
  sub_1BC6FC6CC((uint64_t)v3);
  return v1;
}

uint64_t _s18SubscriptionStatusOwxx(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 <= 1)
    return __swift_destroy_boxed_opaque_existential_0(a1);
  return a1;
}

uint64_t _s18SubscriptionStatusOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t))(v5 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t _s18SubscriptionStatusOwca(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 <= 1)
      __swift_destroy_boxed_opaque_existential_0(a1);
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v7 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v7 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      v8 = *a2;
      v9 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v8;
      *(_OWORD *)(a1 + 16) = v9;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t _s18SubscriptionStatusOwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 <= 1)
      __swift_destroy_boxed_opaque_existential_0(a1);
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      }
      else
      {
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = 0;
      }
    }
  }
  return a1;
}

uint64_t _s18SubscriptionStatusOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t _s18SubscriptionStatusOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC6FF0E4(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1BC6FF100(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Subscribers.SubscriptionStatus()
{
  return &type metadata for Subscribers.SubscriptionStatus;
}

id static OrchestrationAnchor.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1BC817AC4();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1BC6FF1A0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F852C(a1, (SEL *)&selRef_pluginPackage, a2);
}

void sub_1BC6FF1BC(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0CB1940], (SEL *)&selRef_setPluginPackage_);
}

char *keypath_get_selector_planner()
{
  return sel_planner;
}

void sub_1BC6FF1DC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F852C(a1, (SEL *)&selRef_planner, a2);
}

void sub_1BC6FF1F8(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0CB1940], (SEL *)&selRef_setPlanner_);
}

char *keypath_get_selector_criteria()
{
  return sel_criteria;
}

void sub_1BC6FF218(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F852C(a1, (SEL *)&selRef_criteria, a2);
}

void sub_1BC6FF234(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0CB1940], (SEL *)&selRef_setCriteria_);
}

char *keypath_get_selector_encodedAnchorSet()
{
  return sel_encodedAnchorSet;
}

void sub_1BC6FF254(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_encodedAnchorSet);
  v4 = sub_1BC816E64();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1BC6FF2AC(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0CB01F0], (SEL *)&selRef_setEncodedAnchorSet_);
}

char *keypath_get_selector_profileIdentifier()
{
  return sel_profileIdentifier;
}

void sub_1BC6FF2CC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F852C(a1, (SEL *)&selRef_profileIdentifier, a2);
}

void sub_1BC6FF2E8(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0CB1940], (SEL *)&selRef_setProfileIdentifier_);
}

void keypath_setTm(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD), SEL *a6)
{
  void *v7;
  id v8;

  v7 = *a2;
  v8 = (id)a5(*a1, a1[1]);
  objc_msgSend(v7, *a6, v8);

}

uint64_t sub_1BC6FF34C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v20 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (i = v9 | (v7 << 6); ; i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    v14 = 8 * i;
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + v14);
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + v14);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1BC7257C8(0, v8[2] + 1, 1, v8);
      v8 = (_QWORD *)result;
    }
    v18 = v8[2];
    v17 = v8[3];
    if (v18 >= v17 >> 1)
    {
      result = (uint64_t)sub_1BC7257C8((_QWORD *)(v17 > 1), v18 + 1, 1, v8);
      v8 = (_QWORD *)result;
    }
    v8[2] = v18 + 1;
    v19 = &v8[2 * v18];
    v19[4] = v15;
    v19[5] = v16;
    if (v4)
      goto LABEL_4;
LABEL_5:
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v5)
      goto LABEL_27;
    v12 = *(_QWORD *)(v20 + 8 * v11);
    ++v7;
    if (!v12)
    {
      v7 = v11 + 1;
      if (v11 + 1 >= v5)
        goto LABEL_27;
      v12 = *(_QWORD *)(v20 + 8 * v7);
      if (!v12)
      {
        v7 = v11 + 2;
        if (v11 + 2 >= v5)
          goto LABEL_27;
        v12 = *(_QWORD *)(v20 + 8 * v7);
        if (!v12)
        {
          v7 = v11 + 3;
          if (v11 + 3 >= v5)
            goto LABEL_27;
          v12 = *(_QWORD *)(v20 + 8 * v7);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v4 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v5)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v8;
  }
  v12 = *(_QWORD *)(v20 + 8 * v13);
  if (v12)
  {
    v7 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v5)
      goto LABEL_27;
    v12 = *(_QWORD *)(v20 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BC6FF540(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v26 = *(_QWORD *)(a1 + 16);
  v28 = MEMORY[0x1E0DEE9D8];
  sub_1BC6E8B44(0, v1, 0);
  v2 = v28;
  result = sub_1BC7F3644(a1);
  v5 = result;
  v7 = v26;
  v6 = a1;
  v8 = 0;
  v9 = a1 + 64;
  v10 = a1 + 80;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(v6 + 32))
  {
    v12 = (unint64_t)v5 >> 6;
    if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v6 + 36) != (_DWORD)v4)
      goto LABEL_24;
    v13 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v5);
    v14 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v5);
    v16 = *(_QWORD *)(v28 + 16);
    v15 = *(_QWORD *)(v28 + 24);
    if (v16 >= v15 >> 1)
    {
      v24 = v9;
      v25 = v4;
      v23 = v10;
      result = sub_1BC6E8B44(v15 > 1, v16 + 1, 1);
      v10 = v23;
      v9 = v24;
      v4 = v25;
      v7 = v26;
      v6 = a1;
    }
    *(_QWORD *)(v28 + 16) = v16 + 1;
    v17 = v28 + 16 * v16;
    *(_QWORD *)(v17 + 32) = v13;
    *(_QWORD *)(v17 + 40) = v14;
    v11 = 1 << *(_BYTE *)(v6 + 32);
    if (v5 >= v11)
      goto LABEL_25;
    v18 = *(_QWORD *)(v9 + 8 * v12);
    if ((v18 & (1 << v5)) == 0)
      goto LABEL_26;
    if (*(_DWORD *)(v6 + 36) != (_DWORD)v4)
      goto LABEL_27;
    v19 = v18 & (-2 << (v5 & 0x3F));
    if (v19)
    {
      v11 = __clz(__rbit64(v19)) | v5 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = v12 + 1;
      v21 = (unint64_t)(v11 + 63) >> 6;
      if (v12 + 1 < v21)
      {
        v22 = *(_QWORD *)(v9 + 8 * v20);
        if (v22)
        {
LABEL_20:
          v11 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v12)
          {
            v22 = *(_QWORD *)(v10 + 8 * v12++);
            if (v22)
            {
              v20 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v8;
    v5 = v11;
    if (v8 == v7)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t static InputSignalIdentifier.databaseChangesQuery.getter()
{
  return sub_1BC8173E0();
}

uint64_t static InputSignalSet.LookupKey.databaseChangesQuery.getter()
{
  uint64_t v0;

  v0 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v0);
  sub_1BC8173E0();
  type metadata accessor for DatabaseChangesQueryInputSignal();
  return sub_1BC817260();
}

uint64_t type metadata accessor for DatabaseChangesQueryInputSignal()
{
  return objc_opt_self();
}

_QWORD *DatabaseChangesQueryInputSignal.__allocating_init(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1BC70E698(a1, a3, a4, a5, v5, ObjectType, a2);
}

_QWORD *DatabaseChangesQueryInputSignal.__allocating_init(context:observer:healthStore:changesObserver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v13 = *(_QWORD *)(a6 + 24);
  v14 = *(_QWORD *)(a6 + 32);
  v15 = __swift_mutable_project_boxed_opaque_existential_1(a6, v13);
  v16 = sub_1BC70E854(a1, a2, a3, a4, a5, v15, v6, v13, v14);
  __swift_destroy_boxed_opaque_existential_0(a6);
  return v16;
}

_QWORD *DatabaseChangesQueryInputSignal.init(context:observer:healthStore:changesObserver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v13 = *(_QWORD *)(a6 + 24);
  v14 = *(_QWORD *)(a6 + 32);
  v15 = __swift_mutable_project_boxed_opaque_existential_1(a6, v13);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  v19 = sub_1BC70E354(a1, a2, a3, a4, a5, (uint64_t)v17, v6, v13, v14);
  __swift_destroy_boxed_opaque_existential_0(a6);
  return v19;
}

uint64_t DatabaseChangesQueryInputSignal.Anchor.init(anchor:lastUpdateAnchors:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t DatabaseChangesQueryInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1BC6FFA08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, void *, void (*)(void *, uint64_t, void *), uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  sub_1BC6FC700(v1 + 56, (uint64_t)v14);
  v3 = v15;
  v4 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  v5 = *(_QWORD *)(v1 + 96);
  v6 = (os_unfair_lock_s *)(v5 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 32));
  v7 = *(void **)(v5 + 16);
  v8 = v7;
  os_unfair_lock_unlock(v6);
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = a1;
  v11 = *(void (**)(uint64_t, void *, void (*)(void *, uint64_t, void *), uint64_t, uint64_t, uint64_t))(v4 + 8);
  swift_retain();
  v12 = swift_bridgeObjectRetain();
  v11(v12, v7, sub_1BC70FF14, v10, v3, v4);

  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
}

void sub_1BC6FFB20(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  void *v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  void *v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  void (*v77)(_QWORD **, _QWORD);
  uint64_t v78;
  char *v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  os_unfair_lock_s *v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  void *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;

  v100 = a1;
  v8 = sub_1BC8173EC();
  v103 = *(_QWORD *)(v8 - 8);
  v104 = v8;
  MEMORY[0x1E0C80A78](v8);
  v102 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC817590();
  v105 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v99 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v97 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v97 - v16;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return;
  v19 = Strong;
  v101 = v10;
  if (a3)
  {
    swift_getObjectType();
    v20 = a3;
    sub_1BC8171E8();
    v21 = a3;
    swift_retain();
    v22 = a3;
    swift_retain();
    v23 = sub_1BC81756C();
    v24 = sub_1BC817E84();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v98 = v19;
      v26 = v25;
      v106 = (_QWORD *)swift_slowAlloc();
      v107 = (_QWORD *)swift_slowAlloc();
      v108 = v107;
      *(_DWORD *)v26 = 136315394;
      v100 = (void *)(v26 + 4);
      v27 = v102;
      sub_1BC8173E0();
      sub_1BC6F0A44(&qword_1ED6B95D8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D108], MEMORY[0x1E0D2D120]);
      v28 = v104;
      v29 = a5;
      v30 = sub_1BC818670();
      v32 = v31;
      (*(void (**)(char *, uint64_t))(v103 + 8))(v27, v28);
      v33 = v30;
      a5 = v29;
      v110 = sub_1BC6E14D8(v33, v32, (uint64_t *)&v108);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2112;
      v34 = a3;
      v35 = _swift_stdlib_bridgeErrorToNSError();
      v110 = v35;
      sub_1BC818148();
      v36 = v106;
      *v106 = v35;

      _os_log_impl(&dword_1BC6DD000, v23, v24, "[%s] Query failed: %@; attempting to restart query.",
        (uint8_t *)v26,
        0x16u);
      sub_1BC6EFA40();
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v36, -1, -1);
      v37 = (uint64_t)v107;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v37, -1, -1);
      v38 = v26;
      v19 = v98;
      MEMORY[0x1BCCF5BA4](v38, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    (*(void (**)(char *, uint64_t))(v105 + 8))(v17, v101);
    if (qword_1EF45ABF8 != -1)
      swift_once();
    v44 = swift_allocObject();
    *(_QWORD *)(v44 + 16) = v19;
    *(_QWORD *)(v44 + 24) = a5;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BC7C3EDC((uint64_t)sub_1BC710004, v44);
    swift_release();

    swift_release();
    return;
  }
  v107 = (_QWORD *)a2;
  if (!a2)
  {
    swift_getObjectType();
    sub_1BC8171E8();
    swift_retain_n();
    v45 = sub_1BC81756C();
    v46 = sub_1BC817E9C();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v106 = (_QWORD *)swift_slowAlloc();
      v108 = v106;
      *(_DWORD *)v47 = 136315138;
      v99 = (char *)(v47 + 4);
      v48 = v102;
      sub_1BC8173E0();
      sub_1BC6F0A44(&qword_1ED6B95D8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D108], MEMORY[0x1E0D2D120]);
      v49 = v104;
      v50 = sub_1BC818670();
      v52 = v51;
      (*(void (**)(char *, uint64_t))(v103 + 8))(v48, v49);
      v110 = sub_1BC6E14D8(v50, v52, (uint64_t *)&v108);
      sub_1BC818148();
      swift_release_n();
      a2 = (uint64_t)v107;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v45, v46, "[%s] Initial update; no changed types (empty database?)", v47, 0xCu);
      v53 = v106;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v53, -1, -1);
      MEMORY[0x1BCCF5BA4](v47, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v105 + 8))(v15, v101);
    v54 = v19;
    v55 = v100;
    goto LABEL_40;
  }
  v98 = Strong;
  v39 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v40 = sub_1BC8181FC();
    if (v40)
      goto LABEL_8;
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_36:
    v78 = v98;
    swift_getObjectType();
    v79 = v99;
    sub_1BC8171E8();
    swift_retain_n();
    swift_bridgeObjectRetain();
    v80 = sub_1BC81756C();
    v81 = sub_1BC817E9C();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = swift_slowAlloc();
      v106 = (_QWORD *)swift_slowAlloc();
      v108 = v106;
      *(_DWORD *)v82 = 136315394;
      v83 = v102;
      sub_1BC8173E0();
      sub_1BC6F0A44(&qword_1ED6B95D8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D108], MEMORY[0x1E0D2D120]);
      v84 = v104;
      v85 = sub_1BC818670();
      v87 = v86;
      (*(void (**)(char *, uint64_t))(v103 + 8))(v83, v84);
      v110 = sub_1BC6E14D8(v85, v87, (uint64_t *)&v108);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v82 + 12) = 2080;
      v88 = swift_bridgeObjectRetain();
      v89 = MEMORY[0x1BCCF4914](v88, MEMORY[0x1E0DEA968]);
      v91 = v90;
      swift_bridgeObjectRelease();
      v110 = sub_1BC6E14D8(v89, v91, (uint64_t *)&v108);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v80, v81, "[%s] Types changed: %s", (uint8_t *)v82, 0x16u);
      v92 = v106;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v92, -1, -1);
      MEMORY[0x1BCCF5BA4](v82, -1, -1);

      (*(void (**)(char *, uint64_t))(v105 + 8))(v99, v101);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v79, v101);
    }
    v54 = v78;
    v55 = v100;
    a2 = (uint64_t)v107;
LABEL_40:
    v93 = *(os_unfair_lock_s **)(v54 + 96);
    swift_retain();
    os_unfair_lock_lock(v93 + 8);
    sub_1BC700980((uint64_t)&v93[4], a2, v55, &v108);
    os_unfair_lock_unlock(v93 + 8);
    swift_release();
    v95 = v108;
    v94 = v109;
    swift_getObjectType();
    v108 = v95;
    v109 = v94;
    v110 = v54;
    type metadata accessor for DatabaseChangesQueryInputSignal();
    sub_1BC6F0A44(&qword_1ED6B7F58, v96, (uint64_t (*)(uint64_t))type metadata accessor for DatabaseChangesQueryInputSignal, (uint64_t)&protocol conformance descriptor for DatabaseChangesQueryInputSignal);
    sub_1BC817374();
    swift_bridgeObjectRelease();
    swift_release();

    return;
  }
  v40 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (!v40)
    goto LABEL_17;
LABEL_8:
  v113 = MEMORY[0x1E0DEE9D8];
  sub_1BC6E8A7C(0, v40 & ~(v40 >> 63), 0);
  if (v39)
  {
    v41 = sub_1BC8183F4();
    v43 = 1;
  }
  else
  {
    v41 = sub_1BC70E5E8(a2);
    v43 = v56 & 1;
  }
  v110 = v41;
  v111 = v42;
  v112 = v43;
  if ((v40 & 0x8000000000000000) == 0)
  {
    v57 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v57 = a2;
    v106 = (_QWORD *)v57;
    do
    {
      while (1)
      {
        v65 = v110;
        v64 = v111;
        v66 = v112;
        sub_1BC70E42C(v110, v111, v112, a2);
        v68 = v67;
        v69 = objc_msgSend(v67, sel_sensitiveLoggingIdentifier);
        v70 = sub_1BC817AE8();
        v72 = v71;

        v73 = v113;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC6E8A7C(0, *(_QWORD *)(v73 + 16) + 1, 1);
          v73 = v113;
        }
        v75 = *(_QWORD *)(v73 + 16);
        v74 = *(_QWORD *)(v73 + 24);
        if (v75 >= v74 >> 1)
        {
          sub_1BC6E8A7C(v74 > 1, v75 + 1, 1);
          v73 = v113;
        }
        *(_QWORD *)(v73 + 16) = v75 + 1;
        v76 = v73 + 16 * v75;
        *(_QWORD *)(v76 + 32) = v70;
        *(_QWORD *)(v76 + 40) = v72;
        if (v39)
          break;
        a2 = (uint64_t)v107;
        sub_1BC7F3480(v65, v64, v66, (uint64_t)v107);
        v59 = v58;
        v61 = v60;
        v63 = v62;
        sub_1BC6EAF90(v65, v64, v66);
        v110 = v59;
        v111 = v61;
        v112 = v63 & 1;
        if (!--v40)
          goto LABEL_35;
      }
      a2 = (uint64_t)v107;
      if ((v66 & 1) == 0)
        goto LABEL_43;
      if (sub_1BC818424())
        swift_isUniquelyReferenced_nonNull_native();
      sub_1BC70FF1C();
      v77 = (void (*)(_QWORD **, _QWORD))sub_1BC817A4C();
      sub_1BC81849C();
      v77(&v108, 0);
      --v40;
    }
    while (v40);
LABEL_35:
    sub_1BC6EAF90(v110, v111, v112);
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  __break(1u);
LABEL_43:
  __break(1u);
}

uint64_t DatabaseChangesQueryInputSignal.identifier.getter()
{
  return sub_1BC8173E0();
}

uint64_t sub_1BC7006D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = sub_1BC8173EC();
  v23 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC817590();
  v24 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1BC8171E8();
  swift_retain_n();
  v9 = sub_1BC81756C();
  v10 = sub_1BC817E9C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v22 = a2;
    v12 = (uint8_t *)v11;
    v20 = swift_slowAlloc();
    v26 = v20;
    v21 = v6;
    *(_DWORD *)v12 = 136315138;
    v19 = v12 + 4;
    sub_1BC8173E0();
    sub_1BC6F0A44(&qword_1ED6B95D8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D108], MEMORY[0x1E0D2D120]);
    v13 = sub_1BC818670();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
    v25 = sub_1BC6E14D8(v13, v15, &v26);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v9, v10, "[%s] Device unlocked; retrying.", v12, 0xCu);
    v16 = v20;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v16, -1, -1);
    v17 = v12;
    a2 = v22;
    MEMORY[0x1BCCF5BA4](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v21);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  }
  return sub_1BC6FFA08(a2);
}

uint64_t sub_1BC700980@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  id v40;
  id v41;
  uint64_t result;
  void *v45;
  int64_t v46;
  unint64_t v47;
  unint64_t i;
  id v49;
  _QWORD *v50;

  v4 = a3;
  v5 = a1;
  v6 = a4;
  v7 = *(_QWORD **)(a1 + 8);
  if (!a2 || !a3)
  {
    swift_bridgeObjectRetain();
LABEL_50:
    v38 = v7;
    v39 = *(void **)v5;
    v40 = v4;
    swift_bridgeObjectRelease();

    *(_QWORD *)v5 = v4;
    *(_QWORD *)(v5 + 8) = v38;
    *v6 = v4;
    v6[1] = v38;
    v41 = v40;
    return swift_bridgeObjectRetain();
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
    v47 = 0;
    v8 = 0;
    v9 = 0;
    v10 = sub_1BC818400() | 0x8000000000000000;
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a2 + 32);
    v8 = ~v11;
    v47 = a2 + 64;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a2 + 64);
    v10 = a2;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v45 = v4;
  v49 = v4;
  v14 = 0;
  v46 = (unint64_t)(v8 + 64) >> 6;
  for (i = v10; ; v10 = i)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      if (!sub_1BC818490())
        goto LABEL_49;
      sub_1BC6ED7C0(0, &qword_1ED6B6360);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      v17 = v14;
      v15 = v9;
      v18 = v50;
      if (!v50)
        goto LABEL_49;
    }
    else
    {
      if (v9)
      {
        v15 = (v9 - 1) & v9;
        v16 = __clz(__rbit64(v9)) | (v14 << 6);
        v17 = v14;
      }
      else
      {
        v19 = v14 + 1;
        if (__OFADD__(v14, 1))
          goto LABEL_53;
        if (v19 >= v46)
          goto LABEL_49;
        v20 = *(_QWORD *)(v47 + 8 * v19);
        v17 = v14 + 1;
        if (!v20)
        {
          v17 = v14 + 2;
          if (v14 + 2 >= v46)
            goto LABEL_49;
          v20 = *(_QWORD *)(v47 + 8 * v17);
          if (!v20)
          {
            v17 = v14 + 3;
            if (v14 + 3 >= v46)
              goto LABEL_49;
            v20 = *(_QWORD *)(v47 + 8 * v17);
            if (!v20)
            {
              v17 = v14 + 4;
              if (v14 + 4 >= v46)
                goto LABEL_49;
              v20 = *(_QWORD *)(v47 + 8 * v17);
              if (!v20)
              {
                v17 = v14 + 5;
                if (v14 + 5 >= v46)
                  goto LABEL_49;
                v20 = *(_QWORD *)(v47 + 8 * v17);
                if (!v20)
                {
                  v17 = v14 + 6;
                  if (v14 + 6 >= v46)
                    goto LABEL_49;
                  v20 = *(_QWORD *)(v47 + 8 * v17);
                  if (!v20)
                  {
                    v21 = v14 + 7;
                    while (v46 != v21)
                    {
                      v20 = *(_QWORD *)(v47 + 8 * v21++);
                      if (v20)
                      {
                        v17 = v21 - 1;
                        goto LABEL_36;
                      }
                    }
LABEL_49:
                    sub_1BC6ECC4C();

                    swift_bridgeObjectRelease();
                    v5 = a1;
                    v6 = a4;
                    v4 = v45;
                    goto LABEL_50;
                  }
                }
              }
            }
          }
        }
LABEL_36:
        v15 = (v20 - 1) & v20;
        v16 = __clz(__rbit64(v20)) + (v17 << 6);
      }
      v18 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v16);
      if (!v18)
        goto LABEL_49;
    }
    v22 = v18;
    v23 = objc_msgSend(v18, sel_code);
    v24 = objc_msgSend(v49, sel__rowid);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v50 = v7;
    v27 = sub_1BC706774((uint64_t)v23);
    v28 = v7[2];
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      break;
    v31 = v26;
    if (v7[3] >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v26 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        sub_1BC70AD40();
        if ((v31 & 1) != 0)
          goto LABEL_11;
      }
    }
    else
    {
      sub_1BC707784(v30, isUniquelyReferenced_nonNull_native);
      v32 = sub_1BC706774((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_54;
      v27 = v32;
      if ((v31 & 1) != 0)
      {
LABEL_11:
        *(_QWORD *)(v7[7] + 8 * v27) = v24;
        goto LABEL_12;
      }
    }
    v7[(v27 >> 6) + 8] |= 1 << v27;
    v34 = 8 * v27;
    *(_QWORD *)(v7[6] + v34) = v23;
    *(_QWORD *)(v7[7] + v34) = v24;
    v35 = v7[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_52;
    v7[2] = v37;
LABEL_12:

    swift_bridgeObjectRelease();
    v14 = v17;
    v9 = v15;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  type metadata accessor for _HKDataTypeCode(0);
  result = sub_1BC8186E8();
  __break(1u);
  return result;
}

void sub_1BC700DF8(void **a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  _QWORD v19[6];

  if (*a1)
    objc_msgSend(*(id *)(a2 + 24), sel_stopQuery_);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a5;
  *(_QWORD *)(v11 + 24) = a6;
  v12 = objc_allocWithZone(MEMORY[0x1E0CB6F58]);
  sub_1BC6ED7C0(0, &qword_1ED6B6360);
  swift_bridgeObjectRetain();
  v13 = a4;
  swift_retain();
  v14 = (void *)sub_1BC817C50();
  swift_bridgeObjectRelease();
  v19[4] = sub_1BC70F434;
  v19[5] = v11;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = sub_1BC705B40;
  v19[3] = &block_descriptor_3;
  v15 = _Block_copy(v19);
  v16 = objc_msgSend(v12, sel_initWithTypes_anchor_resultsHandler_, v14, v13, v15);

  _Block_release(v15);
  swift_release();
  v17 = *a1;
  v18 = v16;

  *a1 = v16;
  objc_msgSend(*(id *)(a2 + 24), sel_executeQuery_, v18);

}

uint64_t sub_1BC700F90()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

void sub_1BC700FBC()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  void **v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 16);
  v2 = (void **)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1BC70F3F0(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1BC70101C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  void **v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 16);
  v2 = (void **)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1BC70F3A8(v2);
  os_unfair_lock_unlock(v3);
}

id DatabaseChangesQueryInputSignal.Anchor.anchor.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void DatabaseChangesQueryInputSignal.Anchor.anchor.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*DatabaseChangesQueryInputSignal.Anchor.anchor.modify())()
{
  return nullsub_1;
}

unint64_t static DatabaseChangesQueryInputSignal.Anchor.== infix(_:_:)(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t result;
  BOOL v5;

  v2 = *a1;
  v3 = *a2;
  if ((sub_1BC701118(a1[1], a2[1]) & 1) == 0)
    return 0;
  result = (v2 | v3) == 0;
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
    return (unint64_t)objc_msgSend((id)v2, sel_isEqual_, v3);
  return result;
}

unint64_t sub_1BC701118(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    v15 = 8 * v11;
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v15);
    result = sub_1BC706774(*(_QWORD *)(*(_QWORD *)(v3 + 48) + v15));
    if ((v17 & 1) == 0 || *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * result) != v16)
      return 0;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BC701284(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  int v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  void **v40;
  void *v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  char v45;
  char v46;
  char *v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int64_t v57;
  _BOOL4 v58;
  uint64_t v59;

  v4 = sub_1BC817050();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v56 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v50 - v8;
  sub_1BC6ECA64(0, &qword_1ED6B9688, (uint64_t (*)(uint64_t))sub_1BC70FE24, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v11);
  v16 = (void **)((char *)&v50 - v15);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v59 = v5;
  v54 = a1;
  v55 = v9;
  v57 = 0;
  v19 = *(_QWORD *)(a1 + 64);
  v18 = a1 + 64;
  v17 = v19;
  v20 = 1 << *(_BYTE *)(v18 - 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v17;
  v52 = v18;
  v53 = (unint64_t)(v20 + 63) >> 6;
  v51 = v53 - 1;
  while (1)
  {
    if (v22)
    {
      v23 = __clz(__rbit64(v22));
      v24 = (v22 - 1) & v22;
      v25 = v23 | (v57 << 6);
LABEL_8:
      v26 = *(void **)(*(_QWORD *)(v54 + 48) + 8 * v25);
      v27 = v59;
      v28 = *(_QWORD *)(v54 + 56) + *(_QWORD *)(v59 + 72) * v25;
      sub_1BC70FE24();
      v30 = v29;
      (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(&v13[*(int *)(v29 + 48)], v28, v4);
      *(_QWORD *)v13 = v26;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v13, 0, 1, v30);
      v31 = v26;
      goto LABEL_27;
    }
    v32 = v57 + 1;
    if (__OFADD__(v57, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v32 < v53)
    {
      v33 = *(_QWORD *)(v52 + 8 * v32);
      if (v33)
        goto LABEL_12;
      v34 = v57 + 2;
      ++v57;
      if (v32 + 1 < v53)
      {
        v33 = *(_QWORD *)(v52 + 8 * v34);
        if (v33)
          goto LABEL_15;
        v57 = v32 + 1;
        if (v32 + 2 < v53)
        {
          v33 = *(_QWORD *)(v52 + 8 * (v32 + 2));
          if (v33)
          {
            v32 += 2;
            goto LABEL_12;
          }
          v34 = v32 + 3;
          v57 = v32 + 2;
          if (v32 + 3 < v53)
            break;
        }
      }
    }
LABEL_26:
    sub_1BC70FE24();
    v30 = v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v13, 1, 1, v35);
    v24 = 0;
LABEL_27:
    sub_1BC70FE94((uint64_t)v13, (uint64_t)v16, &qword_1ED6B9688, (uint64_t (*)(uint64_t))sub_1BC70FE24);
    sub_1BC70FE24();
    v36 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v16, 1, v30);
    v58 = v36 == 1;
    if (v36 == 1)
      return v58;
    v37 = v24;
    v38 = (char *)v16 + *(int *)(v30 + 48);
    v39 = a2;
    v40 = v16;
    v41 = *v16;
    v42 = v59;
    v43 = v55;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v55, v38, v4);
    v44 = sub_1BC706808((uint64_t)v41);
    v46 = v45;

    if ((v46 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v4);
      return 0;
    }
    v47 = v56;
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v56, *(_QWORD *)(v39 + 56) + *(_QWORD *)(v42 + 72) * v44, v4);
    sub_1BC6F0A44(&qword_1ED6B8E80, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], MEMORY[0x1E0D2BD40]);
    v48 = sub_1BC817AB8();
    v49 = *(void (**)(char *, uint64_t))(v42 + 8);
    v49(v47, v4);
    result = ((uint64_t (*)(char *, uint64_t))v49)(v43, v4);
    a2 = v39;
    v16 = v40;
    v22 = v37;
    if ((v48 & 1) == 0)
      return v58;
  }
  v33 = *(_QWORD *)(v52 + 8 * v34);
  if (v33)
  {
LABEL_15:
    v32 = v34;
LABEL_12:
    v24 = (v33 - 1) & v33;
    v25 = __clz(__rbit64(v33)) + (v32 << 6);
    v57 = v32;
    goto LABEL_8;
  }
  while (1)
  {
    v32 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v32 >= v53)
    {
      v57 = v51;
      goto LABEL_26;
    }
    v33 = *(_QWORD *)(v52 + 8 * v32);
    ++v34;
    if (v33)
      goto LABEL_12;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1BC7016C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  int v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  void **v40;
  void *v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  char v45;
  char v46;
  char *v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int64_t v57;
  _BOOL4 v58;
  uint64_t v59;

  v4 = sub_1BC816C9C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v56 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v50 - v8;
  sub_1BC6ECA64(0, &qword_1EF45B0D8, (uint64_t (*)(uint64_t))sub_1BC70F87C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v11);
  v16 = (void **)((char *)&v50 - v15);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v59 = v5;
  v54 = a1;
  v55 = v9;
  v57 = 0;
  v19 = *(_QWORD *)(a1 + 64);
  v18 = a1 + 64;
  v17 = v19;
  v20 = 1 << *(_BYTE *)(v18 - 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v17;
  v52 = v18;
  v53 = (unint64_t)(v20 + 63) >> 6;
  v51 = v53 - 1;
  while (1)
  {
    if (v22)
    {
      v23 = __clz(__rbit64(v22));
      v24 = (v22 - 1) & v22;
      v25 = v23 | (v57 << 6);
LABEL_8:
      v26 = *(void **)(*(_QWORD *)(v54 + 48) + 8 * v25);
      v27 = v59;
      v28 = *(_QWORD *)(v54 + 56) + *(_QWORD *)(v59 + 72) * v25;
      sub_1BC70F87C();
      v30 = v29;
      (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(&v13[*(int *)(v29 + 48)], v28, v4);
      *(_QWORD *)v13 = v26;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v13, 0, 1, v30);
      v31 = v26;
      goto LABEL_27;
    }
    v32 = v57 + 1;
    if (__OFADD__(v57, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v32 < v53)
    {
      v33 = *(_QWORD *)(v52 + 8 * v32);
      if (v33)
        goto LABEL_12;
      v34 = v57 + 2;
      ++v57;
      if (v32 + 1 < v53)
      {
        v33 = *(_QWORD *)(v52 + 8 * v34);
        if (v33)
          goto LABEL_15;
        v57 = v32 + 1;
        if (v32 + 2 < v53)
        {
          v33 = *(_QWORD *)(v52 + 8 * (v32 + 2));
          if (v33)
          {
            v32 += 2;
            goto LABEL_12;
          }
          v34 = v32 + 3;
          v57 = v32 + 2;
          if (v32 + 3 < v53)
            break;
        }
      }
    }
LABEL_26:
    sub_1BC70F87C();
    v30 = v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v13, 1, 1, v35);
    v24 = 0;
LABEL_27:
    sub_1BC70FE94((uint64_t)v13, (uint64_t)v16, &qword_1EF45B0D8, (uint64_t (*)(uint64_t))sub_1BC70F87C);
    sub_1BC70F87C();
    v36 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v16, 1, v30);
    v58 = v36 == 1;
    if (v36 == 1)
      return v58;
    v37 = v24;
    v38 = (char *)v16 + *(int *)(v30 + 48);
    v39 = a2;
    v40 = v16;
    v41 = *v16;
    v42 = v59;
    v43 = v55;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v55, v38, v4);
    v44 = sub_1BC7065BC((uint64_t)v41);
    v46 = v45;

    if ((v46 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v4);
      return 0;
    }
    v47 = v56;
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v56, *(_QWORD *)(v39 + 56) + *(_QWORD *)(v42 + 72) * v44, v4);
    sub_1BC6F0A44((unint64_t *)&qword_1EF45B0E8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], MEMORY[0x1E0CAE5F8]);
    v48 = sub_1BC817AB8();
    v49 = *(void (**)(char *, uint64_t))(v42 + 8);
    v49(v47, v4);
    result = ((uint64_t (*)(char *, uint64_t))v49)(v43, v4);
    a2 = v39;
    v16 = v40;
    v22 = v37;
    if ((v48 & 1) == 0)
      return v58;
  }
  v33 = *(_QWORD *)(v52 + 8 * v34);
  if (v33)
  {
LABEL_15:
    v32 = v34;
LABEL_12:
    v24 = (v33 - 1) & v33;
    v25 = __clz(__rbit64(v33)) + (v32 << 6);
    v57 = v32;
    goto LABEL_8;
  }
  while (1)
  {
    v32 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v32 >= v53)
    {
      v57 = v51;
      goto LABEL_26;
    }
    v33 = *(_QWORD *)(v52 + 8 * v32);
    ++v34;
    if (v33)
      goto LABEL_12;
  }
LABEL_36:
  __break(1u);
  return result;
}

void sub_1BC701B04(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  unint64_t v23;
  char v24;
  char v25;
  id v26;
  char v27;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
    {
      sub_1BC818220();
      return;
    }
    v6 = v5;
    v7 = a2;
    goto LABEL_13;
  }
  if (v4)
  {
    if (a2 < 0)
      v6 = a2;
    else
      v6 = a2 & 0xFFFFFFFFFFFFFF8;
    v7 = a1;
LABEL_13:
    sub_1BC70CA90(v6, v7);
    return;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v8 = 0;
  v9 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v8 << 6);
      goto LABEL_35;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v16 >= v13)
      return;
    v17 = *(_QWORD *)(v9 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v13)
        return;
      v17 = *(_QWORD *)(v9 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v13)
          return;
        v17 = *(_QWORD *)(v9 + 8 * v8);
        if (!v17)
          break;
      }
    }
LABEL_34:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_35:
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(a1 + 56) + v19);
    v21 = *(id *)(*(_QWORD *)(a1 + 48) + v19);
    v22 = v20;
    v23 = sub_1BC7065BC((uint64_t)v21);
    v25 = v24;

    if ((v25 & 1) == 0)
    {

      return;
    }
    sub_1BC6ED7C0(0, &qword_1ED6B8518);
    v26 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v23);
    v27 = sub_1BC8180D0();

    if ((v27 & 1) == 0)
      return;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    return;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_34;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v13)
      return;
    v17 = *(_QWORD *)(v9 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_34;
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_1BC701D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int64_t v20;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v2 = *(_QWORD *)(a1 + 64);
    v3 = 1 << *(_BYTE *)(a1 + 32);
    v4 = -1;
    if (v3 < 64)
      v4 = ~(-1 << v3);
    v20 = (unint64_t)(v3 + 63) >> 6;
    if ((v4 & v2) != 0)
    {
      v5 = __clz(__rbit64(v4 & v2));
      v6 = a2;
LABEL_20:
      v10 = 16 * v5;
      v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v10);
      v13 = *v11;
      v12 = v11[1];
      v14 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v10);
      v16 = *v14;
      v15 = v14[1];
      swift_bridgeObjectRetain();
      sub_1BC6ECBE8(v16, v15);
      v17 = sub_1BC706608(v13, v12);
      LOBYTE(v13) = v18;
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        __asm { BR              X8 }
      sub_1BC6ECB60(v16, v15);
      return 0;
    }
    v6 = a2;
    if ((unint64_t)(v3 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 72);
      v8 = 1;
      if (v7)
        goto LABEL_19;
      v8 = 2;
      if ((unint64_t)(v3 + 63) >> 6 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_19;
      v8 = 3;
      if ((unint64_t)(v3 + 63) >> 6 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
      {
LABEL_19:
        v5 = __clz(__rbit64(v7)) + (v8 << 6);
        goto LABEL_20;
      }
      v9 = 4;
      if (v20 > 4)
      {
        v7 = *(_QWORD *)(a1 + 96);
        if (v7)
        {
          v8 = 4;
          goto LABEL_19;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x1BC70272CLL);
          }
          if (v8 >= v20)
            break;
          v7 = *(_QWORD *)(a1 + 64 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_19;
        }
      }
    }
    return 1;
  }
  return 0;
}

void sub_1BC7027E8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  unint64_t v23;
  char v24;
  char v25;
  id v26;
  char v27;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
    {
      sub_1BC818220();
      return;
    }
    v6 = v5;
    v7 = a2;
    goto LABEL_13;
  }
  if (v4)
  {
    if (a2 < 0)
      v6 = a2;
    else
      v6 = a2 & 0xFFFFFFFFFFFFFF8;
    v7 = a1;
LABEL_13:
    sub_1BC70CC58(v6, v7);
    return;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v8 = 0;
  v9 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v8 << 6);
      goto LABEL_37;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v16 >= v13)
      return;
    v17 = *(_QWORD *)(v9 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v13)
        return;
      v17 = *(_QWORD *)(v9 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v13)
          return;
        v17 = *(_QWORD *)(v9 + 8 * v8);
        if (!v17)
        {
          v8 = v16 + 3;
          if (v16 + 3 >= v13)
            return;
          v17 = *(_QWORD *)(v9 + 8 * v8);
          if (!v17)
            break;
        }
      }
    }
LABEL_36:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_37:
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(a1 + 56) + v19);
    v21 = *(id *)(*(_QWORD *)(a1 + 48) + v19);
    v22 = v20;
    v23 = sub_1BC70666C((uint64_t)v21);
    v25 = v24;

    if ((v25 & 1) == 0)
    {

      return;
    }
    sub_1BC6ED7C0(0, &qword_1ED6B96D0);
    v26 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v23);
    v27 = sub_1BC8180D0();

    if ((v27 & 1) == 0)
      return;
  }
  v18 = v16 + 4;
  if (v18 >= v13)
    return;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_36;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v13)
      return;
    v17 = *(_QWORD *)(v9 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_36;
  }
LABEL_44:
  __break(1u);
}

void DatabaseChangesQueryInputSignal.Anchor.hasDifference(from:for:)(uint64_t a1, unint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  char v27;
  int v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  int v34;
  int64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *a2;
  v6 = *(void **)v2;
  v5 = *(_QWORD *)(v2 + 8);
  v37 = v5;
  if (!*(_QWORD *)v2)
    goto LABEL_9;
  v7 = *(void **)a1;
  if (!v3 || v7 == 0)
  {
    v10 = 0;
  }
  else
  {
    v39 = *(void **)a1;
    sub_1BC6ED7C0(0, &qword_1ED6B84B8);
    v9 = v7;
    v10 = sub_1BC818688();

  }
  v11 = objc_msgSend(v6, sel_isEqual_, v10);
  swift_unknownObjectRelease();
  v5 = v37;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1BC8181C0();
      sub_1BC6ED7C0(0, &qword_1ED6B6360);
      sub_1BC6EFB34(&qword_1ED6B6368, &qword_1ED6B6360);
      sub_1BC817DB8();
      v4 = (unint64_t)v39;
      v36 = v40;
      v12 = v41;
      v13 = v42;
      v14 = v43;
    }
    else
    {
      v15 = -1 << *(_BYTE *)(v4 + 32);
      v36 = (char *)(v4 + 56);
      v12 = ~v15;
      v16 = -v15;
      if (v16 < 64)
        v17 = ~(-1 << v16);
      else
        v17 = -1;
      v14 = v17 & *(_QWORD *)(v4 + 56);
      swift_bridgeObjectRetain();
      v13 = 0;
    }
    v35 = (unint64_t)(v12 + 64) >> 6;
    while (1)
    {
      v18 = v13;
      if ((v4 & 0x8000000000000000) != 0)
      {
        if (!sub_1BC81822C())
          goto LABEL_49;
        sub_1BC6ED7C0(0, &qword_1ED6B6360);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v21 = v38;
        swift_unknownObjectRelease();
        if (!v38)
          goto LABEL_49;
      }
      else
      {
        if (v14)
        {
          v19 = __clz(__rbit64(v14));
          v14 &= v14 - 1;
          v20 = v19 | (v13 << 6);
        }
        else
        {
          v22 = v13 + 1;
          if (__OFADD__(v13, 1))
          {
            __break(1u);
            return;
          }
          if (v22 >= v35)
            goto LABEL_49;
          v23 = *(_QWORD *)&v36[8 * v22];
          ++v13;
          if (!v23)
          {
            v13 = v18 + 2;
            if (v18 + 2 >= v35)
              goto LABEL_49;
            v23 = *(_QWORD *)&v36[8 * v13];
            if (!v23)
            {
              v13 = v18 + 3;
              if (v18 + 3 >= v35)
                goto LABEL_49;
              v23 = *(_QWORD *)&v36[8 * v13];
              if (!v23)
              {
                v13 = v18 + 4;
                if (v18 + 4 >= v35)
                  goto LABEL_49;
                v23 = *(_QWORD *)&v36[8 * v13];
                if (!v23)
                {
                  v24 = v18 + 5;
                  while (v35 != v24)
                  {
                    v23 = *(_QWORD *)&v36[8 * v24++];
                    if (v23)
                    {
                      v13 = v24 - 1;
                      goto LABEL_36;
                    }
                  }
LABEL_49:
                  sub_1BC6ECC4C();
                  return;
                }
              }
            }
          }
LABEL_36:
          v14 = (v23 - 1) & v23;
          v20 = __clz(__rbit64(v23)) + (v13 << 6);
        }
        v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v20);
        if (!v21)
          goto LABEL_49;
      }
      v25 = objc_msgSend(v21, sel_code);
      if (*(_QWORD *)(v5 + 16) && (v26 = sub_1BC706774((uint64_t)v25), (v27 & 1) != 0))
      {
        v28 = 0;
        v29 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v26);
        if (!v3)
          goto LABEL_16;
LABEL_43:
        v30 = objc_msgSend(v21, sel_code);
        if (!*(_QWORD *)(v3 + 16))
          goto LABEL_16;
        v31 = sub_1BC706774((uint64_t)v30);
        if ((v32 & 1) == 0)
          goto LABEL_16;
        v33 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v31);

        if (v29 == v33)
          v34 = v28;
        else
          v34 = 1;
        v5 = v37;
        if (v34 == 1)
          goto LABEL_49;
      }
      else
      {
        v29 = 0;
        v28 = 1;
        if (v3)
          goto LABEL_43;
LABEL_16:

        v5 = v37;
        if ((v28 & 1) == 0)
          goto LABEL_49;
      }
    }
  }
}

uint64_t DatabaseChangesQueryInputSignal.Anchor.merged(with:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t result;
  id v16;
  id v17;

  v4 = *(void **)a1;
  v6 = *(void **)v2;
  v5 = *(_QWORD *)(v2 + 8);
  if (!*(_QWORD *)a1)
  {
    *a2 = v6;
    a2[1] = v5;
    v16 = v6;
    return swift_bridgeObjectRetain();
  }
  v7 = *(_QWORD *)(a1 + 8);
  if (!v6)
  {
    *a2 = v4;
    a2[1] = v7;
    v17 = v4;
    return swift_bridgeObjectRetain();
  }
  v8 = v4;
  v9 = v6;
  v10 = objc_msgSend(v9, sel__rowid);
  v11 = objc_msgSend(v8, sel__rowid);

  if ((uint64_t)v10 >= (uint64_t)v11)
    v12 = v8;
  else
    v12 = v9;
  if ((uint64_t)v10 < (uint64_t)v11)
  {
    v13 = v6;
  }
  else
  {
    v5 = v7;
    v13 = v4;
  }
  v14 = v12;
  result = swift_bridgeObjectRetain();
  *a2 = v13;
  a2[1] = v5;
  return result;
}

BOOL sub_1BC702F18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1BC702F30()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x726F68636E61;
}

uint64_t sub_1BC702F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC70F22C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC702F90(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1BC702F9C()
{
  sub_1BC70E934();
  return sub_1BC8187FC();
}

uint64_t sub_1BC702FC4()
{
  sub_1BC70E934();
  return sub_1BC818808();
}

void DatabaseChangesQueryInputSignal.Anchor.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  id v38;
  _QWORD v39[2];
  void *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  char v50;

  sub_1BC70EA20(0, &qword_1ED6B86E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v39 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC70E934();
  sub_1BC8187E4();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

  }
  else
  {
    v50 = 0;
    sub_1BC70E978();
    sub_1BC81858C();
    v11 = (uint64_t)v48;
    v10 = v49;
    if (v49 >> 60 == 15)
    {
      v47 = (uint64_t)v48;
      v12 = 0;
    }
    else
    {
      v46 = a2;
      sub_1BC6ED7C0(0, &qword_1ED6BB3A0);
      sub_1BC6ED7C0(0, &qword_1ED6B84B8);
      sub_1BC6ECBE8(v11, v10);
      v13 = sub_1BC817F38();
      sub_1BC6ECB4C(v11, v10);
      v47 = v11;
      v12 = (void *)v13;
      a2 = v46;
    }
    sub_1BC70E9BC();
    v50 = 1;
    sub_1BC70EA7C(&qword_1ED6B83B8, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEDC90], MEMORY[0x1E0DEA0D8]);
    sub_1BC8185C8();
    v45 = v7;
    v46 = a2;
    v14 = v10;
    v15 = sub_1BC6FF34C((uint64_t)v48);
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v40 = v12;
      v41 = v14;
      v42 = 0;
      v43 = v6;
      v44 = a1;
      swift_bridgeObjectRetain();
      v39[1] = v15;
      v17 = (uint64_t *)(v15 + 40);
      v18 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      while (1)
      {
        v19 = v9;
        v21 = *(v17 - 1);
        v20 = *v17;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v48 = v18;
        v24 = sub_1BC706774(v21);
        v25 = v18[2];
        v26 = (v23 & 1) == 0;
        v27 = v25 + v26;
        if (__OFADD__(v25, v26))
          break;
        v28 = v23;
        if (v18[3] >= v27)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1BC70AD40();
        }
        else
        {
          sub_1BC707784(v27, isUniquelyReferenced_nonNull_native);
          v29 = sub_1BC706774(v21);
          if ((v28 & 1) != (v30 & 1))
            goto LABEL_25;
          v24 = v29;
        }
        v9 = v19;
        v18 = v48;
        if ((v28 & 1) != 0)
        {
          *(_QWORD *)(v48[7] + 8 * v24) = v20;
        }
        else
        {
          v48[(v24 >> 6) + 8] |= 1 << v24;
          v31 = 8 * v24;
          *(_QWORD *)(v18[6] + v31) = v21;
          *(_QWORD *)(v18[7] + v31) = v20;
          v32 = v18[2];
          v33 = __OFADD__(v32, 1);
          v34 = v32 + 1;
          if (v33)
            goto LABEL_24;
          v18[2] = v34;
        }
        v17 += 2;
        swift_bridgeObjectRelease();
        if (!--v16)
        {
          swift_bridgeObjectRelease();
          v6 = v43;
          a1 = v44;
          v36 = v46;
          v35 = v47;
          v37 = v41;
          v12 = v40;
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      type metadata accessor for _HKDataTypeCode(0);
      sub_1BC8186E8();
      __break(1u);
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v37 = v14;
      v36 = v46;
      v35 = v47;
LABEL_22:
      sub_1BC6ECB4C(v35, v37);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v6);
      swift_bridgeObjectRelease();
      *v36 = v12;
      v36[1] = v18;
      v38 = v12;
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      swift_bridgeObjectRelease();

    }
  }
}

uint64_t DatabaseChangesQueryInputSignal.Anchor.encode(to:)(_QWORD *a1)
{
  void **v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  char *v40;
  _QWORD v41[2];
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  id v46[3];

  v46[2] = *(id *)MEMORY[0x1E0C80C00];
  sub_1BC70EA20(0, &qword_1ED6B86F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v44 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v41 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC70E934();
  v43 = v7;
  sub_1BC8187F0();
  if (v8)
  {
    v9 = (void *)objc_opt_self();
    v46[0] = 0;
    v10 = v8;
    v11 = objc_msgSend(v9, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v10, 1, v46);
    v12 = v46[0];
    if (!v11)
    {
      v19 = v12;
      sub_1BC816D5C();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v43, v5);
    }
    v13 = (void *)sub_1BC816E64();
    v15 = v14;

    v46[0] = v13;
    v46[1] = v15;
    v45 = 0;
    sub_1BC70EADC();
    v16 = v43;
    sub_1BC818634();
    v17 = v44;
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v5);

      return sub_1BC6ECB60((uint64_t)v13, (unint64_t)v15);
    }

    sub_1BC6ECB60((uint64_t)v13, (unint64_t)v15);
  }
  else
  {
    v17 = v44;
  }
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1BC6FF540(v20);
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v41[1] = v2;
    v42 = v5;
    swift_bridgeObjectRetain();
    v41[0] = v21;
    v23 = (uint64_t *)(v21 + 40);
    v24 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v26 = *(v23 - 1);
      v25 = *v23;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v46[0] = v24;
      v29 = sub_1BC7067D8(v26);
      v30 = v24[2];
      v31 = (v28 & 1) == 0;
      v32 = v30 + v31;
      if (__OFADD__(v30, v31))
      {
        __break(1u);
LABEL_27:
        __break(1u);
      }
      v33 = v28;
      if (v24[3] >= v32)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v24 = v46[0];
          if ((v28 & 1) == 0)
            goto LABEL_19;
        }
        else
        {
          sub_1BC70AEC8();
          v24 = v46[0];
          if ((v33 & 1) == 0)
            goto LABEL_19;
        }
      }
      else
      {
        sub_1BC707A4C(v32, isUniquelyReferenced_nonNull_native);
        v34 = sub_1BC7067D8(v26);
        if ((v33 & 1) != (v35 & 1))
        {
          result = sub_1BC8186E8();
          __break(1u);
          return result;
        }
        v29 = v34;
        v24 = v46[0];
        if ((v33 & 1) == 0)
        {
LABEL_19:
          v24[(v29 >> 6) + 8] |= 1 << v29;
          v36 = 8 * v29;
          *(_QWORD *)(v24[6] + v36) = v26;
          *(_QWORD *)(v24[7] + v36) = v25;
          v37 = v24[2];
          v38 = __OFADD__(v37, 1);
          v39 = v37 + 1;
          if (v38)
            goto LABEL_27;
          v24[2] = v39;
          goto LABEL_11;
        }
      }
      *(_QWORD *)(v24[7] + 8 * v29) = v25;
LABEL_11:
      v23 += 2;
      swift_bridgeObjectRelease();
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        v5 = v42;
        v17 = v44;
        goto LABEL_25;
      }
    }
  }
  v24 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_25:
  swift_bridgeObjectRelease();
  v46[0] = v24;
  v45 = 1;
  sub_1BC70E9BC();
  sub_1BC70EA7C(&qword_1ED6B83B0, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEDC68], MEMORY[0x1E0DEA0B8]);
  v40 = v43;
  sub_1BC818634();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v40, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC703878()
{
  return sub_1BC8173E0();
}

void sub_1BC70389C(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  DatabaseChangesQueryInputSignal.Anchor.init(from:)(a1, a2);
}

uint64_t sub_1BC7038B0(_QWORD *a1)
{
  return DatabaseChangesQueryInputSignal.Anchor.encode(to:)(a1);
}

unint64_t sub_1BC7038C4(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t result;
  BOOL v5;

  v2 = *a1;
  v3 = *a2;
  if ((sub_1BC701118(a1[1], a2[1]) & 1) == 0)
    return 0;
  result = (v2 | v3) == 0;
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
    return (unint64_t)objc_msgSend((id)v2, sel_isEqual_, v3);
  return result;
}

uint64_t DatabaseChangesQueryInputSignal.Configuration.identifier.getter()
{
  return sub_1BC8173E0();
}

uint64_t DatabaseChangesQueryInputSignal.Configuration.types.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DatabaseChangesQueryInputSignal.Configuration.types.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DatabaseChangesQueryInputSignal.Configuration.types.modify())()
{
  return nullsub_1;
}

uint64_t DatabaseChangesQueryInputSignal.Configuration.init(types:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t static DatabaseChangesQueryInputSignal.Configuration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  char v2;

  sub_1BC704A80(*a1, *a2, &qword_1ED6B6360);
  return v2 & 1;
}

void sub_1BC7039B4(uint64_t a1, uint64_t a2)
{
  sub_1BC704A80(a1, a2, &qword_1ED6B6360);
}

uint64_t sub_1BC7039C8(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  uint64_t v35;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v32 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v33 = (unint64_t)(v4 + 63) >> 6;
  v35 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v34 = v3;
      v8 = v7 | (v3 << 6);
      goto LABEL_25;
    }
    v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v9 >= v33)
      return 1;
    v10 = *(_QWORD *)(v32 + 8 * v9);
    v11 = v3 + 1;
    if (!v10)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v33)
        return 1;
      v10 = *(_QWORD *)(v32 + 8 * v11);
      if (!v10)
      {
        v11 = v3 + 3;
        if (v3 + 3 >= v33)
          return 1;
        v10 = *(_QWORD *)(v32 + 8 * v11);
        if (!v10)
          break;
      }
    }
LABEL_24:
    v6 = (v10 - 1) & v10;
    v34 = v11;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_25:
    v13 = result;
    v14 = *(void **)(*(_QWORD *)(result + 48) + 8 * v8);
    sub_1BC817AE8();
    sub_1BC81873C();
    v15 = v14;
    sub_1BC817B30();
    v16 = sub_1BC818778();
    swift_bridgeObjectRelease();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v35 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      goto LABEL_40;
    v19 = sub_1BC817AE8();
    v21 = v20;
    if (v19 == sub_1BC817AE8() && v21 == v22)
    {
LABEL_7:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v24 = sub_1BC818694();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        v25 = ~v17;
        while (1)
        {
          v18 = (v18 + 1) & v25;
          if (((*(_QWORD *)(v35 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
            break;
          v26 = sub_1BC817AE8();
          v28 = v27;
          if (v26 == sub_1BC817AE8() && v28 == v29)
            goto LABEL_7;
          v31 = sub_1BC818694();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v31 & 1) != 0)
            goto LABEL_8;
        }
LABEL_40:

        return 0;
      }
    }
LABEL_8:

    result = v13;
    v3 = v34;
  }
  v12 = v3 + 4;
  if (v3 + 4 >= v33)
    return 1;
  v10 = *(_QWORD *)(v32 + 8 * v12);
  if (v10)
  {
    v11 = v3 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v33)
      return 1;
    v10 = *(_QWORD *)(v32 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_24;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1BC703CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  int64_t v9;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v9 = (unint64_t)(v3 + 63) >> 6;
  if ((v4 & *(_QWORD *)(a1 + 56)) != 0)
    goto LABEL_18;
  if ((unint64_t)(v3 + 63) >> 6 <= 1)
    return 1;
  if (*(_QWORD *)(a1 + 64))
    goto LABEL_18;
  if ((unint64_t)(v3 + 63) >> 6 <= 2)
    return 1;
  if (*(_QWORD *)(a1 + 72))
    goto LABEL_18;
  if ((unint64_t)(v3 + 63) >> 6 <= 3)
    return 1;
  if (*(_QWORD *)(a1 + 80))
  {
LABEL_18:
    sub_1BC81873C();
    ContentKind.rawValue.getter();
    sub_1BC817B30();
    swift_bridgeObjectRelease();
    v7 = sub_1BC818778() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      __asm { BR              X9 }
    return 0;
  }
  v5 = 4;
  if (v9 > 4)
  {
    if (!*(_QWORD *)(a1 + 88))
    {
      while (1)
      {
        v6 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
          JUMPOUT(0x1BC704498);
        }
        if (v6 >= v9)
          return 1;
        ++v5;
        if (*(_QWORD *)(a1 + 56 + 8 * v6))
          goto LABEL_18;
      }
    }
    goto LABEL_18;
  }
  return 1;
}

void sub_1BC704558(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  char v24;
  uint64_t v25;
  int64_t v26;
  int64_t v27;

  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v4 = 0;
  v5 = *(_QWORD *)(a1 + 56);
  v25 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & v5;
  v26 = (unint64_t)(v6 + 63) >> 6;
  v9 = a2 + 56;
  if ((v7 & v5) == 0)
    goto LABEL_8;
  while (2)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_22:
    v15 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v11);
    sub_1BC81873C();
    v27 = v4;
    sub_1BC818748();
    if (v15)
    {
      v16 = v15;
      sub_1BC8180DC();

    }
    v17 = sub_1BC818778();
    v18 = -1 << *(_BYTE *)(a2 + 32);
    v19 = v17 & ~v18;
    if (((*(_QWORD *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
    {
LABEL_35:

      return;
    }
    v20 = ~v18;
    while (1)
    {
      v21 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v19);
      if (v21)
        break;
      if (!v15)
        goto LABEL_32;
LABEL_27:
      v19 = (v19 + 1) & v20;
      if (((*(_QWORD *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        goto LABEL_35;
    }
    if (!v15)
      goto LABEL_27;
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
    v22 = v15;
    v23 = v21;
    v24 = sub_1BC8180D0();

    if ((v24 & 1) == 0)
      goto LABEL_27;

LABEL_32:
    v4 = v27;
    if (v8)
      continue;
    break;
  }
LABEL_8:
  v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v12 < v26)
  {
    v13 = *(_QWORD *)(v25 + 8 * v12);
    ++v4;
    if (v13)
      goto LABEL_21;
    v4 = v12 + 1;
    if (v12 + 1 < v26)
    {
      v13 = *(_QWORD *)(v25 + 8 * v4);
      if (v13)
        goto LABEL_21;
      v4 = v12 + 2;
      if (v12 + 2 < v26)
      {
        v13 = *(_QWORD *)(v25 + 8 * v4);
        if (v13)
          goto LABEL_21;
        v14 = v12 + 3;
        if (v14 < v26)
        {
          v13 = *(_QWORD *)(v25 + 8 * v14);
          if (v13)
          {
            v4 = v14;
LABEL_21:
            v8 = (v13 - 1) & v13;
            v11 = __clz(__rbit64(v13)) + (v4 << 6);
            goto LABEL_22;
          }
          while (1)
          {
            v4 = v14 + 1;
            if (__OFADD__(v14, 1))
              break;
            if (v4 >= v26)
              return;
            v13 = *(_QWORD *)(v25 + 8 * v4);
            ++v14;
            if (v13)
              goto LABEL_21;
          }
LABEL_38:
          __break(1u);
        }
      }
    }
  }
}

uint64_t sub_1BC7047E8(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
          break;
      }
    }
LABEL_23:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_1BC81873C();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    v18 = sub_1BC818778();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_39;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1BC818694() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1BC818694() & 1) != 0)
          goto LABEL_7;
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 4;
  if (v3 + 4 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_23;
  }
LABEL_43:
  __break(1u);
  return result;
}

void sub_1BC704A6C(uint64_t a1, uint64_t a2)
{
  sub_1BC704A80(a1, a2, (unint64_t *)&qword_1ED6BB1D0);
}

void sub_1BC704A80(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;

  v5 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v5)
      sub_1BC818220();
    else
      sub_1BC70CE38(v6, a2);
    return;
  }
  if (v5)
  {
    if (a2 < 0)
      v7 = a2;
    else
      v7 = a2 & 0xFFFFFFFFFFFFFF8;
    sub_1BC70CE38(v7, a1);
    return;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v27 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(a1 + 56);
  sub_1BC6ED7C0(0, a3);
  v11 = 0;
  v28 = (unint64_t)(v8 + 63) >> 6;
  v12 = a2 + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_36;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v15 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v28)
        return;
      v16 = *(_QWORD *)(v27 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v28)
          return;
        v16 = *(_QWORD *)(v27 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_35:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_36:
    v18 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v14);
    v19 = sub_1BC8180C4();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_43;
    v29 = v11;
    v22 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
    v23 = sub_1BC8180D0();

    if ((v23 & 1) == 0)
    {
      v24 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v24;
        if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        v25 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
        v26 = sub_1BC8180D0();

        if ((v26 & 1) != 0)
          goto LABEL_19;
      }
LABEL_43:

      return;
    }
LABEL_19:

    v11 = v29;
  }
  v17 = v15 + 3;
  if (v17 >= v28)
    return;
  v16 = *(_QWORD *)(v27 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_35;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_35;
  }
LABEL_46:
  __break(1u);
}

void sub_1BC704D60(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  int64_t v28;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
      sub_1BC818220();
    else
      sub_1BC70CE38(v5, a2);
    return;
  }
  if (v4)
  {
    if (a2 < 0)
      v6 = a2;
    else
      v6 = a2 & 0xFFFFFFFFFFFFFF8;
    sub_1BC70CE38(v6, a1);
    return;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v26 = a1 + 56;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a1 + 56);
  sub_1BC6ED7C0(0, &qword_1ED6B9658);
  v10 = 0;
  v27 = (unint64_t)(v7 + 63) >> 6;
  v11 = a2 + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_38;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v14 >= v27)
      return;
    v15 = *(_QWORD *)(v26 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v27)
        return;
      v15 = *(_QWORD *)(v26 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v27)
          return;
        v15 = *(_QWORD *)(v26 + 8 * v10);
        if (!v15)
        {
          v10 = v14 + 3;
          if (v14 + 3 >= v27)
            return;
          v15 = *(_QWORD *)(v26 + 8 * v10);
          if (!v15)
            break;
        }
      }
    }
LABEL_37:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_38:
    v17 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v13);
    v18 = sub_1BC8180C4();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_45;
    v28 = v10;
    v21 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v20);
    v22 = sub_1BC8180D0();

    if ((v22 & 1) == 0)
    {
      v23 = ~v19;
      while (1)
      {
        v20 = (v20 + 1) & v23;
        if (((*(_QWORD *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
          break;
        v24 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v20);
        v25 = sub_1BC8180D0();

        if ((v25 & 1) != 0)
          goto LABEL_19;
      }
LABEL_45:

      return;
    }
LABEL_19:

    v10 = v28;
  }
  v16 = v14 + 4;
  if (v16 >= v27)
    return;
  v15 = *(_QWORD *)(v26 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_37;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v27)
      return;
    v15 = *(_QWORD *)(v26 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_37;
  }
LABEL_48:
  __break(1u);
}

uint64_t DatabaseChangesQueryInputSignal.Configuration.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1BC70D180(a1, v3, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368);
  return swift_bridgeObjectRelease();
}

uint64_t DatabaseChangesQueryInputSignal.Configuration.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BC81873C();
  sub_1BC70D180((uint64_t)v3, v1, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368);
  return sub_1BC818778();
}

uint64_t sub_1BC705110(uint64_t *a1, uint64_t *a2)
{
  char v2;

  sub_1BC704A80(*a1, *a2, &qword_1ED6B6360);
  return v2 & 1;
}

uint64_t sub_1BC705140()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BC81873C();
  sub_1BC70D180((uint64_t)v3, v1, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368);
  return sub_1BC818778();
}

void sub_1BC70519C(uint64_t a1)
{
  uint64_t *v1;

  sub_1BC70D180(a1, *v1, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368);
}

uint64_t sub_1BC7051CC()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BC81873C();
  sub_1BC70D180((uint64_t)v3, v1, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368);
  return sub_1BC818778();
}

uint64_t DatabaseChangesQueryInputSignal.beginObservation(from:configurations:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  unint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  v3 = v2;
  v6 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v7 = v2[10];
  v8 = v2[11];
  __swift_project_boxed_opaque_existential_1(v2 + 7, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  v9 = MEMORY[0x1E0DEE9E8];
  v19 = MEMORY[0x1E0DEE9E8];
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v10; ++i)
    {
      v12 = swift_bridgeObjectRetain();
      sub_1BC705434(v12, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368, (void (*)(id *, id))sub_1BC727C20);
    }
    swift_bridgeObjectRelease();
    v9 = v19;
  }
  if (v5)
  {
    v13 = (os_unfair_lock_s *)v3[12];
    v14 = (uint64_t)&v13[4];
    v15 = v13 + 8;
    v16 = v6;
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v15);
    sub_1BC70598C(v14, v6, v5);
    os_unfair_lock_unlock(v15);
    sub_1BC70EB20(v6, v5);
  }
  v17 = sub_1BC70647C(v9, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368);
  swift_bridgeObjectRelease();
  sub_1BC6FFA08(v17);
  return swift_release();
}

Swift::Void __swiftcall DatabaseChangesQueryInputSignal.stopObservation()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[10];
  v2 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

void sub_1BC7053EC(unint64_t a1)
{
  sub_1BC705434(a1, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368, (void (*)(id *, id))sub_1BC727C20);
}

void sub_1BC705410(unint64_t a1)
{
  sub_1BC705434(a1, &qword_1ED6B9658, 0x1E0CB6A70, (unint64_t *)&qword_1ED6B9660, (void (*)(id *, id))sub_1BC7293C0);
}

void sub_1BC705434(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, id))
{
  unint64_t v6;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  _QWORD *v24;
  id v25[6];

  v6 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_1BC8181C0();
    sub_1BC6ED7C0(0, a2);
    sub_1BC6EFB34(a4, a2);
    sub_1BC817DB8();
    v6 = (unint64_t)v25[1];
    v24 = v25[2];
    v9 = (uint64_t)v25[3];
    v10 = v25[4];
    v11 = (unint64_t)v25[5];
  }
  else
  {
    v10 = 0;
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v24 = (_QWORD *)(a1 + 56);
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(a1 + 56);
  }
  v15 = (unint64_t)(v9 + 64) >> 6;
  if ((v6 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v11)
    {
      v16 = (v11 - 1) & v11;
      v17 = __clz(__rbit64(v11)) | ((_QWORD)v10 << 6);
      v18 = (char *)v10;
      goto LABEL_29;
    }
    v20 = (uint64_t)v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v20 >= v15)
      goto LABEL_32;
    v21 = v24[v20];
    v18 = (char *)v10 + 1;
    if (!v21)
    {
      v18 = (char *)v10 + 2;
      if ((uint64_t)v10 + 2 >= v15)
        goto LABEL_32;
      v21 = v24[(_QWORD)v18];
      if (!v21)
      {
        v18 = (char *)v10 + 3;
        if ((uint64_t)v10 + 3 >= v15)
          goto LABEL_32;
        v21 = v24[(_QWORD)v18];
        if (!v21)
        {
          v18 = (char *)v10 + 4;
          if ((uint64_t)v10 + 4 >= v15)
            goto LABEL_32;
          v21 = v24[(_QWORD)v18];
          if (!v21)
          {
            v18 = (char *)v10 + 5;
            if ((uint64_t)v10 + 5 >= v15)
              goto LABEL_32;
            v21 = v24[(_QWORD)v18];
            if (!v21)
            {
              v22 = (char *)v10 + 6;
              while ((char *)v15 != v22)
              {
                v21 = v24[(_QWORD)v22++];
                if (v21)
                {
                  v18 = v22 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1BC6ECC4C();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v16 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + ((_QWORD)v18 << 6);
LABEL_29:
    v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v17);
    if (!v19)
      goto LABEL_32;
    while (1)
    {
      a5(v25, v19);

      v10 = v18;
      v11 = v16;
      if ((v6 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1BC81822C())
      {
        sub_1BC6ED7C0(0, a2);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v19 = v25[0];
        swift_unknownObjectRelease();
        v18 = (char *)v10;
        v16 = v11;
        if (v19)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_1BC7056E4(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  char v13;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        return swift_release();
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          return swift_release();
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            return swift_release();
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    result = sub_1BC728124(&v13, *(unsigned __int8 *)(*(_QWORD *)(v1 + 48) + v9));
  }
  v12 = v10 + 4;
  if (v12 >= v7)
    return swift_release();
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1BC70582C(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  id v15;

  v2 = 0;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v12 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v7)
      goto LABEL_23;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v2;
    if (!v13)
    {
      v2 = v12 + 1;
      if (v12 + 1 >= v7)
        goto LABEL_23;
      v13 = *(_QWORD *)(v3 + 8 * v2);
      if (!v13)
      {
        v2 = v12 + 2;
        if (v12 + 2 >= v7)
          goto LABEL_23;
        v13 = *(_QWORD *)(v3 + 8 * v2);
        if (!v13)
        {
          v2 = v12 + 3;
          if (v12 + 3 >= v7)
            goto LABEL_23;
          v13 = *(_QWORD *)(v3 + 8 * v2);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v13 - 1) & v13;
    v9 = __clz(__rbit64(v13)) + (v2 << 6);
LABEL_5:
    v10 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v9);
    v11 = v10;
    sub_1BC7291E0(&v15, v10);

  }
  v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v2 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v13 = *(_QWORD *)(v3 + 8 * v2);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_1BC70598C(uint64_t a1, void *a2, uint64_t a3)
{
  void *v6;
  id v7;

  v6 = *(void **)a1;
  v7 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
}

uint64_t DatabaseChangesQueryInputSignal.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  swift_release();
  return v0;
}

uint64_t DatabaseChangesQueryInputSignal.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC705A68()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1BC705A90(uint64_t a1, uint64_t a2)
{
  return DatabaseChangesQueryInputSignal.beginObservation(from:configurations:)(a1, a2);
}

uint64_t sub_1BC705AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 56), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_1BC705B00(uint64_t a1, uint64_t a2)
{
  sub_1BC6F0A44(&qword_1ED6B7F58, a2, (uint64_t (*)(uint64_t))type metadata accessor for DatabaseChangesQueryInputSignal, (uint64_t)&protocol conformance descriptor for DatabaseChangesQueryInputSignal);
  return sub_1BC8171AC();
}

uint64_t sub_1BC705B40(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v6;
  void (*v9)(id, void *, uint64_t, void *);
  id v10;
  id v11;
  id v12;

  v6 = a4;
  v9 = *(void (**)(id, void *, uint64_t, void *))(a1 + 32);
  if (a4)
  {
    sub_1BC6ED7C0(0, &qword_1ED6B6360);
    sub_1BC6ED7C0(0, &qword_1ED6B8518);
    sub_1BC6EFB34(&qword_1ED6B6368, &qword_1ED6B6360);
    v6 = sub_1BC817A34();
  }
  swift_retain();
  v10 = a2;
  v11 = a3;
  v12 = a5;
  v9(v10, a3, v6, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1BC705C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC705CA8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1BC705E8CLL);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

_QWORD *sub_1BC705EB0(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1BC809748((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1BC705FBC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  v6 = sub_1BC70D9DC(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BC6ECC4C();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1BC7060BC(uint64_t a1)
{
  return sub_1BC70647C(a1, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368);
}

_QWORD *sub_1BC7060D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BB1F0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1BC70DEE8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BC6ECC4C();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1BC7061D0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = 2 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BB1F0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

_QWORD *sub_1BC706354(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC6E1E98(0, &qword_1EF45AF78, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 56);
  v5 = sub_1BC70E0E4(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1BC6ECC4C();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1BC706460(uint64_t a1)
{
  return sub_1BC70647C(a1, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, (unint64_t *)&qword_1ED6B97F8);
}

uint64_t sub_1BC70647C(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v8 = sub_1BC8181FC();
    if (v8)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v8 <= 0)
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = (_QWORD *)swift_allocObject();
    v10 = _swift_stdlib_malloc_size(v9);
    v11 = v10 - 32;
    if (v10 < 32)
      v11 = v10 - 25;
    v9[2] = v8;
    v9[3] = (2 * (v11 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v12 = sub_1BC70DBF0(&v14, v9 + 4, v8, a1, a2, a3, a4);
  result = sub_1BC6ECC4C();
  if (v12 == (_QWORD *)v8)
    return (uint64_t)v9;
  __break(1u);
  return result;
}

unint64_t sub_1BC7065BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC8180C4();
  return sub_1BC706B48(a1, v2, &qword_1ED6B6360);
}

unint64_t sub_1BC706608(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC81873C();
  sub_1BC817B30();
  v4 = sub_1BC818778();
  return sub_1BC706A68(a1, a2, v4);
}

unint64_t sub_1BC70666C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC8180C4();
  return sub_1BC706B48(a1, v2, &qword_1ED6B9658);
}

unint64_t sub_1BC7066B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC81825C();
  return sub_1BC706C58(a1, v2);
}

unint64_t sub_1BC7066E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_1BC81873C();
  sub_1BC817B30();
  sub_1BC817B30();
  v8 = sub_1BC818778();
  return sub_1BC706D1C(a1, a2, a3, a4, v8);
}

unint64_t sub_1BC706774(uint64_t a1)
{
  uint64_t v2;

  sub_1BC81873C();
  sub_1BC818748();
  v2 = sub_1BC818778();
  return sub_1BC706E18(a1, v2);
}

unint64_t sub_1BC7067D8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC818730();
  return sub_1BC706E18(a1, v2);
}

unint64_t sub_1BC706808(uint64_t a1)
{
  uint64_t v2;

  sub_1BC817AE8();
  sub_1BC81873C();
  sub_1BC817B30();
  v2 = sub_1BC818778();
  swift_bridgeObjectRelease();
  return sub_1BC706EB4(a1, v2);
}

unint64_t sub_1BC706894(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC8180C4();
  return sub_1BC706B48(a1, v2, (unint64_t *)&qword_1ED6BB1E0);
}

unint64_t sub_1BC7068E0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC8180C4();
  return sub_1BC706B48(a1, v2, &qword_1ED6B84B0);
}

unint64_t sub_1BC70692C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC817200();
  sub_1BC6F0A44((unint64_t *)&qword_1ED6B9550, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CF20], MEMORY[0x1E0D2CF30]);
  v2 = sub_1BC817A70();
  return sub_1BC707028(a1, v2);
}

unint64_t sub_1BC70699C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC817AE8();
  sub_1BC81873C();
  sub_1BC817B30();
  v2 = sub_1BC818778();
  swift_bridgeObjectRelease();
  return sub_1BC706EB4(a1, v2);
}

unint64_t sub_1BC706A1C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC8180C4();
  return sub_1BC706B48(a1, v2, (unint64_t *)&qword_1ED6BB1D0);
}

unint64_t sub_1BC706A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1BC818694() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1BC818694() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1BC706B48(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1BC6ED7C0(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_1BC8180D0();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_1BC8180D0();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1BC706C58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1BC70F6E0(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1BCCF4F14](v9, a1);
      sub_1BC6EF788((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1BC706D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v13 = ~v7;
    v14 = *(_QWORD *)(v5 + 48);
    do
    {
      v15 = (_QWORD *)(v14 + 32 * v8);
      v16 = v15[2];
      v17 = v15[3];
      v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_1BC818694() & 1) != 0)
      {
        v19 = v16 == a3 && v17 == a4;
        if (v19 || (sub_1BC818694() & 1) != 0)
          break;
      }
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_1BC706E18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1BC706EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1BC817AE8();
    v8 = v7;
    if (v6 == sub_1BC817AE8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1BC818694();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1BC817AE8();
          v15 = v14;
          if (v13 == sub_1BC817AE8() && v15 == v16)
            break;
          v18 = sub_1BC818694();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1BC707028(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_1BC817200();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_1BC6F0A44(&qword_1ED6B9558, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CF20], MEMORY[0x1E0D2CF38]);
      v14 = sub_1BC817AB8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_1BC70716C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  sub_1BC70F71C();
  v6 = sub_1BC818508();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1BC6EFBDC(v24, v35);
      }
      else
      {
        sub_1BC6E1A84((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1BC81873C();
      sub_1BC817B30();
      result = sub_1BC818778();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1BC6EFBDC(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC707464(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t i;
  char v39;

  v3 = v2;
  v5 = *v2;
  sub_1BC70F624();
  v39 = a2;
  v6 = sub_1BC818508();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v37 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v20 = v19 | (v13 << 6);
      }
      else
      {
        v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v36)
          goto LABEL_33;
        v22 = v37[v21];
        ++v13;
        if (!v22)
        {
          v13 = v21 + 1;
          if (v21 + 1 >= v36)
            goto LABEL_33;
          v22 = v37[v13];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v39 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v5 + 32);
                if (v35 >= 64)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                v13 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_40;
                if (v13 >= v36)
                  goto LABEL_33;
                v22 = v37[v13];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v13 = v23;
          }
        }
LABEL_30:
        v10 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v20);
      v30 = *v28;
      v29 = v28[1];
      v32 = v28[2];
      v31 = v28[3];
      v33 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v34 = v33;
      }
      sub_1BC81873C();
      sub_1BC817B30();
      sub_1BC817B30();
      result = sub_1BC818778();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 32 * v17);
      *v18 = v30;
      v18[1] = v29;
      v18[2] = v32;
      v18[3] = v31;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v33;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC707784(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;

  v3 = v2;
  v5 = *v2;
  sub_1BC710070();
  result = sub_1BC818508();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = a2;
    v8 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v18 >= v12)
          goto LABEL_31;
        v19 = v33[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v12)
            goto LABEL_31;
          v19 = v33[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v12)
            {
LABEL_31:
              if ((v32 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v33[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v8 >= v12)
                  goto LABEL_31;
                v19 = v33[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = 8 * v17;
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v21);
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v21);
      sub_1BC81873C();
      sub_1BC818748();
      result = sub_1BC818778();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        v14 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = 8 * v14;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v15) = v22;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v15) = v23;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1BC707A4C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  sub_1BC71000C();
  result = sub_1BC818508();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = sub_1BC818730();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1BC707CEC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char *v47;

  v3 = v2;
  v5 = sub_1BC817050();
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v47 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  sub_1BC70F588(0, &qword_1ED6B9728, v8);
  v45 = a2;
  v9 = sub_1BC818508();
  v10 = v9;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v7 + 32);
  v12 = *(_QWORD *)(v7 + 64);
  v43 = (_QWORD *)(v7 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v41 = v2;
  v42 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  v44 = v5;
  v18 = v46;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v42)
      break;
    v23 = v43;
    v24 = v43[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v42)
        goto LABEL_34;
      v24 = v43[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v42)
        {
LABEL_34:
          swift_release();
          v3 = v41;
          if ((v45 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v43[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v42)
              goto LABEL_34;
            v24 = v43[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v7 + 56);
    v27 = v7;
    v28 = *(void **)(*(_QWORD *)(v7 + 48) + 8 * v21);
    v29 = *(_QWORD *)(v18 + 72);
    v30 = v26 + v29 * v21;
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v47, v30, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v47, v30, v5);
      v31 = v28;
    }
    sub_1BC817AE8();
    sub_1BC81873C();
    sub_1BC817B30();
    v32 = sub_1BC818778();
    result = swift_bridgeObjectRelease();
    v33 = -1 << *(_BYTE *)(v10 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      v5 = v44;
      v18 = v46;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      v5 = v44;
      v18 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v19) = v28;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v18 + 32))(*(_QWORD *)(v10 + 56) + v29 * v19, v47, v5);
    ++*(_QWORD *)(v10 + 16);
    v7 = v27;
  }
  swift_release();
  v3 = v41;
  v23 = v43;
  if ((v45 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v40 = 1 << *(_BYTE *)(v7 + 32);
  if (v40 >= 64)
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v40;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1BC7080B0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  char v34;
  __int128 v35;

  v3 = v2;
  v5 = *v2;
  sub_1BC70F588(0, &qword_1ED6B8EE0, (void (*)(uint64_t))sub_1BC70FDC8);
  v34 = a2;
  v6 = sub_1BC818508();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v32 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v32)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v33 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v32)
        goto LABEL_33;
      v23 = *(_QWORD *)(v33 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v32)
        {
LABEL_33:
          swift_release();
          if ((v34 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v33 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v32)
              goto LABEL_33;
            v23 = *(_QWORD *)(v33 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v20);
    v35 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
    if ((v34 & 1) == 0)
    {
      v30 = v29;
      swift_unknownObjectRetain();
    }
    sub_1BC817AE8();
    sub_1BC81873C();
    sub_1BC817B30();
    v14 = sub_1BC818778();
    result = swift_bridgeObjectRelease();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v17 == v26;
        if (v17 == v26)
          v17 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v17);
      }
      while (v28 == -1);
      v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(_QWORD *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v29;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v35;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v34 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC7083F0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  sub_1BC70FB84();
  v6 = a2;
  v7 = sub_1BC818508();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1BC6ECBE8(v37, *((unint64_t *)&v37 + 1));
      }
      sub_1BC81873C();
      sub_1BC817B30();
      result = sub_1BC818778();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1BC7086F8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  sub_1BC70F4E4();
  v38 = a2;
  v6 = sub_1BC818508();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v21);
    v31 = *(_QWORD *)(v5 + 56) + 16 * v21;
    v32 = *(_QWORD *)v31;
    v33 = *(_BYTE *)(v31 + 8);
    if ((v38 & 1) == 0)
    {
      v34 = v30;
      sub_1BC70F57C(v32, v33);
    }
    result = sub_1BC8180C4();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v30;
    v19 = *(_QWORD *)(v7 + 56) + 16 * v18;
    *(_QWORD *)v19 = v32;
    *(_BYTE *)(v19 + 8) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC7089E4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  sub_1BC70F468();
  v36 = a2;
  v6 = sub_1BC818508();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_1BC81873C();
    sub_1BC817B30();
    result = sub_1BC818778();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC708CF4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  sub_1BC70FAD4(0, &qword_1ED6B86C0, (void (*)(uint64_t))sub_1BC70FD60);
  v36 = a2;
  v6 = sub_1BC818508();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BC81873C();
    sub_1BC817B30();
    result = sub_1BC818778();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC709014(uint64_t a1, char a2)
{
  return sub_1BC709698(a1, a2, (void (*)(_QWORD))sub_1BC70FCA0);
}

uint64_t sub_1BC709020(uint64_t a1, char a2)
{
  return sub_1BC70A028(a1, a2, (void (*)(_QWORD))sub_1BC70FBE8);
}

uint64_t sub_1BC70902C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  char v35;
  __int128 v36[2];

  v3 = v2;
  v5 = *v2;
  sub_1BC70FAD4(0, &qword_1EF45B100, (void (*)(uint64_t))sub_1BC70FB30);
  v35 = a2;
  v6 = sub_1BC818508();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((v35 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
      if ((v35 & 1) != 0)
      {
        sub_1BC6FC848(v24, (uint64_t)v36);
      }
      else
      {
        sub_1BC6FC700((uint64_t)v24, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_1BC81873C();
      sub_1BC817B30();
      result = sub_1BC818778();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = sub_1BC6FC848(v36, *(_QWORD *)(v7 + 56) + 40 * v14);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC709348(uint64_t a1, char a2)
{
  return sub_1BC70936C(a1, a2, &qword_1EF45B0C0, (uint64_t)&qword_1ED6B83E0, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC6E1E98);
}

uint64_t sub_1BC70936C(uint64_t a1, char a2, unint64_t *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char v40;

  v7 = v6;
  v9 = *v6;
  sub_1BC70F80C(0, a3, a4, a5, a6);
  v40 = a2;
  v10 = sub_1BC818508();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_40;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v39 = v9 + 64;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  else
    v13 = -1;
  v14 = v13 & *(_QWORD *)(v9 + 64);
  v38 = (unint64_t)(v12 + 63) >> 6;
  v15 = v10 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v23 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v24 = v23 | (v17 << 6);
      goto LABEL_31;
    }
    v25 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v25 >= v38)
      break;
    v26 = (_QWORD *)(v9 + 64);
    v27 = *(_QWORD *)(v39 + 8 * v25);
    ++v17;
    if (!v27)
    {
      v17 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v27 = *(_QWORD *)(v39 + 8 * v17);
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v38)
        {
LABEL_33:
          swift_release();
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v27 = *(_QWORD *)(v39 + 8 * v28);
        if (!v27)
        {
          while (1)
          {
            v17 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_42;
            if (v17 >= v38)
              goto LABEL_33;
            v27 = *(_QWORD *)(v39 + 8 * v17);
            ++v28;
            if (v27)
              goto LABEL_30;
          }
        }
        v17 = v28;
      }
    }
LABEL_30:
    v14 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_31:
    v33 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v24);
    v35 = *v33;
    v34 = v33[1];
    v36 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v24);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BC81873C();
    sub_1BC817B30();
    result = sub_1BC818778();
    v18 = -1 << *(_BYTE *)(v11 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v15 + 8 * (v19 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v15 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v31 = v20 == v30;
        if (v20 == v30)
          v20 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v15 + 8 * v20);
      }
      while (v32 == -1);
      v21 = __clz(__rbit64(~v32)) + (v20 << 6);
    }
    *(_QWORD *)(v15 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v21);
    *v22 = v35;
    v22[1] = v34;
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v21) = v36;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v26 = (_QWORD *)(v9 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v9 + 32);
  if (v37 >= 64)
    bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v37;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v7 = v11;
  return result;
}

uint64_t sub_1BC70968C(uint64_t a1, char a2)
{
  return sub_1BC709698(a1, a2, (void (*)(_QWORD))sub_1BC70FA14);
}

uint64_t sub_1BC709698(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v7 = sub_1BC818508();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v3;
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      swift_bridgeObjectRetain();
    }
    result = sub_1BC8180C4();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v24 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1BC709968(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  sub_1BC70F9B4();
  v42 = a2;
  v6 = sub_1BC818508();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BC81873C();
    sub_1BC817B30();
    result = sub_1BC818778();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC709C88(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1BC817200();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1BC70F310();
  v42 = a2;
  v10 = sub_1BC818508();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_retain();
    }
    sub_1BC6F0A44((unint64_t *)&qword_1ED6B9550, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CF20], MEMORY[0x1E0D2CF30]);
    result = sub_1BC817A70();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1BC70A01C(uint64_t a1, char a2)
{
  return sub_1BC70A028(a1, a2, (void (*)(_QWORD))sub_1BC70F8FC);
}

uint64_t sub_1BC70A028(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v7 = sub_1BC818508();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v3;
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_33;
      v25 = *(_QWORD *)(v38 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v37;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v25 = *(_QWORD *)(v38 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      v35 = v33;
    }
    result = sub_1BC8180C4();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v37;
  v24 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v6 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1BC70A2F4(uint64_t a1, char a2)
{
  return sub_1BC70936C(a1, a2, (unint64_t *)&qword_1EF45B0D0, (uint64_t)&qword_1ED6B8D20, (uint64_t)type metadata accessor for PluginFeedItem, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC6ECA64);
}

uint64_t sub_1BC70A318(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;

  v3 = v2;
  v5 = type metadata accessor for PluginFeedItem();
  v43 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1BC70FAD4(0, &qword_1ED6BAC90, v9);
  v44 = a2;
  v10 = sub_1BC818508();
  v11 = v10;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v8 + 32);
  v13 = *(_QWORD *)(v8 + 64);
  v42 = (_QWORD *)(v8 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v40 = v2;
  v41 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v41)
      break;
    v24 = v42;
    v25 = v42[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v41)
        goto LABEL_34;
      v25 = v42[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v42[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v18 >= v41)
              goto LABEL_34;
            v25 = v42[v18];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v18 = v26;
      }
    }
LABEL_21:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    v27 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v22);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v43 + 72);
    v31 = *(_QWORD *)(v8 + 56) + v30 * v22;
    if ((v44 & 1) != 0)
    {
      sub_1BC70F7C8(v31, (uint64_t)v7);
    }
    else
    {
      sub_1BC70F784(v31, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_1BC81873C();
    sub_1BC817B30();
    result = sub_1BC818778();
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v19);
    *v20 = v29;
    v20[1] = v28;
    result = sub_1BC70F7C8((uint64_t)v7, *(_QWORD *)(v11 + 56) + v30 * v19);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v40;
  v24 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v8 + 32);
  if (v39 >= 64)
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v39;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1BC70A68C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  sub_1BC6EFB74();
  v6 = sub_1BC818508();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_1BC6EFBDC((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1BC70F6E0(v25, (uint64_t)&v38);
      sub_1BC6E1A84(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_1BC81825C();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_1BC6EFBDC(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_1BC70A99C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_1BC70F71C();
  v2 = *v0;
  v3 = sub_1BC8184FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1BC6E1A84(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1BC6EFBDC(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC70AB7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_1BC70F624();
  v2 = *v0;
  v3 = sub_1BC8184FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * v15);
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[3];
    v21 = 8 * v15;
    v22 = *(void **)(*(_QWORD *)(v2 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = *v17;
    v23[1] = v18;
    v23[2] = v19;
    v23[3] = v20;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = v22;
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC70AD40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  sub_1BC710070();
  v2 = *v0;
  v3 = sub_1BC8184FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC70AEC8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  sub_1BC71000C();
  v2 = *v0;
  v3 = sub_1BC8184FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC70B050()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;

  v1 = sub_1BC817050();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC70F588(0, &qword_1ED6B9728, v5);
  v25 = v0;
  v6 = *v0;
  v7 = sub_1BC8184FC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v25 = v8;
    return result;
  }
  result = (id)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v26 = v6 + 64;
  v27 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v27)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v27)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v2 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v6 + 56) + v20, v1);
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v18) = v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v8 + 56) + v20, v4, v1);
    result = v19;
  }
  v23 = v21 + 2;
  if (v23 >= v27)
    goto LABEL_26;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v27)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC70B280()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  sub_1BC70F588(0, &qword_1ED6B8EE0, (void (*)(uint64_t))sub_1BC70FDC8);
  v2 = *v0;
  v3 = sub_1BC8184FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    v20 = v17;
    result = (void *)swift_unknownObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC70B448()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  __int128 v24;

  v1 = v0;
  sub_1BC70FB84();
  v2 = *v0;
  v3 = sub_1BC8184FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v24 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    result = (void *)sub_1BC6ECBE8(v24, *((unint64_t *)&v24 + 1));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC70B608()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_1BC70F4E4();
  v2 = *v0;
  v3 = sub_1BC8184FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_BYTE *)(v19 + 8);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v22 = v20;
    *(_BYTE *)(v22 + 8) = v21;
    v23 = v17;
    result = (void *)sub_1BC70F57C(v20, v21);
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC70B7CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1BC70F468();
  v2 = *v0;
  v3 = sub_1BC8184FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_retain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC70B97C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1BC70FAD4(0, &qword_1ED6B86C0, (void (*)(uint64_t))sub_1BC70FD60);
  v2 = *v0;
  v3 = sub_1BC8184FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC70BB3C()
{
  return sub_1BC70C0CC((void (*)(_QWORD))sub_1BC70FCA0);
}

id sub_1BC70BB48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1BC70FBE8();
  v2 = *v0;
  v3 = sub_1BC8184FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC70BCE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  sub_1BC70FAD4(0, &qword_1EF45B100, (void (*)(uint64_t))sub_1BC70FB30);
  v2 = *v0;
  v3 = sub_1BC8184FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_1BC6FC700(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1BC6FC848(v26, *(_QWORD *)(v4 + 56) + v20);
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC70BEDC()
{
  return sub_1BC70BF00(&qword_1EF45B0C0, (uint64_t)&qword_1ED6B83E0, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC6E1E98);
}

void *sub_1BC70BF00(unint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v5 = v4;
  sub_1BC70F80C(0, a1, a2, a3, a4);
  v6 = *v4;
  v7 = sub_1BC8184FC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v5 = v8;
    return result;
  }
  result = (void *)(v7 + 64);
  v10 = v6 + 64;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 64);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v17)
      goto LABEL_26;
    v27 = *(_QWORD *)(v10 + 8 * v26);
    ++v13;
    if (!v27)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v17)
        goto LABEL_26;
      v27 = *(_QWORD *)(v10 + 8 * v13);
      if (!v27)
        break;
    }
LABEL_25:
    v16 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v13 << 6);
LABEL_12:
    v20 = 16 * v19;
    v21 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v19);
    v22 = v21[1];
    v23 = 8 * v19;
    v24 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v23);
    v25 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v20);
    *v25 = *v21;
    v25[1] = v22;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v23) = v24;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v17)
    goto LABEL_26;
  v27 = *(_QWORD *)(v10 + 8 * v28);
  if (v27)
  {
    v13 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v13 >= v17)
      goto LABEL_26;
    v27 = *(_QWORD *)(v10 + 8 * v13);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC70C0C0()
{
  return sub_1BC70C0CC((void (*)(_QWORD))sub_1BC70FA14);
}

void *sub_1BC70C0CC(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1BC8184FC();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC70C274()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_1BC70F9B4();
  v2 = *v0;
  v3 = sub_1BC8184FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC70C428()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1BC817200();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC70F310();
  v24 = v0;
  v5 = *v0;
  v6 = sub_1BC8184FC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC70C654()
{
  return sub_1BC70BF00((unint64_t *)&qword_1EF45B0D0, (uint64_t)&qword_1ED6B8D20, (uint64_t)type metadata accessor for PluginFeedItem, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC6ECA64);
}

void *sub_1BC70C678()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for PluginFeedItem();
  v31 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC70FAD4(0, &qword_1ED6BAC90, v5);
  v6 = *v0;
  v7 = sub_1BC8184FC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v29 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v30 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v18);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(v31 + 72) * v18;
    sub_1BC70F784(*(_QWORD *)(v6 + 56) + v23, (uint64_t)v4);
    v24 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v24 = v22;
    v24[1] = v21;
    sub_1BC70F7C8((uint64_t)v4, *(_QWORD *)(v8 + 56) + v23);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC70C8B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  sub_1BC6EFB74();
  v2 = *v0;
  v3 = sub_1BC8184FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_1BC70F6E0(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_1BC6E1A84(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_1BC6EFBDC(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1BC70CA90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  char v20;
  void *v21;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 != sub_1BC8181FC())
    return;
  v4 = 0;
  v5 = a2 + 64;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v4++, 1))
      goto LABEL_24;
    if (v4 >= v9)
      return;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    if (!v13)
      break;
LABEL_16:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_17:
    v15 = 8 * v11;
    v16 = *(void **)(*(_QWORD *)(a2 + 56) + v15);
    v17 = *(id *)(*(_QWORD *)(a2 + 48) + v15);
    v18 = v16;
    v19 = sub_1BC81846C();

    if (!v19)
    {

      return;
    }
    sub_1BC6ED7C0(0, &qword_1ED6B8518);
    swift_dynamicCast();
    v20 = sub_1BC8180D0();

    if ((v20 & 1) == 0)
      return;
  }
  v14 = v4 + 1;
  if (v4 + 1 >= v9)
    return;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    ++v4;
    goto LABEL_16;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_1BC70CC58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  char v20;
  void *v21;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 != sub_1BC8181FC())
    return;
  v4 = 0;
  v5 = a2 + 64;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_19;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v9)
      return;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
        break;
    }
LABEL_18:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_19:
    v15 = 8 * v11;
    v16 = *(void **)(*(_QWORD *)(a2 + 56) + v15);
    v17 = *(id *)(*(_QWORD *)(a2 + 48) + v15);
    v18 = v16;
    v19 = sub_1BC81846C();

    if (!v19)
    {

      return;
    }
    sub_1BC6ED7C0(0, &qword_1ED6B96D0);
    swift_dynamicCast();
    v20 = sub_1BC8180D0();

    if ((v20 & 1) == 0)
      return;
  }
  v14 = v12 + 2;
  if (v14 >= v9)
    return;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_18;
  }
LABEL_26:
  __break(1u);
}

void sub_1BC70CE38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  char v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 != sub_1BC8181FC())
    return;
  v4 = 0;
  v5 = a2 + 56;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_6:
    v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v11);
    v13 = sub_1BC818238();

    if ((v13 & 1) == 0)
      return;
  }
  v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v14);
  ++v4;
  if (v15)
    goto LABEL_19;
  v4 = v14 + 1;
  if (v14 + 1 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    v8 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  v16 = v14 + 2;
  if (v16 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v9)
      return;
    v15 = *(_QWORD *)(v5 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_23:
  __break(1u);
}

void sub_1BC70CF88(uint64_t a1, uint64_t a2)
{
  sub_1BC70D180(a1, a2, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368);
}

uint64_t sub_1BC70CFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v17;
  int64_t v18;

  sub_1BC818778();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1))
      goto LABEL_19;
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_1BC818748();
    }
    v17 = *(_QWORD *)(v3 + 8 * v10);
    if (!v17)
      break;
LABEL_16:
    v6 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_5:
    v13 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v12);
    sub_1BC817AE8();
    sub_1BC81873C();
    v14 = v13;
    sub_1BC817B30();
    v15 = sub_1BC818778();

    result = swift_bridgeObjectRelease();
    v9 ^= v15;
  }
  v18 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_17;
  v17 = *(_QWORD *)(v3 + 8 * v18);
  if (v17)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v10 >= v7)
      goto LABEL_17;
    v17 = *(_QWORD *)(v3 + 8 * v10);
    ++v18;
    if (v17)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

void sub_1BC70D148(uint64_t a1, uint64_t a2)
{
  sub_1BC70D180(a1, a2, &qword_1ED6B9658, 0x1E0CB6A70, (unint64_t *)&qword_1ED6B9660);
}

void sub_1BC70D164(uint64_t a1, uint64_t a2)
{
  sub_1BC70D180(a1, a2, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, (unint64_t *)&qword_1ED6B97F8);
}

void sub_1BC70D180(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  sub_1BC818778();
  v25 = a3;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC8181C0();
    sub_1BC6ED7C0(0, a3);
    sub_1BC6EFB34(a5, a3);
    sub_1BC817DB8();
    a2 = v27;
    v8 = v28;
    v9 = v29;
    v10 = v30;
    v11 = v31;
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a2 + 32);
    v8 = a2 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v10 = 0;
  }
  v15 = 0;
  v16 = (unint64_t)(v9 + 64) >> 6;
  while (a2 < 0)
  {
    if (!sub_1BC81822C())
      goto LABEL_26;
    sub_1BC6ED7C0(0, v25);
    swift_dynamicCast();
    v20 = v26;
    if (!v26)
      goto LABEL_26;
    v19 = v10;
    v17 = v11;
LABEL_10:
    v22 = sub_1BC8180C4();

    v15 ^= v22;
    v10 = v19;
    v11 = v17;
  }
  if (v11)
  {
    v17 = (v11 - 1) & v11;
    v18 = __clz(__rbit64(v11)) | (v10 << 6);
    v19 = v10;
LABEL_9:
    v20 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v18);
    v26 = v20;
    v21 = v20;
    if (!v20)
      goto LABEL_26;
    goto LABEL_10;
  }
  v19 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v19 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v8 + 8 * v19);
    if (!v23)
    {
      v19 = v10 + 2;
      if (v10 + 2 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v8 + 8 * v19);
      if (!v23)
      {
        v24 = v10 + 3;
        while (v16 != v24)
        {
          v23 = *(_QWORD *)(v8 + 8 * v24++);
          if (v23)
          {
            v19 = v24 - 1;
            goto LABEL_22;
          }
        }
LABEL_26:
        sub_1BC6ECC4C();
        sub_1BC818748();
        return;
      }
    }
LABEL_22:
    v17 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v19 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_1BC70D3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BC818778();
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = __clz(__rbit64(v5));
    goto LABEL_14;
  }
  v8 = 1;
  if (v6 > 1)
  {
    v9 = *(_QWORD *)(a2 + 64);
    if (v9)
    {
LABEL_13:
      v7 = __clz(__rbit64(v9)) + (v8 << 6);
LABEL_14:
      v11 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v7);
      sub_1BC81873C();
      __asm { BR              X8 }
    }
    v10 = 2;
    if (v6 > 2)
    {
      v9 = *(_QWORD *)(a2 + 72);
      if (v9)
      {
        v8 = 2;
        goto LABEL_13;
      }
      while (1)
      {
        v8 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          __break(1u);
          JUMPOUT(0x1BC70D7E8);
        }
        if (v8 >= v6)
          break;
        v9 = *(_QWORD *)(a2 + 56 + 8 * v8);
        ++v10;
        if (v9)
          goto LABEL_13;
      }
    }
  }
  swift_release();
  return sub_1BC818748();
}

uint64_t sub_1BC70D848(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v13;
  int64_t v14;

  sub_1BC818778();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1))
      goto LABEL_19;
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_1BC818748();
    }
    v13 = *(_QWORD *)(v3 + 8 * v10);
    if (!v13)
      break;
LABEL_16:
    v6 = (v13 - 1) & v13;
LABEL_5:
    sub_1BC81873C();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    v11 = sub_1BC818778();
    result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  v14 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_17;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v10 >= v7)
      goto LABEL_17;
    v13 = *(_QWORD *)(v3 + 8 * v10);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

_QWORD *sub_1BC70D9DC(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1BC70DBD4(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC70DBF0(a1, a2, a3, a4, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, (unint64_t *)&qword_1ED6B97F8);
}

_QWORD *sub_1BC70DBF0(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7;
  _QWORD *v9;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;

  v7 = a4;
  v9 = a2;
  v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1BC8181C0();
    sub_1BC6ED7C0(0, a5);
    sub_1BC6EFB34(a7, a5);
    result = (_QWORD *)sub_1BC817DB8();
    v7 = v33;
    v12 = v34;
    v13 = v35;
    v14 = v36;
    v15 = v37;
    if (v9)
      goto LABEL_3;
LABEL_36:
    v16 = 0;
    goto LABEL_38;
  }
  v14 = 0;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  v12 = a4 + 56;
  v13 = ~v24;
  v25 = -v24;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  else
    v26 = -1;
  v15 = v26 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v16 = 0;
LABEL_38:
    v27 = v29;
LABEL_41:
    *v27 = v7;
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (_QWORD *)v16;
  }
  if (a3 < 0)
    goto LABEL_48;
  v16 = 0;
  v30 = (unint64_t)(v13 + 64) >> 6;
  v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_1BC81822C())
        goto LABEL_40;
      sub_1BC6ED7C0(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v19 = v32;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v32)
        goto LABEL_40;
      goto LABEL_8;
    }
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v20 >= v30)
    {
      v15 = 0;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v20);
    if (v21)
      goto LABEL_23;
    v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30)
        goto LABEL_44;
      v21 = *(_QWORD *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        v20 = v14 + 3;
        goto LABEL_23;
      }
      v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      v21 = *(_QWORD *)(v12 + 8 * v22);
      if (!v21)
      {
        v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          v15 = 0;
          v14 = v22;
          goto LABEL_40;
        }
        v21 = *(_QWORD *)(v12 + 8 * v20);
        if (!v21)
        {
          v23 = v14 + 6;
          while (v30 != v23)
          {
            v21 = *(_QWORD *)(v12 + 8 * v23++);
            if (v21)
            {
              v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          v15 = 0;
          v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    v20 = v22;
LABEL_23:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v14 = v20;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v18);
    v19 = result;
    if (!result)
      goto LABEL_40;
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      v16 = a3;
LABEL_40:
      v13 = v28;
      v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1BC70DEE8(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1BC70E0E4(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  id v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v5 = a4 + 56;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v27 = -1 << *(_BYTE *)(a4 + 32);
  v28 = result;
  v11 = 0;
  v12 = 0;
  v29 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    v18 = *(_QWORD *)(a4 + 48) + 56 * v14;
    v20 = *(_QWORD *)(v18 + 16);
    v19 = *(_QWORD *)(v18 + 24);
    v22 = *(_QWORD *)(v18 + 32);
    v21 = *(_QWORD *)(v18 + 40);
    v23 = *(_QWORD *)(v18 + 48);
    v24 = *(_OWORD *)v18;
    *(_OWORD *)v10 = *(_OWORD *)v18;
    *(_QWORD *)(v10 + 16) = v20;
    *(_QWORD *)(v10 + 24) = v19;
    *(_QWORD *)(v10 + 32) = v22;
    *(_QWORD *)(v10 + 40) = v21;
    *(_QWORD *)(v10 + 48) = v23;
    if (v12 == v9)
    {
      v26 = (id)v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 56;
    v25 = (id)v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_8;
LABEL_9:
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v15 >= v29)
      goto LABEL_33;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v29)
      {
        v8 = 0;
        v11 = v15;
      }
      else
      {
        v16 = *(_QWORD *)(v5 + 8 * v11);
        if (v16)
          goto LABEL_14;
        v17 = v15 + 2;
        if (v15 + 2 >= v29)
          goto LABEL_33;
        v16 = *(_QWORD *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          v15 = v17;
          goto LABEL_18;
        }
        v11 = v15 + 3;
        if (v15 + 3 < v29)
        {
          v16 = *(_QWORD *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            v15 = v11;
            goto LABEL_18;
          }
          v17 = v15 + 4;
          if (v15 + 4 >= v29)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v16 = *(_QWORD *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              v15 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_42;
              if (v15 >= v29)
              {
                v8 = 0;
                v11 = v29 - 1;
                goto LABEL_37;
              }
              v16 = *(_QWORD *)(v5 + 8 * v15);
              ++v17;
              if (v16)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v15 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v27;
      result = v28;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v15 << 6);
    v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_1BC70E354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, uint64_t a8, uint64_t a9)
{
  uint64_t *boxed_opaque_existential_1;
  unint64_t v18;
  uint64_t v19;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a8;
  v23 = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(boxed_opaque_existential_1, a6, a8);
  v18 = sub_1BC714914(MEMORY[0x1E0DEE9D8]);
  sub_1BC7100F4(0, &qword_1ED6B8680);
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 32) = 0;
  *(_QWORD *)(v19 + 16) = 0;
  *(_QWORD *)(v19 + 24) = v18;
  a7[12] = v19;
  sub_1BC6FC848(&v21, (uint64_t)(a7 + 7));
  a7[2] = a5;
  a7[3] = a1;
  a7[4] = a2;
  a7[5] = a3;
  a7[6] = a4;
  return a7;
}

void sub_1BC70E42C(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v5;
  char v6;
  char v7;
  id v8;
  void *v9;

  v5 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1BC81840C();
      sub_1BC6ED7C0(0, &qword_1ED6B6360);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_17;
  }
  if ((a3 & 1) != 0)
    goto LABEL_10;
  if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a1) & 1) == 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
  {
LABEL_12:
    v8 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v5);
    return;
  }
  __break(1u);
LABEL_10:
  if (sub_1BC818430() != *(_DWORD *)(a4 + 36))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1BC81843C();
  sub_1BC6ED7C0(0, &qword_1ED6B6360);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
  v5 = sub_1BC7065BC((uint64_t)v9);
  v7 = v6;

  if ((v7 & 1) != 0)
    goto LABEL_12;
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

uint64_t sub_1BC70E5E8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

_QWORD *sub_1BC70E698(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  id v17;

  type metadata accessor for DatabaseChangesQueryInputSignal.QueryObserver();
  v13 = swift_allocObject();
  sub_1BC7100F4(0, &qword_1ED6B8678);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v13 + 16) = v14;
  *(_QWORD *)(v13 + 24) = a4;
  v15 = (_QWORD *)swift_allocObject();
  v16 = sub_1BC70E790(a1, a2, a3, (uint64_t)a4, v13, v15, a6, a7);
  v17 = a4;
  return v16;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

_QWORD *sub_1BC70E790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  unint64_t v15;
  uint64_t v16;
  __int128 v18;
  uint64_t Input;
  _UNKNOWN **v20;

  Input = type metadata accessor for DatabaseChangesQueryInputSignal.QueryObserver();
  v20 = &off_1E7518900;
  *(_QWORD *)&v18 = a5;
  v15 = sub_1BC714914(MEMORY[0x1E0DEE9D8]);
  sub_1BC7100F4(0, &qword_1ED6B8680);
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 32) = 0;
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = v15;
  a6[12] = v16;
  sub_1BC6FC848(&v18, (uint64_t)(a6 + 7));
  a6[2] = a4;
  a6[3] = a1;
  a6[4] = a8;
  a6[5] = a2;
  a6[6] = a3;
  return a6;
}

_QWORD *sub_1BC70E854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;

  v21 = a5;
  v15 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a6, a8);
  return sub_1BC70E354(a1, a2, a3, a4, v21, (uint64_t)v17, v18, a8, a9);
}

unint64_t sub_1BC70E934()
{
  unint64_t result;

  result = qword_1ED6B7F28;
  if (!qword_1ED6B7F28)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81AF0C, &type metadata for DatabaseChangesQueryInputSignal.Anchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6B7F28);
  }
  return result;
}

unint64_t sub_1BC70E978()
{
  unint64_t result;

  result = qword_1ED6BB300;
  if (!qword_1ED6BB300)
  {
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED6BB300);
  }
  return result;
}

void sub_1BC70E9BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B83A8)
  {
    v0 = sub_1BC817A64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B83A8);
  }
}

void sub_1BC70EA20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC70E934();
    v7 = a3(a1, &type metadata for DatabaseChangesQueryInputSignal.Anchor.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC70EA7C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    sub_1BC70E9BC();
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x1BCCF5AB4](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC70EADC()
{
  unint64_t result;

  result = qword_1ED6BACF0;
  if (!qword_1ED6BACF0)
  {
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED6BACF0);
  }
  return result;
}

void sub_1BC70EB20(void *a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

  }
}

unint64_t sub_1BC70EB54()
{
  unint64_t result;

  result = qword_1ED6B6318;
  if (!qword_1ED6B6318)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DatabaseChangesQueryInputSignal.Anchor, &type metadata for DatabaseChangesQueryInputSignal.Anchor);
    atomic_store(result, (unint64_t *)&qword_1ED6B6318);
  }
  return result;
}

unint64_t sub_1BC70EB9C()
{
  unint64_t result;

  result = qword_1ED6B7F48;
  if (!qword_1ED6B7F48)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DatabaseChangesQueryInputSignal.Anchor, &type metadata for DatabaseChangesQueryInputSignal.Anchor);
    atomic_store(result, (unint64_t *)&qword_1ED6B7F48);
  }
  return result;
}

unint64_t sub_1BC70EBE4()
{
  unint64_t result;

  result = qword_1ED6B7F50;
  if (!qword_1ED6B7F50)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DatabaseChangesQueryInputSignal.Anchor, &type metadata for DatabaseChangesQueryInputSignal.Anchor);
    atomic_store(result, (unint64_t *)&qword_1ED6B7F50);
  }
  return result;
}

unint64_t sub_1BC70EC2C()
{
  unint64_t result;

  result = qword_1EF45B0B0;
  if (!qword_1EF45B0B0)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DatabaseChangesQueryInputSignal.Configuration, &type metadata for DatabaseChangesQueryInputSignal.Configuration);
    atomic_store(result, (unint64_t *)&qword_1EF45B0B0);
  }
  return result;
}

unint64_t sub_1BC70EC74()
{
  unint64_t result;

  result = qword_1ED6B7F18;
  if (!qword_1ED6B7F18)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DatabaseChangesQueryInputSignal.Configuration, &type metadata for DatabaseChangesQueryInputSignal.Configuration);
    atomic_store(result, (unint64_t *)&qword_1ED6B7F18);
  }
  return result;
}

unint64_t sub_1BC70ECBC()
{
  unint64_t result;

  result = qword_1ED6B7F20;
  if (!qword_1ED6B7F20)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DatabaseChangesQueryInputSignal.Configuration, &type metadata for DatabaseChangesQueryInputSignal.Configuration);
    atomic_store(result, (unint64_t *)&qword_1ED6B7F20);
  }
  return result;
}

uint64_t sub_1BC70ED00(uint64_t a1, uint64_t a2)
{
  return sub_1BC6F0A44(&qword_1ED6B94C8, a2, (uint64_t (*)(uint64_t))type metadata accessor for DatabaseChangesQueryInputSignal, (uint64_t)&protocol conformance descriptor for DatabaseChangesQueryInputSignal);
}

unint64_t sub_1BC70ED30()
{
  unint64_t result;

  result = qword_1ED6B7F40;
  if (!qword_1ED6B7F40)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DatabaseChangesQueryInputSignal.Anchor, &type metadata for DatabaseChangesQueryInputSignal.Anchor);
    atomic_store(result, (unint64_t *)&qword_1ED6B7F40);
  }
  return result;
}

uint64_t dispatch thunk of DatabaseChangesObserver.startObserving(types:anchor:resultsHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of DatabaseChangesObserver.stopObserving()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for DatabaseChangesQueryInputSignal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DatabaseChangesQueryInputSignal.__allocating_init(context:observer:healthStore:changesObserver:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t type metadata accessor for DatabaseChangesQueryInputSignal.QueryObserver()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for DatabaseChangesQueryInputSignal.Anchor()
{
  return &type metadata for DatabaseChangesQueryInputSignal.Anchor;
}

ValueMetadata *type metadata accessor for DatabaseChangesQueryInputSignal.Configuration()
{
  return &type metadata for DatabaseChangesQueryInputSignal.Configuration;
}

void **assignWithCopy for DatabaseChangesQueryInputSignal.QueryObserver.State(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for DatabaseChangesQueryInputSignal.QueryObserver.State(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseChangesQueryInputSignal.QueryObserver.State(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseChangesQueryInputSignal.QueryObserver.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseChangesQueryInputSignal.QueryObserver.State()
{
  return &type metadata for DatabaseChangesQueryInputSignal.QueryObserver.State;
}

_QWORD *initializeBufferWithCopyOfBuffer for DatabaseChangesQueryInputSignal.State(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DatabaseChangesQueryInputSignal.State(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t _s14HealthPlatform31DatabaseChangesQueryInputSignalC6AnchorVwca_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for DatabaseChangesQueryInputSignal.State(id *a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22SharableModelReferenceVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s22SharableModelReferenceVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseChangesQueryInputSignal.State()
{
  return &type metadata for DatabaseChangesQueryInputSignal.State;
}

uint64_t storeEnumTagSinglePayload for DatabaseChangesQueryInputSignal.Anchor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC70F0D4 + 4 * byte_1BC81AB65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC70F108 + 4 * asc_1BC81AB60[v4]))();
}

uint64_t sub_1BC70F108(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC70F110(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC70F118);
  return result;
}

uint64_t sub_1BC70F124(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC70F12CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC70F130(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC70F138(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DatabaseChangesQueryInputSignal.Anchor.CodingKeys()
{
  return &type metadata for DatabaseChangesQueryInputSignal.Anchor.CodingKeys;
}

unint64_t sub_1BC70F158()
{
  unint64_t result;

  result = qword_1EF45B0B8;
  if (!qword_1EF45B0B8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81AED4, &type metadata for DatabaseChangesQueryInputSignal.Anchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45B0B8);
  }
  return result;
}

unint64_t sub_1BC70F1A0()
{
  unint64_t result;

  result = qword_1ED6B7F38;
  if (!qword_1ED6B7F38)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81AE44, &type metadata for DatabaseChangesQueryInputSignal.Anchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6B7F38);
  }
  return result;
}

unint64_t sub_1BC70F1E8()
{
  unint64_t result;

  result = qword_1ED6B7F30;
  if (!qword_1ED6B7F30)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81AE6C, &type metadata for DatabaseChangesQueryInputSignal.Anchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6B7F30);
  }
  return result;
}

uint64_t sub_1BC70F22C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F68636E61 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BC826640)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1BC70F310()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6B9710)
  {
    sub_1BC817200();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CF20];
    sub_1BC8173B0();
    sub_1BC6F0A44((unint64_t *)&qword_1ED6B9550, 255, v0, MEMORY[0x1E0D2CF30]);
    v1 = sub_1BC81852C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6B9710);
  }
}

void sub_1BC70F3A8(void **a1)
{
  uint64_t v1;
  void *v3;

  v3 = *a1;
  if (*a1)
  {
    objc_msgSend(*(id *)(v1 + 24), sel_stopQuery_, v3);

  }
  *a1 = 0;
}

void sub_1BC70F3F0(void **a1)
{
  uint64_t v1;

  sub_1BC700DF8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1BC70F410()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC70F434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a2, a3, a4);
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

void sub_1BC70F468()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45B200)
  {
    sub_1BC6ECA64(255, &qword_1EF45B0C8, MEMORY[0x1E0C95E00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45B200);
  }
}

void sub_1BC70F4E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B9730)
  {
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BB1E0);
    sub_1BC6EFB34(&qword_1ED6B8568, (unint64_t *)&qword_1ED6BB1E0);
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B9730);
  }
}

uint64_t sub_1BC70F57C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

void sub_1BC70F588(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    type metadata accessor for HKFeatureIdentifier(255);
    a3(255);
    sub_1BC6F0A44(&qword_1ED6B9690, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_1BC819870);
    v5 = sub_1BC81852C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC70F624()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B86B0)
  {
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6B84C8);
    sub_1BC70F69C();
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B86B0);
  }
}

unint64_t sub_1BC70F69C()
{
  unint64_t result;

  result = qword_1ED6B7F70;
  if (!qword_1ED6B7F70)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81A4FC, &type metadata for CachingSharedSummaryTransactionBuilder.SummaryIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED6B7F70);
  }
  return result;
}

uint64_t sub_1BC70F6E0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

void sub_1BC70F71C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BA540)
  {
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BA540);
  }
}

uint64_t sub_1BC70F784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PluginFeedItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC70F7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PluginFeedItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC70F80C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4, MEMORY[0x1E0DEAEC8]);
    v6 = sub_1BC81852C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC70F87C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF45B0E0)
  {
    sub_1BC6ED7C0(255, &qword_1ED6B6360);
    sub_1BC816C9C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF45B0E0);
  }
}

void sub_1BC70F8FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45B1B0)
  {
    sub_1BC6ED7C0(255, &qword_1ED6B9658);
    sub_1BC6ED7C0(255, &qword_1ED6B96D0);
    sub_1BC6EFB34((unint64_t *)&qword_1ED6B9660, &qword_1ED6B9658);
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45B1B0);
  }
}

void sub_1BC70F9B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B63B0)
  {
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B63B0);
  }
}

void sub_1BC70FA14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45B0F0)
  {
    sub_1BC6ED7C0(255, &qword_1ED6B84B0);
    sub_1BC6E1E98(255, (unint64_t *)&qword_1ED6B83E0, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC6EFB34(&qword_1EF45B0F8, &qword_1ED6B84B0);
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45B0F0);
  }
}

void sub_1BC70FAD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC81852C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BC70FB30()
{
  unint64_t result;

  result = qword_1EF45B1E0;
  if (!qword_1EF45B1E0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF45B1E0);
  }
  return result;
}

void sub_1BC70FB84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BB1E8)
  {
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BB1E8);
  }
}

void sub_1BC70FBE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B9740)
  {
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BB1E0);
    sub_1BC6ED7C0(255, &qword_1ED6B96C0);
    sub_1BC6EFB34(&qword_1ED6B8568, (unint64_t *)&qword_1ED6BB1E0);
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B9740);
  }
}

void sub_1BC70FCA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B9738)
  {
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BB1E0);
    sub_1BC6ECA64(255, (unint64_t *)&unk_1ED6B8EA0, (uint64_t (*)(uint64_t))sub_1BC6ED114, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC6EFB34(&qword_1ED6B8568, (unint64_t *)&qword_1ED6BB1E0);
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B9738);
  }
}

void sub_1BC70FD60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B83C0)
  {
    v0 = sub_1BC817A64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B83C0);
  }
}

unint64_t sub_1BC70FDC8()
{
  unint64_t result;

  result = qword_1ED6B9548;
  if (!qword_1ED6B9548)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B9548);
  }
  return result;
}

void sub_1BC70FE24()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6B8EC0)
  {
    type metadata accessor for HKFeatureIdentifier(255);
    sub_1BC817050();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6B8EC0);
  }
}

uint64_t sub_1BC70FE94(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC6ECA64(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BC70FEEC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1BC70FF14(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1BC6FFB20(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

void sub_1BC70FF1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45B108)
  {
    sub_1BC6ED7C0(255, &qword_1ED6B6360);
    sub_1BC6ED7C0(255, &qword_1ED6B8518);
    sub_1BC6EFB34(&qword_1ED6B6368, &qword_1ED6B6360);
    v0 = sub_1BC817A58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45B108);
  }
}

uint64_t objectdestroy_5Tm_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC710004()
{
  uint64_t v0;

  return sub_1BC7006D8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BC71000C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B86C8)
  {
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B86C8);
  }
}

void sub_1BC710070()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B86D0)
  {
    type metadata accessor for _HKDataTypeCode(255);
    sub_1BC6F0A44((unint64_t *)&unk_1ED6B84D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for _HKDataTypeCode, (uint64_t)&unk_1BC819718);
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B86D0);
  }
}

void sub_1BC7100F4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v3 = sub_1BC818340();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_1BC710164(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC714FDC(0, (unint64_t *)&qword_1ED6BA540, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = sub_1BC818520();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  v7 = MEMORY[0x1E0DEA968];
  while (1)
  {
    sub_1BC714C18(v6, (uint64_t)&v16, (uint64_t)&qword_1ED6BA418, v7, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BC715198);
    v8 = v16;
    v9 = v17;
    result = sub_1BC706608(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_1BC6EFBDC(&v18, (_OWORD *)(v3[7] + 32 * result));
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC7102CC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC70F624();
  v2 = (_QWORD *)sub_1BC818520();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 64);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 4);
    v6 = (uint64_t)*(v4 - 3);
    v7 = (uint64_t)*(v4 - 2);
    v8 = (uint64_t)*(v4 - 1);
    v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v9;
    result = sub_1BC7066E8(v5, v6, v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 32 * result);
    *v13 = v5;
    v13[1] = v6;
    v13[2] = v7;
    v13[3] = v8;
    *(_QWORD *)(v2[7] + 8 * result) = v10;
    v14 = v2[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v2[2] = v16;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC710408(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  id v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC70F588(0, &qword_1ED6B8EE0, (void (*)(uint64_t))sub_1BC70FDC8);
  v2 = (_QWORD *)sub_1BC818520();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 40);
  while (1)
  {
    v11 = *v4;
    v5 = *((id *)v4 - 1);
    swift_unknownObjectRetain();
    result = sub_1BC7065B8(v5);
    if ((v7 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v11;
    v8 = v2[2];
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (v9)
      goto LABEL_11;
    v2[2] = v10;
    v4 = (_OWORD *)((char *)v4 + 24);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC710530(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t result;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  sub_1BC7151F4(0, &qword_1ED6B8560, type metadata accessor for HKFeatureIdentifier, (void (*)(uint64_t))MEMORY[0x1E0D2BD30]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v26 - v7);
  if (!*(_QWORD *)(a1 + 16))
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC70F588(0, &qword_1ED6B9728, (void (*)(uint64_t))MEMORY[0x1E0D2BD30]);
  v9 = sub_1BC818520();
  v10 = (_QWORD *)v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  v12 = (char *)v8 + *(int *)(v5 + 48);
  v13 = v9 + 64;
  v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v26[1] = a1;
  v15 = a1 + v14;
  v16 = *(_QWORD *)(v6 + 72);
  swift_retain();
  while (1)
  {
    sub_1BC714E7C(v15, (uint64_t)v8, &qword_1ED6B8560, type metadata accessor for HKFeatureIdentifier, (void (*)(uint64_t))MEMORY[0x1E0D2BD30]);
    v17 = *v8;
    result = a2(*v8);
    if ((v19 & 1) != 0)
      break;
    v20 = result;
    *(_QWORD *)(v13 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v10[6] + 8 * result) = v17;
    v21 = v10[7];
    v22 = sub_1BC817050();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v20, v12, v22);
    v23 = v10[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v10[2] = v25;
    v15 += v16;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC7106F4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC714C7C(0, (unint64_t *)&qword_1EF45B200, &qword_1EF45B0C8, MEMORY[0x1E0C95E00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = (_QWORD *)sub_1BC818520();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    result = sub_1BC706608(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC710828(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC714CE4(0, &qword_1ED6B86C0, (uint64_t)&qword_1ED6B83C0, (uint64_t)MEMORY[0x1E0DEA048], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC715138);
  v2 = (_QWORD *)sub_1BC818520();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BC706608(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC71095C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC715138(0, (unint64_t *)&qword_1ED6BA550, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = sub_1BC818520();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  v7 = MEMORY[0x1E0DEC198];
  while (1)
  {
    sub_1BC714C18(v6, (uint64_t)v16, (uint64_t)&unk_1EF45B1F8, v7, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BC715198);
    result = sub_1BC7066B8((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v3[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_1BC6EFBDC(&v18, (_OWORD *)(v3[7] + 32 * result));
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC710AC8(uint64_t a1)
{
  return sub_1BC71116C(a1, (void (*)(_QWORD))sub_1BC70FBE8, (uint64_t (*)(id))sub_1BC706894);
}

unint64_t sub_1BC710ADC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC70FCA0();
  v2 = (_QWORD *)sub_1BC818520();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_1BC706894((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC710BE0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC715074(0, &qword_1EF45B100, (uint64_t (*)(uint64_t))sub_1BC70FB30, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = sub_1BC818520();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BC714C18(v6, (uint64_t)&v15, (uint64_t)&unk_1EF45B1F0, (uint64_t)sub_1BC70FB30, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BC7150DC);
    v7 = v15;
    v8 = v16;
    result = sub_1BC706608(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_1BC6FC848(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC710D44(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC714FDC(0, (unint64_t *)&qword_1ED6B63B0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = (_QWORD *)sub_1BC818520();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BC706608(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC710E78(uint64_t a1)
{
  return sub_1BC710E90(a1, (void (*)(_QWORD))sub_1BC714F60);
}

unint64_t sub_1BC710E84(uint64_t a1)
{
  return sub_1BC710E90(a1, sub_1BC714ECC);
}

unint64_t sub_1BC710E90(uint64_t a1, void (*a2)(_QWORD))
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  a2(0);
  v3 = (_QWORD *)sub_1BC818520();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BC706608(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC710FA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  sub_1BC7151F4(0, &qword_1EF45B1C0, (void (*)(uint64_t))MEMORY[0x1E0D2CF20], (void (*)(uint64_t))MEMORY[0x1E0D2D0C8]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v23 - v5;
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC70F310();
  v7 = sub_1BC818520();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BC714E7C(v13, (uint64_t)v6, &qword_1EF45B1C0, (void (*)(uint64_t))MEMORY[0x1E0D2CF20], (void (*)(uint64_t))MEMORY[0x1E0D2D0C8]);
    result = sub_1BC70692C((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = sub_1BC817200();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v6, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v6[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC711158(uint64_t a1)
{
  return sub_1BC71116C(a1, (void (*)(_QWORD))sub_1BC70F8FC, (uint64_t (*)(id))sub_1BC70666C);
}

unint64_t sub_1BC71116C(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(id))
{
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  void *v8;
  id v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  a2(0);
  v5 = (_QWORD *)sub_1BC818520();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (void **)(a1 + 40);
  while (1)
  {
    v8 = *v7;
    v9 = *(v7 - 1);
    v10 = v8;
    result = a3(v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = 8 * result;
    *(_QWORD *)(v5[6] + v13) = v9;
    *(_QWORD *)(v5[7] + v13) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC71127C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC714D48();
  v2 = sub_1BC818520();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BC714DD0(v6, (uint64_t)&v13);
    v7 = v13;
    result = sub_1BC70699C(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1BC6EFBDC(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC711390(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC714CE4(0, &qword_1ED6B63B8, (uint64_t)&qword_1ED6BB280, 0x1E0DE7910, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC6ED7C0);
  v2 = (_QWORD *)sub_1BC818520();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_1BC706608(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC7114C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  sub_1BC7150DC(0, &qword_1ED6BAC78, (void (*)(uint64_t))type metadata accessor for PluginFeedItem);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (_QWORD *)((char *)v26 - v5);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC715074(0, &qword_1ED6BAC90, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v7 = sub_1BC818520();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (uint64_t)v6 + *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BC714C18(v13, (uint64_t)v6, (uint64_t)&qword_1ED6BAC78, (uint64_t)type metadata accessor for PluginFeedItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BC7150DC);
    v16 = *v6;
    v15 = v6[1];
    result = sub_1BC706608(*v6, v15);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v16;
    v20[1] = v15;
    v21 = v8[7];
    v22 = type metadata accessor for PluginFeedItem();
    result = sub_1BC70F7C8(v10, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC711684(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC714C7C(0, (unint64_t *)&qword_1EF45B0D0, &qword_1ED6B8D20, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v2 = (_QWORD *)sub_1BC818520();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BC706608(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BC7117B8(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  sub_1BC6ECA64(0, &qword_1ED6B9538, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - v7;
  v9 = sub_1BC817050();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30];
    sub_1BC715030(a1, &qword_1ED6B9538, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30]);
    sub_1BC71E0B0((uint64_t)a2, (uint64_t)v8);

    return sub_1BC715030((uint64_t)v8, &qword_1ED6B9538, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC71F62C((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v17;

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BC711938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1BC6FC848((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC71FE94(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC715030(a1, (unint64_t *)&qword_1EF45B1D8, (uint64_t (*)(uint64_t))sub_1BC70FB30);
    sub_1BC71E520(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1BC715030((uint64_t)v9, (unint64_t *)&qword_1EF45B1D8, (uint64_t (*)(uint64_t))sub_1BC70FB30);
  }
}

uint64_t static InputSignalIdentifier.featureStatus.getter()
{
  return sub_1BC8173E0();
}

uint64_t static InputSignalSet.LookupKey.featureStatus.getter()
{
  uint64_t v0;

  v0 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v0);
  sub_1BC8173E0();
  type metadata accessor for FeatureStatusInputSignal();
  return sub_1BC817260();
}

uint64_t type metadata accessor for FeatureStatusInputSignal()
{
  return objc_opt_self();
}

uint64_t sub_1BC711AE0()
{
  uint64_t v0;

  v0 = sub_1BC8173EC();
  __swift_allocate_value_buffer(v0, qword_1ED6B93A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED6B93A0);
  return sub_1BC8173E0();
}

uint64_t FeatureStatusInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

_QWORD *FeatureStatusInputSignal.__allocating_init(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1BC71407C(a1, a3, a4, a5, v5, ObjectType, a2);
}

_QWORD *FeatureStatusInputSignal.__allocating_init(context:observer:makeFeatureStatusManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t ObjectType;

  v12 = (_QWORD *)swift_allocObject();
  ObjectType = swift_getObjectType();
  return sub_1BC714118(a1, a3, a4, a5, a6, v12, ObjectType, a2);
}

_QWORD *FeatureStatusInputSignal.init(context:observer:makeFeatureStatusManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1BC714118(a1, a3, a4, a5, a6, v6, ObjectType, a2);
}

uint64_t sub_1BC711CB4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  __int128 v17;
  unint64_t v18;
  unint64_t i;
  BOOL v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  char v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v33;
  _QWORD *v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  void (*v49)(char *, char *, uint64_t);
  id v50;
  _QWORD *v51;
  int v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t result;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  int64_t v82;
  uint64_t v83;
  _QWORD *v84;

  v4 = sub_1BC817590();
  v74 = *(_QWORD *)(v4 - 8);
  v75 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC817050();
  v69 = *(_QWORD *)(v7 - 8);
  v70 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v68 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v78 = (char *)&v67 - v10;
  v11 = (_QWORD *)*a2;
  v12 = *(_QWORD *)(a1 + 56);
  v76 = a1 + 56;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v77 = (unint64_t)(v13 + 63) >> 6;
  v71 = v11;
  swift_bridgeObjectRetain();
  v80 = a1;
  swift_bridgeObjectRetain();
  v16 = 0;
  *(_QWORD *)&v17 = 136315394;
  v73 = v17;
  v72 = MEMORY[0x1E0DEE9B8] + 8;
  v79 = v6;
  if (v15)
    goto LABEL_6;
LABEL_7:
  v20 = __OFADD__(v16++, 1);
  if (!v20)
  {
    if (v16 >= v77)
      goto LABEL_49;
    v21 = *(_QWORD *)(v76 + 8 * v16);
    if (v21)
    {
LABEL_17:
      v15 = (v21 - 1) & v21;
      for (i = __clz(__rbit64(v21)) + (v16 << 6); ; i = v18 | (v16 << 6))
      {
        v23 = *(_QWORD *)(a2[1] + 16);
        v24 = *(id *)(*(_QWORD *)(v80 + 48) + 8 * i);
        v25 = v24;
        if (v23)
        {
          sub_1BC7065B8(v24);
          if ((v26 & 1) != 0)
          {

            if (!v15)
              goto LABEL_7;
            goto LABEL_6;
          }
        }
        v81 = v15;
        v82 = v16;
        v27 = v83;
        v28 = (void *)(*(uint64_t (**)(void *))(v83 + 24))(v25);
        v30 = v29;
        swift_getObjectType();
        objc_msgSend(v28, sel_registerObserver_, *(_QWORD *)(v27 + 16));
        v31 = v25;
        swift_unknownObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v84 = (_QWORD *)a2[1];
        v33 = v84;
        v34 = a2;
        a2[1] = 0x8000000000000000;
        v36 = sub_1BC7065B8(v31);
        v37 = v33[2];
        v38 = (v35 & 1) == 0;
        v39 = v37 + v38;
        if (__OFADD__(v37, v38))
        {
          __break(1u);
          goto LABEL_51;
        }
        v40 = v35;
        if (v33[3] >= v39)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v43 = v84;
            if ((v35 & 1) != 0)
              goto LABEL_28;
          }
          else
          {
            sub_1BC70B280();
            v43 = v84;
            if ((v40 & 1) != 0)
              goto LABEL_28;
          }
        }
        else
        {
          sub_1BC7080B0(v39, isUniquelyReferenced_nonNull_native);
          v41 = sub_1BC7065B8(v31);
          if ((v40 & 1) != (v42 & 1))
            goto LABEL_56;
          v36 = v41;
          v43 = v84;
          if ((v40 & 1) != 0)
          {
LABEL_28:
            v48 = (_QWORD *)(v43[7] + 16 * v36);
            swift_unknownObjectRelease();
            *v48 = v28;
            v48[1] = v30;
            goto LABEL_29;
          }
        }
        v43[(v36 >> 6) + 8] |= 1 << v36;
        *(_QWORD *)(v43[6] + 8 * v36) = v31;
        v44 = (_QWORD *)(v43[7] + 16 * v36);
        *v44 = v28;
        v44[1] = v30;
        v45 = v43[2];
        v20 = __OFADD__(v45, 1);
        v46 = v45 + 1;
        if (v20)
          goto LABEL_52;
        v43[2] = v46;
        v47 = v31;
LABEL_29:
        v34[1] = v43;

        swift_bridgeObjectRelease();
        v84 = v28;
        sub_1BC817098();
        v49 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
        v49(v68, v78, v70);
        v50 = v31;
        v51 = v71;
        v52 = swift_isUniquelyReferenced_nonNull_native();
        v84 = v51;
        v53 = sub_1BC7065B8(v50);
        v55 = v53;
        v56 = v51[2];
        v57 = (v54 & 1) == 0;
        v58 = v56 + v57;
        if (__OFADD__(v56, v57))
          goto LABEL_54;
        v59 = v54;
        if (v51[3] >= v58)
        {
          if ((v52 & 1) != 0)
          {
            v62 = v84;
            if ((v54 & 1) != 0)
              goto LABEL_42;
          }
          else
          {
            sub_1BC70B050();
            v62 = v84;
            if ((v59 & 1) != 0)
              goto LABEL_42;
          }
        }
        else
        {
          sub_1BC707CEC(v58, v52);
          v60 = sub_1BC7065B8(v50);
          if ((v59 & 1) != (v61 & 1))
            goto LABEL_56;
          v55 = v60;
          v62 = v84;
          if ((v59 & 1) != 0)
          {
LABEL_42:
            (*(void (**)(unint64_t, char *, uint64_t))(v69 + 40))(v62[7] + *(_QWORD *)(v69 + 72) * v55, v68, v70);
            goto LABEL_43;
          }
        }
        v62[(v55 >> 6) + 8] |= 1 << v55;
        *(_QWORD *)(v62[6] + 8 * v55) = v50;
        v49((char *)(v62[7] + *(_QWORD *)(v69 + 72) * v55), v68, v70);
        v63 = v62[2];
        v20 = __OFADD__(v63, 1);
        v64 = v63 + 1;
        if (v20)
          goto LABEL_55;
        v62[2] = v64;
        v65 = v50;
LABEL_43:
        v71 = v84;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        a2 = v34;
        v15 = v81;
        v16 = v82;
        if (!v81)
          goto LABEL_7;
LABEL_6:
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
      }
    }
    v22 = v16 + 1;
    if (v16 + 1 >= v77)
      goto LABEL_49;
    v21 = *(_QWORD *)(v76 + 8 * v22);
    if (!v21)
    {
      v22 = v16 + 2;
      if (v16 + 2 >= v77)
        goto LABEL_49;
      v21 = *(_QWORD *)(v76 + 8 * v22);
      if (!v21)
      {
        v22 = v16 + 3;
        if (v16 + 3 < v77)
        {
          v21 = *(_QWORD *)(v76 + 8 * v22);
          if (v21)
            goto LABEL_16;
          while (1)
          {
            v16 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_53;
            if (v16 >= v77)
              break;
            v21 = *(_QWORD *)(v76 + 8 * v16);
            ++v22;
            if (v21)
              goto LABEL_17;
          }
        }
LABEL_49:
        swift_release();
        result = swift_bridgeObjectRelease();
        *a2 = v71;
        return result;
      }
    }
LABEL_16:
    v16 = v22;
    goto LABEL_17;
  }
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  type metadata accessor for HKFeatureIdentifier(0);
  result = sub_1BC8186E8();
  __break(1u);
  return result;
}

uint64_t sub_1BC712428(uint64_t a1, void *a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(os_unfair_lock_s **)(v2 + 72);
  v6 = v5 + 4;
  v7 = v5 + 8;
  os_unfair_lock_lock(v5 + 8);
  sub_1BC7124F8(v6, a2, a1, &v11);
  os_unfair_lock_unlock(v7);
  v8 = v11;
  swift_getObjectType();
  v11 = v8;
  sub_1BC6F0A44(&qword_1ED6B7DF8, v9, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatusInputSignal, (uint64_t)&protocol conformance descriptor for FeatureStatusInputSignal);
  sub_1BC817374();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC7124F8@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BC6ECA64(0, &qword_1ED6B9538, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  v11 = sub_1BC817050();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a3, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  sub_1BC7117B8((uint64_t)v10, a2);
  *a4 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC7125E4(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  id v9;
  id v10;
  uint64_t v11;

  v4 = sub_1BC817050();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = a2;
    sub_1BC81705C();
    v10 = objc_msgSend(a1, sel_featureIdentifier);
    sub_1BC712428((uint64_t)v7, v10);
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

id sub_1BC712788()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t FeatureStatusInputSignal.deinit()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t FeatureStatusInputSignal.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t (*FeatureStatusInputSignal.Anchor.featureStatusByIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t static FeatureStatusInputSignal.Anchor.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1BC701284(*a1, *a2);
}

uint64_t sub_1BC712868(uint64_t *a1, uint64_t *a2)
{
  return sub_1BC701284(*a1, *a2);
}

uint64_t FeatureStatusInputSignal.Configuration.init(featureIdentifiers:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t FeatureStatusInputSignal.Configuration.identifier.getter()
{
  return sub_1BC8173E0();
}

uint64_t FeatureStatusInputSignal.Configuration.featureIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeatureStatusInputSignal.Configuration.featureIdentifiers.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*FeatureStatusInputSignal.Configuration.featureIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t static FeatureStatusInputSignal.Configuration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1BC7039C8(*a1, *a2);
}

uint64_t FeatureStatusInputSignal.Configuration.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1BC70CFA4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t FeatureStatusInputSignal.Configuration.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BC81873C();
  sub_1BC70CFA4((uint64_t)v3, v1);
  return sub_1BC818778();
}

uint64_t sub_1BC712960(uint64_t *a1, uint64_t *a2)
{
  return sub_1BC7039C8(*a1, *a2);
}

uint64_t sub_1BC71296C()
{
  return sub_1BC8173E0();
}

uint64_t sub_1BC712988()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BC81873C();
  sub_1BC70CFA4((uint64_t)v3, v1);
  return sub_1BC818778();
}

uint64_t sub_1BC7129CC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BC70CFA4(a1, *v1);
}

uint64_t sub_1BC7129D4()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BC81873C();
  sub_1BC70CFA4((uint64_t)v3, v1);
  return sub_1BC818778();
}

uint64_t _s14HealthPlatform24FeatureStatusInputSignalC10identifier0A13Orchestration0eF10IdentifierVvgZ_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6B93C0 != -1)
    swift_once();
  v2 = sub_1BC8173EC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED6B93A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

Swift::Void __swiftcall FeatureStatusInputSignal.stopObservation()()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + 72);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1BC712AD8(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1BC712AD8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  sub_1BC7149E4(v2, (void (*)(id, uint64_t, uint64_t))sub_1BC7153A0);
  swift_bridgeObjectRelease();
  v3 = sub_1BC710408(MEMORY[0x1E0DEE9D8]);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = v3;
  return result;
}

uint64_t FeatureStatusInputSignal.beginObservation(from:configurations:)(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  os_unfair_lock_s *v5;
  unint64_t *p_os_unfair_lock_opaque;
  os_unfair_lock_s *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v4 = *a1;
  v5 = *(os_unfair_lock_s **)(v2 + 72);
  p_os_unfair_lock_opaque = (unint64_t *)&v5[4]._os_unfair_lock_opaque;
  v7 = v5 + 8;
  os_unfair_lock_lock(v5 + 8);
  sub_1BC712C1C(p_os_unfair_lock_opaque, v4, a2, &v11);
  os_unfair_lock_unlock(v7);
  v8 = v11;
  swift_getObjectType();
  v11 = v8;
  sub_1BC6F0A44(&qword_1ED6B7DF8, v9, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatusInputSignal, (uint64_t)&protocol conformance descriptor for FeatureStatusInputSignal);
  sub_1BC817374();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC712C1C@<X0>(unint64_t *a1@<X0>, unint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;

  v8 = swift_bridgeObjectRetain();
  sub_1BC7149E4(v8, (void (*)(id, uint64_t, uint64_t))sub_1BC7152C0);
  swift_bridgeObjectRelease();
  v9 = sub_1BC710408(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRelease();
  a1[1] = v9;
  if (a2)
    v10 = a2;
  else
    v10 = sub_1BC710530(MEMORY[0x1E0DEE9D8], sub_1BC7065B8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = v10;
  v11 = *(_QWORD *)(a3 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    v12 = 0;
    v13 = (void *)MEMORY[0x1E0DEE9E8];
    do
    {
      v14 = *(_QWORD *)(a3 + 8 * v12++ + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC79E1DC(v14, v13);
      v13 = v15;
      swift_bridgeObjectRelease();
    }
    while (v11 != v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = (void *)MEMORY[0x1E0DEE9E8];
  }
  sub_1BC711CB4((uint64_t)v13, a1);
  swift_bridgeObjectRelease();
  *a4 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC712D80()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1BC712DA8(unint64_t *a1, uint64_t a2)
{
  return FeatureStatusInputSignal.beginObservation(from:configurations:)(a1, a2);
}

void sub_1BC712DC8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 72);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1BC714C64(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1BC712E18(uint64_t a1, uint64_t a2)
{
  sub_1BC6F0A44(&qword_1ED6B7DF8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatusInputSignal, (uint64_t)&protocol conformance descriptor for FeatureStatusInputSignal);
  return sub_1BC8171AC();
}

uint64_t sub_1BC712E58(uint64_t a1, uint64_t *a2)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  void (*v28)(char *, uint64_t);
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  void **v45;
  void *v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char v51;
  uint64_t v52;
  char *v53;
  char *v54;
  id v55;
  int v56;
  _QWORD *v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  _BOOL8 v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  _QWORD *v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  id v70;
  id v71;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v73;
  char v74;
  unint64_t v75;
  uint64_t v76;
  _BOOL8 v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  unint64_t v86;
  char v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t result;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  int64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  void **v107;
  char *v108;
  int64_t v109;
  uint64_t v110;
  char *v111;
  _QWORD *v112;

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC6ECA64(0, &qword_1ED6B9538, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v98 = (char *)&v95 - v6;
  v7 = sub_1BC817050();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v100 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v108 = (char *)&v95 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v101 = (char *)&v95 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v104 = (char *)&v95 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v95 - v17;
  sub_1BC6ECA64(0, &qword_1ED6B9688, (uint64_t (*)(uint64_t))sub_1BC70FE24, v4);
  v20 = MEMORY[0x1E0C80A78](v19);
  v111 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v107 = (void **)((char *)&v95 - v22);
  v23 = *(_QWORD *)(a1 + 64);
  v99 = a1 + 64;
  v24 = -1 << *(_BYTE *)(a1 + 32);
  if (-v24 < 64)
    v25 = ~(-1 << -(char)v24);
  else
    v25 = -1;
  v26 = v25 & v23;
  v102 = (unint64_t)(63 - v24) >> 6;
  v96 = v102 - 1;
  v97 = v24;
  v105 = a1;
  swift_bridgeObjectRetain();
  v27 = 0;
  v106 = v18;
  while (1)
  {
    if (v26)
    {
      v110 = (v26 - 1) & v26;
      v30 = __clz(__rbit64(v26)) | (v27 << 6);
      v31 = v27;
      v32 = v111;
LABEL_10:
      v33 = *(_QWORD *)(v105 + 56);
      v34 = *(void **)(*(_QWORD *)(v105 + 48) + 8 * v30);
      *v32 = v34;
      v35 = v33 + *(_QWORD *)(v8 + 72) * v30;
      sub_1BC70FE24();
      v37 = v36;
      v38 = v35;
      v32 = v111;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(&v111[*(int *)(v36 + 48)], v38, v7);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v32, 0, 1, v37);
      v39 = v34;
      v40 = v31;
      goto LABEL_29;
    }
    v31 = v27 + 1;
    v32 = v111;
    if (__OFADD__(v27, 1))
      goto LABEL_66;
    v40 = v27;
    if (v31 < v102)
    {
      v41 = *(_QWORD *)(v99 + 8 * v31);
      if (v41)
        goto LABEL_14;
      v42 = v27 + 2;
      v40 = v27 + 1;
      if (v27 + 2 < v102)
      {
        v41 = *(_QWORD *)(v99 + 8 * v42);
        if (v41)
          goto LABEL_17;
        v40 = v27 + 2;
        if (v27 + 3 < v102)
        {
          v41 = *(_QWORD *)(v99 + 8 * (v27 + 3));
          if (v41)
          {
            v31 = v27 + 3;
            goto LABEL_14;
          }
          v42 = v27 + 4;
          v40 = v27 + 3;
          if (v27 + 4 < v102)
            break;
        }
      }
    }
LABEL_28:
    sub_1BC70FE24();
    v37 = v43;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v32, 1, 1, v43);
    v110 = 0;
LABEL_29:
    v44 = (uint64_t)v32;
    v45 = v107;
    sub_1BC715264(v44, (uint64_t)v107);
    sub_1BC70FE24();
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v45, 1, v37) == 1)
      return sub_1BC6ECC4C();
    v109 = v40;
    v46 = *v45;
    v47 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v47(v18, (char *)v45 + *(int *)(v37 + 48), v7);
    v48 = *a2;
    if (!*(_QWORD *)(*a2 + 16))
    {
      v50 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
LABEL_40:
      v50(v108, v18, v7);
      v71 = v46;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v112 = (_QWORD *)*a2;
      v73 = v112;
      *a2 = 0x8000000000000000;
      v75 = sub_1BC7065B8(v71);
      v76 = v73[2];
      v77 = (v74 & 1) == 0;
      v78 = v76 + v77;
      if (__OFADD__(v76, v77))
      {
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      v79 = v74;
      if (v73[3] >= v78)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v82 = v112;
          if ((v74 & 1) == 0)
            goto LABEL_47;
        }
        else
        {
          sub_1BC70B050();
          v82 = v112;
          if ((v79 & 1) == 0)
            goto LABEL_47;
        }
      }
      else
      {
        sub_1BC707CEC(v78, isUniquelyReferenced_nonNull_native);
        v80 = sub_1BC7065B8(v71);
        if ((v79 & 1) != (v81 & 1))
          goto LABEL_71;
        v75 = v80;
        v82 = v112;
        if ((v79 & 1) == 0)
        {
LABEL_47:
          v82[(v75 >> 6) + 8] |= 1 << v75;
          *(_QWORD *)(v82[6] + 8 * v75) = v71;
          v47((char *)(v82[7] + *(_QWORD *)(v8 + 72) * v75), v108, v7);
          v83 = v82[2];
          v68 = __OFADD__(v83, 1);
          v84 = v83 + 1;
          if (v68)
            goto LABEL_67;
          v82[2] = v84;
          v85 = v71;
          goto LABEL_6;
        }
      }
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 40))(v82[7] + *(_QWORD *)(v8 + 72) * v75, v108, v7);
LABEL_6:
      *a2 = (uint64_t)v112;

      swift_bridgeObjectRelease();
      v28 = *(void (**)(char *, uint64_t))(v8 + 8);
      v18 = v106;
      v29 = v109;
      v26 = v110;
      goto LABEL_7;
    }
    v49 = sub_1BC7065B8(v46);
    v50 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    if ((v51 & 1) == 0)
      goto LABEL_40;
    v52 = *(_QWORD *)(v48 + 56);
    v103 = *(_QWORD *)(v8 + 72);
    v53 = v101;
    v50(v101, (char *)(v52 + v103 * v49), v7);
    v54 = v104;
    v47(v104, v53, v7);
    sub_1BC6F0A44(&qword_1ED6B8E80, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], MEMORY[0x1E0D2BD40]);
    v55 = v46;
    if ((sub_1BC817AB8() & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v86 = sub_1BC7065B8(v55);
      v88 = v87;
      swift_bridgeObjectRelease();
      if ((v88 & 1) != 0)
      {
        v89 = swift_isUniquelyReferenced_nonNull_native();
        v90 = *a2;
        v112 = (_QWORD *)*a2;
        *a2 = 0x8000000000000000;
        v18 = v106;
        if ((v89 & 1) == 0)
        {
          sub_1BC70B050();
          v90 = (uint64_t)v112;
        }

        v91 = (uint64_t)v98;
        v47(v98, (char *)(*(_QWORD *)(v90 + 56) + v86 * v103), v7);
        sub_1BC71E9EC(v86, v90);
        *a2 = v90;
        swift_bridgeObjectRelease();
        v92 = 0;
      }
      else
      {
        v92 = 1;
        v91 = (uint64_t)v98;
        v18 = v106;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v91, v92, 1, v7);

      sub_1BC715030(v91, &qword_1ED6B9538, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30]);
      v93 = v104;
      goto LABEL_59;
    }
    v50(v100, v54, v7);
    v56 = swift_isUniquelyReferenced_nonNull_native();
    v112 = (_QWORD *)*a2;
    v57 = v112;
    *a2 = 0x8000000000000000;
    v59 = sub_1BC7065B8(v55);
    v60 = v57[2];
    v61 = (v58 & 1) == 0;
    v62 = v60 + v61;
    if (__OFADD__(v60, v61))
      goto LABEL_68;
    v63 = v58;
    if (v57[3] >= v62)
    {
      if ((v56 & 1) != 0)
      {
        v66 = v112;
        if ((v58 & 1) == 0)
          goto LABEL_37;
      }
      else
      {
        sub_1BC70B050();
        v66 = v112;
        if ((v63 & 1) == 0)
          goto LABEL_37;
      }
    }
    else
    {
      sub_1BC707CEC(v62, v56);
      v64 = sub_1BC7065B8(v55);
      if ((v63 & 1) != (v65 & 1))
        goto LABEL_71;
      v59 = v64;
      v66 = v112;
      if ((v63 & 1) == 0)
      {
LABEL_37:
        v66[(v59 >> 6) + 8] |= 1 << v59;
        *(_QWORD *)(v66[6] + 8 * v59) = v55;
        v47((char *)(v66[7] + v59 * v103), v100, v7);
        v67 = v66[2];
        v68 = __OFADD__(v67, 1);
        v69 = v67 + 1;
        if (v68)
          goto LABEL_69;
        v66[2] = v69;
        v70 = v55;
        goto LABEL_58;
      }
    }
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 40))(v66[7] + v59 * v103, v100, v7);
LABEL_58:
    *a2 = (uint64_t)v112;

    swift_bridgeObjectRelease();
    v93 = v104;
    v18 = v106;
LABEL_59:
    v29 = v109;
    v26 = v110;
    v28 = *(void (**)(char *, uint64_t))(v8 + 8);
    v28(v93, v7);
LABEL_7:
    v28(v18, v7);

    v27 = v29;
  }
  v41 = *(_QWORD *)(v99 + 8 * v42);
  if (v41)
  {
LABEL_17:
    v31 = v42;
LABEL_14:
    v110 = (v41 - 1) & v41;
    v30 = __clz(__rbit64(v41)) + (v31 << 6);
    goto LABEL_10;
  }
  while (1)
  {
    v31 = v42 + 1;
    if (__OFADD__(v42, 1))
      break;
    if (v31 >= v102)
    {
      v40 = v96;
      goto LABEL_28;
    }
    v41 = *(_QWORD *)(v99 + 8 * v31);
    ++v42;
    if (v41)
      goto LABEL_14;
  }
LABEL_70:
  __break(1u);
LABEL_71:
  type metadata accessor for HKFeatureIdentifier(0);
  result = sub_1BC8186E8();
  __break(1u);
  return result;
}

uint64_t FeatureStatusInputSignal.Anchor.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6B93C0 != -1)
    swift_once();
  v2 = sub_1BC8173EC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED6B93A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t FeatureStatusInputSignal.Anchor.merged(with:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = *a1;
  v6 = *v2;
  swift_bridgeObjectRetain();
  result = sub_1BC712E58(v4, &v6);
  *a2 = v6;
  return result;
}

uint64_t FeatureStatusInputSignal.Anchor.hasDifference(from:for:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  unint64_t *v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  unint64_t *v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;

  v5 = sub_1BC817050();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v57 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7141F0();
  v65 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &qword_1ED6B9538;
  sub_1BC6ECA64(0, &qword_1ED6B9538, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v14 = MEMORY[0x1E0C80A78](v13);
  v59 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v57 - v17;
  MEMORY[0x1E0C80A78](v16);
  v64 = *a1;
  v19 = *a2;
  v21 = (char *)&v57 - v20;
  v22 = *v2;
  v23 = *(_QWORD *)(v19 + 56);
  v60 = v19 + 56;
  v24 = 1 << *(_BYTE *)(v19 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v61 = (unint64_t)(v24 + 63) >> 6;
  v66 = v19;
  result = swift_bridgeObjectRetain();
  v28 = 0;
  v63 = v22;
  v58 = v21;
  while (1)
  {
    if (v26)
    {
      v67 = (v26 - 1) & v26;
      v29 = __clz(__rbit64(v26)) | (v28 << 6);
      goto LABEL_20;
    }
    v30 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v30 >= v61)
      goto LABEL_39;
    v31 = *(_QWORD *)(v60 + 8 * v30);
    ++v28;
    if (!v31)
    {
      v28 = v30 + 1;
      if (v30 + 1 >= v61)
        goto LABEL_39;
      v31 = *(_QWORD *)(v60 + 8 * v28);
      if (!v31)
      {
        v28 = v30 + 2;
        if (v30 + 2 >= v61)
          goto LABEL_39;
        v31 = *(_QWORD *)(v60 + 8 * v28);
        if (!v31)
          break;
      }
    }
LABEL_19:
    v67 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v28 << 6);
LABEL_20:
    v33 = *(void **)(*(_QWORD *)(v66 + 48) + 8 * v29);
    v34 = *(_QWORD *)(v22 + 16);
    v68 = v28;
    if (v34)
    {
      v35 = v33;
      v36 = sub_1BC7065B8(v35);
      if ((v37 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v21, *(_QWORD *)(v22 + 56) + *(_QWORD *)(v7 + 72) * v36, v5);
        v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        v38(v21, 0, 1, v5);
      }
      else
      {
        v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        v38(v21, 1, 1, v5);
      }

      v40 = v64;
      if (!v64)
        goto LABEL_30;
    }
    else
    {
      v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v38(v21, 1, 1, v5);
      v39 = v33;
      v40 = v64;
      if (!v64)
        goto LABEL_30;
    }
    if (*(_QWORD *)(v40 + 16))
    {
      v41 = v33;
      v42 = sub_1BC7065B8(v41);
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v18, *(_QWORD *)(v40 + 56) + *(_QWORD *)(v7 + 72) * v42, v5);
        v44 = v18;
        v45 = 0;
      }
      else
      {
        v44 = v18;
        v45 = 1;
      }
      v38(v44, v45, 1, v5);

      goto LABEL_33;
    }
LABEL_30:
    v38(v18, 1, 1, v5);
LABEL_33:
    v46 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30];
    v47 = (uint64_t)&v11[*(int *)(v65 + 48)];
    sub_1BC714268((uint64_t)v21, (uint64_t)v11);
    sub_1BC714268((uint64_t)v18, v47);
    v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (v48((uint64_t)v11, 1, v5) == 1)
    {

      sub_1BC715030((uint64_t)v18, v12, v46);
      sub_1BC715030((uint64_t)v21, v12, v46);
      if (v48(v47, 1, v5) != 1)
        goto LABEL_41;
      result = sub_1BC715030((uint64_t)v11, v12, v46);
      v22 = v63;
      v26 = v67;
      v28 = v68;
    }
    else
    {
      v49 = (uint64_t)v18;
      v50 = v12;
      v51 = v59;
      sub_1BC714268((uint64_t)v11, v59);
      if (v48(v47, 1, v5) == 1)
      {

        v56 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30];
        sub_1BC715030(v49, &qword_1ED6B9538, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30]);
        sub_1BC715030((uint64_t)v58, &qword_1ED6B9538, v56);
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v51, v5);
LABEL_41:
        sub_1BC7142C4((uint64_t)v11);
LABEL_42:
        swift_release();
        return 1;
      }
      v52 = v57;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v57, v47, v5);
      sub_1BC6F0A44(&qword_1ED6B8E80, 255, v46, MEMORY[0x1E0D2BD40]);
      v62 = sub_1BC817AB8();

      v53 = *(void (**)(char *, uint64_t))(v7 + 8);
      v53(v52, v5);
      v54 = v50;
      v18 = (char *)v49;
      sub_1BC715030(v49, v54, v46);
      v21 = v58;
      sub_1BC715030((uint64_t)v58, v54, v46);
      v55 = v51;
      v12 = v54;
      v53((char *)v55, v5);
      result = sub_1BC715030((uint64_t)v11, v54, v46);
      v22 = v63;
      v26 = v67;
      v28 = v68;
      if ((v62 & 1) == 0)
        goto LABEL_42;
    }
  }
  v32 = v30 + 3;
  if (v32 >= v61)
  {
LABEL_39:
    swift_release();
    return 0;
  }
  v31 = *(_QWORD *)(v60 + 8 * v32);
  if (v31)
  {
    v28 = v32;
    goto LABEL_19;
  }
  while (1)
  {
    v28 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v28 >= v61)
      goto LABEL_39;
    v31 = *(_QWORD *)(v60 + 8 * v28);
    ++v32;
    if (v31)
      goto LABEL_19;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1BC713D44@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = *a1;
  v6 = *v2;
  swift_bridgeObjectRetain();
  result = sub_1BC712E58(v4, &v6);
  *a2 = v6;
  return result;
}

unint64_t sub_1BC713D98()
{
  return 0xD000000000000019;
}

uint64_t sub_1BC713DB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC714B94(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BC713DDC()
{
  sub_1BC714358();
  return sub_1BC8187FC();
}

uint64_t sub_1BC713E04()
{
  sub_1BC714358();
  return sub_1BC818808();
}

uint64_t FeatureStatusInputSignal.Anchor.init(from:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;

  v4 = sub_1BC710530(MEMORY[0x1E0DEE9D8], sub_1BC7065B8);
  result = __swift_destroy_boxed_opaque_existential_0(a1);
  *a2 = v4;
  return result;
}

uint64_t FeatureStatusInputSignal.Anchor.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BC714300();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC714358();
  sub_1BC8187F0();
  sub_1BC818640();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BC713F54@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;

  v4 = sub_1BC710530(MEMORY[0x1E0DEE9D8], sub_1BC7065B8);
  result = __swift_destroy_boxed_opaque_existential_0(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_1BC713FA8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BC714300();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC714358();
  sub_1BC8187F0();
  sub_1BC818640();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

_QWORD *sub_1BC71407C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  _QWORD *v14;

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a4;
  v14 = (_QWORD *)swift_allocObject();
  return sub_1BC714118(a1, a2, a3, (uint64_t)sub_1BC715354, v13, v14, a6, a7);
}

_QWORD *sub_1BC714118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v15 = MEMORY[0x1E0DEE9D8];
  v16 = sub_1BC710530(MEMORY[0x1E0DEE9D8], sub_1BC7065B8);
  v17 = sub_1BC710408(v15);
  sub_1BC7152D4();
  v18 = swift_allocObject();
  *(_DWORD *)(v18 + 32) = 0;
  *(_QWORD *)(v18 + 16) = v16;
  *(_QWORD *)(v18 + 24) = v17;
  a6[8] = a3;
  a6[9] = v18;
  a6[3] = a4;
  a6[4] = a5;
  a6[5] = a1;
  a6[6] = a8;
  a6[7] = a2;
  a6[2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeatureStatusInputSignal.FeatureStatusObserver()), sel_init);
  swift_weakAssign();
  return a6;
}

void sub_1BC7141F0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6B9540)
  {
    sub_1BC6ECA64(255, &qword_1ED6B9538, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6B9540);
  }
}

uint64_t sub_1BC714268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6ECA64(0, &qword_1ED6B9538, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC7142C4(uint64_t a1)
{
  uint64_t v2;

  sub_1BC7141F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC714300()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B9758)
  {
    sub_1BC714358();
    v0 = sub_1BC81864C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B9758);
  }
}

unint64_t sub_1BC714358()
{
  unint64_t result;

  result = qword_1ED6B93E0;
  if (!qword_1ED6B93E0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81B2E4, &type metadata for FeatureStatusInputSignal.Anchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6B93E0);
  }
  return result;
}

unint64_t sub_1BC7143A0()
{
  unint64_t result;

  result = qword_1ED6B93C8;
  if (!qword_1ED6B93C8)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeatureStatusInputSignal.Configuration, &type metadata for FeatureStatusInputSignal.Configuration);
    atomic_store(result, (unint64_t *)&qword_1ED6B93C8);
  }
  return result;
}

unint64_t sub_1BC7143E8()
{
  unint64_t result;

  result = qword_1ED6B93D0;
  if (!qword_1ED6B93D0)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeatureStatusInputSignal.Configuration, &type metadata for FeatureStatusInputSignal.Configuration);
    atomic_store(result, (unint64_t *)&qword_1ED6B93D0);
  }
  return result;
}

uint64_t sub_1BC71442C(uint64_t a1, uint64_t a2)
{
  return sub_1BC6F0A44(&qword_1ED6B9438, a2, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatusInputSignal, (uint64_t)&protocol conformance descriptor for FeatureStatusInputSignal);
}

unint64_t sub_1BC71445C()
{
  unint64_t result;

  result = qword_1ED6B9400;
  if (!qword_1ED6B9400)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeatureStatusInputSignal.Anchor, &type metadata for FeatureStatusInputSignal.Anchor);
    atomic_store(result, (unint64_t *)&qword_1ED6B9400);
  }
  return result;
}

unint64_t sub_1BC7144A4()
{
  unint64_t result;

  result = qword_1ED6B9428;
  if (!qword_1ED6B9428)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeatureStatusInputSignal.Anchor, &type metadata for FeatureStatusInputSignal.Anchor);
    atomic_store(result, (unint64_t *)&qword_1ED6B9428);
  }
  return result;
}

unint64_t sub_1BC7144EC()
{
  unint64_t result;

  result = qword_1ED6B9410;
  if (!qword_1ED6B9410)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeatureStatusInputSignal.Anchor, &type metadata for FeatureStatusInputSignal.Anchor);
    atomic_store(result, (unint64_t *)&qword_1ED6B9410);
  }
  return result;
}

unint64_t sub_1BC714534()
{
  unint64_t result;

  result = qword_1ED6B9418;
  if (!qword_1ED6B9418)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeatureStatusInputSignal.Anchor, &type metadata for FeatureStatusInputSignal.Anchor);
    atomic_store(result, (unint64_t *)&qword_1ED6B9418);
  }
  return result;
}

unint64_t sub_1BC71457C()
{
  unint64_t result;

  result = qword_1EF45B110;
  if (!qword_1EF45B110)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeatureStatusInputSignal.Configuration, &type metadata for FeatureStatusInputSignal.Configuration);
    atomic_store(result, (unint64_t *)&qword_1EF45B110);
  }
  return result;
}

uint64_t method lookup function for FeatureStatusInputSignal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeatureStatusInputSignal.__allocating_init(context:observer:makeFeatureStatusManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t type metadata accessor for FeatureStatusInputSignal.FeatureStatusObserver()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for FeatureStatusInputSignal.Anchor()
{
  return &type metadata for FeatureStatusInputSignal.Anchor;
}

ValueMetadata *type metadata accessor for FeatureStatusInputSignal.Configuration()
{
  return &type metadata for FeatureStatusInputSignal.Configuration;
}

uint64_t destroy for FeatureStatusInputSignal.State()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14HealthPlatform24FeatureStatusInputSignalC5StateVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FeatureStatusInputSignal.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for FeatureStatusInputSignal.State(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureStatusInputSignal.State(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeatureStatusInputSignal.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusInputSignal.State()
{
  return &type metadata for FeatureStatusInputSignal.State;
}

uint64_t storeEnumTagSinglePayload for FeatureStatusInputSignal.Anchor.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC7147E0 + 4 * byte_1BC81AF60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC714800 + 4 * byte_1BC81AF65[v4]))();
}

_BYTE *sub_1BC7147E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC714800(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC714808(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC714810(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC714818(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC714820(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusInputSignal.Anchor.CodingKeys()
{
  return &type metadata for FeatureStatusInputSignal.Anchor.CodingKeys;
}

unint64_t sub_1BC714840()
{
  unint64_t result;

  result = qword_1EF45B188;
  if (!qword_1EF45B188)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81B2BC, &type metadata for FeatureStatusInputSignal.Anchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45B188);
  }
  return result;
}

unint64_t sub_1BC714888()
{
  unint64_t result;

  result = qword_1ED6B93F0;
  if (!qword_1ED6B93F0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81B22C, &type metadata for FeatureStatusInputSignal.Anchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6B93F0);
  }
  return result;
}

unint64_t sub_1BC7148D0()
{
  unint64_t result;

  result = qword_1ED6B93E8;
  if (!qword_1ED6B93E8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81B254, &type metadata for FeatureStatusInputSignal.Anchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6B93E8);
  }
  return result;
}

unint64_t sub_1BC714914(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1BC710070();
    v3 = (_QWORD *)sub_1BC818520();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_1BC7065B4(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 8 * result;
      *(_QWORD *)(v3[6] + v9) = v5;
      *(_QWORD *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

void sub_1BC7149E4(uint64_t a1, void (*a2)(id, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;

  v19 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v7)
      goto LABEL_23;
    v17 = *(_QWORD *)(v19 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v7)
        goto LABEL_23;
      v17 = *(_QWORD *)(v19 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v7)
          goto LABEL_23;
        v17 = *(_QWORD *)(v19 + 8 * v8);
        if (!v17)
        {
          v8 = v16 + 3;
          if (v16 + 3 >= v7)
            goto LABEL_23;
          v17 = *(_QWORD *)(v19 + 8 * v8);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v17 - 1) & v17;
    v10 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_5:
    v11 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v10);
    v13 = *v12;
    v14 = v12[1];
    v15 = v11;
    swift_unknownObjectRetain();
    a2(v15, v13, v14);
    swift_unknownObjectRelease();

  }
  v18 = v16 + 4;
  if (v18 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  v17 = *(_QWORD *)(v19 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v7)
      goto LABEL_23;
    v17 = *(_QWORD *)(v19 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1BC714B94(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000019 && a2 == 0x80000001BC8267E0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1BC818694();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1BC714C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1BC714C64(uint64_t a1)
{
  return sub_1BC712AD8(a1);
}

void sub_1BC714C7C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BC6ECA64(255, a3, a4, a5);
    v6 = sub_1BC81852C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC714CE4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_1BC81852C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC714D48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45B198)
  {
    type metadata accessor for ProgressUserInfoKey(255);
    sub_1BC6F0A44((unint64_t *)&unk_1ED6B8580, 255, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_1BC819EA4);
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45B198);
  }
}

uint64_t sub_1BC714DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC714E14();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC714E14()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF45B1A8)
  {
    type metadata accessor for ProgressUserInfoKey(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF45B1A8);
  }
}

uint64_t sub_1BC714E7C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  uint64_t v7;

  sub_1BC7151F4(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_1BC714ECC(uint64_t a1)
{
  sub_1BC715074(a1, &qword_1EF45B1C8, (uint64_t (*)(uint64_t))sub_1BC714EE8, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
}

void sub_1BC714EE8(uint64_t a1)
{
  sub_1BC715074(a1, &qword_1EF45B1D0, (uint64_t (*)(uint64_t))sub_1BC714F04, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
}

void sub_1BC714F04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B5E38)
  {
    v0 = sub_1BC817DC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B5E38);
  }
}

void sub_1BC714F60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B9720)
  {
    sub_1BC714FDC(255, (unint64_t *)&qword_1ED6B9638, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B9720);
  }
}

void sub_1BC714FDC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, _QWORD))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, MEMORY[0x1E0DEA968], a3, MEMORY[0x1E0DEA978]);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BC715030(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BC6ECA64(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BC715074(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, _QWORD, uint64_t, _QWORD))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, MEMORY[0x1E0DEA968], v7, MEMORY[0x1E0DEA978]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BC7150DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BC715138(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD, uint64_t, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEC198], MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEC1A0]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC715198(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BC7151F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BC715264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6ECA64(0, &qword_1ED6B9688, (uint64_t (*)(uint64_t))sub_1BC70FE24, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1BC7152C0(int a1, id a2)
{
  uint64_t v2;

  return objc_msgSend(a2, sel_unregisterObserver_, *(_QWORD *)(v2 + 16));
}

void sub_1BC7152D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8640)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8640);
  }
}

uint64_t sub_1BC715330()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC715354(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6730]), sel_initWithFeatureIdentifier_healthStore_countryCodeSource_, a1, *(_QWORD *)(v1 + 16), 1);
}

uint64_t NSOrderedSet.asLazyArray<A>(_:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  void *v5;
  uint64_t v6;

  *(_QWORD *)(swift_allocObject() + 16) = a2;
  sub_1BC71563C();
  sub_1BC6E1788(&qword_1ED6B8610, (uint64_t (*)(uint64_t))sub_1BC71563C, MEMORY[0x1E0DEC330]);
  v3 = v2;
  sub_1BC818550();
  swift_release();

  return v6;
}

uint64_t sub_1BC715470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v14[2];
  _QWORD v15[4];

  v6 = sub_1BC818130();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v14 - v8;
  sub_1BC6E1A84(a1, (uint64_t)v15);
  v10 = swift_dynamicCast();
  v11 = *(_QWORD *)(a2 - 8);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v10)
  {
    v12(v9, 0, 1, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v9, a2);
  }
  else
  {
    v12(v9, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1BC6E1A84(a1, (uint64_t)v15);
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    sub_1BC8182C8();
    sub_1BC817B48();
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    swift_getDynamicType();
    sub_1BC818814();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC715624()
{
  return swift_deallocObject();
}

uint64_t sub_1BC715634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC715470(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1BC71563C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B64E0)
  {
    sub_1BC7156B4();
    sub_1BC6E1788(&qword_1ED6B84A0, (uint64_t (*)(uint64_t))sub_1BC7156B4, MEMORY[0x1E0CB1D30]);
    v0 = sub_1BC8182EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B64E0);
  }
}

unint64_t sub_1BC7156B4()
{
  unint64_t result;

  result = qword_1ED6B84A8;
  if (!qword_1ED6B84A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B84A8);
  }
  return result;
}

uint64_t NSOrderedSet.asArray<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  NSOrderedSet.asLazyArray<A>(_:)(a1, a2);
  sub_1BC7156B4();
  sub_1BC6E1788(&qword_1ED6B84A0, (uint64_t (*)(uint64_t))sub_1BC7156B4, MEMORY[0x1E0CB1D30]);
  v2 = sub_1BC8183D0();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEC858], v2);
  return sub_1BC817D10();
}

uint64_t FeatureStatusFeedItemGeneratorPipeline.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  v6 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeatureStatusFeedItemGeneratorPipeline.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  return sub_1BC6ECB08(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
}

uint64_t type metadata accessor for FeatureStatusFeedItemGeneratorPipeline()
{
  uint64_t result;

  result = qword_1ED6B8A00;
  if (!qword_1ED6B8A00)
    return swift_getSingletonMetadata();
  return result;
}

id FeatureStatusFeedItemGeneratorPipeline.feedItemPredicate.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = v0 + *(int *)(type metadata accessor for FeatureStatusFeedItemGeneratorPipeline() + 24);
  v2 = *(id *)v1;
  sub_1BC7158A4(*(id *)v1, *(void **)(v1 + 8), *(void **)(v1 + 16), *(_BYTE *)(v1 + 24));
  return v2;
}

id sub_1BC7158A4(id result, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRetain();
    result = a3;
    return sub_1BC7158F8(result);
  }
  if (a4 != 2)
  {
    if (a4 != 1)
      return result;
    goto LABEL_6;
  }
  return sub_1BC7158F8(result);
}

id sub_1BC7158F8(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t sub_1BC71590C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;

  sub_1BC7186E0(0, &qword_1ED6B8CD8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960C0]);
  v17[1] = *(_QWORD *)(v1 - 8);
  v17[2] = v1;
  MEMORY[0x1E0C80A78](v1);
  v17[0] = (char *)v17 - v2;
  sub_1BC718748();
  v4 = v3;
  v18 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC817050();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  v20 = v0;
  (*(void (**)(_QWORD *__return_ptr))(v0 + *(int *)(v19 + 32)))(v22);
  __swift_project_boxed_opaque_existential_1(v22, v23);
  v11 = sub_1BC8170A4();
  __swift_project_boxed_opaque_existential_1(v22, v23);
  sub_1BC817098();
  v21 = v11;
  sub_1BC6ECA64(0, &qword_1ED6B8D58, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BC81A0F0;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 16))(v13 + v12, v10, v7);
  v14 = MEMORY[0x1E0C95D78];
  sub_1BC7186E0(0, &qword_1ED6B8C98, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC716D64(&qword_1ED6B8C90, &qword_1ED6B8C98, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v14, MEMORY[0x1E0C95D90]);
  sub_1BC8178F0();
  swift_bridgeObjectRelease();
  sub_1BC6E1788(&qword_1ED6B8B28, (uint64_t (*)(uint64_t))sub_1BC718748, MEMORY[0x1E0C95788]);
  v15 = sub_1BC817854();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  return v15;
}

uint64_t FeatureStatusFeedItemGeneratorPipeline.init(context:featureIdentifier:feedItemProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v20 = a4;
  v7 = type metadata accessor for GeneratorContext();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (void **)((char *)&v19 - v12);
  sub_1BC6ECB08(a1, (uint64_t)&v19 - v12, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  sub_1BC715FB8();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BC81A0F0;
  sub_1BC6FC700(a3, v14 + 32);
  sub_1BC6ECB08(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v15 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = (v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  sub_1BC6ECBA4((uint64_t)v11, v17 + v15, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  *(_QWORD *)(v17 + v16) = a2;
  sub_1BC7160D0(v13, v14, (uint64_t)sub_1BC7160CC, v17, v20);
  __swift_destroy_boxed_opaque_existential_0(a3);
  return sub_1BC6ED784(a1, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
}

void sub_1BC715FB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8720)
  {
    sub_1BC6FD528(255, &qword_1ED6B7F08);
    v0 = sub_1BC81867C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8720);
  }
}

void sub_1BC716020()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B5E50)
  {
    type metadata accessor for CountryRetrievalRecord();
    sub_1BC716088();
    v0 = sub_1BC8187D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B5E50);
  }
}

unint64_t sub_1BC716088()
{
  unint64_t result;

  result = qword_1ED6B5D60;
  if (!qword_1ED6B5D60)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for CountryRetrievalError, &type metadata for CountryRetrievalError);
    atomic_store(result, (unint64_t *)&qword_1ED6B5D60);
  }
  return result;
}

double sub_1BC7160D0@<D0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  void *v7;
  int64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double result;
  _QWORD *v41;
  void *v42;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  char v50;
  unint64_t v51;

  v5 = a2;
  v7 = *a1;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  v42 = *a1;
  if (v8)
  {
    v51 = MEMORY[0x1E0DEE9D8];
    v10 = v7;
    sub_1BC6E8B60(0, v8, 0);
    v11 = v5 + 32;
    v12 = v51;
    v13 = v8;
    do
    {
      sub_1BC6FC700(v11, (uint64_t)v47);
      v14 = v48;
      v15 = v49;
      __swift_project_boxed_opaque_existential_1(v47, v48);
      (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v15 + 24))(&v50, v14, v15);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
      v16 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC6E8B60(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v51;
      }
      v18 = *(_QWORD *)(v12 + 16);
      v17 = *(_QWORD *)(v12 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BC6E8B60(v17 > 1, v18 + 1, 1);
        v12 = v51;
      }
      *(_QWORD *)(v12 + 16) = v18 + 1;
      *(_BYTE *)(v12 + v18 + 32) = v16;
      v11 += 40;
      --v13;
    }
    while (v13);
    v5 = a2;
  }
  else
  {
    v19 = v7;
    v12 = MEMORY[0x1E0DEE9D8];
  }
  v20 = sub_1BC6EBB28(v12);
  swift_bridgeObjectRelease();
  v51 = v9;
  v21 = *(_QWORD *)(v5 + 16);
  if (v21)
  {
    v22 = v5 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1BC6FC700(v22, (uint64_t)v47);
      v23 = v48;
      v24 = v49;
      __swift_project_boxed_opaque_existential_1(v47, v48);
      v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
      sub_1BC8066A0(v25);
      v22 += 40;
      --v21;
    }
    while (v21);
    v5 = a2;
    swift_bridgeObjectRelease();
    v9 = v51;
  }
  v26 = sub_1BC6EAFB8(v9);
  swift_bridgeObjectRelease();
  *(_QWORD *)a5 = v42;
  *(_QWORD *)(a5 + 8) = v20;
  *(_QWORD *)(a5 + 16) = v26;
  *(_BYTE *)(a5 + 24) = 0;
  v27 = (int *)type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  sub_1BC6ECB08((uint64_t)a1, a5 + v27[5], (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v28 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v51 = MEMORY[0x1E0DEE9D8];
    sub_1BC6E8A7C(0, v8, 0);
    v29 = v5 + 32;
    v28 = v51;
    do
    {
      sub_1BC6FC700(v29, (uint64_t)v47);
      v30 = v48;
      v31 = v49;
      __swift_project_boxed_opaque_existential_1(v47, v48);
      v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
      v34 = v33;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC6E8A7C(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v28 = v51;
      }
      v36 = *(_QWORD *)(v28 + 16);
      v35 = *(_QWORD *)(v28 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_1BC6E8A7C(v35 > 1, v36 + 1, 1);
        v28 = v51;
      }
      *(_QWORD *)(v28 + 16) = v36 + 1;
      v37 = v28 + 16 * v36;
      *(_QWORD *)(v37 + 32) = v32;
      *(_QWORD *)(v37 + 40) = v34;
      v29 += 40;
      --v8;
    }
    while (v8);
    v5 = a2;
  }
  v38 = sub_1BC6EAD84(v28);
  swift_bridgeObjectRelease();
  sub_1BC6ED784((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v39 = a5 + v27[6];
  *(_QWORD *)v39 = v38;
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v39 + 8) = xmmword_1BC81B340;
  *(_BYTE *)(v39 + 24) = 0;
  *(_QWORD *)(a5 + v27[7]) = v5;
  v41 = (_QWORD *)(a5 + v27[8]);
  *v41 = a3;
  v41[1] = a4;
  return result;
}

uint64_t FeatureStatusFeedItemGeneratorPipeline.init(context:featureIdentifier:feedItemProviders:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void **v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v8 = type metadata accessor for GeneratorContext();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (void **)((char *)&v19 - v13);
  sub_1BC6ECB08(a1, (uint64_t)&v19 - v13, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  sub_1BC6ECB08(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = (v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  sub_1BC6ECBA4((uint64_t)v12, v17 + v15, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  *(_QWORD *)(v17 + v16) = a2;
  sub_1BC7160D0(v14, a3, (uint64_t)sub_1BC7160CC, v17, a4);
  return sub_1BC6ED784(a1, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
}

void sub_1BC716574(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t v18;

  v6 = (_QWORD *)(a1 + *(int *)(type metadata accessor for GeneratorContext() + 28));
  v7 = v6[3];
  v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  sub_1BC7183C8(a1);
  if (v10)
  {
    v11 = a2;
    v12 = v9;
    v13 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = a2;
    v15 = v9;
    v13 = 0;
  }
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6730]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, a2, v9, v13);

  v17 = sub_1BC7186A4();
  v18 = MEMORY[0x1E0D2C1E8];
  a3[3] = v17;
  a3[4] = v18;

  *a3 = v16;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  char *v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for GeneratorContext();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;

  v6 = (id *)(v0 + v3 + v1[5]);
  sub_1BC716020();
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = (char *)v6 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    v8 = sub_1BC816EF4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  __swift_destroy_boxed_opaque_existential_0(v5 + v1[7]);
  __swift_destroy_boxed_opaque_existential_0(v5 + v1[8]);

  return swift_deallocObject();
}

void sub_1BC716774(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for GeneratorContext() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1BC716574(v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t FeatureStatusFeedItemGeneratorPipeline.makeFeedItemsPublisher(change:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17[2];
  uint64_t v18;
  uint64_t v19;

  v18 = a1;
  v1 = sub_1BC817050();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  sub_1BC7169C8();
  v9 = v8;
  v19 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECB08(v17[1], (uint64_t)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FeatureStatusFeedItemGeneratorPipeline);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v18, v1);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = (v7 + *(unsigned __int8 *)(v2 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v14 = swift_allocObject();
  sub_1BC6ECBA4((uint64_t)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v12, (uint64_t (*)(_QWORD))type metadata accessor for FeatureStatusFeedItemGeneratorPipeline);
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v14 + v13, v4, v1);
  sub_1BC716A40();
  sub_1BC6E1788(&qword_1ED6B8128, (uint64_t (*)(uint64_t))sub_1BC716A40, MEMORY[0x1E0C95B60]);
  sub_1BC817824();
  sub_1BC6E1788((unint64_t *)&qword_1ED6B8370, (uint64_t (*)(uint64_t))sub_1BC7169C8, MEMORY[0x1E0C96148]);
  v15 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  return v15;
}

void sub_1BC7169C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8378)
  {
    sub_1BC716A40();
    sub_1BC6E1788(&qword_1ED6B8128, (uint64_t (*)(uint64_t))sub_1BC716A40, MEMORY[0x1E0C95B60]);
    v0 = sub_1BC817830();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8378);
  }
}

void sub_1BC716A40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8130)
  {
    sub_1BC716AB8();
    sub_1BC6E1788(&qword_1ED6B81C0, (uint64_t (*)(uint64_t))sub_1BC716AB8, MEMORY[0x1E0C95C80]);
    v0 = sub_1BC817668();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8130);
  }
}

void sub_1BC716AB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B81C8)
  {
    sub_1BC6ED4F0();
    sub_1BC6E1788(&qword_1ED6B8048, (uint64_t (*)(uint64_t))sub_1BC6ED4F0, MEMORY[0x1E0C95708]);
    v0 = sub_1BC817698();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B81C8);
  }
}

uint64_t sub_1BC716B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1BC716AB8();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FeatureStatusFeedItemGeneratorPipeline() + 28));
  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v10 = sub_1BC7EB3CC((void (*)(uint64_t))sub_1BC718350, (uint64_t)v12, v9);
  swift_bridgeObjectRelease();
  v15 = v10;
  sub_1BC6ED4F0();
  sub_1BC6ECA64(0, &qword_1ED6B83F8, (uint64_t (*)(uint64_t))sub_1BC6ED4F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC6E1788(&qword_1ED6B8048, (uint64_t (*)(uint64_t))sub_1BC6ED4F0, MEMORY[0x1E0C95708]);
  sub_1BC7188D8(&qword_1ED6B8400, &qword_1ED6B83F8, (uint64_t (*)(uint64_t))sub_1BC6ED4F0);
  sub_1BC8176A4();
  sub_1BC6E1788(&qword_1ED6B81C0, (uint64_t (*)(uint64_t))sub_1BC716AB8, MEMORY[0x1E0C95C80]);
  sub_1BC8178D8();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BC716CC8(void *a1, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRelease();
    a1 = a3;
    goto LABEL_7;
  }
  if (a4 != 2)
  {
    if (a4 != 1)
      return;
    goto LABEL_6;
  }
LABEL_7:
  sub_1BC716D1C(a1);
}

void sub_1BC716D1C(id a1)
{
  if (a1 != (id)1)

}

uint64_t sub_1BC716D30()
{
  return sub_1BC716D64(&qword_1ED6B8C90, &qword_1ED6B8C98, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78], MEMORY[0x1E0C95D90]);
}

uint64_t sub_1BC716D64(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC7186E0(255, a2, a3);
    result = MEMORY[0x1BCCF5AB4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC716DA4()
{
  return sub_1BC716DD8(&qword_1ED6B8CA0, &qword_1ED6B8CA8, &qword_1ED6B8D20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1BC716DD8(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC716E18(255, a2, a3, a4);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95D90], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC716E18(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC6ECA64(255, a3, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, a4);
    v5 = sub_1BC81771C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BC716E84(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  _QWORD v16[4];

  sub_1BC6ED584();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v13 = type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  v16[3] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32))(a2 + *(int *)(v13 + 20), a3, v12, v11);
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC716E18(0, (unint64_t *)&qword_1ED6B8C88, &qword_1ED6BAAD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BC716DD8(&qword_1ED6B8C80, (unint64_t *)&qword_1ED6B8C88, &qword_1ED6BAAD0, v14);
  sub_1BC8178A8();
  swift_release();
  type metadata accessor for PluginFeedItem();
  sub_1BC6E1788((unint64_t *)&unk_1ED6B80D0, (uint64_t (*)(uint64_t))sub_1BC6ED584, MEMORY[0x1E0C95A38]);
  sub_1BC817860();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BC717018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC71836C(a1, a2);
}

uint64_t sub_1BC717020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC6ECB08(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
}

id sub_1BC717048(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v2 = v1 + *(int *)(a1 + 24);
  v3 = *(id *)v2;
  sub_1BC7158A4(*(id *)v2, *(void **)(v2 + 8), *(void **)(v2 + 16), *(_BYTE *)(v2 + 24));
  return v3;
}

uint64_t sub_1BC7170A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC71590C();
  *a1 = result;
  return result;
}

uint64_t sub_1BC7170C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v5 = v3;
  v23 = a1;
  v25 = a3;
  v6 = sub_1BC817050();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v9);
  sub_1BC7169C8();
  v14 = v13;
  v24 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECB08(v5, (uint64_t)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FeatureStatusFeedItemGeneratorPipeline);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v23, v6);
  v17 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v18 = (v12 + *(unsigned __int8 *)(v7 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v19 = swift_allocObject();
  sub_1BC6ECBA4((uint64_t)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v17, (uint64_t (*)(_QWORD))type metadata accessor for FeatureStatusFeedItemGeneratorPipeline);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v19 + v18, v10, v6);
  sub_1BC716A40();
  sub_1BC6E1788(&qword_1ED6B8128, (uint64_t (*)(uint64_t))sub_1BC716A40, MEMORY[0x1E0C95B60]);
  sub_1BC817824();
  sub_1BC6E1788((unint64_t *)&qword_1ED6B8370, (uint64_t (*)(uint64_t))sub_1BC7169C8, MEMORY[0x1E0C96148]);
  v20 = sub_1BC817854();
  result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v16, v14);
  *v25 = v20;
  return result;
}

uint64_t sub_1BC7172C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  v6 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

char *initializeBufferWithCopyOfBuffer for FeatureStatusFeedItemGeneratorPipeline(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  void *v33;
  void *v34;
  char v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  int *v42;
  char *v43;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v6 = a1;
    v7 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v7;
    a1[24] = *((_BYTE *)a2 + 24);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = *(char **)((char *)a2 + v8);
    *(_QWORD *)&a1[v8] = v11;
    v42 = (int *)type metadata accessor for GeneratorContext();
    v43 = v9;
    v12 = v42[5];
    v13 = &v9[v12];
    v14 = v10 + v12;
    sub_1BC716020();
    v15 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = *(void **)v14;
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v18 = v17;
    }
    else
    {
      v19 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = v19;
      *((_QWORD *)v13 + 2) = *(_QWORD *)(v14 + 16);
      v20 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
      v21 = &v13[v20];
      v22 = v14 + v20;
      v23 = sub_1BC816EF4();
      v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v21, v22, v23);
    }
    swift_storeEnumTagMultiPayload();
    v43[v42[6]] = *(_BYTE *)(v10 + v42[6]);
    v25 = v42[7];
    v26 = *(_OWORD *)(v10 + v25 + 24);
    *(_OWORD *)&v43[v25 + 24] = v26;
    (**(void (***)(void))(v26 - 8))();
    v27 = v42[8];
    v28 = *(_OWORD *)(v10 + v27 + 24);
    *(_OWORD *)&v43[v27 + 24] = v28;
    (**(void (***)(void))(v28 - 8))();
    v29 = a3[6];
    v30 = &v6[v29];
    v31 = (uint64_t)a2 + v29;
    v32 = *(id *)v31;
    v33 = *(void **)(v31 + 8);
    v34 = *(void **)(v31 + 16);
    v35 = *(_BYTE *)(v31 + 24);
    sub_1BC7158A4(*(id *)v31, v33, v34, v35);
    *(_QWORD *)v30 = v32;
    *((_QWORD *)v30 + 1) = v33;
    *((_QWORD *)v30 + 2) = v34;
    v30[24] = v35;
    v36 = a3[8];
    *(_QWORD *)&v6[a3[7]] = *(char **)((char *)a2 + a3[7]);
    v37 = &v6[v36];
    v38 = (char **)((char *)a2 + v36);
    v39 = v38[1];
    *(_QWORD *)v37 = *v38;
    *((_QWORD *)v37 + 1) = v39;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v6;
}

uint64_t destroy for FeatureStatusFeedItemGeneratorPipeline(id *a1, uint64_t a2)
{
  id *v4;
  int *v5;
  id *v6;
  char *v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (id *)((char *)a1 + *(int *)(a2 + 20));

  v5 = (int *)type metadata accessor for GeneratorContext();
  v6 = (id *)((char *)v4 + v5[5]);
  sub_1BC716020();
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = (char *)v6 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    v8 = sub_1BC816EF4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4 + v5[7]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4 + v5[8]);
  sub_1BC716CC8(*(id *)((char *)a1 + *(int *)(a2 + 24)), *(id *)((char *)a1 + *(int *)(a2 + 24) + 8), *(id *)((char *)a1 + *(int *)(a2 + 24) + 16), *((_BYTE *)a1 + *(int *)(a2 + 24) + 24));
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for FeatureStatusFeedItemGeneratorPipeline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  int *v40;

  v6 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v10;
  v40 = (int *)type metadata accessor for GeneratorContext();
  v11 = v40[5];
  v12 = (_QWORD *)(v8 + v11);
  v13 = v9 + v11;
  sub_1BC716020();
  v14 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = *(void **)v13;
    *v12 = *(_QWORD *)v13;
    v17 = v16;
  }
  else
  {
    v18 = *(_QWORD *)(v13 + 8);
    *v12 = *(_QWORD *)v13;
    v12[1] = v18;
    v12[2] = *(_QWORD *)(v13 + 16);
    v19 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    v20 = (char *)v12 + v19;
    v21 = v13 + v19;
    v22 = sub_1BC816EF4();
    v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
  }
  swift_storeEnumTagMultiPayload();
  *(_BYTE *)(v8 + v40[6]) = *(_BYTE *)(v9 + v40[6]);
  v24 = v40[7];
  v25 = *(_OWORD *)(v9 + v24 + 24);
  *(_OWORD *)(v8 + v24 + 24) = v25;
  (**(void (***)(void))(v25 - 8))();
  v26 = v40[8];
  v27 = *(_OWORD *)(v9 + v26 + 24);
  *(_OWORD *)(v8 + v26 + 24) = v27;
  (**(void (***)(void))(v27 - 8))();
  v28 = a3[6];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(id *)v30;
  v32 = *(void **)(v30 + 8);
  v33 = *(void **)(v30 + 16);
  v34 = *(_BYTE *)(v30 + 24);
  sub_1BC7158A4(*(id *)v30, v32, v33, v34);
  *(_QWORD *)v29 = v31;
  *(_QWORD *)(v29 + 8) = v32;
  *(_QWORD *)(v29 + 16) = v33;
  *(_BYTE *)(v29 + 24) = v34;
  v35 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FeatureStatusFeedItemGeneratorPipeline(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  char v31;
  void *v32;
  void *v33;
  void *v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(void **)(a1 + v9);
  v13 = *(void **)(a2 + v9);
  *v10 = v13;
  v14 = v13;

  v15 = type metadata accessor for GeneratorContext();
  v16 = (int *)v15;
  if (a1 != a2)
  {
    v17 = *(int *)(v15 + 20);
    v18 = (_QWORD *)((char *)v10 + v17);
    v19 = v11 + v17;
    sub_1BC6ED784((uint64_t)v10 + v17, (uint64_t (*)(_QWORD))sub_1BC716020);
    sub_1BC716020();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = *(void **)v19;
      *v18 = *(_QWORD *)v19;
      v21 = v20;
    }
    else
    {
      *v18 = *(_QWORD *)v19;
      v18[1] = *(_QWORD *)(v19 + 8);
      v18[2] = *(_QWORD *)(v19 + 16);
      v22 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
      v41 = v19 + v22;
      v42 = (char *)v18 + v22;
      v23 = sub_1BC816EF4();
      v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v42, v41, v23);
    }
    swift_storeEnumTagMultiPayload();
  }
  *((_BYTE *)v10 + v16[6]) = *(_BYTE *)(v11 + v16[6]);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)v10 + v16[7]), (uint64_t *)(v11 + v16[7]));
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)v10 + v16[8]), (uint64_t *)(v11 + v16[8]));
  v25 = a3[6];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(id *)v27;
  v29 = *(void **)(v27 + 8);
  v30 = *(void **)(v27 + 16);
  v31 = *(_BYTE *)(v27 + 24);
  sub_1BC7158A4(*(id *)v27, v29, v30, v31);
  v32 = *(void **)v26;
  v33 = *(void **)(v26 + 8);
  v34 = *(void **)(v26 + 16);
  *(_QWORD *)v26 = v28;
  *(_QWORD *)(v26 + 8) = v29;
  *(_QWORD *)(v26 + 16) = v30;
  v35 = *(_BYTE *)(v26 + 24);
  *(_BYTE *)(v26 + 24) = v31;
  sub_1BC716CC8(v32, v33, v34, v35);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36 = a3[8];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (_QWORD *)(a2 + v36);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

_OWORD *initializeWithTake for FeatureStatusFeedItemGeneratorPipeline(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for GeneratorContext();
  v10 = v9[5];
  v11 = &v7[v10];
  v12 = &v8[v10];
  sub_1BC716020();
  v14 = v13;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
    *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
    v15 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    v16 = &v11[v15];
    v17 = &v12[v15];
    v18 = sub_1BC816EF4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  v7[v9[6]] = v8[v9[6]];
  v19 = v9[7];
  v20 = &v7[v19];
  v21 = &v8[v19];
  v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
  v23 = v9[8];
  v24 = &v7[v23];
  v25 = &v8[v23];
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
  v27 = a3[6];
  v28 = a3[7];
  v29 = (_OWORD *)((char *)a1 + v27);
  v30 = (_OWORD *)((char *)a2 + v27);
  *v29 = *v30;
  *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)((char *)v30 + 9);
  *(_QWORD *)((char *)a1 + v28) = *(_QWORD *)((char *)a2 + v28);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for FeatureStatusFeedItemGeneratorPipeline(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void *v35;
  void *v36;
  void *v37;
  char v38;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = *(void **)(a1 + v7);
  *v8 = *v9;

  v11 = type metadata accessor for GeneratorContext();
  v12 = (int *)v11;
  if (a1 != a2)
  {
    v13 = *(int *)(v11 + 20);
    v14 = (_QWORD *)((char *)v8 + v13);
    v15 = (_QWORD *)((char *)v9 + v13);
    sub_1BC6ED784((uint64_t)v8 + v13, (uint64_t (*)(_QWORD))sub_1BC716020);
    sub_1BC716020();
    v17 = v16;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v14 = *(_OWORD *)v15;
      v14[2] = v15[2];
      v18 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
      v19 = (char *)v14 + v18;
      v20 = (char *)v15 + v18;
      v21 = sub_1BC816EF4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      swift_storeEnumTagMultiPayload();
    }
  }
  *((_BYTE *)v8 + v12[6]) = *((_BYTE *)v9 + v12[6]);
  v22 = v12[7];
  v23 = (char *)v8 + v22;
  v24 = (char *)v9 + v22;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8 + v22);
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
  v26 = v12[8];
  v27 = (char *)v8 + v26;
  v28 = (char *)v9 + v26;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8 + v26);
  v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v29;
  *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
  v30 = a3[6];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_QWORD *)(v32 + 16);
  v34 = *(_BYTE *)(v32 + 24);
  v35 = *(void **)v31;
  v36 = *(void **)(v31 + 8);
  v37 = *(void **)(v31 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_QWORD *)(v31 + 16) = v33;
  v38 = *(_BYTE *)(v31 + 24);
  *(_BYTE *)(v31 + 24) = v34;
  sub_1BC716CC8(v35, v36, v37, v38);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureStatusFeedItemGeneratorPipeline()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC717F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GeneratorContext();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FeatureStatusFeedItemGeneratorPipeline()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC71800C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GeneratorContext();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BC718080()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GeneratorContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of FeatureStatusFeedItemProvider.feedItemIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeatureStatusFeedItemProvider.associatedHKTypes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeatureStatusFeedItemProvider.contentKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeatureStatusFeedItemProvider.makeFeedItemPublisher(context:featureStatus:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of FeatureStatusFeedItemProvider.featureAutomationIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t objectdestroy_5Tm_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  int *v7;
  id *v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v12 = *(_QWORD *)(v2 + 64);
  v13 = sub_1BC817050();
  v4 = *(_QWORD *)(v13 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (id *)(v0 + v3 + *(int *)(v1 + 20));

  v7 = (int *)type metadata accessor for GeneratorContext();
  v8 = (id *)((char *)v6 + v7[5]);
  sub_1BC716020();
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = (char *)v8 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    v10 = sub_1BC816EF4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6 + v7[7]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6 + v7[8]);
  sub_1BC716CC8(*(void **)(v0 + v3 + *(int *)(v1 + 24)), *(void **)(v0 + v3 + *(int *)(v1 + 24) + 8), *(void **)(v0 + v3 + *(int *)(v1 + 24) + 16), *(_BYTE *)(v0 + v3 + *(int *)(v1 + 24) + 24));
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v3 + v12 + v5) & ~v5), v13);
  return swift_deallocObject();
}

uint64_t sub_1BC7182E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for FeatureStatusFeedItemGeneratorPipeline() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC817050() - 8) + 80);
  return sub_1BC716B30(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_1BC718350(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BC716E84(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC71836C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6ECA64(0, &qword_1ED6BAAD0, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC7183C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v2 = type metadata accessor for CountryRetrievalRecord();
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC716020();
  MEMORY[0x1E0C80A78](v5);
  v7 = (void **)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for GeneratorContext();
  sub_1BC6ECB08(a1 + *(int *)(v8 + 20), (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC716020);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = *v7;
    if (qword_1ED6BB338 != -1)
      swift_once();
    v10 = sub_1BC817590();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED6BB320);
    v11 = v9;
    v12 = sub_1BC81756C();
    v13 = sub_1BC817E84();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v22 = v15;
      *(_DWORD *)v14 = 136446466;
      v21 = sub_1BC6E14D8(0xD000000000000026, 0x80000001BC81B380, &v22);
      sub_1BC818148();
      *(_WORD *)(v14 + 12) = 2082;
      v21 = (uint64_t)v9;
      v16 = v11;
      v17 = sub_1BC817AF4();
      v21 = sub_1BC6E14D8(v17, v18, &v22);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v12, v13, "[%{public}s] Failed to get country code: %{public}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v15, -1, -1);
      MEMORY[0x1BCCF5BA4](v14, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  else
  {
    sub_1BC6ECBA4((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for CountryRetrievalRecord);
    v19 = *v4;
    swift_bridgeObjectRetain();
    sub_1BC6ED784((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for CountryRetrievalRecord);
  }
  return v19;
}

unint64_t sub_1BC7186A4()
{
  unint64_t result;

  result = qword_1ED6B8D38;
  if (!qword_1ED6B8D38)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B8D38);
  }
  return result;
}

void sub_1BC7186E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC817050();
    v7 = a3(a1, v6, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BC718748()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6B8B30[0])
  {
    sub_1BC718824();
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC7186E0(255, &qword_1ED6B8C98, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC6E1788(&qword_1ED6B8C70, (uint64_t (*)(uint64_t))sub_1BC718824, MEMORY[0x1E0C95C10]);
    sub_1BC716D64(&qword_1ED6B8C90, &qword_1ED6B8C98, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC8175E4();
    if (!v2)
      atomic_store(v1, qword_1ED6B8B30);
  }
}

void sub_1BC718824()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6B8C78)
  {
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30];
    sub_1BC6ECA64(255, &qword_1ED6B8D28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC7188D8(&qword_1ED6B8D30, &qword_1ED6B8D28, v0);
    v1 = sub_1BC81768C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6B8C78);
  }
}

uint64_t sub_1BC7188D8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC6ECA64(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

id FeedSection.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id FeedSection.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for FeedSection();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for FeedSection()
{
  return objc_opt_self();
}

id FeedSection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedSection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t Atomic.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  Atomic.init(_:)(a1);
  return v2;
}

uint64_t *Atomic.init(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 96);
  type metadata accessor for UnfairLock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v5 + 16) = v6;
  *v6 = 0;
  *(uint64_t *)((char *)v1 + v4) = v5;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))((uint64_t)v1 + *(_QWORD *)(*v1 + 88), a1);
  return v1;
}

uint64_t Atomic.value.getter()
{
  type metadata accessor for UnfairLock();
  sub_1BC718F04();
  swift_retain();
  sub_1BC817080();
  return swift_release();
}

uint64_t Atomic.mutate(_:)()
{
  type metadata accessor for UnfairLock();
  sub_1BC718F04();
  swift_retain();
  sub_1BC81708C();
  return swift_release();
}

uint64_t Atomic.mutateAndReturn<A>(_:)()
{
  type metadata accessor for UnfairLock();
  sub_1BC718F04();
  swift_retain();
  sub_1BC817080();
  return swift_release();
}

uint64_t Atomic.mutateReturningPrevious(_:)()
{
  type metadata accessor for UnfairLock();
  sub_1BC718F04();
  swift_retain();
  sub_1BC817080();
  return swift_release();
}

uint64_t sub_1BC718D78@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *a1;
  v6 = (uint64_t)a1 + *(_QWORD *)(*a1 + 88);
  swift_beginAccess();
  v7 = *(_QWORD *)(v5 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a3, v6, v7);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v6, a2, v7);
  return swift_endAccess();
}

uint64_t Atomic.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  swift_release();
  return v0;
}

uint64_t Atomic.__deallocating_deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC718EA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 88);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

unint64_t sub_1BC718F04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6BA6F0;
  if (!qword_1ED6BA6F0)
  {
    v1 = type metadata accessor for UnfairLock();
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for UnfairLock, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6BA6F0);
  }
  return result;
}

uint64_t sub_1BC718F4C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32) + *(_QWORD *)(**(_QWORD **)(v0 + 32) + 88);
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

uint64_t sub_1BC718FB0()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40) + *(_QWORD *)(**(_QWORD **)(v0 + 40) + 88);
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

uint64_t sub_1BC71901C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC718D78(*(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1BC719024()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for Atomic(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Atomic);
}

uint64_t method lookup function for Atomic()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Atomic.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t IgnoreEquality.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t IgnoreEquality.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*IgnoreEquality.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t IgnoreEquality.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t static IgnoreEquality.== infix(_:_:)()
{
  return 1;
}

uint64_t IgnoreEquality.hashValue.getter()
{
  sub_1BC81873C();
  return sub_1BC818778();
}

uint64_t sub_1BC71915C()
{
  sub_1BC81873C();
  return sub_1BC818778();
}

uint64_t sub_1BC719190()
{
  sub_1BC81873C();
  return sub_1BC818778();
}

void sub_1BC7191C0()
{
  JUMPOUT(0x1BCCF5AB4);
}

uint64_t sub_1BC7191D0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC7191D8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BC719244(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1BC7192B4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1BC7192C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1BC7192F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1BC719324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1BC719354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1BC719384(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BC719434 + 4 * byte_1BC81B468[(v7 - 1)]))();
}

void sub_1BC719484(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for IgnoreEquality(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IgnoreEquality);
}

uint64_t sub_1BC719640(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

_QWORD *sub_1BC71966C(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v9;

  sub_1BC71A0E8();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_1BC71A13C(a1, (uint64_t)v6);
  v7 = DiskHealthExperienceStore.init(overrideStoreLocation:observeExternalChanges:)((uint64_t)v6, a2);
  swift_retain();
  sub_1BC757FDC();
  swift_release();
  sub_1BC71A180(a1);
  return v7;
}

id sub_1BC719718()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  word_1ED6B7C68 = 257;
  qword_1ED6B7C50 = 0xD00000000000002ALL;
  *(_QWORD *)algn_1ED6B7C58 = 0x80000001BC8268F0;
  qword_1ED6B7C60 = (uint64_t)result;
  return result;
}

void sub_1BC719778()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  os_unfair_lock_s *v4;
  uint64_t *v5;
  os_unfair_lock_s *v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD aBlock[7];

  v1 = *v0;
  v2 = (void *)sub_1BC817AC4();
  v3 = objc_msgSend((id)objc_opt_self(), sel_transactionWithName_, v2);

  v4 = (os_unfair_lock_s *)v0[4];
  v5 = (uint64_t *)&v4[4];
  v6 = v4 + 6;
  os_unfair_lock_lock(v4 + 6);
  sub_1BC7ABE54(v5, aBlock);
  os_unfair_lock_unlock(v6);
  v7 = (void *)aBlock[0];
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v7;
  v8[3] = v3;
  v8[4] = v1;
  aBlock[4] = sub_1BC71A09C;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC719640;
  aBlock[3] = &block_descriptor_4;
  v9 = _Block_copy(aBlock);
  v10 = v7;
  v11 = v3;
  swift_release();
  objc_msgSend(v10, sel_performBlock_, v9);
  _Block_release(v9);

}

id sub_1BC7198D4(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  void *v8;
  id v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  char **v17;
  uint64_t v18;
  os_log_type_t v19;

  if (qword_1ED6B62E8 != -1)
    swift_once();
  v5 = qword_1ED6B7C50;
  v4 = *(_QWORD *)algn_1ED6B7C58;
  v6 = (void *)qword_1ED6B7C60;
  v7 = word_1ED6B7C68;
  if (HIBYTE(word_1ED6B7C68) == 1)
  {
    v8 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v9 = v6;
    if ((objc_msgSend(v8, sel_isAppleInternalInstall) & 1) == 0)
    {

      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        goto LABEL_11;
LABEL_16:
      if (qword_1ED6BB1F8 != -1)
        swift_once();
      v18 = sub_1BC817590();
      __swift_project_value_buffer(v18, (uint64_t)qword_1ED6BB228);
      v14 = sub_1BC81756C();
      v19 = sub_1BC817E9C();
      if (!os_log_type_enabled(v14, v19))
      {
        v17 = &selRef_refreshAllObjects;
        goto LABEL_23;
      }
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1BC6DD000, v14, v19, "DaemonHealthExperienceStore - cleanUpManagedObjectContext - refreshAllObjects", v16, 2u);
      v17 = &selRef_refreshAllObjects;
      goto LABEL_20;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v10 = v6;
  }
  v11 = sub_1BC758228(v5, v4, v6);

  swift_bridgeObjectRelease();
  if (v11 == 2)
    v12 = v7;
  else
    v12 = v11;
  if ((v12 & 1) == 0)
    goto LABEL_16;
LABEL_11:
  if (qword_1ED6BB1F8 != -1)
    swift_once();
  v13 = sub_1BC817590();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED6BB228);
  v14 = sub_1BC81756C();
  v15 = sub_1BC817E9C();
  if (!os_log_type_enabled(v14, v15))
  {
    v17 = &selRef_reset;
    goto LABEL_23;
  }
  v16 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v16 = 0;
  _os_log_impl(&dword_1BC6DD000, v14, v15, "DaemonHealthExperienceStore - cleanUpManagedObjectContext - reset", v16, 2u);
  v17 = &selRef_reset;
LABEL_20:
  MEMORY[0x1BCCF5BA4](v16, -1, -1);
LABEL_23:

  objc_msgSend(a1, *v17);
  return objc_msgSend(a2, sel_invalidate);
}

uint64_t DaemonHealthExperienceStore.deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BC719BC8(a1, (void (*)(uint64_t))type metadata accessor for DaemonHealthExperienceStore, &qword_1ED6B7C70, a4);
  swift_release();
  swift_release();

  return v4;
}

void sub_1BC719BAC()
{
  sub_1BC719BC8(0, (void (*)(uint64_t))type metadata accessor for DaemonHealthExperienceStoreOracle, &qword_1ED6B62F0, 255);
}

void sub_1BC719BC8(uint64_t a1, void (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;

  v9 = v4;
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v10 = sub_1BC817590();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED6BB5D0);
  v11 = sub_1BC81756C();
  v12 = sub_1BC817E6C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v18 = v14;
    *(_DWORD *)v13 = 136315138;
    a2(a1);
    sub_1BC71A1BC(0, a3, a4, a2);
    v15 = sub_1BC817AF4();
    sub_1BC6E14D8(v15, v16, &v18);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v11, v12, "[%s] deregisterForDebuggingRequests()", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v14, -1, -1);
    MEMORY[0x1BCCF5BA4](v13, -1, -1);
  }

  v17 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1ED6B8530 != -1)
    swift_once();
  objc_msgSend(v17, sel_removeObserver_name_object_, v9, qword_1ED6B8528, 0);

}

uint64_t DaemonHealthExperienceStore.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BC719BC8(a1, (void (*)(uint64_t))type metadata accessor for DaemonHealthExperienceStore, &qword_1ED6B7C70, a4);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

void DaemonHealthExperienceStore.debuggingInfoRequested(note:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  NSObject *oslog;
  uint64_t v9;
  uint64_t v10;

  v1 = *v0;
  if (qword_1ED6BB1F8 != -1)
    swift_once();
  v2 = sub_1BC817590();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED6BB228);
  oslog = sub_1BC81756C();
  v3 = sub_1BC817E9C();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v9 = v5;
    v10 = v1;
    *(_DWORD *)v4 = 136315138;
    swift_getMetatypeMetadata();
    v6 = sub_1BC817AF4();
    v10 = sub_1BC6E14D8(v6, v7, &v9);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, oslog, v3, "[%s]: debuggingInfoRequested()", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v5, -1, -1);
    MEMORY[0x1BCCF5BA4](v4, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1BC71A070()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC71A09C()
{
  uint64_t v0;

  return sub_1BC7198D4(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t type metadata accessor for DaemonHealthExperienceStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for DaemonHealthExperienceStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DaemonHealthExperienceStore.cleanUpManagedObjectContext()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

void sub_1BC71A0E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BA290)
  {
    sub_1BC816E40();
    v0 = sub_1BC818130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BA290);
  }
}

uint64_t sub_1BC71A13C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC71A0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC71A180(uint64_t a1)
{
  uint64_t v2;

  sub_1BC71A0E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC71A1BC(uint64_t a1, unint64_t *a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    a4(a3);
    result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t ProxyPublisherDelegate.publisher.getter()
{
  swift_unknownObjectRetain();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t Publishers.Proxy.init(delegate:)()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t Publishers.Proxy.receive<A>(subscriber:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[6];

  v5 = v4;
  v18 = a1;
  v19 = a4;
  v9 = a2[4];
  v8 = a2[5];
  v10 = a2[3];
  swift_getAssociatedConformanceWitness();
  v17 = sub_1BC8176EC();
  v11 = *(_QWORD *)(v17 - 8);
  v12 = MEMORY[0x1E0C80A78](v17);
  v14 = (char *)&v16 - v13;
  MEMORY[0x1E0C80A78](v12);
  if (MEMORY[0x1BCCF5C70](v5))
  {
    v20[0] = a2[2];
    v20[1] = v10;
    v20[2] = v9;
    v20[3] = a3;
    v20[4] = v8;
    v20[5] = v19;
    _s5ProxyV5InnerCMa();
  }
  sub_1BC817734();
  sub_1BC8176C8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v14, 1, 1, v10);
  sub_1BC8176BC();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v17);
}

void _s5ProxyV5InnerCMa()
{
  JUMPOUT(0x1BCCF5A3CLL);
}

void sub_1BC71A470(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t (*)(uint64_t), uint64_t *, uint64_t (*)(), uint64_t *, uint64_t, uint64_t);
  uint64_t v14;

  v2 = v1;
  v4 = *v1;
  v5 = *(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 144));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 16));
  v6 = (char *)v1 + *(_QWORD *)(*v1 + 176);
  swift_beginAccess();
  if ((*v6 & 1) != 0 || (v7 = (char *)v2 + *(_QWORD *)(*v2 + 184), swift_beginAccess(), (*v7 & 1) != 0))
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
    return;
  }
  v8 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 168));
  swift_beginAccess();
  v9 = *v8;
  sub_1BC817710();
  if ((sub_1BC8176F8() & 1) == 0)
  {
    sub_1BC817710();
    v10 = sub_1BC8176F8();
    v11 = sub_1BC817710();
    if ((v10 & 1) != 0)
    {
LABEL_7:
      *v8 = v11;
      goto LABEL_13;
    }
    if ((sub_1BC8176F8() & 1) == 0)
    {
      if ((v9 | a1) < 0)
        goto LABEL_17;
      v11 = v9 + a1;
      if (!__OFADD__(v9, a1))
      {
        if ((v11 & 0x8000000000000000) == 0)
          goto LABEL_7;
        __break(1u);
LABEL_17:
        __break(1u);
        return;
      }
    }
    *v8 = sub_1BC817710();
  }
LABEL_13:
  swift_endAccess();
  MEMORY[0x1BCCF5AB4](&unk_1BC81B708, v4);
  PendingValuesInner.lock_sendPendingValuesIfNeeded()();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  if (MEMORY[0x1BCCF5C70](v2 + 2))
  {
    v12 = *(_QWORD *)(v4 + 112);
    v13 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t *, uint64_t (*)(), uint64_t *, uint64_t, uint64_t))(v12 + 32);
    v14 = *(_QWORD *)(v4 + 96);
    swift_retain_n();
    v13(a1, sub_1BC71B660, v2, sub_1BC71B248, v2, v14, v12);
    swift_unknownObjectRelease();
    swift_release_n();
  }
}

uint64_t sub_1BC71A648()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t result;
  uint64_t v11;

  v1 = *(_QWORD **)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  v3 = sub_1BC818130();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(v0 + v1[18]);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v6, 1, 1, v2);
  v8 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 136);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v8, v6, v3);
  swift_endAccess();
  v9 = (_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 176));
  swift_beginAccess();
  *v9 = 1;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  result = MEMORY[0x1BCCF5C70](v0 + 16);
  if (result)
  {
    (*(void (**)(_QWORD))(v1[14] + 40))(v1[12]);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BC71A780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = sub_1BC81879C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA64(0, &qword_1EF45B380, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEDFC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - v6;
  v13 = v0;
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6BA578, (uint64_t (*)(uint64_t))sub_1BC6EF850, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(v8 + 32) = 0x65746167656C6564;
  *(_QWORD *)(v8 + 40) = 0xE800000000000000;
  v9 = MEMORY[0x1BCCF5C70](v0 + 16);
  *(_QWORD *)(v8 + 72) = sub_1BC818130();
  *(_QWORD *)(v8 + 48) = v9;
  v10 = sub_1BC818790();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEDFE8], v1);
  swift_retain();
  return sub_1BC8187C0();
}

uint64_t sub_1BC71A928@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DEDFE8];
  v3 = sub_1BC81879C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1BC71A96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectWeakDestroy();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 136);
  v2 = sub_1BC818130();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BC71A9F8()
{
  sub_1BC71A96C();
  return swift_deallocClassInstance();
}

void sub_1BC71AA18(uint64_t a1)
{
  sub_1BC71A470(a1);
}

uint64_t sub_1BC71AA38()
{
  return swift_retain();
}

uint64_t sub_1BC71AA48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 136);
  swift_beginAccess();
  v4 = sub_1BC818130();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BC71AABC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 136);
  swift_beginAccess();
  v4 = sub_1BC818130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1BC71AB38())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC71AB7C()
{
  return swift_retain();
}

uint64_t sub_1BC71AB8C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC71ABD4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 160));
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC71AC24())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC71AC68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 168);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1BC71ACAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 168));
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1BC71ACF4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC71AD38()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 184));
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1BC71AD7C(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184));
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1BC71ADC4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC71AE08()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 176));
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1BC71AE4C(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 176));
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1BC71AE94())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_1BC71AED8()
{
  return 0xD000000000000010;
}

uint64_t sub_1BC71AEF4()
{
  return sub_1BC71A780();
}

uint64_t sub_1BC71AF14()
{
  return sub_1BC71A648();
}

uint64_t sub_1BC71AF34(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return Publishers.Proxy.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1BC71AF48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  v19 = a1;
  v3 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  v20 = sub_1BC818130();
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v6 = (char *)&v19 - v5;
  swift_unknownObjectWeakInit();
  v7 = *(_QWORD *)(v3 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v8(v2 + *(_QWORD *)(*(_QWORD *)v2 + 136), 1, 1, v3);
  v9 = *(_QWORD *)(*(_QWORD *)v2 + 144);
  type metadata accessor for UnfairLock();
  v10 = swift_allocObject();
  v11 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v10 + 16) = v11;
  *v11 = 0;
  *(_QWORD *)(v2 + v9) = v10;
  v12 = *(_QWORD *)(*(_QWORD *)v2 + 152);
  type metadata accessor for RecursiveUnfairLock();
  v13 = swift_allocObject();
  v14 = (_QWORD *)swift_slowAlloc();
  *(_QWORD *)(v13 + 16) = v14;
  *v14 = 0;
  *(_QWORD *)(v2 + v12) = v13;
  v15 = *(_QWORD *)(*(_QWORD *)v2 + 160);
  *(_QWORD *)(v2 + v15) = sub_1BC817A1C();
  v16 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  *(_QWORD *)(v2 + v16) = sub_1BC817704();
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 176)) = 0;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 184)) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v6, v19, v3);
  v8((uint64_t)v6, 0, 1, v3);
  v17 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 136);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v17, v6, v20);
  swift_endAccess();
  swift_unknownObjectWeakAssign();
  return v2;
}

uint64_t sub_1BC71B124()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t dispatch thunk of ProxyPublisherDelegate.receiveRequest(demand:sendValue:sendCompletion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of ProxyPublisherDelegate.receiveCancellation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

void type metadata accessor for Publishers.Proxy()
{
  JUMPOUT(0x1BCCF5A3CLL);
}

uint64_t sub_1BC71B16C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC818130();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC71B220(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 120);
}

void sub_1BC71B228()
{
  JUMPOUT(0x1BCCF5AB4);
}

void sub_1BC71B238()
{
  JUMPOUT(0x1BCCF5AB4);
}

void sub_1BC71B24C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  const char *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21[4];
  uint64_t v22;

  v1 = v0;
  v2 = *v0;
  v3 = *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 144));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
  v4 = (char *)v0 + *(_QWORD *)(*v0 + 184);
  swift_beginAccess();
  if ((*v4 & 1) == 0)
  {
    *v4 = 1;
    v15 = (char *)v1 + *(_QWORD *)(*v1 + 176);
    swift_beginAccess();
    if ((*v15 & 1) == 0)
    {
      MEMORY[0x1BCCF5AB4](&unk_1BC81B708, v2);
      PendingValuesInner.lock_sendPendingValuesIfNeeded()();
      goto LABEL_14;
    }
    if (qword_1ED6BB338 != -1)
      swift_once();
    v16 = sub_1BC817590();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED6BB320);
    swift_retain_n();
    v6 = sub_1BC81756C();
    v7 = sub_1BC817E9C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v21[0] = v9;
      *(_DWORD *)v8 = 136446466;
      v22 = v2;
      swift_getMetatypeMetadata();
      v17 = sub_1BC817AF4();
      v22 = sub_1BC6E14D8(v17, v18, v21);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2082;
      v22 = MEMORY[0x1BCCF5C70](v1 + 2);
      sub_1BC818130();
      v19 = sub_1BC817AF4();
      v22 = sub_1BC6E14D8(v19, v20, v21);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      v14 = "[%{public}s]: delegate called completion, but we're already cancelled. Delegate: %{public}s";
      goto LABEL_11;
    }
LABEL_12:

    swift_release_n();
    goto LABEL_14;
  }
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v5 = sub_1BC817590();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED6BB5D0);
  swift_retain_n();
  v6 = sub_1BC81756C();
  v7 = sub_1BC817E84();
  if (!os_log_type_enabled(v6, v7))
    goto LABEL_12;
  v8 = swift_slowAlloc();
  v9 = swift_slowAlloc();
  v22 = v9;
  *(_DWORD *)v8 = 136446466;
  swift_getMetatypeMetadata();
  v10 = sub_1BC817AF4();
  sub_1BC6E14D8(v10, v11, &v22);
  sub_1BC818148();
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 12) = 2082;
  MEMORY[0x1BCCF5C70](v1 + 2);
  sub_1BC818130();
  v12 = sub_1BC817AF4();
  v21[1] = sub_1BC6E14D8(v12, v13, &v22);
  sub_1BC818148();
  swift_release_n();
  swift_bridgeObjectRelease();
  v14 = "[%{public}s: Delegate called completion more than once! Delegate is %{public}s";
LABEL_11:
  _os_log_impl(&dword_1BC6DD000, v6, v7, v14, (uint8_t *)v8, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1BCCF5BA4](v9, -1, -1);
  MEMORY[0x1BCCF5BA4](v8, -1, -1);

LABEL_14:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
}

uint64_t sub_1BC71B660(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = MEMORY[0x1BCCF5AB4](&unk_1BC81B708, *v1);
  return PendingValuesInner.enqueue(_:)(a1, v3, v4);
}

NSOperationQueue __swiftcall NSOperationQueue.init(name:maxConcurrentOperationCount:)(Swift::String name, Swift::Int_optional maxConcurrentOperationCount)
{
  Swift::Bool is_nil;
  Swift::Int value;
  id v4;
  void *v5;

  is_nil = maxConcurrentOperationCount.is_nil;
  value = maxConcurrentOperationCount.value;
  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v5 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setName_, v5);

  if (!is_nil)
    objc_msgSend(v4, sel_setMaxConcurrentOperationCount_, value);

  return (NSOperationQueue)v4;
}

id static NSOperationQueue.makeSerial(name:qos:)(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3828]), sel_init);
  objc_msgSend(v5, sel_setMaxConcurrentOperationCount_, 1);
  if (a2)
    a2 = (void *)sub_1BC817AC4();
  objc_msgSend(v5, sel_setName_, a2);

  objc_msgSend(v5, sel_setQualityOfService_, a3);
  return v5;
}

void sub_1BC71B7EC(uint64_t a1)
{
  sub_1BC71BB30(a1, 33, 0xD00000000000002FLL, 0x80000001BC826A50, &qword_1EF45B388);
}

id static NSOperationQueue.userInteractive.getter()
{
  return sub_1BC71B8FC(&qword_1EF45ABC0, (id *)&qword_1EF45B388);
}

void static NSOperationQueue.userInteractive.setter(void *a1)
{
  sub_1BC71B96C(a1, &qword_1EF45ABC0, (void **)&qword_1EF45B388);
}

uint64_t (*static NSOperationQueue.userInteractive.modify())()
{
  if (qword_1EF45ABC0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1BC71B8B8(uint64_t a1)
{
  sub_1BC71BB30(a1, 25, 0xD00000000000002DLL, 0x80000001BC826A20, &qword_1ED6BA470);
}

id static NSOperationQueue.userInitiated.getter()
{
  return sub_1BC71B8FC(&qword_1ED6BA478, (id *)&qword_1ED6BA470);
}

id sub_1BC71B8FC(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  return *a2;
}

void static NSOperationQueue.userInitiated.setter(void *a1)
{
  sub_1BC71B96C(a1, &qword_1ED6BA478, (void **)&qword_1ED6BA470);
}

void sub_1BC71B96C(void *a1, _QWORD *a2, void **a3)
{
  void *v5;

  if (*a2 != -1)
    swift_once();
  swift_beginAccess();
  v5 = *a3;
  *a3 = a1;

}

uint64_t (*static NSOperationQueue.userInitiated.modify())()
{
  if (qword_1ED6BA478 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1BC71BA3C(uint64_t a1)
{
  sub_1BC71BB30(a1, 17, 0xD000000000000027, 0x80000001BC8269F0, qword_1ED6BA480);
}

id static NSOperationQueue.utility.getter()
{
  return sub_1BC71B8FC(&qword_1ED6BA490, (id *)qword_1ED6BA480);
}

void static NSOperationQueue.utility.setter(void *a1)
{
  sub_1BC71B96C(a1, &qword_1ED6BA490, (void **)qword_1ED6BA480);
}

uint64_t (*static NSOperationQueue.utility.modify())()
{
  if (qword_1ED6BA490 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1BC71BB08(uint64_t a1)
{
  sub_1BC71BB30(a1, 9, 0xD00000000000002ALL, 0x80000001BC8269C0, &qword_1EF45B390);
}

void sub_1BC71BB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  id v7;
  void *v8;

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3828]), sel_init);
  objc_msgSend(v7, sel_setQualityOfService_, a2);
  v8 = (void *)sub_1BC817AC4();
  objc_msgSend(v7, sel_setName_, v8);

  *a5 = v7;
}

id static NSOperationQueue.background.getter()
{
  return sub_1BC71B8FC(&qword_1EF45ABC8, (id *)&qword_1EF45B390);
}

void static NSOperationQueue.background.setter(void *a1)
{
  sub_1BC71B96C(a1, &qword_1EF45ABC8, (void **)&qword_1EF45B390);
}

uint64_t (*static NSOperationQueue.background.modify())()
{
  if (qword_1EF45ABC8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t PluginFeedItem.uniqueIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.uniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.userInterface.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1BC6ECAD4(v1, *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return v1;
}

uint64_t PluginFeedItem.userInterface.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1BC6ECABC(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_BYTE *)(v3 + 32));
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_BYTE *)(v3 + 32) = a3;
  return result;
}

uint64_t (*PluginFeedItem.userInterface.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.usesPlatformView.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t PluginFeedItem.usesPlatformView.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

uint64_t (*PluginFeedItem.usesPlatformView.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.actionHandlerClassName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.actionHandlerClassName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*PluginFeedItem.actionHandlerClassName.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.actionHandlerUserData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  sub_1BC6F7DC4(v1, *(_QWORD *)(v0 + 64));
  return v1;
}

uint64_t PluginFeedItem.actionHandlerUserData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC6ECB4C(*(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*PluginFeedItem.actionHandlerUserData.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.baseAutomationIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.baseAutomationIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*PluginFeedItem.baseAutomationIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.userData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  sub_1BC6F7DC4(v1, *(_QWORD *)(v0 + 96));
  return v1;
}

uint64_t PluginFeedItem.userData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC6ECB4C(*(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96));
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

uint64_t (*PluginFeedItem.userData.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.relevantDateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PluginFeedItem();
  return sub_1BC6ECB08(v1 + *(int *)(v3 + 44), a1, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
}

uint64_t type metadata accessor for PluginFeedItem()
{
  uint64_t result;

  result = qword_1ED6BAE40;
  if (!qword_1ED6BAE40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PluginFeedItem.relevantDateInterval.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PluginFeedItem() + 44);
  return sub_1BC71BFF8(a1, v3);
}

uint64_t sub_1BC71BFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6ECA48(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*PluginFeedItem.relevantDateInterval.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.contentKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PluginFeedItem();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t PluginFeedItem.contentKind.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for PluginFeedItem();
  *(_BYTE *)(v1 + *(int *)(result + 48)) = v2;
  return result;
}

uint64_t (*PluginFeedItem.contentKind.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.associatedHKTypes.getter()
{
  type metadata accessor for PluginFeedItem();
  return swift_bridgeObjectRetain();
}

uint64_t PluginFeedItem.associatedHKTypes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PluginFeedItem() + 52);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PluginFeedItem.associatedHKTypes.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.associatedSharableModelReferences.getter()
{
  type metadata accessor for PluginFeedItem();
  return swift_bridgeObjectRetain();
}

uint64_t PluginFeedItem.associatedSharableModelReferences.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PluginFeedItem() + 56);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PluginFeedItem.associatedSharableModelReferences.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.categoryIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.categoryIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PluginFeedItem() + 60));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.categoryIdentifier.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.featureTags.getter()
{
  type metadata accessor for PluginFeedItem();
  return swift_bridgeObjectRetain();
}

uint64_t PluginFeedItem.featureTags.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PluginFeedItem() + 64);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PluginFeedItem.featureTags.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.keywords.getter()
{
  type metadata accessor for PluginFeedItem();
  return swift_bridgeObjectRetain();
}

uint64_t PluginFeedItem.keywords.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PluginFeedItem() + 68);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PluginFeedItem.keywords.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

void *PluginFeedItem.sourceProfile.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 72));
  v2 = v1;
  return v1;
}

void PluginFeedItem.sourceProfile.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for PluginFeedItem() + 72);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*PluginFeedItem.sourceProfile.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.localizedCategoryName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.localizedCategoryName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PluginFeedItem() + 76));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.localizedCategoryName.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.localizedTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 80));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.localizedTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PluginFeedItem() + 80));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.localizedTitle.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.localizedDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.localizedDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PluginFeedItem() + 84));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.localizedDescription.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.sortHint.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 88));
}

uint64_t PluginFeedItem.sortHint.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PluginFeedItem();
  *(_QWORD *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*PluginFeedItem.sortHint.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.searchSectionHint.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 92));
}

uint64_t PluginFeedItem.searchSectionHint.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PluginFeedItem();
  *(_BYTE *)(v1 + *(int *)(result + 92)) = a1;
  return result;
}

uint64_t (*PluginFeedItem.searchSectionHint.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.indexForSearch.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 96));
}

uint64_t PluginFeedItem.indexForSearch.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PluginFeedItem();
  *(_BYTE *)(v1 + *(int *)(result + 96)) = a1;
  return result;
}

uint64_t (*PluginFeedItem.indexForSearch.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.hideInDiscover.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 100));
}

uint64_t PluginFeedItem.hideInDiscover.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PluginFeedItem();
  *(_BYTE *)(v1 + *(int *)(result + 100)) = a1;
  return result;
}

uint64_t (*PluginFeedItem.hideInDiscover.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.pinnedContentIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 104));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.pinnedContentIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PluginFeedItem() + 104));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.pinnedContentIdentifier.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t sub_1BC71C8A4@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for PluginFeedItem() + 108));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1BC6E15EC;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1BC71C9F8(v4);
}

uint64_t sub_1BC71C91C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BC6E15EC;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for PluginFeedItem() + 108));
  v8 = *v7;
  sub_1BC71C9F8(v3);
  result = sub_1BC6F748C(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t PluginFeedItem.afterCommit.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 108));
  sub_1BC71C9F8(v1);
  return v1;
}

uint64_t sub_1BC71C9F8(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t PluginFeedItem.afterCommit.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for PluginFeedItem() + 108));
  result = sub_1BC6F748C(*v5);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.afterCommit.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.hostViewStyle.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PluginFeedItem();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 112));
  return result;
}

uint64_t PluginFeedItem.hostViewStyle.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for PluginFeedItem();
  *(_BYTE *)(v1 + *(int *)(result + 112)) = v2;
  return result;
}

uint64_t (*PluginFeedItem.hostViewStyle.modify())()
{
  type metadata accessor for PluginFeedItem();
  return nullsub_1;
}

uint64_t PluginFeedItem.init(uniqueIdentifier:userInterface:userData:contentKind:sourceProfile:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;

  v16 = *a8;
  *(_BYTE *)(a9 + 33) = 0;
  *(_QWORD *)(a9 + 40) = 0;
  *(_QWORD *)(a9 + 48) = 0;
  *(_QWORD *)(a9 + 56) = 0;
  *(_QWORD *)(a9 + 64) = 0xF000000000000000;
  v17 = (int *)type metadata accessor for PluginFeedItem();
  *(_QWORD *)(a9 + 72) = 0;
  *(_QWORD *)(a9 + 80) = 0;
  v18 = a9 + v17[11];
  v19 = type metadata accessor for RelevantDateInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(a9 + v17[13]) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(a9 + v17[14]) = v20;
  v21 = (_QWORD *)(a9 + v17[15]);
  *v21 = 0;
  v21[1] = 0;
  *(_QWORD *)(a9 + v17[16]) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(a9 + v17[17]) = v20;
  v22 = (_QWORD *)(a9 + v17[19]);
  *v22 = 0;
  v22[1] = 0;
  v23 = (_QWORD *)(a9 + v17[20]);
  *v23 = 0;
  v23[1] = 0;
  v24 = (_QWORD *)(a9 + v17[21]);
  *v24 = 0;
  v24[1] = 0;
  *(_QWORD *)(a9 + v17[22]) = 0;
  *(_BYTE *)(a9 + v17[23]) = 13;
  *(_BYTE *)(a9 + v17[24]) = 1;
  *(_BYTE *)(a9 + v17[25]) = 2;
  v25 = (_QWORD *)(a9 + v17[26]);
  *v25 = 0;
  v25[1] = 0;
  v26 = (_QWORD *)(a9 + v17[27]);
  *v26 = 0;
  v26[1] = 0;
  *(_BYTE *)(a9 + v17[28]) = 0;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 88) = a6;
  *(_QWORD *)(a9 + 96) = a7;
  *(_BYTE *)(a9 + v17[12]) = v16;
  *(_QWORD *)(a9 + v17[18]) = a10;
  return sub_1BC71CC84();
}

uint64_t sub_1BC71CC84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  sub_1BC72441C();
  v1 = sub_1BC817AF4();
  v3 = v2;
  v4 = sub_1BC7B7528();
  v6 = v5;
  v7 = *(int *)(type metadata accessor for PluginFeedItem() + 64);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *(_QWORD *)(v0 + v7);
  *(_QWORD *)(v0 + v7) = 0x8000000000000000;
  sub_1BC71F758(v4, v6, v1, v3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v0 + v7) = v10;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t PluginFeedItem.addFeatureTag<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  swift_getDynamicType();
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a3 + 8) + 16))(a2);
  v8 = v7;
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  v11 = v10;
  v12 = *(int *)(type metadata accessor for PluginFeedItem() + 64);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *(_QWORD *)(v3 + v12);
  *(_QWORD *)(v3 + v12) = 0x8000000000000000;
  sub_1BC71F758(v9, v11, v6, v8, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + v12) = v15;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t PluginFeedItem.numberOfTags.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 64)) + 16);
}

Swift::Void __swiftcall PluginFeedItem.removeAllTags()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(int *)(type metadata accessor for PluginFeedItem() + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + v1) = MEMORY[0x1E0DEE9E0];
}

Swift::Void __swiftcall PluginFeedItem.removeTag(name:)(Swift::String name)
{
  void *object;
  uint64_t countAndFlagsBits;
  __int128 v3;

  object = name._object;
  countAndFlagsBits = name._countAndFlagsBits;
  type metadata accessor for PluginFeedItem();
  sub_1BC71E1D4(countAndFlagsBits, (uint64_t)object, &v3);
  sub_1BC6ECB4C(v3, *((unint64_t *)&v3 + 1));
}

uint64_t UserInterface.init(hostingControllerClass:)()
{
  objc_class *ObjCClassFromMetadata;
  NSString *v1;
  uint64_t v2;

  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v1 = NSStringFromClass(ObjCClassFromMetadata);
  v2 = sub_1BC817AE8();

  return v2;
}

uint64_t UserInterface.init(viewControllerClass:)()
{
  objc_class *ObjCClassFromMetadata;
  NSString *v1;
  uint64_t v2;

  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v1 = NSStringFromClass(ObjCClassFromMetadata);
  v2 = sub_1BC817AE8();

  return v2;
}

uint64_t UserInterface.init(viewClass:)()
{
  objc_class *ObjCClassFromMetadata;
  NSString *v1;
  uint64_t v2;

  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v1 = NSStringFromClass(ObjCClassFromMetadata);
  v2 = sub_1BC817AE8();

  return v2;
}

void UserInterface.identifier.getter(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC71D010(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_1BC6ECAD4(a1, a2, a3);
  return a1;
}

void UserInterface.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC71D06C()
{
  sub_1BC818748();
  return sub_1BC817B30();
}

uint64_t sub_1BC71D0B8()
{
  return sub_1BC818748();
}

uint64_t UserInterface.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  _BYTE v7[72];

  sub_1BC81873C();
  UserInterface.hash(into:)((uint64_t)v7, a1, a2, a3);
  return sub_1BC818778();
}

uint64_t sub_1BC71D12C(uint64_t a1)
{
  return _s14HealthPlatform13UserInterfaceO2eeoiySbAC_ACtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1BC71D148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BYTE v5[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_1BC81873C();
  UserInterface.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_1BC818778();
}

void sub_1BC71D1A0(uint64_t a1)
{
  uint64_t v1;

  UserInterface.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

uint64_t sub_1BC71D1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BYTE v5[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_1BC81873C();
  UserInterface.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_1BC818778();
}

uint64_t PluginFeedItem.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD v34[3];
  id v35[5];

  v2 = v1;
  v35[4] = *(id *)MEMORY[0x1E0C80C00];
  v4 = type metadata accessor for RelevantDateInterval();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA48(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v1 + 16);
  v12 = *(_QWORD *)(v2 + 24);
  v13 = *(_BYTE *)(v2 + 32);
  sub_1BC6ECAD4(*(_QWORD *)(v2 + 16), v12, v13);
  UserInterface.hash(into:)(a1, v11, v12, v13);
  sub_1BC6ECABC(v11, v12, v13);
  v14 = *(_QWORD *)(v2 + 96);
  if (v14 >> 60 == 15)
    goto LABEL_8;
  v15 = *(_QWORD *)(v2 + 88);
  v16 = (void *)objc_opt_self();
  sub_1BC6ECBE8(v15, v14);
  v17 = (void *)sub_1BC816E58();
  v35[0] = 0;
  v18 = objc_msgSend(v16, sel_JSONObjectWithData_options_error_, v17, 0, v35);

  if (v18)
  {
    v19 = v35[0];
    sub_1BC818178();
    swift_unknownObjectRelease();
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v20 = (void *)v34[1];
      sub_1BC818754();
      v21 = v20;
      sub_1BC8180DC();

      sub_1BC6ECB4C(v15, v14);
      goto LABEL_8;
    }
    sub_1BC818754();
  }
  else
  {
    v22 = v35[0];
    v23 = sub_1BC816D5C();
    v34[0] = v5;
    v24 = (void *)v23;

    swift_willThrow();
    sub_1BC816E70();
    v25 = v24;
    v5 = v34[0];

  }
  sub_1BC6ECB4C(v15, v14);
LABEL_8:
  v26 = (int *)type metadata accessor for PluginFeedItem();
  sub_1BC6ECB08(v2 + v26[11], (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1BC818754();
  }
  else
  {
    sub_1BC722C3C((uint64_t)v10, (uint64_t)v7);
    sub_1BC818754();
    sub_1BC816C9C();
    sub_1BC6E1788(&qword_1ED6B87E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], MEMORY[0x1E0CAE5F0]);
    sub_1BC817A7C();
    sub_1BC81876C();
    sub_1BC81876C();
    sub_1BC6ED784((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for RelevantDateInterval);
  }
  LOBYTE(v35[0]) = *(_BYTE *)(v2 + v26[12]);
  ContentKind.rawValue.getter();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + v26[15] + 8))
  {
    sub_1BC818754();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC818754();
  }
  if (*(_QWORD *)(v2 + v26[26] + 8))
  {
    sub_1BC818754();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC818754();
  }
  v27 = *(_QWORD *)(v2 + v26[13]);
  swift_bridgeObjectRetain();
  sub_1BC70D164(a1, v27);
  swift_bridgeObjectRelease();
  v28 = *(_QWORD *)(v2 + v26[16]);
  swift_bridgeObjectRetain();
  sub_1BC720388(a1, v28);
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(v2 + v26[17]);
  swift_bridgeObjectRetain();
  sub_1BC70D848(a1, v29);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + v26[19] + 8))
  {
    sub_1BC818754();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC818754();
  }
  if (*(_QWORD *)(v2 + v26[20] + 8))
  {
    sub_1BC818754();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC818754();
  }
  if (*(_QWORD *)(v2 + v26[21] + 8))
  {
    sub_1BC818754();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC818754();
  }
  sub_1BC818748();
  sub_1BC818754();
  if (*(_BYTE *)(v2 + v26[25]) != 2)
    sub_1BC818754();
  sub_1BC818754();
  if (*(_BYTE *)(v2 + v26[23]) == 13)
  {
    sub_1BC818754();
  }
  else
  {
    sub_1BC818754();
    sub_1BC818760();
  }
  v30 = *(void **)(v2 + v26[18]);
  sub_1BC818748();
  if (v30)
  {
    v31 = v30;
    sub_1BC8180DC();

  }
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v2 + v26[14]);
  swift_bridgeObjectRetain();
  sub_1BC70D848(a1, v32);
  return swift_bridgeObjectRelease();
}

uint64_t PluginFeedItem.hashValue.getter()
{
  _BYTE v1[72];

  sub_1BC81873C();
  PluginFeedItem.hash(into:)((uint64_t)v1);
  return sub_1BC818778();
}

uint64_t sub_1BC71D928()
{
  _BYTE v1[72];

  sub_1BC81873C();
  PluginFeedItem.hash(into:)((uint64_t)v1);
  return sub_1BC818778();
}

uint64_t sub_1BC71D968()
{
  _BYTE v1[72];

  sub_1BC81873C();
  PluginFeedItem.hash(into:)((uint64_t)v1);
  return sub_1BC818778();
}

uint64_t PluginFeedItem.cachedObject<A>(using:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v11;

  v5 = *(_QWORD *)(v2 + 96);
  if (v5 >> 60 == 15)
  {
    if (qword_1ED6BACE0 != -1)
      swift_once();
    v6 = sub_1BC817590();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED6BACC0);
    v7 = sub_1BC81756C();
    v8 = sub_1BC817E78();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1BC6DD000, v7, v8, "Unable to decode cached user data because there isn't anything stored.", v9, 2u);
      MEMORY[0x1BCCF5BA4](v9, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1, a1);
  }
  else
  {
    v11 = *(_QWORD *)(v2 + 88);
    sub_1BC6ECBE8(v11, *(_QWORD *)(v2 + 96));
    sub_1BC816C24();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 0, 1, a1);
    return sub_1BC6ECB4C(v11, v5);
  }
}

uint64_t PluginFeedItem.setCategoryIdentifier(displayCategory:)(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t result;

  v3 = objc_msgSend(a1, sel_categoryName);
  v4 = sub_1BC817AE8();
  v6 = v5;

  v7 = type metadata accessor for PluginFeedItem();
  v8 = (uint64_t *)(v1 + *(int *)(v7 + 60));
  swift_bridgeObjectRelease();
  *v8 = v4;
  v8[1] = v6;
  v9 = objc_msgSend(a1, sel_displayName);
  v10 = sub_1BC817AE8();
  v12 = v11;

  v13 = (uint64_t *)(v1 + *(int *)(v7 + 76));
  result = swift_bridgeObjectRelease();
  *v13 = v10;
  v13[1] = v12;
  return result;
}

uint64_t PluginFeedItem.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[4];

  v1 = sub_1BC8187B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1BC6EAD84((uint64_t)&unk_1E7515980);
  swift_arrayDestroy();
  v6 = type metadata accessor for PluginFeedItem();
  v15[3] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  sub_1BC6ECB08(v0, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC818784();
  v8 = sub_1BC8187A8();
  v13 = v5;
  v9 = sub_1BC6EAE18(v8, (uint64_t (*)(_QWORD, _QWORD, _OWORD *))sub_1BC6ECC98);
  swift_bridgeObjectRelease();
  swift_release();
  v15[0] = (uint64_t)v9;
  sub_1BC722C80();
  sub_1BC6E1788((unint64_t *)&qword_1ED6BB1C8, (uint64_t (*)(uint64_t))sub_1BC722C80, MEMORY[0x1E0DEAF20]);
  sub_1BC817A88();
  swift_bridgeObjectRelease();
  v15[0] = 60;
  v15[1] = 0xE100000000000000;
  v14 = v6;
  sub_1BC722CD4();
  sub_1BC817AF4();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  v10 = v15[0];
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return v10;
}

double sub_1BC71DFC0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1BC706608(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BC70A99C();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1BC6EFBDC((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_1BC71E618(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1BC71E0B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BC7065B8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BC70B050();
      v9 = v15;
    }

    v10 = *(_QWORD *)(v9 + 56);
    v11 = sub_1BC817050();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 32))(a2, v10 + *(_QWORD *)(v12 + 72) * v6, v11);
    sub_1BC71E9EC(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v14 = sub_1BC817050();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

double sub_1BC71E1D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1BC706608(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BC70B448();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    *a3 = *(_OWORD *)(*(_QWORD *)(v11 + 56) + 16 * v8);
    sub_1BC71EC04(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = xmmword_1BC81BA20;
  }
  return result;
}

uint64_t sub_1BC71E2B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1BC706894(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BC70B608();
    v7 = v10;
  }

  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v4);
  sub_1BC71EDD8(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BC71E390(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BC706608(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BC70B7CC();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1BC71EF90(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BC71E45C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1BC706894(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BC70BB3C();
    v7 = v10;
  }

  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1BC71F164(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

double sub_1BC71E520@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1BC706608(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BC70BCE8();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1BC6FC848((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v8), a3);
    sub_1BC71F314(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1BC71E618(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BC818190();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BC81873C();
        swift_bridgeObjectRetain();
        sub_1BC817B30();
        v10 = sub_1BC818778();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BC71E7EC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BC818190();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BC81873C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BC817B30();
        sub_1BC817B30();
        v9 = sub_1BC818778();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 32 * v3);
          v13 = (_OWORD *)(v11 + 32 * v6);
          if (v3 != v6 || v12 >= v13 + 2)
          {
            v14 = v13[1];
            *v12 = *v13;
            v12[1] = v14;
          }
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_QWORD *)(v15 + 8 * v3);
          v17 = (_QWORD *)(v15 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BC71E9EC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BC818190();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        v9 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
        sub_1BC817AE8();
        sub_1BC81873C();
        v10 = v9;
        sub_1BC817B30();
        v11 = sub_1BC818778();

        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v12 < v8)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_QWORD *)(v13 + 8 * v3);
        v15 = (_QWORD *)(v13 + 8 * v6);
        if (v3 != v6 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(sub_1BC817050() - 8) + 72);
        v18 = v17 * v3;
        result = v16 + v17 * v3;
        v19 = v17 * v6;
        v20 = v16 + v17 * v6 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BC71EC04(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BC818190();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BC81873C();
        swift_bridgeObjectRetain();
        sub_1BC817B30();
        v9 = sub_1BC818778();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1BC71EDD8(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1BC818190();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_1BC8180C4();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_OWORD *)(v18 + 16 * v3);
            v20 = (_OWORD *)(v18 + 16 * v6);
            if (16 * v3 != 16 * v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1BC71EF90(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BC818190();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BC81873C();
        swift_bridgeObjectRetain();
        sub_1BC817B30();
        v9 = sub_1BC818778();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1BC71F164(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1BC818190();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_1BC8180C4();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_QWORD *)(v18 + 8 * v3);
            v20 = (_QWORD *)(v18 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1BC71F314(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BC818190();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BC81873C();
        swift_bridgeObjectRetain();
        sub_1BC817B30();
        v11 = sub_1BC818778();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_1BC71F4FC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BC706608(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
        return sub_1BC6EFBDC(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BC70A99C();
      goto LABEL_7;
    }
    sub_1BC70716C(v15, a4 & 1);
    v21 = sub_1BC706608(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC7801B4(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1BC8186E8();
  __break(1u);
  return result;
}

id sub_1BC71F62C(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  uint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1BC7065B8(a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];
        v17 = sub_1BC817050();
        return (id)(*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v9, a1, v17);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1BC70B050();
      goto LABEL_7;
    }
    sub_1BC707CEC(v12, a3 & 1);
    v19 = sub_1BC7065B8(a2);
    if ((v13 & 1) == (v20 & 1))
    {
      v9 = v19;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC78021C(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for HKFeatureIdentifier(0);
  result = (id)sub_1BC8186E8();
  __break(1u);
  return result;
}

uint64_t sub_1BC71F758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_1BC706608(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 16 * v14;
        result = sub_1BC6ECB60(*(_QWORD *)v21, *(_QWORD *)(v21 + 8));
        *(_QWORD *)v21 = a1;
        *(_QWORD *)(v21 + 8) = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1BC70B448();
      goto LABEL_7;
    }
    sub_1BC7083F0(v17, a5 & 1);
    v23 = sub_1BC706608(a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC7802A8(v14, a3, a4, a1, a2, v20);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BC8186E8();
  __break(1u);
  return result;
}

id sub_1BC71F898(uint64_t a1, char a2, void *a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v19;
  _QWORD *v20;
  BOOL v21;
  uint64_t v22;
  id result;

  v5 = (_QWORD **)v4;
  v9 = (_QWORD *)*v4;
  v11 = sub_1BC706894((uint64_t)a3);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_13;
  }
  v15 = v10;
  v16 = v9[3];
  if (v16 >= v14 && (a4 & 1) != 0)
    goto LABEL_9;
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_1BC70B608();
    goto LABEL_9;
  }
  sub_1BC7086F8(v14, a4 & 1);
  v17 = sub_1BC706894((uint64_t)a3);
  if ((v15 & 1) != (v18 & 1))
  {
LABEL_13:
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1E0);
    result = (id)sub_1BC8186E8();
    __break(1u);
    return result;
  }
  v11 = v17;
LABEL_9:
  v19 = a2 & 1;
  v20 = *v5;
  if ((v15 & 1) != 0)
  {
    v21 = v19 != 0;
    v22 = v20[7] + 16 * v11;
    result = (id)sub_1BC72438C(*(_QWORD *)v22, *(_BYTE *)(v22 + 8));
    *(_QWORD *)v22 = a1;
    *(_BYTE *)(v22 + 8) = v21;
  }
  else
  {
    sub_1BC7802F8(v11, (uint64_t)a3, a1, v19, v20);
    return a3;
  }
  return result;
}

uint64_t sub_1BC71F9E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BC706608(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_release();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BC70B7CC();
      goto LABEL_7;
    }
    sub_1BC7089E4(v15, a4 & 1);
    v21 = sub_1BC706608(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC780348(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BC8186E8();
  __break(1u);
  return result;
}

uint64_t sub_1BC71FB10(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BC706608(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BC70B97C();
      goto LABEL_7;
    }
    sub_1BC708CF4(v15, a4 & 1);
    v21 = sub_1BC706608(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC780348(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BC8186E8();
  __break(1u);
  return result;
}

void sub_1BC71FC3C(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  id v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1BC706894((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];

        *(_QWORD *)(v16 + 8 * v9) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1BC70BB48();
      goto LABEL_7;
    }
    sub_1BC709020(v12, a3 & 1);
    v17 = sub_1BC706894((uint64_t)a2);
    if ((v13 & 1) == (v18 & 1))
    {
      v9 = v17;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC780390(v9, (uint64_t)a2, a1, v15);
      v19 = a2;
      return;
    }
  }
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1E0);
  sub_1BC8186E8();
  __break(1u);
}

id sub_1BC71FD68(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1BC706894((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];
        result = (id)swift_bridgeObjectRelease();
        *(_QWORD *)(v16 + 8 * v9) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1BC70BB3C();
      goto LABEL_7;
    }
    sub_1BC709014(v12, a3 & 1);
    v18 = sub_1BC706894((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC7803D8(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1E0);
  result = (id)sub_1BC8186E8();
  __break(1u);
  return result;
}

uint64_t sub_1BC71FE94(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BC706608(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7] + 40 * v12;
        __swift_destroy_boxed_opaque_existential_0(v19);
        return sub_1BC6FC848(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BC70BCE8();
      goto LABEL_7;
    }
    sub_1BC70902C(v15, a4 & 1);
    v21 = sub_1BC706608(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC7803DC(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BC8186E8();
  __break(1u);
  return result;
}

id sub_1BC71FFC8(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1BC7068E0((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];
        result = (id)swift_bridgeObjectRelease();
        *(_QWORD *)(v16 + 8 * v9) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1BC70C0C0();
      goto LABEL_7;
    }
    sub_1BC70968C(v12, a3 & 1);
    v18 = sub_1BC7068E0((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC7803D8(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  sub_1BC6ED7C0(0, &qword_1ED6B84B0);
  result = (id)sub_1BC8186E8();
  __break(1u);
  return result;
}

uint64_t sub_1BC7200F4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_1BC817200();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1BC70692C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1BC70C428();
    goto LABEL_7;
  }
  sub_1BC709C88(v17, a3 & 1);
  v23 = sub_1BC70692C(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_1BC8186E8();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1BC780448(v14, (uint64_t)v11, a1, v20);
}

_OWORD *sub_1BC720250(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1BC7066B8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
        return sub_1BC6EFBDC(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1BC70C8B0();
      goto LABEL_7;
    }
    sub_1BC70A68C(v13, a3 & 1);
    v19 = sub_1BC7066B8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC70F6E0(a2, (uint64_t)v21);
      return sub_1BC7804E0(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_1BC8186E8();
  __break(1u);
  return result;
}

uint64_t sub_1BC720388(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;

  v18 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v15 >= v6)
      goto LABEL_19;
    v16 = *(_QWORD *)(v18 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v6)
        goto LABEL_19;
      v16 = *(_QWORD *)(v18 + 8 * v9);
      if (!v16)
        break;
    }
LABEL_18:
    v5 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    swift_bridgeObjectRetain();
    sub_1BC6ECBE8(v13, v14);
    sub_1BC817B30();
    swift_bridgeObjectRelease();
    sub_1BC816E70();
    sub_1BC6ECB60(v13, v14);
    result = sub_1BC818778();
    v8 ^= result;
  }
  v17 = v15 + 2;
  if (v17 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_1BC818748();
  }
  v16 = *(_QWORD *)(v18 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v6)
      goto LABEL_19;
    v16 = *(_QWORD *)(v18 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1BC720554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_1BC705C48((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1BC720628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1BC816CF0();
  v11 = result;
  if (result)
  {
    result = sub_1BC816D08();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1BC816CFC();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1BC705C48(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1BC7206DC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1BC720728()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1BC72075C + dword_1BC720934[v0 >> 62]))();
}

uint64_t sub_1BC72076C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t _s14HealthPlatform13UserInterfaceO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(void))((char *)sub_1BC720970 + 4 * byte_1BC81B76E[a3]))();
}

uint64_t sub_1BC720970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return sub_1BC818694();
}

uint64_t sub_1BC720A78(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  char v5;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  char v23;
  void *v25;
  id v26[5];

  v26[4] = *(id *)MEMORY[0x1E0C80C00];
  if (a2 >> 60 != 15)
  {
    if (a4 >> 60 == 15)
      goto LABEL_5;
    v9 = (void *)objc_opt_self();
    sub_1BC6F7DC4(a1, a2);
    sub_1BC6F7DC4(a3, a4);
    v10 = (void *)sub_1BC816E58();
    v26[0] = 0;
    v11 = objc_msgSend(v9, sel_JSONObjectWithData_options_error_, v10, 0, v26);

    if (v11)
    {
      v12 = v26[0];
      sub_1BC818178();
      swift_unknownObjectRelease();
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
      if (swift_dynamicCast())
        v13 = v25;
      else
        v13 = 0;
      v14 = (void *)sub_1BC816E58();
      v26[0] = 0;
      v15 = objc_msgSend(v9, sel_JSONObjectWithData_options_error_, v14, 0, v26);

      if (v15)
      {
        v16 = v26[0];
        sub_1BC818178();
        swift_unknownObjectRelease();
        if (swift_dynamicCast())
          v17 = v25;
        else
          v17 = 0;
        if (v13)
        {
          if (v17)
          {
            v18 = v17;
            v19 = v13;
            v5 = sub_1BC8180D0();

            sub_1BC6ECB4C(a1, a2);
            sub_1BC6ECB4C(a3, a4);

            return v5 & 1;
          }
          v17 = v13;
          sub_1BC6ECB4C(a1, a2);
          sub_1BC6ECB4C(a3, a4);

        }
        else
        {
          sub_1BC6ECB4C(a1, a2);
          sub_1BC6ECB4C(a3, a4);
          if (!v17)
            goto LABEL_3;
        }

LABEL_5:
        v5 = 0;
        return v5 & 1;
      }
      v22 = v26[0];
      v21 = (void *)sub_1BC816D5C();

      swift_willThrow();
    }
    else
    {
      v20 = v26[0];
      v21 = (void *)sub_1BC816D5C();

      swift_willThrow();
    }
    sub_1BC6F7DC4(a1, a2);
    sub_1BC6F7DC4(a3, a4);
    sub_1BC7206DC(a1, a2);
    v5 = v23;
    sub_1BC6ECB4C(a3, a4);

    sub_1BC6ECB4C(a3, a4);
    sub_1BC6ECB4C(a1, a2);
    sub_1BC6ECB4C(a1, a2);
    return v5 & 1;
  }
  if (a4 >> 60 != 15)
    goto LABEL_5;
LABEL_3:
  v5 = 1;
  return v5 & 1;
}

uint64_t _s14HealthPlatform14PluginFeedItemV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  char v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  int v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  double v154;
  double v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  char v171;
  char v172;
  char v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  int *v192;
  char *v193;
  int *v194;
  int v195;
  int *v196;
  uint64_t v197;
  int v198;
  int v199;
  uint64_t v200;
  int v201;
  int v202;
  uint64_t v203;
  void *v204;
  void *v205;
  id v206;
  id v207;
  char v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  int v212;
  int v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  unint64_t v217;
  char v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  int *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char v259;
  char v260;

  v224 = type metadata accessor for RelevantDateInterval();
  v223 = *(_QWORD *)(v224 - 8);
  MEMORY[0x1E0C80A78](v224);
  v220 = (uint64_t)&v219 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA48(0);
  MEMORY[0x1E0C80A78](v5);
  v221 = (uint64_t)&v219 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7243BC();
  v222 = v7;
  MEMORY[0x1E0C80A78](v7);
  v226 = (uint64_t)&v219 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = (int *)type metadata accessor for PluginFeedItem();
  v9 = MEMORY[0x1E0C80A78](v225);
  v240 = (uint64_t)&v219 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v239 = (uint64_t)&v219 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v241 = (uint64_t)&v219 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v242 = (uint64_t)&v219 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v246 = (char *)&v219 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v245 = (uint64_t)&v219 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v243 = (uint64_t)&v219 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v244 = (uint64_t)&v219 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v238 = (uint64_t)&v219 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v237 = (uint64_t)&v219 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v236 = (uint64_t)&v219 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v249 = (uint64_t)&v219 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v34 = MEMORY[0x1E0C80A78](v33);
  v35 = MEMORY[0x1E0C80A78](v34);
  v248 = (uint64_t)&v219 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v227 = (uint64_t)&v219 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v247 = (uint64_t)&v219 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v233 = (char *)&v219 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v250 = (uint64_t)&v219 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v251 = (uint64_t)&v219 - v46;
  v47 = MEMORY[0x1E0C80A78](v45);
  v232 = (uint64_t)&v219 - v48;
  v49 = MEMORY[0x1E0C80A78](v47);
  v231 = (uint64_t)&v219 - v50;
  v51 = MEMORY[0x1E0C80A78](v49);
  v230 = (uint64_t)&v219 - v52;
  v53 = MEMORY[0x1E0C80A78](v51);
  v54 = MEMORY[0x1E0C80A78](v53);
  v258 = (char *)&v219 - v55;
  v56 = MEMORY[0x1E0C80A78](v54);
  v57 = MEMORY[0x1E0C80A78](v56);
  v252 = (uint64_t)&v219 - v58;
  v59 = MEMORY[0x1E0C80A78](v57);
  v254 = (uint64_t)&v219 - v60;
  v61 = MEMORY[0x1E0C80A78](v59);
  v253 = (uint64_t)&v219 - v62;
  v63 = MEMORY[0x1E0C80A78](v61);
  v255 = (uint64_t)&v219 - v64;
  v65 = MEMORY[0x1E0C80A78](v63);
  v256 = (uint64_t)&v219 - v66;
  v67 = MEMORY[0x1E0C80A78](v65);
  v257 = (uint64_t)&v219 - v68;
  v69 = MEMORY[0x1E0C80A78](v67);
  v71 = (char *)&v219 - v70;
  v72 = MEMORY[0x1E0C80A78](v69);
  v74 = (char *)&v219 - v73;
  v75 = MEMORY[0x1E0C80A78](v72);
  v77 = (char *)&v219 - v76;
  v78 = MEMORY[0x1E0C80A78](v75);
  v80 = (char *)&v219 - v79;
  v81 = MEMORY[0x1E0C80A78](v78);
  v83 = (char *)&v219 - v82;
  MEMORY[0x1E0C80A78](v81);
  v85 = (char *)&v219 - v84;
  v86 = a1[1];
  v87 = a2[1];
  v88 = *a1 == *a2;
  v235 = v89;
  v234 = v90;
  v229 = v91;
  v228 = v92;
  if (v88 && v86 == v87)
  {
    sub_1BC6ECB08((uint64_t)a1, (uint64_t)&v219 - v84, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ECB08((uint64_t)a2, (uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  }
  else
  {
    v93 = sub_1BC818694();
    sub_1BC6ECB08((uint64_t)a1, (uint64_t)v85, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ECB08((uint64_t)a2, (uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    if ((v93 & 1) == 0)
    {
      sub_1BC6ED784((uint64_t)v85, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ED784((uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ECB08((uint64_t)a1, (uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ECB08((uint64_t)a2, (uint64_t)v77, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      goto LABEL_15;
    }
  }
  v94 = _s14HealthPlatform13UserInterfaceO2eeoiySbAC_ACtFZ_0(*((_QWORD *)v85 + 2), *((_QWORD *)v85 + 3), v85[32]);
  sub_1BC6ED784((uint64_t)v85, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784((uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ECB08((uint64_t)a1, (uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ECB08((uint64_t)a2, (uint64_t)v77, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  if ((v94 & 1) == 0)
  {
LABEL_15:
    sub_1BC6ED784((uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784((uint64_t)v77, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ECB08((uint64_t)a1, (uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ECB08((uint64_t)a2, (uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    goto LABEL_16;
  }
  v95 = sub_1BC720A78(*((_QWORD *)v80 + 11), *((_QWORD *)v80 + 12), *((_QWORD *)v77 + 11), *((_QWORD *)v77 + 12));
  sub_1BC6ED784((uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784((uint64_t)v77, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ECB08((uint64_t)a1, (uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ECB08((uint64_t)a2, (uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  if ((v95 & 1) == 0)
  {
LABEL_16:
    sub_1BC6ED784((uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v109 = v246;
    v110 = v244;
    v105 = v233;
    v106 = (uint64_t)v258;
LABEL_17:
    v117 = v255;
    goto LABEL_18;
  }
  v96 = v225[11];
  v97 = &v71[v96];
  v98 = v226;
  v99 = v226 + *(int *)(v222 + 48);
  sub_1BC6ECB08((uint64_t)&v74[v96], v226, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
  v100 = (uint64_t)v97;
  v101 = v98;
  sub_1BC6ECB08(v100, v99, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
  v102 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v223 + 48);
  v103 = v224;
  v104 = v102(v98, 1, v224);
  v105 = v233;
  v106 = (uint64_t)v258;
  if (v104 != 1)
  {
    v151 = v221;
    sub_1BC6ECB08(v101, v221, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
    if (v102(v99, 1, v103) != 1)
    {
      v152 = v220;
      sub_1BC722C3C(v99, v220);
      if ((sub_1BC816C6C() & 1) != 0
        && *(double *)(v151 + *(int *)(v224 + 20)) == *(double *)(v152 + *(int *)(v224 + 20)))
      {
        v153 = *(int *)(v224 + 24);
        v154 = *(double *)(v151 + v153);
        v155 = *(double *)(v152 + v153);
        sub_1BC6ED784(v152, (uint64_t (*)(_QWORD))type metadata accessor for RelevantDateInterval);
        sub_1BC6ED784((uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
        sub_1BC6ED784((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
        sub_1BC6ED784(v151, (uint64_t (*)(_QWORD))type metadata accessor for RelevantDateInterval);
        sub_1BC6ED784(v226, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
        v156 = v257;
        sub_1BC6ECB08((uint64_t)a1, v257, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
        v108 = v256;
        v107 = v156;
        sub_1BC6ECB08((uint64_t)a2, v256, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
        v109 = v246;
        v110 = v244;
        v117 = v255;
        v106 = (uint64_t)v258;
        if (v154 == v155)
          goto LABEL_11;
LABEL_19:
        sub_1BC6ED784(v108, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
        sub_1BC6ED784(v107, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
        sub_1BC6ECB08((uint64_t)a1, v117, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
        v118 = v253;
        sub_1BC6ECB08((uint64_t)a2, v253, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
        v119 = v109;
        goto LABEL_20;
      }
      sub_1BC6ED784(v152, (uint64_t (*)(_QWORD))type metadata accessor for RelevantDateInterval);
      sub_1BC6ED784((uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ED784((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ED784(v151, (uint64_t (*)(_QWORD))type metadata accessor for RelevantDateInterval);
      sub_1BC6ED784(v226, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
      v109 = v246;
      v110 = v244;
      v117 = v255;
      v106 = (uint64_t)v258;
LABEL_18:
      v107 = v257;
      sub_1BC6ECB08((uint64_t)a1, v257, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      v108 = v256;
      sub_1BC6ECB08((uint64_t)a2, v256, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      goto LABEL_19;
    }
    sub_1BC6ED784((uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v151, (uint64_t (*)(_QWORD))type metadata accessor for RelevantDateInterval);
    v106 = (uint64_t)v258;
    goto LABEL_44;
  }
  sub_1BC6ED784((uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v101 = v226;
  sub_1BC6ED784((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  if (v102(v99, 1, v103) != 1)
  {
LABEL_44:
    sub_1BC6ED784(v101, (uint64_t (*)(_QWORD))sub_1BC7243BC);
    v109 = v246;
    v110 = v244;
    goto LABEL_17;
  }
  sub_1BC6ED784(v101, (uint64_t (*)(_QWORD))sub_1BC6ECA48);
  v107 = v257;
  sub_1BC6ECB08((uint64_t)a1, v257, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v108 = v256;
  sub_1BC6ECB08((uint64_t)a2, v256, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v109 = v246;
  v110 = v244;
LABEL_11:
  v111 = v225[12];
  v112 = *(_BYTE *)(v107 + v111);
  LOBYTE(v111) = *(_BYTE *)(v108 + v111);
  v260 = v112;
  v259 = v111;
  v113 = ContentKind.rawValue.getter();
  v115 = v114;
  if (v113 == ContentKind.rawValue.getter() && v115 == v116)
  {
    swift_bridgeObjectRelease_n();
    sub_1BC6ED784(v256, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v257, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v117 = v255;
    sub_1BC6ECB08((uint64_t)a1, v255, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v118 = v253;
    sub_1BC6ECB08((uint64_t)a2, v253, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v119 = v109;
    goto LABEL_51;
  }
  LODWORD(v226) = sub_1BC818694();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC6ED784(v256, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v257, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v117 = v255;
  sub_1BC6ECB08((uint64_t)a1, v255, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v118 = v253;
  sub_1BC6ECB08((uint64_t)a2, v253, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v119 = v109;
  if ((v226 & 1) == 0)
  {
LABEL_20:
    sub_1BC6ED784(v118, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v117, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v120 = v254;
LABEL_21:
    sub_1BC6ECB08((uint64_t)a1, v120, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v121 = v252;
    sub_1BC6ECB08((uint64_t)a2, v252, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    goto LABEL_22;
  }
LABEL_51:
  v157 = v225[15];
  v158 = (_QWORD *)(v117 + v157);
  v159 = *(_QWORD *)(v117 + v157 + 8);
  v160 = (_QWORD *)(v118 + v157);
  v161 = v117;
  v162 = v160[1];
  v163 = v118;
  if (!v159)
  {
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v118, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v161, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v120 = v254;
    if (!v162)
      goto LABEL_57;
    goto LABEL_59;
  }
  v120 = v254;
  if (!v162)
  {
    v164 = v163;
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v164, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v255, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
LABEL_59:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (*v158 == *v160 && v159 == v162)
  {
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v253, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v255, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    swift_bridgeObjectRelease();
LABEL_57:
    sub_1BC6ECB08((uint64_t)a1, v120, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v121 = v252;
    sub_1BC6ECB08((uint64_t)a2, v252, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    goto LABEL_61;
  }
  v165 = sub_1BC818694();
  swift_bridgeObjectRetain();
  sub_1BC6ED784(v253, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v255, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  swift_bridgeObjectRelease();
  sub_1BC6ECB08((uint64_t)a1, v254, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v121 = v252;
  v120 = v254;
  sub_1BC6ECB08((uint64_t)a2, v252, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  if ((v165 & 1) == 0)
  {
LABEL_22:
    sub_1BC6ED784(v121, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v120, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
LABEL_23:
    v122 = v245;
    v123 = v228;
    sub_1BC6ECB08((uint64_t)a1, v228, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ECB08((uint64_t)a2, v106, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    goto LABEL_24;
  }
LABEL_61:
  v166 = v225[26];
  v167 = (_QWORD *)(v120 + v166);
  v168 = *(_QWORD *)(v120 + v166 + 8);
  v169 = (_QWORD *)(v121 + v166);
  v170 = v169[1];
  if (!v168)
  {
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v121, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v120, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    if (!v170)
      goto LABEL_68;
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (!v170)
  {
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v121, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v120, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (*v167 == *v169 && v168 == v170)
  {
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v252, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v120, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    swift_bridgeObjectRelease();
LABEL_68:
    v123 = v228;
    sub_1BC6ECB08((uint64_t)a1, v228, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ECB08((uint64_t)a2, v106, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v122 = v245;
    goto LABEL_71;
  }
  v171 = sub_1BC818694();
  swift_bridgeObjectRetain();
  sub_1BC6ED784(v252, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v120, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  swift_bridgeObjectRelease();
  v123 = v228;
  sub_1BC6ECB08((uint64_t)a1, v228, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ECB08((uint64_t)a2, v106, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v122 = v245;
  if ((v171 & 1) == 0)
  {
LABEL_24:
    sub_1BC6ED784(v123, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v106, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v124 = v229;
    sub_1BC6ECB08((uint64_t)a1, v229, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v125 = v230;
    sub_1BC6ECB08((uint64_t)a2, v230, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
LABEL_25:
    v126 = (uint64_t)v119;
    sub_1BC6ED784(v124, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v125, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v127 = v231;
    sub_1BC6ECB08((uint64_t)a1, v231, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v128 = v232;
    sub_1BC6ECB08((uint64_t)a2, v232, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
LABEL_26:
    sub_1BC6ED784(v127, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v128, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v129 = v251;
    sub_1BC6ECB08((uint64_t)a1, v251, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v130 = v250;
    sub_1BC6ECB08((uint64_t)a2, v250, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v131 = (uint64_t)v105;
LABEL_27:
    sub_1BC6ED784(v130, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v129, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
LABEL_28:
    v132 = v126;
    v133 = v122;
LABEL_29:
    v134 = v110;
    v135 = v249;
    sub_1BC6ECB08((uint64_t)a1, v131, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v136 = v247;
    sub_1BC6ECB08((uint64_t)a2, v247, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v137 = v243;
    goto LABEL_30;
  }
LABEL_71:
  sub_1BC704A6C(*(_QWORD *)(v123 + v225[13]), *(_QWORD *)(v106 + v225[13]));
  v173 = v172;
  sub_1BC6ED784(v123, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v106, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v124 = v229;
  sub_1BC6ECB08((uint64_t)a1, v229, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v125 = v230;
  sub_1BC6ECB08((uint64_t)a2, v230, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  if ((v173 & 1) == 0)
    goto LABEL_25;
  v126 = (uint64_t)v119;
  LODWORD(v258) = sub_1BC701D5C(*(_QWORD *)(v124 + v225[16]), *(_QWORD *)(v125 + v225[16]));
  sub_1BC6ED784(v124, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v125, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v127 = v231;
  sub_1BC6ECB08((uint64_t)a1, v231, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v128 = v232;
  sub_1BC6ECB08((uint64_t)a2, v232, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  if ((v258 & 1) == 0)
    goto LABEL_26;
  LODWORD(v258) = sub_1BC7047E8(*(_QWORD *)(v127 + v225[17]), *(_QWORD *)(v128 + v225[17]));
  sub_1BC6ED784(v127, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v128, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v129 = v251;
  sub_1BC6ECB08((uint64_t)a1, v251, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v130 = v250;
  sub_1BC6ECB08((uint64_t)a2, v250, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v131 = (uint64_t)v105;
  if ((v258 & 1) == 0)
    goto LABEL_27;
  v174 = v225[19];
  v175 = (_QWORD *)(v129 + v174);
  v176 = *(_QWORD *)(v129 + v174 + 8);
  v177 = (_QWORD *)(v130 + v174);
  v178 = v129;
  v179 = v177[1];
  if (!v176)
  {
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v130, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v178, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v132 = v126;
    v133 = v122;
    if (!v179)
      goto LABEL_81;
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  if (!v179)
  {
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v130, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v251, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  v132 = v126;
  if (*v175 == *v177 && v176 == v179)
  {
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v250, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v251, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    swift_bridgeObjectRelease();
    v133 = v122;
LABEL_81:
    sub_1BC6ECB08((uint64_t)a1, v131, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v136 = v247;
    sub_1BC6ECB08((uint64_t)a2, v247, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v134 = v110;
    v137 = v243;
    v135 = v249;
    goto LABEL_84;
  }
  LODWORD(v258) = sub_1BC818694();
  swift_bridgeObjectRetain();
  sub_1BC6ED784(v250, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v251, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  swift_bridgeObjectRelease();
  sub_1BC6ECB08((uint64_t)a1, v131, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v136 = v247;
  v180 = v249;
  sub_1BC6ECB08((uint64_t)a2, v247, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v133 = v122;
  v135 = v180;
  v134 = v110;
  v137 = v243;
  if ((v258 & 1) == 0)
  {
LABEL_30:
    sub_1BC6ED784(v136, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v131, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
LABEL_31:
    v138 = v227;
    sub_1BC6ECB08((uint64_t)a1, v227, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v139 = v248;
    sub_1BC6ECB08((uint64_t)a2, v248, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    goto LABEL_32;
  }
LABEL_84:
  v181 = v225[20];
  v182 = (_QWORD *)(v131 + v181);
  v183 = *(_QWORD *)(v131 + v181 + 8);
  v184 = (_QWORD *)(v136 + v181);
  v185 = v184[1];
  if (!v183)
  {
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v136, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v131, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    if (!v185)
      goto LABEL_90;
    goto LABEL_92;
  }
  if (!v185)
  {
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v136, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v131, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
LABEL_92:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  if (*v182 == *v184 && v183 == v185)
  {
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v247, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v131, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    swift_bridgeObjectRelease();
LABEL_90:
    v138 = v227;
    sub_1BC6ECB08((uint64_t)a1, v227, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v139 = v248;
    sub_1BC6ECB08((uint64_t)a2, v248, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    goto LABEL_94;
  }
  v186 = sub_1BC818694();
  swift_bridgeObjectRetain();
  sub_1BC6ED784(v247, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v131, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  swift_bridgeObjectRelease();
  v138 = v227;
  sub_1BC6ECB08((uint64_t)a1, v227, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v139 = v248;
  v135 = v249;
  sub_1BC6ECB08((uint64_t)a2, v248, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  if ((v186 & 1) == 0)
  {
LABEL_32:
    sub_1BC6ED784(v139, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v138, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
LABEL_33:
    v140 = v234;
    sub_1BC6ECB08((uint64_t)a1, v234, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v141 = v235;
    sub_1BC6ECB08((uint64_t)a2, v235, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    goto LABEL_34;
  }
LABEL_94:
  v187 = v225[21];
  v188 = (_QWORD *)(v138 + v187);
  v189 = *(_QWORD *)(v138 + v187 + 8);
  v190 = (_QWORD *)(v139 + v187);
  v191 = v190[1];
  if (!v189)
  {
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v248, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v138, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    if (!v191)
      goto LABEL_100;
    goto LABEL_102;
  }
  if (!v191)
  {
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v248, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v138, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
LABEL_102:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  if (*v188 == *v190 && v189 == v191)
  {
    swift_bridgeObjectRetain();
    sub_1BC6ED784(v248, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v138, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    swift_bridgeObjectRelease();
LABEL_100:
    v140 = v234;
    sub_1BC6ECB08((uint64_t)a1, v234, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v141 = v235;
    sub_1BC6ECB08((uint64_t)a2, v235, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    goto LABEL_104;
  }
  LODWORD(v258) = sub_1BC818694();
  swift_bridgeObjectRetain();
  sub_1BC6ED784(v248, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v138, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  swift_bridgeObjectRelease();
  v140 = v234;
  sub_1BC6ECB08((uint64_t)a1, v234, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v141 = v235;
  sub_1BC6ECB08((uint64_t)a2, v235, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v135 = v249;
  if ((v258 & 1) == 0)
  {
LABEL_34:
    sub_1BC6ED784(v141, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v140, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ECB08((uint64_t)a1, v135, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v142 = v236;
    sub_1BC6ECB08((uint64_t)a2, v236, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
LABEL_35:
    sub_1BC6ED784(v142, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v135, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v143 = v237;
    sub_1BC6ECB08((uint64_t)a1, v237, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v144 = v238;
    sub_1BC6ECB08((uint64_t)a2, v238, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    goto LABEL_36;
  }
LABEL_104:
  v192 = v225;
  v258 = *(char **)(v140 + v225[22]);
  sub_1BC6ED784(v140, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v193 = *(char **)(v141 + v192[22]);
  sub_1BC6ED784(v141, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ECB08((uint64_t)a1, v249, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v142 = v236;
  sub_1BC6ECB08((uint64_t)a2, v236, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v88 = v258 == v193;
  v135 = v249;
  if (!v88)
    goto LABEL_35;
  v194 = v225;
  LODWORD(v258) = *(unsigned __int8 *)(v249 + v225[24]);
  sub_1BC6ED784(v249, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v195 = *(unsigned __int8 *)(v142 + v194[24]);
  sub_1BC6ED784(v142, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v143 = v237;
  sub_1BC6ECB08((uint64_t)a1, v237, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v144 = v238;
  sub_1BC6ECB08((uint64_t)a2, v238, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  if ((_DWORD)v258 == v195)
  {
    v196 = v225;
    v197 = v143;
    v198 = *(unsigned __int8 *)(v143 + v225[25]);
    sub_1BC6ED784(v197, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v199 = *(unsigned __int8 *)(v144 + v196[25]);
    sub_1BC6ED784(v144, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    if (v198 == 2)
    {
      v133 = v245;
      v132 = (uint64_t)v246;
      v137 = v243;
      v134 = v244;
      if (v199 != 2)
        goto LABEL_37;
      sub_1BC6ECB08((uint64_t)a1, v244, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ECB08((uint64_t)a2, v137, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    }
    else
    {
      v133 = v245;
      v132 = (uint64_t)v246;
      v137 = v243;
      v134 = v244;
      if (v199 == 2)
        goto LABEL_37;
      sub_1BC6ECB08((uint64_t)a1, v244, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ECB08((uint64_t)a2, v137, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      if (((((v198 & 1) == 0) ^ v199) & 1) == 0)
        goto LABEL_38;
    }
    v200 = v225[23];
    v201 = *(unsigned __int8 *)(v134 + v200);
    v202 = *(unsigned __int8 *)(v137 + v200);
    if (v201 == 13)
    {
      sub_1BC6ED784(v243, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ED784(v244, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      v133 = v245;
      v132 = (uint64_t)v246;
      if (v202 != 13)
        goto LABEL_39;
      sub_1BC6ECB08((uint64_t)a1, v245, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ECB08((uint64_t)a2, v132, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    }
    else
    {
      v133 = v245;
      v132 = (uint64_t)v246;
      v137 = v243;
      v134 = v244;
      if (v202 == 13)
        goto LABEL_38;
      sub_1BC6ED784(v243, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ED784(v134, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ECB08((uint64_t)a1, v133, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ECB08((uint64_t)a2, v132, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      if (v201 != v202)
        goto LABEL_40;
    }
    v203 = v225[18];
    v204 = *(void **)(v133 + v203);
    v205 = *(void **)(v132 + v203);
    if (v204)
    {
      v133 = v245;
      v132 = (uint64_t)v246;
      if (!v205)
        goto LABEL_40;
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
      v206 = v204;
      v207 = v205;
      v208 = sub_1BC8180D0();

      if ((v208 & 1) == 0)
        goto LABEL_40;
    }
    else
    {
      v133 = v245;
      v132 = (uint64_t)v246;
      if (v205)
        goto LABEL_40;
    }
    sub_1BC6ED784(v133, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ED784(v132, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v209 = v242;
    sub_1BC6ECB08((uint64_t)a1, v242, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v210 = v241;
    sub_1BC6ECB08((uint64_t)a2, v241, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v211 = v225[28];
    v212 = *(unsigned __int8 *)(v209 + v211);
    v213 = *(unsigned __int8 *)(v210 + v211);
    if (v212)
      v214 = 0x656D6F7268436F6ELL;
    else
      v214 = 0x656D6F726863;
    if (v212)
      v215 = 0xE800000000000000;
    else
      v215 = 0xE600000000000000;
    if (v213)
      v216 = 0x656D6F7268436F6ELL;
    else
      v216 = 0x656D6F726863;
    if (v213)
      v217 = 0xE800000000000000;
    else
      v217 = 0xE600000000000000;
    if (v214 == v216 && v215 == v217)
    {
      swift_bridgeObjectRelease_n();
      sub_1BC6ED784(v241, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ED784(v242, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      v147 = v239;
      sub_1BC6ECB08((uint64_t)a1, v239, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      v148 = v240;
      sub_1BC6ECB08((uint64_t)a2, v240, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    }
    else
    {
      v218 = sub_1BC818694();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC6ED784(v241, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ED784(v242, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      v147 = v239;
      sub_1BC6ECB08((uint64_t)a1, v239, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      v148 = v240;
      sub_1BC6ECB08((uint64_t)a2, v240, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      v149 = 0;
      if ((v218 & 1) == 0)
        goto LABEL_41;
    }
    v149 = sub_1BC7047E8(*(_QWORD *)(v147 + v225[14]), *(_QWORD *)(v148 + v225[14]));
    goto LABEL_41;
  }
LABEL_36:
  sub_1BC6ED784(v144, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v143, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
LABEL_37:
  sub_1BC6ECB08((uint64_t)a1, v134, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ECB08((uint64_t)a2, v137, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
LABEL_38:
  sub_1BC6ED784(v137, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v134, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
LABEL_39:
  sub_1BC6ECB08((uint64_t)a1, v133, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ECB08((uint64_t)a2, v132, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
LABEL_40:
  sub_1BC6ED784(v133, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v132, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v145 = v242;
  sub_1BC6ECB08((uint64_t)a1, v242, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v146 = v241;
  sub_1BC6ECB08((uint64_t)a2, v241, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v146, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v145, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v147 = v239;
  sub_1BC6ECB08((uint64_t)a1, v239, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v148 = v240;
  sub_1BC6ECB08((uint64_t)a2, v240, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v149 = 0;
LABEL_41:
  sub_1BC6ED784(v147, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  sub_1BC6ED784(v148, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  return v149 & 1;
}

uint64_t sub_1BC722C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RelevantDateInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC722C80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BB1C0)
  {
    v0 = sub_1BC817D04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BB1C0);
  }
}

unint64_t sub_1BC722CD4()
{
  unint64_t result;

  result = qword_1ED6BAAD8;
  if (!qword_1ED6BAAD8)
  {
    type metadata accessor for PluginFeedItem();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BAAD8);
  }
  return result;
}

unint64_t sub_1BC722D10()
{
  unint64_t result;

  result = qword_1EF45B398;
  if (!qword_1EF45B398)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for UserInterface, &type metadata for UserInterface);
    atomic_store(result, (unint64_t *)&qword_1EF45B398);
  }
  return result;
}

uint64_t sub_1BC722D54()
{
  return sub_1BC6E1788(&qword_1EF45B3A0, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t)&protocol conformance descriptor for PluginFeedItem);
}

uint64_t initializeBufferWithCopyOfBuffer for PluginFeedItem(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  _OWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  void *v59;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[2];
    v9 = a2[3];
    v10 = *((_BYTE *)a2 + 32);
    swift_bridgeObjectRetain();
    sub_1BC6ECAD4(v8, v9, v10);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = v10;
    *(_BYTE *)(a1 + 33) = *((_BYTE *)a2 + 33);
    v11 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v11;
    v12 = a2 + 7;
    v13 = a2[8];
    swift_bridgeObjectRetain();
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 56) = *v12;
    }
    else
    {
      v15 = *(_QWORD *)v12;
      sub_1BC6ECBE8(v15, v13);
      *(_QWORD *)(a1 + 56) = v15;
      *(_QWORD *)(a1 + 64) = v13;
    }
    v16 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v16;
    v17 = a2 + 11;
    v18 = a2[12];
    swift_bridgeObjectRetain();
    if (v18 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 88) = *v17;
    }
    else
    {
      v19 = *(_QWORD *)v17;
      sub_1BC6ECBE8(v19, v18);
      *(_QWORD *)(a1 + 88) = v19;
      *(_QWORD *)(a1 + 96) = v18;
    }
    v20 = a3[11];
    v21 = (char *)(a1 + v20);
    v22 = (char *)a2 + v20;
    v23 = type metadata accessor for RelevantDateInterval();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      sub_1BC6ECA48(0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = sub_1BC816C9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v21, v22, v26);
      *(_QWORD *)&v21[*(int *)(v23 + 20)] = *(_QWORD *)&v22[*(int *)(v23 + 20)];
      *(_QWORD *)&v21[*(int *)(v23 + 24)] = *(_QWORD *)&v22[*(int *)(v23 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v27 = a3[13];
    *(_BYTE *)(a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    *(_QWORD *)(a1 + v27) = *(uint64_t *)((char *)a2 + v27);
    v28 = a3[15];
    *(_QWORD *)(a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    v29 = (_QWORD *)(a1 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v58 = v30[1];
    *v29 = *v30;
    v29[1] = v58;
    v31 = a3[17];
    *(_QWORD *)(a1 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    *(_QWORD *)(a1 + v31) = *(uint64_t *)((char *)a2 + v31);
    v32 = a3[18];
    v33 = a3[19];
    v59 = *(void **)((char *)a2 + v32);
    *(_QWORD *)(a1 + v32) = v59;
    v34 = (_QWORD *)(a1 + v33);
    v35 = (uint64_t *)((char *)a2 + v33);
    v57 = v35[1];
    *v34 = *v35;
    v34[1] = v57;
    v36 = a3[20];
    v37 = a3[21];
    v38 = (_QWORD *)(a1 + v36);
    v39 = (uint64_t *)((char *)a2 + v36);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = (_QWORD *)(a1 + v37);
    v42 = (uint64_t *)((char *)a2 + v37);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v44 = a3[23];
    *(_QWORD *)(a1 + a3[22]) = *(uint64_t *)((char *)a2 + a3[22]);
    *(_BYTE *)(a1 + v44) = *((_BYTE *)a2 + v44);
    v45 = a3[25];
    *(_BYTE *)(a1 + a3[24]) = *((_BYTE *)a2 + a3[24]);
    *(_BYTE *)(a1 + v45) = *((_BYTE *)a2 + v45);
    v46 = a3[26];
    v47 = a3[27];
    v48 = (_QWORD *)(a1 + v46);
    v49 = (uint64_t *)((char *)a2 + v46);
    v50 = v49[1];
    *v48 = *v49;
    v48[1] = v50;
    v51 = (_QWORD *)(a1 + v47);
    v52 = (uint64_t)a2 + v47;
    v53 = *(uint64_t *)((char *)a2 + v47);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v54 = v59;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v53)
    {
      v55 = *(_QWORD *)(v52 + 8);
      *v51 = v53;
      v51[1] = v55;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v51 = *(_OWORD *)v52;
    }
    *(_BYTE *)(a1 + a3[28]) = *((_BYTE *)a2 + a3[28]);
  }
  return a1;
}

uint64_t destroy for PluginFeedItem(uint64_t a1, int *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  sub_1BC6ECABC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 64);
  if (v4 >> 60 != 15)
    sub_1BC6ECB60(*(_QWORD *)(a1 + 56), v4);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a1 + 96);
  if (v5 >> 60 != 15)
    sub_1BC6ECB60(*(_QWORD *)(a1 + 88), v5);
  v6 = a1 + a2[11];
  v7 = type metadata accessor for RelevantDateInterval();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = sub_1BC816C9C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[27]))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for PluginFeedItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  _OWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  void *v57;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_1BC6ECAD4(v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v10 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v10;
  v11 = (_OWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 56) = *v11;
  }
  else
  {
    v13 = *(_QWORD *)v11;
    sub_1BC6ECBE8(v13, v12);
    *(_QWORD *)(a1 + 56) = v13;
    *(_QWORD *)(a1 + 64) = v12;
  }
  v14 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v14;
  v15 = (_OWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 88) = *v15;
  }
  else
  {
    v17 = *(_QWORD *)v15;
    sub_1BC6ECBE8(v17, v16);
    *(_QWORD *)(a1 + 88) = v17;
    *(_QWORD *)(a1 + 96) = v16;
  }
  v18 = a3[11];
  v19 = (char *)(a1 + v18);
  v20 = (char *)(a2 + v18);
  v21 = type metadata accessor for RelevantDateInterval();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    sub_1BC6ECA48(0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = sub_1BC816C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v19, v20, v24);
    *(_QWORD *)&v19[*(int *)(v21 + 20)] = *(_QWORD *)&v20[*(int *)(v21 + 20)];
    *(_QWORD *)&v19[*(int *)(v21 + 24)] = *(_QWORD *)&v20[*(int *)(v21 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v25 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  v26 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v56 = v28[1];
  *v27 = *v28;
  v27[1] = v56;
  v29 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  v30 = a3[18];
  v31 = a3[19];
  v57 = *(void **)(a2 + v30);
  *(_QWORD *)(a1 + v30) = v57;
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v55 = v33[1];
  *v32 = *v33;
  v32[1] = v55;
  v34 = a3[20];
  v35 = a3[21];
  v36 = (_QWORD *)(a1 + v34);
  v37 = (_QWORD *)(a2 + v34);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = (_QWORD *)(a1 + v35);
  v40 = (_QWORD *)(a2 + v35);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = a3[23];
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v42) = *(_BYTE *)(a2 + v42);
  v43 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v43) = *(_BYTE *)(a2 + v43);
  v44 = a3[26];
  v45 = a3[27];
  v46 = (_QWORD *)(a1 + v44);
  v47 = (_QWORD *)(a2 + v44);
  v48 = v47[1];
  *v46 = *v47;
  v46[1] = v48;
  v49 = (_QWORD *)(a1 + v45);
  v50 = a2 + v45;
  v51 = *(_QWORD *)(a2 + v45);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v52 = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v51)
  {
    v53 = *(_QWORD *)(v50 + 8);
    *v49 = v51;
    v49[1] = v53;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v49 = *(_OWORD *)v50;
  }
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  return a1;
}

uint64_t assignWithCopy for PluginFeedItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_1BC6ECAD4(v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v11 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_1BC6ECABC(v9, v10, v11);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) >> 60 == 15)
  {
    if (v13 >> 60 != 15)
    {
      v14 = *v12;
      sub_1BC6ECBE8(*v12, *(_QWORD *)(a2 + 64));
      *(_QWORD *)(a1 + 56) = v14;
      *(_QWORD *)(a1 + 64) = v13;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v13 >> 60 == 15)
  {
    sub_1BC6F8258(a1 + 56);
LABEL_6:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v12;
    goto LABEL_8;
  }
  v15 = *v12;
  sub_1BC6ECBE8(*v12, *(_QWORD *)(a2 + 64));
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v13;
  sub_1BC6ECB60(v16, v17);
LABEL_8:
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (uint64_t *)(a2 + 88);
  v19 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) >> 60 == 15)
  {
    if (v19 >> 60 != 15)
    {
      v20 = *v18;
      sub_1BC6ECBE8(*v18, *(_QWORD *)(a2 + 96));
      *(_QWORD *)(a1 + 88) = v20;
      *(_QWORD *)(a1 + 96) = v19;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v19 >> 60 == 15)
  {
    sub_1BC6F8258(a1 + 88);
LABEL_13:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)v18;
    goto LABEL_15;
  }
  v21 = *v18;
  sub_1BC6ECBE8(*v18, *(_QWORD *)(a2 + 96));
  v22 = *(_QWORD *)(a1 + 88);
  v23 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v21;
  *(_QWORD *)(a1 + 96) = v19;
  sub_1BC6ECB60(v22, v23);
LABEL_15:
  v24 = a3[11];
  v25 = (char *)(a1 + v24);
  v26 = (char *)(a2 + v24);
  v27 = type metadata accessor for RelevantDateInterval();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      v32 = sub_1BC816C9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v25, v26, v32);
      *(_QWORD *)&v25[*(int *)(v27 + 20)] = *(_QWORD *)&v26[*(int *)(v27 + 20)];
      *(_QWORD *)&v25[*(int *)(v27 + 24)] = *(_QWORD *)&v26[*(int *)(v27 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v31)
  {
    sub_1BC6ED784((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for RelevantDateInterval);
LABEL_20:
    sub_1BC6ECA48(0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_21;
  }
  v61 = sub_1BC816C9C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 24))(v25, v26, v61);
  *(_QWORD *)&v25[*(int *)(v27 + 20)] = *(_QWORD *)&v26[*(int *)(v27 + 20)];
  *(_QWORD *)&v25[*(int *)(v27 + 24)] = *(_QWORD *)&v26[*(int *)(v27 + 24)];
LABEL_21:
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = a3[15];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = a3[18];
  v38 = *(void **)(a1 + v37);
  v39 = *(void **)(a2 + v37);
  *(_QWORD *)(a1 + v37) = v39;
  v40 = v39;

  v41 = a3[19];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = a3[20];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  *v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = a3[21];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  v50 = a3[26];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (_QWORD *)(a2 + v50);
  *v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = a3[27];
  v54 = (_QWORD *)(a1 + v53);
  v55 = a2 + v53;
  v56 = *(_QWORD *)(a1 + v53);
  v57 = *(_QWORD *)(a2 + v53);
  if (!v56)
  {
    if (v57)
    {
      v59 = *(_QWORD *)(v55 + 8);
      *v54 = v57;
      v54[1] = v59;
      swift_retain();
      goto LABEL_28;
    }
LABEL_27:
    *(_OWORD *)v54 = *(_OWORD *)v55;
    goto LABEL_28;
  }
  if (!v57)
  {
    swift_release();
    goto LABEL_27;
  }
  v58 = *(_QWORD *)(v55 + 8);
  *v54 = v57;
  v54[1] = v58;
  swift_retain();
  swift_release();
LABEL_28:
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  return a1;
}

uint64_t initializeWithTake for PluginFeedItem(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = a3[11];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v10 = type metadata accessor for RelevantDateInterval();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1BC6ECA48(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_1BC816C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
    *(_QWORD *)&v8[*(int *)(v10 + 20)] = *(_QWORD *)&v9[*(int *)(v10 + 20)];
    *(_QWORD *)&v8[*(int *)(v10 + 24)] = *(_QWORD *)&v9[*(int *)(v10 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  v16 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[19];
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  v18 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  v19 = a3[23];
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  v20 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[27];
  *(_OWORD *)(a1 + a3[26]) = *(_OWORD *)(a2 + a3[26]);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v24 = *v23;
  if (*v23)
  {
    v25 = v23[1];
    *v22 = v24;
    v22[1] = v25;
  }
  else
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  return a1;
}

uint64_t assignWithTake for PluginFeedItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1BC6ECABC(v8, v9, v10);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  v12 = (_OWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  if (v13 >> 60 == 15)
    goto LABEL_4;
  v14 = *(_QWORD *)(a2 + 64);
  if (v14 >> 60 == 15)
  {
    sub_1BC6F8258(a1 + 56);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *v12;
    goto LABEL_6;
  }
  v15 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)v12;
  *(_QWORD *)(a1 + 64) = v14;
  sub_1BC6ECB60(v15, v13);
LABEL_6:
  v16 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v16;
  swift_bridgeObjectRelease();
  v17 = (_OWORD *)(a2 + 88);
  v18 = *(_QWORD *)(a1 + 96);
  if (v18 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 88) = *v17;
    goto LABEL_11;
  }
  v19 = *(_QWORD *)(a2 + 96);
  if (v19 >> 60 == 15)
  {
    sub_1BC6F8258(a1 + 88);
    goto LABEL_9;
  }
  v20 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)v17;
  *(_QWORD *)(a1 + 96) = v19;
  sub_1BC6ECB60(v20, v18);
LABEL_11:
  v21 = a3[11];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v24 = type metadata accessor for RelevantDateInterval();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      v29 = sub_1BC816C9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v22, v23, v29);
      *(_QWORD *)&v22[*(int *)(v24 + 20)] = *(_QWORD *)&v23[*(int *)(v24 + 20)];
      *(_QWORD *)&v22[*(int *)(v24 + 24)] = *(_QWORD *)&v23[*(int *)(v24 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v28)
  {
    sub_1BC6ED784((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for RelevantDateInterval);
LABEL_16:
    sub_1BC6ECA48(0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_17;
  }
  v69 = sub_1BC816C9C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 40))(v22, v23, v69);
  *(_QWORD *)&v22[*(int *)(v24 + 20)] = *(_QWORD *)&v23[*(int *)(v24 + 20)];
  *(_QWORD *)&v22[*(int *)(v24 + 24)] = *(_QWORD *)&v23[*(int *)(v24 + 24)];
LABEL_17:
  v31 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  v32 = a3[15];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)(a2 + v32);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  v37 = a3[18];
  v38 = *(void **)(a1 + v37);
  *(_QWORD *)(a1 + v37) = *(_QWORD *)(a2 + v37);

  v39 = a3[19];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (uint64_t *)(a2 + v39);
  v43 = *v41;
  v42 = v41[1];
  *v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  v44 = a3[20];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (uint64_t *)(a2 + v44);
  v48 = *v46;
  v47 = v46[1];
  *v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  v49 = a3[21];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v53 = *v51;
  v52 = v51[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  v54 = a3[23];
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v54) = *(_BYTE *)(a2 + v54);
  v55 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v55) = *(_BYTE *)(a2 + v55);
  v56 = a3[26];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (uint64_t *)(a2 + v56);
  v60 = *v58;
  v59 = v58[1];
  *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  v61 = a3[27];
  v62 = (_QWORD *)(a1 + v61);
  v63 = a2 + v61;
  v64 = *(_QWORD *)(a1 + v61);
  v65 = *(_QWORD *)(a2 + v61);
  if (!v64)
  {
    if (v65)
    {
      v67 = *(_QWORD *)(v63 + 8);
      *v62 = v65;
      v62[1] = v67;
      goto LABEL_24;
    }
LABEL_23:
    *(_OWORD *)v62 = *(_OWORD *)v63;
    goto LABEL_24;
  }
  if (!v65)
  {
    swift_release();
    goto LABEL_23;
  }
  v66 = *(_QWORD *)(v63 + 8);
  *v62 = v65;
  v62[1] = v66;
  swift_release();
LABEL_24:
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginFeedItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC723FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BC6ECA48(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PluginFeedItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC724044(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BC6ECA48(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

void sub_1BC7240B8()
{
  unint64_t v0;

  sub_1BC6ECA48(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t destroy for UserInterface(uint64_t a1)
{
  return sub_1BC6ECABC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s14HealthPlatform13UserInterfaceOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BC6ECAD4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for UserInterface(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BC6ECAD4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BC6ECABC(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for UserInterface(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BC6ECABC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserInterface(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UserInterface(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC72434C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 5u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_1BC724364(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(_QWORD *)result = a2 - 6;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 6;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UserInterface()
{
  return &type metadata for UserInterface;
}

uint64_t sub_1BC72438C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_1BC724398()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC7243BC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6BAB38)
  {
    sub_1BC6ECA48(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6BAB38);
  }
}

unint64_t sub_1BC72441C()
{
  unint64_t result;

  result = qword_1ED6BB298;
  if (!qword_1ED6BB298)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BB298);
  }
  return result;
}

unint64_t static UserDefaultsKeys.appFirstLaunchDateKey.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_1BC724474()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1BC817AE8();
  qword_1ED6B7D58 = result;
  unk_1ED6B7D60 = v1;
  return result;
}

uint64_t static UserDefaultsKeys.appLastOpenedDateKey.getter()
{
  uint64_t v0;

  if (qword_1ED6B7D70 != -1)
    swift_once();
  v0 = qword_1ED6B7D58;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t static UserDefaultsKeys.healthKitDatabaseIdentifierKey.getter()
{
  return 0xD00000000000002FLL;
}

unint64_t static UserDefaultsKeys.primaryProfileSignificantChangesEnabledDate.getter()
{
  return 0xD00000000000003CLL;
}

ValueMetadata *type metadata accessor for UserDefaultsKeys()
{
  return &type metadata for UserDefaultsKeys;
}

uint64_t sub_1BC724544(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD v13[2];

  v2 = sub_1BC816F3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0x636974736F6E6761;
  v6 = a1;
  objc_msgSend(v6, sel_type);
  v7 = (id)HKStringFromProfileType();
  v8 = sub_1BC817AE8();
  v10 = v9;

  v13[0] = v8;
  v13[1] = v10;
  sub_1BC817B48();
  v11 = objc_msgSend(v6, sel_identifier);
  sub_1BC816F24();

  sub_1BC816F00();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1BC817B48();

  swift_bridgeObjectRelease();
  return v13[0];
}

Swift::Void __swiftcall NSManagedObjectContext.queue_deleteDataForInvalidProfiles(existingProfiles:)(Swift::OpaquePointer existingProfiles)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *rawValue;
  void *v18;
  id v19;
  id v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  ObjectType = swift_getObjectType();
  sub_1BC6ECA64(0, &qword_1ED6B7C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v42 - v4;
  v6 = sub_1BC816F3C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v46 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v42 - v11;
  MEMORY[0x1E0C80A78](v10);
  v45 = (char *)&v42 - v13;
  v14 = *((_QWORD *)existingProfiles._rawValue + 2);
  if (v14)
  {
    v43 = ObjectType;
    swift_bridgeObjectRetain();
    v15 = 0;
    v16 = MEMORY[0x1E0DEE9D8];
    rawValue = existingProfiles._rawValue;
    v44 = existingProfiles._rawValue;
    while (1)
    {
      v18 = (void *)rawValue[v15 + 4];
      if (v18)
      {
        v19 = v18;
        v20 = objc_msgSend(v19, sel_identifier);
        sub_1BC816F24();

        v21 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v21(v5, v12, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);

        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
        {
          v22 = v45;
          v21(v45, v5, v6);
          v21(v46, v22, v6);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v23 = v16;
          else
            v23 = sub_1BC7258FC(0, *(_QWORD *)(v16 + 16) + 1, 1, v16, &qword_1ED6B86F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);
          v25 = *(_QWORD *)(v23 + 16);
          v24 = *(_QWORD *)(v23 + 24);
          if (v25 >= v24 >> 1)
            v23 = sub_1BC7258FC(v24 > 1, v25 + 1, 1, v23, &qword_1ED6B86F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);
          *(_QWORD *)(v23 + 16) = v25 + 1;
          v16 = v23;
          v21((char *)(v23+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v25), v46, v6);
          rawValue = v44;
          goto LABEL_5;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
      }
      sub_1BC724C5C((uint64_t)v5);
LABEL_5:
      if (v14 == ++v15)
      {
        swift_bridgeObjectRelease();
        ObjectType = v43;
        goto LABEL_16;
      }
    }
  }
  v16 = MEMORY[0x1E0DEE9D8];
LABEL_16:
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v26 = sub_1BC817590();
  __swift_project_value_buffer(v26, (uint64_t)qword_1ED6BB5D0);
  v27 = v16;
  swift_bridgeObjectRetain_n();
  v28 = sub_1BC81756C();
  v29 = sub_1BC817E9C();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v47 = v31;
    v48 = ObjectType;
    *(_DWORD *)v30 = 136446466;
    swift_getMetatypeMetadata();
    v32 = sub_1BC817AF4();
    v48 = sub_1BC6E14D8(v32, v33, &v47);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2080;
    v34 = swift_bridgeObjectRetain();
    v35 = MEMORY[0x1BCCF4914](v34, v6);
    v37 = v36;
    swift_bridgeObjectRelease();
    v48 = sub_1BC6E14D8(v35, v37, &v47);
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v28, v29, "[%{public}s]: Deleting feedItems not associated with these sourceProfiles: %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v31, -1, -1);
    MEMORY[0x1BCCF5BA4](v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  type metadata accessor for Profile();
  v38 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  sub_1BC731220(0, (unint64_t *)&qword_1ED6BA818, (unint64_t *)&qword_1ED6BB290);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1BC81A0E0;
  sub_1BC6ECA64(0, &qword_1ED6B83C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(_QWORD *)(v39 + 56) = v40;
  *(_QWORD *)(v39 + 64) = sub_1BC725508();
  *(_QWORD *)(v39 + 32) = v27;
  *(_QWORD *)(v39 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v39 + 104) = sub_1BC6ED740();
  *(_QWORD *)(v39 + 72) = 0xD000000000000010;
  *(_QWORD *)(v39 + 80) = 0x80000001BC825700;
  v41 = (void *)sub_1BC817E3C();
  objc_msgSend(v38, sel_setPredicate_, v41);
  sub_1BC724CB0((uint64_t)v41);

}

uint64_t sub_1BC724C5C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC6ECA64(0, &qword_1ED6B7C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC724CB0(uint64_t a1)
{
  void *v1;
  id v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t result;

  type metadata accessor for Profile();
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_msgSend(v3, sel_setPredicate_, a1);
  objc_msgSend(v3, sel_setIncludesPropertyValues_, 0);
  v4 = sub_1BC8180AC();
  v5 = v4;
  if (!(v4 >> 62))
  {
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
LABEL_10:

    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  v6 = sub_1BC8184E4();
  if (!v6)
    goto LABEL_10;
LABEL_3:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1BCCF4FB0](i, v5);
      else
        v8 = *(id *)(v5 + 8 * i + 32);
      v9 = v8;
      objc_msgSend(v1, sel_deleteObject_, v8);

    }
    goto LABEL_10;
  }
  __break(1u);
  sub_1BC8182C8();
  sub_1BC817B48();
  sub_1BC817B48();
  sub_1BC817B48();
  sub_1BC6ED814(0, (unint64_t *)&qword_1ED6B87B0);
  sub_1BC8183E8();
  result = sub_1BC8184B4();
  __break(1u);
  return result;
}

Swift::Void __swiftcall NSManagedObjectContext.queue_createProfiles(for:)(Swift::OpaquePointer a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  void *v23;
  uint64_t j;
  void *v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  void *v46;
  void *rawValue;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t ObjectType;
  __int128 v55;
  void *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  id v64;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v4 = sub_1BC816F3C();
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  MEMORY[0x1E0C80A78](v4);
  v49 = (char *)&rawValue - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = *((_QWORD *)a1._rawValue + 2);
  if (v58)
  {
    v57 = (char *)a1._rawValue + 32;
    rawValue = a1._rawValue;
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = 0;
    *(_QWORD *)&v8 = 136446722;
    v53 = v8;
    v52 = MEMORY[0x1E0DEE9B8] + 8;
    v55 = xmmword_1BC81A0F0;
    v48 = v1;
    while (1)
    {
      v9 = *(void **)&v57[8 * v6];
      if (v9)
      {
        sub_1BC6ECA64(0, &qword_1ED6BA570, (uint64_t (*)(uint64_t))type metadata accessor for UserProfile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v10 = type metadata accessor for UserProfile();
        v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
        v12 = (v11 + 32) & ~v11;
        v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = v55;
        v14 = v9;
        v15 = objc_msgSend(v14, sel_identifier);
        sub_1BC816F24();

        *(_QWORD *)(v13 + v12 + *(int *)(v10 + 20)) = v14;
        v16 = sub_1BC730FC0(v13);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();

      }
      else
      {
        v16 = MEMORY[0x1E0DEE9E8];
      }
      v17 = v2;
      v18 = (unint64_t)sub_1BC6EC440(v16, (uint64_t)v17);

      if (v18 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_1BC8184E4();
        swift_bridgeObjectRelease();
      }
      v19 = type metadata accessor for Profile();
      v20 = sub_1BC6E1788(&qword_1ED6BA3E8, (uint64_t (*)(uint64_t))type metadata accessor for Profile, MEMORY[0x1E0DEFCF8]);
      v62 = sub_1BC817D94();
      if (v18 >> 62)
      {
        swift_bridgeObjectRetain();
        v21 = sub_1BC8184E4();
        swift_bridgeObjectRelease();
        v60 = v19;
        if (!v21)
          goto LABEL_21;
      }
      else
      {
        v21 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
        v60 = v19;
        if (!v21)
          goto LABEL_21;
      }
      if (v21 < 1)
      {
        __break(1u);
        return;
      }
      if ((v18 & 0xC000000000000001) != 0)
      {
        for (i = 0; i != v21; ++i)
        {
          v23 = (void *)MEMORY[0x1BCCF4FB0](i, v18);
          sub_1BC726F34(&v64, v23);

        }
      }
      else
      {
        for (j = 0; j != v21; ++j)
        {
          v25 = *(void **)(v18 + 8 * j + 32);
          sub_1BC726F34(&v64, v25);

        }
      }
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v59 = v20;
      v61 = v7;
      if (qword_1ED6BB338 != -1)
        swift_once();
      v26 = sub_1BC817590();
      __swift_project_value_buffer(v26, (uint64_t)qword_1ED6BB320);
      v27 = v9;
      swift_bridgeObjectRetain();
      v28 = sub_1BC81756C();
      v29 = sub_1BC817E9C();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v31 = (void *)swift_slowAlloc();
        v64 = v31;
        *(_DWORD *)v30 = v53;
        v62 = ObjectType;
        swift_getMetatypeMetadata();
        v32 = sub_1BC817AF4();
        *(_QWORD *)(v30 + 4) = sub_1BC6E14D8(v32, v33, (uint64_t *)&v64);
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        v56 = v31;
        if (v9)
        {
          v34 = v27;
          objc_msgSend(v34, sel_type);
          v35 = (id)HKStringFromProfileType();
          v36 = sub_1BC817AE8();
          v38 = v37;

          v62 = v36;
          v63 = v38;
          sub_1BC817B48();
          v39 = objc_msgSend(v34, sel_identifier);
          v40 = v49;
          sub_1BC816F24();

          sub_1BC816F00();
          (*(void (**)(char *, uint64_t))(v50 + 8))(v40, v51);
          sub_1BC817B48();

          v2 = v48;
          swift_bridgeObjectRelease();
          v41 = v62;
          v42 = v63;
        }
        else
        {
          v42 = 0xE800000000000000;
          v41 = 0x636974736F6E6761;
        }
        *(_QWORD *)(v30 + 14) = sub_1BC6E14D8(v41, v42, (uint64_t *)&v64);

        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 22) = 2080;
        swift_bridgeObjectRetain();
        v43 = sub_1BC817D88();
        v45 = v44;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v30 + 24) = sub_1BC6E14D8(v43, v45, (uint64_t *)&v64);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v28, v29, "[%{public}s]: Updating profiles in cache for sourceProfile <%s>; profiles: <%s>",
          (uint8_t *)v30,
          0x20u);
        v46 = v56;
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v46, -1, -1);
        MEMORY[0x1BCCF5BA4](v30, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      ++v6;
      v7 = v61;
      if (v6 == v58)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

unint64_t sub_1BC725508()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B83D0;
  if (!qword_1ED6B83D0)
  {
    sub_1BC6ECA64(255, &qword_1ED6B83C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0CB1B18], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B83D0);
  }
  return result;
}

_QWORD *sub_1BC725568(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC732460(0, (unint64_t *)&qword_1ED6BB1F0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC73090C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC725680(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC7256A8(a1, a2, a3, a4, &qword_1ED6B8728);
}

_QWORD *sub_1BC725694(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC7256A8(a1, a2, a3, a4, &qword_1ED6B8730);
}

_QWORD *sub_1BC7256A8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      sub_1BC732460(0, a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 4])
          memmove(v14, a4 + 4, 32 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC730CC8(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC7257C8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC6ECA64(0, &qword_1ED6B87A0, (uint64_t (*)(uint64_t))sub_1BC6ED170, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC7309FC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC7258E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC7258FC(a1, a2, a3, a4, (unint64_t *)&unk_1ED6BA560, type metadata accessor for HealthAppPluginSource.KnownBundle);
}

uint64_t sub_1BC7258FC(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BC6ECA64(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1BC8184A8();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BC731D1C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1BC725B18(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC732460(0, qword_1ED6B9C88);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC730AE4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC725C48(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC725DCC(a1, a2, a3, a4, &qword_1ED6B9770, (uint64_t (*)(uint64_t))sub_1BC732188);
}

_QWORD *sub_1BC725C5C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC732460(0, &qword_1EF45AF78);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC730DB4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC725D90(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC7258FC(a1, a2, a3, a4, &qword_1EF45AFA8, type metadata accessor for UnprotectedNotificationContentState);
}

uint64_t sub_1BC725DA4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC7258FC(a1, a2, a3, a4, &qword_1EF45AFB0, type metadata accessor for ProtectedNotificationContentState);
}

_QWORD *sub_1BC725DB8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC725DCC(a1, a2, a3, a4, &qword_1ED6B87A8, (uint64_t (*)(uint64_t))sub_1BC6ED114);
}

_QWORD *sub_1BC725DCC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BC6ECA64(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 17;
      v12[2] = v10;
      v12[3] = 2 * (v14 >> 4);
      v15 = v12 + 4;
      if ((v7 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[2 * v10 + 4])
          memmove(v15, a4 + 4, 16 * v10);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC731614(0, v10, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC725EE4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC732460(0, &qword_1EF45AF98);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC731718(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC725FFC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC7258FC(a1, a2, a3, a4, &qword_1ED6B8740, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8]);
}

_QWORD *sub_1BC726010(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC725DCC(a1, a2, a3, a4, &qword_1EF45B3E0, (uint64_t (*)(uint64_t))sub_1BC732060);
}

_QWORD *sub_1BC726024(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC73236C(0, &qword_1EF45B438, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC730EA8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC72613C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC725DCC(a1, a2, a3, a4, &qword_1EF45B418, (uint64_t (*)(uint64_t))sub_1BC73231C);
}

_QWORD *sub_1BC726150(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC725DCC(a1, a2, a3, a4, &qword_1EF45B3C0, (uint64_t (*)(uint64_t))sub_1BC731FDC);
}

uint64_t sub_1BC726164(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC7258FC(a1, a2, a3, a4, &qword_1ED6B8710, (uint64_t (*)(uint64_t))type metadata accessor for PluginSharableModel);
}

_QWORD *sub_1BC726178(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC732460(0, &qword_1ED6B8718);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC730BD8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC726290(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC725DCC(a1, a2, a3, a4, &qword_1ED6B8708, (uint64_t (*)(uint64_t))sub_1BC731F84);
}

uint64_t sub_1BC7262A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC7258FC(a1, a2, a3, a4, &qword_1ED6BACA0, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem);
}

_QWORD *sub_1BC7262B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC732460(0, &qword_1ED6BACA8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC731E34(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC7263E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC731220(0, &qword_1ED6B8748, &qword_1ED6B7F98);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC731278(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC726514(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1BC81873C();
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  v8 = sub_1BC818778();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1BC818694() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1BC818694() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1BC72C3B8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1BC7266C0(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC818208();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1D0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC8181FC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC729D04(v7, result + 1, &qword_1EF45B3B0, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, (unint64_t *)&qword_1ED6B97F8);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC72AB18(v26, &qword_1EF45B3B0, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, (unint64_t *)&qword_1ED6B97F8);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC7D879C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC8180C4();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1D0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC8180D0();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC8180D0();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC72C550((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC72699C(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC818208();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for DataType();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC8181FC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC729ACC(v7, result + 1, &qword_1EF45B460, (uint64_t (*)(uint64_t))type metadata accessor for DataType, (unint64_t *)&unk_1ED6BA3F0);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC72A200(v26, &qword_1EF45B460, (uint64_t (*)(uint64_t))type metadata accessor for DataType, (unint64_t *)&unk_1ED6BA3F0);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC7D879C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC8180C4();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      type metadata accessor for DataType();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC8180D0();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC8180D0();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC72C8B4((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_1EF45B460, (uint64_t (*)(uint64_t))type metadata accessor for DataType, (unint64_t *)&unk_1ED6BA3F0, (void (*)(uint64_t))sub_1BC7E22D4);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC726C68(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC818208();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for Keyword();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC8181FC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC729ACC(v7, result + 1, &qword_1EF45B458, (uint64_t (*)(uint64_t))type metadata accessor for Keyword, &qword_1ED6BA730);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC72A200(v26, &qword_1EF45B458, (uint64_t (*)(uint64_t))type metadata accessor for Keyword, &qword_1ED6BA730);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC7D879C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC8180C4();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      type metadata accessor for Keyword();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC8180D0();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC8180D0();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC72C8B4((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_1EF45B458, (uint64_t (*)(uint64_t))type metadata accessor for Keyword, &qword_1ED6BA730, (void (*)(uint64_t))sub_1BC7E2498);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC726F34(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC818208();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for Profile();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC8181FC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC729ACC(v7, result + 1, &qword_1EF45B410, (uint64_t (*)(uint64_t))type metadata accessor for Profile, &qword_1ED6BA3E8);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC72A200(v26, &qword_1EF45B410, (uint64_t (*)(uint64_t))type metadata accessor for Profile, &qword_1ED6BA3E8);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC7D879C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC8180C4();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      type metadata accessor for Profile();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC8180D0();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC8180D0();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC72C8B4((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_1EF45B410, (uint64_t (*)(uint64_t))type metadata accessor for Profile, &qword_1ED6BA3E8, (void (*)(uint64_t))sub_1BC7E2898);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC727200(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1BC81873C();
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  v8 = sub_1BC818778();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1BC818694() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1BC818694() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1BC72C71C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1BC7273AC(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC818208();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for SharableModelReference();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC8181FC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC729ACC(v7, result + 1, &qword_1EF45B448, (uint64_t (*)(uint64_t))type metadata accessor for SharableModelReference, &qword_1ED6BA728);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC72A200(v26, &qword_1EF45B448, (uint64_t (*)(uint64_t))type metadata accessor for SharableModelReference, &qword_1ED6BA728);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC7D879C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC8180C4();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      type metadata accessor for SharableModelReference();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC8180D0();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC8180D0();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC72C8B4((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_1EF45B448, (uint64_t (*)(uint64_t))type metadata accessor for SharableModelReference, &qword_1ED6BA728, (void (*)(uint64_t))sub_1BC7E2C20);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC727678(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC818208();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4B0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC8181FC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC729D04(v7, result + 1, &qword_1ED6B6500, (unint64_t *)&qword_1ED6BA4B0, 0x1E0C97B90, &qword_1ED6BA4B8);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC72AB18(v26, &qword_1ED6B6500, (unint64_t *)&qword_1ED6BA4B0, 0x1E0C97B90, &qword_1ED6BA4B8);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC7D879C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC8180C4();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4B0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC8180D0();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC8180D0();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC72CA44((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC727954(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC818208();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for FeedItem();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC8181FC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC729ACC(v7, result + 1, &qword_1EF45B440, (uint64_t (*)(uint64_t))type metadata accessor for FeedItem, &qword_1EF45AFC0);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC72A200(v26, &qword_1EF45B440, (uint64_t (*)(uint64_t))type metadata accessor for FeedItem, &qword_1EF45AFC0);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC7D879C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC8180C4();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      type metadata accessor for FeedItem();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC8180D0();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC8180D0();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC72C8B4((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_1EF45B440, (uint64_t (*)(uint64_t))type metadata accessor for FeedItem, &qword_1EF45AFC0, (void (*)(uint64_t))sub_1BC7E3170);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC727C20(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC818208();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BC6ED7C0(0, &qword_1ED6B6360);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC8181FC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC729D04(v7, result + 1, &qword_1ED6B8608, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC72AB18(v26, &qword_1ED6B8608, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC7D879C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC8180C4();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BC6ED7C0(0, &qword_1ED6B6360);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC8180D0();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC8180D0();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC72CC10((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC727EFC(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  id v24;
  void *v26;
  id v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  sub_1BC817AE8();
  sub_1BC81873C();
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  v7 = sub_1BC818778();
  swift_bridgeObjectRelease();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v3;
    *v3 = 0x8000000000000000;
    v24 = a2;
    sub_1BC72CDDC((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  v10 = sub_1BC817AE8();
  v12 = v11;
  if (v10 == sub_1BC817AE8() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_1BC818694();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      v16 = ~v8;
      do
      {
        v9 = (v9 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          goto LABEL_15;
        v17 = sub_1BC817AE8();
        v19 = v18;
        if (v17 == sub_1BC817AE8() && v19 == v20)
          goto LABEL_16;
        v22 = sub_1BC818694();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  v26 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  v27 = v26;
  return 0;
}

uint64_t sub_1BC728124(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v8;
  uint64_t v10;

  v4 = *v2;
  sub_1BC81873C();
  ContentKind.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  v5 = sub_1BC818778() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v8;
  *v8 = 0x8000000000000000;
  sub_1BC72D008(a2, v5, isUniquelyReferenced_nonNull_native);
  *v8 = v10;
  swift_bridgeObjectRelease();
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_1BC7287FC(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC818208();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BC6ED7C0(0, &qword_1ED6B6390);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC8181FC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC729D04(v7, result + 1, &qword_1EF45B3A8, &qword_1ED6B6390, 0x1E0CB6C90, &qword_1ED6B8578);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC72AB18(v26, &qword_1EF45B3A8, &qword_1ED6B6390, 0x1E0CB6C90, &qword_1ED6B8578);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC7D879C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC8180C4();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BC6ED7C0(0, &qword_1ED6B6390);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC8180D0();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC8180D0();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC72D7D4((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC728AD8(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  char v27;
  BOOL v28;
  BOOL v29;
  char isUniquelyReferenced_nonNull_native;
  __int128 v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[9];
  id v56;
  uint64_t v57;
  uint64_t v58;

  v3 = v2;
  v6 = *v3;
  sub_1BC81873C();
  sub_1BC7320AC(a2, &v56);
  sub_1BC7320AC(&v56, &v58);
  v43 = a1;
  if (v58)
  {
    sub_1BC818748();
    swift_bridgeObjectRetain();
    sub_1BC7320E8(&v56);
    sub_1BC8180DC();
    sub_1BC732110(&v56);
  }
  else
  {
    sub_1BC818748();
    swift_bridgeObjectRetain();
  }
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[4];
  v12 = a2[5];
  v11 = a2[6];
  swift_bridgeObjectRetain();
  v49 = v7;
  sub_1BC817B30();
  v48 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v47 = v9;
  sub_1BC817B30();
  v46 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v45 = v12;
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  v13 = sub_1BC818778();
  v14 = -1 << *(_BYTE *)(v6 + 32);
  v15 = v13 & ~v14;
  v53 = v6 + 56;
  v41 = v3;
  v42 = (uint64_t)a2;
  if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v54 = *v41;
    *v41 = 0x8000000000000000;
    sub_1BC6ED3E8((id *)v42);
    sub_1BC72D9A0(v42, v15, isUniquelyReferenced_nonNull_native);
    *v41 = v54;
    swift_bridgeObjectRelease();
    v31 = *(_OWORD *)(v42 + 16);
    *(_OWORD *)v43 = *(_OWORD *)v42;
    *(_OWORD *)(v43 + 16) = v31;
    *(_OWORD *)(v43 + 32) = *(_OWORD *)(v42 + 32);
    *(_QWORD *)(v43 + 48) = *(_QWORD *)(v42 + 48);
    return 1;
  }
  v44 = v11;
  v52 = ~v14;
  v50 = v6;
  while (1)
  {
    v17 = *(_QWORD *)(v6 + 48) + 56 * v15;
    v19 = *(void **)v17;
    v18 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(_QWORD *)(v17 + 24);
    v23 = *(_QWORD *)(v17 + 32);
    v22 = *(_QWORD *)(v17 + 40);
    v24 = *(_QWORD *)(v17 + 48);
    if (*(_QWORD *)v17)
    {
      sub_1BC7320AC(&v56, &v57);
      if (!v57)
        goto LABEL_7;
      v51 = v22;
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
      sub_1BC7320E8(&v56);
      v25 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = v25;
      v27 = sub_1BC8180D0();
      sub_1BC732110(&v56);

      if ((v27 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v19 = v26;
        v6 = v50;
LABEL_29:

        goto LABEL_7;
      }
    }
    else
    {
      sub_1BC7320AC(&v56, v55);
      if (v55[0])
        goto LABEL_7;
      v51 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v28 = v18 == v49 && v20 == v48;
    if (!v28 && (sub_1BC818694() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = v50;
      goto LABEL_29;
    }
    v29 = v21 == v47 && v23 == v46;
    v6 = v50;
    if (!v29 && (sub_1BC818694() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    if (v51 == v45 && v24 == v44)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_33;
    }
    v16 = sub_1BC818694();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if ((v16 & 1) != 0)
      break;
LABEL_7:
    v15 = (v15 + 1) & v52;
    if (((*(_QWORD *)(v53 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      goto LABEL_30;
  }
  swift_bridgeObjectRelease();
LABEL_33:
  sub_1BC732138((void **)v42);
  v33 = *(_QWORD *)(*v41 + 48) + 56 * v15;
  v35 = *(_QWORD *)(v33 + 16);
  v34 = *(_QWORD *)(v33 + 24);
  v37 = *(_QWORD *)(v33 + 32);
  v36 = *(_QWORD *)(v33 + 40);
  v38 = *(_QWORD *)(v33 + 48);
  v39 = *(_OWORD *)v33;
  *(_OWORD *)v43 = *(_OWORD *)v33;
  *(_QWORD *)(v43 + 16) = v35;
  *(_QWORD *)(v43 + 24) = v34;
  *(_QWORD *)(v43 + 32) = v37;
  *(_QWORD *)(v43 + 40) = v36;
  *(_QWORD *)(v43 + 48) = v38;
  v40 = (id)v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_1BC728F84(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1BC816F3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1BC6E1788(&qword_1ED6BA298, v11, MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1BC817A70();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1BC6E1788(&qword_1EF45B3F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v21 = sub_1BC817AB8();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC72DDC4((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1BC7291E0(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  void *v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  id v20;
  _QWORD *v21;
  uint64_t v22;

  v3 = v2;
  v6 = *v2;
  sub_1BC81873C();
  sub_1BC818748();
  swift_bridgeObjectRetain();
  if (a2)
  {
    v7 = a2;
    sub_1BC8180DC();

  }
  v8 = sub_1BC818778();
  v9 = -1 << *(_BYTE *)(v6 + 32);
  v10 = v8 & ~v9;
  v21 = v3;
  if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v21;
    *v21 = 0x8000000000000000;
    v20 = a2;
    sub_1BC72DFC8(a2, v10, isUniquelyReferenced_nonNull_native);
    *v21 = v22;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v11 = ~v9;
  while (1)
  {
    v12 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v10);
    if (v12)
      break;
    if (!a2)
      goto LABEL_11;
LABEL_6:
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_12;
  }
  if (!a2)
    goto LABEL_6;
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
  v13 = a2;
  v14 = v12;
  v15 = sub_1BC8180D0();

  if ((v15 & 1) == 0)
    goto LABEL_6;

LABEL_11:
  swift_bridgeObjectRelease();
  v16 = *(void **)(*(_QWORD *)(*v21 + 48) + 8 * v10);
  *a1 = v16;
  v17 = v16;
  return 0;
}

uint64_t sub_1BC7293C0(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC818208();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BC6ED7C0(0, &qword_1ED6B9658);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC8181FC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC729D04(v7, result + 1, &qword_1ED6B96D8, &qword_1ED6B9658, 0x1E0CB6A70, (unint64_t *)&qword_1ED6B9660);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC72AB18(v26, &qword_1ED6B96D8, &qword_1ED6B9658, 0x1E0CB6A70, (unint64_t *)&qword_1ED6B9660);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC7D879C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC8180C4();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BC6ED7C0(0, &qword_1ED6B9658);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC8180D0();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC8180D0();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC72E18C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC72969C(_BYTE *a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v4 = a2 & 1;
  v5 = *v2;
  sub_1BC81873C();
  sub_1BC818748();
  v6 = sub_1BC818778();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BC72E358(v4, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (((((_DWORD)v4 == 0) ^ *(unsigned __int8 *)(v9 + v8)) & 1) == 0)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (((((_DWORD)v4 == 0) ^ *(unsigned __int8 *)(v9 + v8)) & 1) == 0);
  }
  result = 0;
  LOBYTE(v4) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = v4;
  return result;
}

uint64_t sub_1BC7297D4(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC818208();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6B85C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC8181FC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC729D04(v7, result + 1, &qword_1EF45B3B8, (unint64_t *)&qword_1ED6B85C0, 0x1E0CB6B70, &qword_1ED6B85D0);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC72AB18(v26, &qword_1EF45B3B8, (unint64_t *)&qword_1ED6B85C0, 0x1E0CB6B70, &qword_1ED6B85D0);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC7D879C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC8180C4();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6B85C0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC8180D0();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC8180D0();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC72E4BC((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC729AB0(uint64_t a1, uint64_t a2)
{
  return sub_1BC729ACC(a1, a2, &qword_1ED6B8600, (uint64_t (*)(uint64_t))type metadata accessor for EncodedFeatureTag, &qword_1ED6BA708);
}

uint64_t sub_1BC729ACC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a2)
  {
    sub_1BC7324FC(0, a3, a4, a5, MEMORY[0x1E0DEFCF8]);
    v8 = sub_1BC818298();
    v21 = v8;
    sub_1BC8181C0();
    if (sub_1BC81822C())
    {
      a4(0);
      do
      {
        swift_dynamicCast();
        v8 = v21;
        v15 = *(_QWORD *)(v21 + 16);
        if (*(_QWORD *)(v21 + 24) <= v15)
        {
          sub_1BC72A200(v15 + 1, a3, a4, a5);
          v8 = v21;
        }
        result = sub_1BC8180C4();
        v10 = v8 + 56;
        v11 = -1 << *(_BYTE *)(v8 + 32);
        v12 = result & ~v11;
        v13 = v12 >> 6;
        if (((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          v14 = __clz(__rbit64((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v16 = 0;
          v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v18 = v13 == v17;
            if (v13 == v17)
              v13 = 0;
            v16 |= v18;
            v19 = *(_QWORD *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(_QWORD *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v20;
        ++*(_QWORD *)(v8 + 16);
      }
      while (sub_1BC81822C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v8;
}

uint64_t sub_1BC729CE0(uint64_t a1, uint64_t a2)
{
  return sub_1BC729D04(a1, a2, &qword_1ED6B6500, (unint64_t *)&qword_1ED6BA4B0, 0x1E0C97B90, &qword_1ED6BA4B8);
}

uint64_t sub_1BC729D04(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_1BC7323D8(0, a3, a4, a5, a6);
    v10 = sub_1BC818298();
    v23 = v10;
    sub_1BC8181C0();
    if (sub_1BC81822C())
    {
      sub_1BC6ED7C0(0, a4);
      do
      {
        swift_dynamicCast();
        v10 = v23;
        v17 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v17)
        {
          sub_1BC72AB18(v17 + 1, a3, a4, a5, a6);
          v10 = v23;
        }
        result = sub_1BC8180C4();
        v12 = v10 + 56;
        v13 = -1 << *(_BYTE *)(v10 + 32);
        v14 = result & ~v13;
        v15 = v14 >> 6;
        if (((-1 << v14) & ~*(_QWORD *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = 0;
          v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v20 = v15 == v19;
            if (v15 == v19)
              v15 = 0;
            v18 |= v20;
            v21 = *(_QWORD *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v16) = v22;
        ++*(_QWORD *)(v10 + 16);
      }
      while (sub_1BC81822C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v10;
}

uint64_t sub_1BC729F28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1BC731F28();
  v3 = sub_1BC81828C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1BC81873C();
      sub_1BC817B30();
      result = sub_1BC818778();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BC72A200(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;

  v5 = v4;
  v6 = *v4;
  sub_1BC7324FC(0, a2, a3, a4, MEMORY[0x1E0DEFCF8]);
  v7 = sub_1BC81828C();
  v8 = v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v32 = v4;
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v10 = (_QWORD *)(v6 + 56);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 56);
    v13 = (unint64_t)(v9 + 63) >> 6;
    v14 = v7 + 56;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v12)
      {
        v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v19 = v18 | (v16 << 6);
      }
      else
      {
        v20 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v20 >= v13)
          goto LABEL_33;
        v21 = v10[v20];
        ++v16;
        if (!v21)
        {
          v16 = v20 + 1;
          if (v20 + 1 >= v13)
            goto LABEL_33;
          v21 = v10[v16];
          if (!v21)
          {
            v16 = v20 + 2;
            if (v20 + 2 >= v13)
              goto LABEL_33;
            v21 = v10[v16];
            if (!v21)
            {
              v22 = v20 + 3;
              if (v22 >= v13)
              {
LABEL_33:
                swift_release();
                v5 = v32;
                v31 = 1 << *(_BYTE *)(v6 + 32);
                if (v31 > 63)
                  bzero((void *)(v6 + 56), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v10 = -1 << v31;
                *(_QWORD *)(v6 + 16) = 0;
                break;
              }
              v21 = v10[v22];
              if (!v21)
              {
                while (1)
                {
                  v16 = v22 + 1;
                  if (__OFADD__(v22, 1))
                    goto LABEL_39;
                  if (v16 >= v13)
                    goto LABEL_33;
                  v21 = v10[v16];
                  ++v22;
                  if (v21)
                    goto LABEL_23;
                }
              }
              v16 = v22;
            }
          }
        }
LABEL_23:
        v12 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v16 << 6);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v19);
      result = sub_1BC8180C4();
      v24 = -1 << *(_BYTE *)(v8 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v14 + 8 * v26);
        }
        while (v30 == -1);
        v17 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v17) = v23;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v5 = v8;
  return result;
}

uint64_t sub_1BC72A4A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for UserProfile();
  v35 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1BC7324FC(0, &qword_1ED6B85F0, v6, &qword_1ED6BA320, (uint64_t)&protocol conformance descriptor for UserProfile);
  v7 = sub_1BC81828C();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v10 = *(_QWORD *)(v5 + 56);
    v34 = (_QWORD *)(v5 + 56);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & v10;
    v32 = v0;
    v33 = (unint64_t)(v9 + 63) >> 6;
    v13 = v7 + 56;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v33)
          goto LABEL_33;
        v20 = v34[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v33)
            goto LABEL_33;
          v20 = v34[v15];
          if (!v20)
          {
            v15 = v19 + 2;
            if (v19 + 2 >= v33)
              goto LABEL_33;
            v20 = v34[v15];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v33)
              {
LABEL_33:
                swift_release();
                v1 = v32;
                v30 = 1 << *(_BYTE *)(v5 + 32);
                if (v30 > 63)
                  bzero(v34, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v30;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v20 = v34[v21];
              if (!v20)
              {
                while (1)
                {
                  v15 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_39;
                  if (v15 >= v33)
                    goto LABEL_33;
                  v20 = v34[v15];
                  ++v21;
                  if (v20)
                    goto LABEL_23;
                }
              }
              v15 = v21;
            }
          }
        }
LABEL_23:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(_QWORD *)(v35 + 72);
      sub_1BC7322D8(*(_QWORD *)(v5 + 48) + v22 * v18, (uint64_t)v4);
      sub_1BC81873C();
      sub_1BC816F3C();
      sub_1BC6E1788(&qword_1ED6BA298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
      sub_1BC817A7C();
      result = sub_1BC818778();
      v23 = -1 << *(_BYTE *)(v8 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v16 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      result = sub_1BC7322D8((uint64_t)v4, *(_QWORD *)(v8 + 48) + v16 * v22);
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

uint64_t sub_1BC72A828()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1BC7324A4(0, &qword_1EF45B450, (void (*)(void))sub_1BC6ED6FC);
  v3 = sub_1BC81828C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1BC81873C();
      sub_1BC817B30();
      result = sub_1BC818778();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BC72AB18(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;

  v6 = v5;
  v7 = *v5;
  sub_1BC7323D8(0, a2, a3, a4, a5);
  v8 = sub_1BC81828C();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v33 = v5;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = (_QWORD *)(v7 + 56);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v7 + 56);
    v14 = (unint64_t)(v10 + 63) >> 6;
    v15 = v8 + 56;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14)
          goto LABEL_33;
        v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v14)
            goto LABEL_33;
          v22 = v11[v17];
          if (!v22)
          {
            v17 = v21 + 2;
            if (v21 + 2 >= v14)
              goto LABEL_33;
            v22 = v11[v17];
            if (!v22)
            {
              v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                v6 = v33;
                v32 = 1 << *(_BYTE *)(v7 + 32);
                if (v32 > 63)
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v11 = -1 << v32;
                *(_QWORD *)(v7 + 16) = 0;
                break;
              }
              v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  v17 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    goto LABEL_39;
                  if (v17 >= v14)
                    goto LABEL_33;
                  v22 = v11[v17];
                  ++v23;
                  if (v22)
                    goto LABEL_23;
                }
              }
              v17 = v23;
            }
          }
        }
LABEL_23:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v20);
      result = sub_1BC8180C4();
      v25 = -1 << *(_BYTE *)(v9 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v24;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  result = swift_release();
  *v6 = v9;
  return result;
}

uint64_t sub_1BC72ADB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  sub_1BC7324FC(0, &qword_1ED6B96E0, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, &qword_1ED6B9690, (uint64_t)&unk_1BC819870);
  v3 = sub_1BC81828C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v27 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v29 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v28 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v13 = v12 | (v10 << 6);
      }
      else
      {
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28)
          goto LABEL_33;
        v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          v10 = v14 + 1;
          if (v14 + 1 >= v28)
            goto LABEL_33;
          v15 = v29[v10];
          if (!v15)
          {
            v10 = v14 + 2;
            if (v14 + 2 >= v28)
              goto LABEL_33;
            v15 = v29[v10];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                v1 = v27;
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v26;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  v10 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_39;
                  if (v10 >= v28)
                    goto LABEL_33;
                  v15 = v29[v10];
                  ++v16;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v10 = v16;
            }
          }
        }
LABEL_23:
        v7 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13);
      sub_1BC817AE8();
      sub_1BC81873C();
      sub_1BC817B30();
      v18 = sub_1BC818778();
      result = swift_bridgeObjectRelease();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = v18 & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v17;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BC72B0DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;

  v1 = *v0;
  sub_1BC7324A4(0, &qword_1ED6B8D40, (void (*)(void))sub_1BC6ED43C);
  v2 = sub_1BC81828C();
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_25;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v14 = (_QWORD *)(v1 + 56);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_retain();
  if (v5)
  {
    v7 = __clz(__rbit64(v5));
    goto LABEL_20;
  }
  if (v6 > 1)
  {
    v8 = *(_QWORD *)(v1 + 64);
    v9 = 1;
    if (v8)
      goto LABEL_19;
    v9 = 2;
    if (v6 > 2)
    {
      v8 = *(_QWORD *)(v1 + 72);
      if (v8)
        goto LABEL_19;
      v9 = 3;
      if (v6 > 3)
      {
        v8 = *(_QWORD *)(v1 + 80);
        if (!v8)
        {
          v10 = 4;
          if (v6 > 4)
          {
            v8 = *(_QWORD *)(v1 + 88);
            if (v8)
            {
              v9 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v9 = v10 + 1;
              if (__OFADD__(v10, 1))
              {
                __break(1u);
                JUMPOUT(0x1BC72B63CLL);
              }
              if (v9 >= v6)
                break;
              v8 = v14[v9];
              ++v10;
              if (v8)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
        v11 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 48) + v7);
        sub_1BC81873C();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v12 = 1 << *(_BYTE *)(v1 + 32);
  if (v12 > 63)
    bzero(v14, ((unint64_t)(v12 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v14 = -1 << v12;
  *(_QWORD *)(v1 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v0 = v2;
  return result;
}

uint64_t sub_1BC72B69C(uint64_t a1)
{
  return sub_1BC72AB18(a1, &qword_1EF45B3A8, &qword_1ED6B6390, 0x1E0CB6C90, &qword_1ED6B8578);
}

uint64_t sub_1BC72B6C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;

  v1 = v0;
  v2 = *v0;
  sub_1BC7324A4(0, &qword_1EF45B400, (void (*)(void))sub_1BC6ED3A4);
  v3 = sub_1BC81828C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v38 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v36 = v1;
    v37 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    v39 = v2;
    while (1)
    {
      if (v7)
      {
        v40 = (v7 - 1) & v7;
        v41 = v10;
        v13 = __clz(__rbit64(v7)) | (v10 << 6);
      }
      else
      {
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v14 >= v37)
          goto LABEL_35;
        v15 = v38[v14];
        v16 = v10 + 1;
        if (!v15)
        {
          v16 = v10 + 2;
          if (v10 + 2 >= v37)
            goto LABEL_35;
          v15 = v38[v16];
          if (!v15)
          {
            v16 = v10 + 3;
            if (v10 + 3 >= v37)
              goto LABEL_35;
            v15 = v38[v16];
            if (!v15)
            {
              v17 = v10 + 4;
              if (v10 + 4 >= v37)
              {
LABEL_35:
                swift_release();
                v1 = v36;
                v35 = 1 << *(_BYTE *)(v2 + 32);
                if (v35 > 63)
                  bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v35;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v38[v17];
              if (!v15)
              {
                while (1)
                {
                  v16 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_41;
                  if (v16 >= v37)
                    goto LABEL_35;
                  v15 = v38[v16];
                  ++v17;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v16 = v10 + 4;
            }
          }
        }
LABEL_23:
        v40 = (v15 - 1) & v15;
        v41 = v16;
        v13 = __clz(__rbit64(v15)) + (v16 << 6);
      }
      v18 = *(_QWORD *)(v2 + 48) + 56 * v13;
      v19 = *(void **)v18;
      v20 = *(_QWORD *)(v18 + 8);
      v21 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v18 + 24);
      v23 = *(_QWORD *)(v18 + 32);
      v24 = *(_QWORD *)(v18 + 40);
      v25 = *(_QWORD *)(v18 + 48);
      v26 = v4;
      sub_1BC81873C();
      sub_1BC818748();
      if (v19)
      {
        v27 = v19;
        sub_1BC8180DC();

      }
      swift_bridgeObjectRetain();
      sub_1BC817B30();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BC817B30();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BC817B30();
      swift_bridgeObjectRelease();
      result = sub_1BC818778();
      v4 = v26;
      v28 = -1 << *(_BYTE *)(v26 + 32);
      v29 = result & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v8 + 8 * (v29 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v8 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v8 + 8 * v30);
        }
        while (v34 == -1);
        v11 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_QWORD *)(*(_QWORD *)(v26 + 48) + 56 * v11);
      *v12 = v19;
      v12[1] = v20;
      v12[2] = v21;
      v12[3] = v22;
      v12[4] = v23;
      v12[5] = v24;
      v12[6] = v25;
      ++*(_QWORD *)(v26 + 16);
      v2 = v39;
      v7 = v40;
      v10 = v41;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BC72BA84()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v1 = v0;
  v2 = sub_1BC816F3C();
  v37 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1BC7324FC(0, &qword_1EF45B3F8, v6, &qword_1ED6BA298, MEMORY[0x1E0CB09C8]);
  v7 = sub_1BC81828C();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v10 = *(_QWORD *)(v5 + 56);
    v36 = (_QWORD *)(v5 + 56);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & v10;
    v34 = v0;
    v35 = (unint64_t)(v9 + 63) >> 6;
    v13 = v7 + 56;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v35)
          goto LABEL_33;
        v20 = v36[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v35)
            goto LABEL_33;
          v20 = v36[v15];
          if (!v20)
          {
            v15 = v19 + 2;
            if (v19 + 2 >= v35)
              goto LABEL_33;
            v20 = v36[v15];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v35)
              {
LABEL_33:
                swift_release();
                v1 = v34;
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 > 63)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v20 = v36[v21];
              if (!v20)
              {
                while (1)
                {
                  v15 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_39;
                  if (v15 >= v35)
                    goto LABEL_33;
                  v20 = v36[v15];
                  ++v21;
                  if (v20)
                    goto LABEL_23;
                }
              }
              v15 = v21;
            }
          }
        }
LABEL_23:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = v5;
      v23 = *(_QWORD *)(v5 + 48);
      v24 = *(_QWORD *)(v37 + 72);
      v25 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 32);
      v25(v4, v23 + v24 * v18, v2);
      sub_1BC6E1788(&qword_1ED6BA298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
      result = sub_1BC817A70();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v13 + 8 * (v27 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v13 + 8 * v28);
        }
        while (v32 == -1);
        v16 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(_QWORD *)(v8 + 48) + v16 * v24, v4, v2);
      ++*(_QWORD *)(v8 + 16);
      v5 = v22;
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

uint64_t sub_1BC72BE0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v1 = v0;
  v2 = *v0;
  sub_1BC7324A4(0, &qword_1ED6B85F8, (void (*)(void))sub_1BC6ED30C);
  v3 = sub_1BC81828C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v29 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_35;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_35;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_35;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_35:
                swift_release();
                v1 = v29;
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v28;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_41;
                  if (v12 >= v9)
                    goto LABEL_35;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
      sub_1BC81873C();
      sub_1BC818748();
      if (v19)
      {
        v20 = v19;
        sub_1BC8180DC();

      }
      result = sub_1BC818778();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BC72C0FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  sub_1BC7324A4(0, &qword_1EF45B3D0, (void (*)(void))sub_1BC73201C);
  result = sub_1BC81828C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_1BC81873C();
      sub_1BC818748();
      result = sub_1BC818778();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BC72C3B8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1BC729F28();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1BC7E1F60();
      goto LABEL_22;
    }
    sub_1BC72E688();
  }
  v11 = *v4;
  sub_1BC81873C();
  sub_1BC817B30();
  result = sub_1BC818778();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1BC818694(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1BC8186DC();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1BC818694();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_1BC72C550(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC72AB18(v8, &qword_1EF45B3B0, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, (unint64_t *)&qword_1ED6B97F8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BC7E210C();
      goto LABEL_14;
    }
    sub_1BC72F1BC(v8, &qword_1EF45B3B0, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, (unint64_t *)&qword_1ED6B97F8);
  }
  v9 = *v3;
  v10 = sub_1BC8180C4();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1D0);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1BC8180D0();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1BC8186DC();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1BC8180D0();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1BC72C71C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1BC72A828();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1BC7E2A5C();
      goto LABEL_22;
    }
    sub_1BC72EEFC();
  }
  v11 = *v4;
  sub_1BC81873C();
  sub_1BC817B30();
  result = sub_1BC818778();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1BC818694(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1BC8186DC();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1BC818694();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_1BC72C8B4(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, uint64_t (*a5)(uint64_t), unint64_t *a6, void (*a7)(uint64_t))
{
  uint64_t *v7;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v11 = *(_QWORD *)(*v7 + 16);
  v12 = *(_QWORD *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_14;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC72A200(v13, a4, a5, a6);
  }
  else
  {
    if (v12 > v11)
    {
      a7(v13);
      goto LABEL_14;
    }
    sub_1BC72E930(v13, a4, a5, a6);
  }
  v14 = *v7;
  v15 = sub_1BC8180C4();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    a5(0);
    v17 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
    v18 = sub_1BC8180D0();

    if ((v18 & 1) != 0)
    {
LABEL_13:
      sub_1BC8186DC();
      __break(1u);
    }
    else
    {
      v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v20 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
        v21 = sub_1BC8180D0();

        if ((v21 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v22 = *v7;
  *(_QWORD *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v22 + 48) + 8 * a2) = a1;
  v23 = *(_QWORD *)(v22 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v22 + 16) = v25;
}

void sub_1BC72CA44(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC72AB18(v8, &qword_1ED6B6500, (unint64_t *)&qword_1ED6BA4B0, 0x1E0C97B90, &qword_1ED6BA4B8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BC7E2FA8();
      goto LABEL_14;
    }
    sub_1BC72F1BC(v8, &qword_1ED6B6500, (unint64_t *)&qword_1ED6BA4B0, 0x1E0C97B90, &qword_1ED6BA4B8);
  }
  v9 = *v3;
  v10 = sub_1BC8180C4();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4B0);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1BC8180D0();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1BC8186DC();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1BC8180D0();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

void sub_1BC72CC10(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC72AB18(v8, &qword_1ED6B8608, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BC7E3334();
      goto LABEL_14;
    }
    sub_1BC72F1BC(v8, &qword_1ED6B8608, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368);
  }
  v9 = *v3;
  v10 = sub_1BC8180C4();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BC6ED7C0(0, &qword_1ED6B6360);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1BC8180D0();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1BC8186DC();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1BC8180D0();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1BC72CDDC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_1BC72ADB0();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1BC7E34FC();
LABEL_22:
      v25 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * a2) = v6;
      v26 = *(_QWORD *)(v25 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (!v27)
      {
        *(_QWORD *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1BC72F430();
  }
  v9 = *v3;
  sub_1BC817AE8();
  sub_1BC81873C();
  sub_1BC817B30();
  v10 = sub_1BC818778();
  result = swift_bridgeObjectRelease();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v12 = sub_1BC817AE8();
  v14 = v13;
  if (v12 == sub_1BC817AE8() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v17 = sub_1BC818694();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v19 = sub_1BC817AE8();
      v21 = v20;
      if (v19 == sub_1BC817AE8() && v21 == v22)
        goto LABEL_25;
      v24 = sub_1BC818694();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for HKFeatureIdentifier(0);
  result = sub_1BC8186DC();
  __break(1u);
  return result;
}

uint64_t sub_1BC72D008(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;

  v5 = *(_QWORD *)(*v3 + 16);
  v6 = *(_QWORD *)(*v3 + 24);
  if (v6 <= v5 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1BC72B0DC();
    }
    else
    {
      if (v6 > v5)
      {
        result = (uint64_t)sub_1BC7E36C4();
        goto LABEL_10;
      }
      sub_1BC72F728();
    }
    v8 = *v3;
    sub_1BC81873C();
    ContentKind.rawValue.getter();
    sub_1BC817B30();
    swift_bridgeObjectRelease();
    result = sub_1BC818778();
    a2 = result & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v14;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1BC72D6F8);
  }
  *(_QWORD *)(v9 + 16) = v12;
  return result;
}

void sub_1BC72D7D4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC72AB18(v8, &qword_1EF45B3A8, &qword_1ED6B6390, 0x1E0CB6C90, &qword_1ED6B8578);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BC7E3868();
      goto LABEL_14;
    }
    sub_1BC72F1BC(v8, &qword_1EF45B3A8, &qword_1ED6B6390, 0x1E0CB6C90, &qword_1ED6B8578);
  }
  v9 = *v3;
  v10 = sub_1BC8180C4();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BC6ED7C0(0, &qword_1ED6B6390);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1BC8180D0();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1BC8186DC();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1BC8180D0();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

void sub_1BC72D9A0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  void *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  char v31;
  BOOL v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  void *v40;
  uint64_t *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;

  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1BC72B6C0();
    }
    else
    {
      if (v8 > v7)
      {
        sub_1BC7E3A30();
        goto LABEL_37;
      }
      sub_1BC72FCB0();
    }
    v9 = *v3;
    sub_1BC81873C();
    v10 = *(void **)a1;
    v49 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      sub_1BC818748();
      v11 = v10;
      sub_1BC8180DC();

    }
    else
    {
      sub_1BC818748();
    }
    v12 = *(_QWORD *)(a1 + 8);
    v13 = *(_QWORD *)(a1 + 16);
    v14 = *(_QWORD *)(a1 + 24);
    v15 = *(_QWORD *)(a1 + 32);
    v4 = *(void **)(a1 + 40);
    v16 = *(_QWORD *)(a1 + 48);
    swift_bridgeObjectRetain();
    v47 = v12;
    sub_1BC817B30();
    v46 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v45 = v14;
    sub_1BC817B30();
    v44 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    v43 = v16;
    swift_bridgeObjectRelease();
    v17 = sub_1BC818778();
    v18 = -1 << *(_BYTE *)(v9 + 32);
    a2 = v17 & ~v18;
    v52 = v9 + 56;
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v40 = v4;
      v51 = ~v18;
      v48 = v9;
      v19 = v49;
      do
      {
        v21 = *(_QWORD *)(v9 + 48) + 56 * a2;
        v4 = *(void **)v21;
        v22 = *(_QWORD *)(v21 + 8);
        v23 = *(_QWORD *)(v21 + 16);
        v24 = *(_QWORD *)(v21 + 24);
        v25 = *(_QWORD *)(v21 + 32);
        v26 = *(_QWORD *)(v21 + 48);
        if (*(_QWORD *)v21)
        {
          if (!v19)
            goto LABEL_14;
          v50 = *(void **)(v21 + 40);
          v27 = v19;
          sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
          v28 = v27;
          v29 = v4;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v30 = v29;
          v31 = sub_1BC8180D0();

          if ((v31 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v4 = v30;
            v9 = v48;
LABEL_36:

            v19 = v49;
            goto LABEL_14;
          }
        }
        else
        {
          if (v19)
            goto LABEL_14;
          v50 = *(void **)(v21 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v32 = v22 == v47 && v23 == v46;
        if (!v32 && (sub_1BC818694() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v9 = v48;
          goto LABEL_36;
        }
        v33 = v24 == v45 && v25 == v44;
        v9 = v48;
        if (!v33 && (sub_1BC818694() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
        if (v50 == v40 && v26 == v43)
          goto LABEL_40;
        v20 = sub_1BC818694();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v19 = v49;
        if ((v20 & 1) != 0)
          goto LABEL_41;
LABEL_14:
        a2 = (a2 + 1) & v51;
      }
      while (((*(_QWORD *)(v52 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_37:
  v34 = *v41;
  *(_QWORD *)(*v41 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v35 = *(_QWORD *)(v34 + 48) + 56 * a2;
  v36 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v35 = *(_OWORD *)a1;
  *(_OWORD *)(v35 + 16) = v36;
  *(_OWORD *)(v35 + 32) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v35 + 48) = *(_QWORD *)(a1 + 48);
  v37 = *(_QWORD *)(v34 + 16);
  v38 = __OFADD__(v37, 1);
  v39 = v37 + 1;
  if (v38)
  {
    __break(1u);
LABEL_40:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_41:
    sub_1BC8186DC();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v34 + 16) = v39;
  }
}

uint64_t sub_1BC72DDC4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_1BC816F3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1BC72BA84();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1BC7E3C34();
      goto LABEL_12;
    }
    sub_1BC73007C();
  }
  v12 = *v3;
  sub_1BC6E1788(&qword_1ED6BA298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v13 = sub_1BC817A70();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_1BC6E1788(&qword_1EF45B3F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v18 = sub_1BC817AB8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1BC8186DC();
  __break(1u);
  return result;
}

void sub_1BC72DFC8(void *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_18;
  if ((a3 & 1) != 0)
  {
    sub_1BC72BE0C();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1BC7E3E74();
      goto LABEL_18;
    }
    sub_1BC7303C0();
  }
  v9 = *v3;
  sub_1BC81873C();
  sub_1BC818748();
  if (a1)
  {
    v10 = a1;
    sub_1BC8180DC();

  }
  v11 = sub_1BC818778();
  v12 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = ~v12;
    do
    {
      v14 = *(void **)(*(_QWORD *)(v9 + 48) + 8 * a2);
      if (v14)
      {
        if (a1)
        {
          sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
          v15 = a1;
          v16 = v14;
          v17 = sub_1BC8180D0();

          if ((v17 & 1) != 0)
          {
LABEL_17:
            sub_1BC8186DC();
            __break(1u);
            break;
          }
        }
      }
      else if (!a1)
      {
        goto LABEL_17;
      }
      a2 = (a2 + 1) & v13;
    }
    while (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_18:
  v18 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * a2) = a1;
  v19 = *(_QWORD *)(v18 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
    __break(1u);
  else
    *(_QWORD *)(v18 + 16) = v21;
}

void sub_1BC72E18C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC72AB18(v8, &qword_1ED6B96D8, &qword_1ED6B9658, 0x1E0CB6A70, (unint64_t *)&qword_1ED6B9660);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BC7E4030();
      goto LABEL_14;
    }
    sub_1BC72F1BC(v8, &qword_1ED6B96D8, &qword_1ED6B9658, 0x1E0CB6A70, (unint64_t *)&qword_1ED6B9660);
  }
  v9 = *v3;
  v10 = sub_1BC8180C4();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BC6ED7C0(0, &qword_1ED6B9658);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1BC8180D0();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1BC8186DC();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1BC8180D0();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1BC72E358(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result & 1;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1BC72C0FC();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1BC7E41F8();
      goto LABEL_14;
    }
    sub_1BC730680();
  }
  v8 = *v3;
  sub_1BC81873C();
  sub_1BC818748();
  result = sub_1BC818778();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if ((((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2)) & 1) != 0)
    {
LABEL_13:
      result = sub_1BC8186DC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if ((((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2)) & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void sub_1BC72E4BC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC72AB18(v8, &qword_1EF45B3B8, (unint64_t *)&qword_1ED6B85C0, 0x1E0CB6B70, &qword_1ED6B85D0);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BC7E439C();
      goto LABEL_14;
    }
    sub_1BC72F1BC(v8, &qword_1EF45B3B8, (unint64_t *)&qword_1ED6B85C0, 0x1E0CB6B70, &qword_1ED6B85D0);
  }
  v9 = *v3;
  v10 = sub_1BC8180C4();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6B85C0);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1BC8180D0();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1BC8186DC();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1BC8180D0();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1BC72E688()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1BC731F28();
  v3 = sub_1BC81828C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1BC81873C();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    result = sub_1BC818778();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC72E930(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;

  v5 = v4;
  v6 = *v4;
  sub_1BC7324FC(0, a2, a3, a4, MEMORY[0x1E0DEFCF8]);
  v7 = sub_1BC81828C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v5 = v8;
    return result;
  }
  v31 = v4;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 56);
  v13 = (unint64_t)(v9 + 63) >> 6;
  v14 = v7 + 56;
  result = swift_retain();
  v16 = 0;
  while (1)
  {
    if (v12)
    {
      v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v13)
      goto LABEL_33;
    v21 = *(_QWORD *)(v10 + 8 * v20);
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_33;
      v21 = *(_QWORD *)(v10 + 8 * v16);
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_33;
        v21 = *(_QWORD *)(v10 + 8 * v16);
        if (!v21)
          break;
      }
    }
LABEL_23:
    v12 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    v23 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v19);
    result = sub_1BC8180C4();
    v24 = -1 << *(_BYTE *)(v8 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v14 + 8 * v26);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v17) = v23;
    ++*(_QWORD *)(v8 + 16);
  }
  v22 = v20 + 3;
  if (v22 >= v13)
  {
LABEL_33:
    result = swift_release_n();
    v5 = v31;
    goto LABEL_35;
  }
  v21 = *(_QWORD *)(v10 + 8 * v22);
  if (v21)
  {
    v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v16 >= v13)
      goto LABEL_33;
    v21 = *(_QWORD *)(v10 + 8 * v16);
    ++v22;
    if (v21)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC72EBAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for UserProfile();
  v34 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1BC7324FC(0, &qword_1ED6B85F0, v6, &qword_1ED6BA320, (uint64_t)&protocol conformance descriptor for UserProfile);
  v7 = sub_1BC81828C();
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v10 = *(_QWORD *)(v5 + 56);
  v31 = v0;
  v32 = v5 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v34 + 72);
    sub_1BC732258(*(_QWORD *)(v5 + 48) + v22 * v18, (uint64_t)v4);
    sub_1BC81873C();
    sub_1BC816F3C();
    sub_1BC6E1788(&qword_1ED6BA298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    sub_1BC817A7C();
    result = sub_1BC818778();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = sub_1BC7322D8((uint64_t)v4, *(_QWORD *)(v8 + 48) + v16 * v22);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC72EEFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1BC7324A4(0, &qword_1EF45B450, (void (*)(void))sub_1BC6ED6FC);
  v3 = sub_1BC81828C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1BC81873C();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    result = sub_1BC818778();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC72F1BC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;

  v6 = v5;
  v7 = *v5;
  sub_1BC7323D8(0, a2, a3, a4, a5);
  v8 = sub_1BC81828C();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
LABEL_35:
    *v6 = v9;
    return result;
  }
  v32 = v5;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = v7 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v7 + 56);
  v14 = (unint64_t)(v10 + 63) >> 6;
  v15 = v8 + 56;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14)
      goto LABEL_33;
    v22 = *(_QWORD *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_33;
      v22 = *(_QWORD *)(v11 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v14)
          goto LABEL_33;
        v22 = *(_QWORD *)(v11 + 8 * v17);
        if (!v22)
          break;
      }
    }
LABEL_23:
    v13 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    v24 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v20);
    result = sub_1BC8180C4();
    v25 = -1 << *(_BYTE *)(v9 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v24;
    ++*(_QWORD *)(v9 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    result = swift_release_n();
    v6 = v32;
    goto LABEL_35;
  }
  v22 = *(_QWORD *)(v11 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v22 = *(_QWORD *)(v11 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC72F430()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1BC7324FC(0, &qword_1ED6B96E0, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, &qword_1ED6B9690, (uint64_t)&unk_1BC819870);
  v3 = sub_1BC81828C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v27 = v0;
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_33;
      v15 = *(_QWORD *)(v28 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_33;
        v15 = *(_QWORD *)(v28 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v13);
    sub_1BC817AE8();
    sub_1BC81873C();
    v18 = v17;
    sub_1BC817B30();
    v19 = sub_1BC818778();
    result = swift_bridgeObjectRelease();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = v19 & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v28 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC72F728()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;

  v1 = *v0;
  sub_1BC7324A4(0, &qword_1ED6B8D40, (void (*)(void))sub_1BC6ED43C);
  v2 = sub_1BC81828C();
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v3 = 1 << *(_BYTE *)(v1 + 32);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v12 = (unint64_t)(v3 + 63) >> 6;
  swift_retain();
  if (v5)
  {
    v6 = __clz(__rbit64(v5));
    goto LABEL_20;
  }
  if (v12 > 1)
  {
    v7 = *(_QWORD *)(v1 + 64);
    v8 = 1;
    if (v7)
      goto LABEL_19;
    v8 = 2;
    if (v12 > 2)
    {
      v7 = *(_QWORD *)(v1 + 72);
      if (v7)
        goto LABEL_19;
      v8 = 3;
      if (v12 > 3)
      {
        v7 = *(_QWORD *)(v1 + 80);
        if (!v7)
        {
          v9 = 4;
          if (v12 > 4)
          {
            v7 = *(_QWORD *)(v1 + 88);
            if (v7)
            {
              v8 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v8 = v9 + 1;
              if (__OFADD__(v9, 1))
              {
                __break(1u);
                JUMPOUT(0x1BC72FC50);
              }
              if (v8 >= v12)
                break;
              v7 = *(_QWORD *)(v1 + 56 + 8 * v8);
              ++v9;
              if (v7)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_20:
        v10 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 48) + v6);
        sub_1BC81873C();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
LABEL_23:
  *v0 = v2;
  return result;
}

uint64_t sub_1BC72FCB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t i;
  int64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = *v0;
  sub_1BC7324A4(0, &qword_1EF45B400, (void (*)(void))sub_1BC6ED3A4);
  v3 = sub_1BC81828C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_38:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v36 = v1;
  v37 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v38 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  for (i = v2; ; v2 = i)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v40 = v10;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v38)
      goto LABEL_36;
    v16 = *(_QWORD *)(v37 + 8 * v15);
    v17 = v10 + 1;
    if (!v16)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v38)
        goto LABEL_36;
      v16 = *(_QWORD *)(v37 + 8 * v17);
      if (!v16)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v38)
          goto LABEL_36;
        v16 = *(_QWORD *)(v37 + 8 * v17);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v40 = v17;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    v19 = *(_QWORD *)(v2 + 48) + 56 * v14;
    v20 = *(void **)v19;
    v41 = *(_QWORD *)(v19 + 8);
    v21 = *(_QWORD *)(v19 + 16);
    v22 = *(_QWORD *)(v19 + 24);
    v23 = *(_QWORD *)(v19 + 32);
    v24 = *(_QWORD *)(v19 + 40);
    v25 = *(_QWORD *)(v19 + 48);
    v26 = v4;
    sub_1BC81873C();
    sub_1BC818748();
    if (v20)
    {
      v27 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28 = v27;
      sub_1BC8180DC();

    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    swift_bridgeObjectRelease();
    result = sub_1BC818778();
    v4 = v26;
    v29 = -1 << *(_BYTE *)(v26 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v8 + 8 * (v30 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v8 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v8 + 8 * v31);
      }
      while (v35 == -1);
      v11 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v26 + 48) + 56 * v11);
    v10 = v40;
    *v12 = v20;
    v12[1] = v41;
    v12[2] = v21;
    v12[3] = v22;
    v12[4] = v23;
    v12[5] = v24;
    v12[6] = v25;
    ++*(_QWORD *)(v26 + 16);
  }
  v18 = v10 + 4;
  if (v10 + 4 >= v38)
  {
LABEL_36:
    result = swift_release_n();
    v1 = v36;
    goto LABEL_38;
  }
  v16 = *(_QWORD *)(v37 + 8 * v18);
  if (v16)
  {
    v17 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v38)
      goto LABEL_36;
    v16 = *(_QWORD *)(v37 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1BC73007C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int64_t v34;

  v1 = v0;
  v2 = sub_1BC816F3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_1BC7324FC(0, &qword_1EF45B3F8, v7, &qword_1ED6BA298, MEMORY[0x1E0CB09C8]);
  v8 = sub_1BC81828C();
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v11 = *(_QWORD *)(v6 + 56);
  v32 = v0;
  v33 = v6 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v34 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  result = swift_retain();
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v34)
      goto LABEL_33;
    v21 = *(_QWORD *)(v33 + 8 * v20);
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v34)
        goto LABEL_33;
      v21 = *(_QWORD *)(v33 + 8 * v16);
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= v34)
          goto LABEL_33;
        v21 = *(_QWORD *)(v33 + 8 * v16);
        if (!v21)
          break;
      }
    }
LABEL_23:
    v13 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    v23 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v23 * v19, v2);
    sub_1BC6E1788(&qword_1ED6BA298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1BC817A70();
    v24 = -1 << *(_BYTE *)(v9 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v14 + 8 * v26);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v17 * v23, v5, v2);
    ++*(_QWORD *)(v9 + 16);
  }
  v22 = v20 + 3;
  if (v22 >= v34)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v32;
    goto LABEL_35;
  }
  v21 = *(_QWORD *)(v33 + 8 * v22);
  if (v21)
  {
    v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v16 >= v34)
      goto LABEL_33;
    v21 = *(_QWORD *)(v33 + 8 * v16);
    ++v22;
    if (v21)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC7303C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  sub_1BC7324A4(0, &qword_1ED6B85F8, (void (*)(void))sub_1BC6ED30C);
  v3 = sub_1BC81828C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v28 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v9)
      goto LABEL_35;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_35;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_35;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    sub_1BC81873C();
    sub_1BC818748();
    if (v19)
    {
      v20 = v19;
      sub_1BC8180DC();

    }
    result = sub_1BC818778();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_35:
    result = swift_release_n();
    v1 = v28;
    goto LABEL_37;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_35;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1BC730680()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  sub_1BC7324A4(0, &qword_1EF45B3D0, (void (*)(void))sub_1BC73201C);
  result = sub_1BC81828C();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_1BC81873C();
    sub_1BC818748();
    result = sub_1BC818778();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC73090C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

char *sub_1BC7309FC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC730AE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC730BD8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC730CC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC730DB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC730EA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1BC6ED814(0, &qword_1EF45B430);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC730FC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = type metadata accessor for UserProfile();
  v2 = *(_QWORD *)(v26 - 8);
  v3 = MEMORY[0x1E0C80A78](v26);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v24 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_1BC7324FC(0, &qword_1ED6B85F0, (uint64_t (*)(uint64_t))type metadata accessor for UserProfile, &qword_1ED6BA320, (uint64_t)&protocol conformance descriptor for UserProfile);
    v9 = sub_1BC8182A4();
    v10 = 0;
    v11 = v9 + 56;
    v12 = *(unsigned __int8 *)(v2 + 80);
    v24 = v8;
    v25 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v2 + 72);
    while (1)
    {
      sub_1BC732258(v25 + v13 * v10, (uint64_t)v7);
      sub_1BC81873C();
      sub_1BC816F3C();
      sub_1BC6E1788(&qword_1ED6BA298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
      sub_1BC817A7C();
      v14 = sub_1BC818778();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v11 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        while (1)
        {
          sub_1BC732258(*(_QWORD *)(v9 + 48) + v16 * v13, (uint64_t)v5);
          if ((sub_1BC816F18() & 1) != 0)
          {
            sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
            if ((sub_1BC8180D0() & 1) != 0)
              break;
          }
          sub_1BC73229C((uint64_t)v5);
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v11 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          if ((v18 & (1 << v16)) == 0)
            goto LABEL_5;
        }
        sub_1BC73229C((uint64_t)v5);
        sub_1BC73229C((uint64_t)v7);
      }
      else
      {
LABEL_5:
        *(_QWORD *)(v11 + 8 * v17) = v19 | v18;
        result = sub_1BC7322D8((uint64_t)v7, *(_QWORD *)(v9 + 48) + v16 * v13);
        v21 = *(_QWORD *)(v9 + 16);
        v22 = __OFADD__(v21, 1);
        v23 = v21 + 1;
        if (v22)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v9 + 16) = v23;
      }
      if (++v10 == v24)
        return v9;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

void sub_1BC731220(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC6ED814(255, a3);
    v4 = sub_1BC81867C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC731278(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1BC6ED814(0, &qword_1ED6B7F98);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC731394(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_1BC816FFC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_1BC7324FC(0, &qword_1ED6B85E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], &qword_1ED6B7C48, MEMORY[0x1E0CB11D0]);
    v9 = sub_1BC8182A4();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_1BC6E1788(&qword_1ED6B7C48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      v14 = sub_1BC817A70();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v6, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_1BC6E1788(&qword_1EF45B408, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          v20 = sub_1BC817AB8();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1BC731614(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1BC6ED114();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC731718(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

void sub_1BC731808(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_1BC7323D8(0, &qword_1EF45B3B0, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, (unint64_t *)&qword_1ED6B97F8);
      v3 = sub_1BC8182A4();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_1BC8184E4();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v42 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v40 = v1;
    while (1)
    {
      while (1)
      {
        v8 = MEMORY[0x1BCCF4FB0](v7, v1);
        v9 = __OFADD__(v7++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_36;
        }
        v10 = v8;
        v11 = sub_1BC8180C4();
        v12 = -1 << *(_BYTE *)(v3 + 32);
        v13 = v11 & ~v12;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if (((1 << v13) & v15) != 0)
          break;
LABEL_20:
        *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
        v22 = *(_QWORD *)(v3 + 16);
        v9 = __OFADD__(v22, 1);
        v23 = v22 + 1;
        if (v9)
          goto LABEL_37;
        *(_QWORD *)(v3 + 16) = v23;
        if (v7 == v4)
          return;
      }
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1D0);
      v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
      v18 = sub_1BC8180D0();

      if ((v18 & 1) == 0)
      {
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_1BC8180D0();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v40;
        v4 = v42;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      v1 = v40;
      v4 = v42;
      if (v7 == v42)
        return;
    }
  }
  v24 = 0;
  v39 = v1 + 32;
  v41 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v41)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_1BC8180C4();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1D0);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_1BC8180D0();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_1BC8180D0();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_38;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v42)
      return;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_1BC731B80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1BC731F28();
    v3 = sub_1BC8182A4();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1BC81873C();
      swift_bridgeObjectRetain();
      sub_1BC817B30();
      result = sub_1BC818778();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1BC818694(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1BC818694();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1BC731D1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC731E34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

void sub_1BC731F28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BAC88)
  {
    v0 = sub_1BC8182B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BAC88);
  }
}

unint64_t sub_1BC731F84()
{
  unint64_t result;

  result = qword_1ED6B7C90;
  if (!qword_1ED6B7C90)
  {
    sub_1BC6ECA64(255, &qword_1ED6B7C88, (uint64_t (*)(uint64_t))type metadata accessor for HealthAppOrchestrationServer, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1ED6B7C90);
  }
  return result;
}

unint64_t sub_1BC731FDC()
{
  unint64_t result;

  result = qword_1EF45B3C8;
  if (!qword_1EF45B3C8)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EF45B3C8);
  }
  return result;
}

unint64_t sub_1BC73201C()
{
  unint64_t result;

  result = qword_1EF45B3D8;
  if (!qword_1EF45B3D8)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for GenerationPhase, &type metadata for GenerationPhase);
    atomic_store(result, (unint64_t *)&qword_1EF45B3D8);
  }
  return result;
}

unint64_t sub_1BC732060()
{
  unint64_t result;

  result = qword_1EF45B3E8;
  if (!qword_1EF45B3E8)
  {
    result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1EF45B3E8);
  }
  return result;
}

_QWORD *sub_1BC7320AC(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8(a2, a1);
  return a2;
}

id *sub_1BC7320E8(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id *sub_1BC732110(id *a1)
{

  return a1;
}

void **sub_1BC732138(void **a1)
{
  void *v2;

  v2 = *a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

unint64_t sub_1BC732188()
{
  unint64_t result;

  result = qword_1ED6B9780;
  if (!qword_1ED6B9780)
  {
    sub_1BC7321D8();
    result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1ED6B9780);
  }
  return result;
}

void sub_1BC7321D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B9778)
  {
    type metadata accessor for CachingSharedSummaryTransactionBuilder();
    sub_1BC6ED814(255, (unint64_t *)&qword_1ED6B87B0);
    v0 = sub_1BC8187D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B9778);
  }
}

uint64_t sub_1BC732258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UserProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC73229C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UserProfile();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC7322D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UserProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC73231C()
{
  unint64_t result;

  result = qword_1EF45B420;
  if (!qword_1EF45B420)
  {
    sub_1BC73236C(255, &qword_1EF45B428, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EF45B420);
  }
  return result;
}

void sub_1BC73236C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC6ED814(255, &qword_1EF45B430);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BC7323D8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    sub_1BC6ED7C0(255, a3);
    sub_1BC6EFB34(a5, a3);
    v8 = sub_1BC8182B0();
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BC732460(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC81867C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1BC7324A4(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1BC8182B0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC7324FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BC6E1788(a4, a3, a5);
    v9 = sub_1BC8182B0();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t HealthAppPluginInfo.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id HealthAppPluginInfo.bundle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t HealthAppPluginInfo.bundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HealthAppPluginInfo.principalObject.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t HealthAppPluginInfo.init(name:bundleIdentifier:bundle:principalObject:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a5;
  a7[3] = a3;
  a7[4] = a4;
  a7[5] = a6;
  return result;
}

void HealthAppPluginInfo.init(bundle:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjCClassMetadata;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[5];
  uint64_t v66;

  v4 = sub_1BC816E40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_bundleIdentifier);
  if (!v8)
  {
    if (qword_1ED6BB1F8 != -1)
      swift_once();
    v21 = sub_1BC817590();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED6BB228);
    v22 = a1;
    v23 = sub_1BC81756C();
    v24 = sub_1BC817E90();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_DWORD *)v25 = 136315138;
      v64 = (uint64_t)(v25 + 4);
      v65[0] = v26;
      v27 = objc_msgSend(v22, sel_bundlePath);
      v28 = sub_1BC817AE8();
      v30 = v29;

      v66 = sub_1BC6E14D8(v28, v30, v65);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v23, v24, "Plugin bundle at %s has no bundle identifier.", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v26, -1, -1);
      MEMORY[0x1BCCF5BA4](v25, -1, -1);

LABEL_30:
      type metadata accessor for HealthAppPluginInfo.LoadError(0);
      sub_1BC6E1788(&qword_1EF45B468, type metadata accessor for HealthAppPluginInfo.LoadError, (uint64_t)&protocol conformance descriptor for HealthAppPluginInfo.LoadError);
      swift_allocError();
      *v46 = v22;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return;
    }
LABEL_29:

    goto LABEL_30;
  }
  v9 = v8;
  v10 = sub_1BC817AE8();
  v12 = v11;

  if (!objc_msgSend(a1, sel_principalClass))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED6BB1F8 != -1)
      swift_once();
    v31 = sub_1BC817590();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED6BB228);
    v22 = a1;
    v23 = sub_1BC81756C();
    v32 = sub_1BC817E90();
    if (os_log_type_enabled(v23, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      *(_DWORD *)v33 = 136315138;
      v64 = (uint64_t)(v33 + 4);
      v65[0] = v34;
      v35 = objc_msgSend(v22, sel_bundlePath);
      v36 = sub_1BC817AE8();
      v38 = v37;

      v66 = sub_1BC6E14D8(v36, v38, v65);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v23, v32, "Plugin bundle at %s has no principal class.", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v34, -1, -1);
      MEMORY[0x1BCCF5BA4](v33, -1, -1);

      goto LABEL_30;
    }
    goto LABEL_29;
  }
  v63 = v10;
  v64 = v12;
  ObjCClassMetadata = swift_getObjCClassMetadata();
  v14 = swift_conformsToProtocol2();
  if (v14)
    v15 = v14;
  else
    v15 = 0;
  if (v14)
    v16 = ObjCClassMetadata;
  else
    v16 = 0;
  if (v16)
  {
    v17 = objc_msgSend(a1, sel_bundleURL);
    sub_1BC816DF8();

    v62 = sub_1BC816DB0();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v16, v15);
LABEL_28:
    *a2 = v62;
    a2[1] = v19;
    v45 = v63;
    a2[2] = (uint64_t)a1;
    a2[3] = v45;
    a2[4] = v64;
    a2[5] = v20;
    return;
  }
  v39 = swift_conformsToProtocol2();
  if (v39)
    v40 = v39;
  else
    v40 = 0;
  if (v39)
    v41 = ObjCClassMetadata;
  else
    v41 = 0;
  if (v41)
  {
    v42 = objc_msgSend(a1, sel_bundleURL);
    sub_1BC816DF8();

    v62 = sub_1BC816DB0();
    v19 = v43;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v44 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v65[3] = v41;
    v65[4] = v40;
    __swift_allocate_boxed_opaque_existential_1(v65);
    v44(v41, v40);
    v20 = sub_1BC818688();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v65);
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  if (qword_1ED6BB1F8 != -1)
    swift_once();
  v47 = sub_1BC817590();
  __swift_project_value_buffer(v47, (uint64_t)qword_1ED6BB228);
  v48 = a1;
  v49 = sub_1BC81756C();
  v50 = sub_1BC817E84();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = swift_slowAlloc();
    v64 = swift_slowAlloc();
    v65[0] = v64;
    *(_DWORD *)v51 = 136315394;
    v52 = objc_msgSend(v48, sel_bundlePath);
    v53 = sub_1BC817AE8();
    v55 = v54;

    v66 = sub_1BC6E14D8(v53, v55, v65);
    sub_1BC818148();

    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2080;
    v56 = sub_1BC818814();
    v66 = sub_1BC6E14D8(v56, v57, v65);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v49, v50, "Plugin bundle at %s has a principal class (%s) of an unknown type; cannot instantiate.",
      (uint8_t *)v51,
      0x16u);
    v58 = v64;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v58, -1, -1);
    MEMORY[0x1BCCF5BA4](v51, -1, -1);

  }
  else
  {

  }
  type metadata accessor for HealthAppPluginInfo.LoadError(0);
  sub_1BC6E1788(&qword_1EF45B468, type metadata accessor for HealthAppPluginInfo.LoadError, (uint64_t)&protocol conformance descriptor for HealthAppPluginInfo.LoadError);
  swift_allocError();
  v60 = v59;
  *v59 = sub_1BC818814();
  v60[1] = v61;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();

}

void HealthAppPluginInfo.LoadError.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Error;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  _WORD v7[8];

  v1 = sub_1BC816E40();
  MEMORY[0x1E0C80A78](v1);
  Error = type metadata accessor for HealthAppPluginInfo.LoadError(0);
  MEMORY[0x1E0C80A78](Error);
  strcpy((char *)v7, "[LoadError]: ");
  v7[7] = -4864;
  sub_1BC6ECB08(v0, (uint64_t)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 16, v4);
  v5 = (char *)&loc_1BC732ED8 + *((int *)qword_1BC7332E0 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1BC732EE8()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 80) = 0;
  *(_QWORD *)(v0 - 72) = 0xE000000000000000;
  sub_1BC8182C8();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 - 80) = 0xD000000000000020;
  *(_QWORD *)(v0 - 72) = 0x80000001BC826E00;
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v0 - 64);
}

uint64_t static HealthAppPluginSource.healthPluginSuffix.getter()
{
  return 0x6C7068746C616568;
}

_QWORD *sub_1BC73332C()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  _QWORD *result;

  v0 = _s14HealthPlatform0A15AppPluginSourceC12knownBundlesSayAC11KnownBundleVGvgZ_0();
  v1 = _s14HealthPlatform0A15AppPluginSourceC25disabledBundleIdentifiersShySSGyFZ_0();
  v2 = _s14HealthPlatform0A15AppPluginSourceC24allowedBundleIdentifiersShySSGSgyFZ_0();
  type metadata accessor for HealthAppPluginSource();
  v3 = swift_allocObject();
  result = HealthAppPluginSource.init(bundleProvider:knownBundles:disabledBundleIdentifiers:allowedBundleIdentifiers:)(0, 0, (uint64_t)v0, (uint64_t)v1, (uint64_t)v2);
  qword_1ED6BA310 = v3;
  return result;
}

uint64_t HealthAppPluginSource.__allocating_init(bundleProvider:knownBundles:disabledBundleIdentifiers:allowedBundleIdentifiers:)(id (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  HealthAppPluginSource.init(bundleProvider:knownBundles:disabledBundleIdentifiers:allowedBundleIdentifiers:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t static HealthAppPluginSource.shared.getter()
{
  if (qword_1ED6BA318 != -1)
    swift_once();
  return swift_retain();
}

uint64_t HealthAppPluginSource.knownBundles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HealthAppPluginSource.disabledBundleIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HealthAppPluginSource.allowedBundleIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

_QWORD *HealthAppPluginSource.init(bundleProvider:knownBundles:disabledBundleIdentifiers:allowedBundleIdentifiers:)(id (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint8_t *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  unint64_t v56;
  _QWORD v58[2];
  uint64_t v59;
  uint8_t *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  id (*v69)();
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73[2];

  v6 = v5;
  v12 = sub_1BC816D74();
  v63 = *(_QWORD *)(v12 - 8);
  v64 = v12;
  MEMORY[0x1E0C80A78](v12);
  v62 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1BC816E40();
  v65 = *(_QWORD *)(v68 - 8);
  v14 = MEMORY[0x1E0C80A78](v68);
  v66 = v15;
  v67 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v61 = (char *)v58 - v16;
  sub_1BC738ADC();
  v17 = swift_allocObject();
  *(_DWORD *)(v17 + 28) = 0;
  *(_QWORD *)(v17 + 16) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v17 + 24) = 0;
  v6[2] = v17;
  v6[5] = a3;
  v6[6] = a4;
  v6[7] = a5;
  v18 = qword_1ED6BB2E0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1BC817590();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED6BB340);
  v21 = sub_1BC81756C();
  v22 = sub_1BC817E9C();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_1BC6DD000, v21, v22, "Setting up for bundle loading...", v23, 2u);
    MEMORY[0x1BCCF5BA4](v23, -1, -1);
  }

  swift_bridgeObjectRetain();
  v24 = sub_1BC81756C();
  v25 = sub_1BC817E9C();
  if (os_log_type_enabled(v24, v25))
  {
    v60 = (uint8_t *)v20;
    v26 = swift_slowAlloc();
    v71 = v6;
    v27 = (uint8_t *)v26;
    v59 = swift_slowAlloc();
    v73[0] = v59;
    v69 = a1;
    *(_DWORD *)v27 = 136315138;
    v58[1] = v27 + 4;
    v28 = swift_bridgeObjectRetain();
    v29 = sub_1BC7060D8(v28);
    swift_bridgeObjectRelease();
    v72 = (uint64_t)v29;
    v70 = a2;
    v30 = MEMORY[0x1E0DEA968];
    sub_1BC738D00(0, (unint64_t *)&qword_1ED6BB1C0);
    sub_1BC738C1C((unint64_t *)&qword_1ED6BB1C8, (unint64_t *)&qword_1ED6BB1C0, v30, MEMORY[0x1E0DEAF20]);
    v31 = sub_1BC817A88();
    v33 = v32;
    swift_release();
    v72 = sub_1BC6E14D8(v31, v33, v73);
    a1 = v69;
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    a2 = v70;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v24, v25, "Disabled identifiers: %s", v27, 0xCu);
    v34 = v59;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v34, -1, -1);
    v35 = v27;
    v6 = v71;
    MEMORY[0x1BCCF5BA4](v35, -1, -1);

    if (!a5)
      goto LABEL_11;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!a5)
      goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v36 = sub_1BC81756C();
  v37 = sub_1BC817E9C();
  if (!os_log_type_enabled(v36, v37))
  {

    swift_bridgeObjectRelease_n();
    if (a1)
      goto LABEL_13;
    goto LABEL_12;
  }
  v38 = swift_slowAlloc();
  v69 = a1;
  v39 = (uint8_t *)v38;
  v40 = swift_slowAlloc();
  v73[0] = v40;
  v71 = v6;
  *(_DWORD *)v39 = 136315138;
  v60 = v39 + 4;
  v41 = swift_bridgeObjectRetain();
  v42 = sub_1BC7060D8(v41);
  swift_bridgeObjectRelease();
  v72 = (uint64_t)v42;
  v70 = a2;
  v43 = MEMORY[0x1E0DEA968];
  sub_1BC738D00(0, (unint64_t *)&qword_1ED6BB1C0);
  sub_1BC738C1C((unint64_t *)&qword_1ED6BB1C8, (unint64_t *)&qword_1ED6BB1C0, v43, MEMORY[0x1E0DEAF20]);
  v44 = sub_1BC817A88();
  v46 = v45;
  swift_release();
  v72 = sub_1BC6E14D8(v44, v46, v73);
  v6 = v71;
  sub_1BC818148();
  swift_bridgeObjectRelease_n();
  a2 = v70;
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1BC6DD000, v36, v37, "PLUGIN ALLOW LIST ENABLED; limiting plugins to: %s", v39, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1BCCF5BA4](v40, -1, -1);
  v47 = v39;
  a1 = v69;
  MEMORY[0x1BCCF5BA4](v47, -1, -1);

LABEL_11:
  if (!a1)
  {
LABEL_12:
    type metadata accessor for StorageLocations();
    v48 = v67;
    static StorageLocations.rootDirectory.getter();
    v73[0] = 0xD000000000000026;
    v73[1] = 0x80000001BC826E30;
    v50 = v62;
    v49 = v63;
    v51 = v64;
    (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v62, *MEMORY[0x1E0CAFD60], v64);
    sub_1BC738B38();
    v52 = v61;
    sub_1BC816E34();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
    swift_bridgeObjectRelease();
    v53 = v65;
    v54 = v68;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v48, v68);
    v55 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
    v55(v48, v52, v54);
    v56 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    a2 = swift_allocObject();
    v55((char *)(a2 + v56), v48, v54);
    a1 = sub_1BC738BDC;
  }
LABEL_13:
  v6[3] = a1;
  v6[4] = a2;
  return v6;
}

id sub_1BC733AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  void (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v52[2];

  v52[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6BA290, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v48 = (char *)&v43 - v4;
  v5 = sub_1BC816E40();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v47 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v49 = (char *)&v43 - v10;
  MEMORY[0x1E0C80A78](v9);
  v50 = (char *)&v43 - v11;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3620]), sel_init);
  v13 = (void *)sub_1BC816DBC();
  type metadata accessor for URLResourceKey(0);
  v14 = (void *)MEMORY[0x1E0DEE9D8];
  v15 = (void *)sub_1BC817C50();
  v52[0] = 0;
  v16 = objc_msgSend(v12, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v13, v15, 0, v52);

  v17 = v52[0];
  if (v16)
  {
    v18 = sub_1BC817C5C();
    v19 = v17;
    v20 = v18;

    v52[0] = v14;
    v21 = *(_QWORD *)(v18 + 16);
    v43 = v12;
    v46 = v21;
    if (v21)
    {
      v22 = 0;
      v44 = v3;
      v45 = v20;
      v23 = (uint64_t)v48;
      while (1)
      {
        if (v22 >= *(_QWORD *)(v20 + 16))
          __break(1u);
        v24 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
        v25 = *(_QWORD *)(v6 + 72);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16))(v23, v20 + v24 + v25 * v22, v5);
        v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v51(v23, 0, 1, v5);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v23, 1, v5) == 1)
          goto LABEL_20;
        v26 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
        v26(v50, v23, v5);
        if (sub_1BC816D80() == 0x6C7068746C616568 && v27 == 0xEC0000006E696775)
          break;
        v28 = sub_1BC818694();
        swift_bridgeObjectRelease();
        if ((v28 & 1) != 0)
          goto LABEL_12;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v50, v5);
LABEL_5:
        ++v22;
        v20 = v45;
        v23 = (uint64_t)v48;
        if (v46 == v22)
          goto LABEL_19;
      }
      swift_bridgeObjectRelease();
LABEL_12:
      v26(v49, (uint64_t)v50, v5);
      v29 = (char *)v52[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC6E8BD4(0, *((_QWORD *)v29 + 2) + 1, 1);
        v29 = (char *)v52[0];
      }
      v31 = *((_QWORD *)v29 + 2);
      v30 = *((_QWORD *)v29 + 3);
      if (v31 >= v30 >> 1)
      {
        sub_1BC6E8BD4(v30 > 1, v31 + 1, 1);
        v29 = (char *)v52[0];
      }
      *((_QWORD *)v29 + 2) = v31 + 1;
      v26(&v29[v24 + v31 * v25], (uint64_t)v49, v5);
      v52[0] = v29;
      v3 = v44;
      goto LABEL_5;
    }
    v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v23 = (uint64_t)v48;
LABEL_19:
    v51(v23, 1, 1, v5);
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1BC715030(v23, (unint64_t *)&qword_1ED6BA290, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v33 = (char *)v52[0];
    v52[0] = (id)MEMORY[0x1E0DEE9D8];
    v34 = *((_QWORD *)v33 + 2);
    v48 = v33;
    if (v34)
    {
      v35 = &v33[(*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)];
      v36 = *(char **)(v6 + 16);
      v49 = *(char **)(v6 + 72);
      v50 = v36;
      swift_retain();
      v37 = v47;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v50)(v3, v35, v5);
        v51((uint64_t)v3, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v37, v3, v5);
        v38 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
        v39 = (void *)sub_1BC816DBC();
        v40 = objc_msgSend(v38, sel_initWithURL_, v39, v43);

        v41 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v37, v5);
        if (v40)
        {
          MEMORY[0x1BCCF48F0](v41);
          if (*(_QWORD *)(((unint64_t)v52[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v52[0] & 0xFFFFFFFFFFFFFF8)
                                                                                                 + 0x18) >> 1)
            sub_1BC817C98();
          sub_1BC817CD4();
          sub_1BC817C74();
        }
        v35 = &v49[(_QWORD)v35];
        if (!--v34)
          goto LABEL_29;
      }
    }
    else
    {
      swift_retain();
LABEL_29:
      v51((uint64_t)v3, 1, 1, v5);
    }
    swift_release();
    v16 = v52[0];
    swift_release();

  }
  else
  {
    v32 = v52[0];
    sub_1BC816D5C();

    swift_willThrow();
  }
  return v16;
}

void sub_1BC7340C0(void *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  id v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  id v66;
  uint64_t v67;
  os_log_type_t v68;
  void *v69;
  uint64_t v70;
  unint64_t v71;
  id v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  id v77;
  _QWORD *v78;
  _QWORD *v79;
  void *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86[6];
  uint64_t v87[2];

  v87[1] = *MEMORY[0x1E0C80C00];
  if (HKIsUnitTesting())
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_callStackSymbols);
    v9 = sub_1BC817C5C();

    if (*(_QWORD *)(v9 + 16) >= 5uLL)
      v10 = 5;
    else
      v10 = *(_QWORD *)(v9 + 16);
    type metadata accessor for HealthAppPluginInfo.LoadError(0);
    sub_1BC6E1788(&qword_1EF45B468, type metadata accessor for HealthAppPluginInfo.LoadError, (uint64_t)&protocol conformance descriptor for HealthAppPluginInfo.LoadError);
    swift_allocError();
    v12 = v11;
    sub_1BC8186AC();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    v13 = swift_dynamicCastClass();
    if (!v13)
    {
      swift_bridgeObjectRelease();
      v13 = MEMORY[0x1E0DEE9D8];
    }
    v14 = *(_QWORD *)(v13 + 16);
    swift_release();
    if (v14 == v10)
    {
      v15 = swift_dynamicCastClass();
      if (!v15)
      {
        swift_bridgeObjectRelease();
        v15 = MEMORY[0x1E0DEE9D8];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v15 = sub_1BC7061D0(v9, v9 + 32, 0, (2 * v10) | 1);
    }
    swift_bridgeObjectRelease();
    *v12 = v15;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_11;
  }
  v16 = objc_msgSend(a1, sel_bundleIdentifier);
  if (!v16)
  {
    if (qword_1ED6BB1F8 != -1)
      swift_once();
    v40 = sub_1BC817590();
    __swift_project_value_buffer(v40, (uint64_t)qword_1ED6BB228);
    v41 = a1;
    v42 = sub_1BC81756C();
    v43 = sub_1BC817E84();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v85 = swift_slowAlloc();
      v87[0] = v85;
      *(_DWORD *)v44 = 136315394;
      swift_getMetatypeMetadata();
      v45 = sub_1BC817AF4();
      sub_1BC6E14D8(v45, v46, v87);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      v47 = objc_msgSend(v41, sel_bundlePath);
      v48 = sub_1BC817AE8();
      v50 = v49;

      v86[0] = (id)sub_1BC6E14D8(v48, v50, v87);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v42, v43, "[%s] Ignoring plugin bundle (no bundle identifier): %s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v85, -1, -1);
      MEMORY[0x1BCCF5BA4](v44, -1, -1);

    }
    else
    {

    }
    type metadata accessor for HealthAppPluginInfo.LoadError(0);
    sub_1BC6E1788(&qword_1EF45B468, type metadata accessor for HealthAppPluginInfo.LoadError, (uint64_t)&protocol conformance descriptor for HealthAppPluginInfo.LoadError);
    swift_allocError();
    *v51 = v41;
    swift_storeEnumTagMultiPayload();
    v52 = v41;
    goto LABEL_50;
  }
  v17 = v16;
  v79 = a3;
  v80 = a1;
  v83 = sub_1BC817AE8();
  v84 = v18;

  v78 = a2;
  v81 = (_QWORD *)*a2;
  v19 = *(_QWORD *)(*a2 + 16);
  if (v19)
  {
    v20 = v81 + 5;
    while (1)
    {
      v21 = *(v20 - 1);
      v22 = *v20;
      v24 = (void *)v20[1];
      v23 = v20[2];
      v25 = v20[3];
      v26 = v20[4];
      if (v23 == v83 && v25 == v84)
        break;
      if ((sub_1BC818694() & 1) != 0)
        goto LABEL_42;
      v20 += 6;
      if (!--v19)
        goto LABEL_21;
    }
    v23 = v83;
    v25 = v84;
LABEL_42:
    swift_bridgeObjectRetain();
    v66 = v24;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    *v79 = v21;
    v79[1] = v22;
    v79[2] = v66;
    v79[3] = v23;
    v79[4] = v25;
    v79[5] = v26;
    return;
  }
LABEL_21:
  if ((sub_1BC7C9F44(v83, v84, *(_QWORD *)(v3 + 48)) & 1) != 0)
  {
    if (qword_1ED6BB1F8 != -1)
      swift_once();
    v28 = sub_1BC817590();
    __swift_project_value_buffer(v28, (uint64_t)qword_1ED6BB228);
    v29 = v80;
    v30 = sub_1BC81756C();
    v31 = sub_1BC817E84();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v82 = swift_slowAlloc();
      v87[0] = v82;
      *(_DWORD *)v32 = 136315394;
      swift_getMetatypeMetadata();
      v33 = sub_1BC817AF4();
      sub_1BC6E14D8(v33, v34, v87);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      v35 = objc_msgSend(v29, sel_bundlePath);
      v36 = sub_1BC817AE8();
      v38 = v37;

      v86[0] = (id)sub_1BC6E14D8(v36, v38, v87);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v30, v31, "[%s] Ignoring plugin bundle (disabled): %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      v39 = v82;
LABEL_47:
      MEMORY[0x1BCCF5BA4](v39, -1, -1);
      MEMORY[0x1BCCF5BA4](v32, -1, -1);

LABEL_49:
      type metadata accessor for HealthAppPluginInfo.LoadError(0);
      sub_1BC6E1788(&qword_1EF45B468, type metadata accessor for HealthAppPluginInfo.LoadError, (uint64_t)&protocol conformance descriptor for HealthAppPluginInfo.LoadError);
      swift_allocError();
      *v76 = v83;
      v76[1] = v84;
      swift_storeEnumTagMultiPayload();
LABEL_50:
      swift_willThrow();
      return;
    }
    goto LABEL_48;
  }
  v53 = *(_QWORD *)(v3 + 56);
  if (v53 && (sub_1BC7C9F44(v83, v84, v53) & 1) == 0)
  {
    if (qword_1ED6BB1F8 != -1)
      swift_once();
    v67 = sub_1BC817590();
    __swift_project_value_buffer(v67, (uint64_t)qword_1ED6BB228);
    v29 = v80;
    v30 = sub_1BC81756C();
    v68 = sub_1BC817E84();
    if (os_log_type_enabled(v30, v68))
    {
      v32 = swift_slowAlloc();
      v69 = (void *)swift_slowAlloc();
      v86[0] = v69;
      *(_DWORD *)v32 = 136315394;
      v70 = sub_1BC734AE0();
      v87[0] = sub_1BC6E14D8(v70, v71, (uint64_t *)v86);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      v72 = objc_msgSend(v29, sel_bundlePath);
      v73 = sub_1BC817AE8();
      v75 = v74;

      v87[0] = sub_1BC6E14D8(v73, v75, (uint64_t *)v86);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v30, v68, "[%s] Ignoring plugin bundle (not in allow list): %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      v39 = (uint64_t)v69;
      goto LABEL_47;
    }
LABEL_48:

    goto LABEL_49;
  }
  swift_bridgeObjectRelease();
  v54 = v80;
  HealthAppPluginInfo.init(bundle:)(v54, (uint64_t *)v86);
  if (!v4)
  {
    v56 = v86[0];
    v55 = v86[1];
    v58 = v86[2];
    v57 = v86[3];
    v59 = v86[4];
    v60 = v86[5];
    v86[0] = 0;
    if (!objc_msgSend(v54, sel_loadAndReturnError_, v86))
    {
      v77 = v86[0];
      sub_1BC816D5C();

      swift_willThrow();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();

LABEL_11:
      swift_bridgeObjectRelease();
      return;
    }
    v61 = v86[0];
    swift_bridgeObjectRetain();
    v62 = v58;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v81 = sub_1BC725B18(0, v81[2] + 1, 1, v81);
    v64 = v81[2];
    v63 = v81[3];
    if (v64 >= v63 >> 1)
      v81 = sub_1BC725B18((_QWORD *)(v63 > 1), v64 + 1, 1, v81);
    v81[2] = v64 + 1;
    v65 = &v81[6 * v64];
    v65[4] = v56;
    v65[5] = v55;
    v65[6] = v62;
    v65[7] = v57;
    v65[8] = v59;
    v65[9] = v60;
    *v78 = v81;
    *v79 = v56;
    v79[1] = v55;
    v79[2] = v62;
    v79[3] = v57;
    v79[4] = v59;
    v79[5] = v60;
  }
}

uint64_t sub_1BC734AE0()
{
  swift_getMetatypeMetadata();
  return sub_1BC817AF4();
}

Swift::Void __swiftcall HealthAppPluginSource.install(plugins:)(Swift::OpaquePointer plugins)
{
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v2 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 28);
  os_unfair_lock_lock(v2);
  v3 = swift_bridgeObjectRetain();
  sub_1BC806DEC(v3);
  os_unfair_lock_unlock(v2);
}

unint64_t HealthAppPluginSource.providedBundleIdentifiers()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  result = (*(uint64_t (**)(void))(v0 + 24))();
  if (!v1)
  {
    v3 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_1BC8184E4();
      v4 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v4 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_4:
        if (v4 < 1)
        {
          __break(1u);
          return result;
        }
        v5 = 0;
        v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v3 & 0xC000000000000001) != 0)
            v7 = (id)MEMORY[0x1BCCF4FB0](v5, v3);
          else
            v7 = *(id *)(v3 + 8 * v5 + 32);
          v8 = v7;
          v9 = objc_msgSend(v7, sel_bundleIdentifier);
          if (v9)
          {
            v10 = v9;
            v11 = sub_1BC817AE8();
            v13 = v12;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v6 = sub_1BC725568(0, v6[2] + 1, 1, v6);
            v15 = v6[2];
            v14 = v6[3];
            if (v15 >= v14 >> 1)
              v6 = sub_1BC725568((_QWORD *)(v14 > 1), v15 + 1, 1, v6);
            v6[2] = v15 + 1;
            v16 = &v6[2 * v15];
            v16[4] = v11;
            v16[5] = v13;
          }
          else
          {

          }
          ++v5;
        }
        while (v4 != v5);
        goto LABEL_19;
      }
    }
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_19:
    swift_bridgeObjectRelease_n();
    v17 = sub_1BC6EAD84((uint64_t)v6);
    swift_bridgeObjectRelease();
    return v17;
  }
  return result;
}

uint64_t HealthAppPluginSource.knownBundleIdentifiers()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v1 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BC6E8A7C(0, v6, 0);
    v8 = *(unsigned __int8 *)(v2 + 80);
    v18 = v5;
    v9 = v5 + ((v8 + 32) & ~v8);
    v10 = *(_QWORD *)(v2 + 72);
    v7 = v19;
    do
    {
      sub_1BC6ECB08(v9, (uint64_t)v4, type metadata accessor for HealthAppPluginSource.KnownBundle);
      v12 = *((_QWORD *)v4 + 2);
      v11 = *((_QWORD *)v4 + 3);
      swift_bridgeObjectRetain();
      sub_1BC6ED784((uint64_t)v4, type metadata accessor for HealthAppPluginSource.KnownBundle);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC6E8A7C(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v19;
      }
      v14 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BC6E8A7C(v13 > 1, v14 + 1, 1);
        v7 = v19;
      }
      *(_QWORD *)(v7 + 16) = v14 + 1;
      v15 = v7 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v12;
      *(_QWORD *)(v15 + 40) = v11;
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  v16 = sub_1BC6EAD84(v7);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t HealthAppPluginSource.loadedPlugins()()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (os_unfair_lock_s *)(v1 + 28);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 28));
  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  return v3;
}

uint64_t HealthAppPluginSource.plugin(bundleIdentifier:allowDynamicFallback:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, int a3@<W2>, void (*a4)(char *)@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  os_unfair_lock_s *v24;
  os_unfair_lock_s *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *);
  int v32;

  v5 = (uint64_t)v4;
  v32 = a3;
  v31 = a4;
  v8 = *v4;
  v30 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  v9 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA64(0, &qword_1ED6BA308, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - v14;
  v16 = v4[5];
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v28 = v8;
    v29 = v5;
    v18 = v16 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v27 = v9;
    v19 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BC6ECB08(v18, (uint64_t)v11, type metadata accessor for HealthAppPluginSource.KnownBundle);
      v20 = *((_QWORD *)v11 + 2) == a1 && *((_QWORD *)v11 + 3) == (_QWORD)a2;
      if (v20 || (sub_1BC818694() & 1) != 0)
        break;
      sub_1BC6ED784((uint64_t)v11, type metadata accessor for HealthAppPluginSource.KnownBundle);
      v18 += v19;
      if (!--v17)
      {
        v21 = 1;
        goto LABEL_11;
      }
    }
    sub_1BC738CA4((uint64_t)v11, (uint64_t)v15);
    v21 = 0;
LABEL_11:
    v8 = v28;
    v5 = v29;
    v22 = v30;
    v9 = v27;
  }
  else
  {
    swift_bridgeObjectRetain();
    v21 = 1;
    v22 = v30;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v15, v21, 1, v22);
  swift_bridgeObjectRelease();
  v23 = *(os_unfair_lock_s **)(v5 + 16);
  v24 = v23 + 4;
  v25 = v23 + 7;
  os_unfair_lock_lock(v23 + 7);
  sub_1BC7350F8(v24, a1, a2, (uint64_t)v15, v5, v32 & 1, v8, v31);
  os_unfair_lock_unlock(v25);
  return sub_1BC715030((uint64_t)v15, &qword_1ED6BA308, type metadata accessor for HealthAppPluginSource.KnownBundle);
}

void sub_1BC7350F8(_QWORD *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, void (*a8)(char *)@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  char *v40;
  char *v42;
  _QWORD *v43;
  uint64_t *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *);
  char *v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  id v55;
  void *v56;
  id v57;
  void (*v58)(char *, uint64_t);
  void (*v59)(char *);
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  NSObject *v65;
  os_log_type_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *);
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  void (*v106)(char *, uint64_t);
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  void (*v109)(char *);
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;

  v93 = a7;
  v96 = a6;
  v99 = a5;
  v108 = a4;
  v109 = a8;
  v112 = a3;
  v103 = sub_1BC816D74();
  v97 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v102 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1BC816E40();
  v98 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v105 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA64(0, &qword_1ED6BA308, type metadata accessor for HealthAppPluginSource.KnownBundle, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v107 = (void (*)(char *, uint64_t))((char *)&v92 - v13);
  v110 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  v106 = *(void (**)(char *, uint64_t))(v110 - 8);
  v14 = MEMORY[0x1E0C80A78](v110);
  v95 = (uint64_t *)((char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x1E0C80A78](v14);
  v94 = (uint64_t)&v92 - v17;
  MEMORY[0x1E0C80A78](v16);
  v100 = a1;
  v101 = (uint64_t *)((char *)&v92 - v18);
  v19 = *(_QWORD *)(*a1 + 16);
  if (v19)
  {
    v20 = (uint64_t *)(*a1 + 40);
    while (1)
    {
      v22 = *(v20 - 1);
      v21 = *v20;
      v23 = (void *)v20[1];
      v24 = v20[2];
      v26 = (char *)v20[3];
      v25 = v20[4];
      if (v24 == a2 && v26 == v112)
        break;
      if ((sub_1BC818694() & 1) != 0)
        goto LABEL_24;
      v20 += 6;
      if (!--v19)
        goto LABEL_9;
    }
    v24 = a2;
    v26 = v112;
LABEL_24:
    v59 = v109;
    *(_QWORD *)v109 = v22;
    *((_QWORD *)v59 + 1) = v21;
    *((_QWORD *)v59 + 2) = v23;
    *((_QWORD *)v59 + 3) = v24;
    *((_QWORD *)v59 + 4) = v26;
    *((_QWORD *)v59 + 5) = v25;
    swift_bridgeObjectRetain();
    v60 = v23;
    swift_bridgeObjectRetain();
LABEL_25:
    swift_unknownObjectRetain();
    return;
  }
LABEL_9:
  v28 = v107;
  sub_1BC739DDC(v108, (uint64_t)v107);
  v29 = v110;
  if ((*((unsigned int (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))v106 + 6))(v28, 1, v110) == 1)
  {
    sub_1BC715030((uint64_t)v28, &qword_1ED6BA308, type metadata accessor for HealthAppPluginSource.KnownBundle);
    if ((v96 & 1) == 0)
      goto LABEL_20;
    v30 = v100;
    v31 = v111;
    sub_1BC7359CC(v100);
    if (v31)
      return;
    v111 = 0;
    v32 = *v30;
    v33 = *(_QWORD *)(*v30 + 16);
    if (!v33)
    {
LABEL_20:
      type metadata accessor for HealthAppPluginInfo.LoadError(0);
      sub_1BC6E1788(&qword_1EF45B468, type metadata accessor for HealthAppPluginInfo.LoadError, (uint64_t)&protocol conformance descriptor for HealthAppPluginInfo.LoadError);
      swift_allocError();
      v42 = v112;
      *v43 = a2;
      v43[1] = v42;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return;
    }
    v34 = (uint64_t *)(v32 + 40);
    while (1)
    {
      v36 = *(v34 - 1);
      v35 = *v34;
      v38 = (void *)v34[1];
      v37 = v34[2];
      v40 = (char *)v34[3];
      v39 = v34[4];
      if (v37 == a2 && v40 == v112)
        break;
      if ((sub_1BC818694() & 1) != 0)
        goto LABEL_34;
      v34 += 6;
      if (!--v33)
        goto LABEL_20;
    }
    v37 = a2;
    v40 = v112;
LABEL_34:
    v90 = v109;
    *(_QWORD *)v109 = v36;
    *((_QWORD *)v90 + 1) = v35;
    *((_QWORD *)v90 + 2) = v38;
    *((_QWORD *)v90 + 3) = v37;
    *((_QWORD *)v90 + 4) = v40;
    *((_QWORD *)v90 + 5) = v39;
    swift_bridgeObjectRetain();
    v91 = v38;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  v44 = v101;
  sub_1BC738CA4((uint64_t)v28, (uint64_t)v101);
  v45 = (char *)v44 + *(int *)(v29 + 24);
  v46 = v44[1];
  v113 = *v44;
  v114 = v46;
  v47 = v97;
  v48 = *(void (**)(char *))(v97 + 104);
  v49 = v102;
  v50 = v103;
  LODWORD(v108) = *MEMORY[0x1E0CAFD78];
  v48(v102);
  v51 = sub_1BC738B38();
  swift_bridgeObjectRetain();
  v52 = v105;
  v112 = v45;
  sub_1BC816E34();
  v53 = v49;
  v54 = *(void (**)(char *, uint64_t))(v47 + 8);
  v54(v53, v50);
  swift_bridgeObjectRelease();
  v55 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
  v56 = (void *)sub_1BC816DBC();
  v57 = objc_msgSend(v55, sel_initWithURL_, v56);

  v58 = *(void (**)(char *, uint64_t))(v98 + 8);
  v58(v52, v104);
  if (v57)
  {
    sub_1BC7340C0(v57, v100, v109);
    sub_1BC6ED784((uint64_t)v44, type metadata accessor for HealthAppPluginSource.KnownBundle);

  }
  else
  {
    v111 = v51;
    v106 = v58;
    v107 = v54;
    v61 = v108;
    v109 = v48;
    if (qword_1ED6BB1F8 != -1)
      swift_once();
    v62 = sub_1BC817590();
    __swift_project_value_buffer(v62, (uint64_t)qword_1ED6BB228);
    v63 = v94;
    sub_1BC6ECB08((uint64_t)v44, v94, type metadata accessor for HealthAppPluginSource.KnownBundle);
    v64 = v95;
    sub_1BC6ECB08((uint64_t)v44, (uint64_t)v95, type metadata accessor for HealthAppPluginSource.KnownBundle);
    v65 = sub_1BC81756C();
    v66 = sub_1BC817E84();
    v67 = v66;
    if (os_log_type_enabled(v65, v66))
    {
      v68 = swift_slowAlloc();
      v100 = (_QWORD *)swift_slowAlloc();
      v115 = v100;
      *(_DWORD *)v68 = 136315650;
      LODWORD(v99) = v67;
      v113 = v93;
      swift_getMetatypeMetadata();
      v69 = sub_1BC817AF4();
      v70 = v63;
      v113 = sub_1BC6E14D8(v69, v71, (uint64_t *)&v115);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2080;
      v72 = *(_QWORD *)(v63 + 16);
      v73 = *(_QWORD *)(v63 + 24);
      swift_bridgeObjectRetain();
      v113 = sub_1BC6E14D8(v72, v73, (uint64_t *)&v115);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      sub_1BC6ED784(v70, type metadata accessor for HealthAppPluginSource.KnownBundle);
      *(_WORD *)(v68 + 22) = 2080;
      v74 = v64[1];
      v113 = *v64;
      v114 = v74;
      v75 = v102;
      ((void (*)(char *, uint64_t, uint64_t))v109)(v102, v61, v103);
      swift_bridgeObjectRetain();
      sub_1BC816E34();
      v107(v75, v103);
      swift_bridgeObjectRelease();
      sub_1BC6E1788((unint64_t *)&qword_1EF45BB50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v76 = sub_1BC818670();
      v78 = v77;
      v106(v105, v104);
      v113 = sub_1BC6E14D8(v76, v78, (uint64_t *)&v115);
      sub_1BC818148();
      v79 = v105;
      swift_bridgeObjectRelease();
      sub_1BC6ED784((uint64_t)v64, type metadata accessor for HealthAppPluginSource.KnownBundle);
      _os_log_impl(&dword_1BC6DD000, v65, (os_log_type_t)v99, "[%s] Known URL for bundle identifier %s appears invalid; cannot load bundle at that location: %s",
        (uint8_t *)v68,
        0x20u);
      v80 = v100;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v80, -1, -1);
      v81 = v68;
      v82 = v103;
      MEMORY[0x1BCCF5BA4](v81, -1, -1);

    }
    else
    {
      v82 = v50;
      sub_1BC6ED784(v63, type metadata accessor for HealthAppPluginSource.KnownBundle);
      sub_1BC6ED784((uint64_t)v64, type metadata accessor for HealthAppPluginSource.KnownBundle);

      v75 = v102;
      v79 = v105;
    }
    type metadata accessor for HealthAppPluginInfo.LoadError(0);
    sub_1BC6E1788(&qword_1EF45B468, type metadata accessor for HealthAppPluginInfo.LoadError, (uint64_t)&protocol conformance descriptor for HealthAppPluginInfo.LoadError);
    v111 = swift_allocError();
    v84 = v83;
    v85 = v101;
    v86 = v101[1];
    v113 = *v101;
    v114 = v86;
    ((void (*)(char *, uint64_t, uint64_t))v109)(v75, v61, v82);
    swift_bridgeObjectRetain();
    sub_1BC816E34();
    v107(v75, v82);
    swift_bridgeObjectRelease();
    v87 = sub_1BC816E04();
    v89 = v88;
    v106(v79, v104);
    *v84 = v87;
    v84[1] = v89;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_1BC6ED784((uint64_t)v85, type metadata accessor for HealthAppPluginSource.KnownBundle);
  }
}

unint64_t sub_1BC7359CC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  _QWORD *v11;
  _QWORD v12[4];
  unint64_t v13;

  result = (*(uint64_t (**)(void))(v1 + 24))();
  if (!v2)
  {
    v5 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      v6 = sub_1BC8184E4();
      result = swift_bridgeObjectRelease();
      if (v6)
        goto LABEL_4;
    }
    else
    {
      v6 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v6)
      {
LABEL_4:
        if (v6 < 1)
        {
          __break(1u);
          return result;
        }
        v7 = 0;
        v13 = v5 & 0xC000000000000001;
        v11 = a1;
        do
        {
          if (v13)
            v9 = (id)MEMORY[0x1BCCF4FB0](v7, v5);
          else
            v9 = *(id *)(v5 + 8 * v7 + 32);
          v10 = v9;
          sub_1BC7340C0(v9, a1, v12);
          v8 = (void *)v12[2];

          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();

          a1 = v11;
          swift_bridgeObjectRelease();
          ++v7;
        }
        while (v6 != v7);
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t HealthAppPluginSource.plugin(name:allowDynamicFallback:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  os_unfair_lock_s *v11;
  os_unfair_lock_s *v12;
  os_unfair_lock_s *v13;

  v5 = v4;
  v10 = *(_QWORD *)v5;
  if ((sub_1BC817B9C() & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BC817B48();
    swift_bridgeObjectRetain();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
  }
  v11 = *(os_unfair_lock_s **)(v5 + 16);
  v12 = v11 + 4;
  v13 = v11 + 7;
  os_unfair_lock_lock(v11 + 7);
  sub_1BC735E24(v12, a1, a2, (void (*)(_QWORD))v5, a3 & 1, v10, a4);
  os_unfair_lock_unlock(v13);
  return swift_bridgeObjectRelease();
}

void sub_1BC735E24(_QWORD *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, void (*a4)(_QWORD)@<X3>, int a5@<W4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char **v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  _QWORD *v45;
  void (*v46)(_QWORD, _QWORD);
  uint64_t v47;
  uint64_t v48;
  char **v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *);
  unint64_t v64;
  void (*v65)(char *, uint64_t);
  id v66;
  void *v67;
  id v68;
  void (*v69)(char *, uint64_t);
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  NSObject *v76;
  os_log_type_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t);
  uint64_t v115;
  uint64_t *v116;
  char *v117;
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  char *v120;
  void (*v121)(char *);
  unint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v105 = a6;
  v108 = a5;
  v121 = a4;
  v123 = a2;
  v124 = a3;
  v114 = a7;
  v119 = sub_1BC816D74();
  v109 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v117 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_1BC816E40();
  v110 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v120 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA64(0, &qword_1ED6BA308, type metadata accessor for HealthAppPluginSource.KnownBundle, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v113 = (uint64_t)&v104 - v11;
  v115 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  v122 = *(_QWORD *)(v115 - 8);
  v12 = MEMORY[0x1E0C80A78](v115);
  v107 = (uint64_t *)((char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x1E0C80A78](v12);
  v106 = (uint64_t)&v104 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (uint64_t *)((char *)&v104 - v17);
  MEMORY[0x1E0C80A78](v16);
  v116 = (uint64_t *)((char *)&v104 - v19);
  v111 = a1;
  v20 = *(_QWORD *)(*a1 + 16);
  if (v20)
  {
    v21 = (char **)(*a1 + 40);
    while (1)
    {
      v22 = (uint64_t)*(v21 - 1);
      v23 = *v21;
      v24 = v21[1];
      v25 = v21[2];
      v26 = v21[3];
      v27 = v21[4];
      if (v22 == v123 && v23 == v124)
        break;
      if ((sub_1BC818694() & 1) != 0)
        goto LABEL_36;
      v21 += 6;
      if (!--v20)
        goto LABEL_9;
    }
    v22 = v123;
    v23 = v124;
LABEL_36:
    v70 = v114;
    *v114 = v22;
    v70[1] = v23;
    v70[2] = v24;
    v70[3] = v25;
    v70[4] = v26;
    v70[5] = v27;
    swift_bridgeObjectRetain();
    v71 = v24;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  else
  {
LABEL_9:
    v29 = *((_QWORD *)v121 + 5);
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
    {
      v31 = v29 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
      v32 = *(_QWORD *)(v122 + 72);
      swift_bridgeObjectRetain();
      v33 = v117;
      v35 = v123;
      v34 = v124;
      while (1)
      {
        sub_1BC6ECB08(v31, (uint64_t)v18, type metadata accessor for HealthAppPluginSource.KnownBundle);
        v36 = *v18 == v35 && v18[1] == (_QWORD)v34;
        if (v36 || (sub_1BC818694() & 1) != 0)
          break;
        sub_1BC6ED784((uint64_t)v18, type metadata accessor for HealthAppPluginSource.KnownBundle);
        v31 += v32;
        if (!--v30)
        {
          v37 = 1;
          goto LABEL_20;
        }
      }
      v38 = v113;
      sub_1BC738CA4((uint64_t)v18, v113);
      v37 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      v37 = 1;
      v33 = v117;
LABEL_20:
      v38 = v113;
    }
    v39 = v122;
    v40 = v115;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v122 + 56))(v38, v37, 1, v115);
    swift_bridgeObjectRelease();
    v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v38, 1, v40);
    v43 = v119;
    v42 = v120;
    v44 = v116;
    if (v41 == 1)
    {
      sub_1BC715030(v38, &qword_1ED6BA308, type metadata accessor for HealthAppPluginSource.KnownBundle);
      if ((v108 & 1) == 0)
        goto LABEL_32;
      v45 = v111;
      v46 = v118;
      sub_1BC7359CC(v111);
      if (v46)
        return;
      v47 = *v45;
      v48 = *(_QWORD *)(*v45 + 16);
      if (!v48)
      {
LABEL_32:
        type metadata accessor for HealthAppPluginInfo.LoadError(0);
        sub_1BC6E1788(&qword_1EF45B468, type metadata accessor for HealthAppPluginInfo.LoadError, (uint64_t)&protocol conformance descriptor for HealthAppPluginInfo.LoadError);
        swift_allocError();
        v57 = v124;
        *v58 = v123;
        v58[1] = v57;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        swift_willThrow();
        return;
      }
      v49 = (char **)(v47 + 40);
      while (1)
      {
        v50 = (uint64_t)*(v49 - 1);
        v51 = *v49;
        v52 = v49[1];
        v53 = v49[2];
        v55 = v49[3];
        v54 = v49[4];
        if (v50 == v123 && v51 == v124)
          break;
        if ((sub_1BC818694() & 1) != 0)
          goto LABEL_45;
        v49 += 6;
        if (!--v48)
          goto LABEL_32;
      }
      v50 = v123;
      v51 = v124;
LABEL_45:
      v102 = v114;
      *v114 = v50;
      v102[1] = v51;
      v102[2] = v52;
      v102[3] = v53;
      v102[4] = v55;
      v102[5] = v54;
      swift_bridgeObjectRetain();
      v103 = v52;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    else
    {
      sub_1BC738CA4(v38, (uint64_t)v116);
      v59 = (char *)v44 + *(int *)(v40 + 24);
      v60 = v44[1];
      v125 = *v44;
      v126 = v60;
      v61 = v33;
      v62 = v109;
      v63 = *(void (**)(char *))(v109 + 104);
      LODWORD(v123) = *MEMORY[0x1E0CAFD78];
      v63(v61);
      v64 = sub_1BC738B38();
      swift_bridgeObjectRetain();
      v124 = v59;
      sub_1BC816E34();
      v65 = *(void (**)(char *, uint64_t))(v62 + 8);
      v65(v61, v43);
      swift_bridgeObjectRelease();
      v66 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
      v67 = (void *)sub_1BC816DBC();
      v68 = objc_msgSend(v66, sel_initWithURL_, v67);

      v69 = *(void (**)(char *, uint64_t))(v110 + 8);
      v69(v42, v112);
      if (v68)
      {
        sub_1BC7340C0(v68, v111, (void (*)(char *, uint64_t))v114);
        sub_1BC6ED784((uint64_t)v44, type metadata accessor for HealthAppPluginSource.KnownBundle);

      }
      else
      {
        v114 = v69;
        v118 = (void (*)(_QWORD, _QWORD))v65;
        v72 = v123;
        v121 = (void (*)(_QWORD))v63;
        v122 = v64;
        if (qword_1ED6BB1F8 != -1)
          swift_once();
        v73 = sub_1BC817590();
        __swift_project_value_buffer(v73, (uint64_t)qword_1ED6BB228);
        v74 = v106;
        sub_1BC6ECB08((uint64_t)v44, v106, type metadata accessor for HealthAppPluginSource.KnownBundle);
        v75 = v107;
        sub_1BC6ECB08((uint64_t)v44, (uint64_t)v107, type metadata accessor for HealthAppPluginSource.KnownBundle);
        v76 = sub_1BC81756C();
        v77 = sub_1BC817E84();
        v78 = v77;
        v79 = v72;
        if (os_log_type_enabled(v76, v77))
        {
          v80 = swift_slowAlloc();
          v113 = swift_slowAlloc();
          v127 = v113;
          *(_DWORD *)v80 = 136315650;
          LODWORD(v111) = v78;
          v125 = v105;
          swift_getMetatypeMetadata();
          v81 = sub_1BC817AF4();
          v82 = v74;
          v125 = sub_1BC6E14D8(v81, v83, &v127);
          sub_1BC818148();
          swift_bridgeObjectRelease();
          *(_WORD *)(v80 + 12) = 2080;
          v84 = *(_QWORD *)(v74 + 16);
          v85 = *(_QWORD *)(v74 + 24);
          swift_bridgeObjectRetain();
          v125 = sub_1BC6E14D8(v84, v85, &v127);
          sub_1BC818148();
          swift_bridgeObjectRelease();
          sub_1BC6ED784(v82, type metadata accessor for HealthAppPluginSource.KnownBundle);
          *(_WORD *)(v80 + 22) = 2080;
          v86 = v75[1];
          v125 = *v75;
          v126 = v86;
          v87 = v117;
          ((void (*)(char *, uint64_t, uint64_t))v121)(v117, v79, v119);
          swift_bridgeObjectRetain();
          sub_1BC816E34();
          v118(v87, v119);
          swift_bridgeObjectRelease();
          sub_1BC6E1788((unint64_t *)&qword_1EF45BB50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
          v88 = v112;
          v89 = sub_1BC818670();
          v91 = v90;
          ((void (*)(char *, uint64_t))v114)(v120, v88);
          v125 = sub_1BC6E14D8(v89, v91, &v127);
          sub_1BC818148();
          v92 = v120;
          swift_bridgeObjectRelease();
          sub_1BC6ED784((uint64_t)v75, type metadata accessor for HealthAppPluginSource.KnownBundle);
          _os_log_impl(&dword_1BC6DD000, v76, (os_log_type_t)v111, "[%s] Known URL for bundle identifier %s appears invalid; cannot load bundle at that location: %s",
            (uint8_t *)v80,
            0x20u);
          v93 = v113;
          swift_arrayDestroy();
          MEMORY[0x1BCCF5BA4](v93, -1, -1);
          v94 = v119;
          MEMORY[0x1BCCF5BA4](v80, -1, -1);

          v72 = v79;
        }
        else
        {
          sub_1BC6ED784(v74, type metadata accessor for HealthAppPluginSource.KnownBundle);
          sub_1BC6ED784((uint64_t)v75, type metadata accessor for HealthAppPluginSource.KnownBundle);

          v87 = v117;
          v94 = v119;
          v92 = v120;
        }
        type metadata accessor for HealthAppPluginInfo.LoadError(0);
        sub_1BC6E1788(&qword_1EF45B468, type metadata accessor for HealthAppPluginInfo.LoadError, (uint64_t)&protocol conformance descriptor for HealthAppPluginInfo.LoadError);
        swift_allocError();
        v96 = v95;
        v97 = v116;
        v98 = v116[1];
        v125 = *v116;
        v126 = v98;
        ((void (*)(char *, uint64_t, uint64_t))v121)(v87, v72, v94);
        swift_bridgeObjectRetain();
        sub_1BC816E34();
        v118(v87, v94);
        swift_bridgeObjectRelease();
        v99 = sub_1BC816E04();
        v101 = v100;
        ((void (*)(char *, uint64_t))v114)(v92, v112);
        *v96 = v99;
        v96[1] = v101;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_1BC6ED784((uint64_t)v97, type metadata accessor for HealthAppPluginSource.KnownBundle);
      }
    }
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> HealthAppPluginSource.loadPluginsFromDisk()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 28));
  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
    sub_1BC7359CC((_QWORD *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 28));
}

uint64_t HealthAppPluginSource.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t HealthAppPluginSource.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t HealthAppPluginSource.launchGenerationPlugins()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  os_unfair_lock_t v19;
  _QWORD v20[2];
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v3 = v0;
  v4 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v24 = (uint64_t)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v20 - v8;
  v10 = v0[5];
  v11 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  v12 = *(_QWORD *)(v10 + 16);
  result = swift_bridgeObjectRetain();
  v23 = v12;
  if (v12)
  {
    v20[1] = v2;
    v21 = v3;
    v14 = 0;
    v22 = v4;
    while (v14 < *(_QWORD *)(v10 + 16))
    {
      v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v16 = *(_QWORD *)(v5 + 72);
      sub_1BC6ECB08(v10 + v15 + v16 * v14, (uint64_t)v9, type metadata accessor for HealthAppPluginSource.KnownBundle);
      if (v9[*(int *)(v4 + 28)] == 1)
      {
        sub_1BC738CA4((uint64_t)v9, v24);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BC6E8C00(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v25;
        v18 = *(_QWORD *)(v25 + 16);
        v17 = *(_QWORD *)(v25 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1BC6E8C00(v17 > 1, v18 + 1, 1);
          v11 = v25;
        }
        *(_QWORD *)(v11 + 16) = v18 + 1;
        result = sub_1BC738CA4(v24, v11 + v15 + v18 * v16);
        v4 = v22;
      }
      else
      {
        result = sub_1BC6ED784((uint64_t)v9, type metadata accessor for HealthAppPluginSource.KnownBundle);
      }
      if (v23 == ++v14)
      {
        v11 = v25;
        v3 = v21;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_retain();
    v19 = sub_1BC736EA0(v11, v3);
    swift_release();
    swift_release();
    return (uint64_t)v19;
  }
  return result;
}

uint64_t HealthAppPluginSource.notificationCenterDelegateProvidingPlugins()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  os_unfair_lock_t v19;
  _QWORD v20[2];
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v3 = v0;
  v4 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v24 = (uint64_t)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v20 - v8;
  v10 = v0[5];
  v11 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  v12 = *(_QWORD *)(v10 + 16);
  result = swift_bridgeObjectRetain();
  v23 = v12;
  if (v12)
  {
    v20[1] = v2;
    v21 = v3;
    v14 = 0;
    v22 = v4;
    while (v14 < *(_QWORD *)(v10 + 16))
    {
      v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v16 = *(_QWORD *)(v5 + 72);
      sub_1BC6ECB08(v10 + v15 + v16 * v14, (uint64_t)v9, type metadata accessor for HealthAppPluginSource.KnownBundle);
      if (v9[*(int *)(v4 + 32)] == 1)
      {
        sub_1BC738CA4((uint64_t)v9, v24);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BC6E8C00(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v25;
        v18 = *(_QWORD *)(v25 + 16);
        v17 = *(_QWORD *)(v25 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1BC6E8C00(v17 > 1, v18 + 1, 1);
          v11 = v25;
        }
        *(_QWORD *)(v11 + 16) = v18 + 1;
        result = sub_1BC738CA4(v24, v11 + v15 + v18 * v16);
        v4 = v22;
      }
      else
      {
        result = sub_1BC6ED784((uint64_t)v9, type metadata accessor for HealthAppPluginSource.KnownBundle);
      }
      if (v23 == ++v14)
      {
        v11 = v25;
        v3 = v21;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_retain();
    v19 = sub_1BC736EA0(v11, v3);
    swift_release();
    swift_release();
    return (uint64_t)v19;
  }
  return result;
}

unint64_t static HealthAppPluginSource.disabledHealthPluginsDefaultsKey.getter()
{
  return 0xD000000000000015;
}

unint64_t static HealthAppPluginSource.allowedHealthPluginsDefaultsKey.getter()
{
  return 0xD000000000000014;
}

void HealthAppPluginSource.conformingPlugins<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v2 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 16) + 28);
  os_unfair_lock_lock(v2);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  if (v1)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x1E0C80A78](v3);
    sub_1BC738D00(0, &qword_1ED6B6350);
    sub_1BC738C1C(&qword_1ED6B83D8, &qword_1ED6B6350, (uint64_t)&type metadata for HealthAppPluginInfo, MEMORY[0x1E0DEAF38]);
    sub_1BC817BC0();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BC736E14@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v4;

  swift_unknownObjectRetain();
  v4 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, v4 ^ 1u, 1, a1);
}

uint64_t type metadata accessor for HealthAppPluginInfo.LoadError(uint64_t a1)
{
  return sub_1BC738C70(a1, qword_1EF45B4E0);
}

os_unfair_lock_t sub_1BC736EA0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  os_unfair_lock_s *v31;
  _QWORD v33[2];
  uint64_t v34;
  _QWORD *v35;
  os_unfair_lock_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __int128 v44;
  __int128 v45;
  os_unfair_lock_s *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;

  v42 = *a2;
  v41 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  v5 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA64(0, &qword_1ED6BA308, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v33 - v10;
  v40 = *(_QWORD *)(a1 + 16);
  if (!v40)
    return (os_unfair_lock_t)MEMORY[0x1E0DEE9D8];
  v47 = v2;
  v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v37 = a1 + v12;
  v13 = a2[5];
  v39 = a2;
  v14 = a2[2];
  v36 = (os_unfair_lock_t)(v14 + 28);
  v35 = (_QWORD *)(v14 + 16);
  v38 = v5;
  v15 = *(_QWORD *)(v5 + 72);
  v52 = v13;
  v34 = v13 + v12;
  v33[1] = a1;
  swift_bridgeObjectRetain();
  v16 = 0;
  v17 = (os_unfair_lock_t)MEMORY[0x1E0DEE9D8];
  v43 = v11;
  while (1)
  {
    v18 = v37 + v15 * v16;
    v20 = *(_QWORD *)(v18 + 16);
    v19 = *(char **)(v18 + 24);
    v21 = *(_QWORD *)(v52 + 16);
    swift_bridgeObjectRetain();
    v46 = v17;
    if (v21)
    {
      v22 = v34;
      while (1)
      {
        sub_1BC6ECB08(v22, (uint64_t)v7, type metadata accessor for HealthAppPluginSource.KnownBundle);
        v23 = *((_QWORD *)v7 + 2) == v20 && *((_QWORD *)v7 + 3) == (_QWORD)v19;
        if (v23 || (sub_1BC818694() & 1) != 0)
          break;
        sub_1BC6ED784((uint64_t)v7, type metadata accessor for HealthAppPluginSource.KnownBundle);
        v22 += v15;
        if (!--v21)
        {
          v24 = 1;
          v11 = v43;
          goto LABEL_14;
        }
      }
      v11 = v43;
      sub_1BC738CA4((uint64_t)v7, (uint64_t)v43);
      v24 = 0;
    }
    else
    {
      v24 = 1;
    }
LABEL_14:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v11, v24, 1, v41);
    swift_bridgeObjectRelease();
    v17 = v36;
    os_unfair_lock_lock(v36);
    v25 = v47;
    sub_1BC7350F8(v35, v20, v19, (uint64_t)v11, (uint64_t)v39, 1, v42, (void (*)(char *))&v48);
    if (v25)
      break;
    os_unfair_lock_unlock(v17);
    sub_1BC715030((uint64_t)v11, &qword_1ED6BA308, type metadata accessor for HealthAppPluginSource.KnownBundle);
    v26 = v48;
    v27 = v50;
    v44 = v51;
    v45 = v49;
    v17 = v46;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v47 = 0;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v17 = (os_unfair_lock_t)sub_1BC725B18(0, *(_QWORD *)&v17[4]._os_unfair_lock_opaque + 1, 1, v17);
    v30 = *(_QWORD *)&v17[4]._os_unfair_lock_opaque;
    v29 = *(_QWORD *)&v17[6]._os_unfair_lock_opaque;
    if (v30 >= v29 >> 1)
      v17 = (os_unfair_lock_t)sub_1BC725B18((_QWORD *)(v29 > 1), v30 + 1, 1, v17);
    *(_QWORD *)&v17[4]._os_unfair_lock_opaque = v30 + 1;
    v31 = &v17[12 * v30];
    *(_QWORD *)&v31[8]._os_unfair_lock_opaque = v26;
    ++v16;
    *(_OWORD *)&v31[10]._os_unfair_lock_opaque = v45;
    *(_QWORD *)&v31[14]._os_unfair_lock_opaque = v27;
    *(_OWORD *)&v31[16]._os_unfair_lock_opaque = v44;
    v11 = v43;
    if (v16 == v40)
    {
      swift_bridgeObjectRelease();
      return v17;
    }
  }
  os_unfair_lock_unlock(v17);
  sub_1BC715030((uint64_t)v11, &qword_1ED6BA308, type metadata accessor for HealthAppPluginSource.KnownBundle);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

id _s14HealthPlatform0A15AppPluginSourceC12knownBundlesSayAC11KnownBundleVGvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id result;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  char *v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *);
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  void (*v40)(char *);
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  _QWORD *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  void (*v70)(char *, char *, uint64_t);
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *);
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  void (*v94)(char *, char *, uint64_t);
  _QWORD *v95;
  unint64_t *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  unint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *);
  uint64_t v106;
  char *v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  unint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  void (*v123)(char *, char *, uint64_t);
  char *v124;
  char *v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  char *v142;
  unsigned int v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(char *, uint64_t);
  unsigned int v150;
  void (*v151)(char *);
  unint64_t v152;
  void (*v153)(char *, uint64_t);
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;

  v137 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  v0 = *(_QWORD *)(v137 - 8);
  MEMORY[0x1E0C80A78](v137);
  v138 = (char *)&v129 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1BC816D74();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v129 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_1BC816E40();
  v146 = *(_QWORD *)(v155 - 8);
  v6 = MEMORY[0x1E0C80A78](v155);
  v8 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v129 - v9;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v12 = result;
    v143 = objc_msgSend(result, sel_isiPad);

    sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA560, type metadata accessor for HealthAppPluginSource.KnownBundle, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v14 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
    v147 = *(_QWORD *)(v0 + 72);
    v13 = v147;
    v15 = swift_allocObject();
    v135 = v15;
    *(_OWORD *)(v15 + 16) = xmmword_1BC81BA80;
    v136 = v14;
    v16 = (_QWORD *)(v15 + v14);
    v148 = type metadata accessor for StorageLocations();
    static StorageLocations.rootDirectory.getter();
    v152 = 0x80000001BC826E30;
    v156 = 0xD000000000000026;
    v157 = 0x80000001BC826E30;
    v150 = *MEMORY[0x1E0CAFD60];
    v151 = *(void (**)(char *))(v3 + 104);
    v151(v5);
    v154 = sub_1BC738B38();
    sub_1BC816E34();
    v153 = *(void (**)(char *, uint64_t))(v3 + 8);
    v153(v5, v2);
    swift_bridgeObjectRelease();
    v17 = v146;
    v149 = *(void (**)(char *, uint64_t))(v146 + 8);
    v18 = v155;
    v149(v8, v155);
    v140 = 0xD00000000000001FLL;
    v145 = v16;
    *v16 = 0xD00000000000001FLL;
    v16[1] = 0x80000001BC826F40;
    v134 = 0xD000000000000023;
    v16[2] = 0xD000000000000023;
    v16[3] = 0x80000001BC824C60;
    v19 = (int *)v137;
    v20 = (char *)v16 + *(int *)(v137 + 24);
    v146 = *(_QWORD *)(v17 + 32);
    ((void (*)(char *, char *, uint64_t))v146)(v20, v10, v18);
    *((_BYTE *)v16 + v19[7]) = 0;
    *((_BYTE *)v16 + v19[8]) = 0;
    v21 = (_QWORD *)((char *)v16 + v13);
    static StorageLocations.rootDirectory.getter();
    v22 = v152;
    v156 = 0xD000000000000026;
    v157 = v152;
    v23 = v150;
    ((void (*)(char *, _QWORD, uint64_t))v151)(v5, v150, v2);
    v142 = v10;
    sub_1BC816E34();
    v153(v5, v2);
    swift_bridgeObjectRelease();
    v24 = v155;
    v149(v8, v155);
    v141 = 0xD000000000000017;
    *v21 = 0xD000000000000017;
    v21[1] = 0x80000001BC826F60;
    v139 = 0xD00000000000001BLL;
    v21[2] = 0xD00000000000001BLL;
    v21[3] = 0x80000001BC826F80;
    ((void (*)(char *, char *, uint64_t))v146)((char *)v21 + v19[6], v10, v24);
    *((_BYTE *)v21 + v19[7]) = v143;
    *((_BYTE *)v21 + v19[8]) = 0;
    v25 = 2 * v147;
    v26 = (_QWORD *)((char *)v145 + 2 * v147);
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v22;
    v27 = v2;
    v28 = v2;
    v29 = v151;
    ((void (*)(char *, uint64_t, uint64_t))v151)(v5, v23, v28);
    v30 = v142;
    sub_1BC816E34();
    v153(v5, v27);
    swift_bridgeObjectRelease();
    v31 = v155;
    v32 = v149;
    v149(v8, v155);
    *v26 = v139;
    v26[1] = 0x80000001BC826FA0;
    v26[2] = v140;
    v26[3] = 0x80000001BC826FC0;
    ((void (*)(char *, char *, uint64_t))v146)((char *)v26 + v19[6], v30, v31);
    *((_BYTE *)v26 + v19[7]) = 0;
    *((_BYTE *)v26 + v19[8]) = 0;
    v33 = v147;
    v34 = v145;
    v35 = (_QWORD *)((char *)v145 + v25 + v147);
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v152;
    ((void (*)(char *, _QWORD, uint64_t))v29)(v5, v150, v27);
    v36 = v142;
    sub_1BC816E34();
    v153(v5, v27);
    swift_bridgeObjectRelease();
    v37 = v155;
    v32(v8, v155);
    *v35 = 0xD00000000000001DLL;
    v35[1] = 0x80000001BC826FE0;
    v133 = 0xD000000000000021;
    v35[2] = 0xD000000000000021;
    v35[3] = 0x80000001BC827000;
    ((void (*)(char *, char *, uint64_t))v146)((char *)v35 + v19[6], v36, v37);
    *((_BYTE *)v35 + v19[7]) = 0;
    *((_BYTE *)v35 + v19[8]) = 0;
    v132 = 4 * v33;
    v38 = (_QWORD *)((char *)v34 + 4 * v33);
    static StorageLocations.rootDirectory.getter();
    v39 = v152;
    v156 = 0xD000000000000026;
    v157 = v152;
    v144 = v27;
    v40 = v151;
    ((void (*)(char *, _QWORD, uint64_t))v151)(v5, v150, v27);
    sub_1BC816E34();
    v153(v5, v27);
    swift_bridgeObjectRelease();
    v41 = v155;
    v42 = v149;
    v149(v8, v155);
    *v38 = 0xD000000000000012;
    v38[1] = 0x80000001BC827030;
    v140 = 0xD000000000000016;
    v38[2] = 0xD000000000000016;
    v38[3] = 0x80000001BC827050;
    ((void (*)(char *, char *, uint64_t))v146)((char *)v38 + v19[6], v36, v41);
    *((_BYTE *)v38 + v19[7]) = 0;
    *((_BYTE *)v38 + v19[8]) = 1;
    v43 = (_QWORD *)((char *)v145 + v132 + v147);
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v39;
    v44 = v144;
    ((void (*)(char *, _QWORD, uint64_t))v40)(v5, v150, v144);
    sub_1BC816E34();
    v45 = v44;
    v153(v5, v44);
    swift_bridgeObjectRelease();
    v46 = v155;
    v42(v8, v155);
    v131 = 0xD00000000000001CLL;
    *v43 = 0xD00000000000001CLL;
    v43[1] = 0x80000001BC827070;
    v129 = 0xD000000000000020;
    v43[2] = 0xD000000000000020;
    v43[3] = 0x80000001BC827090;
    v47 = (void (*)(char *, char *, uint64_t))v146;
    ((void (*)(char *, char *, uint64_t))v146)((char *)v43 + v19[6], v36, v46);
    *((_BYTE *)v43 + v19[7]) = 0;
    *((_BYTE *)v43 + v19[8]) = 0;
    v48 = (_QWORD *)((char *)v145 + 6 * v147);
    v49 = v45;
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v152;
    v50 = v150;
    ((void (*)(char *, _QWORD, uint64_t))v151)(v5, v150, v49);
    sub_1BC816E34();
    v153(v5, v49);
    swift_bridgeObjectRelease();
    v51 = v155;
    v149(v8, v155);
    *v48 = v141;
    v48[1] = 0x80000001BC8270C0;
    v48[2] = v139;
    v48[3] = 0x80000001BC8270E0;
    v47((char *)v48 + v19[6], v36, v51);
    *((_BYTE *)v48 + v19[7]) = 0;
    *((_BYTE *)v48 + v19[8]) = 0;
    v139 = 8 * v147;
    v52 = v145;
    v53 = (char *)v145 + 7 * v147;
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v152;
    v54 = v50;
    v55 = v144;
    ((void (*)(char *, uint64_t, uint64_t))v151)(v5, v54, v144);
    sub_1BC816E34();
    v56 = v153;
    v153(v5, v55);
    swift_bridgeObjectRelease();
    v57 = v155;
    v149(v8, v155);
    v130 = 0xD000000000000027;
    *(_QWORD *)v53 = 0xD000000000000027;
    *((_QWORD *)v53 + 1) = 0x80000001BC827100;
    *((_QWORD *)v53 + 2) = 0xD00000000000002BLL;
    *((_QWORD *)v53 + 3) = 0x80000001BC827130;
    v47(&v53[v19[6]], v36, v57);
    LOBYTE(v47) = v143;
    v53[v19[7]] = v143;
    v53[v19[8]] = 1;
    v58 = (_QWORD *)((char *)v52 + v139);
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v152;
    ((void (*)(char *, _QWORD, uint64_t))v151)(v5, v150, v55);
    sub_1BC816E34();
    v56(v5, v55);
    swift_bridgeObjectRelease();
    v59 = v155;
    v60 = v149;
    v149(v8, v155);
    v132 = 0xD000000000000025;
    *v58 = 0xD000000000000025;
    v58[1] = 0x80000001BC827160;
    v58[2] = v129;
    v58[3] = 0x80000001BC827190;
    ((void (*)(char *, char *, uint64_t))v146)((char *)v58 + v19[6], v36, v59);
    *((_BYTE *)v58 + v19[7]) = (_BYTE)v47;
    *((_BYTE *)v58 + v19[8]) = 1;
    v61 = (_QWORD *)((char *)v145 + v139 + v147);
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v62 = v152;
    v157 = v152;
    v63 = v150;
    v64 = v144;
    ((void (*)(char *, _QWORD, uint64_t))v151)(v5, v150, v144);
    sub_1BC816E34();
    v153(v5, v64);
    swift_bridgeObjectRelease();
    v65 = v155;
    v60(v8, v155);
    v139 = 0xD000000000000022;
    *v61 = 0xD000000000000022;
    v61[1] = 0x80000001BC8271C0;
    v61[2] = 0xD000000000000026;
    v61[3] = 0x80000001BC8271F0;
    ((void (*)(char *, char *, uint64_t))v146)((char *)v61 + v19[6], v36, v65);
    *((_BYTE *)v61 + v19[7]) = v143;
    *((_BYTE *)v61 + v19[8]) = 1;
    v66 = v147;
    v67 = (_QWORD *)((char *)v145 + 10 * v147);
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v62;
    ((void (*)(char *, uint64_t, uint64_t))v151)(v5, v63, v64);
    sub_1BC816E34();
    v153(v5, v64);
    swift_bridgeObjectRelease();
    v68 = v155;
    v69 = v149;
    v149(v8, v155);
    *v67 = 0xD00000000000001ELL;
    v67[1] = 0x80000001BC827220;
    v67[2] = v139;
    v67[3] = 0x80000001BC827240;
    v70 = (void (*)(char *, char *, uint64_t))v146;
    ((void (*)(char *, char *, uint64_t))v146)((char *)v67 + v19[6], v36, v68);
    *((_BYTE *)v67 + v19[7]) = 0;
    *((_BYTE *)v67 + v19[8]) = 1;
    v71 = v145;
    v72 = (char *)v145 + 11 * v66;
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v152;
    v73 = v144;
    ((void (*)(char *, _QWORD, uint64_t))v151)(v5, v150, v144);
    sub_1BC816E34();
    v153(v5, v73);
    swift_bridgeObjectRelease();
    v74 = v155;
    v69(v8, v155);
    *(_QWORD *)v72 = 0xD000000000000015;
    *((_QWORD *)v72 + 1) = 0x80000001BC827270;
    *((_QWORD *)v72 + 2) = 0xD000000000000019;
    *((_QWORD *)v72 + 3) = 0x80000001BC827290;
    v70(&v72[v19[6]], v36, v74);
    v72[v19[7]] = v143;
    v72[v19[8]] = 1;
    v75 = v147;
    v76 = (_QWORD *)((char *)v71 + 12 * v147);
    v77 = v71;
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v152;
    v78 = v150;
    ((void (*)(char *, _QWORD, uint64_t))v151)(v5, v150, v73);
    sub_1BC816E34();
    v153(v5, v73);
    swift_bridgeObjectRelease();
    v79 = v155;
    v149(v8, v155);
    *v76 = 0xD000000000000018;
    v76[1] = 0x80000001BC8272B0;
    v76[2] = v134;
    v76[3] = 0x80000001BC8272D0;
    ((void (*)(char *, char *, uint64_t))v146)((char *)v76 + v19[6], v36, v79);
    *((_BYTE *)v76 + v19[7]) = 0;
    *((_BYTE *)v76 + v19[8]) = 0;
    v80 = (_QWORD *)((char *)v77 + 13 * v75);
    static StorageLocations.rootDirectory.getter();
    v81 = v152;
    v156 = 0xD000000000000026;
    v157 = v152;
    v82 = v78;
    v83 = v144;
    v84 = v151;
    ((void (*)(char *, uint64_t, uint64_t))v151)(v5, v82, v144);
    sub_1BC816E34();
    v153(v5, v83);
    swift_bridgeObjectRelease();
    v85 = v155;
    v149(v8, v155);
    *v80 = v130;
    v80[1] = 0x80000001BC827300;
    v80[2] = v131;
    v80[3] = 0x80000001BC827330;
    v86 = (void (*)(char *, char *, uint64_t))v146;
    ((void (*)(char *, char *, uint64_t))v146)((char *)v80 + v19[6], v36, v85);
    *((_BYTE *)v80 + v19[7]) = 0;
    *((_BYTE *)v80 + v19[8]) = 1;
    v87 = (char *)v145 + 14 * v147;
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v81;
    v88 = v150;
    v89 = v144;
    ((void (*)(char *, _QWORD, uint64_t))v84)(v5, v150, v144);
    v90 = v142;
    sub_1BC816E34();
    v153(v5, v89);
    swift_bridgeObjectRelease();
    v91 = v155;
    v149(v8, v155);
    *(_QWORD *)v87 = 0xD000000000000013;
    *((_QWORD *)v87 + 1) = 0x80000001BC827350;
    *((_QWORD *)v87 + 2) = v141;
    *((_QWORD *)v87 + 3) = 0x80000001BC827370;
    v92 = v90;
    v93 = v90;
    v94 = v86;
    v86(&v87[v19[6]], v93, v91);
    v87[v19[7]] = 0;
    v87[v19[8]] = 0;
    v141 = 16 * v147;
    v95 = v145;
    v96 = (_QWORD *)((char *)v145 + 15 * v147);
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v152;
    v97 = v144;
    ((void (*)(char *, uint64_t, uint64_t))v151)(v5, v88, v144);
    v98 = v92;
    sub_1BC816E34();
    v99 = v97;
    v153(v5, v97);
    swift_bridgeObjectRelease();
    v100 = v155;
    v101 = v149;
    v149(v8, v155);
    *v96 = v133;
    v96[1] = 0x80000001BC827390;
    v96[2] = v140;
    v96[3] = 0x80000001BC8273C0;
    v94((char *)v96 + v19[6], v98, v100);
    *((_BYTE *)v96 + v19[7]) = v143;
    *((_BYTE *)v96 + v19[8]) = 1;
    v102 = (_QWORD *)((char *)v95 + v141);
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v152;
    v103 = v99;
    v104 = v99;
    v105 = v151;
    ((void (*)(char *, _QWORD, uint64_t))v151)(v5, v150, v104);
    sub_1BC816E34();
    v153(v5, v103);
    swift_bridgeObjectRelease();
    v106 = v155;
    v101(v8, v155);
    *v102 = v140;
    v102[1] = 0x80000001BC8273E0;
    v140 = 0xD00000000000001ALL;
    v102[2] = 0xD00000000000001ALL;
    v102[3] = 0x80000001BC827400;
    v107 = v98;
    v108 = (void (*)(char *, char *, uint64_t))v146;
    ((void (*)(char *, char *, uint64_t))v146)((char *)v102 + v19[6], v107, v106);
    *((_BYTE *)v102 + v19[7]) = 1;
    *((_BYTE *)v102 + v19[8]) = 1;
    v109 = v147;
    v110 = (_QWORD *)((char *)v145 + v141 + v147);
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v152;
    v111 = v144;
    ((void (*)(char *, _QWORD, uint64_t))v105)(v5, v150, v144);
    sub_1BC816E34();
    v112 = v111;
    v113 = v153;
    v153(v5, v112);
    swift_bridgeObjectRelease();
    v114 = v155;
    v149(v8, v155);
    *v110 = v140;
    v110[1] = 0x80000001BC827420;
    v115 = v109;
    v110[2] = v132;
    v110[3] = 0x80000001BC827440;
    v116 = v142;
    v108((char *)v110 + v19[6], v142, v114);
    *((_BYTE *)v110 + v19[7]) = v143;
    *((_BYTE *)v110 + v19[8]) = 1;
    v117 = (_QWORD *)((char *)v145 + 18 * v115);
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v152;
    v118 = v144;
    ((void (*)(char *, _QWORD, uint64_t))v151)(v5, v150, v144);
    sub_1BC816E34();
    v119 = v118;
    v113(v5, v118);
    swift_bridgeObjectRelease();
    v120 = v114;
    v149(v8, v114);
    *v117 = v139;
    v117[1] = 0x80000001BC827470;
    v117[2] = 0xD000000000000026;
    v117[3] = 0x80000001BC8274A0;
    v121 = v116;
    v122 = v116;
    v123 = (void (*)(char *, char *, uint64_t))v146;
    ((void (*)(char *, char *, uint64_t))v146)((char *)v117 + v19[6], v121, v120);
    *((_BYTE *)v117 + v19[7]) = 0;
    *((_BYTE *)v117 + v19[8]) = 0;
    static StorageLocations.rootDirectory.getter();
    v156 = 0xD000000000000026;
    v157 = v152;
    ((void (*)(char *, _QWORD, uint64_t))v151)(v5, v150, v119);
    sub_1BC816E34();
    v113(v5, v119);
    swift_bridgeObjectRelease();
    v149(v8, v120);
    v124 = v138;
    *(_QWORD *)v138 = 0xD000000000000029;
    *((_QWORD *)v124 + 1) = 0x80000001BC8274D0;
    *((_QWORD *)v124 + 2) = 0xD00000000000002DLL;
    *((_QWORD *)v124 + 3) = 0x80000001BC827500;
    v125 = v122;
    v126 = v135;
    v123(&v124[v19[6]], v125, v120);
    v124[v19[7]] = 0;
    v124[v19[8]] = 1;
    v128 = *(_QWORD *)(v126 + 16);
    v127 = *(_QWORD *)(v126 + 24);
    if (v128 >= v127 >> 1)
      v126 = sub_1BC7258E8(v127 > 1, v128 + 1, 1, v126);
    *(_QWORD *)(v126 + 16) = v128 + 1;
    sub_1BC738CA4((uint64_t)v124, v126 + v136 + v128 * v147);
    return (id)v126;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id _s14HealthPlatform0A15AppPluginSourceC25disabledBundleIdentifiersShySSGyFZ_0()
{
  void *v0;
  id result;
  void *v2;
  unsigned int v3;
  void *v4;
  void *v5;
  unsigned int v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v0 = (void *)objc_opt_self();
  result = objc_msgSend(v0, sel_sharedBehavior);
  if (!result)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  v2 = result;
  v3 = objc_msgSend(result, sel_isiPad);

  if (v3)
    v4 = &unk_1E7515EA8;
  else
    v4 = (void *)MEMORY[0x1E0DEE9D8];
  result = objc_msgSend(v0, sel_sharedBehavior);
  if (!result)
    goto LABEL_14;
  v5 = result;
  v6 = objc_msgSend(result, sel_isAppleInternalInstall);

  if (v6)
  {
    sub_1BC817AE8();
    v7 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
    v8 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v7, sel_initWithSuiteName_, v8);

    if (!v9)
      goto LABEL_10;
    v10 = (void *)sub_1BC817AC4();
    v11 = objc_msgSend(v9, sel_arrayForKey_, v10);

    if (!v11 || (v12 = sub_1BC817C5C(), v11, v13 = sub_1BC73CA68(v12), swift_bridgeObjectRelease(), !v13))
    {
LABEL_10:
      swift_bridgeObjectRelease();
      v13 = MEMORY[0x1E0DEE9D8];
    }
    sub_1BC806C9C(v13);
  }
  v14 = sub_1BC6EAD84((uint64_t)v4);
  swift_bridgeObjectRelease();
  return (id)v14;
}

id _s14HealthPlatform0A15AppPluginSourceC24allowedBundleIdentifiersShySSGSgyFZ_0()
{
  id result;
  void *v1;
  unsigned int v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v2)
    {
      sub_1BC817AE8();
      v3 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
      v4 = (void *)sub_1BC817AC4();
      swift_bridgeObjectRelease();
      v5 = objc_msgSend(v3, sel_initWithSuiteName_, v4);

      if (!v5)
        return v5;
      v6 = (void *)sub_1BC817AC4();
      v7 = objc_msgSend(v5, sel_arrayForKey_, v6);

      if (v7)
      {
        v8 = sub_1BC817C5C();

        v9 = sub_1BC73CA68(v8);
        swift_bridgeObjectRelease();
        if (v9)
        {
          v5 = (id)sub_1BC6EAD84(v9);
          swift_bridgeObjectRelease();
          return v5;
        }
      }
    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_1BC738ADC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BA530)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BA530);
  }
}

unint64_t sub_1BC738B38()
{
  unint64_t result;

  result = qword_1ED6BA410;
  if (!qword_1ED6BA410)
  {
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED6BA410);
  }
  return result;
}

uint64_t sub_1BC738B7C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BC816E40();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

id sub_1BC738BDC()
{
  sub_1BC816E40();
  return sub_1BC733AF0();
}

uint64_t sub_1BC738C1C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC738D00(255, a2);
    result = MEMORY[0x1BCCF5AB4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for HealthAppPluginSource.KnownBundle(uint64_t a1)
{
  return sub_1BC738C70(a1, qword_1ED6B9C20);
}

uint64_t sub_1BC738C70(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC738CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC738CE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC736E14(*(_QWORD *)(v1 + 16), a1);
}

void sub_1BC738D00(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC817D04();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t dispatch thunk of HealthAppPluginPrincipalClass.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t destroy for HealthAppPluginInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

_QWORD *initializeWithCopy for HealthAppPluginInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v5 = (void *)a2[2];
  v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRetain();
  v7 = v5;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for HealthAppPluginInfo(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for HealthAppPluginInfo(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthAppPluginInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthAppPluginInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthAppPluginInfo()
{
  return &type metadata for HealthAppPluginInfo;
}

uint64_t initializeBufferWithCopyOfBuffer for HealthAppPluginInfo.LoadError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BC738FCC + 4 * byte_1BC81BA90[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void destroy for HealthAppPluginInfo.LoadError(id *a1)
{
  uint64_t v2;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 3u:
    case 5u:
    case 7u:
    case 9u:
      swift_bridgeObjectRelease();
      break;
    case 1u:
      v2 = sub_1BC816E40();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      break;
    case 4u:
    case 6u:
    case 8u:

      break;
    default:
      return;
  }
}

void initializeWithCopy for HealthAppPluginInfo.LoadError()
{
  char *v0;

  v0 = (char *)sub_1BC739214 + 4 * byte_1BC81BAA4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1BC739214()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for HealthAppPluginInfo.LoadError(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BC6ED784(result, type metadata accessor for HealthAppPluginInfo.LoadError);
    v2 = (char *)&loc_1BC7393B4 + 4 * byte_1BC81BAAE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void *initializeWithTake for HealthAppPluginInfo.LoadError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BC816E40();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for HealthAppPluginInfo.LoadError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BC6ED784((uint64_t)a1, type metadata accessor for HealthAppPluginInfo.LoadError);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BC816E40();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthAppPluginInfo.LoadError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for HealthAppPluginInfo.LoadError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1BC73966C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BC73967C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC816E40();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for HealthAppPluginSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for HealthAppPluginSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthAppPluginSource.__allocating_init(bundleProvider:knownBundles:disabledBundleIdentifiers:allowedBundleIdentifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

_QWORD *initializeBufferWithCopyOfBuffer for HealthAppPluginSource.KnownBundle(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1BC816E40();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)v4 + v14) = *((_BYTE *)a2 + v14);
  }
  return v4;
}

uint64_t destroy for HealthAppPluginSource.KnownBundle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1BC816E40();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for HealthAppPluginSource.KnownBundle(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BC816E40();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  return a1;
}

_QWORD *assignWithCopy for HealthAppPluginSource.KnownBundle(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC816E40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_OWORD *initializeWithTake for HealthAppPluginSource.KnownBundle(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC816E40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  return a1;
}

_QWORD *assignWithTake for HealthAppPluginSource.KnownBundle(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BC816E40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthAppPluginSource.KnownBundle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC739B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC816E40();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for HealthAppPluginSource.KnownBundle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC739B8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BC816E40();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BC739C00()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC816E40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for HealthAppPluginSource.State(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for HealthAppPluginSource.State()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for HealthAppPluginSource.State(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for HealthAppPluginSource.State(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthAppPluginSource.State(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthAppPluginSource.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthAppPluginSource.State()
{
  return &type metadata for HealthAppPluginSource.State;
}

uint64_t sub_1BC739DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6ECA64(0, &qword_1ED6BA308, type metadata accessor for HealthAppPluginSource.KnownBundle, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC739E3C(uint64_t a1, uint64_t a2)
{
  return sub_1BC739F10(a1, a2, (void (*)(_QWORD))sub_1BC73A138);
}

uint64_t static RelevanceFeatureTag.name.getter()
{
  swift_getMetatypeMetadata();
  return sub_1BC817AF4();
}

uint64_t dispatch thunk of static RelevanceFeatureTag.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1BC739E7C(uint64_t a1, uint64_t a2)
{
  return sub_1BC739F10(a1, a2, (void (*)(_QWORD))sub_1BC73A100);
}

uint64_t dispatch thunk of RelevanceFeatureTag.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RelevanceFeatureTag.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of RelevanceFeatureTagEncodable.makeEncodedValue()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1BC739EA4(uint64_t a1, uint64_t a2)
{
  return sub_1BC739F10(a1, a2, (void (*)(_QWORD))sub_1BC73A0C8);
}

uint64_t sub_1BC739EB0(uint64_t a1, uint64_t a2)
{
  return sub_1BC739F10(a1, a2, (void (*)(_QWORD))sub_1BC73A090);
}

uint64_t sub_1BC739EBC(uint64_t a1, uint64_t a2)
{
  return sub_1BC739F10(a1, a2, (void (*)(_QWORD))sub_1BC73A058);
}

uint64_t sub_1BC739EC8(uint64_t a1, uint64_t a2)
{
  return sub_1BC739F10(a1, a2, (void (*)(_QWORD))sub_1BC73A020);
}

uint64_t sub_1BC739ED4(uint64_t a1, uint64_t a2)
{
  return sub_1BC739F10(a1, a2, (void (*)(_QWORD))sub_1BC739FE8);
}

uint64_t sub_1BC739EE0(uint64_t a1, uint64_t a2)
{
  return sub_1BC739F10(a1, a2, (void (*)(_QWORD))sub_1BC72441C);
}

uint64_t sub_1BC739EEC(uint64_t a1, uint64_t a2)
{
  return sub_1BC739F10(a1, a2, (void (*)(_QWORD))sub_1BC739FB0);
}

uint64_t sub_1BC739EF8(uint64_t a1, uint64_t a2)
{
  return sub_1BC739F10(a1, a2, (void (*)(_QWORD))sub_1BC739F78);
}

uint64_t sub_1BC739F04(uint64_t a1, uint64_t a2)
{
  return sub_1BC739F10(a1, a2, (void (*)(_QWORD))sub_1BC739F40);
}

uint64_t sub_1BC739F10(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  a3(0);
  return sub_1BC817AF4();
}

unint64_t sub_1BC739F40()
{
  unint64_t result;

  result = qword_1ED6B7DC0;
  if (!qword_1ED6B7DC0)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B7DC0);
  }
  return result;
}

unint64_t sub_1BC739F78()
{
  unint64_t result;

  result = qword_1EF45B518;
  if (!qword_1EF45B518)
  {
    type metadata accessor for DateRangeFeatureTag();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF45B518);
  }
  return result;
}

unint64_t sub_1BC739FB0()
{
  unint64_t result;

  result = qword_1ED6BB198;
  if (!qword_1ED6BB198)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BB198);
  }
  return result;
}

unint64_t sub_1BC739FE8()
{
  unint64_t result;

  result = qword_1EF45B520;
  if (!qword_1EF45B520)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF45B520);
  }
  return result;
}

unint64_t sub_1BC73A020()
{
  unint64_t result;

  result = qword_1EF45B528;
  if (!qword_1EF45B528)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF45B528);
  }
  return result;
}

unint64_t sub_1BC73A058()
{
  unint64_t result;

  result = qword_1EF45B530;
  if (!qword_1EF45B530)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF45B530);
  }
  return result;
}

unint64_t sub_1BC73A090()
{
  unint64_t result;

  result = qword_1ED6BB1B8;
  if (!qword_1ED6BB1B8)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BB1B8);
  }
  return result;
}

unint64_t sub_1BC73A0C8()
{
  unint64_t result;

  result = qword_1ED6BB1B0;
  if (!qword_1ED6BB1B0)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BB1B0);
  }
  return result;
}

unint64_t sub_1BC73A100()
{
  unint64_t result;

  result = qword_1ED6BB1A0;
  if (!qword_1ED6BB1A0)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BB1A0);
  }
  return result;
}

unint64_t sub_1BC73A138()
{
  unint64_t result;

  result = qword_1ED6BB1A8;
  if (!qword_1ED6BB1A8)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BB1A8);
  }
  return result;
}

id static Keyword.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1BC817AC4();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

id sub_1BC73A1D4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_sortOrder);
  *a2 = result;
  return result;
}

id sub_1BC73A204(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSortOrder_, *a1);
}

char *keypath_get_selector_identifier()
{
  return sel_identifier;
}

void sub_1BC73A224(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_identifier);
  v4 = sub_1BC817AE8();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1BC73A27C(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1BC817AC4();
  objc_msgSend(v2, sel_setIdentifier_, v3);

}

char *keypath_get_selector_feedItems()
{
  return sel_feedItems;
}

void sub_1BC73A2D8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*a1, sel_feedItems);
  type metadata accessor for FeedItem();
  sub_1BC6ED4B8();
  v4 = sub_1BC817D7C();

  *a2 = v4;
}

void sub_1BC73A348(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  type metadata accessor for FeedItem();
  sub_1BC6ED4B8();
  v3 = (id)sub_1BC817D70();
  objc_msgSend(v2, sel_setFeedItems_, v3);

}

uint64_t UserDefault.init(key:userDefaults:fallbackValue:isAppleInternalOnly:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v11;
  uint64_t result;

  *(_QWORD *)a7 = a1;
  *((_QWORD *)a7 + 1) = a2;
  *((_QWORD *)a7 + 2) = a3;
  v11 = type metadata accessor for UserDefault(0, a6, a3, a4);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(&a7[*(int *)(v11 + 32)], a4, a6);
  a7[*(int *)(v11 + 36)] = a5;
  return result;
}

uint64_t type metadata accessor for UserDefault(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserDefault);
}

uint64_t sub_1BC73A438()
{
  uint64_t result;

  result = sub_1BC73A454();
  qword_1ED6B9C60 = result;
  return result;
}

uint64_t sub_1BC73A454()
{
  id v0;
  void *v1;
  id v2;
  uint64_t result;

  sub_1BC817AE8();
  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
    return (uint64_t)v2;
  sub_1BC8182C8();
  swift_bridgeObjectRelease();
  sub_1BC817AE8();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  result = sub_1BC8184B4();
  __break(1u);
  return result;
}

id static NSUserDefaults.healthAppShared.getter()
{
  if (qword_1ED6B9C70 != -1)
    swift_once();
  return (id)qword_1ED6B9C60;
}

uint64_t UserDefault.key.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id UserDefault.userDefaults.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t sub_1BC73A5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  int v9;
  __int128 v11;
  _OWORD v12[2];

  v5 = *(void **)(v2 + 16);
  v6 = (void *)sub_1BC817AC4();
  v7 = objc_msgSend(v5, sel_objectForKey_, v6);

  if (v7)
  {
    sub_1BC818178();
    swift_unknownObjectRelease();
    sub_1BC6EFBDC(&v11, v12);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_1BC6EF7F8();
  v8 = *(_QWORD *)(a1 + 16);
  v9 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, v9 ^ 1u, 1, v8);
}

uint64_t UserDefault.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v6 + 16);
  v10 = sub_1BC818130();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v16 - v12;
  if (*(_BYTE *)(v2 + *(int *)(a1 + 36)) == 1
    && (objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall) & 1) == 0)
  {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, v2 + *(int *)(a1 + 32), v9);
  }
  sub_1BC73A5EC(a1, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, a1);
  v14 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v9) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(a2, &v8[*(int *)(a1 + 32)], v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v13, v9);
  }
}

uint64_t UserDefault.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_1BC73AB70(a1, a2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(a1);
}

void (*UserDefault.wrappedValue.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  UserDefault.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_1BC73A930;
}

void sub_1BC73A930(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[4];
  v4 = (void *)(*a1)[5];
  v5 = (*a1)[2];
  v6 = (*a1)[3];
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    sub_1BC73AB70((uint64_t)v3, v7);
    v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
  }
  else
  {
    sub_1BC73AB70((*a1)[5], v7);
    v8 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v8(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

void sub_1BC73A9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = sub_1BC818130();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - v7;
  v9 = sub_1BC818124();
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
  swift_unknownObjectRelease();

  v11 = *(void **)(v2 + 16);
  if ((id)v9 == v10)
  {
    v16 = (id)sub_1BC817AC4();
    objc_msgSend(v11, sel_setURL_forKey_, 0, v16);

  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
    v12 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v4) == 1)
    {
      v13 = 0;
    }
    else
    {
      v13 = sub_1BC818688();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v4);
    }
    v14 = (void *)sub_1BC817AC4();
    objc_msgSend(v11, sel_setObject_forKey_, v13, v14);
    swift_unknownObjectRelease();

  }
}

uint64_t sub_1BC73AB70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = sub_1BC818130();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - v7;
  v9 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v11 - v7, a1, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v4);
  sub_1BC73A9D8((uint64_t)v8, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BC73AC34@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for UserDefault(0, *(_QWORD *)(a2 + a1 - 8), a2, a3);
  return UserDefault.wrappedValue.getter(v5, a4);
}

uint64_t sub_1BC73AC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = type metadata accessor for UserDefault(0, *(_QWORD *)(a4 + a3 - 8), a3, a4);
  return sub_1BC73AB70(a1, v5);
}

uint64_t sub_1BC73ACA8()
{
  return 8;
}

_QWORD *sub_1BC73ACB4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BC73ACC0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC73ACC8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BC73AD54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void **v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  id v18;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || v7 + ((v6 + 24) & (unint64_t)~v6) + 1 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    v12 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = *v13;
    *v12 = *v13;
    v15 = ((unint64_t)v12 + v6 + 8) & ~v6;
    v16 = ((unint64_t)v13 + v6 + 8) & ~v6;
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v18 = v14;
    v17(v15, v16, v4);
    *(_BYTE *)(v15 + v7) = *(_BYTE *)(v16 + v7);
  }
  return a1;
}

uint64_t sub_1BC73AE48(uint64_t a1, uint64_t a2)
{
  id *v4;

  swift_bridgeObjectRelease();
  v4 = (id *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);

  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((unint64_t)v4 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1BC73AE9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  void **v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = *v6;
  *v5 = *v6;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = ((unint64_t)v5 + v10 + 8) & ~v10;
  v12 = ((unint64_t)v6 + v10 + 8) & ~v10;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  swift_bridgeObjectRetain();
  v14 = v7;
  v13(v11, v12, v8);
  *(_BYTE *)(v11 + *(_QWORD *)(v9 + 64)) = *(_BYTE *)(v12 + *(_QWORD *)(v9 + 64));
  return a1;
}

_QWORD *sub_1BC73AF3C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void **v6;
  void **v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void **)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = *v7;
  v9 = *v6;
  *v6 = *v7;
  v10 = v8;

  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v6 + v12 + 8) & ~v12;
  v14 = ((unint64_t)v7 + v12 + 8) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v13, v14);
  *(_BYTE *)(v13 + *(_QWORD *)(v11 + 64)) = *(_BYTE *)(v14 + *(_QWORD *)(v11 + 64));
  return a1;
}

_OWORD *sub_1BC73AFF4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)v4 + v7 + 8) & ~v7;
  v9 = ((unint64_t)v5 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v8, v9);
  *(_BYTE *)(v8 + *(_QWORD *)(v6 + 64)) = *(_BYTE *)(v9 + *(_QWORD *)(v6 + 64));
  return a1;
}

_QWORD *sub_1BC73B078(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (void **)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v7;
  *v7 = *v8;

  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v7 + v11 + 8) & ~v11;
  v13 = ((unint64_t)v8 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v12, v13);
  *(_BYTE *)(v12 + *(_QWORD *)(v10 + 64)) = *(_BYTE *)(v13 + *(_QWORD *)(v10 + 64));
  return a1;
}

uint64_t sub_1BC73B11C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = *(_QWORD *)(v4 + 64) + ((v7 + 24) & ~v7) + 1;
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BC73B1F4 + 4 * byte_1BC81BCA0[(v9 - 1)]))();
}

void sub_1BC73B26C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64)
     + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + 1;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if (*(_DWORD *)(v5 + 64) + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~*(unsigned __int8 *)(v5 + 80)) != -1)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

id Profile.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id Profile.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for Profile();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for Profile()
{
  return objc_opt_self();
}

id Profile.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Profile();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t static HKSharedSummaryTransaction.dateCommittedMetadataKey.getter()
{
  return 0xD000000000000032;
}

unint64_t static HKSharedSummaryTransaction.bundleVersionMetadataKey.getter()
{
  return 0xD000000000000032;
}

unint64_t static HKSharedSummaryTransaction.buildVersionMetadataKey.getter()
{
  return 0xD000000000000031;
}

unint64_t static HKSharedSummaryTransaction.hasPairedDeviceDataMetadataKey.getter()
{
  return 0xD000000000000038;
}

unint64_t static HKSharedSummaryTransaction.healthappdManagedTransactionVersionMetadataKey.getter()
{
  return 0xD000000000000048;
}

uint64_t sub_1BC73B654()
{
  if (qword_1ED6B9C18 != -1)
    swift_once();
  qword_1ED6B96A8 = qword_1ED6B9C00;
  unk_1ED6B96B0 = unk_1ED6B9C08;
  return swift_bridgeObjectRetain();
}

uint64_t static HKSharedSummaryTransaction.currentHealthappdManagedTransactionVersionMetadata.getter()
{
  uint64_t v0;

  if (qword_1ED6B96B8 != -1)
    swift_once();
  v0 = qword_1ED6B96A8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t HKSharedSummaryTransaction.dateCommitted.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  int v8;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  v3 = objc_msgSend(v1, sel_metadata);
  v4 = sub_1BC817A34();

  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1BC706608(0xD000000000000032, 0x80000001BC8275D0), (v6 & 1) != 0))
  {
    sub_1BC6E1A84(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v11);
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v12 + 1))
    {
      v7 = sub_1BC816EF4();
      v8 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, v8 ^ 1u, 1, v7);
    }
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
    swift_bridgeObjectRelease();
  }
  sub_1BC6EF7BC((uint64_t)&v11);
  v10 = sub_1BC816EF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
}

BOOL HKSharedSummaryTransaction.isCommitted.getter()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t v7;

  v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6B9BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - v2;
  HKSharedSummaryTransaction.dateCommitted.getter((uint64_t)&v7 - v2);
  v4 = sub_1BC816EF4();
  v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1;
  sub_1BC715030((uint64_t)v3, (unint64_t *)&qword_1ED6B9BE8, v0);
  return v5;
}

double static HKSharedSummaryTransaction.maximumPreferredTransactionAgeInDays.getter()
{
  return 3.0;
}

uint64_t sub_1BC73B8F4()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  unsigned __int8 v6;
  __int128 v7;
  __int128 v8;

  v1 = objc_msgSend(v0, sel_metadata);
  v2 = sub_1BC817A34();

  if (!*(_QWORD *)(v2 + 16) || (v3 = sub_1BC706608(0xD000000000000038, 0x80000001BC827690), (v4 & 1) == 0))
  {
    v7 = 0u;
    v8 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1BC6E1A84(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v7);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v8 + 1))
  {
LABEL_8:
    sub_1BC6EF7BC((uint64_t)&v7);
    return 2;
  }
  if (swift_dynamicCast())
    return v6;
  else
    return 2;
}

uint64_t sub_1BC73B9F4()
{
  return sub_1BC73BA10(0xD000000000000048, 0x80000001BC8276D0);
}

uint64_t sub_1BC73BA10(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  v5 = objc_msgSend(v2, sel_metadata);
  v6 = sub_1BC817A34();

  if (!*(_QWORD *)(v6 + 16) || (v7 = sub_1BC706608(a1, a2), (v8 & 1) == 0))
  {
    v11 = 0u;
    v12 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1BC6E1A84(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v12 + 1))
  {
LABEL_9:
    sub_1BC6EF7BC((uint64_t)&v11);
    return 0;
  }
  if (swift_dynamicCast())
    return v10;
  else
    return 0;
}

uint64_t HKSharedSummaryTransaction.isUsableHealthappdManagedTransaction.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v4;

  v1 = sub_1BC73BA10(0xD000000000000048, 0x80000001BC8276D0);
  v2 = v0;
  if (qword_1ED6B96B8 != -1)
  {
    swift_once();
    if (v2)
      goto LABEL_3;
LABEL_11:
    v4 = 0;
    return v4 & 1;
  }
  if (!v0)
    goto LABEL_11;
LABEL_3:
  if (v1 == qword_1ED6B96A8 && v2 == unk_1ED6B96B0)
    v4 = 1;
  else
    v4 = sub_1BC818694();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t static HKSharedSummaryTransaction.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v4 = sub_1BC816F3C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - v9;
  v11 = objc_msgSend(a1, sel_UUID);
  sub_1BC816F24();

  v12 = objc_msgSend(a2, sel_UUID);
  sub_1BC816F24();

  LOBYTE(v12) = sub_1BC816F18();
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  v13(v10, v4);
  return v12 & 1;
}

uint64_t sub_1BC73BCD4(void **a1, void **a2)
{
  return _sSo26HKSharedSummaryTransactionC14HealthPlatformE1loiySbAB_ABtFZ_0(*a1, *a2);
}

id Sequence<>.selectPreferredTransaction(calendar:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  _BYTE v29[16];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[2];

  v3 = v2;
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16);
  v10(&v29[-v11], v3, a2);
  v30 = a1;
  v12 = sub_1BC817BD8();
  if (!(v12 >> 62))
  {
    if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v28 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  if (!v28)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    v10(v8, v3, a2);
    sub_1BC73C978();
    v12 = sub_1BC817D10();
  }
LABEL_4:
  v13 = sub_1BC73C36C(v12);
  swift_bridgeObjectRelease();
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v14 = sub_1BC817590();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED6BB5D0);
  v15 = v13;
  v16 = sub_1BC81756C();
  v17 = sub_1BC817E9C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v31 = (uint64_t)v13;
    v32[0] = v19;
    *(_DWORD *)v18 = 136315394;
    sub_1BC6ECA64(0, &qword_1ED6B85C8, (uint64_t (*)(uint64_t))sub_1BC73C978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v20 = v15;
    v21 = sub_1BC817B00();
    v31 = sub_1BC6E14D8(v21, v22, v32);
    sub_1BC818148();

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    if (v13)
    {
      v23 = objc_msgSend(v20, sel_metadata);
      v24 = sub_1BC817A34();

    }
    else
    {
      v24 = 0;
    }
    v31 = v24;
    sub_1BC6ECA64(0, &qword_1ED6B83A0, (uint64_t (*)(uint64_t))sub_1BC73C9B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v25 = sub_1BC817AF4();
    v31 = sub_1BC6E14D8(v25, v26, v32);
    sub_1BC818148();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v16, v17, "[Transaction] Selecting transaction %s. Transaction metadata: %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v19, -1, -1);
    MEMORY[0x1BCCF5BA4](v18, -1, -1);

  }
  else
  {

  }
  return v13;
}

BOOL sub_1BC73C0A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a2;
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6B9BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - v4;
  v26 = sub_1BC816EF4();
  v6 = *(_QWORD *)(v26 - 8);
  v7 = MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - v9;
  v29 = sub_1BC816D20();
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a1;
  sub_1BC6ECA64(0, &qword_1ED6B8700, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = sub_1BC816FFC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC81A0F0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x1E0CB1140], v13);
  sub_1BC731394(v16);
  swift_setDeallocating();
  v17 = v26;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  HKSharedSummaryTransaction.dateCommitted.getter((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v17) == 1)
  {
    sub_1BC816E94();
    sub_1BC715030((uint64_t)v5, (unint64_t *)&qword_1ED6B9BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v5, v17);
  }
  v18 = v28;
  sub_1BC816EE8();
  sub_1BC816FD8();
  swift_bridgeObjectRelease();
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v18, v17);
  v19(v10, v17);
  v20 = sub_1BC816D14();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v29);
  return (v22 & 1) == 0 && v20 < 4;
}

id sub_1BC73C36C(unint64_t a1)
{
  uint64_t v2;
  id result;
  unint64_t v4;
  void *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  char v11;
  void *v12;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  result = (id)sub_1BC8184E4();
  v2 = (uint64_t)result;
  if (!result)
    goto LABEL_23;
LABEL_3:
  v4 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    result = (id)MEMORY[0x1BCCF4FB0](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    result = *(id *)(a1 + 32);
  }
  v5 = result;
  v6 = v2 - 1;
  if (v2 == 1)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return v5;
  }
  if (v2 < 2)
    goto LABEL_27;
  if (v4 || (v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10), v7 >= 2) && v6 < v7)
  {
    v8 = 0;
    do
    {
      if (v4)
        v9 = (id)MEMORY[0x1BCCF4FB0](v8 + 1, a1);
      else
        v9 = *(id *)(a1 + 8 * v8 + 40);
      v10 = v9;
      v11 = _sSo26HKSharedSummaryTransactionC14HealthPlatformE1loiySbAB_ABtFZ_0(v5, v9);
      if ((v11 & 1) != 0)
        v12 = v5;
      else
        v12 = v10;
      if ((v11 & 1) != 0)
        v5 = v10;

      ++v8;
    }
    while (v6 != v8);
    goto LABEL_7;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _sSo26HKSharedSummaryTransactionC14HealthPlatformE1loiySbAB_ABtFZ_0(void *a1, void *a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char v28;
  void *v29;
  _BOOL4 v30;
  int v31;
  char v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  double v35;
  double v36;
  void (*v37)(char *, uint64_t);
  double v38;
  char *v39;
  double v40;
  double v41;
  double v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v55;
  char *v56;
  char *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v58 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6B9BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v57 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v55 - v7;
  v9 = sub_1BC816EF4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v56 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v55 - v13;
  sub_1BC6ECA64(0, &qword_1ED6B5CA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], v3);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v55 - v16;
  v18 = a1;
  v19 = sub_1BC73BA10(0xD000000000000032, 0x80000001BC827610);
  if (v20)
  {
    v21 = v19;
    v22 = v20;
    v23 = sub_1BC73BA10(0xD000000000000032, 0x80000001BC827610);
    if (v24)
    {
      v25 = v23;
      v26 = v24;
      if ((v21 != v23 || v22 != v24) && (sub_1BC818694() & 1) == 0)
      {
        v61 = v21;
        v62 = v22;
        v59 = v25;
        v60 = v26;
        v51 = sub_1BC816FCC();
        v52 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38];
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v17, 1, 1, v51);
        sub_1BC738B38();
        v53 = sub_1BC81816C();
        sub_1BC715030((uint64_t)v17, &qword_1ED6B5CA8, v52);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v32 = v53 == -1;
        return v32 & 1;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  v27 = v18;
  v28 = sub_1BC73B8F4();
  v29 = v58;
  if (v28 == 2
    || (v30 = v28 == 0, v31 = sub_1BC73B8F4(), v31 == 2)
    || (v32 = v31, ((v30 ^ v31) & 1) != 0))
  {
    HKSharedSummaryTransaction.dateCommitted.getter((uint64_t)v8);
    v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v33(v8, 1, v9) == 1)
    {
      sub_1BC816E94();
      sub_1BC715030((uint64_t)v8, (unint64_t *)&qword_1ED6B9BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v8, v9);
    }
    v34 = (uint64_t)v57;
    sub_1BC816E88();
    v36 = v35;
    v37 = *(void (**)(char *, uint64_t))(v10 + 8);
    v37(v14, v9);
    v38 = round(v36 / 259200.0);
    HKSharedSummaryTransaction.dateCommitted.getter(v34);
    if (v33((char *)v34, 1, v9) == 1)
    {
      v39 = v56;
      sub_1BC816E94();
      sub_1BC715030(v34, (unint64_t *)&qword_1ED6B9BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    }
    else
    {
      v39 = v56;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v56, v34, v9);
    }
    sub_1BC816E88();
    v41 = v40;
    v37(v39, v9);
    v42 = round(v41 / 259200.0);
    if (v38 == v42)
    {
      v43 = objc_msgSend(v27, sel_sourceDeviceIdentifier);
      v44 = sub_1BC817AE8();
      v46 = v45;

      v47 = objc_msgSend(v29, sel_sourceDeviceIdentifier);
      v48 = sub_1BC817AE8();
      v50 = v49;

      if (v44 == v48 && v46 == v50)
      {
        swift_bridgeObjectRelease_n();
        v32 = 0;
      }
      else
      {
        v32 = sub_1BC818694();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v32 = v38 < v42;
    }
  }
  return v32 & 1;
}

BOOL sub_1BC73C95C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BC73C0A0(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1BC73C978()
{
  unint64_t result;

  result = qword_1ED6B85C0;
  if (!qword_1ED6B85C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B85C0);
  }
  return result;
}

void sub_1BC73C9B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8398)
  {
    v0 = sub_1BC817A64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8398);
  }
}

unint64_t sub_1BC73CA20()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EF45B538;
  if (!qword_1EF45B538)
  {
    v1 = sub_1BC73C978();
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEFD00], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45B538);
  }
  return result;
}

uint64_t sub_1BC73CA68(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[32];
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1BC6E8A7C(0, v2, 0);
  v3 = v12;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_1BC6E1A84(i, (uint64_t)v11);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC6E8A7C(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v12;
      }
      v6 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BC6E8A7C(v5 > 1, v6 + 1, 1);
        v3 = v12;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      v7 = v3 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      if (!--v2)
        return v3;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1BC73CBAC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t j;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = a1;
  v9 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_1BC81837C();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x1BCCF4FB0](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1BC818358();
        sub_1BC818388();
        sub_1BC818394();
        sub_1BC818364();
        if (v4 == v2)
          return v9;
      }
      __break(1u);
    }
    else
    {
      for (j = 0; ; ++j)
      {
        v6 = j + 1;
        if (__OFADD__(j, 1))
          break;
        objc_opt_self();
        v7 = swift_dynamicCastObjCClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v7;
        swift_unknownObjectRetain();
        sub_1BC818358();
        sub_1BC818388();
        sub_1BC818394();
        sub_1BC818364();
        if (v6 == v2)
          return v9;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1BC8184E4();
    swift_bridgeObjectRelease();
    sub_1BC81837C();
    swift_bridgeObjectRetain();
    v2 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
  }
  return v9;
}

id sub_1BC73CD94()
{
  return sub_1BC73D1A0((SEL *)&selRef_viewContext);
}

uint64_t sub_1BC73CDA0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  void **v2;
  os_unfair_lock_s *v3;
  uint64_t v5;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = (void **)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1BC73CE04(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

id sub_1BC73CE04@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id v4;
  void *v6;
  id v7;
  id v8;

  v3 = *a1;
  if (*a1)
  {
    v4 = *a1;
  }
  else
  {
    v6 = (void *)sub_1BC73CF38();
    v7 = objc_msgSend(v6, sel_newBackgroundContext);

    objc_msgSend(v7, sel_setAutomaticallyMergesChangesFromParent_, 1);
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97BA8]), sel_initWithMergeType_, 1);
    objc_msgSend(v7, sel_setMergePolicy_, v8);

    *a1 = v7;
    v4 = v7;
    v3 = 0;
  }
  *a2 = v4;
  return v3;
}

void sub_1BC73CED0(id *a1, uint64_t a2)
{
  uint64_t v2;
  id *v3;
  os_unfair_lock_s *v4;
  id v5;

  v2 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v3 = (id *)(v2 + 16);
  v4 = (os_unfair_lock_s *)(v2 + 24);
  v5 = *a1;
  os_unfair_lock_lock(v4);
  sub_1BC73E0B0(v3);
  os_unfair_lock_unlock(v4);

}

uint64_t sub_1BC73CF38()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  void **v2;
  os_unfair_lock_s *v3;
  uint64_t v5;

  v1 = *(os_unfair_lock_s **)(v0 + 24);
  v2 = (void **)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1BC73CF9C(v2, v0, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

id sub_1BC73CF9C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v4;
  id v5;
  id v7;

  v4 = *a1;
  if (*a1)
  {
    v5 = *a1;
  }
  else
  {
    v7 = sub_1BC73DD70(*(void **)(a2 + 32));
    *a1 = v7;
    v5 = v7;
    v4 = 0;
  }
  *a3 = v5;
  return v4;
}

void sub_1BC73CFF8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(v1 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));

  *(_QWORD *)(v3 + 16) = a1;
  v4 = a1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));

}

void (*sub_1BC73D054(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  void **v4;
  os_unfair_lock_s *v5;
  uint64_t v7;

  v3 = *(os_unfair_lock_s **)(v1 + 24);
  a1[1] = v3;
  v4 = (void **)&v3[4];
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1BC73CF9C(v4, v1, &v7);
  os_unfair_lock_unlock(v5);
  *a1 = v7;
  return sub_1BC73D0D8;
}

void sub_1BC73D0D8(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    v4 = v2;
    os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));

    *(_QWORD *)(v3 + 16) = v4;
    v6 = v4;
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));

  }
  else
  {
    os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));

    *(_QWORD *)(v3 + 16) = v2;
    v5 = v2;
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));

  }
}

id MemoryHealthExperienceStore.persistentStoreDescription.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

id sub_1BC73D194()
{
  return sub_1BC73D1A0((SEL *)&selRef_persistentStoreCoordinator);
}

id sub_1BC73D1A0(SEL *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  void **v4;
  os_unfair_lock_s *v5;
  id v6;
  id v7;
  id v9;

  v3 = *(os_unfair_lock_s **)(v1 + 24);
  v4 = (void **)&v3[4];
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1BC73CF9C(v4, v1, &v9);
  os_unfair_lock_unlock(v5);
  v6 = v9;
  v7 = objc_msgSend(v9, *a1);

  return v7;
}

uint64_t sub_1BC73D230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  unint64_t v6;

  v0 = sub_1BC816F3C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = 0;
  v6 = 0xE000000000000000;
  sub_1BC8182C8();
  swift_bridgeObjectRelease();
  v5 = 0x6C756E2F7665642FLL;
  v6 = 0xEA00000000002F6CLL;
  sub_1BC816F30();
  sub_1BC816F00();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC816DA4();
  return swift_bridgeObjectRelease();
}

uint64_t MemoryHealthExperienceStore.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  MemoryHealthExperienceStore.init()();
  return v0;
}

_QWORD *MemoryHealthExperienceStore.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v12;

  v1 = v0;
  v2 = sub_1BC816E40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC73D4BC(0, &qword_1EF45B540, (unint64_t *)&unk_1EF45B548, &qword_1ED6BA4F0);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  v1[2] = v6;
  sub_1BC73D4BC(0, &qword_1EF45B558, &qword_1EF45B560, (unint64_t *)&unk_1EF45B568);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 24) = 0;
  *(_QWORD *)(v7 + 16) = 0;
  v1[3] = v7;
  sub_1BC73D230();
  v8 = objc_allocWithZone(MEMORY[0x1E0C97C08]);
  v9 = (void *)sub_1BC816DBC();
  v10 = objc_msgSend(v8, sel_initWithURL_, v9);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v1[4] = v10;
  return v1;
}

void sub_1BC73D4BC(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC73D52C(255, a3, a4);
    type metadata accessor for os_unfair_lock_s(255);
    v5 = sub_1BC818340();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC73D52C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC6ED7C0(255, a3);
    v4 = sub_1BC818130();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC73D580()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;

  v2 = sub_1BC73DD70(*(void **)(v0 + 32));
  v3 = *(_QWORD *)(v0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));

  *(_QWORD *)(v3 + 16) = v2;
  v4 = v2;
  if (v1)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
    __break(1u);
  }
  else
  {
    v5 = v4;
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));

  }
}

void sub_1BC73D5F4(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  id v4;

  if (a2)
  {
    v2 = (void *)sub_1BC816D50();
    sub_1BC8182C8();
    swift_bridgeObjectRelease();
    v3 = objc_msgSend(v2, sel_description);
    sub_1BC817AE8();

    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    v4 = objc_msgSend(v2, sel_userInfo);
    sub_1BC817A34();

    sub_1BC817A40();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC8184B4();
    __break(1u);
  }
}

void sub_1BC73D764(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

uint64_t sub_1BC73D7D8()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  os_unfair_lock_s *v4;
  void **v5;
  os_unfair_lock_s *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t result;
  _QWORD aBlock[7];

  aBlock[0] = type metadata accessor for FeedItem();
  sub_1BC6ECD00();
  sub_1BC817AF4();
  v1 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v2 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  objc_msgSend(v3, sel_setIncludesPropertyValues_, 0);
  v4 = *(os_unfair_lock_s **)(v0 + 16);
  v5 = (void **)&v4[4];
  v6 = v4 + 6;
  os_unfair_lock_lock(v4 + 6);
  sub_1BC73CE04(v5, aBlock);
  os_unfair_lock_unlock(v6);
  v7 = (void *)aBlock[0];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v0;
  *(_QWORD *)(v8 + 24) = v3;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1BC73DFC0;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1BC6EF990;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC6E0C04;
  aBlock[3] = &block_descriptor_5;
  v10 = _Block_copy(aBlock);
  swift_retain();
  v11 = v3;
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_performBlockAndWait_, v10);

  _Block_release(v10);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v11 & 1) != 0)
    __break(1u);
  return result;
}

id sub_1BC73D9D4()
{
  void *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  unsigned int v10;
  id result;
  id v12;
  void *v13;
  id v14[3];

  v14[2] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (void *)sub_1BC73CDA0();
  sub_1BC73E0EC();
  v1 = sub_1BC8180AC();

  v2 = sub_1BC73CBAC(v1);
  swift_bridgeObjectRelease();
  if (v2)
    v3 = v2;
  else
    v3 = MEMORY[0x1E0DEE9D8];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    if (!v4)
      goto LABEL_13;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      goto LABEL_13;
  }
  if (v4 < 1)
    __break(1u);
  v5 = 0;
  do
  {
    if ((v3 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x1BCCF4FB0](v5, v3);
    else
      v6 = *(id *)(v3 + 8 * v5 + 32);
    v7 = v6;
    ++v5;
    v8 = (void *)sub_1BC73CDA0();
    objc_msgSend(v8, sel_deleteObject_, v7);

  }
  while (v4 != v5);
LABEL_13:
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1BC73CDA0();
  v14[0] = 0;
  v10 = objc_msgSend(v9, sel_save_, v14);

  if (v10)
    return v14[0];
  v12 = v14[0];
  v13 = (void *)sub_1BC816D5C();

  swift_willThrow();
  result = (id)sub_1BC8184B4();
  __break(1u);
  return result;
}

uint64_t MemoryHealthExperienceStore.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return v0;
}

uint64_t MemoryHealthExperienceStore.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

id sub_1BC73DC60()
{
  return sub_1BC73CD94();
}

uint64_t sub_1BC73DC80()
{
  return sub_1BC73CDA0();
}

uint64_t sub_1BC73DCA0()
{
  return sub_1BC73CF38();
}

id sub_1BC73DCC0()
{
  return sub_1BC73D194();
}

id sub_1BC73DCE0()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 32);
}

void sub_1BC73DCEC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  os_unfair_lock_s *v4;
  id *v5;
  os_unfair_lock_s *v6;

  v2 = *v0;
  v3 = sub_1BC73DD70(*(void **)(v2 + 32));
  v4 = *(os_unfair_lock_s **)(v2 + 24);
  v5 = (id *)&v4[4];
  v6 = v4 + 6;
  os_unfair_lock_lock(v4 + 6);
  sub_1BC73E0B0(v5);
  os_unfair_lock_unlock(v6);
  if (v1)
    __break(1u);
  else

}

id sub_1BC73DD70(void *a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  _QWORD v15[6];

  if (qword_1ED6B9C38 != -1)
    swift_once();
  v2 = (void *)qword_1ED6C1BE0;
  v3 = objc_allocWithZone(MEMORY[0x1E0C97BC8]);
  v4 = v2;
  v5 = (void *)sub_1BC817AC4();
  v6 = objc_msgSend(v3, sel_initWithName_managedObjectModel_, v5, v4);

  sub_1BC6F080C();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC81A120;
  *(_QWORD *)(v7 + 32) = a1;
  v15[0] = v7;
  sub_1BC817C74();
  sub_1BC6ED7C0(0, &qword_1ED6BA4F8);
  v8 = a1;
  v9 = (void *)sub_1BC817C50();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setPersistentStoreDescriptions_, v9, v15[0]);

  v15[4] = sub_1BC73D5F4;
  v15[5] = 0;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1BC73D764;
  v15[3] = &block_descriptor_15;
  v10 = _Block_copy(v15);
  objc_msgSend(v6, sel_loadPersistentStoresWithCompletionHandler_, v10);
  _Block_release(v10);
  v11 = objc_msgSend(v6, sel_viewContext);
  objc_msgSend(v11, sel_setAutomaticallyMergesChangesFromParent_, 1);

  v12 = objc_msgSend(v6, sel_viewContext);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97BA8]), sel_initWithMergeType_, 1);
  objc_msgSend(v12, sel_setMergePolicy_, v13);

  return v6;
}

uint64_t sub_1BC73DF94()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

id sub_1BC73DFC0()
{
  return sub_1BC73D9D4();
}

uint64_t sub_1BC73DFC8()
{
  return swift_deallocObject();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_1BC73DFE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC73CF38();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for MemoryHealthExperienceStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for MemoryHealthExperienceStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.viewContext.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.sharedBackgroundContext.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.persistentContainer.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.persistentContainer.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.persistentContainer.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.persistentStoreCoordinator.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.initPersistentContainer()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.deleteAllFeedItems()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

id sub_1BC73E0B0(id *a1)
{
  uint64_t v1;
  id v4;

  v4 = *(id *)(v1 + 16);

  *a1 = v4;
  return v4;
}

unint64_t sub_1BC73E0EC()
{
  unint64_t result;

  result = qword_1EF45C590;
  if (!qword_1EF45C590)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF45C590);
  }
  return result;
}

uint64_t static StorageLocations.feedItemPluginsDirectory.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v0 = sub_1BC816D74();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC816E40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static StorageLocations.rootDirectory.getter();
  v9[0] = 0xD000000000000026;
  v9[1] = 0x80000001BC826E30;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAFD60], v0);
  sub_1BC738B38();
  sub_1BC816E34();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_1BC73E280()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  qword_1ED6B7D48 = (uint64_t)result;
  return result;
}

id static StorageLocations.fileManager.getter()
{
  if (qword_1ED6B7D50 != -1)
    swift_once();
  return (id)qword_1ED6B7D48;
}

uint64_t static StorageLocations.homeMobileDirectory.getter()
{
  id v0;
  id v1;
  uint64_t v2;
  char v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_environment);

  v2 = sub_1BC817A34();
  if (*(_QWORD *)(v2 + 16) && (sub_1BC706608(0xD000000000000024, 0x80000001BC8278A0), (v3 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BC816D98();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_1BC816D98();
  }
}

uint64_t static StorageLocations.mobileLibraryHealthDirectory.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1BC816E40();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static StorageLocations.homeMobileDirectory.getter();
  sub_1BC816DC8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t static StorageLocations.clientDirectory.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v9;

  v0 = sub_1BC816E40();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - v5;
  static StorageLocations.homeMobileDirectory.getter();
  sub_1BC816DC8();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  sub_1BC816DC8();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t static StorageLocations.rootDirectory.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BC71A0E8();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BC816D74();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v8 = objc_msgSend(v7, sel_environment);

  v9 = sub_1BC817A34();
  if (*(_QWORD *)(v9 + 16) && (sub_1BC706608(0x4F54414C554D4953, 0xEE00544F4F525F52), (v10 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CAFD60], v3);
    v11 = sub_1BC816E40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v2, 1, 1, v11);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CAFD60], v3);
    v12 = sub_1BC816E40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v2, 1, 1, v12);
  }
  return sub_1BC816E28();
}

uint64_t StorageLocations.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t StorageLocations.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StorageLocations()
{
  return objc_opt_self();
}

uint64_t method lookup function for StorageLocations()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LegacyFeedItemGenerationOperation.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LegacyFeedItemGenerationOperation.init(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

unint64_t static Logger.healthSubsystem.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_1BC73E824(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6B8AD8);
}

uint64_t LogCategory.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BC73E880 + 4 * byte_1BC81BE8C[*v0]))(0xD000000000000014, 0x80000001BC824C90);
}

uint64_t sub_1BC73E880()
{
  return 0x636974796C616E61;
}

uint64_t sub_1BC73E89C()
{
  return 0x6E6F6D656164;
}

uint64_t sub_1BC73E8B0()
{
  return 0x72756F5361746164;
}

uint64_t sub_1BC73E8D0()
{
  return 0x7375636F66;
}

uint64_t sub_1BC73E8E4()
{
  return 0x6C6172656E6567;
}

uint64_t sub_1BC73E8FC()
{
  return 0x69746172656E6567;
}

uint64_t sub_1BC73E91C()
{
  return 0x727473656863726FLL;
}

uint64_t sub_1BC73E940()
{
  return 0x6C616E6F73726570;
}

uint64_t sub_1BC73E964()
{
  return 0x6E6967756C70;
}

uint64_t sub_1BC73E978()
{
  return 0x686372616573;
}

uint64_t sub_1BC73E98C()
{
  return 2003134838;
}

uint64_t sub_1BC73E99C()
{
  return 6516856;
}

uint64_t sub_1BC73E9AC()
{
  return 0x79735F64756F6C63;
}

uint64_t sub_1BC73E9C8()
{
  return 0x725F68746C616568;
}

uint64_t sub_1BC73E9EC()
{
  return 0x676E6972616568;
}

uint64_t sub_1BC73EA04()
{
  return 0x7472616568;
}

uint64_t sub_1BC73EA18()
{
  return 0x6E6F6D616E6E6963;
}

uint64_t sub_1BC73EA30()
{
  return 0x697461636964656DLL;
}

uint64_t sub_1BC73EA50()
{
  return 0x6172656D6163;
}

unint64_t sub_1BC73EA64()
{
  return 0xD000000000000010;
}

uint64_t sub_1BC73EA80()
{
  return 0x685F6C61746E656DLL;
}

uint64_t sub_1BC73EAA4()
{
  return 0x656C69666F7270;
}

uint64_t sub_1BC73EABC()
{
  return 0x7461726970736572;
}

uint64_t sub_1BC73EADC()
{
  return 0x7065656C73;
}

uint64_t static Logger.advertisableFeatures.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6B8AF8, (uint64_t)qword_1ED6B8AD8, a1);
}

uint64_t sub_1BC73EB0C(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6BB240);
}

uint64_t static Logger.analytics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6BB200, (uint64_t)qword_1ED6BB240, a1);
}

uint64_t sub_1BC73EB4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1BC817590();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1BC73EBB4(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6BB308);
}

uint64_t static Logger.dataSource.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6BB2D8, (uint64_t)qword_1ED6BB308, a1);
}

uint64_t sub_1BC73EBF4(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6BB5D0);
}

uint64_t static Logger.general.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6BB5B0, (uint64_t)qword_1ED6BB5D0, a1);
}

uint64_t sub_1BC73EC30(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6BB320);
}

uint64_t static Logger.generation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6BB338, (uint64_t)qword_1ED6BB320, a1);
}

uint64_t sub_1BC73EC70(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6B8018);
}

uint64_t static Logger.orchestration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6B8030, (uint64_t)qword_1ED6B8018, a1);
}

uint64_t sub_1BC73ECB8(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6BB5B8);
}

uint64_t static Logger.personalization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6BB5A8, (uint64_t)qword_1ED6BB5B8, a1);
}

uint64_t sub_1BC73ED00(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6BB340);
}

uint64_t static Logger.plugin.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6BB2E0, (uint64_t)qword_1ED6BB340, a1);
}

uint64_t sub_1BC73ED38(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1EF45B668);
}

uint64_t static Logger.search.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1EF45ABD8, (uint64_t)qword_1EF45B668, a1);
}

uint64_t sub_1BC73ED70(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6BACC0);
}

uint64_t static Logger.view.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6BACE0, (uint64_t)qword_1ED6BACC0, a1);
}

uint64_t sub_1BC73EDA4(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6B97A8);
}

uint64_t static Logger.xpc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(qword_1ED6B97C8, (uint64_t)qword_1ED6B97A8, a1);
}

uint64_t sub_1BC73EDD8(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6BB380);
}

uint64_t static Logger.cloudSync.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(qword_1ED6BB2F0, (uint64_t)qword_1ED6BB380, a1);
}

uint64_t sub_1BC73EE18(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6BB228);
}

uint64_t static Logger.daemon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6BB1F8, (uint64_t)qword_1ED6BB228, a1);
}

uint64_t sub_1BC73EE50(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1EF45B680);
}

uint64_t static Logger.focus.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1EF45ABE0, (uint64_t)qword_1EF45B680, a1);
}

uint64_t sub_1BC73EE88(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6B97E0);
}

uint64_t static Logger.healthRecords.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6B97D8, (uint64_t)qword_1ED6B97E0, a1);
}

uint64_t sub_1BC73EED0(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6B8B00);
}

uint64_t static Logger.hearing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6B8B20, (uint64_t)qword_1ED6B8B00, a1);
}

uint64_t sub_1BC73EF0C(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6B5E00);
}

uint64_t static Logger.heart.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6B5E18, (uint64_t)qword_1ED6B5E00, a1);
}

uint64_t sub_1BC73EF44(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6BA838);
}

uint64_t static Logger.medications.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(qword_1ED6BA850, (uint64_t)qword_1ED6BA838, a1);
}

uint64_t sub_1BC73EF88(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1EF45B698);
}

uint64_t static Logger.camera.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(qword_1EF45ABE8, (uint64_t)qword_1EF45B698, a1);
}

uint64_t sub_1BC73EFC0(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6BB208);
}

uint64_t static Logger.menstrualCycles.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6BB220, (uint64_t)qword_1ED6BB208, a1);
}

uint64_t sub_1BC73F000(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6BB358);
}

uint64_t static Logger.profile.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6BB378, (uint64_t)qword_1ED6BB358, a1);
}

uint64_t sub_1BC73F03C(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6B8AB0);
}

uint64_t static Logger.respiratory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6B8AD0, (uint64_t)qword_1ED6B8AB0, a1);
}

uint64_t sub_1BC73F080(uint64_t a1)
{
  return sub_1BC73F09C(a1, qword_1ED6B5E20);
}

uint64_t sub_1BC73F09C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1BC817590();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1BC817578();
}

uint64_t static Logger.sleep.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73EB4C(&qword_1ED6B5C98, (uint64_t)qword_1ED6B5E20, a1);
}

uint64_t LogCategory.logHandle.getter()
{
  sub_1BC73F190();
  LogCategory.rawValue.getter();
  return sub_1BC81810C();
}

unint64_t sub_1BC73F190()
{
  unint64_t result;

  result = qword_1ED6BB288;
  if (!qword_1ED6BB288)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BB288);
  }
  return result;
}

HealthPlatform::LogCategory_optional __swiftcall LogCategory.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  HealthPlatform::LogCategory_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1BC8186B8();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 7;
  switch(v3)
  {
    case 0:
      goto LABEL_9;
    case 1:
      v5 = 1;
      goto LABEL_9;
    case 2:
      v5 = 2;
      goto LABEL_9;
    case 3:
      v5 = 3;
      goto LABEL_9;
    case 4:
      v5 = 4;
      goto LABEL_9;
    case 5:
      v5 = 5;
      goto LABEL_9;
    case 6:
      v5 = 6;
LABEL_9:
      v6 = v5;
      break;
    case 7:
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    case 24:
      v6 = 24;
      break;
    default:
      v6 = 25;
      break;
  }
  *v2 = v6;
  return result;
}

void *static LogCategory.allCases.getter()
{
  return &unk_1E7516150;
}

uint64_t sub_1BC73F314(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BC7E0A84(*a1, *a2);
}

uint64_t sub_1BC73F320()
{
  sub_1BC81873C();
  LogCategory.rawValue.getter();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  return sub_1BC818778();
}

uint64_t sub_1BC73F384()
{
  LogCategory.rawValue.getter();
  sub_1BC817B30();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC73F3D4()
{
  sub_1BC81873C();
  LogCategory.rawValue.getter();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  return sub_1BC818778();
}

HealthPlatform::LogCategory_optional sub_1BC73F434(Swift::String *a1)
{
  return LogCategory.init(rawValue:)(*a1);
}

uint64_t sub_1BC73F440@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = LogCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1BC73F464(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7516150;
}

uint64_t Array<A>.singleLineDescription()()
{
  uint64_t v0;

  v0 = MEMORY[0x1E0DEA968];
  sub_1BC738D00(0, (unint64_t *)&qword_1ED6BB1C0);
  sub_1BC738C1C((unint64_t *)&qword_1ED6BB1C8, (unint64_t *)&qword_1ED6BB1C0, v0, MEMORY[0x1E0DEAF20]);
  return sub_1BC817A88();
}

uint64_t Optional.logDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v14 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1) == 1)
    return 7104878;
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v8, v10, v1);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v8, v1);
  v12 = sub_1BC817AF4();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  return v12;
}

unint64_t sub_1BC73F634()
{
  unint64_t result;

  result = qword_1ED6BB278;
  if (!qword_1ED6BB278)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for LogCategory, &type metadata for LogCategory);
    atomic_store(result, (unint64_t *)&qword_1ED6BB278);
  }
  return result;
}

uint64_t sub_1BC73F678()
{
  return sub_1BC738C1C(&qword_1EF45B6B0, &qword_1EF45B6B8, (uint64_t)&type metadata for LogCategory, MEMORY[0x1E0DEAF50]);
}

uint64_t getEnumTagSinglePayload for LogCategory(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE8)
    goto LABEL_17;
  if (a2 + 24 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 24) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 24;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 24;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 24;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x19;
  v8 = v6 - 25;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LogCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_1BC73F788 + 4 * byte_1BC81BEC3[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_1BC73F7BC + 4 * byte_1BC81BEBE[v4]))();
}

uint64_t sub_1BC73F7BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC73F7C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC73F7CCLL);
  return result;
}

uint64_t sub_1BC73F7D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC73F7E0);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_1BC73F7E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC73F7EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LogCategory()
{
  return &type metadata for LogCategory;
}

uint64_t static InputSignalSet.LookupKey.wheelchairUse.getter(uint64_t a1)
{
  return sub_1BC73F850(a1, &qword_1ED6B95D0, (uint64_t)qword_1ED6B95B8, (void (*)(_QWORD))sub_1BC73F984);
}

uint64_t static InputSignalSet.LookupKey.dateOfBirth.getter(uint64_t a1)
{
  return sub_1BC73F850(a1, &qword_1ED6B9588, (uint64_t)qword_1ED6B9568, (void (*)(_QWORD))sub_1BC73FB34);
}

uint64_t sub_1BC73F850(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v7 = sub_1BC8173EC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v7, a3);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  a4(0);
  return sub_1BC817260();
}

uint64_t static InputSignalSet.LookupKey.biologicalSex.getter(uint64_t a1)
{
  return sub_1BC73F850(a1, &qword_1ED6B95B0, (uint64_t)qword_1ED6B9590, (void (*)(_QWORD))sub_1BC73FE60);
}

uint64_t sub_1BC73F960(uint64_t a1)
{
  return sub_1BC73FE04(a1, qword_1ED6B95B8);
}

uint64_t sub_1BC73F984()
{
  uint64_t result;

  result = qword_1EF45B6C0;
  if (!qword_1EF45B6C0)
  {
    type metadata accessor for HKWheelchairUse(255);
    sub_1BC6E1788(&qword_1EF45B6C8, (uint64_t (*)(uint64_t))type metadata accessor for HKWheelchairUse, (uint64_t)&protocol conformance descriptor for HKWheelchairUse);
    sub_1BC6E1788(&qword_1EF45B6D0, (uint64_t (*)(uint64_t))type metadata accessor for HKWheelchairUse, (uint64_t)&protocol conformance descriptor for HKWheelchairUse);
    sub_1BC6E1788(&qword_1EF45B6D8, (uint64_t (*)(uint64_t))type metadata accessor for HKWheelchairUse, (uint64_t)&unk_1BC819A48);
    type metadata accessor for UserCharacteristicInputSignal();
  }
  return result;
}

void type metadata accessor for UserCharacteristicInputSignal()
{
  JUMPOUT(0x1BCCF5A3CLL);
}

uint64_t static InputSignalIdentifier.wheelchairUse.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73FC20(&qword_1ED6B95D0, (uint64_t)qword_1ED6B95B8, a1);
}

uint64_t static InputSignalIdentifier.wheelchairUse.setter(uint64_t a1)
{
  return sub_1BC73FCC4(a1, &qword_1ED6B95D0, (uint64_t)qword_1ED6B95B8);
}

uint64_t (*static InputSignalIdentifier.wheelchairUse.modify())()
{
  uint64_t v0;

  if (qword_1ED6B95D0 != -1)
    swift_once();
  v0 = sub_1BC8173EC();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED6B95B8);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC73FB10(uint64_t a1)
{
  return sub_1BC73FE04(a1, qword_1ED6B9568);
}

uint64_t sub_1BC73FB34()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_1EF45B6E0;
  if (!qword_1EF45B6E0)
  {
    sub_1BC816D20();
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0];
    sub_1BC6E1788(&qword_1EF45B6E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], MEMORY[0x1E0CAEAE8]);
    sub_1BC6E1788(&qword_1EF45B6F0, v1, MEMORY[0x1E0CAEAD0]);
    sub_1BC6E1788(&qword_1EF45B6F8, v1, MEMORY[0x1E0CAEAE0]);
    type metadata accessor for UserCharacteristicInputSignal();
  }
  return result;
}

uint64_t static InputSignalIdentifier.dateOfBirth.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73FC20(&qword_1ED6B9588, (uint64_t)qword_1ED6B9568, a1);
}

uint64_t sub_1BC73FC20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1BC8173EC();
  v6 = __swift_project_value_buffer(v5, a2);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t static InputSignalIdentifier.dateOfBirth.setter(uint64_t a1)
{
  return sub_1BC73FCC4(a1, &qword_1ED6B9588, (uint64_t)qword_1ED6B9568);
}

uint64_t sub_1BC73FCC4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*a2 != -1)
    swift_once();
  v5 = sub_1BC8173EC();
  v6 = __swift_project_value_buffer(v5, a3);
  swift_beginAccess();
  v7 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v6, a1, v5);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v5);
}

uint64_t (*static InputSignalIdentifier.dateOfBirth.modify())()
{
  uint64_t v0;

  if (qword_1ED6B9588 != -1)
    swift_once();
  v0 = sub_1BC8173EC();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED6B9568);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC73FDE0(uint64_t a1)
{
  return sub_1BC73FE04(a1, qword_1ED6B9590);
}

uint64_t sub_1BC73FE04(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1BC8173EC();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1BC8173E0();
}

uint64_t sub_1BC73FE60()
{
  uint64_t result;

  result = qword_1EF45B700;
  if (!qword_1EF45B700)
  {
    type metadata accessor for HKBiologicalSex(255);
    sub_1BC6E1788(&qword_1EF45B708, (uint64_t (*)(uint64_t))type metadata accessor for HKBiologicalSex, (uint64_t)&protocol conformance descriptor for HKBiologicalSex);
    sub_1BC6E1788(&qword_1EF45B710, (uint64_t (*)(uint64_t))type metadata accessor for HKBiologicalSex, (uint64_t)&protocol conformance descriptor for HKBiologicalSex);
    sub_1BC6E1788(&qword_1EF45B718, (uint64_t (*)(uint64_t))type metadata accessor for HKBiologicalSex, (uint64_t)&unk_1BC819A1C);
    type metadata accessor for UserCharacteristicInputSignal();
  }
  return result;
}

uint64_t static InputSignalIdentifier.biologicalSex.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC73FC20(&qword_1ED6B95B0, (uint64_t)qword_1ED6B9590, a1);
}

uint64_t static InputSignalIdentifier.biologicalSex.setter(uint64_t a1)
{
  return sub_1BC73FCC4(a1, &qword_1ED6B95B0, (uint64_t)qword_1ED6B9590);
}

uint64_t (*static InputSignalIdentifier.biologicalSex.modify())()
{
  uint64_t v0;

  if (qword_1ED6B95B0 != -1)
    swift_once();
  v0 = sub_1BC8173EC();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED6B9590);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static UserCharacteristicInputSignal<>.wheelchairUse(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a2;
  v25 = a4;
  v8 = sub_1BC8173EC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v23 - v13;
  v15 = qword_1ED6B95D0;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v15 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED6B95B8);
  swift_beginAccess();
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v14, v16, v8);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a5;
  v17(v12, (uint64_t)v14, v8);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1BC7401C0;
  *(_QWORD *)(v19 + 24) = v18;
  swift_allocObject();
  v20 = a5;
  v21 = sub_1BC740C04(a1, v24, a3, v25, (uint64_t)v12, (uint64_t)sub_1BC742C74, v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v21;
}

uint64_t sub_1BC74019C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC7401C0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BC740890(*(void **)(v1 + 16), (SEL *)&selRef_wheelchairUseWithError_, (SEL *)&selRef_wheelchairUse, a1);
}

uint64_t UserCharacteristicInputSignal.__allocating_init(context:observer:identifier:provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1BC7404C0(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&unk_1E75198A0, (uint64_t)sub_1BC741AE0);
}

{
  return sub_1BC7404C0(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&unk_1E7519918, (uint64_t)sub_1BC741BB8);
}

{
  uint64_t v14;

  v14 = swift_allocObject();
  UserCharacteristicInputSignal.init(context:observer:identifier:provider:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t static UserCharacteristicInputSignal<>.wheelchairUseConfiguration.getter()
{
  return sub_1BC7405F8(&qword_1ED6B95D0, (uint64_t)qword_1ED6B95B8);
}

uint64_t static UserCharacteristicInputSignal<>.dateOfBirth(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a2;
  v25 = a4;
  v8 = sub_1BC8173EC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v23 - v13;
  v15 = qword_1ED6B9588;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v15 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED6B9568);
  swift_beginAccess();
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v14, v16, v8);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a5;
  v17(v12, (uint64_t)v14, v8);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = &unk_1EF45B728;
  *(_QWORD *)(v19 + 24) = v18;
  swift_allocObject();
  v20 = a5;
  v21 = sub_1BC740C04(a1, v24, a3, v25, (uint64_t)v12, (uint64_t)sub_1BC741B8C, v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v21;
}

uint64_t sub_1BC7403F0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BC740448;
  return sub_1BC817E60();
}

uint64_t sub_1BC740448()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BC7404C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v10 = v9;
  v26 = a3;
  v27 = a4;
  v25 = a9;
  v16 = sub_1BC8173EC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a5, v16);
  v20 = swift_allocObject();
  v21 = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v20 + 32) = v21;
  *(_QWORD *)(v20 + 48) = a6;
  *(_QWORD *)(v20 + 56) = a7;
  v22 = swift_allocObject();
  UserCharacteristicInputSignal.init(context:observer:identifier:provider:)(a1, a2, v26, v27, (uint64_t)v19, v25, v20);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a5, v16);
  return v22;
}

uint64_t static UserCharacteristicInputSignal<>.dateOfBirthConfiguration.getter()
{
  return sub_1BC7405F8(&qword_1ED6B9588, (uint64_t)qword_1ED6B9568);
}

uint64_t sub_1BC7405F8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1BC8173EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v4, a2);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  return sub_1BC8173C8();
}

uint64_t static UserCharacteristicInputSignal<>.biologicalSex(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a2;
  v25 = a4;
  v8 = sub_1BC8173EC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v23 - v13;
  v15 = qword_1ED6B95B0;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v15 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED6B9590);
  swift_beginAccess();
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v14, v16, v8);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a5;
  v17(v12, (uint64_t)v14, v8);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1BC741BD8;
  *(_QWORD *)(v19 + 24) = v18;
  swift_allocObject();
  v20 = a5;
  v21 = sub_1BC740C04(a1, v24, a3, v25, (uint64_t)v12, (uint64_t)sub_1BC741C00, v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v21;
}

void sub_1BC740890(void *a1@<X0>, SEL *a2@<X1>, SEL *a3@<X2>, uint64_t a4@<X8>)
{
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v11[0] = 0;
  v6 = objc_msgSend(a1, *a2, v11);
  if (v6)
  {
    v7 = v6;
    v8 = v11[0];
    v9 = objc_msgSend(v7, *a3);

    *(_QWORD *)a4 = v9;
    *(_BYTE *)(a4 + 8) = 0;
  }
  else
  {
    v10 = v11[0];
    sub_1BC816D5C();

    swift_willThrow();
  }
}

uint64_t static UserCharacteristicInputSignal<>.biologicalSexConfiguration.getter()
{
  return sub_1BC7405F8(&qword_1ED6B95B0, (uint64_t)qword_1ED6B9590);
}

uint64_t UserCharacteristicInputSignal.context.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t UserCharacteristicInputSignal.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_1ED6C1B98;
  v4 = sub_1BC8173EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UserCharacteristicInputSignal.observer.getter()
{
  sub_1BC7427B0();
  return swift_unknownObjectRetain();
}

uint64_t UserCharacteristicInputSignal.provider.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + qword_1ED6C1BD8);
  swift_retain();
  return v1;
}

uint64_t sub_1BC740A4C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC740AA0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC740AA0()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t (*)(uint64_t, void *), uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(void (**)(uint64_t (*)(uint64_t, void *), uint64_t))((char *)v0 + qword_1ED6C1BD8);
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v1 + 80);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(v1 + 88);
  *(_QWORD *)(v4 + 40) = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v4 + 48) = v3;
  swift_retain();
  v2(sub_1BC742A08, v4);
  swift_release();
  return swift_release();
}

Swift::Void __swiftcall UserCharacteristicInputSignal.stopObservation()()
{
  sub_1BC817128();
}

uint64_t sub_1BC740C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = v7;
  v36 = a6;
  v37 = a7;
  v34 = a4;
  v35 = a5;
  v32 = a2;
  v33 = a3;
  v31 = a1;
  v9 = sub_1BC817FA4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC817F5C();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v13);
  v15 = sub_1BC817974();
  MEMORY[0x1E0C80A78](v15);
  v30 = qword_1ED6C1BC0;
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  sub_1BC817968();
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1BC6E1788((unint64_t *)&unk_1ED6BA4C0, v14, MEMORY[0x1E0DEF828]);
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA420, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC74287C();
  sub_1BC818184();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF8D0], v9);
  v16 = (void *)sub_1BC817FC8();
  *(_QWORD *)(v8 + v30) = v16;
  v17 = v32;
  *(_QWORD *)(v8 + 16) = v31;
  *(_QWORD *)(v8 + 24) = v17;
  v18 = (_QWORD *)(v8 + qword_1ED6C1BD0);
  v19 = v34;
  *v18 = v33;
  v18[1] = v19;
  v20 = v8 + qword_1ED6C1B98;
  v21 = sub_1BC8173EC();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = v35;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20, v35, v21);
  v24 = (_QWORD *)(v8 + qword_1ED6C1BD8);
  v25 = v37;
  *v24 = v36;
  v24[1] = v25;
  sub_1BC817134();
  swift_allocObject();
  v26 = v16;
  v27 = sub_1BC81711C();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v21);
  *(_QWORD *)(v8 + qword_1ED6C1BC8) = v27;
  return v8;
}

uint64_t UserCharacteristicInputSignal.init(context:observer:identifier:provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = v7;
  v36 = a6;
  v37 = a7;
  v34 = a4;
  v35 = a5;
  v32 = a2;
  v33 = a3;
  v31 = a1;
  v9 = sub_1BC817FA4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC817F5C();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v13);
  v15 = sub_1BC817974();
  MEMORY[0x1E0C80A78](v15);
  v30 = qword_1ED6C1BC0;
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  sub_1BC817968();
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1BC6E1788((unint64_t *)&unk_1ED6BA4C0, v14, MEMORY[0x1E0DEF828]);
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA420, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC74287C();
  sub_1BC818184();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF8D0], v9);
  v16 = (void *)sub_1BC817FC8();
  *(_QWORD *)(v8 + v30) = v16;
  v17 = v32;
  *(_QWORD *)(v8 + 16) = v31;
  *(_QWORD *)(v8 + 24) = v17;
  v18 = (_QWORD *)(v8 + qword_1ED6C1BD0);
  v19 = v34;
  *v18 = v33;
  v18[1] = v19;
  v20 = v8 + qword_1ED6C1B98;
  v21 = sub_1BC8173EC();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = v35;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20, v35, v21);
  v24 = (_QWORD *)(v8 + qword_1ED6C1BD8);
  v25 = v37;
  *v24 = v36;
  v24[1] = v25;
  sub_1BC817134();
  swift_allocObject();
  v26 = v16;
  v27 = sub_1BC81711C();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v21);
  *(_QWORD *)(v8 + qword_1ED6C1BC8) = v27;
  return v8;
}

uint64_t sub_1BC74117C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  sub_1BC6ECA64(0, &qword_1ED6B9650, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  v11 = sub_1BC817D58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = a1;
  v12[7] = a2;
  swift_retain();
  swift_retain();
  sub_1BC7417D8((uint64_t)v10, (uint64_t)&unk_1EF45B758, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1BC741270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;

  sub_1BC6ECA64(0, &qword_1ED6B9650, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v22 - v17;
  v19 = sub_1BC817D58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = a5;
  v20[5] = a6;
  v20[6] = a7;
  v20[7] = a8;
  v20[8] = a3;
  v20[9] = a4;
  v20[10] = a1;
  v20[11] = a2;
  swift_retain();
  swift_retain();
  sub_1BC7417D8((uint64_t)v18, (uint64_t)&unk_1EF45B738, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1BC74138C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v7[2] = a6;
  v7[3] = a7;
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6B9328, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7[4] = swift_task_alloc();
  v9 = swift_task_alloc();
  v7[5] = v9;
  v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc();
  v7[6] = v10;
  *v10 = v7;
  v10[1] = sub_1BC741444;
  return v12(v9);
}

uint64_t sub_1BC741444()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC7414A8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 40), 0);
  sub_1BC715030(*(_QWORD *)(v0 + 40), (unint64_t *)&unk_1ED6B9328, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0]);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC74150C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, void *);
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  id v6;

  v1 = *(void **)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(void (**)(uint64_t, void *))(v0 + 16);
  v4 = sub_1BC816D20();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 1, 1, v4);
  v6 = v1;
  v3(v2, v1);

  sub_1BC715030(*(_QWORD *)(v0 + 32), (unint64_t *)&unk_1ED6B9328, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC7415C8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t);

  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a6;
  v10 = sub_1BC818130();
  v8[5] = v10;
  v8[6] = *(_QWORD *)(v10 - 8);
  v8[7] = swift_task_alloc();
  v11 = swift_task_alloc();
  v8[8] = v11;
  v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v12 = (_QWORD *)swift_task_alloc();
  v8[9] = v12;
  *v12 = v8;
  v12[1] = sub_1BC741678;
  return v14(v11);
}

uint64_t sub_1BC741678()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC7416DC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 64), 0);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC741738()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, void *);
  id v4;

  v1 = *(void **)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(void (**)(uint64_t, void *))(v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 56))(v2, 1, 1);
  v4 = v1;
  v3(v2, v1);

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC7417D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BC817D58();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1BC817D4C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1BC715030(a1, &qword_1ED6B9650, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BC817D1C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1BC74192C(uint64_t (*a1)(uint64_t *, _QWORD), uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v5;

  a3(&v5);
  return a1(&v5, 0);
}

uint64_t sub_1BC7419B8(void (*a1)(char *, _QWORD), uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v5 = sub_1BC818130();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - v9;
  a3(v8);
  a1(v10, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
}

uint64_t sub_1BC741AE0(uint64_t a1, uint64_t a2)
{
  return sub_1BC741BC4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC7419B8);
}

uint64_t sub_1BC741AEC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BC740448;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1BC740448;
  return sub_1BC817E60();
}

uint64_t sub_1BC741B68()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC741B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC74117C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC741B94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC741BB8(uint64_t a1, uint64_t a2)
{
  return sub_1BC741BC4(a1, a2, sub_1BC741270);
}

uint64_t sub_1BC741BC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5]);
}

void sub_1BC741BD8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BC740890(*(void **)(v1 + 16), (SEL *)&selRef_biologicalSexWithError_, (SEL *)&selRef_biologicalSex, a1);
}

uint64_t sub_1BC741C00(uint64_t (*a1)(uint64_t *, _QWORD), uint64_t a2)
{
  uint64_t v2;

  return sub_1BC74192C(a1, a2, *(void (**)(uint64_t *__return_ptr))(v2 + 16));
}

uint64_t sub_1BC741C18(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  id v23;
  id v24;
  char *v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  unsigned int v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t ObjectType;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v57 = a2;
  v48 = a1;
  v11 = sub_1BC817590();
  ObjectType = *(_QWORD *)(v11 - 8);
  v52 = v11;
  MEMORY[0x1E0C80A78](v11);
  v50 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1BC818130();
  v13 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v15 = (char *)&v48 - v14;
  v16 = sub_1BC8173EC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = a4;
  v54 = a5;
  v59 = a4;
  v60 = a5;
  v55 = a6;
  v56 = a7;
  v61 = a6;
  v62 = a7;
  v20 = sub_1BC81738C();
  MEMORY[0x1E0C80A78](v20);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v22 = result;
    if (!v57)
    {
      v37 = *(void **)(result + qword_1ED6C1BD0 + 8);
      v52 = *(_QWORD *)(result + qword_1ED6C1BD0);
      v57 = v37;
      ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v22 + qword_1ED6C1B98, v16);
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v48, v49);
      v39 = v53;
      v38 = v54;
      v41 = v55;
      v40 = v56;
      sub_1BC817380();
      v58 = v22;
      v59 = v39;
      v60 = v38;
      v61 = v41;
      v62 = v40;
      type metadata accessor for UserCharacteristicInputSignal();
    }
    swift_getObjectType();
    v23 = v57;
    v24 = v57;
    v25 = v50;
    sub_1BC8171E8();
    v26 = v23;
    v27 = v23;
    swift_retain();
    v28 = sub_1BC81756C();
    v29 = sub_1BC817E84();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = (_QWORD *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      v59 = v49;
      *(_DWORD *)v30 = 136446466;
      v32 = UserCharacteristicInputSignal.description.getter();
      v58 = sub_1BC6E14D8(v32, v33, &v59);
      sub_1BC818148();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2112;
      v34 = v23;
      v35 = _swift_stdlib_bridgeErrorToNSError();
      v58 = v35;
      sub_1BC818148();
      *v31 = v35;

      _os_log_impl(&dword_1BC6DD000, v28, v29, "%{public}s: Failed to fetch updated characteristic value: %@", (uint8_t *)v30, 0x16u);
      sub_1BC6EFA40();
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v31, -1, -1);
      v36 = v49;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v36, -1, -1);
      MEMORY[0x1BCCF5BA4](v30, -1, -1);
    }
    else
    {
      swift_release();

    }
    (*(void (**)(char *, uint64_t))(ObjectType + 8))(v25, v52);
    v42 = (void *)sub_1BC816D50();
    v43 = objc_msgSend(v42, sel_hk_isDatabaseAccessibilityError);

    if (v43)
    {
      if (qword_1EF45ABF8 != -1)
        swift_once();
      v44 = swift_allocObject();
      swift_weakInit();
      v45 = (_QWORD *)swift_allocObject();
      v46 = v54;
      v45[2] = v53;
      v45[3] = v46;
      v47 = v56;
      v45[4] = v55;
      v45[5] = v47;
      v45[6] = v44;
      swift_retain();
      sub_1BC7C3EDC((uint64_t)sub_1BC742A18, (uint64_t)v45);

      swift_release();
      swift_release();
    }
    else
    {

    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC742150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v13[2];
  uint64_t v14;

  v0 = sub_1BC817590();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getObjectType();
    sub_1BC8171E8();
    swift_retain();
    v5 = sub_1BC81756C();
    v6 = sub_1BC817E9C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      v13[0] = v0;
      v8 = (uint8_t *)v7;
      v9 = swift_slowAlloc();
      v14 = v9;
      *(_DWORD *)v8 = 136446210;
      v10 = UserCharacteristicInputSignal.description.getter();
      v13[1] = sub_1BC6E14D8(v10, v11, &v14);
      sub_1BC818148();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v5, v6, "%{public}s: Device unlocked, retrying fetch characteristic", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v9, -1, -1);
      MEMORY[0x1BCCF5BA4](v8, -1, -1);

      v12 = (*(uint64_t (**)(char *, _QWORD))(v1 + 8))(v3, v13[0]);
    }
    else
    {

      swift_release();
      v12 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    sub_1BC740AA0(v12);
    return swift_release();
  }
  return result;
}

uint64_t UserCharacteristicInputSignal.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  v1 = v0 + qword_1ED6C1B98;
  v2 = sub_1BC8173EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return v0;
}

uint64_t UserCharacteristicInputSignal.__deallocating_deinit()
{
  UserCharacteristicInputSignal.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC742408@<X0>(uint64_t a1@<X8>)
{
  return UserCharacteristicInputSignal.identifier.getter(a1);
}

uint64_t sub_1BC742428()
{
  sub_1BC7427B0();
  return swift_unknownObjectRetain();
}

uint64_t sub_1BC742454()
{
  return _s14HealthPlatform29UserCharacteristicInputSignalC16beginObservation4from14configurationsy0A13Orchestration19OptionalValueAnchorVyxGSg_SayAG21IdentityConfigurationVGtF_0();
}

void sub_1BC742474()
{
  UserCharacteristicInputSignal.stopObservation()();
}

uint64_t UserCharacteristicInputSignal.description.getter()
{
  uint64_t v1;

  v1 = sub_1BC818814();
  sub_1BC817B48();
  sub_1BC8173EC();
  sub_1BC6E1788(&qword_1ED6B95D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D108], MEMORY[0x1E0D2D120]);
  sub_1BC818670();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BC742530()
{
  return UserCharacteristicInputSignal.description.getter();
}

uint64_t sub_1BC742550()
{
  sub_1BC6E1788(&qword_1ED6B9680, (uint64_t (*)(uint64_t))type metadata accessor for HKWheelchairUse, (uint64_t)&unk_1BC819904);
  return sub_1BC817C38();
}

uint64_t sub_1BC7425C4()
{
  sub_1BC6E1788(&qword_1ED6B9680, (uint64_t (*)(uint64_t))type metadata accessor for HKWheelchairUse, (uint64_t)&unk_1BC819904);
  return sub_1BC817C20();
}

uint64_t sub_1BC742628()
{
  sub_1BC6E1788((unint64_t *)&unk_1ED6B9668, (uint64_t (*)(uint64_t))type metadata accessor for HKBiologicalSex, (uint64_t)&unk_1BC819940);
  return sub_1BC817C38();
}

uint64_t sub_1BC74269C()
{
  sub_1BC6E1788((unint64_t *)&unk_1ED6B9668, (uint64_t (*)(uint64_t))type metadata accessor for HKBiologicalSex, (uint64_t)&unk_1BC819940);
  return sub_1BC817C20();
}

uint64_t sub_1BC742700(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1BC742764;
  return v6(a1);
}

uint64_t sub_1BC742764()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BC7427B0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_1ED6C1BD0);
}

uint64_t _s14HealthPlatform29UserCharacteristicInputSignalC16beginObservation4from14configurationsy0A13Orchestration19OptionalValueAnchorVyxGSg_SayAG21IdentityConfigurationVGtF_0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = swift_allocObject();
  swift_weakInit();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 80);
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(v1 + 88);
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v3 + 48) = v2;
  swift_retain();
  sub_1BC817104();
  swift_release();
  swift_release();
  return sub_1BC740AA0();
}

unint64_t sub_1BC74287C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6BA430[0];
  if (!qword_1ED6BA430[0])
  {
    sub_1BC6ECA64(255, (unint64_t *)&unk_1ED6BA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, qword_1ED6BA430);
  }
  return result;
}

void sub_1BC7428DC()
{
  JUMPOUT(0x1BCCF5AB4);
}

void sub_1BC7428EC()
{
  JUMPOUT(0x1BCCF5AB4);
}

uint64_t sub_1BC7428FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC8173EC();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for UserCharacteristicInputSignal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UserCharacteristicInputSignal.__allocating_init(context:observer:identifier:provider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_1BC7429B4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC7429D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7429FC()
{
  return sub_1BC742A24((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC740A4C);
}

uint64_t sub_1BC742A08(uint64_t a1, void *a2)
{
  uint64_t *v2;

  return sub_1BC741C18(a1, a2, v2[6], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1BC742A18()
{
  return sub_1BC742A24((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC742150);
}

uint64_t sub_1BC742A24(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1BC742A38()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC742A6C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = v1[3];
  v4 = v1[4];
  v6 = v1[2];
  v7 = (int *)v1[8];
  v8 = v1[9];
  v9 = v1[10];
  v10 = v1[11];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1BC742C50;
  return sub_1BC7415C8(a1, v6, v5, v7, v8, v9, v10, v4);
}

uint64_t sub_1BC742B20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BC742C50;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF45B740 + dword_1EF45B740))(a1, v4);
}

uint64_t sub_1BC742B90()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC742BC4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1BC740448;
  return sub_1BC74138C(a1, v4, v5, v6, v7, v9, v8);
}

double ContentCompletenessFeatureTag.value.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

HealthPlatform::ContentCompletenessFeatureTag __swiftcall ContentCompletenessFeatureTag.init(_:)(HealthPlatform::ContentCompletenessFeatureTag result)
{
  HealthPlatform::ContentCompletenessFeatureTag *v1;

  v1->value = result.value;
  return result;
}

ValueMetadata *type metadata accessor for ContentCompletenessFeatureTag()
{
  return &type metadata for ContentCompletenessFeatureTag;
}

id HKHealthStore.sourceProfile.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_profileIdentifier);
}

uint64_t sub_1BC742CBC@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BC743188(a1, a2);
}

uint64_t sub_1BC742CD0@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  _QWORD *v10;
  char v11;

  sub_1BC816C3C();
  swift_allocObject();
  sub_1BC816C30();
  sub_1BC743DF4(0, &qword_1ED6BAAE8, (uint64_t (*)(void))sub_1BC743B24, (uint64_t (*)(void))sub_1BC743B68, (uint64_t)&type metadata for FeedItemTimeScope);
  v5 = objc_msgSend(a1, sel_data);
  v6 = sub_1BC816E64();
  v8 = v7;

  sub_1BC743BAC();
  sub_1BC816C24();
  sub_1BC6ECB60(v6, v8);
  result = swift_release();
  if (v2)
  {
    sub_1BC7436D8();
    swift_allocError();
    *v10 = v2;
    return swift_willThrow();
  }
  else
  {
    *a2 = v11;
  }
  return result;
}

uint64_t sub_1BC742E04@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  _QWORD *v10;
  char v11;

  sub_1BC816C3C();
  swift_allocObject();
  sub_1BC816C30();
  sub_1BC743DF4(0, &qword_1ED6BB038, (uint64_t (*)(void))sub_1BC743C14, (uint64_t (*)(void))sub_1BC743C58, (uint64_t)&type metadata for FeedItemProminence);
  v5 = objc_msgSend(a1, sel_data);
  v6 = sub_1BC816E64();
  v8 = v7;

  sub_1BC743C9C();
  sub_1BC816C24();
  sub_1BC6ECB60(v6, v8);
  result = swift_release();
  if (v2)
  {
    sub_1BC7436D8();
    swift_allocError();
    *v10 = v2;
    return swift_willThrow();
  }
  else
  {
    *a2 = v11;
  }
  return result;
}

uint64_t sub_1BC742F38@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  _QWORD *v10;
  char v11;

  sub_1BC816C3C();
  swift_allocObject();
  sub_1BC816C30();
  sub_1BC743DF4(0, &qword_1ED6BAAF8, (uint64_t (*)(void))sub_1BC743E64, (uint64_t (*)(void))sub_1BC743EA8, (uint64_t)&type metadata for DataVisualizationKind);
  v5 = objc_msgSend(a1, sel_data);
  v6 = sub_1BC816E64();
  v8 = v7;

  sub_1BC743EEC();
  sub_1BC816C24();
  sub_1BC6ECB60(v6, v8);
  result = swift_release();
  if (v2)
  {
    sub_1BC7436D8();
    swift_allocError();
    *v10 = v2;
    return swift_willThrow();
  }
  else
  {
    *a2 = v11;
  }
  return result;
}

uint64_t static RelevanceFeatureTagDecodable<>.makeFromFeedItemTag(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v16 = a4;
  v17 = *(_QWORD *)(a3 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v16 - v13;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 24))(a1, a2, a3);
  if (!v4)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v17 + 32))(v12, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_1BC743188@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1BC743408(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BC7431B0(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  sub_1BC816C3C();
  swift_allocObject();
  sub_1BC816C30();
  sub_1BC743F54(0, (unint64_t *)&qword_1ED6BAB08, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA970]);
  v3 = objc_msgSend(a1, sel_data);
  v4 = sub_1BC816E64();
  v6 = v5;

  sub_1BC743ABC();
  sub_1BC816C24();
  sub_1BC6ECB60(v4, v6);
  swift_release();
  if (!v1)
    return v9;
  sub_1BC7436D8();
  swift_allocError();
  *v7 = v1;
  return swift_willThrow();
}

uint64_t sub_1BC7432DC(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  unsigned __int8 v9;

  sub_1BC816C3C();
  swift_allocObject();
  sub_1BC816C30();
  sub_1BC743DF4(0, &qword_1EF45B790, (uint64_t (*)(void))sub_1BC743D04, (uint64_t (*)(void))sub_1BC743D48, (uint64_t)&type metadata for DailyRoutineKind);
  v3 = objc_msgSend(a1, sel_data);
  v4 = sub_1BC816E64();
  v6 = v5;

  sub_1BC743D8C();
  sub_1BC816C24();
  sub_1BC6ECB60(v4, v6);
  swift_release();
  if (!v1)
    return v9;
  sub_1BC7436D8();
  swift_allocError();
  *v7 = v1;
  return swift_willThrow();
}

uint64_t sub_1BC743408(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  _QWORD *v8;

  sub_1BC816C3C();
  swift_allocObject();
  sub_1BC816C30();
  sub_1BC743F54(0, &qword_1ED6BAB18, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEB080]);
  v3 = objc_msgSend(a1, sel_data);
  v4 = sub_1BC816E64();
  v6 = v5;

  sub_1BC743FA0();
  sub_1BC816C24();
  sub_1BC6ECB60(v4, v6);
  result = swift_release();
  if (v1)
  {
    sub_1BC7436D8();
    swift_allocError();
    *v8 = v1;
    return swift_willThrow();
  }
  return result;
}

uint64_t static RelevanceFeatureTagDecodable<>.value(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = type metadata accessor for ValueJSONWrapper(0, AssociatedTypeWitness, a2, a3);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - v11;
  sub_1BC816C3C();
  swift_allocObject();
  sub_1BC816C30();
  v13 = objc_msgSend(a1, sel_data);
  v14 = sub_1BC816E64();
  v16 = v15;

  MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v10);
  sub_1BC816C24();
  sub_1BC6ECB60(v14, v16);
  swift_release();
  if (!v4)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a4, v12, AssociatedTypeWitness);
  sub_1BC7436D8();
  swift_allocError();
  *v17 = v4;
  return swift_willThrow();
}

unint64_t sub_1BC7436D8()
{
  unint64_t result;

  result = qword_1EF45B788;
  if (!qword_1EF45B788)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81C2DC, &type metadata for RelevanceFeatureTagCoreDataError);
    atomic_store(result, (unint64_t *)&qword_1EF45B788);
  }
  return result;
}

uint64_t FeedItem.get<A>(featureTag:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t, uint64_t);
  id v16;
  void (*v17)(_BYTE *, _QWORD);
  void (*v18)(char *);
  _QWORD v20[3];
  _BYTE v21[32];
  id v22;

  v20[1] = a1;
  v20[2] = a4;
  v7 = *(_QWORD *)(a3 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v20 - v13;
  v15 = *(void (**)(uint64_t, uint64_t))(a3 + 16);
  v16 = v4;
  v15(a2, a3);
  v22 = v16;
  v17 = (void (*)(_BYTE *, _QWORD))swift_readAtKeyPath();
  v18 = *(void (**)(char *))(v9 + 16);
  v18(v14);
  v17(v21, 0);
  swift_release();

  ((void (*)(char *, char *, uint64_t))v18)(v12, v14, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v12, a2, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, AssociatedTypeWitness);
}

uint64_t dispatch thunk of static RelevanceFeatureTagKeyPathCorresponding.keyPath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static RelevanceFeatureTagDecodable.makeFromFeedItemTag(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of static RelevanceFeatureTagDecodable.value(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

_QWORD *initializeBufferWithCopyOfBuffer for RelevanceFeatureTagCoreDataError(_QWORD *a1, id *a2)
{
  id v3;
  id v4;

  v3 = *a2;
  v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for RelevanceFeatureTagCoreDataError(id *a1)
{

}

void **assignWithCopy for RelevanceFeatureTagCoreDataError(void **a1, id *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = *a2;
  v4 = *a2;
  v5 = *a1;
  *a1 = v3;

  return a1;
}

void **assignWithTake for RelevanceFeatureTagCoreDataError(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for RelevanceFeatureTagCoreDataError()
{
  return &type metadata for RelevanceFeatureTagCoreDataError;
}

unint64_t sub_1BC743960(void *a1)
{
  unint64_t v1;
  id v3;

  v1 = 0xD00000000000002ELL;
  if (a1)
  {
    v3 = a1;
    sub_1BC8182C8();
    sub_1BC817B48();
    sub_1BC6E1878();
    sub_1BC8183E8();

    return 0;
  }
  return v1;
}

unint64_t sub_1BC743A24()
{
  void **v0;

  return sub_1BC743960(*v0);
}

uint64_t sub_1BC743A2C@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BC742F38(a1, a2);
}

uint64_t sub_1BC743A40@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC7432DC(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_1BC743A6C@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BC742E04(a1, a2);
}

uint64_t sub_1BC743A80@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BC742CD0(a1, a2);
}

uint64_t sub_1BC743A94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1BC7431B0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

unint64_t sub_1BC743ABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B7D90;
  if (!qword_1ED6B7D90)
  {
    sub_1BC743F54(255, (unint64_t *)&qword_1ED6BAB08, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA970]);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B7D90);
  }
  return result;
}

unint64_t sub_1BC743B24()
{
  unint64_t result;

  result = qword_1ED6BAB30;
  if (!qword_1ED6BAB30)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeedItemTimeScope, &type metadata for FeedItemTimeScope);
    atomic_store(result, (unint64_t *)&qword_1ED6BAB30);
  }
  return result;
}

unint64_t sub_1BC743B68()
{
  unint64_t result;

  result = qword_1ED6BAB20;
  if (!qword_1ED6BAB20)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeedItemTimeScope, &type metadata for FeedItemTimeScope);
    atomic_store(result, (unint64_t *)&qword_1ED6BAB20);
  }
  return result;
}

unint64_t sub_1BC743BAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B7D78;
  if (!qword_1ED6B7D78)
  {
    sub_1BC743DF4(255, &qword_1ED6BAAE8, (uint64_t (*)(void))sub_1BC743B24, (uint64_t (*)(void))sub_1BC743B68, (uint64_t)&type metadata for FeedItemTimeScope);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B7D78);
  }
  return result;
}

unint64_t sub_1BC743C14()
{
  unint64_t result;

  result = qword_1ED6BB050;
  if (!qword_1ED6BB050)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeedItemProminence, &type metadata for FeedItemProminence);
    atomic_store(result, (unint64_t *)&qword_1ED6BB050);
  }
  return result;
}

unint64_t sub_1BC743C58()
{
  unint64_t result;

  result = qword_1ED6BB040;
  if (!qword_1ED6BB040)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeedItemProminence, &type metadata for FeedItemProminence);
    atomic_store(result, (unint64_t *)&qword_1ED6BB040);
  }
  return result;
}

unint64_t sub_1BC743C9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B7D80;
  if (!qword_1ED6B7D80)
  {
    sub_1BC743DF4(255, &qword_1ED6BB038, (uint64_t (*)(void))sub_1BC743C14, (uint64_t (*)(void))sub_1BC743C58, (uint64_t)&type metadata for FeedItemProminence);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B7D80);
  }
  return result;
}

unint64_t sub_1BC743D04()
{
  unint64_t result;

  result = qword_1EF45B798;
  if (!qword_1EF45B798)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DailyRoutineKind, &type metadata for DailyRoutineKind);
    atomic_store(result, (unint64_t *)&qword_1EF45B798);
  }
  return result;
}

unint64_t sub_1BC743D48()
{
  unint64_t result;

  result = qword_1EF45B7A0;
  if (!qword_1EF45B7A0)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DailyRoutineKind, &type metadata for DailyRoutineKind);
    atomic_store(result, (unint64_t *)&qword_1EF45B7A0);
  }
  return result;
}

unint64_t sub_1BC743D8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45B7A8;
  if (!qword_1EF45B7A8)
  {
    sub_1BC743DF4(255, &qword_1EF45B790, (uint64_t (*)(void))sub_1BC743D04, (uint64_t (*)(void))sub_1BC743D48, (uint64_t)&type metadata for DailyRoutineKind);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF45B7A8);
  }
  return result;
}

void sub_1BC743DF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3();
    v10 = a4();
    v11 = type metadata accessor for ValueJSONWrapper(a1, a5, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

unint64_t sub_1BC743E64()
{
  unint64_t result;

  result = qword_1ED6BAB50[0];
  if (!qword_1ED6BAB50[0])
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DataVisualizationKind, &type metadata for DataVisualizationKind);
    atomic_store(result, qword_1ED6BAB50);
  }
  return result;
}

unint64_t sub_1BC743EA8()
{
  unint64_t result;

  result = qword_1ED6BAB40;
  if (!qword_1ED6BAB40)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DataVisualizationKind, &type metadata for DataVisualizationKind);
    atomic_store(result, (unint64_t *)&qword_1ED6BAB40);
  }
  return result;
}

unint64_t sub_1BC743EEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B7D88;
  if (!qword_1ED6B7D88)
  {
    sub_1BC743DF4(255, &qword_1ED6BAAF8, (uint64_t (*)(void))sub_1BC743E64, (uint64_t (*)(void))sub_1BC743EA8, (uint64_t)&type metadata for DataVisualizationKind);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B7D88);
  }
  return result;
}

void sub_1BC743F54(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = type metadata accessor for ValueJSONWrapper(0, a3, a4, a5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1BC743FA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B7D98;
  if (!qword_1ED6B7D98)
  {
    sub_1BC743F54(255, &qword_1ED6BAB18, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEB080]);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B7D98);
  }
  return result;
}

uint64_t static InputSignalIdentifier.summarySharing.getter()
{
  return sub_1BC8173E0();
}

uint64_t static InputSignalSet.LookupKey.summarySharing.getter()
{
  uint64_t v0;

  v0 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v0);
  sub_1BC8173E0();
  type metadata accessor for SummarySharingInputSignal();
  return sub_1BC817260();
}

uint64_t type metadata accessor for SummarySharingInputSignal()
{
  uint64_t result;

  result = qword_1ED6B9478;
  if (!qword_1ED6B9478)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC7440F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v5;
  uint64_t result;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6C98]), sel_initWithHealthStore_, a2);
  objc_msgSend(v5, sel_addObserver_, a1);
  result = sub_1BC6ED7C0(0, &qword_1ED6B85D8);
  a3[3] = result;
  a3[4] = &protocol witness table for HKSummarySharingEntryStore;
  *a3 = v5;
  return result;
}

_QWORD *SummarySharingInputSignal.__allocating_init(context:observer:sourceFactory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t ObjectType;

  v12 = (_QWORD *)swift_allocObject();
  ObjectType = swift_getObjectType();
  return sub_1BC745274(a1, a3, a4, a5, a6, v12, ObjectType, a2);
}

_QWORD *SummarySharingInputSignal.init(context:observer:sourceFactory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1BC745274(a1, a3, a4, a5, a6, v6, ObjectType, a2);
}

uint64_t static SummarySharingInputSignal.identityConfiguration.getter()
{
  uint64_t v0;

  v0 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v0);
  sub_1BC8173E0();
  return sub_1BC8173C8();
}

uint64_t SummarySharingInputSignal.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC14HealthPlatform25SummarySharingInputSignal_identifier;
  v4 = sub_1BC8173EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SummarySharingInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SummarySharingInputSignal.beginObservation(from:configurations:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  os_unfair_lock_s *v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t (*)(char, void *), uint64_t, uint64_t, uint64_t);
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  sub_1BC745358();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = *(os_unfair_lock_s **)(v2 + 48);
  v9 = v8 + 4;
  v10 = v8 + 18;
  os_unfair_lock_lock(v8 + 18);
  sub_1BC744C20(v9, v2);
  os_unfair_lock_unlock(v10);
  os_unfair_lock_lock(v10);
  sub_1BC744514((uint64_t)v9, v2, (uint64_t)v17);
  os_unfair_lock_unlock(v10);
  v11 = v18;
  v12 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  sub_1BC745540(a1, (uint64_t)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v2;
  sub_1BC745588((uint64_t)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  *(_QWORD *)(v14 + ((v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  v15 = *(void (**)(uint64_t (*)(char, void *), uint64_t, uint64_t, uint64_t))(v12 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  v15(sub_1BC7455CC, v14, v11, v12);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
}

Swift::Void __swiftcall SummarySharingInputSignal.stopObservation()()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + 48);
  v2 = v1 + 4;
  v3 = v1 + 18;
  os_unfair_lock_lock(v1 + 18);
  sub_1BC744C20(v2, v0);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1BC744514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  (*(void (**)(uint64_t))(a2 + 16))(a2);
  sub_1BC745A74(a1);
  sub_1BC6FC700(a3, a1);
  v5 = swift_allocObject();
  swift_weakInit();
  result = swift_release();
  *(_QWORD *)(a1 + 40) = sub_1BC745C34;
  *(_QWORD *)(a1 + 48) = v5;
  return result;
}

uint64_t sub_1BC7445A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v13[2];
  uint64_t v14;

  v0 = sub_1BC8173EC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7453AC();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = result;
    v13[1] = *(_QWORD *)(result + OBJC_IVAR____TtC14HealthPlatform25SummarySharingInputSignal_observer + 8);
    swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v10 + OBJC_IVAR____TtC14HealthPlatform25SummarySharingInputSignal_identifier, v0);
    v11 = swift_bridgeObjectRetain();
    v12 = sub_1BC6EBB98(v11);
    swift_bridgeObjectRelease();
    v14 = v12;
    sub_1BC745470();
    sub_1BC6E1788(&qword_1ED6B8468, (uint64_t (*)(uint64_t))sub_1BC745470, MEMORY[0x1E0D2D290]);
    sub_1BC6E1788(&qword_1ED6B8470, (uint64_t (*)(uint64_t))sub_1BC745470, MEMORY[0x1E0DEB3C8]);
    sub_1BC7454F0(&qword_1ED6B8570, (uint64_t)&protocol conformance descriptor for HKSummarySharingEntry);
    sub_1BC81744C();
    v14 = v10;
    type metadata accessor for SummarySharingInputSignal();
    sub_1BC6E1788((unint64_t *)&unk_1ED6B7E58, (uint64_t (*)(uint64_t))type metadata accessor for SummarySharingInputSignal, (uint64_t)&protocol conformance descriptor for SummarySharingInputSignal);
    sub_1BC817374();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC7447C4(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v22;
  id v23;
  unsigned __int8 v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;

  v42 = a4;
  sub_1BC745358();
  v41 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v41 + 64);
  MEMORY[0x1E0C80A78](v9);
  v11 = sub_1BC817590();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v36 - v16;
  if ((a1 & 1) != 0)
  {
    swift_getObjectType();
    sub_1BC8171E8();
    v18 = sub_1BC81756C();
    v19 = sub_1BC817E9C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1BC6DD000, v18, v19, "Started observing summary sharing entry store.", v20, 2u);
      MEMORY[0x1BCCF5BA4](v20, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  else
  {
    if (!a2
      || (v44 = (uint64_t)a2,
          v22 = a2,
          sub_1BC6FD528(0, (unint64_t *)&qword_1ED6B87B0),
          sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA830),
          (swift_dynamicCast() & 1) == 0)
      || (v23 = v43,
          v24 = objc_msgSend(v43, sel_hk_isDatabaseAccessibilityError),
          v23,
          (v24 & 1) == 0))
    {
      v40 = v12;
      swift_getObjectType();
      sub_1BC8171E8();
      v25 = a2;
      v26 = a2;
      v27 = sub_1BC81756C();
      v28 = sub_1BC817E84();
      if (os_log_type_enabled(v27, v28))
      {
        v38 = v11;
        v29 = (uint8_t *)swift_slowAlloc();
        v37 = swift_slowAlloc();
        v43 = a2;
        v44 = v37;
        v39 = a5;
        *(_DWORD *)v29 = 136315138;
        v36[1] = v29 + 4;
        v30 = a2;
        sub_1BC745A20(0, (unint64_t *)&qword_1EF45D080, (unint64_t *)&qword_1ED6B87B0);
        v31 = sub_1BC817AF4();
        v43 = (id)sub_1BC6E14D8(v31, v32, &v44);
        a5 = v39;
        sub_1BC818148();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC6DD000, v27, v28, "Failed to perform initial fetch of sharing entries (%s); retrying.",
          v29,
          0xCu);
        v33 = v37;
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v33, -1, -1);
        MEMORY[0x1BCCF5BA4](v29, -1, -1);

        (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v38);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v11);
      }
    }
    if (qword_1EF45ABF8 != -1)
      swift_once();
    sub_1BC745540(v42, (uint64_t)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    v34 = (*(unsigned __int8 *)(v41 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = a3;
    sub_1BC745588((uint64_t)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v35 + v34);
    *(_QWORD *)(v35 + ((v10 + v34 + 7) & 0xFFFFFFFFFFFFFFF8)) = a5;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BC7C3EDC((uint64_t)sub_1BC745BBC, v35);
    return swift_release();
  }
}

uint64_t sub_1BC744C20(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  if (a1[3])
  {
    sub_1BC6FC700((uint64_t)a1, (uint64_t)v7);
    v4 = v8;
    v5 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a2, v4, v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  }
  result = swift_release();
  a1[5] = nullsub_1;
  a1[6] = 0;
  return result;
}

Swift::Void __swiftcall SummarySharingInputSignal.sharingEntryStoreDidUpdate()()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t (*v4)();

  v1 = *(os_unfair_lock_s **)(v0 + 48);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 18;
  os_unfair_lock_lock(v1 + 18);
  sub_1BC744D20(v2, &v4);
  os_unfair_lock_unlock(v3);
  v4();
  swift_release();
}

uint64_t sub_1BC744D20@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)();
  __int128 v9;
  uint64_t v10;
  __int128 v11[2];

  sub_1BC7459C4(a1, (uint64_t)&v9);
  if (v10)
  {
    sub_1BC6FC848(&v9, (uint64_t)v11);
    v5 = *(_QWORD *)(a1 + 40);
    v4 = *(_QWORD *)(a1 + 48);
    sub_1BC6FC848(v11, (uint64_t)&v9);
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = v4;
    sub_1BC6FC848(&v9, v6 + 32);
    result = swift_retain();
    v8 = sub_1BC745AF4;
  }
  else
  {
    result = sub_1BC745A74((uint64_t)&v9);
    v6 = 0;
    v8 = nullsub_1;
  }
  *a2 = v8;
  a2[1] = (uint64_t (*)())v6;
  return result;
}

uint64_t sub_1BC744DE0(void (*a1)(void), uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a3[3];
  v5 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  a1();
  return swift_bridgeObjectRelease();
}

uint64_t SummarySharingInputSignal.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC14HealthPlatform25SummarySharingInputSignal_identifier;
  v2 = sub_1BC8173EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SummarySharingInputSignal.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC14HealthPlatform25SummarySharingInputSignal_identifier;
  v2 = sub_1BC8173EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC744F9C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC14HealthPlatform25SummarySharingInputSignal_identifier;
  v4 = sub_1BC8173EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BC744FE4()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1BC745018(uint64_t a1, uint64_t a2)
{
  return SummarySharingInputSignal.beginObservation(from:configurations:)(a1, a2);
}

void sub_1BC745038()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 48);
  v2 = v1 + 4;
  v3 = v1 + 18;
  os_unfair_lock_lock(v1 + 18);
  sub_1BC745980(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1BC745088()
{
  sub_1BC6E1788((unint64_t *)&unk_1ED6B7E58, (uint64_t (*)(uint64_t))type metadata accessor for SummarySharingInputSignal, (uint64_t)&protocol conformance descriptor for SummarySharingInputSignal);
  return sub_1BC8171AC();
}

uint64_t sub_1BC7450C8()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_sharingEntries);
  sub_1BC6ED7C0(0, &qword_1ED6B6390);
  v2 = sub_1BC817C5C();

  return v2;
}

uint64_t sub_1BC74512C(uint64_t a1, uint64_t a2)
{
  void **v2;
  void *v3;
  void *v4;
  _QWORD v6[6];

  v3 = *v2;
  v6[4] = a1;
  v6[5] = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1BC76C088;
  v6[3] = &block_descriptor_6;
  v4 = _Block_copy(v6);
  swift_retain();
  objc_msgSend(v3, sel_fetchSharingEntriesWithCompletion_, v4);
  _Block_release(v4);
  return swift_release();
}

id sub_1BC7451C4(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_removeObserver_, a1);
}

_QWORD *sub_1BC7451D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  _QWORD *v14;

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a4;
  v14 = (_QWORD *)swift_allocObject();
  return sub_1BC745274(a1, a2, a3, (uint64_t)sub_1BC7459BC, v13, v14, a6, a7);
}

_QWORD *sub_1BC745274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  _QWORD *v16;
  _OWORD v18[2];
  uint64_t v19;
  uint64_t (*v20)();
  uint64_t v21;

  memset(v18, 0, sizeof(v18));
  v19 = 0;
  v20 = nullsub_1;
  v21 = 0;
  sub_1BC745C3C();
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 72) = 0;
  sub_1BC745C98((uint64_t)v18, v15 + 16);
  sub_1BC745CCC((uint64_t)v18);
  a6[6] = v15;
  sub_1BC8173E0();
  a6[2] = a4;
  a6[3] = a5;
  a6[4] = a1;
  a6[5] = a8;
  v16 = (_QWORD *)((char *)a6 + OBJC_IVAR____TtC14HealthPlatform25SummarySharingInputSignal_observer);
  *v16 = a2;
  v16[1] = a3;
  return a6;
}

void sub_1BC745358()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B7FF8)
  {
    sub_1BC7453AC();
    v0 = sub_1BC818130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B7FF8);
  }
}

void sub_1BC7453AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B7FF0)
  {
    sub_1BC745470();
    sub_1BC6E1788(&qword_1ED6B8468, (uint64_t (*)(uint64_t))sub_1BC745470, MEMORY[0x1E0D2D290]);
    sub_1BC6E1788(&qword_1ED6B8470, (uint64_t (*)(uint64_t))sub_1BC745470, MEMORY[0x1E0DEB3C8]);
    sub_1BC7454F0(&qword_1ED6B8570, (uint64_t)&protocol conformance descriptor for HKSummarySharingEntry);
    v0 = sub_1BC817464();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B7FF0);
  }
}

void sub_1BC745470()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8460)
  {
    sub_1BC6ED7C0(255, &qword_1ED6B6390);
    sub_1BC7454F0(&qword_1ED6B8578, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1BC817DC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8460);
  }
}

uint64_t sub_1BC7454F0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BC6ED7C0(255, &qword_1ED6B6390);
    result = MEMORY[0x1BCCF5AB4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC745540(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC745358();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC745588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC745358();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC7455CC(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_1BC745358();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_1BC7447C4(a1, a2, *(_QWORD *)(v2 + 16), v2 + v7, *(_QWORD *)(v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BC745630()
{
  return sub_1BC6E1788(&qword_1ED6B9470, (uint64_t (*)(uint64_t))type metadata accessor for SummarySharingInputSignal, (uint64_t)&protocol conformance descriptor for SummarySharingInputSignal);
}

uint64_t sub_1BC74565C()
{
  return sub_1BC6E1788(&qword_1ED6B7FE8, (uint64_t (*)(uint64_t))sub_1BC7453AC, MEMORY[0x1E0D2D1A8]);
}

uint64_t dispatch thunk of SummarySharingEntrySource.sharingEntries.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SummarySharingEntrySource.fetchSharingEntries(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of SummarySharingEntrySource.remove(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1BC7456A0()
{
  return type metadata accessor for SummarySharingInputSignal();
}

uint64_t sub_1BC7456A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC8173EC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SummarySharingInputSignal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SummarySharingInputSignal.__allocating_init(context:observer:sourceFactory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t destroy for SummarySharingInputSignal.ProtectedState(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_0(a1);
  return swift_release();
}

uint64_t initializeWithCopy for SummarySharingInputSignal.ProtectedState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SummarySharingInputSignal.ProtectedState(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  v7 = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SummarySharingInputSignal.ProtectedState(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SummarySharingInputSignal.ProtectedState(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SummarySharingInputSignal.ProtectedState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarySharingInputSignal.ProtectedState()
{
  return &type metadata for SummarySharingInputSignal.ProtectedState;
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1BC745980(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BC744C20(a1, v1);
}

uint64_t sub_1BC745998()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC7459BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC7440F0(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BC7459C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC745A20(0, &qword_1ED6B7E50, &qword_1ED6B7E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC745A20(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC6FD528(255, a3);
    v4 = sub_1BC818130();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC745A74(uint64_t a1)
{
  uint64_t v2;

  sub_1BC745A20(0, &qword_1ED6B7E50, &qword_1ED6B7E48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC745AC8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_1BC745AF4()
{
  uint64_t v0;

  return sub_1BC744DE0(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), (_QWORD *)(v0 + 32));
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BC745358();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  sub_1BC7453AC();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC745BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  sub_1BC745358();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return SummarySharingInputSignal.beginObservation(from:configurations:)(v0 + v3, *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BC745C10()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC745C34()
{
  return sub_1BC7445A8();
}

void sub_1BC745C3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B64E8)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B64E8);
  }
}

uint64_t sub_1BC745C98(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SummarySharingInputSignal.ProtectedState(a2, a1);
  return a2;
}

uint64_t sub_1BC745CCC(uint64_t a1)
{
  destroy for SummarySharingInputSignal.ProtectedState(a1);
  return a1;
}

unint64_t static OpenTransactionBuilderManager.regenerateAllSummariesNeededDefaultsKey.getter()
{
  return 0xD000000000000045;
}

uint64_t static OpenTransactionBuilderManager.MakeTransactionError.== infix(_:_:)()
{
  return 1;
}

uint64_t OpenTransactionBuilderManager.MakeTransactionError.hash(into:)()
{
  return sub_1BC818748();
}

uint64_t OpenTransactionBuilderManager.MakeTransactionError.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t sub_1BC745D80()
{
  void *v0;
  uint64_t v1;
  uint64_t result;

  if (qword_1ED6B9C70 != -1)
    swift_once();
  v0 = (void *)qword_1ED6B9C60;
  type metadata accessor for OpenTransactionBuilderManager();
  v1 = swift_allocObject();
  result = OpenTransactionBuilderManager.init(userDefaults:)((uint64_t)v0);
  qword_1ED6B9498 = v1;
  return result;
}

uint64_t OpenTransactionBuilderManager.__allocating_init(userDefaults:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  OpenTransactionBuilderManager.init(userDefaults:)(a1);
  return v2;
}

uint64_t static OpenTransactionBuilderManager.shared.getter()
{
  if (qword_1ED6B94A8 != -1)
    swift_once();
  return swift_retain();
}

unint64_t sub_1BC745E68(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t (*v10)(void);
  _QWORD v12[2];
  unint64_t v13;
  unint64_t v14;

  v4 = sub_1BC816F3C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v13 = 0x2864657461657263;
    v14 = 0xE800000000000000;
    v8 = *(void **)(a1 + 16);
    sub_1BC70F57C(a1, 1);
    v9 = objc_msgSend(v8, sel_transactionUUID);
    sub_1BC816F24();

    sub_1BC816F00();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEEB08];
    sub_1BC817B48();
    sub_1BC74D138(a1, 1, v10, MEMORY[0x1E0DEEE30]);
  }
  else
  {
    v13 = 0;
    v14 = 0xE000000000000000;
    sub_1BC8182C8();
    swift_bridgeObjectRelease();
    v13 = 0xD00000000000001CLL;
    v14 = 0x80000001BC827C80;
    v12[1] = *(_QWORD *)(a1 + 16);
    sub_1BC818670();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
  }
  return v13;
}

unint64_t sub_1BC74600C()
{
  uint64_t v0;

  return sub_1BC745E68(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t OpenTransactionBuilderManager.init(userDefaults:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v2 = sub_1BC817FA4();
  v11 = *(_QWORD *)(v2 - 8);
  v12 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC817F5C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1BC817974();
  MEMORY[0x1E0C80A78](v7);
  sub_1BC746258();
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 16) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v1 + 16) = v8;
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  sub_1BC817968();
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1BC6E1788((unint64_t *)&unk_1ED6BA4C0, v6, MEMORY[0x1E0DEF828]);
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA420, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC7188D8(qword_1ED6BA430, (unint64_t *)&unk_1ED6BA420, v6);
  sub_1BC818184();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v4, *MEMORY[0x1E0DEF8D0], v12);
  *(_QWORD *)(v1 + 24) = sub_1BC817FC8();
  *(_QWORD *)(v1 + 32) = 0xD000000000000045;
  v9 = v13;
  *(_QWORD *)(v1 + 40) = 0x80000001BC827B70;
  *(_QWORD *)(v1 + 48) = v9;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0xE000000000000000;
  *(_BYTE *)(v1 + 72) = 0;
  return v1;
}

void sub_1BC746258()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B96F0)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B96F0);
  }
}

void sub_1BC7462B4(void *a1, void (*a2)(void *, uint64_t), uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  os_unfair_lock_s *v15;
  uint64_t *v16;
  os_unfair_lock_s *v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  _QWORD *v41;
  uint64_t (*v42)(uint64_t);
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t aBlock;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  _QWORD *v56;

  v4 = v3;
  v48 = *v4;
  v8 = sub_1BC817950();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1BC817974();
  v12 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = objc_msgSend(a1, sel_profileIdentifier);
  if (objc_msgSend(v49, sel_type) == (id)1 || objc_msgSend(v49, sel_type) == (id)3)
  {
    v45 = v9;
    v46 = a1;
    v15 = (os_unfair_lock_s *)v4[2];
    v16 = (uint64_t *)&v15[4];
    v17 = v15 + 6;
    os_unfair_lock_lock(v15 + 6);
    sub_1BC74698C(v16, v49, (uint64_t)a2, a3, v48, (uint64_t)&aBlock);
    os_unfair_lock_unlock(v17);
    v18 = v52;
    if (v52 == 255)
    {
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v27 = sub_1BC817590();
      __swift_project_value_buffer(v27, (uint64_t)qword_1ED6BB5D0);
      v28 = sub_1BC81756C();
      v29 = sub_1BC817E9C();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        v31 = swift_slowAlloc();
        aBlock = v31;
        *(_DWORD *)v30 = 136446210;
        v32 = sub_1BC818814();
        v50 = sub_1BC6E14D8(v32, v33, &aBlock);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v28, v29, "[%{public}s] No in-memory transaction builder found, creating it", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v31, -1, -1);
        MEMORY[0x1BCCF5BA4](v30, -1, -1);
      }

      v34 = v46;
      v35 = swift_allocObject();
      *(_QWORD *)(v35 + 16) = v4;
      *(_QWORD *)(v35 + 24) = v34;
      v36 = objc_allocWithZone(MEMORY[0x1E0CB6B88]);
      v55 = sub_1BC74C6F4;
      v56 = (_QWORD *)v35;
      aBlock = MEMORY[0x1E0C809B0];
      v52 = 1107296256;
      v53 = sub_1BC74C608;
      v54 = &block_descriptor_7;
      v37 = _Block_copy(&aBlock);
      swift_retain();
      v38 = v34;
      v39 = objc_msgSend(v36, sel_initWithCommittedTransactions_handler_, 0, v37);
      _Block_release(v37);
      swift_release();
      objc_msgSend(v38, sel_executeQuery_, v39);

    }
    else
    {
      v19 = aBlock;
      if ((v52 & 1) != 0)
      {
        v48 = v4[3];
        v41 = (_QWORD *)swift_allocObject();
        v41[2] = a2;
        v41[3] = a3;
        v41[4] = v19;
        v55 = sub_1BC74C764;
        v56 = v41;
        aBlock = MEMORY[0x1E0C809B0];
        v52 = 1107296256;
        v53 = sub_1BC719640;
        v54 = &block_descriptor_6;
        v46 = _Block_copy(&aBlock);
        sub_1BC74C790(v19, v18);
        sub_1BC74C790(v19, v18);
        swift_retain();
        sub_1BC817968();
        v50 = MEMORY[0x1E0DEE9D8];
        v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
        sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v42, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC7188D8((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v42);
        sub_1BC818184();
        v43 = v46;
        MEMORY[0x1BCCF4C68](0, v14, v11, v46);

        _Block_release(v43);
        sub_1BC74C704(v19, v18);
        sub_1BC74C704(v19, v18);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v8);
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v47);
        swift_release();
      }
      else
      {
        if (qword_1ED6BB5B0 != -1)
          swift_once();
        v20 = sub_1BC817590();
        __swift_project_value_buffer(v20, (uint64_t)qword_1ED6BB5D0);
        v21 = sub_1BC81756C();
        v22 = sub_1BC817E9C();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = (uint8_t *)swift_slowAlloc();
          v24 = swift_slowAlloc();
          aBlock = v24;
          *(_DWORD *)v23 = 136446210;
          v25 = sub_1BC818814();
          v50 = sub_1BC6E14D8(v25, v26, &aBlock);
          sub_1BC818148();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC6DD000, v21, v22, "[%{public}s] Waiting for in-memory transaction builder creation, completion enqueued", v23, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCF5BA4](v24, -1, -1);
          MEMORY[0x1BCCF5BA4](v23, -1, -1);
        }

        sub_1BC74C704(v19, v18);
      }
    }
  }
  else
  {
    sub_1BC74C6A8();
    v40 = (void *)swift_allocError();
    a2(v40, 1);

  }
}

void sub_1BC74698C(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  id v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  id v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v12 = *a1;
  if (!*(_QWORD *)(*a1 + 16))
    goto LABEL_6;
  v13 = a2;
  v14 = sub_1BC706894((uint64_t)v13);
  if ((v15 & 1) == 0)
  {

LABEL_6:
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = a3;
    v20[3] = a4;
    v20[4] = a5;
    sub_1BC6ECA64(0, &qword_1ED6B9770, (uint64_t (*)(uint64_t))sub_1BC732188, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1BC81A0F0;
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = sub_1BC74D210;
    *(_QWORD *)(v22 + 24) = v20;
    *(_QWORD *)(v21 + 32) = sub_1BC74D2A0;
    *(_QWORD *)(v21 + 40) = v22;
    v23 = a2;
    swift_retain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v32 = *a1;
    *a1 = 0x8000000000000000;
    sub_1BC71F898(v21, 0, v23, isUniquelyReferenced_nonNull_native);
    *a1 = v32;
    swift_release();

    swift_bridgeObjectRelease();
    v17 = 0;
    v19 = -1;
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(v12 + 56) + 16 * v14;
  v17 = *(_QWORD **)v16;
  v18 = *(_BYTE *)(v16 + 8);
  sub_1BC70F57C(*(_QWORD *)v16, v18);

  if ((v18 & 1) != 0)
  {
    v19 = 1;
  }
  else
  {
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = a3;
    v25[3] = a4;
    v25[4] = a5;
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = sub_1BC74D520;
    *(_QWORD *)(v26 + 24) = v25;
    swift_retain();
    swift_retain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_1BC725C48(0, v17[2] + 1, 1, v17);
    v28 = v17[2];
    v27 = v17[3];
    if (v28 >= v27 >> 1)
      v17 = sub_1BC725C48((_QWORD *)(v27 > 1), v28 + 1, 1, v17);
    v17[2] = v28 + 1;
    v29 = &v17[2 * v28];
    v29[4] = sub_1BC74D2A0;
    v29[5] = v26;
    swift_release();
    v30 = v13;
    swift_bridgeObjectRetain();
    v31 = swift_isUniquelyReferenced_nonNull_native();
    v33 = *a1;
    *a1 = 0x8000000000000000;
    sub_1BC71F898((uint64_t)v17, 0, v30, v31);
    *a1 = v33;
    swift_release();

    swift_bridgeObjectRelease();
    v19 = 0;
  }
LABEL_7:
  *(_QWORD *)a6 = v17;
  *(_BYTE *)(a6 + 8) = v19;
}

uint64_t sub_1BC746C7C(void *a1, char a2, uint64_t (*a3)(void *, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t (*v15)(void);
  uint64_t (*v16)(void);
  uint64_t (*v17)(void);
  uint64_t (*v18)(void);
  uint64_t v20;

  v5 = a2 & 1;
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v6 = sub_1BC817590();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED6BB5D0);
  sub_1BC74D1E0(a1, v5);
  sub_1BC74D1E0(a1, v5);
  v7 = sub_1BC81756C();
  v8 = sub_1BC817E9C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v20 = v10;
    *(_DWORD *)v9 = 136446466;
    v11 = sub_1BC818814();
    sub_1BC6E14D8(v11, v12, &v20);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_1BC74D1E0(a1, v5);
    sub_1BC74D230(0, (unint64_t *)&qword_1ED6B9778, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0DEE030]);
    v13 = sub_1BC817AF4();
    sub_1BC6E14D8(v13, v14, &v20);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x1E0DEEE30];
    v16 = MEMORY[0x1E0DEEBF0];
    sub_1BC74D138((uint64_t)a1, v5, MEMORY[0x1E0DEEE30], MEMORY[0x1E0DEEBF0]);
    sub_1BC74D138((uint64_t)a1, v5, v15, v16);
    _os_log_impl(&dword_1BC6DD000, v7, v8, "[%{public}s] Enqueued completion notified of result %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v10, -1, -1);
    MEMORY[0x1BCCF5BA4](v9, -1, -1);
  }
  else
  {
    v17 = MEMORY[0x1E0DEEE30];
    v18 = MEMORY[0x1E0DEEBF0];
    sub_1BC74D138((uint64_t)a1, v5, MEMORY[0x1E0DEEE30], MEMORY[0x1E0DEEBF0]);
    sub_1BC74D138((uint64_t)a1, v5, v17, v18);
  }

  return a3(a1, v5);
}

uint64_t sub_1BC746F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;

  if (a2)
    v7 = a2;
  else
    v7 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1BC746F80(a5, v7, a3);
  return swift_bridgeObjectRelease();
}

void sub_1BC746F80(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  void **p_weak_ivar_lyt;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  unint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  id v92;
  id v93;
  char *v94;
  void *v95;
  id v96;
  id v97;
  _QWORD *v98;
  id v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  uint8_t *v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  _QWORD *v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;

  v7 = *v3;
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC6ECA64(0, &qword_1ED6B7C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v107 - v10;
  v12 = sub_1BC816F3C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6B9BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (uint64_t)&v107 - v17;
  if (a3)
  {
    v19 = (id)a3;
    v20 = objc_msgSend(a1, sel_profileIdentifier);
    sub_1BC7480DC(v20, (void *)a3);

    return;
  }
  v108 = v15;
  v109 = v13;
  v110 = v12;
  v111 = v11;
  v21 = MEMORY[0x1E0DEE9D8];
  v116 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      a3 = a2;
    else
      a3 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v22 = sub_1BC8184E4();
  }
  else
  {
    v22 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v113 = v3;
  v114 = a1;
  v112 = v7;
  if (!v22)
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
    v117 = v21;
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_46;
LABEL_24:
    if ((v18 & 0x4000000000000000) != 0)
      goto LABEL_46;
    a3 = *(_QWORD *)(v18 + 16);
    swift_retain();
    v115 = v18;
    if (a3)
      goto LABEL_26;
LABEL_47:
    swift_release();
    a3 = MEMORY[0x1E0DEE9D8];
LABEL_48:
    LODWORD(v21) = a3 < 0 || (a3 & 0x4000000000000000) != 0;
    if ((_DWORD)v21 == 1)
    {
      swift_retain();
      if (sub_1BC8184E4())
        goto LABEL_53;
    }
    else
    {
      v42 = *(_QWORD *)(a3 + 16);
      swift_retain();
      if (v42)
      {
LABEL_53:
        if ((a3 & 0xC000000000000001) != 0)
          goto LABEL_98;
        if (*(_QWORD *)(a3 + 16))
        {
          v43 = *(id *)(a3 + 32);
          goto LABEL_56;
        }
        __break(1u);
        goto LABEL_100;
      }
    }
    swift_release();
    swift_release_n();
    if (qword_1ED6BB5B0 == -1)
    {
LABEL_93:
      v100 = sub_1BC817590();
      __swift_project_value_buffer(v100, (uint64_t)qword_1ED6BB5D0);
      v101 = sub_1BC81756C();
      v102 = sub_1BC817E9C();
      if (os_log_type_enabled(v101, v102))
      {
        v103 = (uint8_t *)swift_slowAlloc();
        v104 = swift_slowAlloc();
        *(_QWORD *)&v118 = v104;
        *(_DWORD *)v103 = 136446210;
        v105 = sub_1BC818814();
        v116 = sub_1BC6E14D8(v105, v106, (uint64_t *)&v118);
        a1 = v114;
        sub_1BC818148();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v101, v102, "[%{public}s] No healthappd managed open transactions, creating fresh transaction", v103, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v104, -1, -1);
        MEMORY[0x1BCCF5BA4](v103, -1, -1);
      }

      sub_1BC74875C(a1);
      return;
    }
LABEL_100:
    swift_once();
    goto LABEL_93;
  }
  if (v22 < 1)
  {
    __break(1u);
    goto LABEL_97;
  }
  for (i = 0; i != v22; ++i)
  {
    if ((a2 & 0xC000000000000001) != 0)
      v25 = (id)MEMORY[0x1BCCF4FB0](i, a2);
    else
      v25 = *(id *)(a2 + 8 * i + 32);
    v26 = v25;
    v27 = objc_msgSend(v25, sel_metadata);
    v28 = sub_1BC817A34();

    if (*(_QWORD *)(v28 + 16) && (v29 = sub_1BC706608(0xD000000000000032, 0x80000001BC8275D0), (v30 & 1) != 0))
    {
      sub_1BC6E1A84(*(_QWORD *)(v28 + 56) + 32 * v29, (uint64_t)&v118);
    }
    else
    {
      v118 = 0u;
      v119 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v119 + 1))
    {
      sub_1BC6EF7BC((uint64_t)&v118);
      v24 = sub_1BC816EF4();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v18, 1, 1, v24);
LABEL_9:
      sub_1BC6E148C(v18);
      sub_1BC818358();
      sub_1BC818388();
      sub_1BC818394();
      sub_1BC818364();
      continue;
    }
    v31 = sub_1BC816EF4();
    v32 = swift_dynamicCast();
    v33 = *(_QWORD *)(v31 - 8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v18, v32 ^ 1u, 1, v31);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v18, 1, v31) == 1)
      goto LABEL_9;
    sub_1BC6E148C(v18);

  }
  swift_bridgeObjectRelease();
  v18 = v116;
  a1 = v114;
  LODWORD(v21) = MEMORY[0x1E0DEE9D8];
  v117 = MEMORY[0x1E0DEE9D8];
  if ((v116 & 0x8000000000000000) == 0)
    goto LABEL_24;
LABEL_46:
  swift_retain();
  a3 = sub_1BC8184E4();
  v115 = v18;
  if (!a3)
    goto LABEL_47;
LABEL_26:
  if (a3 >= 1)
  {
    v34 = 0;
    v35 = v18 & 0xC000000000000001;
    while (1)
    {
      if (v35)
        v36 = (id)MEMORY[0x1BCCF4FB0](v34, v18);
      else
        v36 = *(id *)(v18 + 8 * v34 + 32);
      v37 = v36;
      v38 = objc_msgSend(v36, sel_metadata);
      v39 = sub_1BC817A34();

      if (*(_QWORD *)(v39 + 16) && (v40 = sub_1BC706608(0xD000000000000048, 0x80000001BC8276D0), (v41 & 1) != 0))
      {
        sub_1BC6E1A84(*(_QWORD *)(v39 + 56) + 32 * v40, (uint64_t)&v118);
      }
      else
      {
        v118 = 0u;
        v119 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v119 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_1BC818358();
          sub_1BC818388();
          sub_1BC818394();
          sub_1BC818364();
          goto LABEL_30;
        }
      }
      else
      {
        sub_1BC6EF7BC((uint64_t)&v118);
      }

LABEL_30:
      v18 = v115;
      if (a3 == ++v34)
      {
        swift_release();
        a3 = v117;
        a1 = v114;
        goto LABEL_48;
      }
    }
  }
LABEL_97:
  __break(1u);
LABEL_98:
  v43 = (id)MEMORY[0x1BCCF4FB0](0, a3);
LABEL_56:
  v44 = v43;
  swift_release();
  if ((_DWORD)v21)
  {
    swift_bridgeObjectRetain();
    v45 = sub_1BC8184E4();
    swift_release();
    if (v45 != 1)
    {

      swift_bridgeObjectRetain();
      v46 = sub_1BC8184E4();
      swift_release_n();
      if (v46 < 2)
        goto LABEL_73;
      goto LABEL_68;
    }
LABEL_61:
    swift_release();
    v47 = sub_1BC73B9F4();
    v49 = v48;
    if (qword_1ED6B96B8 != -1)
      swift_once();
    if (!v49)
      goto LABEL_80;
    if (v47 == qword_1ED6B96A8 && v49 == unk_1ED6B96B0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_76;
    }
    v58 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v58 & 1) != 0)
    {
      swift_release();
LABEL_76:
      v59 = v108;
      v60 = v109;
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v61 = sub_1BC817590();
      __swift_project_value_buffer(v61, (uint64_t)qword_1ED6BB5D0);
      v62 = v44;
      v63 = sub_1BC81756C();
      v64 = sub_1BC817E9C();
      p_weak_ivar_lyt = &CloudSyncStatusInputSignal.weak_ivar_lyt;
      if (os_log_type_enabled(v63, v64))
      {
        v66 = swift_slowAlloc();
        v115 = swift_slowAlloc();
        *(_QWORD *)&v118 = v115;
        *(_DWORD *)v66 = 136446466;
        v67 = sub_1BC818814();
        v116 = sub_1BC6E14D8(v67, v68, (uint64_t *)&v118);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        *(_WORD *)(v66 + 12) = 2082;
        v69 = objc_msgSend(v62, sel_UUID);
        sub_1BC816F24();

        v70 = sub_1BC816F00();
        v71 = v59;
        v73 = v72;
        v74 = *(void (**)(char *, uint64_t))(v60 + 8);
        v75 = v60;
        v76 = v110;
        v74(v71, v110);
        v77 = v70;
        p_weak_ivar_lyt = (void **)(&CloudSyncStatusInputSignal + 56);
        v116 = sub_1BC6E14D8(v77, v73, (uint64_t *)&v118);
        sub_1BC818148();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v63, v64, "[%{public}s] Found only one healthappd managed open transaction, using %{public}s", (uint8_t *)v66, 0x16u);
        v78 = v115;
        swift_arrayDestroy();
        a1 = v114;
        MEMORY[0x1BCCF5BA4](v78, -1, -1);
        MEMORY[0x1BCCF5BA4](v66, -1, -1);

      }
      else
      {

        v75 = v60;
        v76 = v110;
      }
      v92 = a1;
      v93 = objc_msgSend(v62, (SEL)p_weak_ivar_lyt[454]);
      v94 = v111;
      sub_1BC816F24();

      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v94, 0, 1, v76);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v94, 1, v76) == 1)
      {
        v95 = 0;
      }
      else
      {
        v95 = (void *)sub_1BC816F0C();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v94, v76);
      }
      v96 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6B78]), sel_initWithHealthStore_transactionUUID_, v92, v95);

      type metadata accessor for CachingSharedSummaryTransactionBuilder();
      swift_allocObject();
      v97 = v96;
      v98 = sub_1BC6F630C(v97, (uint64_t)sub_1BC747E90, 0);

      v99 = objc_msgSend(v92, sel_profileIdentifier);
      sub_1BC747E98(v99, (uint64_t)v98);

      swift_release();
    }
    else
    {
LABEL_80:
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v79 = sub_1BC817590();
      __swift_project_value_buffer(v79, (uint64_t)qword_1ED6BB5D0);
      v80 = v44;
      v81 = sub_1BC81756C();
      v82 = sub_1BC817E9C();
      if (os_log_type_enabled(v81, v82))
      {
        v83 = swift_slowAlloc();
        v84 = swift_slowAlloc();
        v116 = v84;
        *(_DWORD *)v83 = 136446722;
        v85 = sub_1BC818814();
        *(_QWORD *)&v118 = sub_1BC6E14D8(v85, v86, &v116);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        *(_WORD *)(v83 + 12) = 2080;
        *(_QWORD *)&v118 = sub_1BC73B9F4();
        *((_QWORD *)&v118 + 1) = v87;
        sub_1BC74CEB4(0, (unint64_t *)&qword_1ED6BAC70);
        v88 = sub_1BC817AF4();
        *(_QWORD *)&v118 = sub_1BC6E14D8(v88, v89, &v116);
        sub_1BC818148();

        swift_bridgeObjectRelease();
        *(_WORD *)(v83 + 22) = 2080;
        v90 = qword_1ED6B96A8;
        v91 = unk_1ED6B96B0;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v118 = sub_1BC6E14D8(v90, v91, &v116);
        v18 = v115;
        sub_1BC818148();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v81, v82, "[%{public}s] Open transaction does not match healthappd managed transaction version %s does not match current version %s. Discarding all transactions and creating a fresh transaction.", (uint8_t *)v83, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v84, -1, -1);
        MEMORY[0x1BCCF5BA4](v83, -1, -1);

      }
      else
      {

      }
      sub_1BC748CBC(v114, v18, 0);
      swift_release();

    }
  }
  else
  {
    if (*(_QWORD *)(a3 + 16) == 1)
      goto LABEL_61;

    v50 = *(_QWORD *)(a3 + 16);
    swift_release();
    if (v50 < 2)
      goto LABEL_73;
LABEL_68:
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v51 = sub_1BC817590();
    __swift_project_value_buffer(v51, (uint64_t)qword_1ED6BB5D0);
    v52 = sub_1BC81756C();
    v53 = sub_1BC817E84();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      v55 = swift_slowAlloc();
      *(_QWORD *)&v118 = v55;
      *(_DWORD *)v54 = 136446210;
      v56 = sub_1BC818814();
      v116 = sub_1BC6E14D8(v56, v57, (uint64_t *)&v118);
      a1 = v114;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v52, v53, "[%{public}s] More than one healthappd managed open transaction detected, discarding all open transactions and creating a fresh transaction", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v55, -1, -1);
      MEMORY[0x1BCCF5BA4](v54, -1, -1);
    }

    sub_1BC748CBC(a1, v18, 0);
LABEL_73:
    swift_release();
  }
}

uint64_t sub_1BC747E90()
{
  return 0;
}

uint64_t sub_1BC747E98(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[7];

  v5 = sub_1BC817950();
  v20 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BC817974();
  v8 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(os_unfair_lock_s **)(v2 + 16);
  v12 = (uint64_t *)&v11[4];
  v13 = v11 + 6;
  os_unfair_lock_lock(v11 + 6);
  sub_1BC7483C8(v12, a1, a2, 1u, aBlock);
  os_unfair_lock_unlock(v13);
  v14 = aBlock[0];
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a2;
  aBlock[4] = (uint64_t)sub_1BC74CE98;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC719640;
  aBlock[3] = (uint64_t)&block_descriptor_63;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_1BC817968();
  v21 = MEMORY[0x1E0DEE9D8];
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC7188D8((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v17);
  sub_1BC818184();
  MEMORY[0x1BCCF4C68](0, v10, v7, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
  return swift_release();
}

uint64_t sub_1BC7480DC(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t aBlock[7];

  v5 = sub_1BC817950();
  v21 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BC817974();
  v8 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(os_unfair_lock_s **)(v2 + 16);
  v12 = (uint64_t *)&v11[4];
  v13 = v11 + 6;
  os_unfair_lock_lock(v11 + 6);
  sub_1BC7483C8(v12, a1, 0, 0xFFu, aBlock);
  os_unfair_lock_unlock(v13);
  v14 = aBlock[0];
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a2;
  aBlock[4] = (uint64_t)sub_1BC74CE38;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC719640;
  aBlock[3] = (uint64_t)&block_descriptor_56;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  sub_1BC817968();
  v22 = MEMORY[0x1E0DEE9D8];
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC7188D8((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v18);
  sub_1BC818184();
  MEMORY[0x1BCCF4C68](0, v10, v7, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v20);
  return swift_release();
}

uint64_t sub_1BC748320(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v6;
  void (*v7)(uint64_t *);
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = swift_bridgeObjectRetain() + 40;
    do
    {
      v7 = *(void (**)(uint64_t *))(v6 - 8);
      v8 = a2;
      v9 = a3 & 1;
      swift_retain();
      v7(&v8);
      swift_release();
      v6 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC7483C8@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  id v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unsigned __int8 v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t result;
  id v27;
  char isUniquelyReferenced_nonNull_native;
  id v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;

  v6 = *a1;
  if (!*(_QWORD *)(*a1 + 16))
    goto LABEL_6;
  v10 = a2;
  v11 = sub_1BC706894((uint64_t)v10);
  if ((v12 & 1) == 0)
  {

LABEL_6:
    v14 = 0;
    v16 = -1;
    goto LABEL_7;
  }
  v13 = *(_QWORD *)(v6 + 56) + 16 * v11;
  v14 = *(_QWORD *)v13;
  v15 = *(_BYTE *)(v13 + 8);
  sub_1BC70F57C(*(_QWORD *)v13, v15);

  if ((v15 & 1) == 0)
  {
    if (a4 == 0xFF)
    {
      v29 = v10;
      sub_1BC70F57C(v14, 0);
      v30 = sub_1BC71E2B8((uint64_t)v29);
      v32 = v31;

      sub_1BC74C704(v30, v32);
    }
    else
    {
      v27 = v10;
      sub_1BC70F57C(v14, 0);
      sub_1BC74C790(a3, a4);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v33 = *a1;
      *a1 = 0x8000000000000000;
      sub_1BC71F898(a3, a4 & 1, v27, isUniquelyReferenced_nonNull_native);
      *a1 = v33;

      swift_bridgeObjectRelease();
    }
    result = sub_1BC74D138(v14, 0, MEMORY[0x1E0DEEB08], MEMORY[0x1E0DEEE30]);
    goto LABEL_13;
  }
  v16 = 1;
LABEL_7:
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v17 = sub_1BC817590();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED6BB5D0);
  sub_1BC74C790(v14, v16);
  sub_1BC74C790(v14, v16);
  v18 = sub_1BC81756C();
  v19 = sub_1BC817E90();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v34 = v21;
    *(_DWORD *)v20 = 136446466;
    v22 = sub_1BC818814();
    sub_1BC6E14D8(v22, v23, &v34);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    sub_1BC74C790(v14, v16);
    sub_1BC74CEB4(0, &qword_1EF45B7C0);
    v24 = sub_1BC817AF4();
    sub_1BC6E14D8(v24, v25, &v34);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    sub_1BC74C704(v14, v16);
    sub_1BC74C704(v14, v16);
    _os_log_impl(&dword_1BC6DD000, v18, v19, "[%{public}s] Expected current state to be in progress, but is %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v21, -1, -1);
    MEMORY[0x1BCCF5BA4](v20, -1, -1);
  }
  else
  {
    sub_1BC74C704(v14, v16);
    sub_1BC74C704(v14, v16);
  }

  result = sub_1BC74C704(v14, v16);
  v14 = MEMORY[0x1E0DEE9D8];
LABEL_13:
  *a5 = v14;
  return result;
}

void sub_1BC74875C(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[6];

  sub_1BC748A30();
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6B78]), sel_initWithHealthStore_, a1);
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6BA578, (uint64_t (*)(uint64_t))sub_1BC6EF850, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(inited + 32) = 0xD000000000000048;
  *(_QWORD *)(inited + 40) = 0x80000001BC8276D0;
  if (qword_1ED6B96B8 != -1)
    swift_once();
  v6 = qword_1ED6B96A8;
  v5 = unk_1ED6B96B0;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v5;
  swift_bridgeObjectRetain();
  sub_1BC710164(inited);
  v7 = (void *)sub_1BC817A28();
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v1;
  v8[3] = a1;
  v8[4] = v3;
  v12[4] = sub_1BC74CE20;
  v12[5] = v8;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1BC76C088;
  v12[3] = &block_descriptor_50;
  v9 = _Block_copy(v12);
  swift_retain();
  v10 = a1;
  v11 = v3;
  swift_release();
  objc_msgSend(v11, sel_addMetadata_completion_, v7, v9);
  _Block_release(v9);

}

void sub_1BC74892C(int a1, id a2, uint64_t a3, void *a4, void *a5)
{
  id v7;
  id v8;
  id v10;
  _QWORD *v11;
  id v12;

  if (a2)
  {
    v7 = a2;
    v8 = objc_msgSend(a4, sel_profileIdentifier);
    sub_1BC7480DC(v8, a2);

  }
  else
  {
    type metadata accessor for CachingSharedSummaryTransactionBuilder();
    swift_allocObject();
    v10 = a5;
    v11 = sub_1BC6F630C(v10, (uint64_t)sub_1BC747E90, 0);

    v12 = objc_msgSend(a4, sel_profileIdentifier);
    sub_1BC747E98(v12, (uint64_t)v11);
    swift_release();

  }
}

uint64_t sub_1BC748A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[3];
  uint64_t v18;
  unint64_t v19;

  v1 = v0;
  v2 = sub_1BC816EF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v6 = sub_1BC817590();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED6BB5D0);
  v7 = sub_1BC81756C();
  v8 = sub_1BC817E9C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v17[1] = v1;
    v10 = (uint8_t *)v9;
    v11 = swift_slowAlloc();
    v18 = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = sub_1BC818814();
    v17[2] = sub_1BC6E14D8(v12, v13, &v18);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v7, v8, "[%{public}s] Setting user defaults flag to indicate all summaries need to be regenerated", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v11, -1, -1);
    MEMORY[0x1BCCF5BA4](v10, -1, -1);
  }

  v18 = 0;
  v19 = 0xE000000000000000;
  sub_1BC8182C8();
  swift_bridgeObjectRelease();
  v18 = 0xD00000000000001DLL;
  v19 = 0x80000001BC827C60;
  sub_1BC816EE8();
  sub_1BC6E1788(&qword_1ED6B7C30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
  sub_1BC818670();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = v18;
  v15 = v19;
  swift_beginAccess();
  sub_1BC74CCC4(v14, v15);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void sub_1BC748CBC(void *a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  _QWORD *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  os_log_t v47;
  uint64_t v48;
  _QWORD v49[2];
  uint64_t v50;
  int v51;
  uint8_t *v52;
  os_log_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t aBlock[6];
  uint64_t v58;
  uint64_t v59;

  v4 = v3;
  v8 = *v3;
  sub_1BC6ECA64(0, &qword_1ED6B7C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v49 - v10;
  v12 = sub_1BC816F3C();
  v56 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = v13;
  if (!(a2 >> 62))
  {
    v16 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v16 > a3)
      goto LABEL_3;
LABEL_12:
    if (qword_1ED6BB5B0 == -1)
      goto LABEL_13;
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  v12 = v55;
  v16 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  if (v16 <= a3)
    goto LABEL_12;
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v17 = (id)MEMORY[0x1BCCF4FB0](a3, a2);
    v16 = v56;
    goto LABEL_7;
  }
  v16 = v56;
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a3)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_once();
LABEL_13:
    v26 = sub_1BC817590();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED6BB5D0);
    swift_bridgeObjectRetain_n();
    v27 = sub_1BC81756C();
    v28 = sub_1BC817E9C();
    if (os_log_type_enabled(v27, (os_log_type_t)v28))
    {
      v51 = v28;
      v53 = v27;
      v54 = a1;
      v29 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      aBlock[0] = v50;
      *(_DWORD *)v29 = 136446466;
      v30 = sub_1BC818814();
      v58 = sub_1BC6E14D8(v30, v31, aBlock);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      v52 = (uint8_t *)v29;
      *(_WORD *)(v29 + 12) = 2082;
      v32 = MEMORY[0x1E0DEE9D8];
      if (v16)
      {
        v49[0] = &v59;
        v49[1] = v4;
        v58 = MEMORY[0x1E0DEE9D8];
        sub_1BC6E8A7C(0, v16 & ~(v16 >> 63), 0);
        if (v16 < 0)
        {
          __break(1u);
          return;
        }
        v33 = 0;
        do
        {
          if ((a2 & 0xC000000000000001) != 0)
            v34 = (id)MEMORY[0x1BCCF4FB0](v33, a2);
          else
            v34 = *(id *)(a2 + 8 * v33 + 32);
          v35 = v34;
          v36 = objc_msgSend(v34, sel_UUID);
          sub_1BC816F24();

          v37 = sub_1BC816F00();
          v39 = v38;
          (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v12);

          v32 = v58;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BC6E8A7C(0, *(_QWORD *)(v32 + 16) + 1, 1);
            v32 = v58;
          }
          v41 = *(_QWORD *)(v32 + 16);
          v40 = *(_QWORD *)(v32 + 24);
          if (v41 >= v40 >> 1)
          {
            sub_1BC6E8A7C(v40 > 1, v41 + 1, 1);
            v32 = v58;
          }
          ++v33;
          *(_QWORD *)(v32 + 16) = v41 + 1;
          v42 = v32 + 16 * v41;
          *(_QWORD *)(v42 + 32) = v37;
          *(_QWORD *)(v42 + 40) = v39;
          v12 = v55;
        }
        while (v16 != v33);
      }
      v43 = v52;
      v44 = MEMORY[0x1BCCF4914](v32, MEMORY[0x1E0DEA968]);
      v46 = v45;
      swift_bridgeObjectRelease();
      v58 = sub_1BC6E14D8(v44, v46, aBlock);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v47 = v53;
      _os_log_impl(&dword_1BC6DD000, v53, (os_log_type_t)v51, "[%{public}s] Creating new transaction after successfully discarding all transactions: %{public}s", v43, 0x16u);
      v48 = v50;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v48, -1, -1);
      MEMORY[0x1BCCF5BA4](v43, -1, -1);

      a1 = v54;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1BC74875C(a1);
    return;
  }
  v17 = *(id *)(a2 + 8 * a3 + 32);
LABEL_7:
  v18 = a1;
  v19 = objc_msgSend(v17, sel_UUID);
  sub_1BC816F24();

  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v12) == 1)
  {
    v20 = 0;
  }
  else
  {
    v20 = (void *)sub_1BC816F0C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v12);
  }
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6B78]), sel_initWithHealthStore_transactionUUID_, v18, v20);

  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v17;
  v22[3] = v4;
  v22[4] = v18;
  v22[5] = a2;
  v22[6] = a3;
  v22[7] = v8;
  aBlock[4] = (uint64_t)sub_1BC74CCB4;
  aBlock[5] = (uint64_t)v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC76C088;
  aBlock[3] = (uint64_t)&block_descriptor_44;
  v23 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v24 = v18;
  v25 = v17;
  swift_retain();
  swift_release();
  objc_msgSend(v21, sel_discardWithCompletion_, v23);
  _Block_release(v23);

}

void sub_1BC7492B0(int a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  _QWORD v54[2];
  int v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v14 = sub_1BC816F3C();
  v58 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v17 = a2;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v18 = sub_1BC817590();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED6BB5D0);
    v19 = a3;
    v20 = a2;
    v21 = v19;
    v22 = a2;
    v23 = sub_1BC81756C();
    v24 = sub_1BC817E84();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc();
      v57 = a5;
      v27 = v26;
      v56 = swift_slowAlloc();
      v60 = v56;
      *(_DWORD *)v27 = 136446722;
      v28 = sub_1BC818814();
      v55 = v25;
      v59 = sub_1BC6E14D8(v28, v29, &v60);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      v30 = objc_msgSend(v21, sel_UUID);
      sub_1BC816F24();

      v31 = sub_1BC816F00();
      v33 = v32;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v14);
      v59 = sub_1BC6E14D8(v31, v33, &v60);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2082;
      v59 = (uint64_t)a2;
      v34 = a2;
      sub_1BC6E1878();
      v35 = sub_1BC817AF4();
      v59 = sub_1BC6E14D8(v35, v36, &v60);
      sub_1BC818148();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC6DD000, v23, (os_log_type_t)v55, "[%{public}s] Failed to discard transaction %{public}s: %{public}s", (uint8_t *)v27, 0x20u);
      v37 = v56;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v37, -1, -1);
      v38 = v27;
      a5 = v57;
      MEMORY[0x1BCCF5BA4](v38, -1, -1);
    }
    else
    {

    }
    v53 = objc_msgSend(a5, sel_profileIdentifier);
    sub_1BC7480DC(v53, a2);

  }
  else
  {
    v55 = a1;
    v56 = a7;
    v57 = a6;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v39 = sub_1BC817590();
    __swift_project_value_buffer(v39, (uint64_t)qword_1ED6BB5D0);
    v40 = a3;
    v41 = sub_1BC81756C();
    v42 = sub_1BC817E9C();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v54[0] = swift_slowAlloc();
      v60 = v54[0];
      *(_DWORD *)v43 = 136446722;
      v44 = sub_1BC818814();
      v54[1] = a4;
      v59 = sub_1BC6E14D8(v44, v45, &v60);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2082;
      v46 = objc_msgSend(v40, sel_UUID);
      sub_1BC816F24();

      v47 = sub_1BC816F00();
      v48 = v14;
      v49 = a5;
      v51 = v50;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v48);
      v59 = sub_1BC6E14D8(v47, v51, &v60);
      sub_1BC818148();

      a5 = v49;
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 22) = 1024;
      LODWORD(v59) = v55 & 1;
      sub_1BC818148();
      _os_log_impl(&dword_1BC6DD000, v41, v42, "[%{public}s] Discard transaction %{public}s %{BOOL}d", (uint8_t *)v43, 0x1Cu);
      v52 = v54[0];
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v52, -1, -1);
      MEMORY[0x1BCCF5BA4](v43, -1, -1);

    }
    else
    {

    }
    if (__OFADD__(v56, 1))
      __break(1u);
    else
      sub_1BC748CBC(a5, v57, v56 + 1);
  }
}

void sub_1BC749860(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  void **p_weak_ivar_lyt;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  os_unfair_lock_s *v30;
  uint64_t *v31;
  os_unfair_lock_s *v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  id v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  os_log_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  _QWORD v75[2];
  int v76;
  os_log_t v77;
  id v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v5 = v4;
  v83 = a3;
  v84 = a2;
  v8 = *v4;
  v9 = sub_1BC816F3C();
  v80 = *(_QWORD *)(v9 - 8);
  v81 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v12 = sub_1BC817590();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED6BB5D0);
  v14 = a1;
  v85 = v13;
  v15 = sub_1BC81756C();
  v16 = sub_1BC817E9C();
  v17 = os_log_type_enabled(v15, v16);
  p_weak_ivar_lyt = &CloudSyncStatusInputSignal.weak_ivar_lyt;
  v82 = a4;
  v86 = v8;
  if (v17)
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v89 = v20;
    *(_DWORD *)v19 = 136446466;
    v21 = sub_1BC818814();
    v87 = sub_1BC6E14D8(v21, v22, &v89);
    v79 = v5;
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    v23 = objc_msgSend(v14, sel_profileIdentifier);
    v24 = objc_msgSend(v23, sel_identifier);

    sub_1BC816F24();
    v25 = sub_1BC816F00();
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v80 + 8))(v11, v81);
    v87 = sub_1BC6E14D8(v25, v27, &v89);
    v5 = v79;
    sub_1BC818148();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v15, v16, "[%{public}s] Getting current transaction for committing for %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    v28 = v20;
    p_weak_ivar_lyt = (void **)(&CloudSyncStatusInputSignal + 56);
    MEMORY[0x1BCCF5BA4](v28, -1, -1);
    MEMORY[0x1BCCF5BA4](v19, -1, -1);

  }
  else
  {

  }
  v29 = objc_msgSend(v14, (SEL)p_weak_ivar_lyt[408]);
  v30 = (os_unfair_lock_s *)v5[2];
  v31 = (uint64_t *)&v30[4];
  v32 = v30 + 6;
  os_unfair_lock_lock(v30 + 6);
  sub_1BC74A0B4(v31, v29, &v89);
  os_unfair_lock_unlock(v32);
  v33 = v89;
  if (v89)
  {
    v78 = v29;
    swift_retain_n();
    v34 = v14;
    v35 = sub_1BC81756C();
    v36 = sub_1BC817E9C();
    v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      v38 = swift_slowAlloc();
      v85 = swift_slowAlloc();
      v89 = v85;
      *(_DWORD *)v38 = 136446722;
      v77 = v35;
      v39 = sub_1BC818814();
      v76 = v37;
      v87 = sub_1BC6E14D8(v39, v40, &v89);
      v75[1] = &v88;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2082;
      v75[0] = v38 + 14;
      v41 = objc_msgSend(*(id *)(v33 + 16), sel_transactionUUID, v38 + 14);
      sub_1BC816F24();

      v42 = sub_1BC816F00();
      v79 = v5;
      v44 = v43;
      v45 = v81;
      v46 = *(void (**)(char *, uint64_t))(v80 + 8);
      v46(v11, v81);
      v87 = sub_1BC6E14D8(v42, v44, &v89);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 22) = 2082;
      v47 = objc_msgSend(v34, (SEL)p_weak_ivar_lyt[408]);
      v48 = objc_msgSend(v47, sel_identifier);

      sub_1BC816F24();
      v49 = sub_1BC816F00();
      v51 = v50;
      v52 = v45;
      v53 = v86;
      v46(v11, v52);
      v87 = sub_1BC6E14D8(v49, v51, &v89);
      sub_1BC818148();

      v5 = v79;
      swift_bridgeObjectRelease();
      v54 = v77;
      _os_log_impl(&dword_1BC6DD000, v77, (os_log_type_t)v76, "[%{public}s] Committing current transaction %{public}s for %{public}s", (uint8_t *)v38, 0x20u);
      v55 = v85;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v55, -1, -1);
      MEMORY[0x1BCCF5BA4](v38, -1, -1);

      v56 = v82;
    }
    else
    {

      swift_release_n();
      v56 = v82;
      v53 = v86;
    }
    v65 = v84;
    sub_1BC6ED7C0(0, &qword_1ED6B96C8);
    v66 = sub_1BC81190C();
    v67 = swift_allocObject();
    *(_QWORD *)(v67 + 16) = v33;
    *(_QWORD *)(v67 + 24) = v5;
    v68 = v83;
    *(_QWORD *)(v67 + 32) = v34;
    *(_QWORD *)(v67 + 40) = v68;
    *(_QWORD *)(v67 + 48) = v56;
    *(_QWORD *)(v67 + 56) = v66;
    *(_BYTE *)(v67 + 64) = v65 & 1;
    *(_QWORD *)(v67 + 72) = v53;
    v69 = (_QWORD *)swift_allocObject();
    v69[2] = v33;
    v69[3] = v66;
    v69[4] = sub_1BC74C838;
    v69[5] = v67;
    v70 = swift_allocObject();
    *(_QWORD *)(v70 + 16) = sub_1BC74C838;
    *(_QWORD *)(v70 + 24) = v67;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v71 = v34;
    swift_retain();
    swift_retain();
    sub_1BC6F4C60((uint64_t)sub_1BC6F65DC, (uint64_t)v69, (uint64_t)sub_1BC74C8A0, v70);
    swift_release_n();

    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    v57 = sub_1BC81756C();
    v58 = sub_1BC817E9C();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      v60 = swift_slowAlloc();
      v89 = v60;
      v78 = v29;
      *(_DWORD *)v59 = 136446210;
      v61 = v86;
      v62 = sub_1BC818814();
      v87 = sub_1BC6E14D8(v62, v63, &v89);
      v29 = v78;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v57, v58, "[%{public}s] No transaction found, fetching or creating a new one for committing", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v60, -1, -1);
      MEMORY[0x1BCCF5BA4](v59, -1, -1);

      v64 = v82;
    }
    else
    {

      v64 = v82;
      v61 = v86;
    }
    v72 = v83;
    v73 = swift_allocObject();
    *(_QWORD *)(v73 + 16) = v5;
    *(_QWORD *)(v73 + 24) = v14;
    *(_BYTE *)(v73 + 32) = v84 & 1;
    *(_QWORD *)(v73 + 40) = v72;
    *(_QWORD *)(v73 + 48) = v64;
    *(_QWORD *)(v73 + 56) = v61;
    v74 = v14;
    swift_retain();
    swift_retain();
    sub_1BC7462B4(v74, (void (*)(void *, uint64_t))sub_1BC74C7DC, v73);
    swift_release();

  }
}

void sub_1BC74A0B4(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  id v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v4 = *a1;
  if (!*(_QWORD *)(*a1 + 16))
    goto LABEL_7;
  v6 = a2;
  v7 = sub_1BC706894((uint64_t)v6);
  if ((v8 & 1) == 0)
  {

LABEL_7:
    v10 = 0;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v4 + 56) + 16 * v7;
  v10 = *(_QWORD *)v9;
  v11 = *(unsigned __int8 *)(v9 + 8);
  sub_1BC70F57C(*(_QWORD *)v9, *(_BYTE *)(v9 + 8));

  if (v11 != 1)
  {
    sub_1BC74D138(v10, 0, MEMORY[0x1E0DEEB08], MEMORY[0x1E0DEEE30]);
    goto LABEL_7;
  }
  v12 = v6;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *a1;
  *a1 = 0x8000000000000000;
  sub_1BC71F898(MEMORY[0x1E0DEE9D8], 0, v12, isUniquelyReferenced_nonNull_native);
  *a1 = v14;

  swift_bridgeObjectRelease();
LABEL_8:
  *a3 = v10;
}

uint64_t sub_1BC74A1BC(void *a1, char a2, uint64_t a3, void *a4, char a5, void (*a6)(void *), uint64_t a7, NSObject *a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t (*v37)(void);
  uint64_t (*v38)(void);
  os_log_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t (*v42)(void);
  void (*v43)(void *);
  id v44;
  uint64_t (*v45)(void);
  uint64_t (*v46)(void);
  uint64_t v47;
  int v48;
  uint64_t v49;
  void (*v50)(void *);
  uint64_t v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;

  v52 = a8;
  v14 = sub_1BC816F3C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
    return sub_1BC749860(a4, a5 & 1, a6, a7);
  v50 = a6;
  v51 = a7;
  v19 = a1;
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v20 = sub_1BC817590();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED6BB5D0);
  sub_1BC74D1E0(a1, 1);
  v21 = a4;
  sub_1BC74D1E0(a1, 1);
  v22 = v21;
  v23 = sub_1BC81756C();
  v24 = sub_1BC817E9C();
  v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    v26 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    v54 = v49;
    *(_DWORD *)v26 = 136446722;
    v48 = v25;
    v27 = sub_1BC818814();
    v52 = v23;
    v53 = sub_1BC6E14D8(v27, v28, &v54);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2082;
    v29 = objc_msgSend(v22, sel_profileIdentifier);
    v30 = objc_msgSend(v29, sel_identifier);

    sub_1BC816F24();
    v31 = sub_1BC816F00();
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v53 = sub_1BC6E14D8(v31, v33, &v54);
    sub_1BC818148();

    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2082;
    v53 = (uint64_t)a1;
    v34 = a1;
    sub_1BC6E1878();
    v35 = sub_1BC817AF4();
    v53 = sub_1BC6E14D8(v35, v36, &v54);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    v37 = MEMORY[0x1E0DEEE30];
    v38 = MEMORY[0x1E0DEEBF0];
    sub_1BC74D138((uint64_t)a1, 1, MEMORY[0x1E0DEEE30], MEMORY[0x1E0DEEBF0]);
    sub_1BC74D138((uint64_t)a1, 1, v37, v38);
    v39 = v52;
    _os_log_impl(&dword_1BC6DD000, v52, (os_log_type_t)v48, "[%{public}s] Failed to get current transaction for %{public}s: %{public}s", (uint8_t *)v26, 0x20u);
    v40 = v49;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v40, -1, -1);
    MEMORY[0x1BCCF5BA4](v26, -1, -1);

  }
  else
  {

    v41 = MEMORY[0x1E0DEEE30];
    v42 = MEMORY[0x1E0DEEBF0];
    sub_1BC74D138((uint64_t)a1, 1, MEMORY[0x1E0DEEE30], MEMORY[0x1E0DEEBF0]);
    sub_1BC74D138((uint64_t)a1, 1, v41, v42);

  }
  v43 = v50;
  v44 = a1;
  v43(a1);
  v45 = MEMORY[0x1E0DEEE30];
  v46 = MEMORY[0x1E0DEEBF0];
  sub_1BC74D138((uint64_t)a1, 1, MEMORY[0x1E0DEEE30], MEMORY[0x1E0DEEBF0]);
  return sub_1BC74D138((uint64_t)a1, 1, v45, v46);
}

void sub_1BC74A5C8(void *a1, uint64_t a2, uint64_t a3, void *a4, os_log_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  NSObject *v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  char v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  os_log_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v16 = sub_1BC816F3C();
  v74 = *(_QWORD *)(v16 - 8);
  v75 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v19 = a1;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v20 = sub_1BC817590();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED6BB5D0);
    swift_retain();
    v21 = a1;
    swift_retain();
    v22 = a1;
    v23 = sub_1BC81756C();
    v24 = sub_1BC817E84();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc();
      v72 = a3;
      v27 = v26;
      v71 = swift_slowAlloc();
      v77 = v71;
      *(_DWORD *)v27 = 136446722;
      LODWORD(v70) = v25;
      v28 = sub_1BC818814();
      v76 = sub_1BC6E14D8(v28, v29, &v77);
      v73 = a6;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      v30 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID);
      sub_1BC816F24();

      v31 = sub_1BC816F00();
      v69 = v23;
      v32 = a5;
      v33 = a4;
      v35 = v34;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v18, v75);
      v76 = sub_1BC6E14D8(v31, v35, &v77);
      sub_1BC818148();
      swift_release_n();
      a4 = v33;
      a5 = v32;
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2082;
      v76 = (uint64_t)a1;
      v36 = a1;
      sub_1BC6E1878();
      v37 = sub_1BC817AF4();
      v76 = sub_1BC6E14D8(v37, v38, &v77);
      sub_1BC818148();
      swift_bridgeObjectRelease();

      v39 = v69;
      _os_log_impl(&dword_1BC6DD000, v69, (os_log_type_t)v70, "[%{public}s] Failed to add metadata %{public}s: %{public}s", (uint8_t *)v27, 0x20u);
      v40 = v71;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v40, -1, -1);
      MEMORY[0x1BCCF5BA4](v27, -1, -1);

    }
    else
    {
      swift_release_n();

    }
    v59 = objc_msgSend(a4, sel_profileIdentifier);
    sub_1BC7480DC(v59, a1);

    v60 = a1;
    ((void (*)(void *))a5)(a1);

  }
  else
  {
    LODWORD(v71) = a8;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v41 = sub_1BC817590();
    __swift_project_value_buffer(v41, (uint64_t)qword_1ED6BB5D0);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v42 = sub_1BC81756C();
    v43 = sub_1BC817E9C();
    v44 = v43;
    if (os_log_type_enabled(v42, v43))
    {
      v45 = swift_slowAlloc();
      v69 = a5;
      v46 = v45;
      v68 = swift_slowAlloc();
      v77 = v68;
      *(_DWORD *)v46 = 136446722;
      v67 = v44;
      v47 = sub_1BC818814();
      v70 = a4;
      v76 = sub_1BC6E14D8(v47, v48, &v77);
      v72 = a3;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2082;
      v49 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID);
      sub_1BC816F24();

      v50 = sub_1BC816F00();
      v73 = a6;
      v52 = v51;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v18, v75);
      v76 = sub_1BC6E14D8(v50, v52, &v77);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 22) = 2082;
      swift_bridgeObjectRetain();
      v53 = sub_1BC817A40();
      v55 = v54;
      swift_bridgeObjectRelease();
      v56 = v53;
      a6 = v73;
      v76 = sub_1BC6E14D8(v56, v55, &v77);
      a3 = v72;
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      a4 = v70;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v42, (os_log_type_t)v67, "[%{public}s] Committing transaction %{public}s after adding metadata: %{public}s", (uint8_t *)v46, 0x20u);
      v57 = v68;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v57, -1, -1);
      v58 = v46;
      a5 = v69;
      MEMORY[0x1BCCF5BA4](v58, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    v61 = v71;
    v62 = (_QWORD *)swift_allocObject();
    v62[2] = a2;
    v62[3] = a3;
    v62[4] = a4;
    v62[5] = a5;
    v62[6] = a6;
    v62[7] = a9;
    v63 = swift_allocObject();
    *(_QWORD *)(v63 + 16) = a2;
    *(_BYTE *)(v63 + 24) = v61 & 1;
    *(_QWORD *)(v63 + 32) = sub_1BC74D180;
    *(_QWORD *)(v63 + 40) = v62;
    v64 = swift_allocObject();
    *(_QWORD *)(v64 + 16) = sub_1BC74D180;
    *(_QWORD *)(v64 + 24) = v62;
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    v65 = a4;
    swift_retain();
    sub_1BC6F4C60((uint64_t)sub_1BC6F65C8, v63, (uint64_t)sub_1BC74D1C0, v64);
    swift_release();
    swift_release();
    swift_release();
  }
}

void sub_1BC74ACE8(void *a1, char a2, uint64_t a3, uint64_t a4, id a5, void (*a6)(_QWORD), uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  void (*v52)(_QWORD);
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v53 = sub_1BC816F3C();
  v14 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v54 = a5;
    v30 = a1;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v31 = sub_1BC817590();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED6BB5D0);
    swift_retain();
    sub_1BC74D1C8(a1);
    swift_retain();
    sub_1BC74D1C8(a1);
    v32 = sub_1BC81756C();
    v33 = sub_1BC817E84();
    v34 = v33;
    if (os_log_type_enabled(v32, v33))
    {
      v35 = swift_slowAlloc();
      v56 = a7;
      v36 = v35;
      v51 = swift_slowAlloc();
      v58 = v51;
      *(_DWORD *)v36 = 136446722;
      v50 = v34;
      v37 = sub_1BC818814();
      v55 = a4;
      v57 = sub_1BC6E14D8(v37, v38, &v58);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2082;
      v39 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
      sub_1BC816F24();

      v40 = sub_1BC816F00();
      v52 = a6;
      v42 = v41;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v53);
      v57 = sub_1BC6E14D8(v40, v42, &v58);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 22) = 2082;
      v57 = (uint64_t)a1;
      v43 = a1;
      sub_1BC6E1878();
      v44 = sub_1BC817AF4();
      v57 = sub_1BC6E14D8(v44, v45, &v58);
      a6 = v52;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      sub_1BC74D1D4(a1);
      sub_1BC74D1D4(a1);
      _os_log_impl(&dword_1BC6DD000, v32, (os_log_type_t)v50, "[%{public}s] Using old transaction %{public}s as commit failed: %{public}s", (uint8_t *)v36, 0x20u);
      v46 = v51;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v46, -1, -1);
      MEMORY[0x1BCCF5BA4](v36, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_1BC74D1D4(a1);
      sub_1BC74D1D4(a1);
    }

    v47 = objc_msgSend(v54, sel_profileIdentifier);
    sub_1BC747E98(v47, a3);

    v48 = a1;
    a6(a1);
    sub_1BC74D1D4(a1);
    sub_1BC74D1D4(a1);
  }
  else
  {
    v55 = a4;
    v56 = a7;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v17 = sub_1BC817590();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED6BB5D0);
    swift_retain_n();
    v18 = sub_1BC81756C();
    v19 = sub_1BC817E9C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v52 = a6;
      v21 = v20;
      v51 = swift_slowAlloc();
      v58 = v51;
      *(_DWORD *)v21 = 136446466;
      v22 = sub_1BC818814();
      v54 = a5;
      v57 = sub_1BC6E14D8(v22, v23, &v58);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2082;
      v24 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
      sub_1BC816F24();

      v25 = sub_1BC816F00();
      v27 = v26;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v53);
      v57 = sub_1BC6E14D8(v25, v27, &v58);
      a5 = v54;
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v18, v19, "[%{public}s] Successfully committed transaction %{public}s", (uint8_t *)v21, 0x16u);
      v28 = v51;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v28, -1, -1);
      v29 = v21;
      a6 = v52;
      MEMORY[0x1BCCF5BA4](v29, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_1BC74B2A8(a5);
    a6(0);
  }
}

void sub_1BC74B2A8(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  _QWORD v13[6];

  v3 = *v1;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6B78]), sel_initWithHealthStore_, a1);
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6BA578, (uint64_t (*)(uint64_t))sub_1BC6EF850, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(inited + 32) = 0xD000000000000048;
  *(_QWORD *)(inited + 40) = 0x80000001BC8276D0;
  if (qword_1ED6B96B8 != -1)
    swift_once();
  v7 = qword_1ED6B96A8;
  v6 = unk_1ED6B96B0;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v7;
  *(_QWORD *)(inited + 56) = v6;
  swift_bridgeObjectRetain();
  sub_1BC710164(inited);
  v8 = (void *)sub_1BC817A28();
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v1;
  v9[3] = a1;
  v9[4] = v4;
  v9[5] = v3;
  v13[4] = sub_1BC74CC2C;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1BC76C088;
  v13[3] = &block_descriptor_32;
  v10 = _Block_copy(v13);
  swift_retain();
  v11 = a1;
  v12 = v4;
  swift_release();
  objc_msgSend(v12, sel_addMetadata_completion_, v8, v10);
  _Block_release(v10);

}

void sub_1BC74B480(int a1, id a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  _QWORD *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t aBlock[6];

  if (a2)
  {
    v10 = a2;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v11 = sub_1BC817590();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED6BB5D0);
    v12 = sub_1BC81756C();
    v13 = sub_1BC817E84();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      aBlock[0] = v15;
      *(_DWORD *)v14 = 136446210;
      v16 = sub_1BC818814();
      sub_1BC6E14D8(v16, v17, aBlock);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v12, v13, "[%{public}s] Failed to set healthappd managed transaction metadata to new transaction", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v15, -1, -1);
      MEMORY[0x1BCCF5BA4](v14, -1, -1);
    }

    sub_1BC748A30();
    v18 = objc_msgSend(a4, sel_profileIdentifier);
    sub_1BC7480DC(v18, a2);

  }
  else
  {
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = a5;
    v20[3] = a3;
    v20[4] = a4;
    v20[5] = a6;
    aBlock[4] = (uint64_t)sub_1BC74CC6C;
    aBlock[5] = (uint64_t)v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BC76C088;
    aBlock[3] = (uint64_t)&block_descriptor_38;
    v21 = _Block_copy(aBlock);
    v22 = a5;
    swift_retain();
    v23 = a4;
    swift_release();
    objc_msgSend(v22, sel_reuseAllSummariesWithPackage_completion_, 0, v21);
    _Block_release(v21);
  }
}

void sub_1BC74B6F4(int a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  _QWORD *v47;
  id v48;
  uint64_t v49;
  void *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;

  v53 = a6;
  v56 = a5;
  v51 = a1;
  v9 = sub_1BC816F3C();
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &unk_1ED6BB000;
  if (a2)
  {
    v13 = a2;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v14 = sub_1BC817590();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED6BB5D0);
    v15 = a2;
    v16 = a3;
    v17 = a2;
    v18 = v16;
    v19 = sub_1BC81756C();
    v20 = sub_1BC817E84();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v50 = a3;
      v22 = v21;
      v49 = swift_slowAlloc();
      v58 = v49;
      *(_DWORD *)v22 = 136446722;
      v23 = sub_1BC818814();
      v57 = sub_1BC6E14D8(v23, v24, &v58);
      v52 = a4;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      v25 = objc_msgSend(v18, sel_transactionUUID);
      sub_1BC816F24();

      v26 = sub_1BC816F00();
      v28 = v27;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v55);
      v57 = sub_1BC6E14D8(v26, v28, &v58);
      sub_1BC818148();

      v12 = (_QWORD *)&unk_1ED6BB000;
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2082;
      v57 = (uint64_t)a2;
      v29 = a2;
      sub_1BC6E1878();
      v30 = sub_1BC817AF4();
      v57 = sub_1BC6E14D8(v30, v31, &v58);
      a4 = v52;
      sub_1BC818148();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC6DD000, v19, v20, "[%{public}s] Setting flag to regenerate all summaries since unable to reuse all transactions for %{public}s: %{public}s", (uint8_t *)v22, 0x20u);
      v32 = v49;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v32, -1, -1);
      v33 = v22;
      a3 = v50;
      MEMORY[0x1BCCF5BA4](v33, -1, -1);
    }
    else
    {

    }
    sub_1BC748A30();

  }
  if (v12[182] != -1)
    swift_once();
  v34 = sub_1BC817590();
  __swift_project_value_buffer(v34, (uint64_t)qword_1ED6BB5D0);
  v35 = a3;
  v36 = sub_1BC81756C();
  v37 = sub_1BC817E9C();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v58 = v39;
    *(_DWORD *)v38 = 136446722;
    v40 = sub_1BC818814();
    v52 = a4;
    v57 = sub_1BC6E14D8(v40, v41, &v58);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 1024;
    LODWORD(v57) = v51 & 1;
    sub_1BC818148();
    *(_WORD *)(v38 + 18) = 2082;
    v42 = objc_msgSend(v35, sel_transactionUUID);
    sub_1BC816F24();

    v43 = sub_1BC816F00();
    v45 = v44;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v55);
    v57 = sub_1BC6E14D8(v43, v45, &v58);
    sub_1BC818148();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v36, v37, "[%{public}s] Reuse all summaries success %{BOOL}d for new transaction %{public}s", (uint8_t *)v38, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v39, -1, -1);
    MEMORY[0x1BCCF5BA4](v38, -1, -1);

  }
  else
  {

  }
  type metadata accessor for CachingSharedSummaryTransactionBuilder();
  swift_allocObject();
  v46 = v35;
  v47 = sub_1BC6F630C(v46, (uint64_t)sub_1BC747E90, 0);

  v48 = objc_msgSend(v56, sel_profileIdentifier);
  sub_1BC747E98(v48, (uint64_t)v47);
  swift_release();

}

void sub_1BC74BC94(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t *v4;
  os_unfair_lock_s *v5;

  v3 = *(os_unfair_lock_s **)(v1 + 16);
  v4 = (uint64_t *)&v3[4];
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1BC74BCE8(v4, a1);
  os_unfair_lock_unlock(v5);
}

void sub_1BC74BCE8(uint64_t *a1, void *a2)
{
  uint64_t v2;
  id v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v2 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    v3 = a2;
    v4 = sub_1BC706894((uint64_t)v3);
    if ((v5 & 1) != 0)
    {
      v6 = *(_QWORD *)(v2 + 56) + 16 * v4;
      v7 = *(_QWORD *)v6;
      v8 = *(unsigned __int8 *)(v6 + 8);
      sub_1BC70F57C(*(_QWORD *)v6, *(_BYTE *)(v6 + 8));

      if (v8 == 1)
      {
        sub_1BC74D138(v7, 1, MEMORY[0x1E0DEEB08], MEMORY[0x1E0DEEE30]);
        v9 = v3;
        v10 = sub_1BC71E2B8((uint64_t)v9);
        v12 = v11;

        sub_1BC74C704(v10, v12);
      }
      else
      {
        sub_1BC74D138(v7, 0, MEMORY[0x1E0DEEB08], MEMORY[0x1E0DEEE30]);
      }
    }
    else
    {

    }
  }
}

void sub_1BC74BDB8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = (uint64_t *)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1BC74BE08(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1BC74BE08(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int64_t v21;
  id v22;
  unint64_t v23;
  char v24;
  char v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *a1;
  v3 = *a1 + 64;
  v4 = 1 << *(_BYTE *)(*a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(*a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v8 = 0;
  v31 = v3;
  v32 = v2;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_25:
    v14 = *a1;
    if (*(_QWORD *)(*a1 + 16))
    {
      v15 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v10);
      v16 = sub_1BC706894((uint64_t)v15);
      if ((v17 & 1) != 0)
      {
        v18 = *(_QWORD *)(v14 + 56) + 16 * v16;
        v19 = *(_QWORD *)v18;
        v20 = *(unsigned __int8 *)(v18 + 8);
        sub_1BC70F57C(*(_QWORD *)v18, *(_BYTE *)(v18 + 8));

        if (v20 == 1)
        {
          v21 = v7;
          sub_1BC74D138(v19, 1, MEMORY[0x1E0DEEB08], MEMORY[0x1E0DEEE30]);
          v22 = v15;
          swift_bridgeObjectRetain();
          v23 = sub_1BC706894((uint64_t)v22);
          v25 = v24;
          swift_bridgeObjectRelease();
          if ((v25 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v27 = *a1;
            v33 = *a1;
            *a1 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1BC70B608();
              v27 = v33;
            }

            v28 = *(_QWORD *)(v27 + 56) + 16 * v23;
            v29 = *(_QWORD *)v28;
            v30 = *(_BYTE *)(v28 + 8);
            sub_1BC71EDD8(v23, v27);
            *a1 = v27;

            swift_bridgeObjectRelease();
            sub_1BC74D138(v29, v30, MEMORY[0x1E0DEEB08], MEMORY[0x1E0DEEE30]);

            v3 = v31;
          }
          else
          {

          }
          v7 = v21;
          v2 = v32;
        }
        else
        {
          sub_1BC74D138(v19, 0, MEMORY[0x1E0DEEB08], MEMORY[0x1E0DEEE30]);

        }
      }
      else
      {

      }
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v11 >= v7)
    goto LABEL_35;
  v12 = *(_QWORD *)(v3 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_24;
  v8 = v11 + 1;
  if (v11 + 1 >= v7)
    goto LABEL_35;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
    goto LABEL_24;
  v8 = v11 + 2;
  if (v11 + 2 >= v7)
    goto LABEL_35;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
    goto LABEL_24;
  v8 = v11 + 3;
  if (v11 + 3 >= v7)
    goto LABEL_35;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
    goto LABEL_24;
  v8 = v11 + 4;
  if (v11 + 4 >= v7)
    goto LABEL_35;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
  {
LABEL_24:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_25;
  }
  v13 = v11 + 5;
  if (v13 >= v7)
  {
LABEL_35:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_35;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_24;
  }
LABEL_37:
  __break(1u);
}

uint64_t OpenTransactionBuilderManager.deinit()
{
  uint64_t v0;
  void *v1;

  swift_release();

  v1 = *(void **)(v0 + 48);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t OpenTransactionBuilderManager.__deallocating_deinit()
{
  uint64_t v0;
  void *v1;

  swift_release();

  v1 = *(void **)(v0 + 48);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t OpenTransactionBuilderManager.makeTransactionBuilderPublisher(for:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = a1;
  sub_1BC74D230(0, &qword_1ED6B8320, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC74C8B8();
  swift_retain();
  v4 = a1;
  return sub_1BC817824();
}

uint64_t sub_1BC74C230@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  id v7;
  uint64_t result;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  sub_1BC74D230(0, &qword_1ED6B8320, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_retain();
  v7 = a2;
  result = sub_1BC81780C();
  *a3 = result;
  return result;
}

uint64_t sub_1BC74C2CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1BC74D120;
  *(_QWORD *)(v8 + 24) = v7;
  swift_retain();
  sub_1BC7462B4(a4, (void (*)(void *, uint64_t))sub_1BC74D12C, v8);
  return swift_release();
}

uint64_t sub_1BC74C364(void *a1, char a2, void (*a3)(void *, uint64_t))
{
  id v6;
  uint64_t v7;

  if ((a2 & 1) != 0)
  {
    v6 = a1;
    v7 = 1;
  }
  else
  {
    swift_retain();
    v7 = 0;
  }
  a3(a1, v7);
  return sub_1BC74D138((uint64_t)a1, a2 & 1, MEMORY[0x1E0DEEE30], MEMORY[0x1E0DEEBF0]);
}

uint64_t OpenTransactionBuilderManager.commitTransactionPublisher(healthStore:asUrgent:)(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = a1;
  *(_BYTE *)(v5 + 32) = a2;
  sub_1BC74C924();
  sub_1BC6E1788((unint64_t *)&qword_1ED6B8360, (uint64_t (*)(uint64_t))sub_1BC74C924, MEMORY[0x1E0C96108]);
  swift_retain();
  v6 = a1;
  return sub_1BC817824();
}

uint64_t sub_1BC74C474@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  id v9;
  uint64_t result;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_BYTE *)(v8 + 32) = a3;
  sub_1BC74C924();
  swift_allocObject();
  swift_retain();
  v9 = a2;
  result = sub_1BC81780C();
  *a4 = result;
  return result;
}

uint64_t sub_1BC74C508(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, int a5)
{
  uint64_t v9;
  uint64_t v10;

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1BC74D098;
  *(_QWORD *)(v10 + 24) = v9;
  swift_retain();
  sub_1BC749860(a4, a5, (uint64_t)sub_1BC74D0D0, v10);
  return swift_release();
}

void sub_1BC74C5AC(void *a1, void (*a2)(void *, uint64_t))
{
  id v4;

  if (a1)
  {
    v4 = a1;
    a2(a1, 1);

  }
  else
  {
    a2(0, 0);
  }
}

uint64_t sub_1BC74C608(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6B85C0);
    v5 = sub_1BC817C5C();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_1BC74C6A8()
{
  unint64_t result;

  result = qword_1EF45B7B0;
  if (!qword_1EF45B7B0)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for OpenTransactionBuilderManager.MakeTransactionError, &type metadata for OpenTransactionBuilderManager.MakeTransactionError);
    atomic_store(result, (unint64_t *)&qword_1EF45B7B0);
  }
  return result;
}

uint64_t sub_1BC74C6EC()
{
  return objectdestroyTm_2();
}

uint64_t sub_1BC74C6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BC746F28(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_1BC74C704(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_1BC74D138(result, a2 & 1, MEMORY[0x1E0DEEB08], MEMORY[0x1E0DEEE30]);
  return result;
}

uint64_t sub_1BC74C738()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC74C764()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), 0);
}

uint64_t sub_1BC74C790(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_1BC70F57C(result, a2 & 1);
  return result;
}

uint64_t sub_1BC74C7A8()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC74C7DC(void *a1, char a2)
{
  uint64_t v2;

  return sub_1BC74A1BC(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_BYTE *)(v2 + 32), *(void (**)(void *))(v2 + 40), *(_QWORD *)(v2 + 48), *(NSObject **)(v2 + 56));
}

uint64_t sub_1BC74C7F4()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC74C838(void *a1)
{
  uint64_t v1;

  sub_1BC74A5C8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(os_log_t *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_1BC74C86C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC74C8A0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC6F1834(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1BC74C8A8()
{
  return objectdestroyTm_2();
}

uint64_t sub_1BC74C8B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC74C230(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), a1);
}

unint64_t sub_1BC74C8B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B8318;
  if (!qword_1ED6B8318)
  {
    sub_1BC74D230(255, &qword_1ED6B8320, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C96108], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B8318);
  }
  return result;
}

uint64_t sub_1BC74C910()
{
  return objectdestroyTm_2();
}

uint64_t sub_1BC74C918@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC74C474(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

void sub_1BC74C924()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8368)
  {
    sub_1BC6E1878();
    v0 = sub_1BC817800();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8368);
  }
}

unint64_t sub_1BC74C990()
{
  unint64_t result;

  result = qword_1EF45B7B8;
  if (!qword_1EF45B7B8)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for OpenTransactionBuilderManager.MakeTransactionError, &type metadata for OpenTransactionBuilderManager.MakeTransactionError);
    atomic_store(result, (unint64_t *)&qword_1EF45B7B8);
  }
  return result;
}

uint64_t type metadata accessor for OpenTransactionBuilderManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for OpenTransactionBuilderManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OpenTransactionBuilderManager.__allocating_init(userDefaults:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of OpenTransactionBuilderManager.makeTransactionBuilder(for:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of OpenTransactionBuilderManager.commitTransaction(healthStore:asUrgent:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of OpenTransactionBuilderManager.clearCachedTransactionBuilder(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of OpenTransactionBuilderManager.clearAllCachedTransactionBuilders()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t storeEnumTagSinglePayload for OpenTransactionBuilderManager.MakeTransactionError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC74CA78 + 4 * asc_1BC81C4D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC74CA98 + 4 * byte_1BC81C4D5[v4]))();
}

_BYTE *sub_1BC74CA78(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC74CA98(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC74CAA0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC74CAA8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC74CAB0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC74CAB8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OpenTransactionBuilderManager.MakeTransactionError()
{
  return &type metadata for OpenTransactionBuilderManager.MakeTransactionError;
}

uint64_t sub_1BC74CAD4()
{
  return sub_1BC6E1788(&qword_1ED6B9620, (uint64_t (*)(uint64_t))sub_1BC74CB00, MEMORY[0x1E0C96148]);
}

void sub_1BC74CB00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8E90)
  {
    sub_1BC74D230(255, &qword_1ED6B8320, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC74C8B8();
    v0 = sub_1BC817830();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8E90);
  }
}

uint64_t sub_1BC74CB70()
{
  return sub_1BC6E1788(&qword_1ED6B9628, (uint64_t (*)(uint64_t))sub_1BC74CB9C, MEMORY[0x1E0C96148]);
}

void sub_1BC74CB9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8E98)
  {
    sub_1BC74C924();
    sub_1BC6E1788((unint64_t *)&qword_1ED6B8360, (uint64_t (*)(uint64_t))sub_1BC74C924, MEMORY[0x1E0C96108]);
    v0 = sub_1BC817830();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8E98);
  }
}

ValueMetadata *type metadata accessor for OpenTransactionBuilderManager.State()
{
  return &type metadata for OpenTransactionBuilderManager.State;
}

uint64_t sub_1BC74CC24()
{
  return objectdestroy_28Tm();
}

void sub_1BC74CC2C(int a1, void *a2)
{
  uint64_t v2;

  sub_1BC74B480(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1BC74CC38()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC74CC6C(int a1, void *a2)
{
  uint64_t v2;

  sub_1BC74B6F4(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1BC74CC78()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC74CCB4(int a1, void *a2)
{
  uint64_t v2;

  sub_1BC7492B0(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), *(_QWORD *)(v2 + 48));
}

void sub_1BC74CCC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;

  sub_1BC74CEB4(0, (unint64_t *)&qword_1ED6BAC70);
  v4 = sub_1BC818124();
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
  swift_unknownObjectRelease();

  v6 = *(void **)(v2 + 16);
  if ((id)v4 == v5)
  {
    v7 = (void *)sub_1BC817AC4();
    objc_msgSend(v6, sel_setURL_forKey_, 0, v7);
  }
  else
  {
    if (a2)
    {
      swift_bridgeObjectRetain();
      a2 = sub_1BC8186D0();
    }
    v7 = (void *)sub_1BC817AC4();
    objc_msgSend(v6, sel_setObject_forKey_, a2, v7);
    swift_unknownObjectRelease();
  }

}

uint64_t sub_1BC74CDD8()
{
  return objectdestroy_28Tm();
}

uint64_t objectdestroy_28Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BC74CE20(int a1, void *a2)
{
  uint64_t v2;

  sub_1BC74892C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1BC74CE2C()
{
  return objectdestroy_52Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_1BC74CE38()
{
  uint64_t v0;

  return sub_1BC748320(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 1);
}

uint64_t sub_1BC74CE54()
{
  return objectdestroy_52Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_52Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t sub_1BC74CE98()
{
  uint64_t v0;

  return sub_1BC748320(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 0);
}

void sub_1BC74CEB4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC818130();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1BC74CEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;

  sub_1BC74D020();
  v4 = sub_1BC818124();
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
  swift_unknownObjectRelease();

  v6 = *(void **)(v2 + 16);
  if ((id)v4 == v5)
  {
    v8 = (void *)sub_1BC817AC4();
    objc_msgSend(v6, sel_setURL_forKey_, 0, v8);
  }
  else
  {
    if (a2 == 1)
    {
      v7 = 0;
    }
    else
    {
      sub_1BC74CEB4(0, (unint64_t *)&qword_1ED6BAC70);
      swift_bridgeObjectRetain();
      v7 = sub_1BC8186D0();
    }
    v8 = (void *)sub_1BC817AC4();
    objc_msgSend(v6, sel_setObject_forKey_, v7, v8);
    swift_unknownObjectRelease();
  }

}

void sub_1BC74D020()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45B7C8)
  {
    sub_1BC74CEB4(255, (unint64_t *)&qword_1ED6BAC70);
    v0 = sub_1BC818130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45B7C8);
  }
}

uint64_t sub_1BC74D084()
{
  return objectdestroyTm_2();
}

uint64_t sub_1BC74D08C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC74C508(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(unsigned __int8 *)(v2 + 32));
}

uint64_t sub_1BC74D098(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

void sub_1BC74D0D0(void *a1)
{
  uint64_t v1;

  sub_1BC74C5AC(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_1BC74D0D8()
{
  return objectdestroyTm_2();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC74D118(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC74C2CC(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1BC74D120(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1BC79733C(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_1BC74D12C(void *a1, char a2)
{
  uint64_t v2;

  return sub_1BC74C364(a1, a2 & 1, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_1BC74D138(uint64_t a1, char a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  if ((a2 & 1) == 0)
    a4 = a3;
  return a4();
}

uint64_t sub_1BC74D144()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1BC74D180(void *a1, char a2)
{
  uint64_t v2;

  sub_1BC74ACE8(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(id *)(v2 + 32), *(void (**)(_QWORD))(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1BC74D194()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC74D1C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC6F16EC(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
}

id sub_1BC74D1C8(id a1)
{
  return a1;
}

void sub_1BC74D1D4(id a1)
{

}

id sub_1BC74D1E0(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_retain();
}

uint64_t sub_1BC74D1EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC74D210(void *a1, char a2)
{
  uint64_t v2;

  return sub_1BC746C7C(a1, a2 & 1, *(uint64_t (**)(void *, uint64_t))(v2 + 16));
}

void sub_1BC74D230(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for CachingSharedSummaryTransactionBuilder();
    v7 = sub_1BC6E1878();
    v8 = a3(a1, v6, v7, MEMORY[0x1E0DEDB38]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BC74D2A4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC74D2C8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t initializeBufferWithCopyOfBuffer for OpenTransactionBuilderManager.State.CreationState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BC70F57C(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for OpenTransactionBuilderManager.State.CreationState(uint64_t a1)
{
  return sub_1BC74D138(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), MEMORY[0x1E0DEEB08], MEMORY[0x1E0DEEE30]);
}

uint64_t assignWithCopy for OpenTransactionBuilderManager.State.CreationState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BC70F57C(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BC74D138(v5, v6, MEMORY[0x1E0DEEB08], MEMORY[0x1E0DEEE30]);
  return a1;
}

uint64_t assignWithTake for OpenTransactionBuilderManager.State.CreationState(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BC74D138(v5, v6, MEMORY[0x1E0DEEB08], MEMORY[0x1E0DEEE30]);
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenTransactionBuilderManager.State.CreationState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenTransactionBuilderManager.State.CreationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC74D4A0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1BC74D4A8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for OpenTransactionBuilderManager.State.CreationState()
{
  return &type metadata for OpenTransactionBuilderManager.State.CreationState;
}

uint64_t GeneratorDomain.init(sourceProfile:contentKinds:hkTypes:complexity:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v5;

  v5 = *a4;
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 24) = v5;
  return result;
}

uint64_t GeneratorContext.environment.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for GeneratorContext() + 28));
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3) & 1;
}

uint64_t type metadata accessor for GeneratorContext()
{
  uint64_t result;

  result = qword_1ED6B5CC0;
  if (!qword_1ED6B5CC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static AnyPublisher<>.empty.getter()
{
  sub_1BC74D608();
  return sub_1BC8177E8();
}

{
  sub_1BC77E118();
  return sub_1BC8177E8();
}

void sub_1BC74D608()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BAC80)
  {
    v0 = sub_1BC817D04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BAC80);
  }
}

id GeneratorContext.sourceProfile.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void GeneratorContext.sourceProfile.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*GeneratorContext.sourceProfile.modify())()
{
  return nullsub_1;
}

uint64_t GeneratorContext.country.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for GeneratorContext() + 20);
  return sub_1BC74D6E8(v3, a1);
}

uint64_t sub_1BC74D6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC716020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t GeneratorContext.country.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for GeneratorContext() + 20);
  return sub_1BC74D75C(a1, v3);
}

uint64_t sub_1BC74D75C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC716020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*GeneratorContext.country.modify())()
{
  type metadata accessor for GeneratorContext();
  return nullsub_1;
}

uint64_t GeneratorContext.isLaunchGeneration.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for GeneratorContext() + 24));
}

uint64_t GeneratorContext.isLaunchGeneration.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for GeneratorContext();
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*GeneratorContext.isLaunchGeneration.modify())()
{
  type metadata accessor for GeneratorContext();
  return nullsub_1;
}

uint64_t GeneratorContext.healthStore.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for GeneratorContext() + 28));
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
}

uint64_t GeneratorContext.queue(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 24);
  v5 = (_QWORD *)(v1 + *(int *)(type metadata accessor for GeneratorContext() + 28));
  v6 = v5[3];
  v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  v9 = v3;
  v10 = *(_OWORD *)(a1 + 1);
  v11 = v4;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 64))(&v9, v6, v7);
}

uint64_t GeneratorContext.scheduler.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for GeneratorContext() + 28));
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 72))(v2, v3);
}

uint64_t GeneratorContext.feedItemContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for GeneratorContext();
  return sub_1BC6FC700(v1 + *(int *)(v3 + 28), a1);
}

uint64_t GeneratorContext.feedItemContext.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for GeneratorContext() + 28);
  __swift_destroy_boxed_opaque_existential_0(v3);
  return sub_1BC6FC848(a1, v3);
}

uint64_t (*GeneratorContext.feedItemContext.modify())()
{
  type metadata accessor for GeneratorContext();
  return nullsub_1;
}

uint64_t GeneratorContext.sharableModelContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for GeneratorContext();
  return sub_1BC6FC700(v1 + *(int *)(v3 + 32), a1);
}

uint64_t GeneratorContext.sharableModelContext.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for GeneratorContext() + 32);
  __swift_destroy_boxed_opaque_existential_0(v3);
  return sub_1BC6FC848(a1, v3);
}

uint64_t (*GeneratorContext.sharableModelContext.modify())()
{
  type metadata accessor for GeneratorContext();
  return nullsub_1;
}

uint64_t GeneratorContext.init(sourceProfile:country:feedItemContext:sharableModelContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, _QWORD *a5@<X8>)
{
  int *v10;

  v10 = (int *)type metadata accessor for GeneratorContext();
  *((_BYTE *)a5 + v10[6]) = 0;
  *a5 = a1;
  sub_1BC74DB14(a2, (uint64_t)a5 + v10[5]);
  sub_1BC6FC848(a3, (uint64_t)a5 + v10[7]);
  return sub_1BC6FC848(a4, (uint64_t)a5 + v10[8]);
}

uint64_t sub_1BC74DB14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC716020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id GeneratorDomain.sourceProfile.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void GeneratorDomain.sourceProfile.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*GeneratorDomain.sourceProfile.modify())()
{
  return nullsub_1;
}

uint64_t GeneratorDomain.contentKinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GeneratorDomain.contentKinds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*GeneratorDomain.contentKinds.modify())()
{
  return nullsub_1;
}

uint64_t GeneratorDomain.hkTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GeneratorDomain.hkTypes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*GeneratorDomain.hkTypes.modify())()
{
  return nullsub_1;
}

void GeneratorDomain.complexity.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

_BYTE *GeneratorDomain.complexity.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = *result;
  return result;
}

uint64_t (*GeneratorDomain.complexity.modify())()
{
  return nullsub_1;
}

uint64_t GeneratorDomain.init(sourceProfile:contentKinds:hkTypes:complexity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = *a4;
  v9 = sub_1BC6EBB28(a2);
  swift_bridgeObjectRelease();
  v10 = sub_1BC6EAFB8(a3);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = v9;
  *(_QWORD *)(a5 + 16) = v10;
  *(_BYTE *)(a5 + 24) = v8;
  return result;
}

unint64_t GeneratorDomain.debugDescription.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 16);
  if ((v2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(v2 + 16) > 1uLL)
      goto LABEL_5;
LABEL_6:
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1D0);
    sub_1BC74E298();
    swift_bridgeObjectRetain();
    sub_1BC817D88();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (sub_1BC8181FC() <= 1)
    goto LABEL_6;
  sub_1BC8181FC();
LABEL_5:
  sub_1BC818670();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
LABEL_7:
  v3 = v1;
  sub_1BC724544(v1);
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC6ED43C();
  swift_bridgeObjectRetain();
  sub_1BC817D88();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC817AF4();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  return 0xD000000000000010;
}

BOOL static GeneratorDomain.Complexity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t GeneratorDomain.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  v4 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)v1)
  {
    sub_1BC818748();
    v6 = v4;
    sub_1BC8180DC();

  }
  else
  {
    sub_1BC818748();
  }
  swift_bridgeObjectRetain();
  sub_1BC70D3F8(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC70D164(a1, v5);
  swift_bridgeObjectRelease();
  return sub_1BC818748();
}

uint64_t GeneratorDomain.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  _BYTE v6[72];

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  sub_1BC81873C();
  sub_1BC818748();
  if (v2)
  {
    v4 = v2;
    sub_1BC8180DC();

  }
  swift_bridgeObjectRetain();
  sub_1BC70D3F8((uint64_t)v6, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC70D164((uint64_t)v6, v3);
  swift_bridgeObjectRelease();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t sub_1BC74E090()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  _BYTE v6[72];

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  sub_1BC81873C();
  sub_1BC818748();
  if (v2)
  {
    v4 = v2;
    sub_1BC8180DC();

  }
  swift_bridgeObjectRetain();
  sub_1BC70D3F8((uint64_t)v6, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC70D164((uint64_t)v6, v3);
  swift_bridgeObjectRelease();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t GeneratorDomain.Complexity.hash(into:)()
{
  return sub_1BC818748();
}

uint64_t GeneratorDomain.Complexity.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t _s14HealthPlatform15GeneratorDomainV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  int v9;
  id v10;
  id v11;
  char v12;
  unsigned __int8 v13;

  v3 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 24);
  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(unsigned __int8 *)(a2 + 24);
  if (*(_QWORD *)a1)
  {
    if (!v7)
      return 0;
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
    v10 = v3;
    v11 = v7;
    v12 = sub_1BC8180D0();

    if ((v12 & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if ((sub_1BC703CD8(v2, v6) & 1) != 0)
  {
    sub_1BC704A6C(v4, v8);
    return v13 & (v5 == v9);
  }
  return 0;
}

unint64_t sub_1BC74E298()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B97F8;
  if (!qword_1ED6B97F8)
  {
    v1 = sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BB1D0);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B97F8);
  }
  return result;
}

unint64_t sub_1BC74E2F4()
{
  unint64_t result;

  result = qword_1EF45B7D0;
  if (!qword_1EF45B7D0)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for GeneratorDomain, &type metadata for GeneratorDomain);
    atomic_store(result, (unint64_t *)&qword_1EF45B7D0);
  }
  return result;
}

unint64_t sub_1BC74E33C()
{
  unint64_t result;

  result = qword_1EF45B7D8;
  if (!qword_1EF45B7D8)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for GeneratorDomain.Complexity, &type metadata for GeneratorDomain.Complexity);
    atomic_store(result, (unint64_t *)&qword_1EF45B7D8);
  }
  return result;
}

uint64_t dispatch thunk of GeneratorPipeline.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of GeneratorPipeline.domain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void **initializeBufferWithCopyOfBuffer for GeneratorContext(void **a1, void **a2, int *a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (void **)((char *)a1 + v8);
    v10 = (char *)a2 + v8;
    sub_1BC716020();
    v11 = v4;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = *(void **)v10;
      *v9 = *(_QWORD *)v10;
      v13 = v12;
    }
    else
    {
      v14 = *((_QWORD *)v10 + 1);
      *v9 = *(_QWORD *)v10;
      v9[1] = v14;
      v9[2] = *((_QWORD *)v10 + 2);
      v15 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
      v16 = (char *)v9 + v15;
      v17 = &v10[v15];
      v18 = sub_1BC816EF4();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
    }
    swift_storeEnumTagMultiPayload();
    v20 = a3[7];
    *((_BYTE *)v7 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v21 = *(_OWORD *)((char *)a2 + v20 + 24);
    *(_OWORD *)((char *)v7 + v20 + 24) = v21;
    (**(void (***)(void))(v21 - 8))();
    v22 = a3[8];
    v23 = *(_OWORD *)((char *)a2 + v22 + 24);
    *(_OWORD *)((char *)v7 + v22 + 24) = v23;
    (**(void (***)(void))(v23 - 8))();
  }
  return v7;
}

uint64_t destroy for GeneratorContext(id *a1, int *a2)
{
  id *v4;
  char *v5;
  uint64_t v6;

  v4 = (id *)((char *)a1 + a2[5]);
  sub_1BC716020();
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    v5 = (char *)v4 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    v6 = sub_1BC816EF4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + a2[7]);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + a2[8]);
}

void **initializeWithCopy for GeneratorContext(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (void **)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  sub_1BC716020();
  v10 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = *(void **)v9;
    *v8 = *(_QWORD *)v9;
    v12 = v11;
  }
  else
  {
    v13 = *((_QWORD *)v9 + 1);
    *v8 = *(_QWORD *)v9;
    v8[1] = v13;
    v8[2] = *((_QWORD *)v9 + 2);
    v14 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    v15 = (char *)v8 + v14;
    v16 = &v9[v14];
    v17 = sub_1BC816EF4();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
  }
  swift_storeEnumTagMultiPayload();
  v19 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v20 = *(_OWORD *)((char *)a2 + v19 + 24);
  *(_OWORD *)((char *)a1 + v19 + 24) = v20;
  (**(void (***)(void))(v20 - 8))();
  v21 = a3[8];
  v22 = *(_OWORD *)((char *)a2 + v21 + 24);
  *(_OWORD *)((char *)a1 + v21 + 24) = v22;
  (**(void (***)(void))(v22 - 8))();
  return a1;
}

void **assignWithCopy for GeneratorContext(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);

  v6 = *a1;
  v7 = *a2;
  *a1 = *a2;
  v8 = v7;

  if (a1 != a2)
  {
    v9 = a3[5];
    v10 = (void **)((char *)a1 + v9);
    v11 = (char *)a2 + v9;
    sub_1BC74E828((uint64_t)a1 + v9);
    sub_1BC716020();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = *(void **)v11;
      *v10 = *(_QWORD *)v11;
      v13 = v12;
    }
    else
    {
      *v10 = *(_QWORD *)v11;
      v10[1] = *((_QWORD *)v11 + 1);
      v10[2] = *((_QWORD *)v11 + 2);
      v14 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
      v15 = (char *)v10 + v14;
      v16 = &v11[v14];
      v17 = sub_1BC816EF4();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
    }
    swift_storeEnumTagMultiPayload();
  }
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + a3[8]), (uint64_t *)((char *)a2 + a3[8]));
  return a1;
}

uint64_t sub_1BC74E828(uint64_t a1)
{
  uint64_t v2;

  sub_1BC716020();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *initializeWithTake for GeneratorContext(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  sub_1BC716020();
  v10 = v9;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v7 = *(_OWORD *)v8;
    v7[2] = v8[2];
    v11 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_1BC816EF4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  v15 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  v19 = a3[8];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
  return a1;
}

void **assignWithTake for GeneratorContext(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;

  v6 = *a1;
  *a1 = *a2;

  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (void **)((char *)a1 + v7);
    v9 = (void **)((char *)a2 + v7);
    sub_1BC74E828((uint64_t)a1 + v7);
    sub_1BC716020();
    v11 = v10;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v8[2] = v9[2];
      v12 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
      v13 = (char *)v8 + v12;
      v14 = (char *)v9 + v12;
      v15 = sub_1BC816EF4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
    }
  }
  v16 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + v16);
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + v20);
  v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for GeneratorContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC74EAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_1BC716020();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for GeneratorContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BC74EB60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1BC716020();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 28) + 24) = (a2 - 1);
}

void sub_1BC74EBE0()
{
  unint64_t v0;

  sub_1BC716020();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t destroy for GeneratorDomain(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GeneratorDomain(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GeneratorDomain(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for GeneratorDomain(uint64_t a1, uint64_t a2)
{

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for GeneratorDomain(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GeneratorDomain(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GeneratorDomain()
{
  return &type metadata for GeneratorDomain;
}

uint64_t storeEnumTagSinglePayload for GeneratorDomain.Complexity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC74EEA0 + 4 * byte_1BC81C635[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC74EED4 + 4 * byte_1BC81C630[v4]))();
}

uint64_t sub_1BC74EED4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC74EEDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC74EEE4);
  return result;
}

uint64_t sub_1BC74EEF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC74EEF8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC74EEFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC74EF04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GeneratorDomain.Complexity()
{
  return &type metadata for GeneratorDomain.Complexity;
}

HealthPlatform::DataVisualizationKind_optional __swiftcall DataVisualizationKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HealthPlatform::DataVisualizationKind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BC818568();
  result.value = swift_bridgeObjectRelease();
  v5 = 14;
  if (v3 < 0xE)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static DataVisualizationKind.allCases.getter()
{
  return &unk_1E7516300;
}

uint64_t DataVisualizationKind.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC74EFC8 + 4 * byte_1BC81C820[*v0]))(0x5265676172657661, 0xED000074726F7065);
}

uint64_t sub_1BC74EFC8()
{
  return 0x7274736944726162;
}

unint64_t sub_1BC74EFEC()
{
  return 0xD000000000000012;
}

uint64_t sub_1BC74F014()
{
  return 0x7562697274736964;
}

uint64_t sub_1BC74F034()
{
  return 0x746F6C50746F64;
}

uint64_t sub_1BC74F04C()
{
  return 0x65764F746E657665;
}

uint64_t sub_1BC74F070()
{
  return 0x437473656772616CLL;
}

uint64_t sub_1BC74F090()
{
  return 0x72616843656E696CLL;
}

uint64_t sub_1BC74F0B0()
{
  return 0x7472616843656970;
}

uint64_t sub_1BC74F0C8()
{
  return 0x6574756F72;
}

uint64_t sub_1BC74F0DC()
{
  return 0x6172676F6E6D6F73;
}

unint64_t sub_1BC74F0F8()
{
  return 0xD000000000000010;
}

uint64_t sub_1BC74F118()
{
  return 0x6C654465756C6176;
}

uint64_t sub_1BC74F134()
{
  sub_1BC81873C();
  DataVisualizationKind.rawValue.getter();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  return sub_1BC818778();
}

uint64_t sub_1BC74F198()
{
  DataVisualizationKind.rawValue.getter();
  sub_1BC817B30();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC74F1E8()
{
  sub_1BC81873C();
  DataVisualizationKind.rawValue.getter();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  return sub_1BC818778();
}

HealthPlatform::DataVisualizationKind_optional sub_1BC74F248(Swift::String *a1)
{
  return DataVisualizationKind.init(rawValue:)(*a1);
}

uint64_t sub_1BC74F254@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = DataVisualizationKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BC74F278()
{
  sub_1BC74F5B0();
  return sub_1BC817C2C();
}

uint64_t sub_1BC74F2D4()
{
  sub_1BC74F5B0();
  return sub_1BC817C14();
}

uint64_t sub_1BC74F320(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BC7E0894(*a1, *a2);
}

void sub_1BC74F32C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7516300;
}

void DataVisualizationKindFeatureTag.value.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

HealthPlatform::DataVisualizationKindFeatureTag __swiftcall DataVisualizationKindFeatureTag.init(_:)(HealthPlatform::DataVisualizationKindFeatureTag result)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)result.value;
  return result;
}

unint64_t sub_1BC74F358()
{
  unint64_t result;

  result = qword_1EF45B7E0;
  if (!qword_1EF45B7E0)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DataVisualizationKind, &type metadata for DataVisualizationKind);
    atomic_store(result, (unint64_t *)&qword_1EF45B7E0);
  }
  return result;
}

unint64_t sub_1BC74F3A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45B7E8;
  if (!qword_1EF45B7E8)
  {
    sub_1BC74F3E8();
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45B7E8);
  }
  return result;
}

void sub_1BC74F3E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45B7F0)
  {
    v0 = sub_1BC817D04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45B7F0);
  }
}

ValueMetadata *type metadata accessor for DataVisualizationKind()
{
  return &type metadata for DataVisualizationKind;
}

uint64_t _s14HealthPlatform21DataVisualizationKindOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14HealthPlatform21DataVisualizationKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1BC74F530 + 4 * byte_1BC81C833[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1BC74F564 + 4 * byte_1BC81C82E[v4]))();
}

uint64_t sub_1BC74F564(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC74F56C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC74F574);
  return result;
}

uint64_t sub_1BC74F580(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC74F588);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1BC74F58C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC74F594(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DataVisualizationKindFeatureTag()
{
  return &type metadata for DataVisualizationKindFeatureTag;
}

unint64_t sub_1BC74F5B0()
{
  unint64_t result;

  result = qword_1ED6BAB48;
  if (!qword_1ED6BAB48)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DataVisualizationKind, &type metadata for DataVisualizationKind);
    atomic_store(result, (unint64_t *)&qword_1ED6BAB48);
  }
  return result;
}

Swift::Void __swiftcall PendingValuesInner.lock_sendPendingValuesIfNeeded()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t i;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_BYTE *, uint64_t, uint64_t);
  void (*v31)(_BYTE *, _QWORD);
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_BYTE *, _QWORD);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_BYTE *, _QWORD);
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t);
  char *v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(_BYTE *, uint64_t, uint64_t);
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t (*v85)(uint64_t, uint64_t);
  _BYTE v86[40];

  v2 = v1;
  v3 = v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v70 = v6;
  v69 = sub_1BC8176EC();
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v67 = (char *)&v67 - v7;
  v8 = sub_1BC818130();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v72 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v71 = (char *)&v67 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v73 = (char *)&v67 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v67 - v17;
  MEMORY[0x1E0C80A78](v16);
  v84 = (char *)&v67 - v19;
  v74 = AssociatedConformanceWitness;
  v20 = swift_getAssociatedTypeWitness();
  v80 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v67 - v21;
  v85 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24);
  v23 = v85(v3, v2);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v23 + 16));
  swift_release();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 136))(v3, v2) & 1) != 0)
    return;
  v79 = AssociatedTypeWitness;
  v24 = *(void (**)(uint64_t, uint64_t))(v2 + 64);
  v77 = v18;
  v78 = v24;
  v24(v3, v2);
  v25 = MEMORY[0x1BCCF498C]();
  swift_bridgeObjectRelease();
  if (v25 < 1)
  {
LABEL_30:
    v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 112))(v3, v2);
    v56 = v79;
    if ((v55 & 1) != 0)
    {
      v78(v3, v2);
      v57 = MEMORY[0x1BCCF498C]();
      swift_bridgeObjectRelease();
      if (!v57)
      {
        v58 = v73;
        (*(void (**)(uint64_t, uint64_t))(v2 + 32))(v3, v2);
        v59 = *(_QWORD *)(v56 - 8);
        v60 = v71;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v71, 1, 1, v56);
        (*(void (**)(char *, uint64_t, uint64_t))(v2 + 40))(v60, v3, v2);
        v61 = v85(v3, v2);
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v61 + 16));
        swift_release();
        v62 = *(void (**)(uint64_t, uint64_t))(v2 + 56);
        v62(v3, v2);
        os_unfair_recursive_lock_lock_with_options();
        swift_release();
        v63 = v72;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v72, v58, v8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v63, 1, v56) == 1)
        {
          (*(void (**)(char *, uint64_t))(v9 + 8))(v63, v8);
        }
        else
        {
          v64 = v67;
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v67, 1, 1);
          sub_1BC8176BC();
          v65 = v64;
          v58 = v73;
          (*(void (**)(char *, uint64_t))(v68 + 8))(v65, v69);
          (*(void (**)(char *, uint64_t))(v59 + 8))(v63, v56);
        }
        v62(v3, v2);
        os_unfair_recursive_lock_unlock();
        swift_release();
        v66 = v85(v3, v2);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v66 + 16));
        swift_release();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v58, v8);
      }
    }
    return;
  }
  v26 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 88);
  v75 = v9;
  v76 = v26;
  v82 = v22;
  v83 = v20;
  for (i = v26(v3, v2); ; i = v76(v3, v2))
  {
    v29 = i;
    sub_1BC817710();
    if ((sub_1BC8176F8() & 1) != 0)
      goto LABEL_11;
    if (v29 < 0)
      break;
    if (!v29)
      goto LABEL_30;
LABEL_11:
    v30 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v2 + 104);
    v31 = (void (*)(_BYTE *, _QWORD))v30(v86, v3, v2);
    v33 = v32;
    v34 = *v32;
    sub_1BC817710();
    if ((sub_1BC8176F8() & 1) == 0)
    {
      sub_1BC817710();
      if ((sub_1BC8176F8() & 1) != 0)
      {
        v35 = sub_1BC817710();
      }
      else
      {
        if (v34 < 0)
          goto LABEL_38;
        if (!v34)
          goto LABEL_39;
        v35 = v34 - 1;
      }
      *v33 = v35;
    }
    v81 = v30;
    v31(v86, 0);
    v36 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v2 + 80))(v86, v3, v2);
    v37 = sub_1BC817D04();
    MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEAF58], v37);
    sub_1BC817E0C();
    v36(v86, 0);
    v38 = v84;
    (*(void (**)(uint64_t, uint64_t))(v2 + 32))(v3, v2);
    v39 = v85(v3, v2);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 16));
    swift_release();
    v40 = *(void (**)(uint64_t, uint64_t))(v2 + 56);
    v40(v3, v2);
    os_unfair_recursive_lock_lock_with_options();
    swift_release();
    v41 = v77;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v77, v38, v8);
    v42 = v79;
    v43 = v8;
    v44 = *(_QWORD *)(v79 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v41, 1, v79) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v41, v43);
      v45 = sub_1BC817704();
    }
    else
    {
      v46 = sub_1BC8176D4();
      v47 = v42;
      v45 = v46;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v47);
    }
    v8 = v43;
    v40(v3, v2);
    os_unfair_recursive_lock_unlock();
    swift_release();
    v48 = v85(v3, v2);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v48 + 16));
    swift_release();
    v49 = (void (*)(_BYTE *, _QWORD))v81(v86, v3, v2);
    v51 = v50;
    v52 = *v50;
    sub_1BC817710();
    if ((sub_1BC8176F8() & 1) == 0)
    {
      v9 = v43;
      sub_1BC817710();
      v53 = sub_1BC8176F8();
      v54 = sub_1BC817710();
      if ((v53 & 1) != 0)
      {
        v8 = v43;
      }
      else
      {
        v8 = v43;
        if ((sub_1BC8176F8() & 1) != 0)
          goto LABEL_27;
        if ((v52 | v45) < 0)
          goto LABEL_40;
        v54 = v52 + v45;
        if (__OFADD__(v52, v45))
        {
LABEL_27:
          v54 = sub_1BC817710();
        }
        else if (v54 < 0)
        {
          __break(1u);
          goto LABEL_30;
        }
      }
      *v51 = v54;
    }
    v49(v86, 0);
    v9 = v75;
    (*(void (**)(char *, uint64_t))(v75 + 8))(v84, v8);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v83);
    v78(v3, v2);
    v28 = MEMORY[0x1BCCF498C]();
    swift_bridgeObjectRelease();
    if (v28 <= 0)
      goto LABEL_30;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

uint64_t PendingValuesInner.enqueue(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  void (*v12)(_BYTE *, _QWORD);
  uint64_t v13;
  _BYTE v15[32];

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = &v15[-v8];
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 24);
  v11 = v10(a2, a3);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  swift_release();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 136))(a2, a3) & 1) == 0)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a1, AssociatedTypeWitness);
    v12 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a3 + 80))(v15, a2, a3);
    sub_1BC817D04();
    sub_1BC817CEC();
    v12(v15, 0);
  }
  PendingValuesInner.lock_sendPendingValuesIfNeeded()();
  v13 = v10(a2, a3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  return swift_release();
}

uint64_t dispatch thunk of PendingValuesInner.lock.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PendingValuesInner.downstream.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PendingValuesInner.downstream.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PendingValuesInner.downstream.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PendingValuesInner.downstreamLock.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PendingValuesInner.pendingValues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of PendingValuesInner.pendingValues.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of PendingValuesInner.pendingValues.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of PendingValuesInner.pendingDemand.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of PendingValuesInner.pendingDemand.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of PendingValuesInner.pendingDemand.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of PendingValuesInner.finished.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of PendingValuesInner.finished.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of PendingValuesInner.finished.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of PendingValuesInner.cancelled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of PendingValuesInner.cancelled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of PendingValuesInner.cancelled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t String.init<A>(reflectingSensitive:)(uint64_t a1, uint64_t a2)
{
  return sub_1BC750030(a1, a2, (uint64_t (*)(uint64_t *, uint64_t))MEMORY[0x1E0DEA618]);
}

uint64_t String.init<A>(describingSensitive:)(uint64_t a1, uint64_t a2)
{
  return sub_1BC750030(a1, a2, (uint64_t (*)(uint64_t *, uint64_t))MEMORY[0x1E0DEA5F8]);
}

uint64_t sub_1BC750030(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t))
{
  id v6;
  uint64_t v7;
  uint64_t v9;

  sub_1BC818688();
  v6 = (id)HKSensitiveLogItem();
  swift_unknownObjectRelease();
  sub_1BC818178();
  swift_unknownObjectRelease();
  v7 = a3(&v9, MEMORY[0x1E0DEE9B8] + 8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v7;
}

void sub_1BC7500D8(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

void *sub_1BC750138()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1BC750184(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_1BC7501D4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id MockUNUserNotificationCenter.__allocating_init()()
{
  objc_class *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings] = 0;
  v2 = OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState;
  v3 = v1;
  v4 = MEMORY[0x1E0DEE9D8];
  v5 = sub_1BC7106F4(MEMORY[0x1E0DEE9D8]);
  sub_1BC750384();
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 32) = v5;
  *(_QWORD *)&v1[v2] = v6;

  v7 = *MEMORY[0x1E0CB7630];
  v9.receiver = v3;
  v9.super_class = v0;
  return objc_msgSendSuper2(&v9, sel_initWithBundleIdentifier_, v7);
}

id MockUNUserNotificationCenter.init()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  *(_QWORD *)&v0[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings] = 0;
  v1 = OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState;
  v2 = v0;
  v3 = MEMORY[0x1E0DEE9D8];
  v4 = sub_1BC7106F4(MEMORY[0x1E0DEE9D8]);
  sub_1BC750384();
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 40) = 0;
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v3;
  *(_QWORD *)(v5 + 32) = v4;
  *(_QWORD *)&v0[v1] = v5;

  v6 = *MEMORY[0x1E0CB7630];
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for MockUNUserNotificationCenter();
  return objc_msgSendSuper2(&v8, sel_initWithBundleIdentifier_, v6);
}

void sub_1BC750384()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45B830)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45B830);
  }
}

uint64_t type metadata accessor for MockUNUserNotificationCenter()
{
  return objc_opt_self();
}

id sub_1BC750400(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  objc_super v14;

  *(_QWORD *)&v3[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings] = 0;
  v6 = OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState;
  v7 = v3;
  v8 = MEMORY[0x1E0DEE9D8];
  v9 = sub_1BC7106F4(MEMORY[0x1E0DEE9D8]);
  sub_1BC750384();
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 40) = 0;
  *(_QWORD *)(v10 + 16) = v8;
  *(_QWORD *)(v10 + 24) = v8;
  *(_QWORD *)(v10 + 32) = v9;
  *(_QWORD *)&v3[v6] = v10;

  if (!a2)
    sub_1BC817AE8();
  v11 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v14.receiver = v7;
  v14.super_class = (Class)type metadata accessor for MockUNUserNotificationCenter();
  v12 = objc_msgSendSuper2(&v14, sel_initWithBundleIdentifier_queue_, v11, a3);

  return v12;
}

void sub_1BC75055C(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  os_unfair_lock_s *v27;
  double v28;
  id v29;
  void (*v30)(void);
  id v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  os_unfair_lock_s *v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  _QWORD *v42;
  os_unfair_lock_s *v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  int v50;
  void (*v51)(void);
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  void (*v55)(char *, char *, uint64_t);
  id v56;
  double v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  void (*v60)(void);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  id v65;

  v4 = v3;
  sub_1BC6E1440(0, (unint64_t *)&qword_1ED6B9BE8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v59 - v9;
  v11 = sub_1BC816EF4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v59 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v62 = (char *)&v59 - v20;
  MEMORY[0x1E0C80A78](v19);
  v63 = (char *)&v59 - v21;
  v22 = objc_msgSend(a1, sel_trigger);
  if (v22)
  {
    v64 = v4;
    v65 = v22;
    objc_opt_self();
    v23 = swift_dynamicCastObjCClass();
    if (v23)
    {
      v24 = (void *)v23;
      v25 = *(_QWORD *)(v64 + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState);
      v26 = (_QWORD *)(v25 + 16);
      v27 = (os_unfair_lock_s *)(v25 + 40);
      v65 = v65;
      os_unfair_lock_lock(v27);
      sub_1BC750A90(v26, a1);
      os_unfair_lock_unlock(v27);
      objc_msgSend(v24, sel_timeInterval);
      sub_1BC750C2C(a1, v28);
      if (a2)
        ((void (*)(_QWORD))a2)(0);

LABEL_6:
      return;
    }
    objc_opt_self();
    v39 = swift_dynamicCastObjCClass();
    if (!v39)
    {
      if (a2)
      {
        sub_1BC7516A4();
        v48 = (void *)swift_allocError();
        a2();

        return;
      }
      goto LABEL_6;
    }
    v40 = (void *)v39;
    v60 = a2;
    v61 = a3;
    v41 = *(_QWORD *)(v64 + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState);
    v42 = (_QWORD *)(v41 + 16);
    v43 = (os_unfair_lock_s *)(v41 + 40);
    v65 = v65;
    os_unfair_lock_lock(v43);
    sub_1BC750A90(v42, a1);
    os_unfair_lock_unlock(v43);
    sub_1BC816EE8();
    v44 = objc_msgSend(v40, sel_nextTriggerDate);
    if (v44)
    {
      v45 = v44;
      sub_1BC816ED0();

      v46 = v11;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v18, v11);
      v47 = 0;
    }
    else
    {
      v47 = 1;
      v46 = v11;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v47, 1, v46);
    v49 = v63;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v63, v46);
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v46);
    v51 = v60;
    v52 = v12;
    if (v50 == 1)
    {
      v53 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v54 = v62;
      v53(v62, v15, v46);
      sub_1BC754350((uint64_t)v10, (unint64_t *)&qword_1ED6B9BE8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v46);
      v55 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v54 = v62;
      v55(v62, v10, v46);
    }
    v56 = v65;
    sub_1BC816EDC();
    sub_1BC750C2C(a1, v57);
    if (v51)
      ((void (*)(_QWORD))v51)(0);

    v58 = *(void (**)(char *, uint64_t))(v52 + 8);
    v58(v54, v46);
    v58(v49, v46);
  }
  else
  {
    v61 = a3;
    v29 = a1;
    v30 = a2;
    v31 = v29;
    sub_1BC816EE8();
    v32 = (void *)sub_1BC816EAC();
    v33 = (void *)sub_1BC817AC4();
    v34 = (void *)sub_1BC817C50();
    v35 = objc_msgSend((id)objc_opt_self(), sel_notificationWithRequest_date_sourceIdentifier_intentIdentifiers_, v31, v32, v33, v34);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    v36 = *(os_unfair_lock_s **)(v4
                               + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState);
    v37 = (uint64_t)&v36[4];
    v38 = v36 + 10;
    os_unfair_lock_lock(v36 + 10);
    sub_1BC750B04(v37, v35);
    os_unfair_lock_unlock(v38);
    if (v30)
      ((void (*)(_QWORD))v30)(0);

  }
}

uint64_t sub_1BC750A90(_QWORD *a1, void *a2)
{
  id v3;

  v3 = a2;
  MEMORY[0x1BCCF48F0]();
  if (*(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC817C98();
  sub_1BC817CD4();
  return sub_1BC817C74();
}

uint64_t sub_1BC750B04(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  MEMORY[0x1BCCF48F0]();
  if (*(_QWORD *)((*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFF8)
                                                                                    + 0x18) >> 1)
    sub_1BC817C98();
  sub_1BC817CD4();
  return sub_1BC817C74();
}

void sub_1BC750C2C(void *a1, double a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  uint64_t v36;
  os_unfair_lock_s *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  id v46;

  ObjectType = swift_getObjectType();
  sub_1BC6E1440(0, &qword_1EF45B878, (void (*)(uint64_t))MEMORY[0x1E0CB22E8]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v38 - v7;
  sub_1BC6E1440(0, &qword_1EF45B880, (void (*)(uint64_t))MEMORY[0x1E0CB2328]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v38 - v10;
  v12 = sub_1BC818100();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7541EC();
  v17 = v16;
  v45 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC754244();
  v21 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 0.0)
  {
    sub_1BC7511F0(a1);
  }
  else
  {
    v44 = v24;
    v42 = v21;
    v43 = v22;
    sub_1BC8177DC();
    sub_1BC8180F4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    v41 = ObjectType;
    v46 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
    v25 = sub_1BC8180E8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 1, 1, v25);
    sub_1BC6ED7C0(0, &qword_1EF45B890);
    sub_1BC6E1788(&qword_1EF45B898, (uint64_t (*)(uint64_t))sub_1BC7541EC, MEMORY[0x1E0C960B0]);
    v39 = v2;
    v40 = a1;
    sub_1BC7542F8();
    sub_1BC81789C();
    sub_1BC754350((uint64_t)v8, &qword_1EF45B878, (void (*)(uint64_t))MEMORY[0x1E0CB22E8]);

    sub_1BC754350((uint64_t)v11, &qword_1EF45B880, (void (*)(uint64_t))MEMORY[0x1E0CB2328]);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v17);
    v26 = swift_allocObject();
    v27 = v39;
    swift_unknownObjectWeakInit();
    v28 = (_QWORD *)swift_allocObject();
    v30 = v40;
    v29 = v41;
    v28[2] = v26;
    v28[3] = v30;
    v28[4] = v29;
    sub_1BC6E1788(&qword_1EF45B8A8, (uint64_t (*)(uint64_t))sub_1BC754244, MEMORY[0x1E0C95A20]);
    v31 = v30;
    v32 = v42;
    v33 = v44;
    v34 = sub_1BC81792C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v32);
    v35 = *(os_unfair_lock_s **)(v27
                               + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState);
    v36 = (uint64_t)&v35[4];
    v37 = v35 + 10;
    os_unfair_lock_lock(v35 + 10);
    sub_1BC75112C(v36, v31, v34);
    os_unfair_lock_unlock(v37);
    swift_release();
  }
}

void sub_1BC751034(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1BCCF5C70](v4);
  if (v5)
  {
    v6 = (void *)v5;
    sub_1BC7511F0(a3);

  }
  else
  {
    sub_1BC8182C8();
    sub_1BC818814();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    sub_1BC8184B4();
    __break(1u);
  }
}

uint64_t sub_1BC75112C(uint64_t a1, id a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;

  v5 = objc_msgSend(a2, sel_identifier);
  v6 = sub_1BC817AE8();
  v8 = v7;

  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0x8000000000000000;
  sub_1BC71F9E4(a3, v6, v8, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 16) = v11;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BC7511F0(void *a1)
{
  char *v1;
  os_unfair_lock_s *v3;
  unint64_t *p_os_unfair_lock_opaque;
  os_unfair_lock_s *v5;
  id v6;
  id v7;

  v3 = *(os_unfair_lock_s **)&v1[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState];
  p_os_unfair_lock_opaque = (unint64_t *)&v3[4]._os_unfair_lock_opaque;
  v5 = v3 + 10;
  os_unfair_lock_lock(v3 + 10);
  sub_1BC7512B4(p_os_unfair_lock_opaque, a1);
  os_unfair_lock_unlock(v5);
  v6 = objc_msgSend(a1, sel_trigger);
  if (v6)
  {
    v7 = v6;
    if (objc_msgSend(v6, sel_repeats))
      objc_msgSend(v1, sel_addNotificationRequest_withCompletionHandler_, a1, 0);

  }
}

uint64_t sub_1BC7512B4(unint64_t *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];

  v5 = sub_1BC816EF4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2;
  v10 = sub_1BC7525D8(a1, v9);

  if (!(*a1 >> 62))
  {
    v11 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11 >= v10)
      goto LABEL_3;
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v11 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  if (v11 < v10)
    goto LABEL_11;
LABEL_3:
  v32[1] = v2;
  sub_1BC753580(v10, v11, (unint64_t *)&qword_1ED6B85A0);
  v9 = v9;
  sub_1BC816EE8();
  v12 = (void *)sub_1BC816EAC();
  v13 = (void *)sub_1BC817AC4();
  v14 = v5;
  v15 = (void *)sub_1BC817C50();
  v16 = objc_msgSend((id)objc_opt_self(), sel_notificationWithRequest_date_sourceIdentifier_intentIdentifiers_, v9, v12, v13, v15);

  v17 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  MEMORY[0x1BCCF48F0](v17);
  if (*(_QWORD *)((a1[1] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((a1[1] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_12:
    sub_1BC817C98();
  sub_1BC817CD4();
  sub_1BC817C74();
  v18 = objc_msgSend(v9, sel_identifier);
  v19 = sub_1BC817AE8();
  v21 = v20;

  v22 = a1[2];
  if (*(_QWORD *)(v22 + 16) && (v23 = sub_1BC706608(v19, v21), (v24 & 1) != 0))
  {
    v25 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease();
    if (v25)
    {
      sub_1BC817740();
      swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v26 = objc_msgSend(v9, sel_identifier);
  v27 = sub_1BC817AE8();
  v29 = v28;

  v30 = sub_1BC71E390(v27, v29);
  swift_bridgeObjectRelease();
  return sub_1BC7529A8(v30);
}

id sub_1BC75158C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v12;

  v2 = sub_1BC816EF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1;
  sub_1BC816EE8();
  v7 = (void *)sub_1BC816EAC();
  v8 = (void *)sub_1BC817AC4();
  v9 = (void *)sub_1BC817C50();
  v10 = objc_msgSend((id)objc_opt_self(), sel_notificationWithRequest_date_sourceIdentifier_intentIdentifiers_, v6, v7, v8, v9);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

unint64_t sub_1BC7516A4()
{
  unint64_t result;

  result = qword_1EF45B838;
  if (!qword_1EF45B838)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81CB20, &type metadata for MockUNUserNotificationCenterError);
    atomic_store(result, (unint64_t *)&qword_1EF45B838);
  }
  return result;
}

uint64_t sub_1BC751790()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState);
  v2 = (os_unfair_lock_s *)(v1 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 40));
  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  return v3;
}

uint64_t sub_1BC7517D8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

void sub_1BC7518B8(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  id v4;

  sub_1BC6ED7C0(0, a3);
  v4 = (id)sub_1BC817C50();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v4);

}

uint64_t sub_1BC751914()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState);
  v2 = (os_unfair_lock_s *)(v1 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 40));
  v3 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  return v3;
}

uint64_t sub_1BC75195C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

id sub_1BC751994(char *a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, os_unfair_lock_s *), unint64_t *a4)
{
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  char *v9;
  void *v10;
  uint64_t v12;

  v6 = *(os_unfair_lock_s **)&a1[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState];
  v7 = v6 + 4;
  v8 = v6 + 10;
  v9 = a1;
  os_unfair_lock_lock(v8);
  a3(&v12, v7);
  os_unfair_lock_unlock(v8);

  sub_1BC6ED7C0(0, a4);
  v10 = (void *)sub_1BC817C50();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BC751A4C(unint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  swift_bridgeObjectRetain();
  v4 = sub_1BC752B88(a1, a2);
  result = swift_bridgeObjectRelease();
  if (*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1BC8184E4();
    result = swift_bridgeObjectRelease();
    if (v6 >= v4)
      return sub_1BC753580(v4, v6, (unint64_t *)&qword_1ED6B85A0);
  }
  else
  {
    v6 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6 >= v4)
      return sub_1BC753580(v4, v6, (unint64_t *)&qword_1ED6B85A0);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC751B1C(uint64_t a1, _QWORD *a2)
{
  unint64_t *v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;

  v4 = (unint64_t *)(a1 + 8);
  swift_bridgeObjectRetain();
  v5 = sub_1BC75316C(v4, a2);
  result = swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + 8);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BC8184E4();
    result = swift_bridgeObjectRelease();
    if (v8 >= v5)
      return sub_1BC753580(v5, v8, &qword_1EF45B870);
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8 >= v5)
      return sub_1BC753580(v5, v8, &qword_1EF45B870);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC751BF0(char *a1, uint64_t a2, uint64_t a3, void (*a4)(os_unfair_lock_s *))
{
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  char *v9;

  sub_1BC817C5C();
  v6 = *(os_unfair_lock_s **)&a1[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState];
  v7 = v6 + 4;
  v8 = v6 + 10;
  v9 = a1;
  os_unfair_lock_lock(v8);
  a4(v7);
  os_unfair_lock_unlock(v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC751C84(_QWORD *a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_1BC751CC8(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = MEMORY[0x1E0DEE9D8];
  return result;
}

void sub_1BC751D0C(char *a1, uint64_t a2, void (*a3)(os_unfair_lock_s *))
{
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  char *v7;

  v4 = *(os_unfair_lock_s **)&a1[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState];
  v5 = v4 + 4;
  v6 = v4 + 10;
  v7 = a1;
  os_unfair_lock_lock(v6);
  a3(v5);
  os_unfair_lock_unlock(v6);

}

void sub_1BC751D78(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

id MockUNUserNotificationCenter.__allocating_init(bundleIdentifier:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_allocWithZone(v0);
  v2 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithBundleIdentifier_, v2);

  return v3;
}

void MockUNUserNotificationCenter.init(bundleIdentifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MockUNUserNotificationCenter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MockUNUserNotificationCenter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC751FB4@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for MockUNUserNotificationCenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockUNUserNotificationCenter.customNotificationSettings.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MockUNUserNotificationCenter.customNotificationSettings.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MockUNUserNotificationCenter.customNotificationSettings.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MockUNUserNotificationCenter.localPendingNotifications.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MockUNUserNotificationCenter.localDeliveredNotifications.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MockUNUserNotificationCenter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of MockUNUserNotificationCenter.createNotification(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t storeEnumTagSinglePayload for MockUNUserNotificationCenterError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC75213C + 4 * asc_1BC81CA30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC75215C + 4 * byte_1BC81CA35[v4]))();
}

_BYTE *sub_1BC75213C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC75215C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC752164(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC75216C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC752174(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC75217C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MockUNUserNotificationCenterError()
{
  return &type metadata for MockUNUserNotificationCenterError;
}

uint64_t destroy for MockUNUserNotificationCenter.MockNotificationState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14HealthPlatform28MockUNUserNotificationCenterC21MockNotificationStateVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MockUNUserNotificationCenter.MockNotificationState(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MockUNUserNotificationCenter.MockNotificationState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MockUNUserNotificationCenter.MockNotificationState(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MockUNUserNotificationCenter.MockNotificationState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MockUNUserNotificationCenter.MockNotificationState()
{
  return &type metadata for MockUNUserNotificationCenter.MockNotificationState;
}

unint64_t sub_1BC752374()
{
  unint64_t result;

  result = qword_1EF45B868;
  if (!qword_1EF45B868)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81CAF8, &type metadata for MockUNUserNotificationCenterError);
    atomic_store(result, (unint64_t *)&qword_1EF45B868);
  }
  return result;
}

_QWORD *sub_1BC7523B8(_QWORD *a1)
{
  return sub_1BC72613C(0, a1[2], 0, a1);
}

void sub_1BC7523D0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC8184E4();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1BCCF4FBCLL);
}

uint64_t sub_1BC752438(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v20;

  v3 = v2;
  if (a1 >> 62)
    goto LABEL_18;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    v6 = 0;
    v20 = v3;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1BCCF4FB0](v6, a1);
      else
        v7 = *(id *)(a1 + 8 * v6 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_identifier, v20);
      v10 = sub_1BC817AE8();
      v12 = v11;

      v13 = objc_msgSend(a2, sel_identifier);
      v3 = sub_1BC817AE8();
      v15 = v14;

      if (v10 == v3 && v12 == v15)
      {

        swift_bridgeObjectRelease_n();
        return v6;
      }
      v17 = sub_1BC818694();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
        return v6;
      v18 = v6 + 1;
      if (__OFADD__(v6, 1))
        break;
      ++v6;
      if (v18 == v5)
        return 0;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v5 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1BC7525D8(unint64_t *a1, void *a2)
{
  uint64_t v2;
  unint64_t v5;
  char v6;
  char v7;
  id v8;
  unint64_t i;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  unint64_t v23;
  id v24;
  id v25;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;

  v5 = swift_bridgeObjectRetain();
  v38 = a2;
  v39 = sub_1BC752438(v5, a2);
  v7 = v6;
  swift_bridgeObjectRelease();
  v37 = v2;
  if (v2)
    return v39;
  if ((v7 & 1) == 0)
  {
    v8 = (id)(v39 + 1);
    if (__OFADD__(v39, 1))
      goto LABEL_60;
    if (*a1 >> 62)
    {
LABEL_61:
      swift_bridgeObjectRetain();
      v35 = sub_1BC8184E4();
      swift_bridgeObjectRelease();
      if (v8 != (id)v35)
        goto LABEL_6;
    }
    else if (v8 != *(id *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (i = v39 + 5; ; ++i)
      {
        v10 = i - 4;
        v11 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v12 = (id)MEMORY[0x1BCCF4FB0](i - 4);
        }
        else
        {
          if ((v10 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
          if (v10 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_51;
          v12 = *(id *)(v11 + 8 * i);
        }
        v13 = v12;
        v14 = objc_msgSend(v12, sel_identifier, v37);
        v15 = sub_1BC817AE8();
        v17 = v16;

        v8 = objc_msgSend(v38, sel_identifier);
        v18 = sub_1BC817AE8();
        v20 = v19;

        if (v15 == v18 && v17 == v20)
        {

          swift_bridgeObjectRelease_n();
          goto LABEL_38;
        }
        v22 = sub_1BC818694();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
          goto LABEL_38;
        if (v10 != v39)
          break;
LABEL_35:
        if (__OFADD__(v39, 1))
          goto LABEL_53;
        ++v39;
LABEL_38:
        v8 = (id)(i - 3);
        if (__OFADD__(v10, 1))
          goto LABEL_52;
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          v32 = sub_1BC8184E4();
          swift_bridgeObjectRelease();
        }
        else
        {
          v32 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v8 == (id)v32)
          return v39;
      }
      v23 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v24 = (id)MEMORY[0x1BCCF4FB0](v39, *a1);
        v23 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_21:
          if ((v10 & 0x8000000000000000) != 0)
            goto LABEL_56;
          if (v10 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_57;
          v25 = *(id *)(v23 + 8 * i);
          goto LABEL_24;
        }
      }
      else
      {
        if ((v39 & 0x8000000000000000) != 0)
          goto LABEL_54;
        if (v39 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_55;
        v24 = *(id *)(v23 + 8 * v39 + 32);
        if ((v23 & 0xC000000000000001) == 0)
          goto LABEL_21;
      }
      v25 = (id)MEMORY[0x1BCCF4FB0](i - 4, v23);
      v23 = *a1;
LABEL_24:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v23;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v23 & 0x8000000000000000) != 0
        || (v23 & 0x4000000000000000) != 0)
      {
        sub_1BC7523D0(v23);
      }
      v27 = *(void **)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v39 + 0x20);
      *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v39 + 0x20) = v25;

      sub_1BC817C74();
      v28 = *a1;
      v29 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v28;
      if (!v29 || (v28 & 0x8000000000000000) != 0 || (v28 & 0x4000000000000000) != 0)
        sub_1BC7523D0(v28);
      if ((v10 & 0x8000000000000000) != 0)
        goto LABEL_58;
      v30 = v28 & 0xFFFFFFFFFFFFFF8;
      if (v10 >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_59;
      v31 = *(void **)(v30 + 8 * i);
      *(_QWORD *)(v30 + 8 * i) = v24;

      sub_1BC817C74();
      goto LABEL_35;
    }
    return v39;
  }
  v33 = *a1;
  if (!(v33 >> 62))
    return *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v36 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_1BC7529A8(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

uint64_t sub_1BC7529B8(unint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v19;

  if (a1 >> 62)
    goto LABEL_28;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v3)
  {
    v4 = 0;
    v19 = v3;
    v5 = a2[2];
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF4FB0](v4, a1) : *(id *)(a1 + 32 + 8 * v4);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_identifier);
      v9 = sub_1BC817AE8();
      v11 = v10;

      if (v5)
      {
        v12 = a2[4] == v9 && a2[5] == v11;
        if (v12 || (sub_1BC818694() & 1) != 0)
        {
LABEL_25:

          swift_bridgeObjectRelease();
          return v4;
        }
        if (v5 != 1)
          break;
      }
LABEL_22:

      swift_bridgeObjectRelease();
      if (__OFADD__(v4++, 1))
        goto LABEL_27;
      if (v4 == v19)
        return 0;
    }
    v13 = a2 + 7;
    v14 = 1;
    while (1)
    {
      v15 = v14 + 1;
      if (__OFADD__(v14, 1))
        break;
      v16 = *(v13 - 1) == v9 && *v13 == v11;
      if (v16 || (sub_1BC818694() & 1) != 0)
        goto LABEL_25;
      v13 += 2;
      ++v14;
      if (v15 == v5)
        goto LABEL_22;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    v3 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1BC752B88(unint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  unint64_t v22;
  id v23;
  id v24;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v26;
  unint64_t v27;
  int v28;
  void *v29;
  BOOL v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v5 = swift_bridgeObjectRetain();
  v36 = a2;
  v6 = sub_1BC7529B8(v5, a2);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (v2)
    return v6;
  if ((v8 & 1) == 0)
  {
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_70;
    if (*a1 >> 62)
    {
LABEL_71:
      swift_bridgeObjectRetain();
      v34 = sub_1BC8184E4();
      swift_bridgeObjectRelease();
      if (v9 != v34)
        goto LABEL_6;
    }
    else if (v9 != *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      v37 = v36[2];
      while (1)
      {
        v10 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v11 = (id)MEMORY[0x1BCCF4FB0](v9);
        }
        else
        {
          if ((v9 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
          if (v9 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_60;
          v11 = *(id *)(v10 + 8 * v9 + 32);
        }
        v12 = v11;
        v13 = objc_msgSend(v11, sel_identifier);
        v14 = sub_1BC817AE8();
        v16 = v15;

        if (v37)
        {
          v17 = v36[4] == v14 && v36[5] == v16;
          if (v17 || (sub_1BC818694() & 1) != 0)
          {
LABEL_17:

            swift_bridgeObjectRelease();
            goto LABEL_47;
          }
          if (v37 != 1)
          {
            v18 = v36 + 7;
            v19 = 1;
            while (1)
            {
              v20 = v19 + 1;
              if (__OFADD__(v19, 1))
                break;
              v21 = *(v18 - 1) == v14 && *v18 == v16;
              if (v21 || (sub_1BC818694() & 1) != 0)
                goto LABEL_17;
              v18 += 2;
              ++v19;
              if (v20 == v37)
                goto LABEL_27;
            }
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
            goto LABEL_71;
          }
        }
LABEL_27:

        swift_bridgeObjectRelease();
        if (v6 != v9)
          break;
LABEL_46:
        v30 = __OFADD__(v6++, 1);
        if (v30)
          goto LABEL_63;
LABEL_47:
        v30 = __OFADD__(v9++, 1);
        if (v30)
          goto LABEL_61;
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          v31 = sub_1BC8184E4();
          swift_bridgeObjectRelease();
        }
        else
        {
          v31 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v31)
          return v6;
      }
      v22 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v23 = (id)MEMORY[0x1BCCF4FB0](v6, *a1);
        v22 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_32:
          if ((v9 & 0x8000000000000000) != 0)
            goto LABEL_66;
          if (v9 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_67;
          v24 = *(id *)(v22 + 8 * v9 + 32);
          goto LABEL_35;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0)
          goto LABEL_64;
        if (v6 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_65;
        v23 = *(id *)(v22 + 8 * v6 + 32);
        if ((v22 & 0xC000000000000001) == 0)
          goto LABEL_32;
      }
      v24 = (id)MEMORY[0x1BCCF4FB0](v9, v22);
      v22 = *a1;
LABEL_35:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v22;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v22 & 0x8000000000000000) != 0
        || (v22 & 0x4000000000000000) != 0)
      {
        sub_1BC7523D0(v22);
      }
      v26 = *(void **)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
      *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v24;

      sub_1BC817C74();
      v27 = *a1;
      v28 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v27;
      if (!v28 || (v27 & 0x8000000000000000) != 0 || (v27 & 0x4000000000000000) != 0)
        sub_1BC7523D0(v27);
      if ((v9 & 0x8000000000000000) != 0)
        goto LABEL_68;
      if (v9 >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_69;
      v29 = *(void **)((v27 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20);
      *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20) = v23;

      sub_1BC817C74();
      goto LABEL_46;
    }
    return v6;
  }
  v32 = *a1;
  if (!(v32 >> 62))
    return *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v35 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_1BC752F7C(unint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v20;

  if (a1 >> 62)
    goto LABEL_28;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v3)
  {
    v4 = 0;
    v20 = v3;
    v5 = a2[2];
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF4FB0](v4, a1) : *(id *)(a1 + 32 + 8 * v4);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_request);
      v9 = objc_msgSend(v8, sel_identifier);

      v10 = sub_1BC817AE8();
      v12 = v11;

      if (v5)
      {
        v13 = a2[4] == v10 && a2[5] == v12;
        if (v13 || (sub_1BC818694() & 1) != 0)
        {
LABEL_25:

          swift_bridgeObjectRelease();
          return v4;
        }
        if (v5 != 1)
          break;
      }
LABEL_22:

      swift_bridgeObjectRelease();
      if (__OFADD__(v4++, 1))
        goto LABEL_27;
      if (v4 == v20)
        return 0;
    }
    v14 = a2 + 7;
    v15 = 1;
    while (1)
    {
      v16 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      v17 = *(v14 - 1) == v10 && *v14 == v12;
      if (v17 || (sub_1BC818694() & 1) != 0)
        goto LABEL_25;
      v14 += 2;
      ++v15;
      if (v16 == v5)
        goto LABEL_22;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    v3 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1BC75316C(unint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  unint64_t v23;
  id v24;
  id v25;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v27;
  unint64_t v28;
  int v29;
  void *v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;

  v5 = swift_bridgeObjectRetain();
  v37 = a2;
  v6 = sub_1BC752F7C(v5, a2);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (v2)
    return v6;
  if ((v8 & 1) == 0)
  {
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_70;
    if (*a1 >> 62)
    {
LABEL_71:
      swift_bridgeObjectRetain();
      v35 = sub_1BC8184E4();
      swift_bridgeObjectRelease();
      if (v9 != v35)
        goto LABEL_6;
    }
    else if (v9 != *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      v38 = v37[2];
      while (1)
      {
        v10 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v11 = (id)MEMORY[0x1BCCF4FB0](v9);
        }
        else
        {
          if ((v9 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
          if (v9 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_60;
          v11 = *(id *)(v10 + 8 * v9 + 32);
        }
        v12 = v11;
        v13 = objc_msgSend(v11, sel_request);
        v14 = objc_msgSend(v13, sel_identifier);

        v15 = sub_1BC817AE8();
        v17 = v16;

        if (v38)
        {
          v18 = v37[4] == v15 && v37[5] == v17;
          if (v18 || (sub_1BC818694() & 1) != 0)
          {
LABEL_17:

            swift_bridgeObjectRelease();
            goto LABEL_47;
          }
          if (v38 != 1)
          {
            v19 = v37 + 7;
            v20 = 1;
            while (1)
            {
              v21 = v20 + 1;
              if (__OFADD__(v20, 1))
                break;
              v22 = *(v19 - 1) == v15 && *v19 == v17;
              if (v22 || (sub_1BC818694() & 1) != 0)
                goto LABEL_17;
              v19 += 2;
              ++v20;
              if (v21 == v38)
                goto LABEL_27;
            }
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
            goto LABEL_71;
          }
        }
LABEL_27:

        swift_bridgeObjectRelease();
        if (v6 != v9)
          break;
LABEL_46:
        v31 = __OFADD__(v6++, 1);
        if (v31)
          goto LABEL_63;
LABEL_47:
        v31 = __OFADD__(v9++, 1);
        if (v31)
          goto LABEL_61;
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          v32 = sub_1BC8184E4();
          swift_bridgeObjectRelease();
        }
        else
        {
          v32 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v32)
          return v6;
      }
      v23 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v24 = (id)MEMORY[0x1BCCF4FB0](v6, *a1);
        v23 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_32:
          if ((v9 & 0x8000000000000000) != 0)
            goto LABEL_66;
          if (v9 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_67;
          v25 = *(id *)(v23 + 8 * v9 + 32);
          goto LABEL_35;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0)
          goto LABEL_64;
        if (v6 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_65;
        v24 = *(id *)(v23 + 8 * v6 + 32);
        if ((v23 & 0xC000000000000001) == 0)
          goto LABEL_32;
      }
      v25 = (id)MEMORY[0x1BCCF4FB0](v9, v23);
      v23 = *a1;
LABEL_35:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v23;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v23 & 0x8000000000000000) != 0
        || (v23 & 0x4000000000000000) != 0)
      {
        sub_1BC7523D0(v23);
      }
      v27 = *(void **)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
      *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v25;

      sub_1BC817C74();
      v28 = *a1;
      v29 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v28;
      if (!v29 || (v28 & 0x8000000000000000) != 0 || (v28 & 0x4000000000000000) != 0)
        sub_1BC7523D0(v28);
      if ((v9 & 0x8000000000000000) != 0)
        goto LABEL_68;
      if (v9 >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_69;
      v30 = *(void **)((v28 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20);
      *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20) = v24;

      sub_1BC817C74();
      goto LABEL_46;
    }
    return v6;
  }
  v33 = *a1;
  if (!(v33 >> 62))
    return *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v36 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_1BC753580(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t *v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a3;
    v3 = a2;
    v5 = a1;
    v7 = (unint64_t *)*v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)(((unint64_t)v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v23 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  if (v23 < v3)
    goto LABEL_31;
LABEL_4:
  v7 = (unint64_t *)(v3 - v5);
  if (__OFSUB__(v3, v5))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v8 = (unint64_t *)(v5 - v3);
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v9 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    v10 = (uint64_t)v8 + v9;
    if (!__OFADD__(v9, v8))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v14 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    v11 = *v4;
    goto LABEL_15;
  }
  if (*v4 >> 62)
    goto LABEL_34;
  v9 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v10 = v9 - (_QWORD)v7;
  if (__OFADD__(v9, v8))
    goto LABEL_36;
LABEL_8:
  v11 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v11;
  v9 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v11 & 0x8000000000000000) == 0
    && (v11 & 0x4000000000000000) == 0)
  {
    v13 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v10 <= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v9 = 1;
  }
  v26 = v5;
  v7 = v8;
  v8 = v6;
  if (v11 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v10)
    v14 = v10;
  swift_bridgeObjectRetain();
  *v4 = MEMORY[0x1BCCF4FBC](v9, v14, 1, v11);
  swift_bridgeObjectRelease();
  v13 = *v4 & 0xFFFFFFFFFFFFFF8;
  v6 = v8;
  v8 = v7;
  v5 = v26;
LABEL_18:
  v15 = v13 + 32;
  v16 = (char *)(v13 + 32 + 8 * v5);
  sub_1BC6ED7C0(0, v6);
  swift_arrayDestroy();
  if (!v8)
    return sub_1BC817C74();
  if (!(*v4 >> 62))
  {
    v17 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = v17 - v3;
    if (!__OFSUB__(v17, v3))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v24 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  v18 = v24 - v3;
  if (__OFSUB__(v24, v3))
    goto LABEL_40;
LABEL_21:
  if ((v18 & 0x8000000000000000) == 0)
  {
    v19 = (char *)(v15 + 8 * v3);
    if (v5 != v3 || v16 >= &v19[8 * v18])
      memmove(v16, v19, 8 * v18);
    if (!(*v4 >> 62))
    {
      v20 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      v21 = (char *)v8 + v20;
      if (!__OFADD__(v20, v8))
      {
LABEL_27:
        *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) = v21;
        return sub_1BC817C74();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v25 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    v21 = (char *)v8 + v25;
    if (!__OFADD__(v25, v8))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC7538B0(char *a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  objc_super v9;
  _QWORD aBlock[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  v5 = &a1[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings];
  swift_beginAccess();
  v6 = *(_QWORD *)v5;
  if (v6)
  {
    _Block_copy(a2);
    a2[2](a2, v6);
  }
  else
  {
    aBlock[4] = sub_1BC7539F8;
    aBlock[5] = v4;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC751D78;
    aBlock[3] = &block_descriptor_3;
    v7 = _Block_copy(aBlock);
    _Block_copy(a2);
    swift_retain();
    swift_release();
    v9.receiver = a1;
    v9.super_class = (Class)type metadata accessor for MockUNUserNotificationCenter();
    objc_msgSendSuper2(&v9, sel_getNotificationSettingsWithCompletionHandler_, v7);
    _Block_release(v7);
  }
  return swift_release();
}

uint64_t sub_1BC7539D4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BC7539F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1BC753A08(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC751B1C(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_1BC753A20(unint64_t *a1)
{
  uint64_t v1;

  return sub_1BC751A4C(a1, *(_QWORD **)(v1 + 16));
}

void sub_1BC753A38(uint64_t a1)
{
  uint64_t v1;

  sub_1BC7518B8(a1, *(_QWORD *)(v1 + 16), &qword_1EF45B870);
}

uint64_t sub_1BC753A60(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*(_QWORD *)(a1 + 8));
}

void sub_1BC753A84(uint64_t a1)
{
  uint64_t v1;

  sub_1BC7518B8(a1, *(_QWORD *)(v1 + 16), (unint64_t *)&qword_1ED6B85A0);
}

uint64_t sub_1BC753AAC(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

void sub_1BC753AD0(uint64_t a1)
{
  uint64_t v1;

  sub_1BC7C7260(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BC753AD8(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1BC72613C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  sub_1BC6ED114();
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC753C44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  if (v19 < v2)
    goto LABEL_31;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v8 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v5 = *v3;
  if (*v3 >> 62)
    goto LABEL_34;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - v7;
  if (__OFADD__(v8, v6))
    goto LABEL_36;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if (v5 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1BCCF4FBC](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6B6358);
  swift_arrayDestroy();
  if (!v6)
    return sub_1BC817C74();
  if (!(v5 >> 62))
  {
    v13 = *(_QWORD *)(v11 + 16);
    v14 = v13 - v2;
    if (!__OFSUB__(v13, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v20 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  v14 = v20 - v2;
  if (__OFSUB__(v20, v2))
    goto LABEL_40;
LABEL_21:
  if ((v14 & 0x8000000000000000) == 0)
  {
    v15 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14)
      memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
    if (!(v5 >> 62))
    {
      v16 = *(_QWORD *)(v11 + 16);
      v17 = v16 + v6;
      if (!__OFADD__(v16, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v17;
        return sub_1BC817C74();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v21 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    v17 = v21 + v6;
    if (!__OFADD__(v21, v6))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

uint64_t sub_1BC753F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  if (v19 < v2)
    goto LABEL_31;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v8 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v5 = *v3;
  if (*v3 >> 62)
    goto LABEL_34;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - v7;
  if (__OFADD__(v8, v6))
    goto LABEL_36;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if (v5 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1BCCF4FBC](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  type metadata accessor for HealthPlatformContextProvider.Context(0);
  swift_arrayDestroy();
  if (!v6)
    return sub_1BC817C74();
  if (!(v5 >> 62))
  {
    v13 = *(_QWORD *)(v11 + 16);
    v14 = v13 - v2;
    if (!__OFSUB__(v13, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v20 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  v14 = v20 - v2;
  if (__OFSUB__(v20, v2))
    goto LABEL_40;
LABEL_21:
  if ((v14 & 0x8000000000000000) == 0)
  {
    v15 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14)
      memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
    if (!(v5 >> 62))
    {
      v16 = *(_QWORD *)(v11 + 16);
      v17 = v16 + v6;
      if (!__OFADD__(v16, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v17;
        return sub_1BC817C74();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v21 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    v17 = v21 + v6;
    if (!__OFADD__(v21, v6))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

void sub_1BC7541EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B82E0)
  {
    v0 = sub_1BC8177D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B82E0);
  }
}

void sub_1BC754244()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45B888)
  {
    sub_1BC7541EC();
    sub_1BC6ED7C0(255, &qword_1EF45B890);
    sub_1BC6E1788(&qword_1EF45B898, (uint64_t (*)(uint64_t))sub_1BC7541EC, MEMORY[0x1E0C960B0]);
    sub_1BC7542F8();
    v0 = sub_1BC817638();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45B888);
  }
}

unint64_t sub_1BC7542F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45B8A0;
  if (!qword_1EF45B8A0)
  {
    v1 = sub_1BC6ED7C0(255, &qword_1EF45B890);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0CB2358], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45B8A0);
  }
  return result;
}

uint64_t sub_1BC754350(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BC6E1440(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BC75438C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC7543B0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BC7543DC(uint64_t a1)
{
  uint64_t v1;

  sub_1BC751034(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1BC7543E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BC75195C(a1, a2);
}

uint64_t sub_1BC754410@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BC7517D8(a1, a2);
}

__n128 BasicGeneratorPipeline.domain.setter(uint64_t a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  void *v5;
  __n128 result;

  v3 = *(_QWORD *)a1;
  v4 = *(_BYTE *)(a1 + 24);
  v5 = (void *)v1->n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v1->n128_u64[1] = v3;
  result = *(__n128 *)(a1 + 8);
  v1[1] = result;
  v1[2].n128_u8[0] = v4;
  return result;
}

uint64_t (*BasicGeneratorPipeline.domain.modify())()
{
  return nullsub_1;
}

double BasicGeneratorPipeline.init(generator:domain:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  double result;
  double v15[3];
  _BYTE v16[40];

  sub_1BC75487C(0, &qword_1EF45B8B0, (void (*)(uint64_t))sub_1BC7545B0);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v15 - v9;
  v11 = *a2;
  v12 = *((_BYTE *)a2 + 24);
  sub_1BC6FC700(a1, (uint64_t)v16);
  sub_1BC7545B0();
  *(_OWORD *)v15 = *(_OWORD *)(a2 + 1);
  sub_1BC8177DC();
  sub_1BC7548F0(&qword_1EF45B8B8, &qword_1EF45B8B0, (void (*)(uint64_t))sub_1BC7545B0);
  v13 = sub_1BC817854();
  __swift_destroy_boxed_opaque_existential_0(a1);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)a3 = v13;
  *(_QWORD *)(a3 + 8) = v11;
  result = v15[0];
  *(_OWORD *)(a3 + 16) = *(_OWORD *)v15;
  *(_BYTE *)(a3 + 32) = v12;
  return result;
}

unint64_t sub_1BC7545B0()
{
  unint64_t result;

  result = qword_1ED6B8AA0;
  if (!qword_1ED6B8AA0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B8AA0);
  }
  return result;
}

uint64_t BasicGenerator.publisher.getter()
{
  return swift_retain();
}

uint64_t _s14HealthPlatform22BasicGeneratorPipelineV6domainAA0D6DomainVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;

  v2 = *(void **)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  v6 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static BasicGenerator.empty.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[2];

  sub_1BC75487C(0, &qword_1ED6BAC60, (void (*)(uint64_t))sub_1BC74D608);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v12 - v5;
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = sub_1BC6EBB28(MEMORY[0x1E0DEE9D8]);
  v9 = sub_1BC6EAFB8(v7);
  v12[1] = v7;
  sub_1BC74D608();
  sub_1BC8177DC();
  sub_1BC7548F0(&qword_1ED6BAC58, &qword_1ED6BAC60, (void (*)(uint64_t))sub_1BC74D608);
  v10 = sub_1BC817854();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = 0;
  return result;
}

double BasicGenerator.init(changes:domain:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  double result;
  double v15[3];
  uint64_t v16;

  sub_1BC75487C(0, &qword_1ED6BAC60, (void (*)(uint64_t))sub_1BC74D608);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v15 - v9;
  v11 = *a2;
  v12 = *((_BYTE *)a2 + 24);
  v16 = a1;
  sub_1BC74D608();
  *(_OWORD *)v15 = *(_OWORD *)(a2 + 1);
  sub_1BC8177DC();
  sub_1BC7548F0(&qword_1ED6BAC58, &qword_1ED6BAC60, (void (*)(uint64_t))sub_1BC74D608);
  v13 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)a3 = v13;
  *(_QWORD *)(a3 + 8) = v11;
  result = v15[0];
  *(_OWORD *)(a3 + 16) = *(_OWORD *)v15;
  *(_BYTE *)(a3 + 32) = v12;
  return result;
}

void sub_1BC75487C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC8177D0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

__n128 _s14HealthPlatform22BasicGeneratorPipelineV9publisher6domainAC7Combine12AnyPublisherVyAA0D0_ps5NeverOG_AA0D6DomainVtcfC_0@<Q0>(unint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 24);
  a3->n128_u64[0] = a1;
  a3->n128_u64[1] = v3;
  result = *(__n128 *)(a2 + 8);
  a3[1] = result;
  a3[2].n128_u8[0] = v4;
  return result;
}

uint64_t sub_1BC7548E8()
{
  return swift_retain();
}

uint64_t sub_1BC7548F0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC75487C(255, a2, a3);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C960B0], v5);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for BasicGeneratorPipeline()
{
  return &type metadata for BasicGeneratorPipeline;
}

uint64_t _s14HealthPlatform22BasicGeneratorPipelineVwxx_0(uint64_t a1)
{
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s14HealthPlatform22BasicGeneratorPipelineVwcp_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_retain();
  v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14HealthPlatform22BasicGeneratorPipelineVwca_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t _s14HealthPlatform22BasicGeneratorPipelineVwta_0(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t _s14HealthPlatform22BasicGeneratorPipelineVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BC754B1C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BasicGenerator()
{
  return &type metadata for BasicGenerator;
}

void HealthPlatformOrchestrationContext.feedItemStorage(for:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t);
  void *v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v24[2] = a5;
  v11 = sub_1BC817338();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(a4 + 8) + 16);
  v25 = v5;
  v26 = a3;
  v16 = (void *)v15(a3);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, sel_profileIdentifier);
    v19 = _sSo11NSPredicateC14HealthPlatformE24feedItemStoragePredicate3for17profileIdentifierAB0B13Orchestration8Executor_p_So09HKProfileJ0CtFZ_0(a1, a2, v18);

    (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(a4 + 16))(a1, a2, v19, v26, a4);
  }
  else
  {
    v24[1] = sub_1BC6FCD40();
    sub_1BC6FCD7C();
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BC81A0F0;
    swift_getObjectType();
    sub_1BC817518();
    v21 = sub_1BC81732C();
    v24[0] = v6;
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v20 + 64) = sub_1BC6ED740();
    *(_QWORD *)(v20 + 32) = v21;
    *(_QWORD *)(v20 + 40) = v23;
    v19 = (void *)sub_1BC817E3C();
    (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(a4 + 16))(a1, a2, v19, v26, a4);
  }

}

void FeedItemNotificationManagerStore.init(domain:primaryHealthStore:)(void *a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  sub_1BC816C60();
  swift_allocObject();
  v4 = sub_1BC816C54();
  sub_1BC816C3C();
  swift_allocObject();
  v5 = sub_1BC816C30();
  type metadata accessor for UnfairLock();
  v6 = swift_allocObject();
  v7 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v6 + 16) = v7;
  *v7 = 0;
  v8 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
  v9 = a1;
  v10 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v8, sel_initWithCategory_domainName_healthStore_, 1, v10, v9);

  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = (uint64_t)v9;
  a2[4] = (uint64_t)v11;
}

void FeedItemNotificationManagerStore.addOrUpdate(_:)(__int128 *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  unsigned __int8 v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;
  _OWORD v34[3];
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v27 = sub_1BC816F3C();
  v4 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[2];
  v35 = *((_QWORD *)a1 + 6);
  v8 = *a1;
  v34[1] = a1[1];
  v34[2] = v7;
  v34[0] = v8;
  v9 = *((_QWORD *)v1 + 4);
  v28 = v1[1];
  v30 = v28;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v28 + 16));
  v10 = *(void **)&v34[0];
  v29 = *v1;
  v32[0] = v29;
  v32[1] = v28;
  v33 = v9;
  v11 = *(id *)&v34[0];
  v12 = sub_1BC75517C(v10);
  v13 = sub_1BC6EBBBC(v12);
  swift_bridgeObjectRelease();
  v31 = v13;
  sub_1BC6ED3E8((id *)v34);
  sub_1BC728AD8((uint64_t)v32, v34);
  v14 = *(void **)&v32[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v15 = sub_1BC706354(v31);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v32[0] = v15;
  sub_1BC7558F4();
  sub_1BC755C28(&qword_1EF45B8C0, (uint64_t (*)(void))sub_1BC755948, MEMORY[0x1E0DEAF10]);
  v16 = sub_1BC816C48();
  v18 = v17;
  swift_release();
  if (!v2)
  {
    *(_QWORD *)&v29 = v9;
    v26 = v16;
    *(_QWORD *)&v28 = v18;
    v19 = (void *)sub_1BC816E58();
    if (v10)
    {
      v20 = v11;
      v21 = objc_msgSend(v20, sel_identifier);
      sub_1BC816F24();

      sub_1BC816F00();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v27);
    }
    v22 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v32[0] = 0;
    v23 = objc_msgSend((id)v29, sel_setData_forKey_error_, v19, v22, v32);

    v24 = *(id *)&v32[0];
    if ((v23 & 1) == 0)
    {
      v25 = v24;
      sub_1BC816D5C();

      swift_willThrow();
    }
    sub_1BC6ECB60(v26, v28);
  }

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v30 + 16));
}

uint64_t sub_1BC75517C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD v12[6];

  v2 = sub_1BC816F3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v6 = a1;
    v7 = objc_msgSend(v6, sel_identifier);
    sub_1BC816F24();

    sub_1BC816F00();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v8 = sub_1BC817F2C();
  v10 = v9;
  swift_bridgeObjectRelease();
  if (v10 >> 60 == 15)
    return MEMORY[0x1E0DEE9D8];
  sub_1BC7558F4();
  sub_1BC6ECBE8(v8, v10);
  sub_1BC755C28(&qword_1EF45B8D8, (uint64_t (*)(void))sub_1BC755C8C, MEMORY[0x1E0DEAF40]);
  sub_1BC816C24();
  sub_1BC6ECB4C(v8, v10);
  sub_1BC6ECB4C(v8, v10);
  return v12[4];
}

uint64_t sub_1BC7555EC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  unint64_t v12;
  int64_t v13;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  __int128 v19;
  _OWORD v20[2];
  uint64_t v21;

  v3 = *a1;
  v21 = MEMORY[0x1E0DEE9D8];
  v15 = v3 + 64;
  v4 = 1 << *(_BYTE *)(v3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v3 + 64);
  v16 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    sub_1BC6E1A84(*(_QWORD *)(v3 + 56) + 32 * i, (uint64_t)v20);
    sub_1BC6EFBDC(v20, &v19);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1BC755BE4();
      swift_allocError();
      swift_willThrow();
      return swift_release();
    }
    sub_1BC7558F4();
    sub_1BC6ECBE8(v17, v18);
    sub_1BC6ECBE8(v17, v18);
    sub_1BC755C28(&qword_1EF45B8D8, (uint64_t (*)(void))sub_1BC755C8C, MEMORY[0x1E0DEAF40]);
    sub_1BC816C24();
    sub_1BC6ECB60(v17, v18);
    if (v2)
    {
      swift_bridgeObjectRelease();
      sub_1BC6ECB60(v17, v18);
      swift_willThrow();
      sub_1BC6ECB60(v17, v18);
      return swift_release();
    }
    sub_1BC6ECB60(v17, v18);
    sub_1BC806F44(v19);
    result = sub_1BC6ECB60(v17, v18);
    if (v6)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v8 >= v16)
      goto LABEL_29;
    v12 = *(_QWORD *)(v15 + 8 * v8);
    if (!v12)
      break;
LABEL_17:
    v6 = (v12 - 1) & v12;
  }
  v13 = v8 + 1;
  if (v8 + 1 >= v16)
    goto LABEL_29;
  v12 = *(_QWORD *)(v15 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v8 + 2;
  if (v8 + 2 >= v16)
    goto LABEL_29;
  v12 = *(_QWORD *)(v15 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v8 + 3;
  if (v8 + 3 >= v16)
    goto LABEL_29;
  v12 = *(_QWORD *)(v15 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v8 + 4;
  if (v8 + 4 >= v16)
  {
LABEL_29:
    result = swift_release();
    *a2 = v21;
    return result;
  }
  v12 = *(_QWORD *)(v15 + 8 * v13);
  if (v12)
  {
LABEL_16:
    v8 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v16)
      goto LABEL_29;
    v12 = *(_QWORD *)(v15 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_17;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_1BC7558F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B83E0)
  {
    v0 = sub_1BC817D04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B83E0);
  }
}

unint64_t sub_1BC755948()
{
  unint64_t result;

  result = qword_1EF45B8C8;
  if (!qword_1EF45B8C8)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for PluginFeedItem.NotificationIdentifier, &type metadata for PluginFeedItem.NotificationIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EF45B8C8);
  }
  return result;
}

void destroy for FeedItemNotificationManagerStore(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();

}

_QWORD *initializeWithCopy for FeedItemNotificationManagerStore(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = v4;
  v7 = v5;
  return a1;
}

_QWORD *assignWithCopy for FeedItemNotificationManagerStore(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  v4 = (void *)a2[3];
  v5 = (void *)a1[3];
  a1[3] = v4;
  v6 = v4;

  v7 = (void *)a2[4];
  v8 = (void *)a1[4];
  a1[4] = v7;
  v9 = v7;

  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FeedItemNotificationManagerStore(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemNotificationManagerStore(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedItemNotificationManagerStore(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemNotificationManagerStore()
{
  return &type metadata for FeedItemNotificationManagerStore;
}

unint64_t sub_1BC755BE4()
{
  unint64_t result;

  result = qword_1EF45B8D0;
  if (!qword_1EF45B8D0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81CC8C, &type metadata for FeedItemNotificationManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF45B8D0);
  }
  return result;
}

uint64_t sub_1BC755C28(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BC7558F4();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCF5AB4](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC755C8C()
{
  unint64_t result;

  result = qword_1EF45B8E0;
  if (!qword_1EF45B8E0)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for PluginFeedItem.NotificationIdentifier, &type metadata for PluginFeedItem.NotificationIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EF45B8E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedItemNotificationManagerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC755D10 + 4 * asc_1BC81CBC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC755D30 + 4 * byte_1BC81CBC5[v4]))();
}

_BYTE *sub_1BC755D10(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC755D30(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC755D38(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC755D40(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC755D48(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC755D50(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedItemNotificationManagerError()
{
  return &type metadata for FeedItemNotificationManagerError;
}

unint64_t sub_1BC755D70()
{
  unint64_t result;

  result = qword_1EF45B8E8;
  if (!qword_1EF45B8E8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81CC64, &type metadata for FeedItemNotificationManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF45B8E8);
  }
  return result;
}

uint64_t RecursiveUnfairLock.__allocating_init()()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_allocObject();
  v1 = (_QWORD *)swift_slowAlloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = 0;
  return v0;
}

uint64_t RecursiveUnfairLock.init()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_slowAlloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = 0;
  return v0;
}

uint64_t RecursiveUnfairLock.deinit()
{
  uint64_t v0;

  MEMORY[0x1BCCF5BA4](*(_QWORD *)(v0 + 16), -1, -1);
  return v0;
}

uint64_t RecursiveUnfairLock.__deallocating_deinit()
{
  uint64_t v0;

  MEMORY[0x1BCCF5BA4](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC755E70()
{
  return os_unfair_recursive_lock_lock_with_options();
}

uint64_t os_unfair_recursive_lock_lock()
{
  return os_unfair_recursive_lock_lock_with_options();
}

uint64_t sub_1BC755E84()
{
  return os_unfair_recursive_lock_unlock();
}

void sub_1BC755E8C()
{
  uint64_t v0;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v0 + 16));
}

uint64_t sub_1BC755E94()
{
  return os_unfair_recursive_lock_trylock();
}

uint64_t sub_1BC755EAC()
{
  return os_unfair_recursive_lock_lock();
}

uint64_t sub_1BC755EB8()
{
  return os_unfair_recursive_lock_unlock();
}

uint64_t type metadata accessor for RecursiveUnfairLock()
{
  return objc_opt_self();
}

uint64_t method lookup function for RecursiveUnfairLock()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecursiveUnfairLock.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of RecursiveUnfairLock.lock()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of RecursiveUnfairLock.unlock()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of RecursiveUnfairLock.assertOwner()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of RecursiveUnfairLock.trylock()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t PluginFeedItem.SharableModelReference.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.SharableModelReference.init(identifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t PluginFeedItem.SharableModelReference.init(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v5 = *a1;
  v4 = a1[1];
  swift_bridgeObjectRetain();
  result = sub_1BC755F9C((uint64_t)a1);
  *a2 = v5;
  a2[1] = v4;
  return result;
}

uint64_t sub_1BC755F9C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PluginSharableModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static PluginFeedItem.SharableModelReference.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BC818694();
}

uint64_t PluginFeedItem.SharableModelReference.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  return swift_bridgeObjectRelease();
}

uint64_t PluginFeedItem.SharableModelReference.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC817B30();
  return sub_1BC818778();
}

uint64_t sub_1BC756094(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BC818694();
}

uint64_t sub_1BC7560C4()
{
  sub_1BC81873C();
  sub_1BC817B30();
  return sub_1BC818778();
}

uint64_t sub_1BC75610C()
{
  return sub_1BC817B30();
}

uint64_t sub_1BC756114()
{
  sub_1BC81873C();
  sub_1BC817B30();
  return sub_1BC818778();
}

Swift::Void __swiftcall PluginFeedItem.setAssociatedSharableModelReferences(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = type metadata accessor for PluginSharableModel();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  v10 = *((_QWORD *)a1._rawValue + 2);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v22 = v1;
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1BC6E8AF0(0, v10, 0);
    v12 = (char *)a1._rawValue
        + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v13 = *(_QWORD *)(v4 + 72);
    v11 = v24;
    v23 = v13;
    do
    {
      sub_1BC75630C((uint64_t)v12, (uint64_t)v9);
      sub_1BC75630C((uint64_t)v9, (uint64_t)v7);
      v15 = *v7;
      v14 = v7[1];
      swift_bridgeObjectRetain();
      sub_1BC755F9C((uint64_t)v7);
      sub_1BC755F9C((uint64_t)v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC6E8AF0(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v13 = v23;
        v11 = v24;
      }
      v17 = *(_QWORD *)(v11 + 16);
      v16 = *(_QWORD *)(v11 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1BC6E8AF0(v16 > 1, v17 + 1, 1);
        v13 = v23;
        v11 = v24;
      }
      *(_QWORD *)(v11 + 16) = v17 + 1;
      v18 = v11 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v15;
      *(_QWORD *)(v18 + 40) = v14;
      v12 += v13;
      --v10;
    }
    while (v10);
    v1 = v22;
  }
  v19 = sub_1BC6EBA5C(v11);
  swift_bridgeObjectRelease();
  v20 = *(int *)(type metadata accessor for PluginFeedItem() + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v20) = v19;
}

uint64_t sub_1BC75630C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PluginSharableModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC756354()
{
  unint64_t result;

  result = qword_1ED6BA700;
  if (!qword_1ED6BA700)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for PluginFeedItem.SharableModelReference, &type metadata for PluginFeedItem.SharableModelReference);
    atomic_store(result, (unint64_t *)&qword_1ED6BA700);
  }
  return result;
}

_QWORD *_s22SharableModelReferenceVwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s22SharableModelReferenceVwxx()
{
  return swift_bridgeObjectRelease();
}

_QWORD *_s22SharableModelReferenceVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s22SharableModelReferenceVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PluginFeedItem.SharableModelReference()
{
  return &type metadata for PluginFeedItem.SharableModelReference;
}

uint64_t static InputSignalSet.LookupKey.pregnancyState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC8173EC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6B9460 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED6B9440);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  type metadata accessor for PregnancyStateInputSignal();
  return sub_1BC817260();
}

uint64_t static PregnancyStateInputSignal.identityConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC8173EC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6B9460 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED6B9440);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  return sub_1BC8173C8();
}

uint64_t sub_1BC7565C8()
{
  uint64_t v0;
  id v1;

  v0 = sub_1BC8173EC();
  __swift_allocate_value_buffer(v0, qword_1ED6B9440);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED6B9440);
  sub_1BC8186D0();
  v1 = (id)HKSensitiveLogItem();
  swift_unknownObjectRelease();
  sub_1BC818178();
  swift_unknownObjectRelease();
  sub_1BC817AF4();
  return sub_1BC8173F8();
}

uint64_t type metadata accessor for PregnancyStateInputSignal()
{
  return objc_opt_self();
}

uint64_t _s14HealthPlatform25PregnancyStateInputSignalC10identifier0A13Orchestration0eF10IdentifierVvgZ_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6B9460 != -1)
    swift_once();
  v2 = sub_1BC8173EC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED6B9440);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t PregnancyStateInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

id PregnancyStateInputSignal.__allocating_init(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1BC7577A4(a1, a3, a4, a5, v5, ObjectType, a2);
}

id PregnancyStateInputSignal.init(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1BC757808(a1, a3, a4, a5, v5, ObjectType, a2);
}

_QWORD *sub_1BC75682C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  void *v7;
  _QWORD v8[6];

  if (*result)
  {
    v3 = 0;
  }
  else
  {
    v4 = result;
    v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v6 = objc_allocWithZone(MEMORY[0x1E0CB6820]);
    v8[4] = sub_1BC757C34;
    v8[5] = v5;
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 1107296256;
    v8[2] = sub_1BC75771C;
    v8[3] = &block_descriptor_8;
    v7 = _Block_copy(v8);
    swift_retain();
    v3 = objc_msgSend(v6, sel_initWithIsRunningForMaintenance_updateHandler_, 1, v7);
    _Block_release(v7);
    swift_release();
    swift_release();
    *v4 = v3;
    result = v3;
  }
  *a2 = v3;
  return result;
}

void sub_1BC756944(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a4 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1BCCF5C70](v6);
  if (v7)
  {
    v8 = (void *)v7;
    if (a2)
    {
      v9 = a2;
      sub_1BC756C14(v9);

    }
    else
    {
      if (qword_1ED6BB220 != -1)
        swift_once();
      v10 = sub_1BC817590();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED6BB208);
      v11 = v8;
      v12 = a3;
      v13 = v11;
      v14 = a3;
      v15 = sub_1BC81756C();
      v16 = sub_1BC817E84();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v18 = (_QWORD *)swift_slowAlloc();
        v24 = swift_slowAlloc();
        v25 = v24;
        *(_DWORD *)v17 = 138412546;
        v19 = v13;
        sub_1BC818148();
        *v18 = v8;

        *(_WORD *)(v17 + 12) = 2080;
        if (a3)
        {
          v20 = a3;
          sub_1BC6E1878();
          v21 = sub_1BC817AF4();
          v23 = v22;
        }
        else
        {
          v23 = 0xE300000000000000;
          v21 = 7104878;
        }
        sub_1BC6E14D8(v21, v23, &v25);
        sub_1BC818148();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC6DD000, v15, v16, "[%@] Error when trying to get model from query: %s", (uint8_t *)v17, 0x16u);
        sub_1BC73D52C(0, (unint64_t *)&qword_1ED6BA800, (unint64_t *)&qword_1ED6BB280);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v18, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v24, -1, -1);
        MEMORY[0x1BCCF5BA4](v17, -1, -1);

      }
      else
      {

      }
    }
  }
}

id sub_1BC756C14(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id result;
  void *v17;
  unsigned int v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  os_log_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;

  v2 = v1;
  swift_getObjectType();
  v4 = sub_1BC8173EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC757B34();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6B9460 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED6B9440);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
  sub_1BC6ED7C0(0, (unint64_t *)&unk_1ED6B6378);
  sub_1BC757BA4();
  v14 = a1;
  sub_1BC817410();
  swift_getObjectType();
  v49 = v1;
  sub_1BC6F0A44(&qword_1ED6B7E40, v15, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyStateInputSignal, (uint64_t)&protocol conformance descriptor for PregnancyStateInputSignal);
  sub_1BC817374();
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v17 = result;
    v18 = objc_msgSend(result, sel_showSensitiveLogItems);

    if (v18)
    {
      if (qword_1ED6BB220 != -1)
        swift_once();
      v19 = sub_1BC817590();
      __swift_project_value_buffer(v19, (uint64_t)qword_1ED6BB208);
      v20 = v14;
      v21 = v2;
      v22 = v20;
      v23 = v21;
      v24 = sub_1BC81756C();
      v25 = sub_1BC817E9C();
      v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        v27 = swift_slowAlloc();
        v46 = v26;
        v28 = v27;
        v44 = swift_slowAlloc();
        v45 = v24;
        v29 = (_QWORD *)v44;
        v47 = swift_slowAlloc();
        v50 = v47;
        *(_DWORD *)v28 = 138412802;
        v48 = v9;
        v49 = v23;
        v30 = v23;
        sub_1BC818148();
        *v29 = v23;

        *(_WORD *)(v28 + 12) = 2080;
        v43[1] = v28 + 14;
        v31 = objc_msgSend(v22, sel_sample);
        v49 = v31;
        sub_1BC73D52C(0, &qword_1ED6B84F8, &qword_1ED6B6370);
        v32 = v31;
        sub_1BC8186D0();
        v33 = (id)HKSensitiveLogItem();
        swift_unknownObjectRelease();
        sub_1BC818178();
        swift_unknownObjectRelease();
        v34 = sub_1BC817AF4();
        v36 = v35;

        v49 = (id)sub_1BC6E14D8(v34, v36, &v50);
        sub_1BC818148();

        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 22) = 2080;
        v49 = objc_msgSend(v22, sel_state);
        type metadata accessor for HKMCPregnancyState(0);
        sub_1BC8186D0();
        v37 = (id)HKSensitiveLogItem();
        swift_unknownObjectRelease();
        sub_1BC818178();
        swift_unknownObjectRelease();
        v38 = sub_1BC817AF4();
        v49 = (id)sub_1BC6E14D8(v38, v39, &v50);
        sub_1BC818148();

        swift_bridgeObjectRelease();
        v40 = v45;
        _os_log_impl(&dword_1BC6DD000, v45, (os_log_type_t)v46, "[%@] Received model update with sample: %s and state: %s", (uint8_t *)v28, 0x20u);
        sub_1BC73D52C(0, (unint64_t *)&qword_1ED6BA800, (unint64_t *)&qword_1ED6BB280);
        v41 = v44;
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v41, -1, -1);
        v42 = v47;
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v42, -1, -1);
        MEMORY[0x1BCCF5BA4](v28, -1, -1);

        return (id)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v48);
      }

    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall PregnancyStateInputSignal.stopObservation()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_protectedQuery);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v2 = *(id *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  if (v2)
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_healthStore), sel_stopQuery_, v2);

  }
}

uint64_t PregnancyStateInputSignal.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  void (*v8)(_BYTE *, uint64_t, uint64_t);
  id v9;
  uint64_t v10;
  _BYTE v12[32];

  v0 = sub_1BC8173EC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v2);
  v6 = &v12[-v5];
  if (qword_1ED6B9460 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED6B9440);
  v8 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16);
  v8(v6, v7, v0);
  v8(v4, (uint64_t)v6, v0);
  sub_1BC8186D0();
  v9 = (id)HKSensitiveLogItem();
  swift_unknownObjectRelease();
  sub_1BC818178();
  swift_unknownObjectRelease();
  v10 = sub_1BC817AF4();
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
  return v10;
}

id PregnancyStateInputSignal.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PregnancyStateInputSignal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PregnancyStateInputSignal.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC7575E8()
{
  return swift_unknownObjectRetain();
}

void sub_1BC75761C()
{
  _s14HealthPlatform25PregnancyStateInputSignalC16beginObservation4from14configurationsy0A13Orchestration23SecureCodingValueAnchorVySo18HKMCPregnancyModelCAkG0lM6ObjectAAyHCg_GSg_SayAG21IdentityConfigurationVGtF_0();
}

void sub_1BC75763C()
{
  PregnancyStateInputSignal.stopObservation()();
}

uint64_t static InputSignalIdentifier.pregnancyUpdate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC8173EC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6B9460 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED6B9440);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  type metadata accessor for PregnancyStateInputSignal();
  return sub_1BC817260();
}

void sub_1BC75771C(uint64_t a1, void *a2, void *a3, void *a4)
{
  void (*v7)(id, void *, void *);
  id v8;
  id v9;
  id v10;

  v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  v10 = a2;
  v8 = a3;
  v9 = a4;
  v7(v10, a3, a4);
  swift_release();

}

id sub_1BC7577A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, Class a5, uint64_t a6, uint64_t a7)
{
  return sub_1BC757808(a1, a2, a3, a4, (char *)objc_allocWithZone(a5), a6, a7);
}

id sub_1BC757808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7)
{
  objc_class *ObjectType;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v14 = OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_protectedQuery;
  sub_1BC757C44();
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)&a5[v14] = v15;
  v16 = &a5[OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_context];
  *(_QWORD *)v16 = a1;
  *((_QWORD *)v16 + 1) = a7;
  v17 = &a5[OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_observer];
  *(_QWORD *)v17 = a2;
  *((_QWORD *)v17 + 1) = a3;
  *(_QWORD *)&a5[OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_healthStore] = a4;
  v19.receiver = a5;
  v19.super_class = ObjectType;
  return objc_msgSendSuper2(&v19, sel_init);
}

void _s14HealthPlatform25PregnancyStateInputSignalC16beginObservation4from14configurationsy0A13Orchestration23SecureCodingValueAnchorVySo18HKMCPregnancyModelCAkG0lM6ObjectAAyHCg_GSg_SayAG21IdentityConfigurationVGtF_0()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  os_unfair_lock_s *v8;
  os_unfair_lock_s *v9;
  os_unfair_lock_s *v10;
  void *v11;
  id v12;

  if (qword_1ED6BB220 != -1)
    swift_once();
  v1 = sub_1BC817590();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED6BB208);
  v2 = v0;
  v3 = sub_1BC81756C();
  v4 = sub_1BC817E9C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412290;
    v12 = v2;
    v7 = v2;
    sub_1BC818148();
    *v6 = v2;

    _os_log_impl(&dword_1BC6DD000, v3, v4, "[%@] Beginning Observation", v5, 0xCu);
    sub_1BC73D52C(0, (unint64_t *)&qword_1ED6BA800, (unint64_t *)&qword_1ED6BB280);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v6, -1, -1);
    MEMORY[0x1BCCF5BA4](v5, -1, -1);

  }
  else
  {

  }
  v8 = *(os_unfair_lock_s **)&v2[OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_protectedQuery];
  v9 = v8 + 4;
  v10 = v8 + 6;
  os_unfair_lock_lock(v8 + 6);
  sub_1BC75682C(v9, &v12);
  os_unfair_lock_unlock(v10);
  v11 = v12;
  if (v12)
  {
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_healthStore], sel_executeQuery_, v12);

  }
}

uint64_t sub_1BC757AD8(uint64_t a1, uint64_t a2)
{
  return sub_1BC6F0A44(&qword_1ED6B9468, a2, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyStateInputSignal, MEMORY[0x1E0CB2120]);
}

uint64_t sub_1BC757B04()
{
  return sub_1BC6F0A44(&qword_1ED6B7FD0, 255, (uint64_t (*)(uint64_t))sub_1BC757B34, MEMORY[0x1E0D2D150]);
}

void sub_1BC757B34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B7FD8)
  {
    sub_1BC6ED7C0(255, (unint64_t *)&unk_1ED6B6378);
    sub_1BC757BA4();
    v0 = sub_1BC81741C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B7FD8);
  }
}

unint64_t sub_1BC757BA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B8500;
  if (!qword_1ED6B8500)
  {
    v1 = sub_1BC6ED7C0(255, (unint64_t *)&unk_1ED6B6378);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for HKMCPregnancyModel, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B8500);
  }
  return result;
}

uint64_t method lookup function for PregnancyStateInputSignal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PregnancyStateInputSignal.__allocating_init(context:observer:healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BC757C10()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC757C34(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;

  sub_1BC756944(a1, a2, a3, v3);
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

void sub_1BC757C44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B9708)
  {
    sub_1BC73D52C(255, &qword_1ED6B96A0, &qword_1ED6B8EC8);
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B9708);
  }
}

id static EncodedFeatureTag.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1BC817AC4();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

char *keypath_get_selector_data()
{
  return sel_data;
}

void sub_1BC757D34(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_data);
  v4 = sub_1BC816E64();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1BC757D8C(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0CB01F0], (SEL *)&selRef_setData_);
}

char *keypath_get_selector_name()
{
  return sel_name;
}

void sub_1BC757DAC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_name);
  v4 = sub_1BC817AE8();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1BC757E04(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0CB1940], (SEL *)&selRef_setName_);
}

char *keypath_get_selector_feedItem()
{
  return sel_feedItem;
}

id sub_1BC757E24@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_feedItem);
  *a2 = result;
  return result;
}

id sub_1BC757E5C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFeedItem_, *a1);
}

uint64_t Plugin.__allocating_init(context:package:)(void *a1)
{
  objc_class *v1;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t result;

  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_1BC817AC4();
  v5 = objc_msgSend(v3, sel_entityForName_inManagedObjectContext_, v4, a1);

  if (v5)
  {
    v6 = objc_msgSend(objc_allocWithZone(v1), sel_initWithEntity_insertIntoManagedObjectContext_, v5, a1);
    v7 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setPackage_, v7);

    return (uint64_t)v6;
  }
  else
  {
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

uint64_t static Plugin.entityName.getter()
{
  return 0x6E6967756C50;
}

uint64_t sub_1BC757FC8()
{
  return 0x6E6967756C50;
}

void sub_1BC757FDC()
{
  sub_1BC757FF8(0, (void (*)(uint64_t))type metadata accessor for DaemonHealthExperienceStore, &qword_1ED6B7C70, 255);
}

void sub_1BC757FF8(uint64_t a1, void (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;

  v9 = v4;
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v10 = sub_1BC817590();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED6BB5D0);
  v11 = sub_1BC81756C();
  v12 = sub_1BC817E6C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v18 = v14;
    *(_DWORD *)v13 = 136315138;
    a2(a1);
    sub_1BC71A1BC(0, a3, a4, a2);
    v15 = sub_1BC817AF4();
    sub_1BC6E14D8(v15, v16, &v18);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v11, v12, "[%s] registerForDebuggingRequests()", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v14, -1, -1);
    MEMORY[0x1BCCF5BA4](v13, -1, -1);
  }

  v17 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1ED6B8530 != -1)
    swift_once();
  objc_msgSend(v17, sel_addObserver_selector_name_object_, v9, sel_debuggingInfoRequestedWithNote_, qword_1ED6B8528, 0);

}

uint64_t sub_1BC758228(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;
  __int128 v7;
  _OWORD v8[2];

  v4 = (void *)sub_1BC817AC4();
  v5 = objc_msgSend(a3, sel_objectForKey_, v4);

  if (v5)
  {
    sub_1BC818178();
    swift_unknownObjectRelease();
    sub_1BC6EFBDC(&v7, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_1BC74CEB4(0, (unint64_t *)&qword_1ED6B9DE0);
  if (swift_dynamicCast())
    return v7;
  else
    return 2;
}

uint64_t sub_1BC7582F0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  __int128 v5;
  _OWORD v6[2];

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_1BC817AC4();
  v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_1BC818178();
    swift_unknownObjectRelease();
    sub_1BC6EFBDC(&v5, v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1BC74CEB4(0, (unint64_t *)&qword_1ED6B9DE0);
  sub_1BC74CEB4(0, (unint64_t *)&qword_1ED6BAC70);
  if (swift_dynamicCast())
    return v5;
  else
    return 0;
}

char *sub_1BC7583D4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  id v4;
  char *result;
  uint64_t v6;

  sub_1BC71A0E8();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BC816E40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = objc_allocWithZone((Class)type metadata accessor for DaemonHealthExperienceStoreOracle());
  result = DaemonHealthExperienceStoreOracle.init(overrideStoreLocation:)((uint64_t)v2);
  qword_1ED6B8DE0 = (uint64_t)result;
  return result;
}

char *DaemonHealthExperienceStoreOracle.__allocating_init(overrideStoreLocation:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return DaemonHealthExperienceStoreOracle.init(overrideStoreLocation:)(a1);
}

id static DaemonHealthExperienceStoreOracle.shared.getter()
{
  if (qword_1ED6B9338 != -1)
    swift_once();
  return (id)qword_1ED6B8DE0;
}

char *DaemonHealthExperienceStoreOracle.init(overrideStoreLocation:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  id v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  sub_1BC71A0E8();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - v7;
  v9 = OBJC_IVAR____TtC14HealthPlatform33DaemonHealthExperienceStoreOracle__lastPolledHealthKitDatabaseIdentifier;
  v10 = qword_1ED6B9C70;
  v11 = v1;
  if (v10 != -1)
    swift_once();
  v12 = &v11[v9];
  v13 = (void *)qword_1ED6B9C60;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = 0;
  *(_QWORD *)v12 = 0xD00000000000002FLL;
  *((_QWORD *)v12 + 1) = 0x80000001BC826AB0;
  *((_QWORD *)v12 + 2) = v13;
  v12[40] = 0;
  v14 = v13;

  sub_1BC71A13C(a1, (uint64_t)v8);
  type metadata accessor for DaemonHealthExperienceStore();
  swift_allocObject();
  sub_1BC71A13C((uint64_t)v8, (uint64_t)v6);
  v15 = DiskHealthExperienceStore.init(overrideStoreLocation:observeExternalChanges:)((uint64_t)v6, 1);
  swift_retain();
  sub_1BC757FF8(0, (void (*)(uint64_t))type metadata accessor for DaemonHealthExperienceStore, &qword_1ED6B7C70, 255);
  swift_release();
  sub_1BC71A180((uint64_t)v8);
  v16 = sub_1BC759280((uint64_t)v15, v11);
  sub_1BC757FF8((uint64_t)v16, (void (*)(uint64_t))type metadata accessor for DaemonHealthExperienceStoreOracle, &qword_1ED6B62F0, v17);

  sub_1BC71A180(a1);
  return v16;
}

uint64_t sub_1BC75867C(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[40];

  sub_1BC6FC700(a1, (uint64_t)v2);
  sub_1BC6FD528(0, &qword_1ED6B7C78);
  type metadata accessor for DiskHealthExperienceStore();
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    sub_1BC7586F8();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC7586F8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  __int128 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  const char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24[2];
  __int128 v25;
  _BYTE v26[25];

  swift_getObjectType();
  v1 = sub_1BC75955C();
  v3 = v2;
  v4 = (__int128 *)(v0
                  + OBJC_IVAR____TtC14HealthPlatform33DaemonHealthExperienceStoreOracle__lastPolledHealthKitDatabaseIdentifier);
  swift_beginAccess();
  *(_OWORD *)&v26[9] = *(__int128 *)((char *)v4 + 25);
  v5 = v4[1];
  v25 = *v4;
  *(_OWORD *)v26 = v5;
  if ((v26[24] & 1) != 0)
  {
    v6 = (void *)objc_opt_self();
    sub_1BC759708((uint64_t)&v25);
    if ((objc_msgSend(v6, sel_isAppleInternalInstall) & 1) == 0)
    {
LABEL_5:
      v10 = *(id *)&v26[8];
      v9 = *(_QWORD *)&v26[16];
      swift_bridgeObjectRetain();
      goto LABEL_7;
    }
  }
  else
  {
    sub_1BC759708((uint64_t)&v25);
  }
  v7 = sub_1BC7582F0();
  if (v8 == 1)
    goto LABEL_5;
  v10 = (id)v7;
  v9 = v8;
LABEL_7:
  sub_1BC759748((uint64_t)&v25);
  if (!v9)
  {
    if (qword_1ED6BB1F8 != -1)
      swift_once();
    v11 = sub_1BC817590();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED6BB228);
    v12 = sub_1BC81756C();
    v13 = sub_1BC817E9C();
    if (!os_log_type_enabled(v12, v13))
      goto LABEL_21;
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v24[0] = v15;
    *(_DWORD *)v14 = 136315138;
    swift_getMetatypeMetadata();
    v16 = sub_1BC817AF4();
    sub_1BC6E14D8(v16, v17, v24);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    v18 = "[%s]: First time fetching DB identifier, wiping cache!";
    goto LABEL_20;
  }
  if (v1 != v10 || v9 != v3)
  {
    v19 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      return swift_bridgeObjectRelease();
    if (qword_1ED6BB1F8 != -1)
      swift_once();
    v20 = sub_1BC817590();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED6BB228);
    v12 = sub_1BC81756C();
    v13 = sub_1BC817E9C();
    if (!os_log_type_enabled(v12, v13))
    {
LABEL_21:

      sub_1BC7A7844();
      swift_beginAccess();
      sub_1BC74CEF8((uint64_t)v1, v3);
      swift_endAccess();
      return swift_bridgeObjectRelease();
    }
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v24[0] = v15;
    *(_DWORD *)v14 = 136315138;
    swift_getMetatypeMetadata();
    v21 = sub_1BC817AF4();
    sub_1BC6E14D8(v21, v22, v24);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    v18 = "[%s]: DB identifier has changed, wiping cache!";
LABEL_20:
    _os_log_impl(&dword_1BC6DD000, v12, v13, v18, v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v15, -1, -1);
    MEMORY[0x1BCCF5BA4](v14, -1, -1);
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC758EF8()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14HealthPlatform33DaemonHealthExperienceStoreOracle__lastPolledHealthKitDatabaseIdentifier
                     + 16));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id DaemonHealthExperienceStoreOracle.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  sub_1BC719BAC();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DaemonHealthExperienceStoreOracle();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void DaemonHealthExperienceStoreOracle.__allocating_init(healthExperienceStore:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void DaemonHealthExperienceStoreOracle.init(healthExperienceStore:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void DaemonHealthExperienceStoreOracle.debuggingInfoRequested(note:)()
{
  uint64_t ObjectType;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  NSObject *oslog;
  uint64_t v8;
  uint64_t v9;

  ObjectType = swift_getObjectType();
  if (qword_1ED6BB1F8 != -1)
    swift_once();
  v1 = sub_1BC817590();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED6BB228);
  oslog = sub_1BC81756C();
  v2 = sub_1BC817E9C();
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    v9 = ObjectType;
    *(_DWORD *)v3 = 136315138;
    swift_getMetatypeMetadata();
    v5 = sub_1BC817AF4();
    v9 = sub_1BC6E14D8(v5, v6, &v8);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, oslog, v2, "[%s]: debuggingInfoRequested()", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v4, -1, -1);
    MEMORY[0x1BCCF5BA4](v3, -1, -1);

  }
  else
  {

  }
}

char *sub_1BC759280(uint64_t a1, char *a2)
{
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  objc_super v22;
  _OWORD v23[3];
  _QWORD v24[5];

  swift_getObjectType();
  v24[3] = type metadata accessor for DaemonHealthExperienceStore();
  v24[4] = &protocol witness table for DiskHealthExperienceStore;
  v24[0] = a1;
  v4 = OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_notificationCenter;
  v5 = objc_allocWithZone(MEMORY[0x1E0CB37D0]);
  v6 = a2;
  *(_QWORD *)&a2[v4] = objc_msgSend(v5, sel_init);
  v7 = OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState;
  sub_1BC75978C();
  memset(v23, 0, sizeof(v23));
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 64) = 0;
  sub_1BC7597E8(v23, v8 + 16);
  sub_1BC759824((uint64_t)v23);
  *(_QWORD *)&v6[v7] = v8;
  sub_1BC6FC700((uint64_t)v24, (uint64_t)&v6[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_healthExperienceStore]);

  v22.receiver = v6;
  v22.super_class = (Class)type metadata accessor for HealthExperienceStoreOracle();
  v9 = (char *)objc_msgSendSuper2(&v22, sel_init);
  v10 = *(os_unfair_lock_s **)&v9[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState];
  v11 = (uint64_t)&v10[4];
  v12 = v10 + 16;
  v13 = v9;
  os_unfair_lock_lock(v12);
  sub_1BC7BC298(v11, v23);
  os_unfair_lock_unlock(v12);
  if (LOBYTE(v23[0]) == 1)
    sub_1BC7BB144();
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v14 = sub_1BC817590();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED6BB5D0);
  v15 = sub_1BC81756C();
  v16 = sub_1BC817E6C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    *(_QWORD *)&v23[0] = v18;
    *(_DWORD *)v17 = 136315138;
    v19 = sub_1BC7BC1E4();
    sub_1BC6E14D8(v19, v20, (uint64_t *)v23);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v15, v16, "[%s] init()", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v18, -1, -1);
    MEMORY[0x1BCCF5BA4](v17, -1, -1);
  }

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  return v13;
}

uint64_t type metadata accessor for DaemonHealthExperienceStoreOracle()
{
  return objc_opt_self();
}

uint64_t method lookup function for DaemonHealthExperienceStoreOracle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DaemonHealthExperienceStoreOracle.__allocating_init(overrideStoreLocation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

id sub_1BC75955C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1BC816F3C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6598]), sel_initWithHealthStore_, v4);

  v12[0] = 0;
  v6 = objc_msgSend(v5, sel_healthDatabaseIdentifierWithError_, v12);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    sub_1BC816F24();
    v9 = v7;

    v7 = (id)sub_1BC816F00();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    v10 = v12[0];
    sub_1BC816D5C();

    swift_willThrow();
  }
  return v7;
}

unint64_t sub_1BC7596CC()
{
  unint64_t result;

  result = qword_1ED6BA830;
  if (!qword_1ED6BA830)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BA830);
  }
  return result;
}

uint64_t sub_1BC759708(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t sub_1BC759748(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BC75978C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B96E8)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B96E8);
  }
}

uint64_t sub_1BC7597E8(_QWORD *a1, uint64_t a2)
{
  initializeWithCopy for HealthExperienceStoreOracle.State(a2, a1);
  return a2;
}

uint64_t sub_1BC759824(uint64_t a1)
{
  destroy for HealthExperienceStoreOracle.State(a1);
  return a1;
}

unint64_t HealthPluginHostBufferPostNotificationUserInfoKey.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_1BC759874()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  type metadata accessor for HealthPluginHostNotificationBuffer();
  v0 = swift_allocObject();
  v1 = sub_1BC710828(MEMORY[0x1E0DEE9D8]);
  sub_1BC759CB0();
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = v1;
  *(_QWORD *)(v0 + 16) = result;
  off_1ED6B7CB0 = (_UNKNOWN *)v0;
  return result;
}

uint64_t static HealthPluginHostNotificationBuffer.shared.getter()
{
  if (qword_1ED6B7CC0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1BC759918()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t *v9;
  os_unfair_lock_s *v10;

  v1 = v0;
  v2 = (void *)sub_1BC816CC0();
  v3 = sub_1BC817AE8();
  v5 = v4;

  v6 = sub_1BC816CD8();
  if (!v6)
    v6 = sub_1BC71095C(MEMORY[0x1E0DEE9D8]);
  v7 = v6;
  v8 = *(os_unfair_lock_s **)(v1 + 16);
  v9 = (uint64_t *)&v8[4];
  v10 = v8 + 6;
  os_unfair_lock_lock(v8 + 6);
  sub_1BC7599C0(v9, v3, v5, v7);
  os_unfair_lock_unlock(v10);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC7599C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *a1;
  *a1 = 0x8000000000000000;
  sub_1BC71FB10(a4, a2, a3, isUniquelyReferenced_nonNull_native);
  *a1 = v10;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC759A64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t *v6;
  os_unfair_lock_s *v7;
  id v8;
  uint64_t v9;
  uint64_t v11;
  _OWORD v12[3];

  v5 = *(os_unfair_lock_s **)(v2 + 16);
  v6 = (uint64_t *)&v5[4];
  v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_1BC759B30(v6, v12);
  os_unfair_lock_unlock(v7);
  if (*(_QWORD *)&v12[0])
  {
    memset(v12, 0, 32);
    v8 = a1;
    sub_1BC816CB4();
    v9 = sub_1BC816CE4();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, 0, 1, v9);
  }
  else
  {
    v11 = sub_1BC816CE4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
}

uint64_t sub_1BC759B30@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;

  v4 = sub_1BC817AE8();
  v6 = *a1;
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_1BC706608(v4, v5), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v9;
  return result;
}

void sub_1BC759BA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9E0];
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
}

uint64_t sub_1BC759BE8(_QWORD *a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t HealthPluginHostNotificationBuffer.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t HealthPluginHostNotificationBuffer.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HealthPluginHostNotificationBuffer()
{
  return objc_opt_self();
}

uint64_t method lookup function for HealthPluginHostNotificationBuffer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthPluginHostNotificationBuffer.storeNotification(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of HealthPluginHostNotificationBuffer.notification(withName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of HealthPluginHostNotificationBuffer.clear()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

void sub_1BC759CB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B86A8)
  {
    sub_1BC759D14();
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B86A8);
  }
}

void sub_1BC759D14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8390)
  {
    sub_1BC70FD60();
    v0 = sub_1BC817A64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8390);
  }
}

uint64_t sub_1BC759D78()
{
  uint64_t result;

  sub_1BC759E38();
  sub_1BC817B48();
  result = swift_bridgeObjectRelease();
  qword_1ED6B9C00 = 0xD00000000000001ELL;
  unk_1ED6B9C08 = 0x80000001BC8281C0;
  return result;
}

uint64_t static DiskHealthExperienceStore.storeVersion.getter()
{
  uint64_t v0;

  if (qword_1ED6B9C18 != -1)
    swift_once();
  v0 = qword_1ED6B9C00;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1BC759E38()
{
  id v0;
  unsigned int v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  id v19;
  void *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  id v25;
  void *v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  id v31;
  void *v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  id v37;
  void *v38;
  id v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  id v43;
  void *v44;
  id v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  id v49;
  void *v50;
  id v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  id v55;
  void *v56;
  id v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  id v61;
  void *v62;
  id v63;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6F18]), sel_init);
  v1 = objc_msgSend(v0, sel_isAppleInternalInstall);

  if (!v1)
    return;
  HKFeatureFlagBloodOxygenSaturationEnabled();
  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  v2 = sub_1BC725568(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_1BC725568((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v2[2] = v4 + 1;
  v5 = &v2[2 * v4];
  v5[4] = 0x6D7569646E616353;
  v5[5] = 0xE800000000000000;
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_sharedBehavior);
  if (!v7)
  {
    __break(1u);
    goto LABEL_47;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, sel_features);

  if (!v9)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  objc_msgSend(v9, sel_orchestrationProfiles);

  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  v11 = v2[2];
  v10 = v2[3];
  if (v11 >= v10 >> 1)
    v2 = sub_1BC725568((_QWORD *)(v10 > 1), v11 + 1, 1, v2);
  v2[2] = v11 + 1;
  v12 = &v2[2 * v11];
  v12[4] = 0xD000000000000016;
  v12[5] = 0x80000001BC8281E0;
  v13 = objc_msgSend(v6, sel_sharedBehavior, 0xD000000000000016);
  if (!v13)
    goto LABEL_48;
  v14 = v13;
  v15 = objc_msgSend(v13, sel_features);

  if (!v15)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  objc_msgSend(v15, sel_orchestrationCategories);

  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  v17 = v2[2];
  v16 = v2[3];
  if (v17 >= v16 >> 1)
    v2 = sub_1BC725568((_QWORD *)(v16 > 1), v17 + 1, 1, v2);
  v2[2] = v17 + 1;
  v18 = &v2[2 * v17];
  v18[4] = 0xD000000000000018;
  v18[5] = 0x80000001BC828200;
  v19 = objc_msgSend(v6, sel_sharedBehavior, 0xD000000000000018);
  if (!v19)
    goto LABEL_50;
  v20 = v19;
  v21 = objc_msgSend(v19, sel_features);

  if (!v21)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  objc_msgSend(v21, sel_nebula);

  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  v23 = v2[2];
  v22 = v2[3];
  if (v23 >= v22 >> 1)
    v2 = sub_1BC725568((_QWORD *)(v22 > 1), v23 + 1, 1, v2);
  v2[2] = v23 + 1;
  v24 = &v2[2 * v23];
  v24[4] = 0x616C7562654ELL;
  v24[5] = 0xE600000000000000;
  v25 = objc_msgSend(v6, sel_sharedBehavior, 0x616C7562654ELL);
  if (!v25)
    goto LABEL_52;
  v26 = v25;
  v27 = objc_msgSend(v25, sel_features);

  if (!v27)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  objc_msgSend(v27, sel_vrx);

  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  v29 = v2[2];
  v28 = v2[3];
  if (v29 >= v28 >> 1)
    v2 = sub_1BC725568((_QWORD *)(v28 > 1), v29 + 1, 1, v2);
  v2[2] = v29 + 1;
  v30 = &v2[2 * v29];
  v30[4] = 5788246;
  v30[5] = 0xE300000000000000;
  v31 = objc_msgSend(v6, sel_sharedBehavior, 5788246);
  if (!v31)
    goto LABEL_54;
  v32 = v31;
  v33 = objc_msgSend(v31, sel_features);

  if (!v33)
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  objc_msgSend(v33, sel_stanley);

  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  v35 = v2[2];
  v34 = v2[3];
  if (v35 >= v34 >> 1)
    v2 = sub_1BC725568((_QWORD *)(v34 > 1), v35 + 1, 1, v2);
  v2[2] = v35 + 1;
  v36 = &v2[2 * v35];
  v36[4] = 0x79656C6E617453;
  v36[5] = 0xE700000000000000;
  v37 = objc_msgSend(v6, sel_sharedBehavior, 0x79656C6E617453);
  if (!v37)
    goto LABEL_56;
  v38 = v37;
  v39 = objc_msgSend(v37, sel_features);

  if (!v39)
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  objc_msgSend(v39, sel_snidgets);

  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  v41 = v2[2];
  v40 = v2[3];
  if (v41 >= v40 >> 1)
    v2 = sub_1BC725568((_QWORD *)(v40 > 1), v41 + 1, 1, v2);
  v2[2] = v41 + 1;
  v42 = &v2[2 * v41];
  v42[4] = 0x7374656764696E53;
  v42[5] = 0xE800000000000000;
  v43 = objc_msgSend(v6, sel_sharedBehavior, 0x7374656764696E53);
  if (!v43)
    goto LABEL_58;
  v44 = v43;
  v45 = objc_msgSend(v43, sel_features);

  if (!v45)
  {
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  objc_msgSend(v45, sel_summaryOrchestration);

  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  v47 = v2[2];
  v46 = v2[3];
  if (v47 >= v46 >> 1)
    v2 = sub_1BC725568((_QWORD *)(v46 > 1), v47 + 1, 1, v2);
  v2[2] = v47 + 1;
  v48 = &v2[2 * v47];
  v48[4] = 0xD000000000000014;
  v48[5] = 0x80000001BC828220;
  v49 = objc_msgSend(v6, sel_sharedBehavior, 0xD000000000000014);
  if (!v49)
    goto LABEL_60;
  v50 = v49;
  v51 = objc_msgSend(v49, sel_features);

  if (!v51)
  {
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  objc_msgSend(v51, sel_chamomile);

  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  v53 = v2[2];
  v52 = v2[3];
  if (v53 >= v52 >> 1)
    v2 = sub_1BC725568((_QWORD *)(v52 > 1), v53 + 1, 1, v2);
  v2[2] = v53 + 1;
  v54 = &v2[2 * v53];
  v54[4] = 0x6C696D6F6D616843;
  v54[5] = 0xE900000000000065;
  v55 = objc_msgSend(v6, sel_sharedBehavior, 0x6C696D6F6D616843);
  if (!v55)
    goto LABEL_62;
  v56 = v55;
  v57 = objc_msgSend(v55, sel_features);

  if (!v57)
  {
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  objc_msgSend(v57, sel_harmonia);

  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  v59 = v2[2];
  v58 = v2[3];
  if (v59 >= v58 >> 1)
    v2 = sub_1BC725568((_QWORD *)(v58 > 1), v59 + 1, 1, v2);
  v2[2] = v59 + 1;
  v60 = &v2[2 * v59];
  v60[4] = 0x61696E6F6D726148;
  v60[5] = 0xE800000000000000;
  v61 = objc_msgSend(v6, sel_sharedBehavior, 0x61696E6F6D726148);
  if (!v61)
    goto LABEL_64;
  v62 = v61;
  v63 = objc_msgSend(v61, sel_features);

  if (!v63)
  {
LABEL_65:
    __break(1u);
    return;
  }
  objc_msgSend(v63, sel_lavender);

  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  v65 = v2[2];
  v64 = v2[3];
  if (v65 >= v64 >> 1)
    v2 = sub_1BC725568((_QWORD *)(v64 > 1), v65 + 1, 1, v2);
  v2[2] = v65 + 1;
  v66 = &v2[2 * v65];
  v66[4] = 0x7265646E6576614CLL;
  v66[5] = 0xE800000000000000;
  sub_1BC722C80();
  sub_1BC6ECCA0();
  sub_1BC817A88();
  swift_bridgeObjectRelease();
}

id DataType.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id DataType.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for DataType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for DataType()
{
  return objc_opt_self();
}

id DataType.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DataType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void NSManagedObjectContext.markObjectsForDeletion<A>(entity:predicate:)(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_opt_self();
  v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_setPredicate_, a2);
    objc_msgSend(v5, sel_setIncludesPropertyValues_, 0);
    v7 = sub_1BC8180AC();
    MEMORY[0x1E0C80A78](v7);
    v6 = sub_1BC817D04();
    MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEAF38], v6);
    sub_1BC817BFC();
    swift_bridgeObjectRelease();

  }
  else
  {

    sub_1BC8184B4();
    __break(1u);
  }
}

id NSManagedObjectContext.makeAllKeywordsFetchedResultsController()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;

  v1 = v0;
  v2 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v3 = (void *)sub_1BC817AC4();
  v4 = objc_msgSend(v2, sel_initWithKey_ascending_, v3, 1);

  v5 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v6 = (void *)sub_1BC817AC4();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  sub_1BC6F080C();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC81A120;
  *(_QWORD *)(v8 + 32) = v4;
  sub_1BC817C74();
  v9 = v4;
  objc_msgSend(v7, sel_setPredicate_, 0);
  sub_1BC6ED7C0(0, (unint64_t *)&unk_1ED6BA498);
  v10 = (void *)sub_1BC817C50();
  objc_msgSend(v7, sel_setSortDescriptors_, v10);

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v7, v1, 0, 0);
  swift_bridgeObjectRelease();
  return v11;
}

id NSManagedObjectContext.makeKeywordsWithFeedItemsController()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v1 = v0;
  v2 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v3 = (void *)sub_1BC817AC4();
  v4 = objc_msgSend(v2, sel_initWithKey_ascending_, v3, 1);

  v5 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v6 = (void *)sub_1BC817AC4();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  sub_1BC6F080C();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC81A120;
  *(_QWORD *)(v8 + 32) = v4;
  sub_1BC817C74();
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  v9 = v4;
  v10 = (void *)sub_1BC817E3C();
  objc_msgSend(v7, sel_setPredicate_, v10);
  sub_1BC6ED7C0(0, (unint64_t *)&unk_1ED6BA498);
  v11 = (void *)sub_1BC817C50();
  objc_msgSend(v7, sel_setSortDescriptors_, v11);

  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v7, v1, 0, 0);
  swift_bridgeObjectRelease();

  return v12;
}

id NSManagedObjectContext.feedItemsController(sortDescriptors:predicate:sectionNameKeyPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v7 = _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0();
  objc_msgSend(v7, sel_setPredicate_, a2);
  sub_1BC6ED7C0(0, (unint64_t *)&unk_1ED6BA498);
  v8 = (void *)sub_1BC817C50();
  objc_msgSend(v7, sel_setSortDescriptors_, v8);

  v9 = v7;
  v10 = v4;
  if (a4)
  {
    swift_bridgeObjectRetain();
    v11 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v7, v4, v11, 0);

  return v12;
}

id NSManagedObjectContext.makeFeedItemFetchedResultsController(forFeedItemIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;

  v3 = v2;
  v6 = _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0();
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  sub_1BC6FCD7C();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC81A0E0;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1BC6ED740();
  *(_QWORD *)(v7 + 32) = 0xD000000000000010;
  *(_QWORD *)(v7 + 40) = 0x80000001BC825700;
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 72) = a1;
  *(_QWORD *)(v7 + 80) = a2;
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1BC817E3C();
  objc_msgSend(v6, sel_setPredicate_, v10);

  sub_1BC6F080C();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC81A120;
  v12 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v13 = (void *)sub_1BC817AC4();
  v14 = objc_msgSend(v12, sel_initWithKey_ascending_, v13, 1);

  *(_QWORD *)(v11 + 32) = v14;
  sub_1BC817C74();
  sub_1BC6ED7C0(0, (unint64_t *)&unk_1ED6BA498);
  v15 = (void *)sub_1BC817C50();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSortDescriptors_, v15);

  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v6, v3, 0, 0);
  return v16;
}

id sub_1BC75B320(_QWORD *a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 24), sel_deleteObject_, *a1);
}

uint64_t NSManagedObjectContext.deleteEntity<A>(entity:predicates:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t result;
  id v26;
  uint64_t aBlock[6];
  uint64_t v28;

  v4 = v3;
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_opt_self();
  v8 = (void *)swift_dynamicCastObjCClass();
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel_setIncludesPropertyValues_, 0);
    if (a2)
    {
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
      swift_bridgeObjectRetain();
      v10 = (void *)sub_1BC817C50();
      swift_bridgeObjectRelease();
      v11 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v10);

      objc_msgSend(v9, sel_setPredicate_, v11);
    }
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v12 = sub_1BC817590();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED6BB5D0);
    v13 = sub_1BC81756C();
    v14 = sub_1BC817E6C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v26 = v7;
      aBlock[0] = swift_slowAlloc();
      v16 = v4;
      v17 = aBlock[0];
      *(_DWORD *)v15 = 136315138;
      v18 = sub_1BC818814();
      v28 = sub_1BC6E14D8(v18, v19, aBlock);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v13, v14, "Attempting to delete %s from database", v15, 0xCu);
      swift_arrayDestroy();
      v20 = v17;
      v4 = v16;
      v7 = v26;
      MEMORY[0x1BCCF5BA4](v20, -1, -1);
      MEMORY[0x1BCCF5BA4](v15, -1, -1);
    }

    v28 = 0;
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a3;
    v21[3] = &v28;
    v21[4] = v4;
    v21[5] = v9;
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = sub_1BC75BEE0;
    *(_QWORD *)(v22 + 24) = v21;
    aBlock[4] = (uint64_t)sub_1BC6EF990;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BC6E0C04;
    aBlock[3] = (uint64_t)&block_descriptor_9;
    v23 = _Block_copy(aBlock);
    v24 = v4;
    v7 = v7;
    swift_retain();
    swift_release();
    objc_msgSend(v24, sel_performBlockAndWait_, v23);

    _Block_release(v23);
    LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v23 & 1) == 0)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    __break(1u);
  }

  result = sub_1BC8184B4();
  __break(1u);
  return result;
}

id sub_1BC75B724(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  void *v11;
  uint64_t v12;
  id result;
  id v14;
  id v15[4];

  v15[3] = *(id *)MEMORY[0x1E0C80C00];
  *a1 = sub_1BC8180AC();
  swift_bridgeObjectRelease();
  if (*a1)
    v7 = *a1;
  else
    v7 = sub_1BC817CA4();
  swift_bridgeObjectRetain();
  if (MEMORY[0x1BCCF49A4](v7, a4))
  {
    v8 = 4;
    do
    {
      v9 = sub_1BC817CBC();
      sub_1BC817C8C();
      if ((v9 & 1) != 0)
        v10 = *(id *)(v7 + 8 * v8);
      else
        v10 = (id)sub_1BC8182F8();
      v11 = v10;
      v12 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        __break(1u);
      objc_msgSend(a2, sel_deleteObject_, v10);

      ++v8;
    }
    while (v12 != MEMORY[0x1BCCF49A4](v7, a4));
  }
  swift_bridgeObjectRelease();
  v15[0] = 0;
  if (objc_msgSend(a2, sel_save_, v15))
    return v15[0];
  v14 = v15[0];
  sub_1BC816D5C();

  swift_willThrow();
  v15[0] = 0;
  v15[1] = (id)0xE000000000000000;
  sub_1BC8182C8();
  sub_1BC817B48();
  sub_1BC6FD528(0, (unint64_t *)&qword_1ED6B87B0);
  sub_1BC8183E8();
  result = (id)sub_1BC8184B4();
  __break(1u);
  return result;
}

uint64_t NSManagedObjectContext.fetchEntity<A>(entity:predicates:sortDescriptors:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  uint64_t aBlock[6];
  uint64_t v29;

  v5 = v4;
  isEscapingClosureAtFileLocation = (uint64_t)objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_opt_self();
  v10 = swift_dynamicCastObjCClass();
  if (!v10)
    goto LABEL_16;
  v11 = (void *)v10;
  if (a2)
  {
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
    swift_bridgeObjectRetain();
    v12 = (void *)sub_1BC817C50();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v12);

    objc_msgSend(v11, sel_setPredicate_, v13);
  }
  if (a3)
  {
    sub_1BC6ED7C0(0, (unint64_t *)&unk_1ED6BA498);
    a3 = (void *)sub_1BC817C50();
  }
  objc_msgSend(v11, sel_setSortDescriptors_, a3);

  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v14 = sub_1BC817590();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED6BB5D0);
  v15 = sub_1BC81756C();
  v16 = sub_1BC817E6C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136315138;
    v19 = sub_1BC818814();
    v29 = sub_1BC6E14D8(v19, v20, aBlock);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v15, v16, "Attempting to fetch %s from database", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v18, -1, -1);
    MEMORY[0x1BCCF5BA4](v17, -1, -1);
  }

  v29 = 0;
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a4;
  v21[3] = &v29;
  v21[4] = v5;
  v21[5] = v11;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1BC75BF04;
  *(_QWORD *)(v22 + 24) = v21;
  aBlock[4] = (uint64_t)sub_1BC75BF20;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC6E0C04;
  aBlock[3] = (uint64_t)&block_descriptor_13;
  v23 = _Block_copy(aBlock);
  v24 = v5;
  v25 = (id)isEscapingClosureAtFileLocation;
  swift_retain();
  swift_release();
  objc_msgSend(v24, sel_performBlockAndWait_, v23);
  _Block_release(v23);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_16:

    result = sub_1BC8184B4();
    __break(1u);
    return result;
  }
  v26 = v29;
  if (v29)
    swift_bridgeObjectRetain();
  else
    v26 = sub_1BC817CA4();

  swift_release();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1BC75BDB4(uint64_t *a1)
{
  *a1 = sub_1BC8180AC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC75BEB4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC75BEE0()
{
  uint64_t v0;

  return sub_1BC75B724(*(uint64_t **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1BC75BEEC()
{
  return swift_deallocObject();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_1BC75BF04()
{
  uint64_t v0;

  return sub_1BC75BDB4(*(uint64_t **)(v0 + 24));
}

uint64_t sub_1BC75BF10()
{
  return swift_deallocObject();
}

void *sub_1BC75BF30(void *a1, void (*a2)(void **, id *), uint64_t a3, unint64_t a4)
{
  return sub_1BC75BF44(a1, a2, a3, a4);
}

void *sub_1BC75BF44(void *a1, void (*a2)(void **, id *), uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  void *v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  uint64_t v11;
  id v13;
  void *v14;

  v14 = a1;
  v7 = a1;
  if (a4 >> 62)
    goto LABEL_13;
  v8 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; v8 = sub_1BC8184E4())
  {
    for (i = 4; ; ++i)
    {
      v10 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF4FB0](i - 4, a4) : *(id *)(a4 + 8 * i);
      v7 = v10;
      v11 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v13 = v10;
      a2(&v14, &v13);
      if (v4)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v7;
      }

      if (v11 == v8)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BC75C078(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = type metadata accessor for ProtectedNotificationContentState(0);
  v24 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v20 - v11;
  v13 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v14 = 0;
    v15 = MEMORY[0x1E0DEE9D8];
    v20[1] = a2;
    v21 = a3;
    v20[0] = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v13 = *(_QWORD *)(v24 + 72);
      sub_1BC6ECB08(a3 + v16 + v13 * v14, (uint64_t)v12, type metadata accessor for ProtectedNotificationContentState);
      v17 = a1(v12);
      if (v3)
      {
        sub_1BC6ED784((uint64_t)v12, type metadata accessor for ProtectedNotificationContentState);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if ((v17 & 1) != 0)
      {
        sub_1BC6ECBA4((uint64_t)v12, v23, type metadata accessor for ProtectedNotificationContentState);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BC6E8C84(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v25;
        v19 = *(_QWORD *)(v25 + 16);
        v18 = *(_QWORD *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1BC6E8C84(v18 > 1, v19 + 1, 1);
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        result = sub_1BC6ECBA4(v23, v15 + v16 + v19 * v13, type metadata accessor for ProtectedNotificationContentState);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        result = sub_1BC6ED784((uint64_t)v12, type metadata accessor for ProtectedNotificationContentState);
      }
      if (v22 == ++v14)
      {
        v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

void sub_1BC75C290(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[7];
  uint64_t v29;

  v3 = a3;
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v4 = 0;
    v5 = (uint64_t *)(a3 + 40);
    v6 = MEMORY[0x1E0DEE9D8];
    while (v4 < *(_QWORD *)(v3 + 16))
    {
      v8 = (void *)*(v5 - 1);
      v7 = *v5;
      v10 = v5[1];
      v9 = v5[2];
      v12 = v5[3];
      v11 = v5[4];
      v13 = v5[5];
      v28[0] = v8;
      v28[1] = v7;
      v25 = v9;
      v26 = v7;
      v28[2] = v10;
      v28[3] = v9;
      v28[4] = v12;
      v28[5] = v11;
      v24 = v11;
      v28[6] = v13;
      v14 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = a1(v28);
      if (v27)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }
      v27 = 0;
      if ((v15 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v29 = v6;
        v3 = a3;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BC6E8CF8(0, *(_QWORD *)(v6 + 16) + 1, 1);
          v6 = v29;
        }
        v18 = *(_QWORD *)(v6 + 16);
        v17 = *(_QWORD *)(v6 + 24);
        v19 = v18 + 1;
        if (v18 >= v17 >> 1)
        {
          sub_1BC6E8CF8(v17 > 1, v18 + 1, 1);
          v19 = v18 + 1;
          v6 = v29;
        }
        *(_QWORD *)(v6 + 16) = v19;
        v20 = (_QWORD *)(v6 + 56 * v18);
        v20[4] = v8;
        v20[5] = v26;
        v20[6] = v10;
        v20[7] = v25;
        v20[8] = v12;
        v20[9] = v24;
        v20[10] = v13;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v3 = a3;
      }
      ++v4;
      v5 += 7;
      if (v22 == v4)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
  }
}

id sub_1BC75C498()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = *(id *)(v0 + 32);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB63F0]), sel_initWithHealthStore_, *(_QWORD *)(v0 + 40));
    v4 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_1BC75C508()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_1BC75C538(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 72) = a1;
  return result;
}

uint64_t (*sub_1BC75C574())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t HealthAppNotificationContentStateManager.__allocating_init(healthStore:domain:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD v14[2];
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = a2;
  v17 = a3;
  v15 = a1;
  v4 = sub_1BC817FA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC817F5C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1BC817974();
  MEMORY[0x1E0C80A78](v10);
  v14[1] = sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  v18 = v3;
  swift_getMetatypeMetadata();
  sub_1BC817AF4();
  sub_1BC817968();
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1BC6F0A44((unint64_t *)&unk_1ED6BA4C0, 255, v9, MEMORY[0x1E0DEF828]);
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA420, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC74287C();
  sub_1BC818184();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D0], v4);
  v11 = (void *)sub_1BC817FC8();
  type metadata accessor for HealthAppNotificationContentStateManager();
  swift_allocObject();
  v12 = sub_1BC7616F8(v15, v16, v17, v11);

  return v12;
}

uint64_t HealthAppNotificationContentStateManager.__allocating_init(healthStore:domain:queue:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;

  swift_allocObject();
  v8 = sub_1BC7616F8(a1, a2, a3, a4);

  return v8;
}

uint64_t type metadata accessor for HealthAppNotificationContentStateManager()
{
  return objc_opt_self();
}

uint64_t HealthAppNotificationContentStateManager.init(healthStore:domain:queue:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;

  v5 = sub_1BC7616F8(a1, a2, a3, a4);

  return v5;
}

uint64_t sub_1BC75C880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;

  sub_1BC6ECA64(0, &qword_1ED6B9DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v27 - v2;
  sub_1BC761844();
  v5 = v4;
  v28 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7620B8(0, &qword_1ED6B8208, v8, (void (*)(void))sub_1BC76199C);
  v10 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  v32 = v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - v11;
  sub_1BC761A14();
  v14 = *(_QWORD *)(v13 - 8);
  v33 = v13;
  v34 = v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (void *)sub_1BC818094();
  v35 = sub_1BC818094();
  v36 = v17;
  v29 = v17;
  v30 = v35;
  sub_1BC7618CC();
  sub_1BC6F0A44(&qword_1ED6B8278, 255, (uint64_t (*)(uint64_t))sub_1BC7618CC, MEMORY[0x1E0C95D90]);
  swift_retain();
  swift_retain();
  sub_1BC8175CC();
  v36 = *(id *)(v0 + 48);
  v18 = v36;
  v19 = sub_1BC817F80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v3, 1, 1, v19);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  sub_1BC76199C();
  sub_1BC7619BC();
  v20 = v18;
  sub_1BC8178FC();
  sub_1BC715030((uint64_t)v3, &qword_1ED6B9DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
  v21 = swift_allocObject();
  swift_weakInit();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1BC761B40;
  *(_QWORD *)(v22 + 24) = v21;
  sub_1BC6ECA64(0, &qword_1ED6B8870, type metadata accessor for NotificationContentState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BC761ABC();
  v23 = v31;
  sub_1BC8178CC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v23);
  sub_1BC6F0A44(&qword_1ED6B80F8, 255, (uint64_t (*)(uint64_t))sub_1BC761A14, MEMORY[0x1E0C95B48]);
  v24 = v33;
  v25 = sub_1BC817854();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v24);
  return v25;
}

uint64_t sub_1BC75CC30@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v7;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1BC75CCE4(a1, a2, a3);
    return swift_release();
  }
  else
  {
    v7 = type metadata accessor for NotificationContentState(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a3, 1, 1, v7);
  }
}

uint64_t sub_1BC75CCE4@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  char i;
  unint64_t v50;
  uint64_t *v51;
  BOOL v52;
  unint64_t v53;
  id v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  unsigned int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  int *v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  id v80;
  _QWORD *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  void *v94;
  unint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v4 = v3;
  v92 = a2;
  v81 = a3;
  v100 = type metadata accessor for UnprotectedNotificationContentState(0);
  v84 = *(_QWORD *)(v100 - 8);
  v6 = MEMORY[0x1E0C80A78](v100);
  v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v99 = (uint64_t)&v80 - v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v80 - v11;
  v13 = sub_1BC816F3C();
  v93 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ProtectedNotificationContentState(0);
  v91 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v80 - v20;
  v95 = a1;
  v22 = sub_1BC761BA4(a1);
  if (v22)
  {
    v23 = v22;
    v97 = v15;
    v98 = v8;
    v94 = *(void **)(v96 + 56);
    v24 = objc_msgSend(v22, sel_value);
    v25 = sub_1BC816E64();
    v80 = v23;
    v26 = v25;
    v28 = v27;

    sub_1BC761F98();
    v90 = (uint64_t *)v21;
    sub_1BC816C24();
    if (v3)
    {

      return sub_1BC6ECB60(v26, v28);
    }
    else
    {
      v88 = v16;
      v31 = sub_1BC6ECB60(v26, v28);
      v101 = v96;
      MEMORY[0x1E0C80A78](v31);
      *(&v80 - 2) = &v101;
      v32 = v95;
      *(&v80 - 1) = v94;
      v33 = MEMORY[0x1E0DEE9D8];
      v34 = sub_1BC75BF44(MEMORY[0x1E0DEE9D8], (void (*)(void **, id *))sub_1BC761FB8, (uint64_t)(&v80 - 4), v32);
      MEMORY[0x1E0C80A78](v34);
      v35 = v90;
      *(&v80 - 2) = v90;
      v37 = sub_1BC75C078((uint64_t (*)(char *))sub_1BC761FD0, (uint64_t)(&v80 - 4), v36);
      v38 = *(_QWORD *)(v37 + 16);
      v89 = v13;
      if (v38)
      {
        v101 = v33;
        sub_1BC6E8C58(0, v38, 0);
        v39 = v37 + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80));
        v40 = *(_QWORD *)(v91 + 72);
        v95 = v37;
        v96 = v40;
        v41 = v93;
        v42 = v97;
        do
        {
          sub_1BC6ECB08(v39, (uint64_t)v19, type metadata accessor for ProtectedNotificationContentState);
          (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v42, &v19[*(int *)(v88 + 20)], v13);
          sub_1BC6ED784((uint64_t)v19, type metadata accessor for ProtectedNotificationContentState);
          v33 = v101;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BC6E8C58(0, *(_QWORD *)(v33 + 16) + 1, 1);
            v33 = v101;
          }
          v44 = *(_QWORD *)(v33 + 16);
          v43 = *(_QWORD *)(v33 + 24);
          if (v44 >= v43 >> 1)
          {
            sub_1BC6E8C58(v43 > 1, v44 + 1, 1);
            v33 = v101;
          }
          *(_QWORD *)(v33 + 16) = v44 + 1;
          v41 = v93;
          v45 = v33
              + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))
              + *(_QWORD *)(v93 + 72) * v44;
          v42 = v97;
          v13 = v89;
          (*(void (**)(unint64_t, char *, uint64_t))(v93 + 32))(v45, v97, v89);
          v101 = v33;
          v39 += v96;
          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease();
        v46 = v90;
      }
      else
      {
        v46 = v35;
        swift_bridgeObjectRelease();
      }
      v87 = sub_1BC6EBC80(v33);
      swift_bridgeObjectRelease();
      v47 = v92;
      if (v92 >> 62)
        goto LABEL_35;
      v48 = *(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (i = 0; v48; i = 0)
      {
        LODWORD(v97) = 0;
        v50 = 0;
        v86 = v47 & 0xC000000000000001;
        v82 = v47 + 32;
        v83 = v47 & 0xFFFFFFFFFFFFFF8;
        v85 = v48;
        while (1)
        {
          if (v86)
          {
            v51 = (uint64_t *)MEMORY[0x1BCCF4FB0](v50, v47);
          }
          else
          {
            if (v50 >= *(_QWORD *)(v83 + 16))
              goto LABEL_34;
            v51 = (uint64_t *)*(id *)(v82 + 8 * v50);
          }
          v46 = v51;
          v52 = __OFADD__(v50, 1);
          v53 = v50 + 1;
          if (v52)
            break;
          v95 = v53;
          v54 = objc_msgSend(v51, sel_storageEntries);
          sub_1BC6ED7C0(0, &qword_1EF45B920);
          v55 = sub_1BC817C5C();

          v56 = (uint64_t)v94;
          swift_retain();
          v57 = sub_1BC7610DC(v55, v56, &qword_1EF45BA40, type metadata accessor for UnprotectedNotificationContentState, (void (*)(id *, uint64_t))sub_1BC75F724, (uint64_t)sub_1BC725D90);
          swift_bridgeObjectRelease();
          swift_release();
          v58 = v87;
          swift_bridgeObjectRetain();
          v59 = sub_1BC7613B8(v57, v58);
          v96 = v4;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v60 = *(_QWORD *)(v59 + 16);
          if (v60)
          {
            v61 = *(unsigned __int8 *)(v84 + 80);
            v91 = v59;
            v62 = v59 + ((v61 + 32) & ~v61);
            v63 = *(_QWORD *)(v84 + 72);
            do
            {
              sub_1BC6ECB08(v62, (uint64_t)v12, type metadata accessor for UnprotectedNotificationContentState);
              v64 = objc_msgSend(v46, sel_deviceContext);
              v65 = objc_msgSend(v64, sel_representsLocalDevice);

              v66 = v99;
              sub_1BC6ECB08((uint64_t)v12, v99, type metadata accessor for UnprotectedNotificationContentState);
              if (v65)
              {
                v67 = *(unsigned __int8 *)(v66 + *(int *)(v100 + 24));
                sub_1BC6ED784(v66, type metadata accessor for UnprotectedNotificationContentState);
                LODWORD(v97) = v97 | v67;
              }
              else
              {
                sub_1BC6ED784(v66, type metadata accessor for UnprotectedNotificationContentState);
              }
              v68 = (uint64_t)v98;
              sub_1BC6ECBA4((uint64_t)v12, (uint64_t)v98, type metadata accessor for UnprotectedNotificationContentState);
              if ((i & 1) != 0)
                i = 1;
              else
                i = *(_BYTE *)(v68 + *(int *)(v100 + 28));
              sub_1BC6ED784(v68, type metadata accessor for UnprotectedNotificationContentState);
              v62 += v63;
              --v60;
            }
            while (v60);
          }

          swift_bridgeObjectRelease();
          v47 = v92;
          v50 = v95;
          v4 = v96;
          v46 = v90;
          if (v95 == v85)
            goto LABEL_37;
        }
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        swift_bridgeObjectRetain();
        v48 = sub_1BC8184E4();
      }
      LODWORD(v97) = 0;
LABEL_37:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v70 = *v46;
      v69 = v46[1];
      v71 = v88;
      v72 = (char *)v46 + *(int *)(v88 + 20);
      v73 = (uint64_t)v46;
      v74 = (int *)type metadata accessor for NotificationContentState(0);
      v75 = v81;
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))((char *)v81 + v74[5], v72, v89);
      v76 = (uint64_t *)(v73 + *(int *)(v71 + 24));
      v77 = *v76;
      v78 = v76[1];
      *v75 = v70;
      v75[1] = v69;
      v79 = (_QWORD *)((char *)v75 + v74[6]);
      *v79 = v77;
      v79[1] = v78;
      *((_BYTE *)v75 + v74[7]) = v97 & 1;
      *((_BYTE *)v75 + v74[8]) = i & 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC6ED784(v73, type metadata accessor for ProtectedNotificationContentState);
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, int *))(*((_QWORD *)v74 - 1) + 56))(v75, 0, 1, v74);
    }
  }
  else
  {
    v30 = type metadata accessor for NotificationContentState(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v81, 1, 1, v30);
  }
}

uint64_t sub_1BC75D4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(int *)(type metadata accessor for ProtectedNotificationContentState(0) + 24);
  v5 = *(_QWORD *)(a1 + v4);
  v6 = *(_QWORD *)(a1 + v4 + 8);
  v7 = (_QWORD *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1])
    return 1;
  else
    return sub_1BC818694() & 1;
}

uint64_t sub_1BC75D510(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void);
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;

  v2 = type metadata accessor for NotificationContentState(0);
  v3 = *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64);
  v70 = *(_QWORD *)(v2 - 8);
  v71 = v3;
  MEMORY[0x1E0C80A78](v2);
  v68 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA64(0, &qword_1ED6B9DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v62 = (char *)&v54 - v6;
  sub_1BC761FEC();
  v8 = *(_QWORD *)(v7 - 8);
  v63 = v7;
  v64 = v8;
  MEMORY[0x1E0C80A78](v7);
  v60 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC76209C(0);
  v66 = v10;
  v69 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v61 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC762174(0, &qword_1EF45B940, v12, (void (*)(void))sub_1BC762248);
  v67 = v13;
  v72 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v65 = (char *)&v54 - v14;
  v57 = type metadata accessor for UnprotectedNotificationContentState(0);
  MEMORY[0x1E0C80A78](v57);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ProtectedNotificationContentState(0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t *)((char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = a1[1];
  v58 = (void *)*a1;
  v56 = v2;
  v22 = (char *)a1 + *(int *)(v2 + 20);
  v23 = (char *)v20 + *(int *)(v18 + 20);
  v24 = sub_1BC816F3C();
  v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  v25(v23, v22, v24);
  v26 = (_QWORD *)((char *)a1 + *(int *)(v2 + 24));
  v27 = *v26;
  v28 = v26[1];
  *v20 = v58;
  v20[1] = v21;
  v29 = (_QWORD *)((char *)v20 + *(int *)(v17 + 24));
  *v29 = v27;
  v29[1] = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = v59;
  v31 = (void *)sub_1BC75F110((uint64_t)v20);
  sub_1BC6ED784((uint64_t)v20, type metadata accessor for ProtectedNotificationContentState);
  v33 = (void *)*a1;
  v32 = a1[1];
  v34 = v57;
  v25(&v16[*(int *)(v57 + 20)], v22, v24);
  v35 = *(int *)(v56 + 28);
  v36 = *(int *)(v56 + 32);
  v55 = a1;
  LOBYTE(v35) = *((_BYTE *)a1 + v35);
  LOBYTE(v36) = *((_BYTE *)a1 + v36);
  *(_QWORD *)v16 = v33;
  *((_QWORD *)v16 + 1) = v32;
  v16[*(int *)(v34 + 24)] = v35;
  v16[*(int *)(v34 + 28)] = v36;
  swift_bridgeObjectRetain();
  v37 = sub_1BC75EDE8((uint64_t)v16);
  sub_1BC6ED784((uint64_t)v16, type metadata accessor for UnprotectedNotificationContentState);
  v57 = v37;
  v58 = v31;
  v73 = v37;
  v74 = v31;
  v56 = MEMORY[0x1E0DEE9C0] + 8;
  v38 = MEMORY[0x1E0C95D78];
  sub_1BC762F40(0, &qword_1ED6B82B0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC762EF0(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v38, MEMORY[0x1E0C95D90]);
  swift_retain();
  swift_retain();
  v39 = v60;
  sub_1BC8175CC();
  v74 = *(id *)(v30 + 48);
  v40 = v74;
  v41 = sub_1BC817F80();
  v42 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v62, 1, 1, v41);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  sub_1BC762154();
  sub_1BC7619BC();
  v43 = v40;
  v44 = v61;
  v45 = v63;
  sub_1BC8178FC();
  sub_1BC715030(v42, &qword_1ED6B9DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  (*(void (**)(char *, uint64_t))(v64 + 8))(v39, v45);
  v46 = v68;
  sub_1BC6ECB08((uint64_t)v55, v68, type metadata accessor for NotificationContentState);
  v47 = (*(unsigned __int8 *)(v70 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = v30;
  sub_1BC6ECBA4(v46, v48 + v47, type metadata accessor for NotificationContentState);
  swift_retain();
  sub_1BC817710();
  sub_1BC762248();
  v50 = v65;
  v49 = v66;
  sub_1BC8178E4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v49);
  sub_1BC762288();
  v51 = v67;
  v52 = sub_1BC817854();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v50, v51);
  return v52;
}

uint64_t sub_1BC75DA80(uint64_t a1)
{
  return sub_1BC75DBE8(a1, type metadata accessor for ProtectedNotificationContentState, sub_1BC75F110, (uint64_t)&unk_1E751B2D8, (uint64_t)sub_1BC762498);
}

uint64_t sub_1BC75DAA4@<X0>(uint64_t *a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;

  v5 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  sub_1BC817B48();
  type metadata accessor for ProtectedNotificationContentState(0);
  sub_1BC816F3C();
  sub_1BC6F0A44(&qword_1ED6B7C38, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  sub_1BC818670();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  swift_bridgeObjectRetain();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  v3 = sub_1BC75E6EC(v5, v6);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1BC75DBC4(uint64_t a1)
{
  return sub_1BC75DBE8(a1, type metadata accessor for UnprotectedNotificationContentState, sub_1BC75EDE8, (uint64_t)&unk_1E751B300, (uint64_t)sub_1BC7625DC);
}

uint64_t sub_1BC75DBE8(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  id v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;

  v45 = a4;
  v46 = a5;
  v41 = a2;
  v7 = v5;
  v36[0] = a1;
  v9 = a2(0);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v10;
  MEMORY[0x1E0C80A78](v9);
  v37 = (uint64_t)v36 - v11;
  sub_1BC6ECA64(0, &qword_1ED6B9DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v36 - v13;
  sub_1BC7622E8();
  v38 = v15;
  v44 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC762174(0, &qword_1EF45B960, v18, (void (*)(void))sub_1BC7623C4);
  v20 = *(_QWORD *)(v19 - 8);
  v42 = v19;
  v43 = v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v36 - v21;
  v23 = a3(a1);
  v47 = *(id *)(v7 + 48);
  v24 = v47;
  v48 = v23;
  v25 = sub_1BC817F80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v14, 1, 1, v25);
  v36[1] = MEMORY[0x1E0DEE9C0] + 8;
  v26 = MEMORY[0x1E0C95D78];
  sub_1BC762F40(0, &qword_1ED6B82B0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  sub_1BC762EF0(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v26, MEMORY[0x1E0C95D90]);
  sub_1BC7619BC();
  v27 = v24;
  sub_1BC8178FC();
  sub_1BC715030((uint64_t)v14, &qword_1ED6B9DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  swift_release();
  v28 = v37;
  v29 = v41;
  sub_1BC6ECB08(v36[0], v37, v41);
  v30 = (*(unsigned __int8 *)(v39 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v7;
  sub_1BC6ECBA4(v28, v31 + v30, v29);
  swift_retain();
  sub_1BC817710();
  sub_1BC7623C4();
  v32 = v38;
  sub_1BC8178E4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v32);
  sub_1BC7624E8();
  v33 = v42;
  v34 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v33);
  return v34;
}

uint64_t sub_1BC75DF30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;

  v3 = v2;
  sub_1BC6ECA64(0, &qword_1ED6B9DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - v7;
  sub_1BC761FEC();
  v40 = v9;
  v42 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC76209C(0);
  v43 = v12;
  v45 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v38 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC762174(0, &qword_1EF45B940, v14, (void (*)(void))sub_1BC762248);
  v44 = v15;
  v46 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v41 = (char *)&v33 - v16;
  v34 = a2;
  v35 = a1;
  v48 = (id)sub_1BC8180A0();
  v39 = MEMORY[0x1E0DEE9C0] + 8;
  v17 = MEMORY[0x1E0C95D78];
  sub_1BC762F40(0, &qword_1ED6B82B0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC762EF0(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v17, MEMORY[0x1E0C95D90]);
  v18 = (void *)sub_1BC817854();
  swift_release();
  v48 = (id)sub_1BC8180A0();
  v19 = sub_1BC817854();
  v36 = v19;
  swift_release();
  v37 = v18;
  v47 = v19;
  v48 = v18;
  swift_retain();
  swift_retain();
  sub_1BC8175CC();
  v48 = *(id *)(v2 + 48);
  v20 = v48;
  v21 = sub_1BC817F80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 1, 1, v21);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  sub_1BC762154();
  sub_1BC7619BC();
  v22 = v20;
  v23 = v38;
  v24 = v40;
  sub_1BC8178FC();
  sub_1BC715030((uint64_t)v8, &qword_1ED6B9DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v24);
  v25 = (_QWORD *)swift_allocObject();
  v27 = v34;
  v26 = v35;
  v25[2] = v3;
  v25[3] = v26;
  v25[4] = v27;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC817710();
  sub_1BC762248();
  v28 = v41;
  v29 = v43;
  sub_1BC8178E4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v23, v29);
  sub_1BC762288();
  v30 = v44;
  v31 = sub_1BC817854();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v30);
  return v31;
}

uint64_t sub_1BC75E334@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BC817B48();
  v2 = sub_1BC75E6EC(0x676E69766F6D6552, 0xE900000000000020);
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BC75E3B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;

  return sub_1BC75E3D0(a1, a2, a3, a4, *(void **)(v4 + 48), 0xD000000000000048, 0x80000001BC828390);
}

uint64_t sub_1BC75E3D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;

  v36 = a1;
  v33 = a6;
  v34 = a2;
  v35 = a3;
  sub_1BC6ECA64(0, &qword_1ED6B9DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  sub_1BC762A18(0);
  v38 = v13;
  v41 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC762174(0, &qword_1ED6B8170, v16, (void (*)(void))sub_1BC762AD8);
  v18 = *(_QWORD *)(v17 - 8);
  v39 = v17;
  v40 = v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v32 - v19;
  v21 = sub_1BC817EF0();
  v42 = a5;
  v43 = v21;
  v22 = sub_1BC817F80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v12, 1, 1, v22);
  sub_1BC762A34();
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  sub_1BC762AB8();
  sub_1BC7619BC();
  sub_1BC8178FC();
  sub_1BC715030((uint64_t)v12, &qword_1ED6B9DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);
  swift_release();
  v23 = (_QWORD *)swift_allocObject();
  v24 = v35;
  v23[2] = v34;
  v23[3] = v24;
  v23[4] = v33;
  v23[5] = a7;
  v23[6] = v36;
  v23[7] = a5;
  v23[8] = v37;
  v23[9] = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v25 = a5;
  v26 = a4;
  sub_1BC817710();
  v27 = MEMORY[0x1E0C95D78];
  sub_1BC762F40(0, &qword_1ED6B82B0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC762AD8();
  sub_1BC762EF0(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v27, MEMORY[0x1E0C95D90]);
  v28 = v38;
  sub_1BC8178E4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v28);
  sub_1BC762B84();
  v29 = v39;
  v30 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v29);
  return v30;
}

uint64_t sub_1BC75E6EC(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t *v48;
  id v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  id v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  id v77;
  unint64_t v78;

  v70 = a2;
  v73 = a1;
  v62 = *v2;
  v3 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6B82E0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96098]);
  v67 = v4;
  v65 = *(char **)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v63 = (char *)&v59 - v5;
  v69 = (char *)v3;
  sub_1BC762F40(0, (unint64_t *)&unk_1ED6B87C0, v3, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v68 = v6;
  v66 = *(uint64_t **)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v64 = (char *)&v59 - v7;
  sub_1BC6ECA64(0, &qword_1ED6B9DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v74 = (char *)&v59 - v9;
  sub_1BC76284C(0, v10);
  v71 = *(_QWORD *)(v11 - 8);
  v72 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7628A4(0, v14);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC762948(0, v20);
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1BC817590();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v75 = (char *)&v59 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*((_BYTE *)v2 + 72) == 1)
  {
    v66 = v2;
    v67 = v27;
    v64 = v13;
    v65 = v19;
    v60 = v17;
    v68 = v16;
    v69 = v25;
    v61 = v23;
    v59 = v22;
    sub_1BC817560();
    v29 = v70;
    swift_bridgeObjectRetain_n();
    v30 = sub_1BC81756C();
    v31 = sub_1BC817E9C();
    v32 = v26;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = swift_slowAlloc();
      v34 = (void *)swift_slowAlloc();
      v77 = v34;
      *(_DWORD *)v33 = 136315394;
      v35 = sub_1BC818814();
      v76 = sub_1BC6E14D8(v35, v36, (uint64_t *)&v77);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      swift_bridgeObjectRetain();
      v76 = sub_1BC6E14D8(v73, v29, (uint64_t *)&v77);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC6DD000, v30, v31, "%s Requesting cloud sync for reason: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v34, -1, -1);
      MEMORY[0x1BCCF5BA4](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v67 + 8))(v75, v32);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v75, v26);
    }
    v38 = v68;
    v37 = v69;
    v39 = (uint64_t)v74;
    v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6508]), sel_initWithPush_pull_, 1, 0);
    v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6430]), sel_initWithContextSyncRequest_, v46);

    v77 = 0;
    v78 = 0xE000000000000000;
    sub_1BC8182C8();
    swift_bridgeObjectRelease();
    v77 = (id)0xD000000000000024;
    v78 = 0x80000001BC8284C0;
    sub_1BC817B48();
    v48 = v66;
    v49 = sub_1BC75C498();
    v50 = v64;
    sub_1BC817FE0();

    swift_bridgeObjectRelease();
    v77 = (id)v48[6];
    v51 = v77;
    v52 = sub_1BC817F80();
    v53 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v39, 1, 1, v52);
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
    v54 = v51;
    swift_getOpaqueTypeConformance2();
    sub_1BC7619BC();
    v55 = v65;
    v56 = v72;
    sub_1BC8178FC();
    sub_1BC715030(v39, &qword_1ED6B9DC8, v53);

    (*(void (**)(char *, uint64_t))(v71 + 8))(v50, v56);
    sub_1BC6F0A44(&qword_1EF45B9F0, 255, (uint64_t (*)(uint64_t))sub_1BC7628A4, MEMORY[0x1E0C95CB8]);
    sub_1BC81786C();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v55, v38);
    sub_1BC6F0A44(&qword_1EF45B9F8, 255, (uint64_t (*)(uint64_t))sub_1BC762948, MEMORY[0x1E0C95950]);
    v57 = v59;
    v45 = sub_1BC817854();

    (*(void (**)(char *, uint64_t))(v61 + 8))(v37, v57);
  }
  else
  {
    v40 = v63;
    v41 = (uint64_t)v69;
    sub_1BC8177DC();
    sub_1BC6E1878();
    v42 = v64;
    v43 = v67;
    sub_1BC8177B8();
    (*((void (**)(char *, uint64_t))v65 + 1))(v40, v43);
    sub_1BC7629D0((unint64_t *)&qword_1ED6B87B8, (unint64_t *)&unk_1ED6B87C0, v41);
    v44 = v68;
    v45 = sub_1BC817854();
    ((void (*)(char *, uint64_t))v66[1])(v42, v44);
  }
  return v45;
}

uint64_t sub_1BC75EDE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t (*v22)(void);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  v29 = type metadata accessor for UnprotectedNotificationContentState(0);
  v31 = *(_QWORD *)(v29 - 8);
  v4 = *(_QWORD *)(v31 + 64);
  MEMORY[0x1E0C80A78](v29);
  sub_1BC6ECA64(0, &qword_1EF45BA00, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v28 - v9;
  sub_1BC762F40(0, &qword_1EF45BA08, MEMORY[0x1E0CB0338], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v12 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  v33 = v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v28 - v13;
  sub_1BC762FA8();
  v16 = *(_QWORD *)(v15 - 8);
  v34 = v15;
  v35 = v16;
  MEMORY[0x1E0C80A78](v15);
  v30 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void **)(v2 + 24);
  sub_1BC6ECB08(a1, (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for UnprotectedNotificationContentState);
  sub_1BC8177DC();
  sub_1BC8177C4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1BC6ECB08(a1, (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for UnprotectedNotificationContentState);
  v19 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v18;
  sub_1BC6ECBA4((uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, type metadata accessor for UnprotectedNotificationContentState);
  v21 = v18;
  sub_1BC817710();
  v22 = MEMORY[0x1E0C95D78];
  sub_1BC762F40(0, &qword_1ED6B82B0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC7629D0(&qword_1EF45BA18, &qword_1EF45BA08, MEMORY[0x1E0CB0338]);
  sub_1BC762EF0(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v22, MEMORY[0x1E0C95D90]);
  v23 = v30;
  v24 = v32;
  sub_1BC8178E4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v24);
  sub_1BC6F0A44(&qword_1EF45BA20, 255, (uint64_t (*)(uint64_t))sub_1BC762FA8, MEMORY[0x1E0C95B78]);
  v25 = v34;
  v26 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v25);
  return v26;
}

uint64_t sub_1BC75F110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t (*v22)(void);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  v29 = type metadata accessor for ProtectedNotificationContentState(0);
  v31 = *(_QWORD *)(v29 - 8);
  v4 = *(_QWORD *)(v31 + 64);
  MEMORY[0x1E0C80A78](v29);
  sub_1BC6ECA64(0, &qword_1EF45BA30, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v28 - v9;
  sub_1BC762F40(0, &qword_1EF45BA08, MEMORY[0x1E0CB0338], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v12 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  v33 = v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v28 - v13;
  sub_1BC762FA8();
  v16 = *(_QWORD *)(v15 - 8);
  v34 = v15;
  v35 = v16;
  MEMORY[0x1E0C80A78](v15);
  v30 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void **)(v2 + 16);
  sub_1BC6ECB08(a1, (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ProtectedNotificationContentState);
  sub_1BC8177DC();
  sub_1BC8177C4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1BC6ECB08(a1, (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ProtectedNotificationContentState);
  v19 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v18;
  sub_1BC6ECBA4((uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, type metadata accessor for ProtectedNotificationContentState);
  v21 = v18;
  sub_1BC817710();
  v22 = MEMORY[0x1E0C95D78];
  sub_1BC762F40(0, &qword_1ED6B82B0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC7629D0(&qword_1EF45BA18, &qword_1EF45BA08, MEMORY[0x1E0CB0338]);
  sub_1BC762EF0(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v22, MEMORY[0x1E0C95D90]);
  v23 = v30;
  v24 = v32;
  sub_1BC8178E4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v24);
  sub_1BC6F0A44(&qword_1EF45BA20, 255, (uint64_t (*)(uint64_t))sub_1BC762FA8, MEMORY[0x1E0C95B78]);
  v25 = v34;
  v26 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v25);
  return v26;
}

uint64_t sub_1BC75F438@<X0>(void (*a1)(_QWORD)@<X2>, void (*a2)(void)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v7;

  a1(0);
  a2();
  result = sub_1BC816C48();
  if (!v3)
  {
    *a3 = result;
    a3[1] = v7;
  }
  return result;
}

uint64_t sub_1BC75F4A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;

  v3 = *a1;
  v6 = a1[1];
  sub_1BC6ECBE8(*a1, v6);
  v4 = sub_1BC818088();
  result = sub_1BC6ECB60(v3, v6);
  *a2 = v4;
  return result;
}

id *HealthAppNotificationContentStateManager.deinit()
{
  id *v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t HealthAppNotificationContentStateManager.__deallocating_deinit()
{
  HealthAppNotificationContentStateManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC75F58C(uint64_t a1)
{
  return sub_1BC75DA80(a1);
}

uint64_t sub_1BC75F5AC(uint64_t a1)
{
  return sub_1BC75DBC4(a1);
}

uint64_t sub_1BC75F5CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;

  return sub_1BC75E3D0(a1, a2, a3, a4, *(void **)(*(_QWORD *)v4 + 48), 0xD000000000000048, 0x80000001BC828390);
}

uint64_t sub_1BC75F608()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 72);
}

uint64_t sub_1BC75F644(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 72) = a1;
  return result;
}

uint64_t (*sub_1BC75F684())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC75F6C4()
{
  return sub_1BC75C880();
}

uint64_t sub_1BC75F6E4(_QWORD *a1)
{
  return sub_1BC75D510(a1);
}

uint64_t sub_1BC75F704(uint64_t a1, uint64_t a2)
{
  return sub_1BC75DF30(a1, a2);
}

uint64_t sub_1BC75F724@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC75F79C(a1, type metadata accessor for UnprotectedNotificationContentState, (void (*)(void))sub_1BC7632E0, 0xD000000000000023, 0x80000001BC828510, a2);
}

uint64_t sub_1BC75F760@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC75F79C(a1, type metadata accessor for ProtectedNotificationContentState, (void (*)(void))sub_1BC761F98, 0xD000000000000021, 0x80000001BC828540, a2);
}

uint64_t sub_1BC75F79C@<X0>(void *a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, void (*a3)(void)@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t a6@<X8>)
{
  void *v6;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v28;

  v11 = a2(0);
  v12 = objc_msgSend(a1, sel_value);
  v13 = sub_1BC816E64();
  v15 = v14;

  a3();
  sub_1BC816C24();
  if (v6)
  {
    sub_1BC6ECB60(v13, v15);
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v16 = sub_1BC817590();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED6BB5D0);
    v17 = v6;
    v18 = v6;
    v19 = sub_1BC81756C();
    v20 = sub_1BC817E84();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v28 = v26;
      *(_DWORD *)v21 = 136315906;
      sub_1BC6E14D8(0xD000000000000028, 0x80000001BC81CFF0, &v28);
      sub_1BC818148();
      *(_WORD *)(v21 + 12) = 2080;
      sub_1BC6E14D8(0xD000000000000017, 0x80000001BC8284F0, &v28);
      sub_1BC818148();
      *(_WORD *)(v21 + 22) = 2080;
      sub_1BC6E14D8(a4, a5, &v28);
      sub_1BC818148();
      *(_WORD *)(v21 + 32) = 2082;
      v22 = v6;
      sub_1BC6E1878();
      v23 = sub_1BC817B00();
      sub_1BC6E14D8(v23, v24, &v28);
      sub_1BC818148();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC6DD000, v19, v20, "%s %s %s Error: %{public}s", (uint8_t *)v21, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v26, -1, -1);
      MEMORY[0x1BCCF5BA4](v21, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a6, 1, 1, v11);
  }
  else
  {
    sub_1BC6ECB60(v13, v15);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a6, 0, 1, v11);
  }
}

uint64_t sub_1BC75FB18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(char *, uint64_t);
  unint64_t v56;
  os_log_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  char *v61;
  _QWORD *v62;
  uint64_t (*v63)(void);
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  id v73;
  id v74;
  char *v75;
  uint64_t v76;
  os_log_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  Class isa;
  uint64_t v95;
  os_log_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103[2];

  v88 = a8;
  v100 = a7;
  v101 = a5;
  v83 = a6;
  v98 = a2;
  v99 = a4;
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC6ECA64(0, &qword_1ED6B9DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v83 - v13;
  sub_1BC762BE4(0);
  v90 = *(_QWORD *)(v15 - 8);
  v91 = v15;
  MEMORY[0x1E0C80A78](v15);
  v89 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC762CA4(0);
  v97 = v17;
  v95 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v93 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC762174(0, &qword_1ED6B8190, v19, (void (*)(void))sub_1BC762CE0);
  v96 = v20;
  isa = v20[-1].isa;
  MEMORY[0x1E0C80A78](v20);
  v92 = (char *)&v83 - v21;
  v22 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6B82E0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96098]);
  v86 = v23;
  v84 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v83 - v24;
  sub_1BC762F40(0, (unint64_t *)&unk_1ED6B87C0, v22, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v87 = v26;
  v85 = *((_QWORD *)v26 - 1);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v83 - v27;
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6B9BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v11);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v83 - v30;
  v32 = sub_1BC816EF4();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = MEMORY[0x1E0C80A78](v32);
  v36 = (char *)&v83 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v83 - v37;
  sub_1BC6F95C0(a1, (uint64_t)v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
  {
    sub_1BC715030((uint64_t)v31, (unint64_t *)&qword_1ED6B9BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v87 = a9;
    v39 = sub_1BC817590();
    __swift_project_value_buffer(v39, (uint64_t)qword_1ED6BB5D0);
    v40 = a3;
    swift_bridgeObjectRetain_n();
    v41 = sub_1BC81756C();
    v42 = sub_1BC817E9C();
    v43 = os_log_type_enabled(v41, v42);
    v44 = v98;
    if (v43)
    {
      v45 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v103[0] = v46;
      *(_DWORD *)v45 = 136315394;
      v102 = sub_1BC6E14D8(0xD000000000000028, 0x80000001BC81CFF0, v103);
      sub_1BC818148();
      *(_WORD *)(v45 + 12) = 2080;
      swift_bridgeObjectRetain();
      v102 = sub_1BC6E14D8(v44, a3, v103);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC6DD000, v41, v42, "%s Proceeding with migration for %s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v46, -1, -1);
      MEMORY[0x1BCCF5BA4](v45, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v102 = v100;
    v103[0] = v83;
    v59 = sub_1BC817F80();
    v60 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v14, 1, 1, v59);
    sub_1BC762C00();
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
    sub_1BC762C84();
    sub_1BC7619BC();
    v61 = v89;
    sub_1BC8178FC();
    sub_1BC715030((uint64_t)v14, &qword_1ED6B9DC8, v60);
    v62 = (_QWORD *)swift_allocObject();
    v62[2] = v44;
    v62[3] = v40;
    v62[4] = v88;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BC817710();
    v63 = MEMORY[0x1E0C95D78];
    v88 = MEMORY[0x1E0DEE9C0] + 8;
    sub_1BC762F40(0, &qword_1ED6B82B0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC762CC0();
    sub_1BC762EF0(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v63, MEMORY[0x1E0C95D90]);
    v64 = v93;
    v65 = v44;
    v66 = v40;
    v67 = v91;
    sub_1BC8178E4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v61, v67);
    v68 = (_QWORD *)swift_allocObject();
    v68[2] = v65;
    v68[3] = v66;
    v69 = v87;
    v70 = v99;
    v71 = (void *)v100;
    v68[4] = v87;
    v68[5] = v70;
    v68[6] = v101;
    v68[7] = v71;
    v72 = swift_allocObject();
    *(_QWORD *)(v72 + 16) = sub_1BC762D9C;
    *(_QWORD *)(v72 + 24) = v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v73 = v69;
    v74 = v71;
    sub_1BC817710();
    sub_1BC762CE0();
    v75 = v92;
    v76 = v97;
    sub_1BC8178E4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v64, v76);
    sub_1BC762DB4();
    v77 = v96;
    v78 = sub_1BC817854();
    (*((void (**)(char *, os_log_t))isa + 1))(v75, v77);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v38, v31, v32);
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v47 = sub_1BC817590();
    __swift_project_value_buffer(v47, (uint64_t)qword_1ED6BB5D0);
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v36, v38, v32);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v48 = sub_1BC81756C();
    v49 = sub_1BC817E6C();
    v50 = v49;
    if (os_log_type_enabled(v48, v49))
    {
      v51 = swift_slowAlloc();
      LODWORD(v97) = v50;
      v52 = v51;
      v100 = swift_slowAlloc();
      v103[0] = v100;
      *(_DWORD *)v52 = 136315906;
      v96 = v48;
      v102 = sub_1BC6E14D8(0xD000000000000028, 0x80000001BC81CFF0, v103);
      sub_1BC818148();
      *(_WORD *)(v52 + 12) = 2080;
      swift_bridgeObjectRetain();
      v102 = sub_1BC6E14D8(v98, a3, v103);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v52 + 22) = 2080;
      sub_1BC6F0A44(&qword_1ED6B7C30, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v53 = sub_1BC818670();
      v102 = sub_1BC6E14D8(v53, v54, v103);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      v55 = *(void (**)(char *, uint64_t))(v33 + 8);
      v55(v36, v32);
      *(_WORD *)(v52 + 32) = 2080;
      v56 = v101;
      swift_bridgeObjectRetain();
      v102 = sub_1BC6E14D8(v99, v56, v103);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      v57 = v96;
      _os_log_impl(&dword_1BC6DD000, v96, (os_log_type_t)v97, "%s Migration already completed for %s on %s for key %s", (uint8_t *)v52, 0x2Au);
      v58 = v100;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v58, -1, -1);
      MEMORY[0x1BCCF5BA4](v52, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      v55 = *(void (**)(char *, uint64_t))(v33 + 8);
      v55(v36, v32);

      swift_bridgeObjectRelease_n();
    }
    v79 = MEMORY[0x1E0DEE9C0] + 8;
    sub_1BC8177DC();
    sub_1BC6E1878();
    v80 = v86;
    sub_1BC8177B8();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v25, v80);
    sub_1BC7629D0((unint64_t *)&qword_1ED6B87B8, (unint64_t *)&unk_1ED6B87C0, v79);
    v81 = v87;
    v78 = sub_1BC817854();
    (*(void (**)(char *, void *))(v85 + 8))(v28, v81);
    v55(v38, v32);
  }
  return v78;
}

